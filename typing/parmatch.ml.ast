[
  structure_item (typing/parmatch.ml[18,1139+0]..[18,1139+9])
    Pstr_open Fresh
    module_expr (typing/parmatch.ml[18,1139+5]..[18,1139+9])
      Pmod_ident "Misc" (typing/parmatch.ml[18,1139+5]..[18,1139+9])
  structure_item (typing/parmatch.ml[19,1149+0]..[19,1149+13])
    Pstr_open Fresh
    module_expr (typing/parmatch.ml[19,1149+5]..[19,1149+13])
      Pmod_ident "Asttypes" (typing/parmatch.ml[19,1149+5]..[19,1149+13])
  structure_item (typing/parmatch.ml[20,1163+0]..[20,1163+10])
    Pstr_open Fresh
    module_expr (typing/parmatch.ml[20,1163+5]..[20,1163+10])
      Pmod_ident "Types" (typing/parmatch.ml[20,1163+5]..[20,1163+10])
  structure_item (typing/parmatch.ml[21,1174+0]..[21,1174+14])
    Pstr_open Fresh
    module_expr (typing/parmatch.ml[21,1174+5]..[21,1174+14])
      Pmod_ident "Typedtree" (typing/parmatch.ml[21,1174+5]..[21,1174+14])
  structure_item (typing/parmatch.ml[28,1312+0]..[32,1460+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[28,1312+4]..[28,1312+12])
          Ppat_var "make_pat" (typing/parmatch.ml[28,1312+4]..[28,1312+12])
        expression (typing/parmatch.ml[28,1312+13]..[32,1460+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[28,1312+13]..[28,1312+17])
            Ppat_var "desc" (typing/parmatch.ml[28,1312+13]..[28,1312+17])
          expression (typing/parmatch.ml[28,1312+18]..[32,1460+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[28,1312+18]..[28,1312+20])
              Ppat_var "ty" (typing/parmatch.ml[28,1312+18]..[28,1312+20])
            expression (typing/parmatch.ml[28,1312+21]..[32,1460+3]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[28,1312+21]..[28,1312+25])
                Ppat_var "tenv" (typing/parmatch.ml[28,1312+21]..[28,1312+25])
              expression (typing/parmatch.ml[29,1340+2]..[32,1460+3])
                Pexp_record
                [
                  "pat_desc" (typing/parmatch.ml[29,1340+3]..[29,1340+11])
                    expression (typing/parmatch.ml[29,1340+14]..[29,1340+18])
                      Pexp_ident "desc" (typing/parmatch.ml[29,1340+14]..[29,1340+18])
                  "pat_loc" (typing/parmatch.ml[29,1340+20]..[29,1340+27])
                    expression (typing/parmatch.ml[29,1340+30]..[29,1340+43])
                      Pexp_ident "Location.none" (typing/parmatch.ml[29,1340+30]..[29,1340+43])
                  "pat_extra" (typing/parmatch.ml[29,1340+45]..[29,1340+54])
                    expression (typing/parmatch.ml[29,1340+57]..[29,1340+59])
                      Pexp_construct "[]" (typing/parmatch.ml[29,1340+57]..[29,1340+59])
                      None
                  "pat_type" (typing/parmatch.ml[30,1401+3]..[30,1401+11])
                    expression (typing/parmatch.ml[30,1401+14]..[30,1401+16])
                      Pexp_ident "ty" (typing/parmatch.ml[30,1401+14]..[30,1401+16])
                  "pat_env" (typing/parmatch.ml[30,1401+19]..[30,1401+26])
                    expression (typing/parmatch.ml[30,1401+29]..[30,1401+33])
                      Pexp_ident "tenv" (typing/parmatch.ml[30,1401+29]..[30,1401+33])
                  "pat_attributes" (typing/parmatch.ml[31,1436+3]..[31,1436+17])
                    expression (typing/parmatch.ml[31,1436+20]..[31,1436+22])
                      Pexp_construct "[]" (typing/parmatch.ml[31,1436+20]..[31,1436+22])
                      None
                ]
                None
    ]
  structure_item (typing/parmatch.ml[34,1465+0]..[34,1465+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[34,1465+4]..[34,1465+9])
          Ppat_var "omega" (typing/parmatch.ml[34,1465+4]..[34,1465+9])
        expression (typing/parmatch.ml[34,1465+12]..[34,1465+26])
          Pexp_ident "Patterns.omega" (typing/parmatch.ml[34,1465+12]..[34,1465+26])
    ]
  structure_item (typing/parmatch.ml[35,1492+0]..[35,1492+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[35,1492+4]..[35,1492+10])
          Ppat_var "omegas" (typing/parmatch.ml[35,1492+4]..[35,1492+10])
        expression (typing/parmatch.ml[35,1492+13]..[35,1492+28])
          Pexp_ident "Patterns.omegas" (typing/parmatch.ml[35,1492+13]..[35,1492+28])
    ]
  structure_item (typing/parmatch.ml[36,1521+0]..[36,1521+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[36,1521+4]..[36,1521+14])
          Ppat_var "omega_list" (typing/parmatch.ml[36,1521+4]..[36,1521+14])
        expression (typing/parmatch.ml[36,1521+17]..[36,1521+36])
          Pexp_ident "Patterns.omega_list" (typing/parmatch.ml[36,1521+17]..[36,1521+36])
    ]
  structure_item (typing/parmatch.ml[38,1559+0]..[41,1639+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[38,1559+4]..[38,1559+13])
          Ppat_var "extra_pat" (typing/parmatch.ml[38,1559+4]..[38,1559+13])
        expression (typing/parmatch.ml[39,1575+2]..[41,1639+24])
          Pexp_apply
          expression (typing/parmatch.ml[39,1575+2]..[39,1575+10])
            Pexp_ident "make_pat" (typing/parmatch.ml[39,1575+2]..[39,1575+10])
          [
            <arg>
            Nolabel
              expression (typing/parmatch.ml[40,1586+4]..[40,1586+52])
                Pexp_construct "Tpat_var" (typing/parmatch.ml[40,1586+5]..[40,1586+13])
                Some
                  expression (typing/parmatch.ml[40,1586+14]..[40,1586+51])
                    Pexp_tuple
                    [
                      expression (typing/parmatch.ml[40,1586+15]..[40,1586+37])
                        Pexp_apply
                        expression (typing/parmatch.ml[40,1586+15]..[40,1586+33])
                          Pexp_ident "Ident.create_local" (typing/parmatch.ml[40,1586+15]..[40,1586+33])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[40,1586+34]..[40,1586+37])
                              Pexp_constant PConst_string("+",(typing/parmatch.ml[40,1586+35]..[40,1586+36]),None)
                        ]
                      expression (typing/parmatch.ml[40,1586+39]..[40,1586+50])
                        Pexp_apply
                        expression (typing/parmatch.ml[40,1586+39]..[40,1586+46])
                          Pexp_ident "mknoloc" (typing/parmatch.ml[40,1586+39]..[40,1586+46])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[40,1586+47]..[40,1586+50])
                              Pexp_constant PConst_string("+",(typing/parmatch.ml[40,1586+48]..[40,1586+49]),None)
                        ]
                    ]
            <arg>
            Nolabel
              expression (typing/parmatch.ml[41,1639+4]..[41,1639+14])
                Pexp_ident "Ctype.none" (typing/parmatch.ml[41,1639+4]..[41,1639+14])
            <arg>
            Nolabel
              expression (typing/parmatch.ml[41,1639+15]..[41,1639+24])
                Pexp_ident "Env.empty" (typing/parmatch.ml[41,1639+15]..[41,1639+24])
          ]
    ]
  structure_item (typing/parmatch.ml[119,4860+0]..[165,6189+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[119,4860+4]..[119,4860+16])
          Ppat_var "all_coherent" (typing/parmatch.ml[119,4860+4]..[119,4860+16])
        expression (typing/parmatch.ml[119,4860+17]..[165,6189+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[119,4860+17]..[119,4860+23])
            Ppat_var "column" (typing/parmatch.ml[119,4860+17]..[119,4860+23])
          expression (typing/parmatch.ml[120,4886+2]..[165,6189+50])
            Pexp_open Fresh
            module_expr (typing/parmatch.ml[120,4886+11]..[120,4886+24])
              Pmod_ident "Patterns.Head" (typing/parmatch.ml[120,4886+11]..[120,4886+24])
            expression (typing/parmatch.ml[121,4914+2]..[165,6189+50])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/parmatch.ml[121,4914+6]..[121,4914+20])
                    Ppat_var "coherent_heads" (typing/parmatch.ml[121,4914+6]..[121,4914+20])
                  expression (typing/parmatch.ml[121,4914+21]..[152,5935+19]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/parmatch.ml[121,4914+21]..[121,4914+24])
                      Ppat_var "hp1" (typing/parmatch.ml[121,4914+21]..[121,4914+24])
                    expression (typing/parmatch.ml[121,4914+25]..[152,5935+19]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/parmatch.ml[121,4914+25]..[121,4914+28])
                        Ppat_var "hp2" (typing/parmatch.ml[121,4914+25]..[121,4914+28])
                      expression (typing/parmatch.ml[122,4945+4]..[152,5935+19])
                        Pexp_match
                        expression (typing/parmatch.ml[122,4945+10]..[122,4945+36])
                          Pexp_tuple
                          [
                            expression (typing/parmatch.ml[122,4945+10]..[122,4945+22])
                              Pexp_field
                              expression (typing/parmatch.ml[122,4945+10]..[122,4945+13])
                                Pexp_ident "hp1" (typing/parmatch.ml[122,4945+10]..[122,4945+13])
                              "pat_desc" (typing/parmatch.ml[122,4945+14]..[122,4945+22])
                            expression (typing/parmatch.ml[122,4945+24]..[122,4945+36])
                              Pexp_field
                              expression (typing/parmatch.ml[122,4945+24]..[122,4945+27])
                                Pexp_ident "hp2" (typing/parmatch.ml[122,4945+24]..[122,4945+27])
                              "pat_desc" (typing/parmatch.ml[122,4945+28]..[122,4945+36])
                          ]
                        [
                          <case>
                            pattern (typing/parmatch.ml[123,4987+6]..[123,4987+31])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[123,4987+6]..[123,4987+17])
                                  Ppat_construct "Construct" (typing/parmatch.ml[123,4987+6]..[123,4987+15])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[123,4987+16]..[123,4987+17])
                                      Ppat_var "c" (typing/parmatch.ml[123,4987+16]..[123,4987+17])
                                pattern (typing/parmatch.ml[123,4987+19]..[123,4987+31])
                                  Ppat_construct "Construct" (typing/parmatch.ml[123,4987+19]..[123,4987+28])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[123,4987+29]..[123,4987+31])
                                      Ppat_var "c'" (typing/parmatch.ml[123,4987+29]..[123,4987+31])
                              ]
                            expression (typing/parmatch.ml[124,5022+6]..[125,5059+45])
                              Pexp_apply
                              expression (typing/parmatch.ml[125,5059+6]..[125,5059+8])
                                Pexp_ident "&&" (typing/parmatch.ml[125,5059+6]..[125,5059+8])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[124,5022+6]..[124,5022+36])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[124,5022+20]..[124,5022+21])
                                      Pexp_ident "=" (typing/parmatch.ml[124,5022+20]..[124,5022+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[124,5022+6]..[124,5022+19])
                                          Pexp_field
                                          expression (typing/parmatch.ml[124,5022+6]..[124,5022+7])
                                            Pexp_ident "c" (typing/parmatch.ml[124,5022+6]..[124,5022+7])
                                          "cstr_consts" (typing/parmatch.ml[124,5022+8]..[124,5022+19])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[124,5022+22]..[124,5022+36])
                                          Pexp_field
                                          expression (typing/parmatch.ml[124,5022+22]..[124,5022+24])
                                            Pexp_ident "c'" (typing/parmatch.ml[124,5022+22]..[124,5022+24])
                                          "cstr_consts" (typing/parmatch.ml[124,5022+25]..[124,5022+36])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[125,5059+9]..[125,5059+45])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[125,5059+26]..[125,5059+27])
                                      Pexp_ident "=" (typing/parmatch.ml[125,5059+26]..[125,5059+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[125,5059+9]..[125,5059+25])
                                          Pexp_field
                                          expression (typing/parmatch.ml[125,5059+9]..[125,5059+10])
                                            Pexp_ident "c" (typing/parmatch.ml[125,5059+9]..[125,5059+10])
                                          "cstr_nonconsts" (typing/parmatch.ml[125,5059+11]..[125,5059+25])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[125,5059+28]..[125,5059+45])
                                          Pexp_field
                                          expression (typing/parmatch.ml[125,5059+28]..[125,5059+30])
                                            Pexp_ident "c'" (typing/parmatch.ml[125,5059+28]..[125,5059+30])
                                          "cstr_nonconsts" (typing/parmatch.ml[125,5059+31]..[125,5059+45])
                                    ]
                              ]
                          <case>
                            pattern (typing/parmatch.ml[126,5105+6]..[126,5105+30])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[126,5105+6]..[126,5105+17])
                                  Ppat_construct "Constant" (typing/parmatch.ml[126,5105+6]..[126,5105+14])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[126,5105+15]..[126,5105+17])
                                      Ppat_var "c1" (typing/parmatch.ml[126,5105+15]..[126,5105+17])
                                pattern (typing/parmatch.ml[126,5105+19]..[126,5105+30])
                                  Ppat_construct "Constant" (typing/parmatch.ml[126,5105+19]..[126,5105+27])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[126,5105+28]..[126,5105+30])
                                      Ppat_var "c2" (typing/parmatch.ml[126,5105+28]..[126,5105+30])
                              ]
                            expression (typing/parmatch.ml[126,5105+34]..[142,5653+9])
                              Pexp_match
                              expression (typing/parmatch.ml[127,5145+14]..[127,5145+20])
                                Pexp_tuple
                                [
                                  expression (typing/parmatch.ml[127,5145+14]..[127,5145+16])
                                    Pexp_ident "c1" (typing/parmatch.ml[127,5145+14]..[127,5145+16])
                                  expression (typing/parmatch.ml[127,5145+18]..[127,5145+20])
                                    Pexp_ident "c2" (typing/parmatch.ml[127,5145+18]..[127,5145+20])
                                ]
                              [
                                <case>
                                  pattern (typing/parmatch.ml[128,5171+10]..[134,5407+40])
                                    Ppat_or
                                    pattern (typing/parmatch.ml[128,5171+10]..[133,5368+38])
                                      Ppat_or
                                      pattern (typing/parmatch.ml[128,5171+10]..[132,5321+46])
                                        Ppat_or
                                        pattern (typing/parmatch.ml[128,5171+10]..[131,5282+38])
                                          Ppat_or
                                          pattern (typing/parmatch.ml[128,5171+10]..[130,5243+38])
                                            Ppat_or
                                            pattern (typing/parmatch.ml[128,5171+10]..[129,5208+34])
                                              Ppat_or
                                              pattern (typing/parmatch.ml[128,5171+10]..[128,5171+36])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/parmatch.ml[128,5171+10]..[128,5171+22])
                                                    Ppat_construct "Const_char" (typing/parmatch.ml[128,5171+10]..[128,5171+20])
                                                    Some
                                                      []
                                                      pattern (typing/parmatch.ml[128,5171+21]..[128,5171+22])
                                                        Ppat_any
                                                  pattern (typing/parmatch.ml[128,5171+24]..[128,5171+36])
                                                    Ppat_construct "Const_char" (typing/parmatch.ml[128,5171+24]..[128,5171+34])
                                                    Some
                                                      []
                                                      pattern (typing/parmatch.ml[128,5171+35]..[128,5171+36])
                                                        Ppat_any
                                                ]
                                              pattern (typing/parmatch.ml[129,5208+10]..[129,5208+34])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/parmatch.ml[129,5208+10]..[129,5208+21])
                                                    Ppat_construct "Const_int" (typing/parmatch.ml[129,5208+10]..[129,5208+19])
                                                    Some
                                                      []
                                                      pattern (typing/parmatch.ml[129,5208+20]..[129,5208+21])
                                                        Ppat_any
                                                  pattern (typing/parmatch.ml[129,5208+23]..[129,5208+34])
                                                    Ppat_construct "Const_int" (typing/parmatch.ml[129,5208+23]..[129,5208+32])
                                                    Some
                                                      []
                                                      pattern (typing/parmatch.ml[129,5208+33]..[129,5208+34])
                                                        Ppat_any
                                                ]
                                            pattern (typing/parmatch.ml[130,5243+10]..[130,5243+38])
                                              Ppat_tuple
                                              [
                                                pattern (typing/parmatch.ml[130,5243+10]..[130,5243+23])
                                                  Ppat_construct "Const_int32" (typing/parmatch.ml[130,5243+10]..[130,5243+21])
                                                  Some
                                                    []
                                                    pattern (typing/parmatch.ml[130,5243+22]..[130,5243+23])
                                                      Ppat_any
                                                pattern (typing/parmatch.ml[130,5243+25]..[130,5243+38])
                                                  Ppat_construct "Const_int32" (typing/parmatch.ml[130,5243+25]..[130,5243+36])
                                                  Some
                                                    []
                                                    pattern (typing/parmatch.ml[130,5243+37]..[130,5243+38])
                                                      Ppat_any
                                              ]
                                          pattern (typing/parmatch.ml[131,5282+10]..[131,5282+38])
                                            Ppat_tuple
                                            [
                                              pattern (typing/parmatch.ml[131,5282+10]..[131,5282+23])
                                                Ppat_construct "Const_int64" (typing/parmatch.ml[131,5282+10]..[131,5282+21])
                                                Some
                                                  []
                                                  pattern (typing/parmatch.ml[131,5282+22]..[131,5282+23])
                                                    Ppat_any
                                              pattern (typing/parmatch.ml[131,5282+25]..[131,5282+38])
                                                Ppat_construct "Const_int64" (typing/parmatch.ml[131,5282+25]..[131,5282+36])
                                                Some
                                                  []
                                                  pattern (typing/parmatch.ml[131,5282+37]..[131,5282+38])
                                                    Ppat_any
                                            ]
                                        pattern (typing/parmatch.ml[132,5321+10]..[132,5321+46])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[132,5321+10]..[132,5321+27])
                                              Ppat_construct "Const_nativeint" (typing/parmatch.ml[132,5321+10]..[132,5321+25])
                                              Some
                                                []
                                                pattern (typing/parmatch.ml[132,5321+26]..[132,5321+27])
                                                  Ppat_any
                                            pattern (typing/parmatch.ml[132,5321+29]..[132,5321+46])
                                              Ppat_construct "Const_nativeint" (typing/parmatch.ml[132,5321+29]..[132,5321+44])
                                              Some
                                                []
                                                pattern (typing/parmatch.ml[132,5321+45]..[132,5321+46])
                                                  Ppat_any
                                          ]
                                      pattern (typing/parmatch.ml[133,5368+10]..[133,5368+38])
                                        Ppat_tuple
                                        [
                                          pattern (typing/parmatch.ml[133,5368+10]..[133,5368+23])
                                            Ppat_construct "Const_float" (typing/parmatch.ml[133,5368+10]..[133,5368+21])
                                            Some
                                              []
                                              pattern (typing/parmatch.ml[133,5368+22]..[133,5368+23])
                                                Ppat_any
                                          pattern (typing/parmatch.ml[133,5368+25]..[133,5368+38])
                                            Ppat_construct "Const_float" (typing/parmatch.ml[133,5368+25]..[133,5368+36])
                                            Some
                                              []
                                              pattern (typing/parmatch.ml[133,5368+37]..[133,5368+38])
                                                Ppat_any
                                        ]
                                    pattern (typing/parmatch.ml[134,5407+10]..[134,5407+40])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[134,5407+10]..[134,5407+24])
                                          Ppat_construct "Const_string" (typing/parmatch.ml[134,5407+10]..[134,5407+22])
                                          Some
                                            []
                                            pattern (typing/parmatch.ml[134,5407+23]..[134,5407+24])
                                              Ppat_any
                                        pattern (typing/parmatch.ml[134,5407+26]..[134,5407+40])
                                          Ppat_construct "Const_string" (typing/parmatch.ml[134,5407+26]..[134,5407+38])
                                          Some
                                            []
                                            pattern (typing/parmatch.ml[134,5407+39]..[134,5407+40])
                                              Ppat_any
                                      ]
                                  expression (typing/parmatch.ml[134,5407+44]..[134,5407+48])
                                    Pexp_construct "true" (typing/parmatch.ml[134,5407+44]..[134,5407+48])
                                    None
                                <case>
                                  pattern (typing/parmatch.ml[135,5456+10]..[141,5613+30])
                                    Ppat_tuple
                                    [
                                      pattern (typing/parmatch.ml[135,5456+10]..[141,5613+27])
                                        Ppat_or
                                        pattern (typing/parmatch.ml[135,5456+12]..[140,5587+25])
                                          Ppat_or
                                          pattern (typing/parmatch.ml[135,5456+12]..[139,5557+29])
                                            Ppat_or
                                            pattern (typing/parmatch.ml[135,5456+12]..[138,5531+25])
                                              Ppat_or
                                              pattern (typing/parmatch.ml[135,5456+12]..[137,5505+25])
                                                Ppat_or
                                                pattern (typing/parmatch.ml[135,5456+12]..[136,5481+23])
                                                  Ppat_or
                                                  pattern (typing/parmatch.ml[135,5456+12]..[135,5456+24])
                                                    Ppat_construct "Const_char" (typing/parmatch.ml[135,5456+12]..[135,5456+22])
                                                    Some
                                                      []
                                                      pattern (typing/parmatch.ml[135,5456+23]..[135,5456+24])
                                                        Ppat_any
                                                  pattern (typing/parmatch.ml[136,5481+12]..[136,5481+23])
                                                    Ppat_construct "Const_int" (typing/parmatch.ml[136,5481+12]..[136,5481+21])
                                                    Some
                                                      []
                                                      pattern (typing/parmatch.ml[136,5481+22]..[136,5481+23])
                                                        Ppat_any
                                                pattern (typing/parmatch.ml[137,5505+12]..[137,5505+25])
                                                  Ppat_construct "Const_int32" (typing/parmatch.ml[137,5505+12]..[137,5505+23])
                                                  Some
                                                    []
                                                    pattern (typing/parmatch.ml[137,5505+24]..[137,5505+25])
                                                      Ppat_any
                                              pattern (typing/parmatch.ml[138,5531+12]..[138,5531+25])
                                                Ppat_construct "Const_int64" (typing/parmatch.ml[138,5531+12]..[138,5531+23])
                                                Some
                                                  []
                                                  pattern (typing/parmatch.ml[138,5531+24]..[138,5531+25])
                                                    Ppat_any
                                            pattern (typing/parmatch.ml[139,5557+12]..[139,5557+29])
                                              Ppat_construct "Const_nativeint" (typing/parmatch.ml[139,5557+12]..[139,5557+27])
                                              Some
                                                []
                                                pattern (typing/parmatch.ml[139,5557+28]..[139,5557+29])
                                                  Ppat_any
                                          pattern (typing/parmatch.ml[140,5587+12]..[140,5587+25])
                                            Ppat_construct "Const_float" (typing/parmatch.ml[140,5587+12]..[140,5587+23])
                                            Some
                                              []
                                              pattern (typing/parmatch.ml[140,5587+24]..[140,5587+25])
                                                Ppat_any
                                        pattern (typing/parmatch.ml[141,5613+12]..[141,5613+26])
                                          Ppat_construct "Const_string" (typing/parmatch.ml[141,5613+12]..[141,5613+24])
                                          Some
                                            []
                                            pattern (typing/parmatch.ml[141,5613+25]..[141,5613+26])
                                              Ppat_any
                                      pattern (typing/parmatch.ml[141,5613+29]..[141,5613+30])
                                        Ppat_any
                                    ]
                                  expression (typing/parmatch.ml[141,5613+34]..[141,5613+39])
                                    Pexp_construct "false" (typing/parmatch.ml[141,5613+34]..[141,5613+39])
                                    None
                              ]
                          <case>
                            pattern (typing/parmatch.ml[143,5663+6]..[143,5663+24])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[143,5663+6]..[143,5663+14])
                                  Ppat_construct "Tuple" (typing/parmatch.ml[143,5663+6]..[143,5663+11])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[143,5663+12]..[143,5663+14])
                                      Ppat_var "l1" (typing/parmatch.ml[143,5663+12]..[143,5663+14])
                                pattern (typing/parmatch.ml[143,5663+16]..[143,5663+24])
                                  Ppat_construct "Tuple" (typing/parmatch.ml[143,5663+16]..[143,5663+21])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[143,5663+22]..[143,5663+24])
                                      Ppat_var "l2" (typing/parmatch.ml[143,5663+22]..[143,5663+24])
                              ]
                            expression (typing/parmatch.ml[143,5663+28]..[143,5663+35])
                              Pexp_apply
                              expression (typing/parmatch.ml[143,5663+31]..[143,5663+32])
                                Pexp_ident "=" (typing/parmatch.ml[143,5663+31]..[143,5663+32])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[143,5663+28]..[143,5663+30])
                                    Pexp_ident "l1" (typing/parmatch.ml[143,5663+28]..[143,5663+30])
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[143,5663+33]..[143,5663+35])
                                    Pexp_ident "l2" (typing/parmatch.ml[143,5663+33]..[143,5663+35])
                              ]
                          <case>
                            pattern (typing/parmatch.ml[144,5699+6]..[144,5699+44])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[144,5699+6]..[144,5699+24])
                                  Ppat_construct "Record" (typing/parmatch.ml[144,5699+6]..[144,5699+12])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[144,5699+13]..[144,5699+24])
                                      Ppat_construct "::" (typing/parmatch.ml[144,5699+19]..[144,5699+21])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[144,5699+14]..[144,5699+23]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[144,5699+14]..[144,5699+18])
                                              Ppat_var "lbl1" (typing/parmatch.ml[144,5699+14]..[144,5699+18])
                                            pattern (typing/parmatch.ml[144,5699+22]..[144,5699+23])
                                              Ppat_any
                                          ]
                                pattern (typing/parmatch.ml[144,5699+26]..[144,5699+44])
                                  Ppat_construct "Record" (typing/parmatch.ml[144,5699+26]..[144,5699+32])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[144,5699+33]..[144,5699+44])
                                      Ppat_construct "::" (typing/parmatch.ml[144,5699+39]..[144,5699+41])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[144,5699+34]..[144,5699+43]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[144,5699+34]..[144,5699+38])
                                              Ppat_var "lbl2" (typing/parmatch.ml[144,5699+34]..[144,5699+38])
                                            pattern (typing/parmatch.ml[144,5699+42]..[144,5699+43])
                                              Ppat_any
                                          ]
                              ]
                            expression (typing/parmatch.ml[145,5747+6]..[145,5747+59])
                              Pexp_apply
                              expression (typing/parmatch.ml[145,5747+32]..[145,5747+33])
                                Pexp_ident "=" (typing/parmatch.ml[145,5747+32]..[145,5747+33])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[145,5747+6]..[145,5747+31])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[145,5747+6]..[145,5747+18])
                                      Pexp_ident "Array.length" (typing/parmatch.ml[145,5747+6]..[145,5747+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[145,5747+19]..[145,5747+31])
                                          Pexp_field
                                          expression (typing/parmatch.ml[145,5747+19]..[145,5747+23])
                                            Pexp_ident "lbl1" (typing/parmatch.ml[145,5747+19]..[145,5747+23])
                                          "lbl_all" (typing/parmatch.ml[145,5747+24]..[145,5747+31])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[145,5747+34]..[145,5747+59])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[145,5747+34]..[145,5747+46])
                                      Pexp_ident "Array.length" (typing/parmatch.ml[145,5747+34]..[145,5747+46])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[145,5747+47]..[145,5747+59])
                                          Pexp_field
                                          expression (typing/parmatch.ml[145,5747+47]..[145,5747+51])
                                            Pexp_ident "lbl2" (typing/parmatch.ml[145,5747+47]..[145,5747+51])
                                          "lbl_all" (typing/parmatch.ml[145,5747+52]..[145,5747+59])
                                    ]
                              ]
                          <case>
                            pattern (typing/parmatch.ml[146,5807+6]..[151,5910+16])
                              Ppat_or
                              pattern (typing/parmatch.ml[146,5807+6]..[150,5887+22])
                                Ppat_or
                                pattern (typing/parmatch.ml[146,5807+6]..[149,5860+26])
                                  Ppat_or
                                  pattern (typing/parmatch.ml[146,5807+6]..[148,5833+26])
                                    Ppat_or
                                    pattern (typing/parmatch.ml[146,5807+6]..[147,5820+12])
                                      Ppat_or
                                      pattern (typing/parmatch.ml[146,5807+6]..[146,5807+12])
                                        Ppat_tuple
                                        [
                                          pattern (typing/parmatch.ml[146,5807+6]..[146,5807+9])
                                            Ppat_construct "Any" (typing/parmatch.ml[146,5807+6]..[146,5807+9])
                                            None
                                          pattern (typing/parmatch.ml[146,5807+11]..[146,5807+12])
                                            Ppat_any
                                        ]
                                      pattern (typing/parmatch.ml[147,5820+6]..[147,5820+12])
                                        Ppat_tuple
                                        [
                                          pattern (typing/parmatch.ml[147,5820+6]..[147,5820+7])
                                            Ppat_any
                                          pattern (typing/parmatch.ml[147,5820+9]..[147,5820+12])
                                            Ppat_construct "Any" (typing/parmatch.ml[147,5820+9]..[147,5820+12])
                                            None
                                        ]
                                    pattern (typing/parmatch.ml[148,5833+6]..[148,5833+26])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[148,5833+6]..[148,5833+15])
                                          Ppat_construct "Record" (typing/parmatch.ml[148,5833+6]..[148,5833+12])
                                          Some
                                            []
                                            pattern (typing/parmatch.ml[148,5833+13]..[148,5833+15])
                                              Ppat_construct "[]" (typing/parmatch.ml[148,5833+13]..[148,5833+15])
                                              None
                                        pattern (typing/parmatch.ml[148,5833+17]..[148,5833+26])
                                          Ppat_construct "Record" (typing/parmatch.ml[148,5833+17]..[148,5833+23])
                                          Some
                                            []
                                            pattern (typing/parmatch.ml[148,5833+24]..[148,5833+26])
                                              Ppat_construct "[]" (typing/parmatch.ml[148,5833+24]..[148,5833+26])
                                              None
                                      ]
                                  pattern (typing/parmatch.ml[149,5860+6]..[149,5860+26])
                                    Ppat_tuple
                                    [
                                      pattern (typing/parmatch.ml[149,5860+6]..[149,5860+15])
                                        Ppat_construct "Variant" (typing/parmatch.ml[149,5860+6]..[149,5860+13])
                                        Some
                                          []
                                          pattern (typing/parmatch.ml[149,5860+14]..[149,5860+15])
                                            Ppat_any
                                      pattern (typing/parmatch.ml[149,5860+17]..[149,5860+26])
                                        Ppat_construct "Variant" (typing/parmatch.ml[149,5860+17]..[149,5860+24])
                                        Some
                                          []
                                          pattern (typing/parmatch.ml[149,5860+25]..[149,5860+26])
                                            Ppat_any
                                    ]
                                pattern (typing/parmatch.ml[150,5887+6]..[150,5887+22])
                                  Ppat_tuple
                                  [
                                    pattern (typing/parmatch.ml[150,5887+6]..[150,5887+13])
                                      Ppat_construct "Array" (typing/parmatch.ml[150,5887+6]..[150,5887+11])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[150,5887+12]..[150,5887+13])
                                          Ppat_any
                                    pattern (typing/parmatch.ml[150,5887+15]..[150,5887+22])
                                      Ppat_construct "Array" (typing/parmatch.ml[150,5887+15]..[150,5887+20])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[150,5887+21]..[150,5887+22])
                                          Ppat_any
                                  ]
                              pattern (typing/parmatch.ml[151,5910+6]..[151,5910+16])
                                Ppat_tuple
                                [
                                  pattern (typing/parmatch.ml[151,5910+6]..[151,5910+10])
                                    Ppat_construct "Lazy" (typing/parmatch.ml[151,5910+6]..[151,5910+10])
                                    None
                                  pattern (typing/parmatch.ml[151,5910+12]..[151,5910+16])
                                    Ppat_construct "Lazy" (typing/parmatch.ml[151,5910+12]..[151,5910+16])
                                    None
                                ]
                            expression (typing/parmatch.ml[151,5910+20]..[151,5910+24])
                              Pexp_construct "true" (typing/parmatch.ml[151,5910+20]..[151,5910+24])
                              None
                          <case>
                            pattern (typing/parmatch.ml[152,5935+6]..[152,5935+10])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[152,5935+6]..[152,5935+7])
                                  Ppat_any
                                pattern (typing/parmatch.ml[152,5935+9]..[152,5935+10])
                                  Ppat_any
                              ]
                            expression (typing/parmatch.ml[152,5935+14]..[152,5935+19])
                              Pexp_construct "false" (typing/parmatch.ml[152,5935+14]..[152,5935+19])
                              None
                        ]
              ]
              expression (typing/parmatch.ml[154,5960+2]..[165,6189+50])
                Pexp_match
                expression (typing/parmatch.ml[155,5968+4]..[159,6055+12])
                  Pexp_apply
                  expression (typing/parmatch.ml[155,5968+4]..[155,5968+13])
                    Pexp_ident "List.find" (typing/parmatch.ml[155,5968+4]..[155,5968+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[156,5982+6]..[158,6035+19])
                        Pexp_function
                        [
                          <case>
                            pattern (typing/parmatch.ml[157,5998+9]..[157,5998+27])
                              Ppat_record Closed
                              [
                                "pat_desc" (typing/parmatch.ml[157,5998+11]..[157,5998+19])
                                  pattern (typing/parmatch.ml[157,5998+22]..[157,5998+25])
                                    Ppat_construct "Any" (typing/parmatch.ml[157,5998+22]..[157,5998+25])
                                    None
                              ]
                            expression (typing/parmatch.ml[157,5998+31]..[157,5998+36])
                              Pexp_construct "false" (typing/parmatch.ml[157,5998+31]..[157,5998+36])
                              None
                          <case>
                            pattern (typing/parmatch.ml[158,6035+9]..[158,6035+10])
                              Ppat_any
                            expression (typing/parmatch.ml[158,6035+14]..[158,6035+18])
                              Pexp_construct "true" (typing/parmatch.ml[158,6035+14]..[158,6035+18])
                              None
                        ]
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[159,6055+6]..[159,6055+12])
                        Pexp_ident "column" (typing/parmatch.ml[159,6055+6]..[159,6055+12])
                  ]
                [
                  <case>
                    pattern (typing/parmatch.ml[161,6075+4]..[161,6075+23])
                      Ppat_exception
                      pattern (typing/parmatch.ml[161,6075+14]..[161,6075+23])
                        Ppat_construct "Not_found" (typing/parmatch.ml[161,6075+14]..[161,6075+23])
                        None
                    expression (typing/parmatch.ml[163,6163+4]..[163,6163+8])
                      Pexp_construct "true" (typing/parmatch.ml[163,6163+4]..[163,6163+8])
                      None
                  <case>
                    pattern (typing/parmatch.ml[164,6172+4]..[164,6172+13])
                      Ppat_var "discr_pat" (typing/parmatch.ml[164,6172+4]..[164,6172+13])
                    expression (typing/parmatch.ml[165,6189+4]..[165,6189+50])
                      Pexp_apply
                      expression (typing/parmatch.ml[165,6189+4]..[165,6189+16])
                        Pexp_ident "List.for_all" (typing/parmatch.ml[165,6189+4]..[165,6189+16])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[165,6189+17]..[165,6189+43])
                            Pexp_apply
                            expression (typing/parmatch.ml[165,6189+18]..[165,6189+32])
                              Pexp_ident "coherent_heads" (typing/parmatch.ml[165,6189+18]..[165,6189+32])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[165,6189+33]..[165,6189+42])
                                  Pexp_ident "discr_pat" (typing/parmatch.ml[165,6189+33]..[165,6189+42])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[165,6189+44]..[165,6189+50])
                            Pexp_ident "column" (typing/parmatch.ml[165,6189+44]..[165,6189+50])
                      ]
                ]
    ]
  structure_item (typing/parmatch.ml[167,6241+0]..[168,6278+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[167,6241+4]..[167,6241+16])
          Ppat_var "first_column" (typing/parmatch.ml[167,6241+4]..[167,6241+16])
        expression (typing/parmatch.ml[167,6241+17]..[168,6278+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[167,6241+17]..[167,6241+34])
            Ppat_var "simplified_matrix" (typing/parmatch.ml[167,6241+17]..[167,6241+34])
          expression (typing/parmatch.ml[168,6278+2]..[168,6278+65])
            Pexp_apply
            expression (typing/parmatch.ml[168,6278+2]..[168,6278+10])
              Pexp_ident "List.map" (typing/parmatch.ml[168,6278+2]..[168,6278+10])
            [
              <arg>
              Nolabel
                expression (typing/parmatch.ml[168,6278+11]..[168,6278+47])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/parmatch.ml[168,6278+16]..[168,6278+38])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[168,6278+17]..[168,6278+30])
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[168,6278+18]..[168,6278+22])
                            Ppat_var "head" (typing/parmatch.ml[168,6278+18]..[168,6278+22])
                          pattern (typing/parmatch.ml[168,6278+24]..[168,6278+29])
                            Ppat_var "_args" (typing/parmatch.ml[168,6278+24]..[168,6278+29])
                        ]
                      pattern (typing/parmatch.ml[168,6278+32]..[168,6278+37])
                        Ppat_var "_rest" (typing/parmatch.ml[168,6278+32]..[168,6278+37])
                    ]
                  expression (typing/parmatch.ml[168,6278+42]..[168,6278+46])
                    Pexp_ident "head" (typing/parmatch.ml[168,6278+42]..[168,6278+46])
              <arg>
              Nolabel
                expression (typing/parmatch.ml[168,6278+48]..[168,6278+65])
                  Pexp_ident "simplified_matrix" (typing/parmatch.ml[168,6278+48]..[168,6278+65])
            ]
    ]
  structure_item (typing/parmatch.ml[234,7985+0]..[234,7985+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[234,7985+4]..[234,7985+13])
          Ppat_var "is_absent" (typing/parmatch.ml[234,7985+4]..[234,7985+13])
        expression (typing/parmatch.ml[234,7985+14]..[234,7985+58]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[234,7985+14]..[234,7985+17])
            Ppat_var "tag" (typing/parmatch.ml[234,7985+14]..[234,7985+17])
          expression (typing/parmatch.ml[234,7985+18]..[234,7985+58]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[234,7985+18]..[234,7985+21])
              Ppat_var "row" (typing/parmatch.ml[234,7985+18]..[234,7985+21])
            expression (typing/parmatch.ml[234,7985+24]..[234,7985+58])
              Pexp_apply
              expression (typing/parmatch.ml[234,7985+49]..[234,7985+50])
                Pexp_ident "=" (typing/parmatch.ml[234,7985+49]..[234,7985+50])
              [
                <arg>
                Nolabel
                  expression (typing/parmatch.ml[234,7985+24]..[234,7985+48])
                    Pexp_apply
                    expression (typing/parmatch.ml[234,7985+24]..[234,7985+39])
                      Pexp_ident "Btype.row_field" (typing/parmatch.ml[234,7985+24]..[234,7985+39])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[234,7985+40]..[234,7985+43])
                          Pexp_ident "tag" (typing/parmatch.ml[234,7985+40]..[234,7985+43])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[234,7985+44]..[234,7985+48])
                          Pexp_apply
                          expression (typing/parmatch.ml[234,7985+44]..[234,7985+45])
                            Pexp_ident "!" (typing/parmatch.ml[234,7985+44]..[234,7985+45])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[234,7985+45]..[234,7985+48])
                                Pexp_ident "row" (typing/parmatch.ml[234,7985+45]..[234,7985+48])
                          ]
                    ]
                <arg>
                Nolabel
                  expression (typing/parmatch.ml[234,7985+51]..[234,7985+58])
                    Pexp_construct "Rabsent" (typing/parmatch.ml[234,7985+51]..[234,7985+58])
                    None
              ]
    ]
  structure_item (typing/parmatch.ml[236,8045+0]..[239,8164+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[236,8045+4]..[236,8045+17])
          Ppat_var "is_absent_pat" (typing/parmatch.ml[236,8045+4]..[236,8045+17])
        expression (typing/parmatch.ml[236,8045+18]..[239,8164+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[236,8045+18]..[236,8045+19])
            Ppat_var "d" (typing/parmatch.ml[236,8045+18]..[236,8045+19])
          expression (typing/parmatch.ml[237,8067+2]..[239,8164+14])
            Pexp_match
            expression (typing/parmatch.ml[237,8067+8]..[237,8067+18])
              Pexp_field
              expression (typing/parmatch.ml[237,8067+8]..[237,8067+9])
                Pexp_ident "d" (typing/parmatch.ml[237,8067+8]..[237,8067+9])
              "pat_desc" (typing/parmatch.ml[237,8067+10]..[237,8067+18])
            [
              <case>
                pattern (typing/parmatch.ml[238,8091+4]..[238,8091+46])
                  Ppat_construct "Patterns.Head.Variant" (typing/parmatch.ml[238,8091+4]..[238,8091+25])
                  Some
                    []
                    pattern (typing/parmatch.ml[238,8091+26]..[238,8091+46])
                      Ppat_record Open
                      [
                        "tag" (typing/parmatch.ml[238,8091+28]..[238,8091+31]) ghost
                          pattern (typing/parmatch.ml[238,8091+28]..[238,8091+31])
                            Ppat_var "tag" (typing/parmatch.ml[238,8091+28]..[238,8091+31])
                        "cstr_row" (typing/parmatch.ml[238,8091+33]..[238,8091+41]) ghost
                          pattern (typing/parmatch.ml[238,8091+33]..[238,8091+41])
                            Ppat_var "cstr_row" (typing/parmatch.ml[238,8091+33]..[238,8091+41])
                      ]
                expression (typing/parmatch.ml[238,8091+50]..[238,8091+72])
                  Pexp_apply
                  expression (typing/parmatch.ml[238,8091+50]..[238,8091+59])
                    Pexp_ident "is_absent" (typing/parmatch.ml[238,8091+50]..[238,8091+59])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[238,8091+60]..[238,8091+63])
                        Pexp_ident "tag" (typing/parmatch.ml[238,8091+60]..[238,8091+63])
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[238,8091+64]..[238,8091+72])
                        Pexp_ident "cstr_row" (typing/parmatch.ml[238,8091+64]..[238,8091+72])
                  ]
              <case>
                pattern (typing/parmatch.ml[239,8164+4]..[239,8164+5])
                  Ppat_any
                expression (typing/parmatch.ml[239,8164+9]..[239,8164+14])
                  Pexp_construct "false" (typing/parmatch.ml[239,8164+9]..[239,8164+14])
                  None
            ]
    ]
  structure_item (typing/parmatch.ml[241,8180+0]..[254,8548+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[241,8180+4]..[241,8180+17])
          Ppat_var "const_compare" (typing/parmatch.ml[241,8180+4]..[241,8180+17])
        expression (typing/parmatch.ml[241,8180+18]..[254,8548+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[241,8180+18]..[241,8180+19])
            Ppat_var "x" (typing/parmatch.ml[241,8180+18]..[241,8180+19])
          expression (typing/parmatch.ml[241,8180+20]..[254,8548+30]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[241,8180+20]..[241,8180+21])
              Ppat_var "y" (typing/parmatch.ml[241,8180+20]..[241,8180+21])
            expression (typing/parmatch.ml[242,8204+2]..[254,8548+30])
              Pexp_match
              expression (typing/parmatch.ml[242,8204+8]..[242,8204+11])
                Pexp_tuple
                [
                  expression (typing/parmatch.ml[242,8204+8]..[242,8204+9])
                    Pexp_ident "x" (typing/parmatch.ml[242,8204+8]..[242,8204+9])
                  expression (typing/parmatch.ml[242,8204+10]..[242,8204+11])
                    Pexp_ident "y" (typing/parmatch.ml[242,8204+10]..[242,8204+11])
                ]
              [
                <case>
                  pattern (typing/parmatch.ml[243,8221+4]..[243,8221+34])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[243,8221+4]..[243,8221+18])
                        Ppat_construct "Const_float" (typing/parmatch.ml[243,8221+4]..[243,8221+15])
                        Some
                          []
                          pattern (typing/parmatch.ml[243,8221+16]..[243,8221+18])
                            Ppat_var "f1" (typing/parmatch.ml[243,8221+16]..[243,8221+18])
                      pattern (typing/parmatch.ml[243,8221+20]..[243,8221+34])
                        Ppat_construct "Const_float" (typing/parmatch.ml[243,8221+20]..[243,8221+31])
                        Some
                          []
                          pattern (typing/parmatch.ml[243,8221+32]..[243,8221+34])
                            Ppat_var "f2" (typing/parmatch.ml[243,8221+32]..[243,8221+34])
                    ]
                  expression (typing/parmatch.ml[244,8259+6]..[244,8259+62])
                    Pexp_apply
                    expression (typing/parmatch.ml[244,8259+6]..[244,8259+20])
                      Pexp_ident "Stdlib.compare" (typing/parmatch.ml[244,8259+6]..[244,8259+20])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[244,8259+21]..[244,8259+41])
                          Pexp_apply
                          expression (typing/parmatch.ml[244,8259+22]..[244,8259+37])
                            Pexp_ident "float_of_string" (typing/parmatch.ml[244,8259+22]..[244,8259+37])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[244,8259+38]..[244,8259+40])
                                Pexp_ident "f1" (typing/parmatch.ml[244,8259+38]..[244,8259+40])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[244,8259+42]..[244,8259+62])
                          Pexp_apply
                          expression (typing/parmatch.ml[244,8259+43]..[244,8259+58])
                            Pexp_ident "float_of_string" (typing/parmatch.ml[244,8259+43]..[244,8259+58])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[244,8259+59]..[244,8259+61])
                                Pexp_ident "f2" (typing/parmatch.ml[244,8259+59]..[244,8259+61])
                          ]
                    ]
                <case>
                  pattern (typing/parmatch.ml[245,8322+4]..[245,8322+52])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[245,8322+4]..[245,8322+27])
                        Ppat_construct "Const_string" (typing/parmatch.ml[245,8322+4]..[245,8322+16])
                        Some
                          []
                          pattern (typing/parmatch.ml[245,8322+17]..[245,8322+27])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[245,8322+18]..[245,8322+20])
                                Ppat_var "s1" (typing/parmatch.ml[245,8322+18]..[245,8322+20])
                              pattern (typing/parmatch.ml[245,8322+22]..[245,8322+23])
                                Ppat_any
                              pattern (typing/parmatch.ml[245,8322+25]..[245,8322+26])
                                Ppat_any
                            ]
                      pattern (typing/parmatch.ml[245,8322+29]..[245,8322+52])
                        Ppat_construct "Const_string" (typing/parmatch.ml[245,8322+29]..[245,8322+41])
                        Some
                          []
                          pattern (typing/parmatch.ml[245,8322+42]..[245,8322+52])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[245,8322+43]..[245,8322+45])
                                Ppat_var "s2" (typing/parmatch.ml[245,8322+43]..[245,8322+45])
                              pattern (typing/parmatch.ml[245,8322+47]..[245,8322+48])
                                Ppat_any
                              pattern (typing/parmatch.ml[245,8322+50]..[245,8322+51])
                                Ppat_any
                            ]
                    ]
                  expression (typing/parmatch.ml[246,8378+6]..[246,8378+26])
                    Pexp_apply
                    expression (typing/parmatch.ml[246,8378+6]..[246,8378+20])
                      Pexp_ident "String.compare" (typing/parmatch.ml[246,8378+6]..[246,8378+20])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[246,8378+21]..[246,8378+23])
                          Pexp_ident "s1" (typing/parmatch.ml[246,8378+21]..[246,8378+23])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[246,8378+24]..[246,8378+26])
                          Pexp_ident "s2" (typing/parmatch.ml[246,8378+24]..[246,8378+26])
                    ]
                <case>
                  pattern (typing/parmatch.ml[247,8405+4]..[254,8548+8])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[247,8405+4]..[254,8548+5])
                        Ppat_or
                        pattern (typing/parmatch.ml[247,8405+5]..[252,8506+18])
                          Ppat_or
                          pattern (typing/parmatch.ml[247,8405+5]..[251,8487+18])
                            Ppat_or
                            pattern (typing/parmatch.ml[247,8405+5]..[250,8468+18])
                              Ppat_or
                              pattern (typing/parmatch.ml[247,8405+5]..[249,8440+27])
                                Ppat_or
                                pattern (typing/parmatch.ml[247,8405+5]..[248,8422+17])
                                  Ppat_or
                                  pattern (typing/parmatch.ml[247,8405+5]..[247,8405+16])
                                    Ppat_construct "Const_int" (typing/parmatch.ml[247,8405+5]..[247,8405+14])
                                    Some
                                      []
                                      pattern (typing/parmatch.ml[247,8405+15]..[247,8405+16])
                                        Ppat_any
                                  pattern (typing/parmatch.ml[248,8422+5]..[248,8422+17])
                                    Ppat_construct "Const_char" (typing/parmatch.ml[248,8422+5]..[248,8422+15])
                                    Some
                                      []
                                      pattern (typing/parmatch.ml[248,8422+16]..[248,8422+17])
                                        Ppat_any
                                pattern (typing/parmatch.ml[249,8440+5]..[249,8440+27])
                                  Ppat_construct "Const_string" (typing/parmatch.ml[249,8440+5]..[249,8440+17])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[249,8440+18]..[249,8440+27])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[249,8440+19]..[249,8440+20])
                                          Ppat_any
                                        pattern (typing/parmatch.ml[249,8440+22]..[249,8440+23])
                                          Ppat_any
                                        pattern (typing/parmatch.ml[249,8440+25]..[249,8440+26])
                                          Ppat_any
                                      ]
                              pattern (typing/parmatch.ml[250,8468+5]..[250,8468+18])
                                Ppat_construct "Const_float" (typing/parmatch.ml[250,8468+5]..[250,8468+16])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[250,8468+17]..[250,8468+18])
                                    Ppat_any
                            pattern (typing/parmatch.ml[251,8487+5]..[251,8487+18])
                              Ppat_construct "Const_int32" (typing/parmatch.ml[251,8487+5]..[251,8487+16])
                              Some
                                []
                                pattern (typing/parmatch.ml[251,8487+17]..[251,8487+18])
                                  Ppat_any
                          pattern (typing/parmatch.ml[252,8506+5]..[252,8506+18])
                            Ppat_construct "Const_int64" (typing/parmatch.ml[252,8506+5]..[252,8506+16])
                            Some
                              []
                              pattern (typing/parmatch.ml[252,8506+17]..[252,8506+18])
                                Ppat_any
                        pattern (typing/parmatch.ml[253,8525+5]..[253,8525+22])
                          Ppat_construct "Const_nativeint" (typing/parmatch.ml[253,8525+5]..[253,8525+20])
                          Some
                            []
                            pattern (typing/parmatch.ml[253,8525+21]..[253,8525+22])
                              Ppat_any
                      pattern (typing/parmatch.ml[254,8548+7]..[254,8548+8])
                        Ppat_any
                    ]
                  expression (typing/parmatch.ml[254,8548+12]..[254,8548+30])
                    Pexp_apply
                    expression (typing/parmatch.ml[254,8548+12]..[254,8548+26])
                      Pexp_ident "Stdlib.compare" (typing/parmatch.ml[254,8548+12]..[254,8548+26])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[254,8548+27]..[254,8548+28])
                          Pexp_ident "x" (typing/parmatch.ml[254,8548+27]..[254,8548+28])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[254,8548+29]..[254,8548+30])
                          Pexp_ident "y" (typing/parmatch.ml[254,8548+29]..[254,8548+30])
                    ]
              ]
    ]
  structure_item (typing/parmatch.ml[256,8580+0]..[269,9204+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[256,8580+4]..[256,8580+16])
          Ppat_var "records_args" (typing/parmatch.ml[256,8580+4]..[256,8580+16])
        expression (typing/parmatch.ml[256,8580+17]..[269,9204+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[256,8580+17]..[256,8580+19])
            Ppat_var "l1" (typing/parmatch.ml[256,8580+17]..[256,8580+19])
          expression (typing/parmatch.ml[256,8580+20]..[269,9204+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[256,8580+20]..[256,8580+22])
              Ppat_var "l2" (typing/parmatch.ml[256,8580+20]..[256,8580+22])
            expression (typing/parmatch.ml[258,8680+2]..[269,9204+21])
              Pexp_let Rec
              [
                <def>
                  pattern (typing/parmatch.ml[258,8680+10]..[258,8680+17])
                    Ppat_var "combine" (typing/parmatch.ml[258,8680+10]..[258,8680+17])
                  expression (typing/parmatch.ml[258,8680+18]..[268,9157+43]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/parmatch.ml[258,8680+18]..[258,8680+20])
                      Ppat_var "r1" (typing/parmatch.ml[258,8680+18]..[258,8680+20])
                    expression (typing/parmatch.ml[258,8680+21]..[268,9157+43]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/parmatch.ml[258,8680+21]..[258,8680+23])
                        Ppat_var "r2" (typing/parmatch.ml[258,8680+21]..[258,8680+23])
                      expression (typing/parmatch.ml[258,8680+24]..[268,9157+43]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/parmatch.ml[258,8680+24]..[258,8680+26])
                          Ppat_var "l1" (typing/parmatch.ml[258,8680+24]..[258,8680+26])
                        expression (typing/parmatch.ml[258,8680+27]..[268,9157+43]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/parmatch.ml[258,8680+27]..[258,8680+29])
                            Ppat_var "l2" (typing/parmatch.ml[258,8680+27]..[258,8680+29])
                          expression (typing/parmatch.ml[258,8680+32]..[268,9157+43])
                            Pexp_match
                            expression (typing/parmatch.ml[258,8680+38]..[258,8680+43])
                              Pexp_tuple
                              [
                                expression (typing/parmatch.ml[258,8680+38]..[258,8680+40])
                                  Pexp_ident "l1" (typing/parmatch.ml[258,8680+38]..[258,8680+40])
                                expression (typing/parmatch.ml[258,8680+41]..[258,8680+43])
                                  Pexp_ident "l2" (typing/parmatch.ml[258,8680+41]..[258,8680+43])
                              ]
                            [
                              <case>
                                pattern (typing/parmatch.ml[259,8729+4]..[259,8729+9])
                                  Ppat_tuple
                                  [
                                    pattern (typing/parmatch.ml[259,8729+4]..[259,8729+6])
                                      Ppat_construct "[]" (typing/parmatch.ml[259,8729+4]..[259,8729+6])
                                      None
                                    pattern (typing/parmatch.ml[259,8729+7]..[259,8729+9])
                                      Ppat_construct "[]" (typing/parmatch.ml[259,8729+7]..[259,8729+9])
                                      None
                                  ]
                                expression (typing/parmatch.ml[259,8729+13]..[259,8729+37])
                                  Pexp_tuple
                                  [
                                    expression (typing/parmatch.ml[259,8729+13]..[259,8729+24])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[259,8729+13]..[259,8729+21])
                                        Pexp_ident "List.rev" (typing/parmatch.ml[259,8729+13]..[259,8729+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[259,8729+22]..[259,8729+24])
                                            Pexp_ident "r1" (typing/parmatch.ml[259,8729+22]..[259,8729+24])
                                      ]
                                    expression (typing/parmatch.ml[259,8729+26]..[259,8729+37])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[259,8729+26]..[259,8729+34])
                                        Pexp_ident "List.rev" (typing/parmatch.ml[259,8729+26]..[259,8729+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[259,8729+35]..[259,8729+37])
                                            Pexp_ident "r2" (typing/parmatch.ml[259,8729+35]..[259,8729+37])
                                      ]
                                  ]
                              <case>
                                pattern (typing/parmatch.ml[260,8767+4]..[260,8767+21])
                                  Ppat_tuple
                                  [
                                    pattern (typing/parmatch.ml[260,8767+4]..[260,8767+6])
                                      Ppat_construct "[]" (typing/parmatch.ml[260,8767+4]..[260,8767+6])
                                      None
                                    pattern (typing/parmatch.ml[260,8767+7]..[260,8767+21])
                                      Ppat_construct "::" (typing/parmatch.ml[260,8767+15]..[260,8767+17])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[260,8767+7]..[260,8767+21]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[260,8767+7]..[260,8767+15])
                                              Ppat_tuple
                                              [
                                                pattern (typing/parmatch.ml[260,8767+8]..[260,8767+9])
                                                  Ppat_any
                                                pattern (typing/parmatch.ml[260,8767+10]..[260,8767+11])
                                                  Ppat_any
                                                pattern (typing/parmatch.ml[260,8767+12]..[260,8767+14])
                                                  Ppat_var "p2" (typing/parmatch.ml[260,8767+12]..[260,8767+14])
                                              ]
                                            pattern (typing/parmatch.ml[260,8767+17]..[260,8767+21])
                                              Ppat_var "rem2" (typing/parmatch.ml[260,8767+17]..[260,8767+21])
                                          ]
                                  ]
                                expression (typing/parmatch.ml[260,8767+25]..[260,8767+61])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[260,8767+25]..[260,8767+32])
                                    Pexp_ident "combine" (typing/parmatch.ml[260,8767+25]..[260,8767+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[260,8767+33]..[260,8767+44])
                                        Pexp_construct "::" (typing/parmatch.ml[260,8767+39]..[260,8767+41])
                                        Some
                                          expression (typing/parmatch.ml[260,8767+34]..[260,8767+43]) ghost
                                            Pexp_tuple
                                            [
                                              expression (typing/parmatch.ml[260,8767+34]..[260,8767+39])
                                                Pexp_ident "omega" (typing/parmatch.ml[260,8767+34]..[260,8767+39])
                                              expression (typing/parmatch.ml[260,8767+41]..[260,8767+43])
                                                Pexp_ident "r1" (typing/parmatch.ml[260,8767+41]..[260,8767+43])
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[260,8767+45]..[260,8767+53])
                                        Pexp_construct "::" (typing/parmatch.ml[260,8767+48]..[260,8767+50])
                                        Some
                                          expression (typing/parmatch.ml[260,8767+46]..[260,8767+52]) ghost
                                            Pexp_tuple
                                            [
                                              expression (typing/parmatch.ml[260,8767+46]..[260,8767+48])
                                                Pexp_ident "p2" (typing/parmatch.ml[260,8767+46]..[260,8767+48])
                                              expression (typing/parmatch.ml[260,8767+50]..[260,8767+52])
                                                Pexp_ident "r2" (typing/parmatch.ml[260,8767+50]..[260,8767+52])
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[260,8767+54]..[260,8767+56])
                                        Pexp_construct "[]" (typing/parmatch.ml[260,8767+54]..[260,8767+56])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[260,8767+57]..[260,8767+61])
                                        Pexp_ident "rem2" (typing/parmatch.ml[260,8767+57]..[260,8767+61])
                                  ]
                              <case>
                                pattern (typing/parmatch.ml[261,8829+4]..[261,8829+21])
                                  Ppat_tuple
                                  [
                                    pattern (typing/parmatch.ml[261,8829+4]..[261,8829+18])
                                      Ppat_construct "::" (typing/parmatch.ml[261,8829+12]..[261,8829+14])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[261,8829+4]..[261,8829+18]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[261,8829+4]..[261,8829+12])
                                              Ppat_tuple
                                              [
                                                pattern (typing/parmatch.ml[261,8829+5]..[261,8829+6])
                                                  Ppat_any
                                                pattern (typing/parmatch.ml[261,8829+7]..[261,8829+8])
                                                  Ppat_any
                                                pattern (typing/parmatch.ml[261,8829+9]..[261,8829+11])
                                                  Ppat_var "p1" (typing/parmatch.ml[261,8829+9]..[261,8829+11])
                                              ]
                                            pattern (typing/parmatch.ml[261,8829+14]..[261,8829+18])
                                              Ppat_var "rem1" (typing/parmatch.ml[261,8829+14]..[261,8829+18])
                                          ]
                                    pattern (typing/parmatch.ml[261,8829+19]..[261,8829+21])
                                      Ppat_construct "[]" (typing/parmatch.ml[261,8829+19]..[261,8829+21])
                                      None
                                  ]
                                expression (typing/parmatch.ml[261,8829+25]..[261,8829+61])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[261,8829+25]..[261,8829+32])
                                    Pexp_ident "combine" (typing/parmatch.ml[261,8829+25]..[261,8829+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[261,8829+33]..[261,8829+41])
                                        Pexp_construct "::" (typing/parmatch.ml[261,8829+36]..[261,8829+38])
                                        Some
                                          expression (typing/parmatch.ml[261,8829+34]..[261,8829+40]) ghost
                                            Pexp_tuple
                                            [
                                              expression (typing/parmatch.ml[261,8829+34]..[261,8829+36])
                                                Pexp_ident "p1" (typing/parmatch.ml[261,8829+34]..[261,8829+36])
                                              expression (typing/parmatch.ml[261,8829+38]..[261,8829+40])
                                                Pexp_ident "r1" (typing/parmatch.ml[261,8829+38]..[261,8829+40])
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[261,8829+42]..[261,8829+53])
                                        Pexp_construct "::" (typing/parmatch.ml[261,8829+48]..[261,8829+50])
                                        Some
                                          expression (typing/parmatch.ml[261,8829+43]..[261,8829+52]) ghost
                                            Pexp_tuple
                                            [
                                              expression (typing/parmatch.ml[261,8829+43]..[261,8829+48])
                                                Pexp_ident "omega" (typing/parmatch.ml[261,8829+43]..[261,8829+48])
                                              expression (typing/parmatch.ml[261,8829+50]..[261,8829+52])
                                                Pexp_ident "r2" (typing/parmatch.ml[261,8829+50]..[261,8829+52])
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[261,8829+54]..[261,8829+58])
                                        Pexp_ident "rem1" (typing/parmatch.ml[261,8829+54]..[261,8829+58])
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[261,8829+59]..[261,8829+61])
                                        Pexp_construct "[]" (typing/parmatch.ml[261,8829+59]..[261,8829+61])
                                        None
                                  ]
                              <case>
                                pattern (typing/parmatch.ml[262,8891+4]..[262,8891+41])
                                  Ppat_tuple
                                  [
                                    pattern (typing/parmatch.ml[262,8891+4]..[262,8891+21])
                                      Ppat_construct "::" (typing/parmatch.ml[262,8891+15]..[262,8891+17])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[262,8891+4]..[262,8891+21]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[262,8891+4]..[262,8891+15])
                                              Ppat_tuple
                                              [
                                                pattern (typing/parmatch.ml[262,8891+5]..[262,8891+6])
                                                  Ppat_any
                                                pattern (typing/parmatch.ml[262,8891+7]..[262,8891+11])
                                                  Ppat_var "lbl1" (typing/parmatch.ml[262,8891+7]..[262,8891+11])
                                                pattern (typing/parmatch.ml[262,8891+12]..[262,8891+14])
                                                  Ppat_var "p1" (typing/parmatch.ml[262,8891+12]..[262,8891+14])
                                              ]
                                            pattern (typing/parmatch.ml[262,8891+17]..[262,8891+21])
                                              Ppat_var "rem1" (typing/parmatch.ml[262,8891+17]..[262,8891+21])
                                          ]
                                    pattern (typing/parmatch.ml[262,8891+23]..[262,8891+41])
                                      Ppat_construct "::" (typing/parmatch.ml[262,8891+35]..[262,8891+37])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[262,8891+23]..[262,8891+41]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[262,8891+23]..[262,8891+35])
                                              Ppat_tuple
                                              [
                                                pattern (typing/parmatch.ml[262,8891+25]..[262,8891+26])
                                                  Ppat_any
                                                pattern (typing/parmatch.ml[262,8891+27]..[262,8891+31])
                                                  Ppat_var "lbl2" (typing/parmatch.ml[262,8891+27]..[262,8891+31])
                                                pattern (typing/parmatch.ml[262,8891+32]..[262,8891+34])
                                                  Ppat_var "p2" (typing/parmatch.ml[262,8891+32]..[262,8891+34])
                                              ]
                                            pattern (typing/parmatch.ml[262,8891+37]..[262,8891+41])
                                              Ppat_var "rem2" (typing/parmatch.ml[262,8891+37]..[262,8891+41])
                                          ]
                                  ]
                                expression (typing/parmatch.ml[263,8936+6]..[268,9157+43])
                                  Pexp_ifthenelse
                                  expression (typing/parmatch.ml[263,8936+9]..[263,8936+36])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[263,8936+22]..[263,8936+23])
                                      Pexp_ident "<" (typing/parmatch.ml[263,8936+22]..[263,8936+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[263,8936+9]..[263,8936+21])
                                          Pexp_field
                                          expression (typing/parmatch.ml[263,8936+9]..[263,8936+13])
                                            Pexp_ident "lbl1" (typing/parmatch.ml[263,8936+9]..[263,8936+13])
                                          "lbl_pos" (typing/parmatch.ml[263,8936+14]..[263,8936+21])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[263,8936+24]..[263,8936+36])
                                          Pexp_field
                                          expression (typing/parmatch.ml[263,8936+24]..[263,8936+28])
                                            Pexp_ident "lbl2" (typing/parmatch.ml[263,8936+24]..[263,8936+28])
                                          "lbl_pos" (typing/parmatch.ml[263,8936+29]..[263,8936+36])
                                    ]
                                  expression (typing/parmatch.ml[264,8978+8]..[264,8978+44])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[264,8978+8]..[264,8978+15])
                                      Pexp_ident "combine" (typing/parmatch.ml[264,8978+8]..[264,8978+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[264,8978+16]..[264,8978+24])
                                          Pexp_construct "::" (typing/parmatch.ml[264,8978+19]..[264,8978+21])
                                          Some
                                            expression (typing/parmatch.ml[264,8978+17]..[264,8978+23]) ghost
                                              Pexp_tuple
                                              [
                                                expression (typing/parmatch.ml[264,8978+17]..[264,8978+19])
                                                  Pexp_ident "p1" (typing/parmatch.ml[264,8978+17]..[264,8978+19])
                                                expression (typing/parmatch.ml[264,8978+21]..[264,8978+23])
                                                  Pexp_ident "r1" (typing/parmatch.ml[264,8978+21]..[264,8978+23])
                                              ]
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[264,8978+25]..[264,8978+36])
                                          Pexp_construct "::" (typing/parmatch.ml[264,8978+31]..[264,8978+33])
                                          Some
                                            expression (typing/parmatch.ml[264,8978+26]..[264,8978+35]) ghost
                                              Pexp_tuple
                                              [
                                                expression (typing/parmatch.ml[264,8978+26]..[264,8978+31])
                                                  Pexp_ident "omega" (typing/parmatch.ml[264,8978+26]..[264,8978+31])
                                                expression (typing/parmatch.ml[264,8978+33]..[264,8978+35])
                                                  Pexp_ident "r2" (typing/parmatch.ml[264,8978+33]..[264,8978+35])
                                              ]
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[264,8978+37]..[264,8978+41])
                                          Pexp_ident "rem1" (typing/parmatch.ml[264,8978+37]..[264,8978+41])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[264,8978+42]..[264,8978+44])
                                          Pexp_ident "l2" (typing/parmatch.ml[264,8978+42]..[264,8978+44])
                                    ]
                                  Some
                                    expression (typing/parmatch.ml[265,9023+11]..[268,9157+43])
                                      Pexp_ifthenelse
                                      expression (typing/parmatch.ml[265,9023+14]..[265,9023+41])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[265,9023+27]..[265,9023+28])
                                          Pexp_ident ">" (typing/parmatch.ml[265,9023+27]..[265,9023+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[265,9023+14]..[265,9023+26])
                                              Pexp_field
                                              expression (typing/parmatch.ml[265,9023+14]..[265,9023+18])
                                                Pexp_ident "lbl1" (typing/parmatch.ml[265,9023+14]..[265,9023+18])
                                              "lbl_pos" (typing/parmatch.ml[265,9023+19]..[265,9023+26])
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[265,9023+29]..[265,9023+41])
                                              Pexp_field
                                              expression (typing/parmatch.ml[265,9023+29]..[265,9023+33])
                                                Pexp_ident "lbl2" (typing/parmatch.ml[265,9023+29]..[265,9023+33])
                                              "lbl_pos" (typing/parmatch.ml[265,9023+34]..[265,9023+41])
                                        ]
                                      expression (typing/parmatch.ml[266,9070+8]..[266,9070+44])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[266,9070+8]..[266,9070+15])
                                          Pexp_ident "combine" (typing/parmatch.ml[266,9070+8]..[266,9070+15])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[266,9070+16]..[266,9070+27])
                                              Pexp_construct "::" (typing/parmatch.ml[266,9070+22]..[266,9070+24])
                                              Some
                                                expression (typing/parmatch.ml[266,9070+17]..[266,9070+26]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/parmatch.ml[266,9070+17]..[266,9070+22])
                                                      Pexp_ident "omega" (typing/parmatch.ml[266,9070+17]..[266,9070+22])
                                                    expression (typing/parmatch.ml[266,9070+24]..[266,9070+26])
                                                      Pexp_ident "r1" (typing/parmatch.ml[266,9070+24]..[266,9070+26])
                                                  ]
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[266,9070+28]..[266,9070+36])
                                              Pexp_construct "::" (typing/parmatch.ml[266,9070+31]..[266,9070+33])
                                              Some
                                                expression (typing/parmatch.ml[266,9070+29]..[266,9070+35]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/parmatch.ml[266,9070+29]..[266,9070+31])
                                                      Pexp_ident "p2" (typing/parmatch.ml[266,9070+29]..[266,9070+31])
                                                    expression (typing/parmatch.ml[266,9070+33]..[266,9070+35])
                                                      Pexp_ident "r2" (typing/parmatch.ml[266,9070+33]..[266,9070+35])
                                                  ]
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[266,9070+37]..[266,9070+39])
                                              Pexp_ident "l1" (typing/parmatch.ml[266,9070+37]..[266,9070+39])
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[266,9070+40]..[266,9070+44])
                                              Pexp_ident "rem2" (typing/parmatch.ml[266,9070+40]..[266,9070+44])
                                        ]
                                      Some
                                        expression (typing/parmatch.ml[268,9157+8]..[268,9157+43])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[268,9157+8]..[268,9157+15])
                                            Pexp_ident "combine" (typing/parmatch.ml[268,9157+8]..[268,9157+15])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[268,9157+16]..[268,9157+24])
                                                Pexp_construct "::" (typing/parmatch.ml[268,9157+19]..[268,9157+21])
                                                Some
                                                  expression (typing/parmatch.ml[268,9157+17]..[268,9157+23]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/parmatch.ml[268,9157+17]..[268,9157+19])
                                                        Pexp_ident "p1" (typing/parmatch.ml[268,9157+17]..[268,9157+19])
                                                      expression (typing/parmatch.ml[268,9157+21]..[268,9157+23])
                                                        Pexp_ident "r1" (typing/parmatch.ml[268,9157+21]..[268,9157+23])
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[268,9157+25]..[268,9157+33])
                                                Pexp_construct "::" (typing/parmatch.ml[268,9157+28]..[268,9157+30])
                                                Some
                                                  expression (typing/parmatch.ml[268,9157+26]..[268,9157+32]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/parmatch.ml[268,9157+26]..[268,9157+28])
                                                        Pexp_ident "p2" (typing/parmatch.ml[268,9157+26]..[268,9157+28])
                                                      expression (typing/parmatch.ml[268,9157+30]..[268,9157+32])
                                                        Pexp_ident "r2" (typing/parmatch.ml[268,9157+30]..[268,9157+32])
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[268,9157+34]..[268,9157+38])
                                                Pexp_ident "rem1" (typing/parmatch.ml[268,9157+34]..[268,9157+38])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[268,9157+39]..[268,9157+43])
                                                Pexp_ident "rem2" (typing/parmatch.ml[268,9157+39]..[268,9157+43])
                                          ]
                            ]
              ]
              expression (typing/parmatch.ml[269,9204+2]..[269,9204+21])
                Pexp_apply
                expression (typing/parmatch.ml[269,9204+2]..[269,9204+9])
                  Pexp_ident "combine" (typing/parmatch.ml[269,9204+2]..[269,9204+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[269,9204+10]..[269,9204+12])
                      Pexp_construct "[]" (typing/parmatch.ml[269,9204+10]..[269,9204+12])
                      None
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[269,9204+13]..[269,9204+15])
                      Pexp_construct "[]" (typing/parmatch.ml[269,9204+13]..[269,9204+15])
                      None
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[269,9204+16]..[269,9204+18])
                      Pexp_ident "l1" (typing/parmatch.ml[269,9204+16]..[269,9204+18])
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[269,9204+19]..[269,9204+21])
                      Pexp_ident "l2" (typing/parmatch.ml[269,9204+19]..[269,9204+21])
                ]
    ]
  structure_item (typing/parmatch.ml[273,9229+0]..[320,10724+3])
    Pstr_module
    "Compat" (typing/parmatch.ml[273,9229+7]..[273,9229+13])
      module_expr (typing/parmatch.ml[274,9243+4]..[320,10724+3])
        Pmod_functor "Constr" (typing/parmatch.ml[274,9243+5]..[274,9243+11])
        module_type (typing/parmatch.ml[274,9243+12]..[279,9384+7])
          Pmty_signature
          [
            signature_item (typing/parmatch.ml[275,9259+6]..[278,9365+18])
              Psig_value
              value_description "equal" (typing/parmatch.ml[275,9259+10]..[275,9259+15]) (typing/parmatch.ml[275,9259+6]..[278,9365+18])
                core_type (typing/parmatch.ml[276,9277+10]..[278,9365+18])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/parmatch.ml[276,9277+10]..[276,9277+39])
                    Ptyp_constr "Types.constructor_description" (typing/parmatch.ml[276,9277+10]..[276,9277+39])
                    []
                  core_type (typing/parmatch.ml[277,9320+12]..[278,9365+18])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/parmatch.ml[277,9320+12]..[277,9320+41])
                      Ptyp_constr "Types.constructor_description" (typing/parmatch.ml[277,9320+12]..[277,9320+41])
                      []
                    core_type (typing/parmatch.ml[278,9365+14]..[278,9365+18])
                      Ptyp_constr "bool" (typing/parmatch.ml[278,9365+14]..[278,9365+18])
                      []
                []
          ]
        module_expr (typing/parmatch.ml[279,9384+11]..[320,10724+3])
          Pmod_structure
          [
            structure_item (typing/parmatch.ml[281,9403+2]..[318,10703+19])
              Pstr_value Rec
              [
                <def>
                  pattern (typing/parmatch.ml[281,9403+10]..[281,9403+16])
                    Ppat_var "compat" (typing/parmatch.ml[281,9403+10]..[281,9403+16])
                  expression (typing/parmatch.ml[281,9403+17]..[308,10443+17]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/parmatch.ml[281,9403+17]..[281,9403+18])
                      Ppat_var "p" (typing/parmatch.ml[281,9403+17]..[281,9403+18])
                    expression (typing/parmatch.ml[281,9403+19]..[308,10443+17]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/parmatch.ml[281,9403+19]..[281,9403+20])
                        Ppat_var "q" (typing/parmatch.ml[281,9403+19]..[281,9403+20])
                      expression (typing/parmatch.ml[281,9403+23]..[308,10443+17])
                        Pexp_match
                        expression (typing/parmatch.ml[281,9403+29]..[281,9403+50])
                          Pexp_tuple
                          [
                            expression (typing/parmatch.ml[281,9403+29]..[281,9403+39])
                              Pexp_field
                              expression (typing/parmatch.ml[281,9403+29]..[281,9403+30])
                                Pexp_ident "p" (typing/parmatch.ml[281,9403+29]..[281,9403+30])
                              "pat_desc" (typing/parmatch.ml[281,9403+31]..[281,9403+39])
                            expression (typing/parmatch.ml[281,9403+40]..[281,9403+50])
                              Pexp_field
                              expression (typing/parmatch.ml[281,9403+40]..[281,9403+41])
                                Pexp_ident "q" (typing/parmatch.ml[281,9403+40]..[281,9403+41])
                              "pat_desc" (typing/parmatch.ml[281,9403+42]..[281,9403+50])
                          ]
                        [
                          <case>
                            pattern (typing/parmatch.ml[283,9491+4]..[284,9521+29])
                              Ppat_or
                              pattern (typing/parmatch.ml[283,9491+4]..[283,9491+29])
                                Ppat_tuple
                                [
                                  pattern (typing/parmatch.ml[283,9491+5]..[283,9491+26])
                                    Ppat_or
                                    pattern (typing/parmatch.ml[283,9491+6]..[283,9491+14])
                                      Ppat_construct "Tpat_any" (typing/parmatch.ml[283,9491+6]..[283,9491+14])
                                      None
                                    pattern (typing/parmatch.ml[283,9491+15]..[283,9491+25])
                                      Ppat_construct "Tpat_var" (typing/parmatch.ml[283,9491+15]..[283,9491+23])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[283,9491+24]..[283,9491+25])
                                          Ppat_any
                                  pattern (typing/parmatch.ml[283,9491+27]..[283,9491+28])
                                    Ppat_any
                                ]
                              pattern (typing/parmatch.ml[284,9521+4]..[284,9521+29])
                                Ppat_tuple
                                [
                                  pattern (typing/parmatch.ml[284,9521+5]..[284,9521+6])
                                    Ppat_any
                                  pattern (typing/parmatch.ml[284,9521+7]..[284,9521+28])
                                    Ppat_or
                                    pattern (typing/parmatch.ml[284,9521+8]..[284,9521+16])
                                      Ppat_construct "Tpat_any" (typing/parmatch.ml[284,9521+8]..[284,9521+16])
                                      None
                                    pattern (typing/parmatch.ml[284,9521+17]..[284,9521+27])
                                      Ppat_construct "Tpat_var" (typing/parmatch.ml[284,9521+17]..[284,9521+25])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[284,9521+26]..[284,9521+27])
                                          Ppat_any
                                ]
                            expression (typing/parmatch.ml[284,9521+33]..[284,9521+37])
                              Pexp_construct "true" (typing/parmatch.ml[284,9521+33]..[284,9521+37])
                              None
                          <case>
                            pattern (typing/parmatch.ml[286,9586+4]..[286,9586+24])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[286,9586+4]..[286,9586+22])
                                  Ppat_construct "Tpat_alias" (typing/parmatch.ml[286,9586+4]..[286,9586+14])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[286,9586+15]..[286,9586+22])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[286,9586+16]..[286,9586+17])
                                          Ppat_var "p" (typing/parmatch.ml[286,9586+16]..[286,9586+17])
                                        pattern (typing/parmatch.ml[286,9586+18]..[286,9586+19])
                                          Ppat_any
                                        pattern (typing/parmatch.ml[286,9586+20]..[286,9586+21])
                                          Ppat_any
                                      ]
                                pattern (typing/parmatch.ml[286,9586+23]..[286,9586+24])
                                  Ppat_any
                              ]
                            expression (typing/parmatch.ml[286,9586+33]..[286,9586+43])
                              Pexp_apply
                              expression (typing/parmatch.ml[286,9586+33]..[286,9586+39])
                                Pexp_ident "compat" (typing/parmatch.ml[286,9586+33]..[286,9586+39])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[286,9586+40]..[286,9586+41])
                                    Pexp_ident "p" (typing/parmatch.ml[286,9586+40]..[286,9586+41])
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[286,9586+42]..[286,9586+43])
                                    Pexp_ident "q" (typing/parmatch.ml[286,9586+42]..[286,9586+43])
                              ]
                          <case>
                            pattern (typing/parmatch.ml[287,9630+4]..[287,9630+24])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[287,9630+4]..[287,9630+5])
                                  Ppat_any
                                pattern (typing/parmatch.ml[287,9630+6]..[287,9630+24])
                                  Ppat_construct "Tpat_alias" (typing/parmatch.ml[287,9630+6]..[287,9630+16])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[287,9630+17]..[287,9630+24])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[287,9630+18]..[287,9630+19])
                                          Ppat_var "q" (typing/parmatch.ml[287,9630+18]..[287,9630+19])
                                        pattern (typing/parmatch.ml[287,9630+20]..[287,9630+21])
                                          Ppat_any
                                        pattern (typing/parmatch.ml[287,9630+22]..[287,9630+23])
                                          Ppat_any
                                      ]
                              ]
                            expression (typing/parmatch.ml[287,9630+33]..[287,9630+43])
                              Pexp_apply
                              expression (typing/parmatch.ml[287,9630+33]..[287,9630+39])
                                Pexp_ident "compat" (typing/parmatch.ml[287,9630+33]..[287,9630+39])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[287,9630+40]..[287,9630+41])
                                    Pexp_ident "p" (typing/parmatch.ml[287,9630+40]..[287,9630+41])
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[287,9630+42]..[287,9630+43])
                                    Pexp_ident "q" (typing/parmatch.ml[287,9630+42]..[287,9630+43])
                              ]
                          <case>
                            pattern (typing/parmatch.ml[288,9674+4]..[288,9674+23])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[288,9674+4]..[288,9674+21])
                                  Ppat_construct "Tpat_or" (typing/parmatch.ml[288,9674+4]..[288,9674+11])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[288,9674+12]..[288,9674+21])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[288,9674+13]..[288,9674+15])
                                          Ppat_var "p1" (typing/parmatch.ml[288,9674+13]..[288,9674+15])
                                        pattern (typing/parmatch.ml[288,9674+16]..[288,9674+18])
                                          Ppat_var "p2" (typing/parmatch.ml[288,9674+16]..[288,9674+18])
                                        pattern (typing/parmatch.ml[288,9674+19]..[288,9674+20])
                                          Ppat_any
                                      ]
                                pattern (typing/parmatch.ml[288,9674+22]..[288,9674+23])
                                  Ppat_any
                              ]
                            expression (typing/parmatch.ml[289,9701+6]..[289,9701+34])
                              Pexp_apply
                              expression (typing/parmatch.ml[289,9701+19]..[289,9701+21])
                                Pexp_ident "||" (typing/parmatch.ml[289,9701+19]..[289,9701+21])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[289,9701+7]..[289,9701+18])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[289,9701+7]..[289,9701+13])
                                      Pexp_ident "compat" (typing/parmatch.ml[289,9701+7]..[289,9701+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[289,9701+14]..[289,9701+16])
                                          Pexp_ident "p1" (typing/parmatch.ml[289,9701+14]..[289,9701+16])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[289,9701+17]..[289,9701+18])
                                          Pexp_ident "q" (typing/parmatch.ml[289,9701+17]..[289,9701+18])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[289,9701+22]..[289,9701+33])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[289,9701+22]..[289,9701+28])
                                      Pexp_ident "compat" (typing/parmatch.ml[289,9701+22]..[289,9701+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[289,9701+29]..[289,9701+31])
                                          Pexp_ident "p2" (typing/parmatch.ml[289,9701+29]..[289,9701+31])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[289,9701+32]..[289,9701+33])
                                          Pexp_ident "q" (typing/parmatch.ml[289,9701+32]..[289,9701+33])
                                    ]
                              ]
                          <case>
                            pattern (typing/parmatch.ml[290,9736+4]..[290,9736+23])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[290,9736+4]..[290,9736+5])
                                  Ppat_any
                                pattern (typing/parmatch.ml[290,9736+6]..[290,9736+23])
                                  Ppat_construct "Tpat_or" (typing/parmatch.ml[290,9736+6]..[290,9736+13])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[290,9736+14]..[290,9736+23])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[290,9736+15]..[290,9736+17])
                                          Ppat_var "q1" (typing/parmatch.ml[290,9736+15]..[290,9736+17])
                                        pattern (typing/parmatch.ml[290,9736+18]..[290,9736+20])
                                          Ppat_var "q2" (typing/parmatch.ml[290,9736+18]..[290,9736+20])
                                        pattern (typing/parmatch.ml[290,9736+21]..[290,9736+22])
                                          Ppat_any
                                      ]
                              ]
                            expression (typing/parmatch.ml[291,9763+6]..[291,9763+34])
                              Pexp_apply
                              expression (typing/parmatch.ml[291,9763+19]..[291,9763+21])
                                Pexp_ident "||" (typing/parmatch.ml[291,9763+19]..[291,9763+21])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[291,9763+7]..[291,9763+18])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[291,9763+7]..[291,9763+13])
                                      Pexp_ident "compat" (typing/parmatch.ml[291,9763+7]..[291,9763+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[291,9763+14]..[291,9763+15])
                                          Pexp_ident "p" (typing/parmatch.ml[291,9763+14]..[291,9763+15])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[291,9763+16]..[291,9763+18])
                                          Pexp_ident "q1" (typing/parmatch.ml[291,9763+16]..[291,9763+18])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[291,9763+22]..[291,9763+33])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[291,9763+22]..[291,9763+28])
                                      Pexp_ident "compat" (typing/parmatch.ml[291,9763+22]..[291,9763+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[291,9763+29]..[291,9763+30])
                                          Pexp_ident "p" (typing/parmatch.ml[291,9763+29]..[291,9763+30])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[291,9763+31]..[291,9763+33])
                                          Pexp_ident "q2" (typing/parmatch.ml[291,9763+31]..[291,9763+33])
                                    ]
                              ]
                          <case>
                            pattern (typing/parmatch.ml[293,9850+4]..[293,9850+66])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[293,9850+4]..[293,9850+34])
                                  Ppat_construct "Tpat_construct" (typing/parmatch.ml[293,9850+4]..[293,9850+18])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[293,9850+19]..[293,9850+34])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[293,9850+20]..[293,9850+21])
                                          Ppat_any
                                        pattern (typing/parmatch.ml[293,9850+23]..[293,9850+25])
                                          Ppat_var "c1" (typing/parmatch.ml[293,9850+23]..[293,9850+25])
                                        pattern (typing/parmatch.ml[293,9850+27]..[293,9850+30])
                                          Ppat_var "ps1" (typing/parmatch.ml[293,9850+27]..[293,9850+30])
                                        pattern (typing/parmatch.ml[293,9850+32]..[293,9850+33])
                                          Ppat_any
                                      ]
                                pattern (typing/parmatch.ml[293,9850+36]..[293,9850+66])
                                  Ppat_construct "Tpat_construct" (typing/parmatch.ml[293,9850+36]..[293,9850+50])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[293,9850+51]..[293,9850+66])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[293,9850+52]..[293,9850+53])
                                          Ppat_any
                                        pattern (typing/parmatch.ml[293,9850+55]..[293,9850+57])
                                          Ppat_var "c2" (typing/parmatch.ml[293,9850+55]..[293,9850+57])
                                        pattern (typing/parmatch.ml[293,9850+59]..[293,9850+62])
                                          Ppat_var "ps2" (typing/parmatch.ml[293,9850+59]..[293,9850+62])
                                        pattern (typing/parmatch.ml[293,9850+64]..[293,9850+65])
                                          Ppat_any
                                      ]
                              ]
                            expression (typing/parmatch.ml[294,9920+6]..[294,9920+43])
                              Pexp_apply
                              expression (typing/parmatch.ml[294,9920+25]..[294,9920+27])
                                Pexp_ident "&&" (typing/parmatch.ml[294,9920+25]..[294,9920+27])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[294,9920+6]..[294,9920+24])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[294,9920+6]..[294,9920+18])
                                      Pexp_ident "Constr.equal" (typing/parmatch.ml[294,9920+6]..[294,9920+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[294,9920+19]..[294,9920+21])
                                          Pexp_ident "c1" (typing/parmatch.ml[294,9920+19]..[294,9920+21])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[294,9920+22]..[294,9920+24])
                                          Pexp_ident "c2" (typing/parmatch.ml[294,9920+22]..[294,9920+24])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[294,9920+28]..[294,9920+43])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[294,9920+28]..[294,9920+35])
                                      Pexp_ident "compats" (typing/parmatch.ml[294,9920+28]..[294,9920+35])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[294,9920+36]..[294,9920+39])
                                          Pexp_ident "ps1" (typing/parmatch.ml[294,9920+36]..[294,9920+39])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[294,9920+40]..[294,9920+43])
                                          Pexp_ident "ps2" (typing/parmatch.ml[294,9920+40]..[294,9920+43])
                                    ]
                              ]
                          <case>
                            pattern (typing/parmatch.ml[296,9990+4]..[296,9990+51])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[296,9990+4]..[296,9990+27])
                                  Ppat_construct "Tpat_variant" (typing/parmatch.ml[296,9990+4]..[296,9990+16])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[296,9990+16]..[296,9990+27])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[296,9990+17]..[296,9990+19])
                                          Ppat_var "l1" (typing/parmatch.ml[296,9990+17]..[296,9990+19])
                                        pattern (typing/parmatch.ml[296,9990+20]..[296,9990+23])
                                          Ppat_var "op1" (typing/parmatch.ml[296,9990+20]..[296,9990+23])
                                        pattern (typing/parmatch.ml[296,9990+25]..[296,9990+26])
                                          Ppat_any
                                      ]
                                pattern (typing/parmatch.ml[296,9990+29]..[296,9990+51])
                                  Ppat_construct "Tpat_variant" (typing/parmatch.ml[296,9990+29]..[296,9990+41])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[296,9990+41]..[296,9990+51])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[296,9990+42]..[296,9990+44])
                                          Ppat_var "l2" (typing/parmatch.ml[296,9990+42]..[296,9990+44])
                                        pattern (typing/parmatch.ml[296,9990+45]..[296,9990+48])
                                          Ppat_var "op2" (typing/parmatch.ml[296,9990+45]..[296,9990+48])
                                        pattern (typing/parmatch.ml[296,9990+49]..[296,9990+50])
                                          Ppat_any
                                      ]
                              ]
                            expression (typing/parmatch.ml[297,10045+6]..[297,10045+30])
                              Pexp_apply
                              expression (typing/parmatch.ml[297,10045+12]..[297,10045+14])
                                Pexp_ident "&&" (typing/parmatch.ml[297,10045+12]..[297,10045+14])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[297,10045+6]..[297,10045+11])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[297,10045+8]..[297,10045+9])
                                      Pexp_ident "=" (typing/parmatch.ml[297,10045+8]..[297,10045+9])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[297,10045+6]..[297,10045+8])
                                          Pexp_ident "l1" (typing/parmatch.ml[297,10045+6]..[297,10045+8])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[297,10045+9]..[297,10045+11])
                                          Pexp_ident "l2" (typing/parmatch.ml[297,10045+9]..[297,10045+11])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[297,10045+15]..[297,10045+30])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[297,10045+15]..[297,10045+22])
                                      Pexp_ident "ocompat" (typing/parmatch.ml[297,10045+15]..[297,10045+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[297,10045+23]..[297,10045+26])
                                          Pexp_ident "op1" (typing/parmatch.ml[297,10045+23]..[297,10045+26])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[297,10045+27]..[297,10045+30])
                                          Pexp_ident "op2" (typing/parmatch.ml[297,10045+27]..[297,10045+30])
                                    ]
                              ]
                          <case>
                            pattern (typing/parmatch.ml[298,10076+4]..[298,10076+38])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[298,10076+4]..[298,10076+20])
                                  Ppat_construct "Tpat_constant" (typing/parmatch.ml[298,10076+4]..[298,10076+17])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[298,10076+18]..[298,10076+20])
                                      Ppat_var "c1" (typing/parmatch.ml[298,10076+18]..[298,10076+20])
                                pattern (typing/parmatch.ml[298,10076+22]..[298,10076+38])
                                  Ppat_construct "Tpat_constant" (typing/parmatch.ml[298,10076+22]..[298,10076+35])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[298,10076+36]..[298,10076+38])
                                      Ppat_var "c2" (typing/parmatch.ml[298,10076+36]..[298,10076+38])
                              ]
                            expression (typing/parmatch.ml[299,10118+6]..[299,10118+29])
                              Pexp_apply
                              expression (typing/parmatch.ml[299,10118+26]..[299,10118+27])
                                Pexp_ident "=" (typing/parmatch.ml[299,10118+26]..[299,10118+27])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[299,10118+6]..[299,10118+25])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[299,10118+6]..[299,10118+19])
                                      Pexp_ident "const_compare" (typing/parmatch.ml[299,10118+6]..[299,10118+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[299,10118+20]..[299,10118+22])
                                          Pexp_ident "c1" (typing/parmatch.ml[299,10118+20]..[299,10118+22])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[299,10118+23]..[299,10118+25])
                                          Pexp_ident "c2" (typing/parmatch.ml[299,10118+23]..[299,10118+25])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[299,10118+28]..[299,10118+29])
                                    Pexp_constant PConst_int (0,None)
                              ]
                          <case>
                            pattern (typing/parmatch.ml[300,10148+4]..[300,10148+32])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[300,10148+4]..[300,10148+17])
                                  Ppat_construct "Tpat_tuple" (typing/parmatch.ml[300,10148+4]..[300,10148+14])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[300,10148+15]..[300,10148+17])
                                      Ppat_var "ps" (typing/parmatch.ml[300,10148+15]..[300,10148+17])
                                pattern (typing/parmatch.ml[300,10148+19]..[300,10148+32])
                                  Ppat_construct "Tpat_tuple" (typing/parmatch.ml[300,10148+19]..[300,10148+29])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[300,10148+30]..[300,10148+32])
                                      Ppat_var "qs" (typing/parmatch.ml[300,10148+30]..[300,10148+32])
                              ]
                            expression (typing/parmatch.ml[300,10148+36]..[300,10148+49])
                              Pexp_apply
                              expression (typing/parmatch.ml[300,10148+36]..[300,10148+43])
                                Pexp_ident "compats" (typing/parmatch.ml[300,10148+36]..[300,10148+43])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[300,10148+44]..[300,10148+46])
                                    Pexp_ident "ps" (typing/parmatch.ml[300,10148+44]..[300,10148+46])
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[300,10148+47]..[300,10148+49])
                                    Pexp_ident "qs" (typing/parmatch.ml[300,10148+47]..[300,10148+49])
                              ]
                          <case>
                            pattern (typing/parmatch.ml[301,10198+4]..[301,10198+28])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[301,10198+4]..[301,10198+15])
                                  Ppat_construct "Tpat_lazy" (typing/parmatch.ml[301,10198+4]..[301,10198+13])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[301,10198+14]..[301,10198+15])
                                      Ppat_var "p" (typing/parmatch.ml[301,10198+14]..[301,10198+15])
                                pattern (typing/parmatch.ml[301,10198+17]..[301,10198+28])
                                  Ppat_construct "Tpat_lazy" (typing/parmatch.ml[301,10198+17]..[301,10198+26])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[301,10198+27]..[301,10198+28])
                                      Ppat_var "q" (typing/parmatch.ml[301,10198+27]..[301,10198+28])
                              ]
                            expression (typing/parmatch.ml[301,10198+32]..[301,10198+42])
                              Pexp_apply
                              expression (typing/parmatch.ml[301,10198+32]..[301,10198+38])
                                Pexp_ident "compat" (typing/parmatch.ml[301,10198+32]..[301,10198+38])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[301,10198+39]..[301,10198+40])
                                    Pexp_ident "p" (typing/parmatch.ml[301,10198+39]..[301,10198+40])
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[301,10198+41]..[301,10198+42])
                                    Pexp_ident "q" (typing/parmatch.ml[301,10198+41]..[301,10198+42])
                              ]
                          <case>
                            pattern (typing/parmatch.ml[302,10241+4]..[302,10241+41])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[302,10241+4]..[302,10241+22])
                                  Ppat_construct "Tpat_record" (typing/parmatch.ml[302,10241+4]..[302,10241+15])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[302,10241+16]..[302,10241+22])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[302,10241+17]..[302,10241+19])
                                          Ppat_var "l1" (typing/parmatch.ml[302,10241+17]..[302,10241+19])
                                        pattern (typing/parmatch.ml[302,10241+20]..[302,10241+21])
                                          Ppat_any
                                      ]
                                pattern (typing/parmatch.ml[302,10241+23]..[302,10241+41])
                                  Ppat_construct "Tpat_record" (typing/parmatch.ml[302,10241+23]..[302,10241+34])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[302,10241+35]..[302,10241+41])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[302,10241+36]..[302,10241+38])
                                          Ppat_var "l2" (typing/parmatch.ml[302,10241+36]..[302,10241+38])
                                        pattern (typing/parmatch.ml[302,10241+39]..[302,10241+40])
                                          Ppat_any
                                      ]
                              ]
                            expression (typing/parmatch.ml[303,10286+6]..[304,10326+19])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/parmatch.ml[303,10286+10]..[303,10286+15])
                                    Ppat_tuple
                                    [
                                      pattern (typing/parmatch.ml[303,10286+10]..[303,10286+12])
                                        Ppat_var "ps" (typing/parmatch.ml[303,10286+10]..[303,10286+12])
                                      pattern (typing/parmatch.ml[303,10286+13]..[303,10286+15])
                                        Ppat_var "qs" (typing/parmatch.ml[303,10286+13]..[303,10286+15])
                                    ]
                                  expression (typing/parmatch.ml[303,10286+18]..[303,10286+36])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[303,10286+18]..[303,10286+30])
                                      Pexp_ident "records_args" (typing/parmatch.ml[303,10286+18]..[303,10286+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[303,10286+31]..[303,10286+33])
                                          Pexp_ident "l1" (typing/parmatch.ml[303,10286+31]..[303,10286+33])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[303,10286+34]..[303,10286+36])
                                          Pexp_ident "l2" (typing/parmatch.ml[303,10286+34]..[303,10286+36])
                                    ]
                              ]
                              expression (typing/parmatch.ml[304,10326+6]..[304,10326+19])
                                Pexp_apply
                                expression (typing/parmatch.ml[304,10326+6]..[304,10326+13])
                                  Pexp_ident "compats" (typing/parmatch.ml[304,10326+6]..[304,10326+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[304,10326+14]..[304,10326+16])
                                      Pexp_ident "ps" (typing/parmatch.ml[304,10326+14]..[304,10326+16])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[304,10326+17]..[304,10326+19])
                                      Pexp_ident "qs" (typing/parmatch.ml[304,10326+17]..[304,10326+19])
                                ]
                          <case>
                            pattern (typing/parmatch.ml[305,10346+4]..[305,10346+32])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[305,10346+4]..[305,10346+17])
                                  Ppat_construct "Tpat_array" (typing/parmatch.ml[305,10346+4]..[305,10346+14])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[305,10346+15]..[305,10346+17])
                                      Ppat_var "ps" (typing/parmatch.ml[305,10346+15]..[305,10346+17])
                                pattern (typing/parmatch.ml[305,10346+19]..[305,10346+32])
                                  Ppat_construct "Tpat_array" (typing/parmatch.ml[305,10346+19]..[305,10346+29])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[305,10346+30]..[305,10346+32])
                                      Ppat_var "qs" (typing/parmatch.ml[305,10346+30]..[305,10346+32])
                              ]
                            expression (typing/parmatch.ml[306,10382+6]..[307,10423+19])
                              Pexp_apply
                              expression (typing/parmatch.ml[306,10382+38]..[306,10382+40])
                                Pexp_ident "&&" (typing/parmatch.ml[306,10382+38]..[306,10382+40])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[306,10382+6]..[306,10382+37])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[306,10382+21]..[306,10382+22])
                                      Pexp_ident "=" (typing/parmatch.ml[306,10382+21]..[306,10382+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[306,10382+6]..[306,10382+20])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[306,10382+6]..[306,10382+17])
                                            Pexp_ident "List.length" (typing/parmatch.ml[306,10382+6]..[306,10382+17])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[306,10382+18]..[306,10382+20])
                                                Pexp_ident "ps" (typing/parmatch.ml[306,10382+18]..[306,10382+20])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[306,10382+23]..[306,10382+37])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[306,10382+23]..[306,10382+34])
                                            Pexp_ident "List.length" (typing/parmatch.ml[306,10382+23]..[306,10382+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[306,10382+35]..[306,10382+37])
                                                Pexp_ident "qs" (typing/parmatch.ml[306,10382+35]..[306,10382+37])
                                          ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[307,10423+6]..[307,10423+19])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[307,10423+6]..[307,10423+13])
                                      Pexp_ident "compats" (typing/parmatch.ml[307,10423+6]..[307,10423+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[307,10423+14]..[307,10423+16])
                                          Pexp_ident "ps" (typing/parmatch.ml[307,10423+14]..[307,10423+16])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[307,10423+17]..[307,10423+19])
                                          Pexp_ident "qs" (typing/parmatch.ml[307,10423+17]..[307,10423+19])
                                    ]
                              ]
                          <case>
                            pattern (typing/parmatch.ml[308,10443+4]..[308,10443+7])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[308,10443+4]..[308,10443+5])
                                  Ppat_any
                                pattern (typing/parmatch.ml[308,10443+6]..[308,10443+7])
                                  Ppat_any
                              ]
                            expression (typing/parmatch.ml[308,10443+12]..[308,10443+17])
                              Pexp_construct "false" (typing/parmatch.ml[308,10443+12]..[308,10443+17])
                              None
                        ]
                <def>
                  pattern (typing/parmatch.ml[310,10462+6]..[310,10462+13])
                    Ppat_var "ocompat" (typing/parmatch.ml[310,10462+6]..[310,10462+13])
                  expression (typing/parmatch.ml[310,10462+14]..[313,10555+40]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/parmatch.ml[310,10462+14]..[310,10462+16])
                      Ppat_var "op" (typing/parmatch.ml[310,10462+14]..[310,10462+16])
                    expression (typing/parmatch.ml[310,10462+17]..[313,10555+40]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/parmatch.ml[310,10462+17]..[310,10462+19])
                        Ppat_var "oq" (typing/parmatch.ml[310,10462+17]..[310,10462+19])
                      expression (typing/parmatch.ml[310,10462+22]..[313,10555+40])
                        Pexp_match
                        expression (typing/parmatch.ml[310,10462+28]..[310,10462+33])
                          Pexp_tuple
                          [
                            expression (typing/parmatch.ml[310,10462+28]..[310,10462+30])
                              Pexp_ident "op" (typing/parmatch.ml[310,10462+28]..[310,10462+30])
                            expression (typing/parmatch.ml[310,10462+31]..[310,10462+33])
                              Pexp_ident "oq" (typing/parmatch.ml[310,10462+31]..[310,10462+33])
                          ]
                        [
                          <case>
                            pattern (typing/parmatch.ml[311,10501+4]..[311,10501+13])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[311,10501+4]..[311,10501+8])
                                  Ppat_construct "None" (typing/parmatch.ml[311,10501+4]..[311,10501+8])
                                  None
                                pattern (typing/parmatch.ml[311,10501+9]..[311,10501+13])
                                  Ppat_construct "None" (typing/parmatch.ml[311,10501+9]..[311,10501+13])
                                  None
                              ]
                            expression (typing/parmatch.ml[311,10501+17]..[311,10501+21])
                              Pexp_construct "true" (typing/parmatch.ml[311,10501+17]..[311,10501+21])
                              None
                          <case>
                            pattern (typing/parmatch.ml[312,10523+4]..[312,10523+17])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[312,10523+4]..[312,10523+10])
                                  Ppat_construct "Some" (typing/parmatch.ml[312,10523+4]..[312,10523+8])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[312,10523+9]..[312,10523+10])
                                      Ppat_var "p" (typing/parmatch.ml[312,10523+9]..[312,10523+10])
                                pattern (typing/parmatch.ml[312,10523+11]..[312,10523+17])
                                  Ppat_construct "Some" (typing/parmatch.ml[312,10523+11]..[312,10523+15])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[312,10523+16]..[312,10523+17])
                                      Ppat_var "q" (typing/parmatch.ml[312,10523+16]..[312,10523+17])
                              ]
                            expression (typing/parmatch.ml[312,10523+21]..[312,10523+31])
                              Pexp_apply
                              expression (typing/parmatch.ml[312,10523+21]..[312,10523+27])
                                Pexp_ident "compat" (typing/parmatch.ml[312,10523+21]..[312,10523+27])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[312,10523+28]..[312,10523+29])
                                    Pexp_ident "p" (typing/parmatch.ml[312,10523+28]..[312,10523+29])
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[312,10523+30]..[312,10523+31])
                                    Pexp_ident "q" (typing/parmatch.ml[312,10523+30]..[312,10523+31])
                              ]
                          <case>
                            pattern (typing/parmatch.ml[313,10555+4]..[313,10555+31])
                              Ppat_or
                              pattern (typing/parmatch.ml[313,10555+4]..[313,10555+17])
                                Ppat_tuple
                                [
                                  pattern (typing/parmatch.ml[313,10555+5]..[313,10555+9])
                                    Ppat_construct "None" (typing/parmatch.ml[313,10555+5]..[313,10555+9])
                                    None
                                  pattern (typing/parmatch.ml[313,10555+10]..[313,10555+16])
                                    Ppat_construct "Some" (typing/parmatch.ml[313,10555+10]..[313,10555+14])
                                    Some
                                      []
                                      pattern (typing/parmatch.ml[313,10555+15]..[313,10555+16])
                                        Ppat_any
                                ]
                              pattern (typing/parmatch.ml[313,10555+18]..[313,10555+31])
                                Ppat_tuple
                                [
                                  pattern (typing/parmatch.ml[313,10555+19]..[313,10555+25])
                                    Ppat_construct "Some" (typing/parmatch.ml[313,10555+19]..[313,10555+23])
                                    Some
                                      []
                                      pattern (typing/parmatch.ml[313,10555+24]..[313,10555+25])
                                        Ppat_any
                                  pattern (typing/parmatch.ml[313,10555+26]..[313,10555+30])
                                    Ppat_construct "None" (typing/parmatch.ml[313,10555+26]..[313,10555+30])
                                    None
                                ]
                            expression (typing/parmatch.ml[313,10555+35]..[313,10555+40])
                              Pexp_construct "false" (typing/parmatch.ml[313,10555+35]..[313,10555+40])
                              None
                        ]
                <def>
                  pattern (typing/parmatch.ml[315,10597+6]..[315,10597+13])
                    Ppat_var "compats" (typing/parmatch.ml[315,10597+6]..[315,10597+13])
                  expression (typing/parmatch.ml[315,10597+14]..[318,10703+19]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/parmatch.ml[315,10597+14]..[315,10597+16])
                      Ppat_var "ps" (typing/parmatch.ml[315,10597+14]..[315,10597+16])
                    expression (typing/parmatch.ml[315,10597+17]..[318,10703+19]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/parmatch.ml[315,10597+17]..[315,10597+19])
                        Ppat_var "qs" (typing/parmatch.ml[315,10597+17]..[315,10597+19])
                      expression (typing/parmatch.ml[315,10597+22]..[318,10703+19])
                        Pexp_match
                        expression (typing/parmatch.ml[315,10597+28]..[315,10597+33])
                          Pexp_tuple
                          [
                            expression (typing/parmatch.ml[315,10597+28]..[315,10597+30])
                              Pexp_ident "ps" (typing/parmatch.ml[315,10597+28]..[315,10597+30])
                            expression (typing/parmatch.ml[315,10597+31]..[315,10597+33])
                              Pexp_ident "qs" (typing/parmatch.ml[315,10597+31]..[315,10597+33])
                          ]
                        [
                          <case>
                            pattern (typing/parmatch.ml[316,10636+4]..[316,10636+10])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[316,10636+4]..[316,10636+6])
                                  Ppat_construct "[]" (typing/parmatch.ml[316,10636+4]..[316,10636+6])
                                  None
                                pattern (typing/parmatch.ml[316,10636+8]..[316,10636+10])
                                  Ppat_construct "[]" (typing/parmatch.ml[316,10636+8]..[316,10636+10])
                                  None
                              ]
                            expression (typing/parmatch.ml[316,10636+14]..[316,10636+18])
                              Pexp_construct "true" (typing/parmatch.ml[316,10636+14]..[316,10636+18])
                              None
                          <case>
                            pattern (typing/parmatch.ml[317,10655+4]..[317,10655+16])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[317,10655+4]..[317,10655+9])
                                  Ppat_construct "::" (typing/parmatch.ml[317,10655+5]..[317,10655+7])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[317,10655+4]..[317,10655+9]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[317,10655+4]..[317,10655+5])
                                          Ppat_var "p" (typing/parmatch.ml[317,10655+4]..[317,10655+5])
                                        pattern (typing/parmatch.ml[317,10655+7]..[317,10655+9])
                                          Ppat_var "ps" (typing/parmatch.ml[317,10655+7]..[317,10655+9])
                                      ]
                                pattern (typing/parmatch.ml[317,10655+11]..[317,10655+16])
                                  Ppat_construct "::" (typing/parmatch.ml[317,10655+12]..[317,10655+14])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[317,10655+11]..[317,10655+16]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[317,10655+11]..[317,10655+12])
                                          Ppat_var "q" (typing/parmatch.ml[317,10655+11]..[317,10655+12])
                                        pattern (typing/parmatch.ml[317,10655+14]..[317,10655+16])
                                          Ppat_var "qs" (typing/parmatch.ml[317,10655+14]..[317,10655+16])
                                      ]
                              ]
                            expression (typing/parmatch.ml[317,10655+20]..[317,10655+47])
                              Pexp_apply
                              expression (typing/parmatch.ml[317,10655+31]..[317,10655+33])
                                Pexp_ident "&&" (typing/parmatch.ml[317,10655+31]..[317,10655+33])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[317,10655+20]..[317,10655+30])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[317,10655+20]..[317,10655+26])
                                      Pexp_ident "compat" (typing/parmatch.ml[317,10655+20]..[317,10655+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[317,10655+27]..[317,10655+28])
                                          Pexp_ident "p" (typing/parmatch.ml[317,10655+27]..[317,10655+28])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[317,10655+29]..[317,10655+30])
                                          Pexp_ident "q" (typing/parmatch.ml[317,10655+29]..[317,10655+30])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[317,10655+34]..[317,10655+47])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[317,10655+34]..[317,10655+41])
                                      Pexp_ident "compats" (typing/parmatch.ml[317,10655+34]..[317,10655+41])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[317,10655+42]..[317,10655+44])
                                          Pexp_ident "ps" (typing/parmatch.ml[317,10655+42]..[317,10655+44])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[317,10655+45]..[317,10655+47])
                                          Pexp_ident "qs" (typing/parmatch.ml[317,10655+45]..[317,10655+47])
                                    ]
                              ]
                          <case>
                            pattern (typing/parmatch.ml[318,10703+4]..[318,10703+7])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[318,10703+4]..[318,10703+5])
                                  Ppat_any
                                pattern (typing/parmatch.ml[318,10703+6]..[318,10703+7])
                                  Ppat_any
                              ]
                            expression (typing/parmatch.ml[318,10703+14]..[318,10703+19])
                              Pexp_construct "false" (typing/parmatch.ml[318,10703+14]..[318,10703+19])
                              None
                        ]
              ]
          ]
  structure_item (typing/parmatch.ml[322,10729+0]..[326,10840+8])
    Pstr_module
    "SyntacticCompat" (typing/parmatch.ml[322,10729+7]..[322,10729+22])
      module_expr (typing/parmatch.ml[323,10754+2]..[326,10840+8])
        Pmod_apply
        module_expr (typing/parmatch.ml[323,10754+2]..[323,10754+8])
          Pmod_ident "Compat" (typing/parmatch.ml[323,10754+2]..[323,10754+8])
        module_expr (typing/parmatch.ml[324,10763+5]..[326,10840+7])
          Pmod_structure
          [
            structure_item (typing/parmatch.ml[325,10775+6]..[325,10775+64])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/parmatch.ml[325,10775+10]..[325,10775+15])
                    Ppat_var "equal" (typing/parmatch.ml[325,10775+10]..[325,10775+15])
                  expression (typing/parmatch.ml[325,10775+16]..[325,10775+64]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/parmatch.ml[325,10775+16]..[325,10775+18])
                      Ppat_var "c1" (typing/parmatch.ml[325,10775+16]..[325,10775+18])
                    expression (typing/parmatch.ml[325,10775+19]..[325,10775+64]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/parmatch.ml[325,10775+19]..[325,10775+21])
                        Ppat_var "c2" (typing/parmatch.ml[325,10775+19]..[325,10775+21])
                      expression (typing/parmatch.ml[325,10775+25]..[325,10775+64])
                        Pexp_apply
                        expression (typing/parmatch.ml[325,10775+25]..[325,10775+40])
                          Pexp_ident "Types.equal_tag" (typing/parmatch.ml[325,10775+25]..[325,10775+40])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[325,10775+41]..[325,10775+52])
                              Pexp_field
                              expression (typing/parmatch.ml[325,10775+41]..[325,10775+43])
                                Pexp_ident "c1" (typing/parmatch.ml[325,10775+41]..[325,10775+43])
                              "cstr_tag" (typing/parmatch.ml[325,10775+44]..[325,10775+52])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[325,10775+53]..[325,10775+64])
                              Pexp_field
                              expression (typing/parmatch.ml[325,10775+53]..[325,10775+55])
                                Pexp_ident "c2" (typing/parmatch.ml[325,10775+53]..[325,10775+55])
                              "cstr_tag" (typing/parmatch.ml[325,10775+56]..[325,10775+64])
                        ]
              ]
          ]
  structure_item (typing/parmatch.ml[328,10850+0]..[329,10887+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[328,10850+4]..[328,10850+10])
          Ppat_var "compat" (typing/parmatch.ml[328,10850+4]..[328,10850+10])
        expression (typing/parmatch.ml[328,10850+14]..[328,10850+36])
          Pexp_ident "SyntacticCompat.compat" (typing/parmatch.ml[328,10850+14]..[328,10850+36])
      <def>
        pattern (typing/parmatch.ml[329,10887+4]..[329,10887+11])
          Ppat_var "compats" (typing/parmatch.ml[329,10887+4]..[329,10887+11])
        expression (typing/parmatch.ml[329,10887+14]..[329,10887+37])
          Pexp_ident "SyntacticCompat.compats" (typing/parmatch.ml[329,10887+14]..[329,10887+37])
    ]
  structure_item (typing/parmatch.ml[334,11026+0]..[334,11026+15])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (typing/parmatch.ml[334,11026+0]..[334,11026+15])
          pext_name = "Empty"
          pext_kind =
            Pext_decl
              []
              None
  structure_item (typing/parmatch.ml[341,11234+0]..[343,11302+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[341,11234+4]..[341,11234+14])
          Ppat_var "clean_copy" (typing/parmatch.ml[341,11234+4]..[341,11234+14])
        expression (typing/parmatch.ml[341,11234+15]..[343,11302+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[341,11234+15]..[341,11234+17])
            Ppat_var "ty" (typing/parmatch.ml[341,11234+15]..[341,11234+17])
          expression (typing/parmatch.ml[342,11254+2]..[343,11302+40])
            Pexp_ifthenelse
            expression (typing/parmatch.ml[342,11254+5]..[342,11254+39])
              Pexp_apply
              expression (typing/parmatch.ml[342,11254+18]..[342,11254+19])
                Pexp_ident "=" (typing/parmatch.ml[342,11254+18]..[342,11254+19])
              [
                <arg>
                Nolabel
                  expression (typing/parmatch.ml[342,11254+5]..[342,11254+17])
                    Pexp_apply
                    expression (typing/parmatch.ml[342,11254+5]..[342,11254+14])
                      Pexp_ident "get_level" (typing/parmatch.ml[342,11254+5]..[342,11254+14])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[342,11254+15]..[342,11254+17])
                          Pexp_ident "ty" (typing/parmatch.ml[342,11254+15]..[342,11254+17])
                    ]
                <arg>
                Nolabel
                  expression (typing/parmatch.ml[342,11254+20]..[342,11254+39])
                    Pexp_ident "Btype.generic_level" (typing/parmatch.ml[342,11254+20]..[342,11254+39])
              ]
            expression (typing/parmatch.ml[342,11254+45]..[342,11254+47])
              Pexp_ident "ty" (typing/parmatch.ml[342,11254+45]..[342,11254+47])
            Some
              expression (typing/parmatch.ml[343,11302+7]..[343,11302+40])
                Pexp_apply
                expression (typing/parmatch.ml[343,11302+7]..[343,11302+22])
                  Pexp_ident "Subst.type_expr" (typing/parmatch.ml[343,11302+7]..[343,11302+22])
                [
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[343,11302+23]..[343,11302+37])
                      Pexp_ident "Subst.identity" (typing/parmatch.ml[343,11302+23]..[343,11302+37])
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[343,11302+38]..[343,11302+40])
                      Pexp_ident "ty" (typing/parmatch.ml[343,11302+38]..[343,11302+40])
                ]
    ]
  structure_item (typing/parmatch.ml[345,11344+0]..[349,11493+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[345,11344+4]..[345,11344+29])
          Ppat_var "get_constructor_type_path" (typing/parmatch.ml[345,11344+4]..[345,11344+29])
        expression (typing/parmatch.ml[345,11344+30]..[349,11493+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[345,11344+30]..[345,11344+32])
            Ppat_var "ty" (typing/parmatch.ml[345,11344+30]..[345,11344+32])
          expression (typing/parmatch.ml[345,11344+33]..[349,11493+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[345,11344+33]..[345,11344+37])
              Ppat_var "tenv" (typing/parmatch.ml[345,11344+33]..[345,11344+37])
            expression (typing/parmatch.ml[346,11384+2]..[349,11493+21])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/parmatch.ml[346,11384+6]..[346,11384+8])
                    Ppat_var "ty" (typing/parmatch.ml[346,11384+6]..[346,11384+8])
                  expression (typing/parmatch.ml[346,11384+11]..[346,11384+49])
                    Pexp_apply
                    expression (typing/parmatch.ml[346,11384+11]..[346,11384+28])
                      Pexp_ident "Ctype.expand_head" (typing/parmatch.ml[346,11384+11]..[346,11384+28])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[346,11384+29]..[346,11384+33])
                          Pexp_ident "tenv" (typing/parmatch.ml[346,11384+29]..[346,11384+33])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[346,11384+34]..[346,11384+49])
                          Pexp_apply
                          expression (typing/parmatch.ml[346,11384+35]..[346,11384+45])
                            Pexp_ident "clean_copy" (typing/parmatch.ml[346,11384+35]..[346,11384+45])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[346,11384+46]..[346,11384+48])
                                Pexp_ident "ty" (typing/parmatch.ml[346,11384+46]..[346,11384+48])
                          ]
                    ]
              ]
              expression (typing/parmatch.ml[347,11437+2]..[349,11493+21])
                Pexp_match
                expression (typing/parmatch.ml[347,11437+8]..[347,11437+19])
                  Pexp_apply
                  expression (typing/parmatch.ml[347,11437+8]..[347,11437+16])
                    Pexp_ident "get_desc" (typing/parmatch.ml[347,11437+8]..[347,11437+16])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[347,11437+17]..[347,11437+19])
                        Pexp_ident "ty" (typing/parmatch.ml[347,11437+17]..[347,11437+19])
                  ]
                [
                  <case>
                    pattern (typing/parmatch.ml[348,11462+4]..[348,11462+22])
                      Ppat_construct "Tconstr" (typing/parmatch.ml[348,11462+4]..[348,11462+11])
                      Some
                        []
                        pattern (typing/parmatch.ml[348,11462+12]..[348,11462+22])
                          Ppat_tuple
                          [
                            pattern (typing/parmatch.ml[348,11462+13]..[348,11462+17])
                              Ppat_var "path" (typing/parmatch.ml[348,11462+13]..[348,11462+17])
                            pattern (typing/parmatch.ml[348,11462+18]..[348,11462+19])
                              Ppat_any
                            pattern (typing/parmatch.ml[348,11462+20]..[348,11462+21])
                              Ppat_any
                          ]
                    expression (typing/parmatch.ml[348,11462+26]..[348,11462+30])
                      Pexp_ident "path" (typing/parmatch.ml[348,11462+26]..[348,11462+30])
                  <case>
                    pattern (typing/parmatch.ml[349,11493+4]..[349,11493+5])
                      Ppat_any
                    expression (typing/parmatch.ml[349,11493+9]..[349,11493+21])
                      Pexp_assert
                      expression (typing/parmatch.ml[349,11493+16]..[349,11493+21])
                        Pexp_construct "false" (typing/parmatch.ml[349,11493+16]..[349,11493+21])
                        None
                ]
    ]
  structure_item (typing/parmatch.ml[356,11635+0]..[369,12067+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[356,11635+4]..[356,11635+16])
          Ppat_var "simple_match" (typing/parmatch.ml[356,11635+4]..[356,11635+16])
        expression (typing/parmatch.ml[356,11635+17]..[369,12067+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[356,11635+17]..[356,11635+18])
            Ppat_var "d" (typing/parmatch.ml[356,11635+17]..[356,11635+18])
          expression (typing/parmatch.ml[356,11635+19]..[369,12067+17]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[356,11635+19]..[356,11635+20])
              Ppat_var "h" (typing/parmatch.ml[356,11635+19]..[356,11635+20])
            expression (typing/parmatch.ml[357,11658+2]..[369,12067+17])
              Pexp_open Fresh
              module_expr (typing/parmatch.ml[357,11658+11]..[357,11658+24])
                Pmod_ident "Patterns.Head" (typing/parmatch.ml[357,11658+11]..[357,11658+24])
              expression (typing/parmatch.ml[358,11686+2]..[369,12067+17])
                Pexp_match
                expression (typing/parmatch.ml[358,11686+8]..[358,11686+30])
                  Pexp_tuple
                  [
                    expression (typing/parmatch.ml[358,11686+8]..[358,11686+18])
                      Pexp_field
                      expression (typing/parmatch.ml[358,11686+8]..[358,11686+9])
                        Pexp_ident "d" (typing/parmatch.ml[358,11686+8]..[358,11686+9])
                      "pat_desc" (typing/parmatch.ml[358,11686+10]..[358,11686+18])
                    expression (typing/parmatch.ml[358,11686+20]..[358,11686+30])
                      Pexp_field
                      expression (typing/parmatch.ml[358,11686+20]..[358,11686+21])
                        Pexp_ident "h" (typing/parmatch.ml[358,11686+20]..[358,11686+21])
                      "pat_desc" (typing/parmatch.ml[358,11686+22]..[358,11686+30])
                  ]
                [
                  <case>
                    pattern (typing/parmatch.ml[359,11722+4]..[359,11722+30])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[359,11722+4]..[359,11722+16])
                          Ppat_construct "Construct" (typing/parmatch.ml[359,11722+4]..[359,11722+13])
                          Some
                            []
                            pattern (typing/parmatch.ml[359,11722+14]..[359,11722+16])
                              Ppat_var "c1" (typing/parmatch.ml[359,11722+14]..[359,11722+16])
                        pattern (typing/parmatch.ml[359,11722+18]..[359,11722+30])
                          Ppat_construct "Construct" (typing/parmatch.ml[359,11722+18]..[359,11722+27])
                          Some
                            []
                            pattern (typing/parmatch.ml[359,11722+28]..[359,11722+30])
                              Ppat_var "c2" (typing/parmatch.ml[359,11722+28]..[359,11722+30])
                      ]
                    expression (typing/parmatch.ml[360,11756+6]..[360,11756+45])
                      Pexp_apply
                      expression (typing/parmatch.ml[360,11756+6]..[360,11756+21])
                        Pexp_ident "Types.equal_tag" (typing/parmatch.ml[360,11756+6]..[360,11756+21])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[360,11756+22]..[360,11756+33])
                            Pexp_field
                            expression (typing/parmatch.ml[360,11756+22]..[360,11756+24])
                              Pexp_ident "c1" (typing/parmatch.ml[360,11756+22]..[360,11756+24])
                            "cstr_tag" (typing/parmatch.ml[360,11756+25]..[360,11756+33])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[360,11756+34]..[360,11756+45])
                            Pexp_field
                            expression (typing/parmatch.ml[360,11756+34]..[360,11756+36])
                              Pexp_ident "c2" (typing/parmatch.ml[360,11756+34]..[360,11756+36])
                            "cstr_tag" (typing/parmatch.ml[360,11756+37]..[360,11756+45])
                      ]
                  <case>
                    pattern (typing/parmatch.ml[361,11802+4]..[361,11802+49])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[361,11802+4]..[361,11802+27])
                          Ppat_construct "Variant" (typing/parmatch.ml[361,11802+4]..[361,11802+11])
                          Some
                            []
                            pattern (typing/parmatch.ml[361,11802+12]..[361,11802+27])
                              Ppat_record Open
                              [
                                "tag" (typing/parmatch.ml[361,11802+14]..[361,11802+17])
                                  pattern (typing/parmatch.ml[361,11802+20]..[361,11802+22])
                                    Ppat_var "t1" (typing/parmatch.ml[361,11802+20]..[361,11802+22])
                              ]
                        pattern (typing/parmatch.ml[361,11802+29]..[361,11802+49])
                          Ppat_construct "Variant" (typing/parmatch.ml[361,11802+29]..[361,11802+36])
                          Some
                            []
                            pattern (typing/parmatch.ml[361,11802+37]..[361,11802+49])
                              Ppat_record Closed
                              [
                                "tag" (typing/parmatch.ml[361,11802+39]..[361,11802+42])
                                  pattern (typing/parmatch.ml[361,11802+45]..[361,11802+47])
                                    Ppat_var "t2" (typing/parmatch.ml[361,11802+45]..[361,11802+47])
                              ]
                      ]
                    expression (typing/parmatch.ml[362,11855+6]..[362,11855+13])
                      Pexp_apply
                      expression (typing/parmatch.ml[362,11855+9]..[362,11855+10])
                        Pexp_ident "=" (typing/parmatch.ml[362,11855+9]..[362,11855+10])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[362,11855+6]..[362,11855+8])
                            Pexp_ident "t1" (typing/parmatch.ml[362,11855+6]..[362,11855+8])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[362,11855+11]..[362,11855+13])
                            Pexp_ident "t2" (typing/parmatch.ml[362,11855+11]..[362,11855+13])
                      ]
                  <case>
                    pattern (typing/parmatch.ml[363,11869+4]..[363,11869+28])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[363,11869+4]..[363,11869+15])
                          Ppat_construct "Constant" (typing/parmatch.ml[363,11869+4]..[363,11869+12])
                          Some
                            []
                            pattern (typing/parmatch.ml[363,11869+13]..[363,11869+15])
                              Ppat_var "c1" (typing/parmatch.ml[363,11869+13]..[363,11869+15])
                        pattern (typing/parmatch.ml[363,11869+17]..[363,11869+28])
                          Ppat_construct "Constant" (typing/parmatch.ml[363,11869+17]..[363,11869+25])
                          Some
                            []
                            pattern (typing/parmatch.ml[363,11869+26]..[363,11869+28])
                              Ppat_var "c2" (typing/parmatch.ml[363,11869+26]..[363,11869+28])
                      ]
                    expression (typing/parmatch.ml[363,11869+32]..[363,11869+55])
                      Pexp_apply
                      expression (typing/parmatch.ml[363,11869+52]..[363,11869+53])
                        Pexp_ident "=" (typing/parmatch.ml[363,11869+52]..[363,11869+53])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[363,11869+32]..[363,11869+51])
                            Pexp_apply
                            expression (typing/parmatch.ml[363,11869+32]..[363,11869+45])
                              Pexp_ident "const_compare" (typing/parmatch.ml[363,11869+32]..[363,11869+45])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[363,11869+46]..[363,11869+48])
                                  Pexp_ident "c1" (typing/parmatch.ml[363,11869+46]..[363,11869+48])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[363,11869+49]..[363,11869+51])
                                  Pexp_ident "c2" (typing/parmatch.ml[363,11869+49]..[363,11869+51])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[363,11869+54]..[363,11869+55])
                            Pexp_constant PConst_int (0,None)
                      ]
                  <case>
                    pattern (typing/parmatch.ml[364,11925+4]..[364,11925+14])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[364,11925+4]..[364,11925+8])
                          Ppat_construct "Lazy" (typing/parmatch.ml[364,11925+4]..[364,11925+8])
                          None
                        pattern (typing/parmatch.ml[364,11925+10]..[364,11925+14])
                          Ppat_construct "Lazy" (typing/parmatch.ml[364,11925+10]..[364,11925+14])
                          None
                      ]
                    expression (typing/parmatch.ml[364,11925+18]..[364,11925+22])
                      Pexp_construct "true" (typing/parmatch.ml[364,11925+18]..[364,11925+22])
                      None
                  <case>
                    pattern (typing/parmatch.ml[365,11948+4]..[365,11948+22])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[365,11948+4]..[365,11948+12])
                          Ppat_construct "Record" (typing/parmatch.ml[365,11948+4]..[365,11948+10])
                          Some
                            []
                            pattern (typing/parmatch.ml[365,11948+11]..[365,11948+12])
                              Ppat_any
                        pattern (typing/parmatch.ml[365,11948+14]..[365,11948+22])
                          Ppat_construct "Record" (typing/parmatch.ml[365,11948+14]..[365,11948+20])
                          Some
                            []
                            pattern (typing/parmatch.ml[365,11948+21]..[365,11948+22])
                              Ppat_any
                      ]
                    expression (typing/parmatch.ml[365,11948+26]..[365,11948+30])
                      Pexp_construct "true" (typing/parmatch.ml[365,11948+26]..[365,11948+30])
                      None
                  <case>
                    pattern (typing/parmatch.ml[366,11979+4]..[367,12006+26])
                      Ppat_or
                      pattern (typing/parmatch.ml[366,11979+4]..[366,11979+26])
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[366,11979+4]..[366,11979+14])
                            Ppat_construct "Tuple" (typing/parmatch.ml[366,11979+4]..[366,11979+9])
                            Some
                              []
                              pattern (typing/parmatch.ml[366,11979+10]..[366,11979+14])
                                Ppat_var "len1" (typing/parmatch.ml[366,11979+10]..[366,11979+14])
                          pattern (typing/parmatch.ml[366,11979+16]..[366,11979+26])
                            Ppat_construct "Tuple" (typing/parmatch.ml[366,11979+16]..[366,11979+21])
                            Some
                              []
                              pattern (typing/parmatch.ml[366,11979+22]..[366,11979+26])
                                Ppat_var "len2" (typing/parmatch.ml[366,11979+22]..[366,11979+26])
                        ]
                      pattern (typing/parmatch.ml[367,12006+4]..[367,12006+26])
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[367,12006+4]..[367,12006+14])
                            Ppat_construct "Array" (typing/parmatch.ml[367,12006+4]..[367,12006+9])
                            Some
                              []
                              pattern (typing/parmatch.ml[367,12006+10]..[367,12006+14])
                                Ppat_var "len1" (typing/parmatch.ml[367,12006+10]..[367,12006+14])
                          pattern (typing/parmatch.ml[367,12006+16]..[367,12006+26])
                            Ppat_construct "Array" (typing/parmatch.ml[367,12006+16]..[367,12006+21])
                            Some
                              []
                              pattern (typing/parmatch.ml[367,12006+22]..[367,12006+26])
                                Ppat_var "len2" (typing/parmatch.ml[367,12006+22]..[367,12006+26])
                        ]
                    expression (typing/parmatch.ml[367,12006+30]..[367,12006+41])
                      Pexp_apply
                      expression (typing/parmatch.ml[367,12006+35]..[367,12006+36])
                        Pexp_ident "=" (typing/parmatch.ml[367,12006+35]..[367,12006+36])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[367,12006+30]..[367,12006+34])
                            Pexp_ident "len1" (typing/parmatch.ml[367,12006+30]..[367,12006+34])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[367,12006+37]..[367,12006+41])
                            Pexp_ident "len2" (typing/parmatch.ml[367,12006+37]..[367,12006+41])
                      ]
                  <case>
                    pattern (typing/parmatch.ml[368,12048+4]..[368,12048+10])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[368,12048+4]..[368,12048+5])
                          Ppat_any
                        pattern (typing/parmatch.ml[368,12048+7]..[368,12048+10])
                          Ppat_construct "Any" (typing/parmatch.ml[368,12048+7]..[368,12048+10])
                          None
                      ]
                    expression (typing/parmatch.ml[368,12048+14]..[368,12048+18])
                      Pexp_construct "true" (typing/parmatch.ml[368,12048+14]..[368,12048+18])
                      None
                  <case>
                    pattern (typing/parmatch.ml[369,12067+4]..[369,12067+8])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[369,12067+4]..[369,12067+5])
                          Ppat_any
                        pattern (typing/parmatch.ml[369,12067+7]..[369,12067+8])
                          Ppat_any
                      ]
                    expression (typing/parmatch.ml[369,12067+12]..[369,12067+17])
                      Pexp_construct "false" (typing/parmatch.ml[369,12067+12]..[369,12067+17])
                      None
                ]
    ]
  structure_item (typing/parmatch.ml[374,12127+0]..[379,12238+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[374,12127+4]..[374,12127+14])
          Ppat_var "record_arg" (typing/parmatch.ml[374,12127+4]..[374,12127+14])
        expression (typing/parmatch.ml[374,12127+15]..[379,12238+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[374,12127+15]..[374,12127+17])
            Ppat_var "ph" (typing/parmatch.ml[374,12127+15]..[374,12127+17])
          expression (typing/parmatch.ml[375,12147+2]..[379,12238+41])
            Pexp_open Fresh
            module_expr (typing/parmatch.ml[375,12147+11]..[375,12147+24])
              Pmod_ident "Patterns.Head" (typing/parmatch.ml[375,12147+11]..[375,12147+24])
            expression (typing/parmatch.ml[376,12175+2]..[379,12238+41])
              Pexp_match
              expression (typing/parmatch.ml[376,12175+8]..[376,12175+19])
                Pexp_field
                expression (typing/parmatch.ml[376,12175+8]..[376,12175+10])
                  Pexp_ident "ph" (typing/parmatch.ml[376,12175+8]..[376,12175+10])
                "pat_desc" (typing/parmatch.ml[376,12175+11]..[376,12175+19])
              [
                <case>
                  pattern (typing/parmatch.ml[377,12200+4]..[377,12200+7])
                    Ppat_construct "Any" (typing/parmatch.ml[377,12200+4]..[377,12200+7])
                    None
                  expression (typing/parmatch.ml[377,12200+11]..[377,12200+13])
                    Pexp_construct "[]" (typing/parmatch.ml[377,12200+11]..[377,12200+13])
                    None
                <case>
                  pattern (typing/parmatch.ml[378,12214+4]..[378,12214+15])
                    Ppat_construct "Record" (typing/parmatch.ml[378,12214+4]..[378,12214+10])
                    Some
                      []
                      pattern (typing/parmatch.ml[378,12214+11]..[378,12214+15])
                        Ppat_var "args" (typing/parmatch.ml[378,12214+11]..[378,12214+15])
                  expression (typing/parmatch.ml[378,12214+19]..[378,12214+23])
                    Pexp_ident "args" (typing/parmatch.ml[378,12214+19]..[378,12214+23])
                <case>
                  pattern (typing/parmatch.ml[379,12238+4]..[379,12238+5])
                    Ppat_any
                  expression (typing/parmatch.ml[379,12238+9]..[379,12238+41])
                    Pexp_apply
                    expression (typing/parmatch.ml[379,12238+9]..[379,12238+20])
                      Pexp_ident "fatal_error" (typing/parmatch.ml[379,12238+9]..[379,12238+20])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[379,12238+21]..[379,12238+41])
                          Pexp_constant PConst_string("Parmatch.as_record",(typing/parmatch.ml[379,12238+22]..[379,12238+40]),None)
                    ]
              ]
    ]
  structure_item (typing/parmatch.ml[382,12282+0]..[388,12458+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[382,12282+4]..[382,12282+18])
          Ppat_var "extract_fields" (typing/parmatch.ml[382,12282+4]..[382,12282+18])
        expression (typing/parmatch.ml[382,12282+19]..[388,12458+54]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[382,12282+19]..[382,12282+23])
            Ppat_var "lbls" (typing/parmatch.ml[382,12282+19]..[382,12282+23])
          expression (typing/parmatch.ml[382,12282+24]..[388,12458+54]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[382,12282+24]..[382,12282+27])
              Ppat_var "arg" (typing/parmatch.ml[382,12282+24]..[382,12282+27])
            expression (typing/parmatch.ml[383,12312+2]..[388,12458+54])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/parmatch.ml[383,12312+6]..[383,12312+15])
                    Ppat_var "get_field" (typing/parmatch.ml[383,12312+6]..[383,12312+15])
                  expression (typing/parmatch.ml[383,12312+16]..[386,12418+34]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/parmatch.ml[383,12312+16]..[383,12312+19])
                      Ppat_var "pos" (typing/parmatch.ml[383,12312+16]..[383,12312+19])
                    expression (typing/parmatch.ml[383,12312+20]..[386,12418+34]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/parmatch.ml[383,12312+20]..[383,12312+23])
                        Ppat_var "arg" (typing/parmatch.ml[383,12312+20]..[383,12312+23])
                      expression (typing/parmatch.ml[384,12338+4]..[386,12418+34])
                        Pexp_match
                        expression (typing/parmatch.ml[384,12338+10]..[384,12338+58])
                          Pexp_apply
                          expression (typing/parmatch.ml[384,12338+10]..[384,12338+19])
                            Pexp_ident "List.find" (typing/parmatch.ml[384,12338+10]..[384,12338+19])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[384,12338+20]..[384,12338+54])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/parmatch.ml[384,12338+25]..[384,12338+32])
                                  Ppat_tuple
                                  [
                                    pattern (typing/parmatch.ml[384,12338+26]..[384,12338+29])
                                      Ppat_var "lbl" (typing/parmatch.ml[384,12338+26]..[384,12338+29])
                                    pattern (typing/parmatch.ml[384,12338+30]..[384,12338+31])
                                      Ppat_any
                                  ]
                                expression (typing/parmatch.ml[384,12338+36]..[384,12338+53])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[384,12338+40]..[384,12338+41])
                                    Pexp_ident "=" (typing/parmatch.ml[384,12338+40]..[384,12338+41])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[384,12338+36]..[384,12338+39])
                                        Pexp_ident "pos" (typing/parmatch.ml[384,12338+36]..[384,12338+39])
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[384,12338+42]..[384,12338+53])
                                        Pexp_field
                                        expression (typing/parmatch.ml[384,12338+42]..[384,12338+45])
                                          Pexp_ident "lbl" (typing/parmatch.ml[384,12338+42]..[384,12338+45])
                                        "lbl_pos" (typing/parmatch.ml[384,12338+46]..[384,12338+53])
                                  ]
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[384,12338+55]..[384,12338+58])
                                Pexp_ident "arg" (typing/parmatch.ml[384,12338+55]..[384,12338+58])
                          ]
                        [
                          <case>
                            pattern (typing/parmatch.ml[385,12402+6]..[385,12402+10])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[385,12402+6]..[385,12402+7])
                                  Ppat_any
                                pattern (typing/parmatch.ml[385,12402+9]..[385,12402+10])
                                  Ppat_var "p" (typing/parmatch.ml[385,12402+9]..[385,12402+10])
                              ]
                            expression (typing/parmatch.ml[385,12402+14]..[385,12402+15])
                              Pexp_ident "p" (typing/parmatch.ml[385,12402+14]..[385,12402+15])
                          <case>
                            pattern (typing/parmatch.ml[386,12418+6]..[386,12418+25])
                              Ppat_exception
                              pattern (typing/parmatch.ml[386,12418+16]..[386,12418+25])
                                Ppat_construct "Not_found" (typing/parmatch.ml[386,12418+16]..[386,12418+25])
                                None
                            expression (typing/parmatch.ml[386,12418+29]..[386,12418+34])
                              Pexp_ident "omega" (typing/parmatch.ml[386,12418+29]..[386,12418+34])
                        ]
              ]
              expression (typing/parmatch.ml[388,12458+2]..[388,12458+54])
                Pexp_apply
                expression (typing/parmatch.ml[388,12458+2]..[388,12458+10])
                  Pexp_ident "List.map" (typing/parmatch.ml[388,12458+2]..[388,12458+10])
                [
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[388,12458+11]..[388,12458+49])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/parmatch.ml[388,12458+16]..[388,12458+19])
                        Ppat_var "lbl" (typing/parmatch.ml[388,12458+16]..[388,12458+19])
                      expression (typing/parmatch.ml[388,12458+23]..[388,12458+48])
                        Pexp_apply
                        expression (typing/parmatch.ml[388,12458+23]..[388,12458+32])
                          Pexp_ident "get_field" (typing/parmatch.ml[388,12458+23]..[388,12458+32])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[388,12458+33]..[388,12458+44])
                              Pexp_field
                              expression (typing/parmatch.ml[388,12458+33]..[388,12458+36])
                                Pexp_ident "lbl" (typing/parmatch.ml[388,12458+33]..[388,12458+36])
                              "lbl_pos" (typing/parmatch.ml[388,12458+37]..[388,12458+44])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[388,12458+45]..[388,12458+48])
                              Pexp_ident "arg" (typing/parmatch.ml[388,12458+45]..[388,12458+48])
                        ]
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[388,12458+50]..[388,12458+54])
                      Pexp_ident "lbls" (typing/parmatch.ml[388,12458+50]..[388,12458+54])
                ]
    ]
  structure_item (typing/parmatch.ml[391,12584+0]..[412,13197+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[391,12584+4]..[391,12584+21])
          Ppat_var "simple_match_args" (typing/parmatch.ml[391,12584+4]..[391,12584+21])
        expression (typing/parmatch.ml[391,12584+22]..[412,13197+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[391,12584+22]..[391,12584+27])
            Ppat_var "discr" (typing/parmatch.ml[391,12584+22]..[391,12584+27])
          expression (typing/parmatch.ml[391,12584+28]..[412,13197+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[391,12584+28]..[391,12584+32])
              Ppat_var "head" (typing/parmatch.ml[391,12584+28]..[391,12584+32])
            expression (typing/parmatch.ml[391,12584+33]..[412,13197+9]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[391,12584+33]..[391,12584+37])
                Ppat_var "args" (typing/parmatch.ml[391,12584+33]..[391,12584+37])
              expression (typing/parmatch.ml[392,12624+2]..[412,13197+9])
                Pexp_open Fresh
                module_expr (typing/parmatch.ml[392,12624+11]..[392,12624+24])
                  Pmod_ident "Patterns.Head" (typing/parmatch.ml[392,12624+11]..[392,12624+24])
                expression (typing/parmatch.ml[393,12652+2]..[412,13197+9])
                  Pexp_match
                  expression (typing/parmatch.ml[393,12652+8]..[393,12652+21])
                    Pexp_field
                    expression (typing/parmatch.ml[393,12652+8]..[393,12652+12])
                      Pexp_ident "head" (typing/parmatch.ml[393,12652+8]..[393,12652+12])
                    "pat_desc" (typing/parmatch.ml[393,12652+13]..[393,12652+21])
                  [
                    <case>
                      pattern (typing/parmatch.ml[394,12679+4]..[394,12679+14])
                        Ppat_construct "Constant" (typing/parmatch.ml[394,12679+4]..[394,12679+12])
                        Some
                          []
                          pattern (typing/parmatch.ml[394,12679+13]..[394,12679+14])
                            Ppat_any
                      expression (typing/parmatch.ml[394,12679+18]..[394,12679+20])
                        Pexp_construct "[]" (typing/parmatch.ml[394,12679+18]..[394,12679+20])
                        None
                    <case>
                      pattern (typing/parmatch.ml[395,12700+4]..[399,12754+8])
                        Ppat_or
                        pattern (typing/parmatch.ml[395,12700+4]..[398,12742+11])
                          Ppat_or
                          pattern (typing/parmatch.ml[395,12700+4]..[397,12730+11])
                            Ppat_or
                            pattern (typing/parmatch.ml[395,12700+4]..[396,12716+13])
                              Ppat_or
                              pattern (typing/parmatch.ml[395,12700+4]..[395,12700+15])
                                Ppat_construct "Construct" (typing/parmatch.ml[395,12700+4]..[395,12700+13])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[395,12700+14]..[395,12700+15])
                                    Ppat_any
                              pattern (typing/parmatch.ml[396,12716+4]..[396,12716+13])
                                Ppat_construct "Variant" (typing/parmatch.ml[396,12716+4]..[396,12716+11])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[396,12716+12]..[396,12716+13])
                                    Ppat_any
                            pattern (typing/parmatch.ml[397,12730+4]..[397,12730+11])
                              Ppat_construct "Tuple" (typing/parmatch.ml[397,12730+4]..[397,12730+9])
                              Some
                                []
                                pattern (typing/parmatch.ml[397,12730+10]..[397,12730+11])
                                  Ppat_any
                          pattern (typing/parmatch.ml[398,12742+4]..[398,12742+11])
                            Ppat_construct "Array" (typing/parmatch.ml[398,12742+4]..[398,12742+9])
                            Some
                              []
                              pattern (typing/parmatch.ml[398,12742+10]..[398,12742+11])
                                Ppat_any
                        pattern (typing/parmatch.ml[399,12754+4]..[399,12754+8])
                          Ppat_construct "Lazy" (typing/parmatch.ml[399,12754+4]..[399,12754+8])
                          None
                      expression (typing/parmatch.ml[399,12754+12]..[399,12754+16])
                        Pexp_ident "args" (typing/parmatch.ml[399,12754+12]..[399,12754+16])
                    <case>
                      pattern (typing/parmatch.ml[400,12771+4]..[400,12771+15])
                        Ppat_construct "Record" (typing/parmatch.ml[400,12771+4]..[400,12771+10])
                        Some
                          []
                          pattern (typing/parmatch.ml[400,12771+11]..[400,12771+15])
                            Ppat_var "lbls" (typing/parmatch.ml[400,12771+11]..[400,12771+15])
                      expression (typing/parmatch.ml[400,12771+20]..[400,12771+78])
                        Pexp_apply
                        expression (typing/parmatch.ml[400,12771+20]..[400,12771+34])
                          Pexp_ident "extract_fields" (typing/parmatch.ml[400,12771+20]..[400,12771+34])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[400,12771+35]..[400,12771+53])
                              Pexp_apply
                              expression (typing/parmatch.ml[400,12771+36]..[400,12771+46])
                                Pexp_ident "record_arg" (typing/parmatch.ml[400,12771+36]..[400,12771+46])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[400,12771+47]..[400,12771+52])
                                    Pexp_ident "discr" (typing/parmatch.ml[400,12771+47]..[400,12771+52])
                              ]
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[400,12771+54]..[400,12771+78])
                              Pexp_apply
                              expression (typing/parmatch.ml[400,12771+55]..[400,12771+67])
                                Pexp_ident "List.combine" (typing/parmatch.ml[400,12771+55]..[400,12771+67])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[400,12771+68]..[400,12771+72])
                                    Pexp_ident "lbls" (typing/parmatch.ml[400,12771+68]..[400,12771+72])
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[400,12771+73]..[400,12771+77])
                                    Pexp_ident "args" (typing/parmatch.ml[400,12771+73]..[400,12771+77])
                              ]
                        ]
                    <case>
                      pattern (typing/parmatch.ml[401,12850+4]..[401,12850+7])
                        Ppat_construct "Any" (typing/parmatch.ml[401,12850+4]..[401,12850+7])
                        None
                      expression (typing/parmatch.ml[402,12861+6]..[412,13197+9])
                        Pexp_match
                        expression (typing/parmatch.ml[402,12861+18]..[402,12861+32])
                          Pexp_field
                          expression (typing/parmatch.ml[402,12861+18]..[402,12861+23])
                            Pexp_ident "discr" (typing/parmatch.ml[402,12861+18]..[402,12861+23])
                          "pat_desc" (typing/parmatch.ml[402,12861+24]..[402,12861+32])
                        [
                          <case>
                            pattern (typing/parmatch.ml[403,12899+8]..[403,12899+22])
                              Ppat_construct "Construct" (typing/parmatch.ml[403,12899+8]..[403,12899+17])
                              Some
                                []
                                pattern (typing/parmatch.ml[403,12899+18]..[403,12899+22])
                                  Ppat_var "cstr" (typing/parmatch.ml[403,12899+18]..[403,12899+22])
                            expression (typing/parmatch.ml[403,12899+26]..[403,12899+57])
                              Pexp_apply
                              expression (typing/parmatch.ml[403,12899+26]..[403,12899+41])
                                Pexp_ident "Patterns.omegas" (typing/parmatch.ml[403,12899+26]..[403,12899+41])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[403,12899+42]..[403,12899+57])
                                    Pexp_field
                                    expression (typing/parmatch.ml[403,12899+42]..[403,12899+46])
                                      Pexp_ident "cstr" (typing/parmatch.ml[403,12899+42]..[403,12899+46])
                                    "cstr_arity" (typing/parmatch.ml[403,12899+47]..[403,12899+57])
                              ]
                          <case>
                            pattern (typing/parmatch.ml[404,12957+8]..[405,12992+12])
                              Ppat_or
                              pattern (typing/parmatch.ml[404,12957+8]..[404,12957+34])
                                Ppat_construct "Variant" (typing/parmatch.ml[404,12957+8]..[404,12957+15])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[404,12957+16]..[404,12957+34])
                                    Ppat_record Closed
                                    [
                                      "has_arg" (typing/parmatch.ml[404,12957+18]..[404,12957+25])
                                        pattern (typing/parmatch.ml[404,12957+28]..[404,12957+32])
                                          Ppat_construct "true" (typing/parmatch.ml[404,12957+28]..[404,12957+32])
                                          None
                                    ]
                              pattern (typing/parmatch.ml[405,12992+8]..[405,12992+12])
                                Ppat_construct "Lazy" (typing/parmatch.ml[405,12992+8]..[405,12992+12])
                                None
                            expression (typing/parmatch.ml[405,12992+16]..[405,12992+32])
                              Pexp_construct "::" (typing/parmatch.ml[405,12992+17]..[405,12992+32]) ghost
                              Some
                                expression (typing/parmatch.ml[405,12992+17]..[405,12992+32]) ghost
                                  Pexp_tuple
                                  [
                                    expression (typing/parmatch.ml[405,12992+17]..[405,12992+31])
                                      Pexp_ident "Patterns.omega" (typing/parmatch.ml[405,12992+17]..[405,12992+31])
                                    expression (typing/parmatch.ml[405,12992+31]..[405,12992+32]) ghost
                                      Pexp_construct "[]" (typing/parmatch.ml[405,12992+31]..[405,12992+32]) ghost
                                      None
                                  ]
                          <case>
                            pattern (typing/parmatch.ml[406,13025+8]..[406,13025+19])
                              Ppat_construct "Record" (typing/parmatch.ml[406,13025+8]..[406,13025+14])
                              Some
                                []
                                pattern (typing/parmatch.ml[406,13025+15]..[406,13025+19])
                                  Ppat_var "lbls" (typing/parmatch.ml[406,13025+15]..[406,13025+19])
                            expression (typing/parmatch.ml[406,13025+24]..[406,13025+39])
                              Pexp_apply
                              expression (typing/parmatch.ml[406,13025+24]..[406,13025+34])
                                Pexp_ident "omega_list" (typing/parmatch.ml[406,13025+24]..[406,13025+34])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[406,13025+35]..[406,13025+39])
                                    Pexp_ident "lbls" (typing/parmatch.ml[406,13025+35]..[406,13025+39])
                              ]
                          <case>
                            pattern (typing/parmatch.ml[407,13065+8]..[408,13083+17])
                              Ppat_or
                              pattern (typing/parmatch.ml[407,13065+8]..[407,13065+17])
                                Ppat_construct "Array" (typing/parmatch.ml[407,13065+8]..[407,13065+13])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[407,13065+14]..[407,13065+17])
                                    Ppat_var "len" (typing/parmatch.ml[407,13065+14]..[407,13065+17])
                              pattern (typing/parmatch.ml[408,13083+8]..[408,13083+17])
                                Ppat_construct "Tuple" (typing/parmatch.ml[408,13083+8]..[408,13083+13])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[408,13083+14]..[408,13083+17])
                                    Ppat_var "len" (typing/parmatch.ml[408,13083+14]..[408,13083+17])
                            expression (typing/parmatch.ml[408,13083+21]..[408,13083+40])
                              Pexp_apply
                              expression (typing/parmatch.ml[408,13083+21]..[408,13083+36])
                                Pexp_ident "Patterns.omegas" (typing/parmatch.ml[408,13083+21]..[408,13083+36])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[408,13083+37]..[408,13083+40])
                                    Pexp_ident "len" (typing/parmatch.ml[408,13083+37]..[408,13083+40])
                              ]
                          <case>
                            pattern (typing/parmatch.ml[409,13124+8]..[411,13172+18])
                              Ppat_or
                              pattern (typing/parmatch.ml[409,13124+8]..[410,13160+11])
                                Ppat_or
                                pattern (typing/parmatch.ml[409,13124+8]..[409,13124+35])
                                  Ppat_construct "Variant" (typing/parmatch.ml[409,13124+8]..[409,13124+15])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[409,13124+16]..[409,13124+35])
                                      Ppat_record Closed
                                      [
                                        "has_arg" (typing/parmatch.ml[409,13124+18]..[409,13124+25])
                                          pattern (typing/parmatch.ml[409,13124+28]..[409,13124+33])
                                            Ppat_construct "false" (typing/parmatch.ml[409,13124+28]..[409,13124+33])
                                            None
                                      ]
                                pattern (typing/parmatch.ml[410,13160+8]..[410,13160+11])
                                  Ppat_construct "Any" (typing/parmatch.ml[410,13160+8]..[410,13160+11])
                                  None
                              pattern (typing/parmatch.ml[411,13172+8]..[411,13172+18])
                                Ppat_construct "Constant" (typing/parmatch.ml[411,13172+8]..[411,13172+16])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[411,13172+17]..[411,13172+18])
                                    Ppat_any
                            expression (typing/parmatch.ml[411,13172+22]..[411,13172+24])
                              Pexp_construct "[]" (typing/parmatch.ml[411,13172+22]..[411,13172+24])
                              None
                        ]
                  ]
    ]
  structure_item (typing/parmatch.ml[441,14329+0]..[474,15524+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[441,14329+4]..[441,14329+13])
          Ppat_var "discr_pat" (typing/parmatch.ml[441,14329+4]..[441,14329+13])
        expression (typing/parmatch.ml[441,14329+14]..[474,15524+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[441,14329+14]..[441,14329+15])
            Ppat_var "q" (typing/parmatch.ml[441,14329+14]..[441,14329+15])
          expression (typing/parmatch.ml[441,14329+16]..[474,15524+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[441,14329+16]..[441,14329+19])
              Ppat_var "pss" (typing/parmatch.ml[441,14329+16]..[441,14329+19])
            expression (typing/parmatch.ml[442,14351+2]..[474,15524+10])
              Pexp_open Fresh
              module_expr (typing/parmatch.ml[442,14351+11]..[442,14351+24])
                Pmod_ident "Patterns.Head" (typing/parmatch.ml[442,14351+11]..[442,14351+24])
              expression (typing/parmatch.ml[443,14379+2]..[474,15524+10])
                Pexp_let Rec
                [
                  <def>
                    pattern (typing/parmatch.ml[443,14379+10]..[443,14379+20])
                      Ppat_var "refine_pat" (typing/parmatch.ml[443,14379+10]..[443,14379+20])
                    expression (typing/parmatch.ml[443,14379+21]..[466,15216+16]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/parmatch.ml[443,14379+21]..[443,14379+24])
                        Ppat_var "acc" (typing/parmatch.ml[443,14379+21]..[443,14379+24])
                      expression (typing/parmatch.ml[443,14379+27]..[466,15216+16])
                        Pexp_function
                        [
                          <case>
                            pattern (typing/parmatch.ml[444,14415+6]..[444,14415+8])
                              Ppat_construct "[]" (typing/parmatch.ml[444,14415+6]..[444,14415+8])
                              None
                            expression (typing/parmatch.ml[444,14415+12]..[444,14415+15])
                              Pexp_ident "acc" (typing/parmatch.ml[444,14415+12]..[444,14415+15])
                          <case>
                            pattern (typing/parmatch.ml[445,14431+6]..[445,14431+28])
                              Ppat_construct "::" (typing/parmatch.ml[445,14431+21]..[445,14431+23])
                              Some
                                []
                                pattern (typing/parmatch.ml[445,14431+6]..[445,14431+28]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (typing/parmatch.ml[445,14431+6]..[445,14431+20])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[445,14431+7]..[445,14431+16])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[445,14431+8]..[445,14431+12])
                                              Ppat_var "head" (typing/parmatch.ml[445,14431+8]..[445,14431+12])
                                            pattern (typing/parmatch.ml[445,14431+14]..[445,14431+15])
                                              Ppat_any
                                          ]
                                        pattern (typing/parmatch.ml[445,14431+18]..[445,14431+19])
                                          Ppat_any
                                      ]
                                    pattern (typing/parmatch.ml[445,14431+24]..[445,14431+28])
                                      Ppat_var "rows" (typing/parmatch.ml[445,14431+24]..[445,14431+28])
                                  ]
                            expression (typing/parmatch.ml[446,14463+6]..[466,15216+16])
                              Pexp_match
                              expression (typing/parmatch.ml[446,14463+12]..[446,14463+25])
                                Pexp_field
                                expression (typing/parmatch.ml[446,14463+12]..[446,14463+16])
                                  Pexp_ident "head" (typing/parmatch.ml[446,14463+12]..[446,14463+16])
                                "pat_desc" (typing/parmatch.ml[446,14463+17]..[446,14463+25])
                              [
                                <case>
                                  pattern (typing/parmatch.ml[447,14494+8]..[447,14494+11])
                                    Ppat_construct "Any" (typing/parmatch.ml[447,14494+8]..[447,14494+11])
                                    None
                                  expression (typing/parmatch.ml[447,14494+15]..[447,14494+34])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[447,14494+15]..[447,14494+25])
                                      Pexp_ident "refine_pat" (typing/parmatch.ml[447,14494+15]..[447,14494+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[447,14494+26]..[447,14494+29])
                                          Pexp_ident "acc" (typing/parmatch.ml[447,14494+26]..[447,14494+29])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[447,14494+30]..[447,14494+34])
                                          Pexp_ident "rows" (typing/parmatch.ml[447,14494+30]..[447,14494+34])
                                    ]
                                <case>
                                  pattern (typing/parmatch.ml[448,14529+8]..[448,14529+22])
                                    Ppat_or
                                    pattern (typing/parmatch.ml[448,14529+8]..[448,14529+15])
                                      Ppat_construct "Tuple" (typing/parmatch.ml[448,14529+8]..[448,14529+13])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[448,14529+14]..[448,14529+15])
                                          Ppat_any
                                    pattern (typing/parmatch.ml[448,14529+18]..[448,14529+22])
                                      Ppat_construct "Lazy" (typing/parmatch.ml[448,14529+18]..[448,14529+22])
                                      None
                                  expression (typing/parmatch.ml[448,14529+26]..[448,14529+30])
                                    Pexp_ident "head" (typing/parmatch.ml[448,14529+26]..[448,14529+30])
                                <case>
                                  pattern (typing/parmatch.ml[449,14560+8]..[449,14560+19])
                                    Ppat_construct "Record" (typing/parmatch.ml[449,14560+8]..[449,14560+14])
                                    Some
                                      []
                                      pattern (typing/parmatch.ml[449,14560+15]..[449,14560+19])
                                        Ppat_var "lbls" (typing/parmatch.ml[449,14560+15]..[449,14560+19])
                                  expression (typing/parmatch.ml[456,14901+8]..[465,15190+25])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/parmatch.ml[456,14901+12]..[456,14901+18])
                                          Ppat_var "fields" (typing/parmatch.ml[456,14901+12]..[456,14901+18])
                                        expression (typing/parmatch.ml[457,14922+10]..[462,15087+33])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[457,14922+10]..[457,14922+25])
                                            Pexp_ident "List.fold_right" (typing/parmatch.ml[457,14922+10]..[457,14922+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[457,14922+26]..[462,15087+11])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (typing/parmatch.ml[457,14922+31]..[457,14922+34])
                                                  Ppat_var "lbl" (typing/parmatch.ml[457,14922+31]..[457,14922+34])
                                                expression (typing/parmatch.ml[457,14922+35]..[461,15064+22]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (typing/parmatch.ml[457,14922+35]..[457,14922+36])
                                                    Ppat_var "r" (typing/parmatch.ml[457,14922+35]..[457,14922+36])
                                                  expression (typing/parmatch.ml[458,14962+12]..[461,15064+22])
                                                    Pexp_ifthenelse
                                                    expression (typing/parmatch.ml[458,14962+15]..[458,14962+63])
                                                      Pexp_apply
                                                      expression (typing/parmatch.ml[458,14962+15]..[458,14962+26])
                                                        Pexp_ident "List.exists" (typing/parmatch.ml[458,14962+15]..[458,14962+26])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[458,14962+27]..[458,14962+61])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (typing/parmatch.ml[458,14962+32]..[458,14962+33])
                                                              Ppat_var "l" (typing/parmatch.ml[458,14962+32]..[458,14962+33])
                                                            expression (typing/parmatch.ml[458,14962+37]..[458,14962+60])
                                                              Pexp_apply
                                                              expression (typing/parmatch.ml[458,14962+47]..[458,14962+48])
                                                                Pexp_ident "=" (typing/parmatch.ml[458,14962+47]..[458,14962+48])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/parmatch.ml[458,14962+37]..[458,14962+46])
                                                                    Pexp_field
                                                                    expression (typing/parmatch.ml[458,14962+37]..[458,14962+38])
                                                                      Pexp_ident "l" (typing/parmatch.ml[458,14962+37]..[458,14962+38])
                                                                    "lbl_pos" (typing/parmatch.ml[458,14962+39]..[458,14962+46])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/parmatch.ml[458,14962+49]..[458,14962+60])
                                                                    Pexp_field
                                                                    expression (typing/parmatch.ml[458,14962+49]..[458,14962+52])
                                                                      Pexp_ident "lbl" (typing/parmatch.ml[458,14962+49]..[458,14962+52])
                                                                    "lbl_pos" (typing/parmatch.ml[458,14962+53]..[458,14962+60])
                                                              ]
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[458,14962+62]..[458,14962+63])
                                                            Pexp_ident "r" (typing/parmatch.ml[458,14962+62]..[458,14962+63])
                                                      ]
                                                    expression (typing/parmatch.ml[459,15031+14]..[459,15031+15])
                                                      Pexp_ident "r" (typing/parmatch.ml[459,15031+14]..[459,15031+15])
                                                    Some
                                                      expression (typing/parmatch.ml[461,15064+14]..[461,15064+22])
                                                        Pexp_construct "::" (typing/parmatch.ml[461,15064+18]..[461,15064+20])
                                                        Some
                                                          expression (typing/parmatch.ml[461,15064+14]..[461,15064+22]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/parmatch.ml[461,15064+14]..[461,15064+17])
                                                                Pexp_ident "lbl" (typing/parmatch.ml[461,15064+14]..[461,15064+17])
                                                              expression (typing/parmatch.ml[461,15064+21]..[461,15064+22])
                                                                Pexp_ident "r" (typing/parmatch.ml[461,15064+21]..[461,15064+22])
                                                            ]
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[462,15087+12]..[462,15087+16])
                                                Pexp_ident "lbls" (typing/parmatch.ml[462,15087+12]..[462,15087+16])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[462,15087+17]..[462,15087+33])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[462,15087+18]..[462,15087+28])
                                                  Pexp_ident "record_arg" (typing/parmatch.ml[462,15087+18]..[462,15087+28])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[462,15087+29]..[462,15087+32])
                                                      Pexp_ident "acc" (typing/parmatch.ml[462,15087+29]..[462,15087+32])
                                                ]
                                          ]
                                    ]
                                    expression (typing/parmatch.ml[464,15132+8]..[465,15190+25])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/parmatch.ml[464,15132+12]..[464,15132+13])
                                            Ppat_var "d" (typing/parmatch.ml[464,15132+12]..[464,15132+13])
                                          expression (typing/parmatch.ml[464,15132+16]..[464,15132+54])
                                            Pexp_record
                                            [
                                              "pat_desc" (typing/parmatch.ml[464,15132+28]..[464,15132+36])
                                                expression (typing/parmatch.ml[464,15132+39]..[464,15132+52])
                                                  Pexp_construct "Record" (typing/parmatch.ml[464,15132+39]..[464,15132+45])
                                                  Some
                                                    expression (typing/parmatch.ml[464,15132+46]..[464,15132+52])
                                                      Pexp_ident "fields" (typing/parmatch.ml[464,15132+46]..[464,15132+52])
                                            ]
                                            Some
                                              expression (typing/parmatch.ml[464,15132+18]..[464,15132+22])
                                                Pexp_ident "head" (typing/parmatch.ml[464,15132+18]..[464,15132+22])
                                      ]
                                      expression (typing/parmatch.ml[465,15190+8]..[465,15190+25])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[465,15190+8]..[465,15190+18])
                                          Pexp_ident "refine_pat" (typing/parmatch.ml[465,15190+8]..[465,15190+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[465,15190+19]..[465,15190+20])
                                              Pexp_ident "d" (typing/parmatch.ml[465,15190+19]..[465,15190+20])
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[465,15190+21]..[465,15190+25])
                                              Pexp_ident "rows" (typing/parmatch.ml[465,15190+21]..[465,15190+25])
                                        ]
                                <case>
                                  pattern (typing/parmatch.ml[466,15216+8]..[466,15216+9])
                                    Ppat_any
                                  expression (typing/parmatch.ml[466,15216+13]..[466,15216+16])
                                    Pexp_ident "acc" (typing/parmatch.ml[466,15216+13]..[466,15216+16])
                              ]
                        ]
                ]
                expression (typing/parmatch.ml[468,15238+2]..[474,15524+10])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/parmatch.ml[468,15238+6]..[468,15238+10])
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[468,15238+6]..[468,15238+7])
                            Ppat_var "q" (typing/parmatch.ml[468,15238+6]..[468,15238+7])
                          pattern (typing/parmatch.ml[468,15238+9]..[468,15238+10])
                            Ppat_any
                        ]
                      expression (typing/parmatch.ml[468,15238+13]..[468,15238+26])
                        Pexp_apply
                        expression (typing/parmatch.ml[468,15238+13]..[468,15238+24])
                          Pexp_ident "deconstruct" (typing/parmatch.ml[468,15238+13]..[468,15238+24])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[468,15238+25]..[468,15238+26])
                              Pexp_ident "q" (typing/parmatch.ml[468,15238+25]..[468,15238+26])
                        ]
                  ]
                  expression (typing/parmatch.ml[469,15268+2]..[474,15524+10])
                    Pexp_match
                    expression (typing/parmatch.ml[469,15268+8]..[469,15268+18])
                      Pexp_field
                      expression (typing/parmatch.ml[469,15268+8]..[469,15268+9])
                        Pexp_ident "q" (typing/parmatch.ml[469,15268+8]..[469,15268+9])
                      "pat_desc" (typing/parmatch.ml[469,15268+10]..[469,15268+18])
                    [
                      <case>
                        pattern (typing/parmatch.ml[473,15485+4]..[473,15485+18])
                          Ppat_or
                          pattern (typing/parmatch.ml[473,15485+4]..[473,15485+7])
                            Ppat_construct "Any" (typing/parmatch.ml[473,15485+4]..[473,15485+7])
                            None
                          pattern (typing/parmatch.ml[473,15485+10]..[473,15485+18])
                            Ppat_construct "Record" (typing/parmatch.ml[473,15485+10]..[473,15485+16])
                            Some
                              []
                              pattern (typing/parmatch.ml[473,15485+17]..[473,15485+18])
                                Ppat_any
                        expression (typing/parmatch.ml[473,15485+22]..[473,15485+38])
                          Pexp_apply
                          expression (typing/parmatch.ml[473,15485+22]..[473,15485+32])
                            Pexp_ident "refine_pat" (typing/parmatch.ml[473,15485+22]..[473,15485+32])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[473,15485+33]..[473,15485+34])
                                Pexp_ident "q" (typing/parmatch.ml[473,15485+33]..[473,15485+34])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[473,15485+35]..[473,15485+38])
                                Pexp_ident "pss" (typing/parmatch.ml[473,15485+35]..[473,15485+38])
                          ]
                      <case>
                        pattern (typing/parmatch.ml[474,15524+4]..[474,15524+5])
                          Ppat_any
                        expression (typing/parmatch.ml[474,15524+9]..[474,15524+10])
                          Pexp_ident "q" (typing/parmatch.ml[474,15524+9]..[474,15524+10])
                    ]
    ]
  structure_item (typing/parmatch.ml[481,15630+0]..[487,15775+36])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[481,15630+8]..[481,15630+17])
          Ppat_var "read_args" (typing/parmatch.ml[481,15630+8]..[481,15630+17])
        expression (typing/parmatch.ml[481,15630+18]..[487,15775+36]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[481,15630+18]..[481,15630+20])
            Ppat_var "xs" (typing/parmatch.ml[481,15630+18]..[481,15630+20])
          expression (typing/parmatch.ml[481,15630+21]..[487,15775+36]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[481,15630+21]..[481,15630+22])
              Ppat_var "r" (typing/parmatch.ml[481,15630+21]..[481,15630+22])
            expression (typing/parmatch.ml[481,15630+25]..[487,15775+36])
              Pexp_match
              expression (typing/parmatch.ml[481,15630+31]..[481,15630+35])
                Pexp_tuple
                [
                  expression (typing/parmatch.ml[481,15630+31]..[481,15630+33])
                    Pexp_ident "xs" (typing/parmatch.ml[481,15630+31]..[481,15630+33])
                  expression (typing/parmatch.ml[481,15630+34]..[481,15630+35])
                    Pexp_ident "r" (typing/parmatch.ml[481,15630+34]..[481,15630+35])
                ]
              [
                <case>
                  pattern (typing/parmatch.ml[482,15671+2]..[482,15671+6])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[482,15671+2]..[482,15671+4])
                        Ppat_construct "[]" (typing/parmatch.ml[482,15671+2]..[482,15671+4])
                        None
                      pattern (typing/parmatch.ml[482,15671+5]..[482,15671+6])
                        Ppat_any
                    ]
                  expression (typing/parmatch.ml[482,15671+10]..[482,15671+14])
                    Pexp_tuple
                    [
                      expression (typing/parmatch.ml[482,15671+10]..[482,15671+12])
                        Pexp_construct "[]" (typing/parmatch.ml[482,15671+10]..[482,15671+12])
                        None
                      expression (typing/parmatch.ml[482,15671+13]..[482,15671+14])
                        Pexp_ident "r" (typing/parmatch.ml[482,15671+13]..[482,15671+14])
                    ]
                <case>
                  pattern (typing/parmatch.ml[483,15686+2]..[483,15686+18])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[483,15686+2]..[483,15686+7])
                        Ppat_construct "::" (typing/parmatch.ml[483,15686+3]..[483,15686+5])
                        Some
                          []
                          pattern (typing/parmatch.ml[483,15686+2]..[483,15686+7]) ghost
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[483,15686+2]..[483,15686+3])
                                Ppat_any
                              pattern (typing/parmatch.ml[483,15686+5]..[483,15686+7])
                                Ppat_var "xs" (typing/parmatch.ml[483,15686+5]..[483,15686+7])
                            ]
                      pattern (typing/parmatch.ml[483,15686+9]..[483,15686+18])
                        Ppat_construct "::" (typing/parmatch.ml[483,15686+12]..[483,15686+14])
                        Some
                          []
                          pattern (typing/parmatch.ml[483,15686+9]..[483,15686+18]) ghost
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[483,15686+9]..[483,15686+12])
                                Ppat_var "arg" (typing/parmatch.ml[483,15686+9]..[483,15686+12])
                              pattern (typing/parmatch.ml[483,15686+14]..[483,15686+18])
                                Ppat_var "rest" (typing/parmatch.ml[483,15686+14]..[483,15686+18])
                            ]
                    ]
                  expression (typing/parmatch.ml[484,15708+3]..[485,15748+17])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[484,15708+7]..[484,15708+16])
                          Ppat_tuple
                          [
                            pattern (typing/parmatch.ml[484,15708+7]..[484,15708+11])
                              Ppat_var "args" (typing/parmatch.ml[484,15708+7]..[484,15708+11])
                            pattern (typing/parmatch.ml[484,15708+12]..[484,15708+16])
                              Ppat_var "rest" (typing/parmatch.ml[484,15708+12]..[484,15708+16])
                          ]
                        expression (typing/parmatch.ml[484,15708+19]..[484,15708+36])
                          Pexp_apply
                          expression (typing/parmatch.ml[484,15708+19]..[484,15708+28])
                            Pexp_ident "read_args" (typing/parmatch.ml[484,15708+19]..[484,15708+28])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[484,15708+29]..[484,15708+31])
                                Pexp_ident "xs" (typing/parmatch.ml[484,15708+29]..[484,15708+31])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[484,15708+32]..[484,15708+36])
                                Pexp_ident "rest" (typing/parmatch.ml[484,15708+32]..[484,15708+36])
                          ]
                    ]
                    expression (typing/parmatch.ml[485,15748+3]..[485,15748+17])
                      Pexp_tuple
                      [
                        expression (typing/parmatch.ml[485,15748+3]..[485,15748+12])
                          Pexp_construct "::" (typing/parmatch.ml[485,15748+6]..[485,15748+8])
                          Some
                            expression (typing/parmatch.ml[485,15748+3]..[485,15748+12]) ghost
                              Pexp_tuple
                              [
                                expression (typing/parmatch.ml[485,15748+3]..[485,15748+6])
                                  Pexp_ident "arg" (typing/parmatch.ml[485,15748+3]..[485,15748+6])
                                expression (typing/parmatch.ml[485,15748+8]..[485,15748+12])
                                  Pexp_ident "args" (typing/parmatch.ml[485,15748+8]..[485,15748+12])
                              ]
                        expression (typing/parmatch.ml[485,15748+13]..[485,15748+17])
                          Pexp_ident "rest" (typing/parmatch.ml[485,15748+13]..[485,15748+17])
                      ]
                <case>
                  pattern (typing/parmatch.ml[486,15766+2]..[486,15766+5])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[486,15766+2]..[486,15766+3])
                        Ppat_any
                      pattern (typing/parmatch.ml[486,15766+4]..[486,15766+5])
                        Ppat_any
                    ]
                  expression (typing/parmatch.ml[487,15775+4]..[487,15775+36])
                    Pexp_apply
                    expression (typing/parmatch.ml[487,15775+4]..[487,15775+15])
                      Pexp_ident "fatal_error" (typing/parmatch.ml[487,15775+4]..[487,15775+15])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[487,15775+16]..[487,15775+36])
                          Pexp_constant PConst_string("Parmatch.read_args",(typing/parmatch.ml[487,15775+17]..[487,15775+35]),None)
                    ]
              ]
    ]
  structure_item (typing/parmatch.ml[489,15813+0]..[538,17349+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[489,15813+4]..[489,15813+15])
          Ppat_var "do_set_args" (typing/parmatch.ml[489,15813+4]..[489,15813+15])
        expression (typing/parmatch.ml[489,15813+16]..[538,17349+38]) ghost
          Pexp_fun
          Labelled "erase_mutable"
          None
          pattern (typing/parmatch.ml[489,15813+17]..[489,15813+30])
            Ppat_var "erase_mutable" (typing/parmatch.ml[489,15813+17]..[489,15813+30])
          expression (typing/parmatch.ml[489,15813+31]..[538,17349+38]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[489,15813+31]..[489,15813+32])
              Ppat_var "q" (typing/parmatch.ml[489,15813+31]..[489,15813+32])
            expression (typing/parmatch.ml[489,15813+33]..[538,17349+38]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[489,15813+33]..[489,15813+34])
                Ppat_var "r" (typing/parmatch.ml[489,15813+33]..[489,15813+34])
              expression (typing/parmatch.ml[489,15813+37]..[538,17349+38])
                Pexp_match
                expression (typing/parmatch.ml[489,15813+43]..[489,15813+44])
                  Pexp_ident "q" (typing/parmatch.ml[489,15813+43]..[489,15813+44])
                [
                  <case>
                    pattern (typing/parmatch.ml[490,15863+2]..[490,15863+32])
                      Ppat_record Closed
                      [
                        "pat_desc" (typing/parmatch.ml[490,15863+3]..[490,15863+11])
                          pattern (typing/parmatch.ml[490,15863+14]..[490,15863+31])
                            Ppat_construct "Tpat_tuple" (typing/parmatch.ml[490,15863+14]..[490,15863+24])
                            Some
                              []
                              pattern (typing/parmatch.ml[490,15863+25]..[490,15863+31])
                                Ppat_var "omegas" (typing/parmatch.ml[490,15863+25]..[490,15863+31])
                      ]
                    expression (typing/parmatch.ml[491,15899+4]..[492,15941+57])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/parmatch.ml[491,15899+8]..[491,15899+17])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[491,15899+8]..[491,15899+12])
                                Ppat_var "args" (typing/parmatch.ml[491,15899+8]..[491,15899+12])
                              pattern (typing/parmatch.ml[491,15899+13]..[491,15899+17])
                                Ppat_var "rest" (typing/parmatch.ml[491,15899+13]..[491,15899+17])
                            ]
                          expression (typing/parmatch.ml[491,15899+20]..[491,15899+38])
                            Pexp_apply
                            expression (typing/parmatch.ml[491,15899+20]..[491,15899+29])
                              Pexp_ident "read_args" (typing/parmatch.ml[491,15899+20]..[491,15899+29])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[491,15899+30]..[491,15899+36])
                                  Pexp_ident "omegas" (typing/parmatch.ml[491,15899+30]..[491,15899+36])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[491,15899+37]..[491,15899+38])
                                  Pexp_ident "r" (typing/parmatch.ml[491,15899+37]..[491,15899+38])
                            ]
                      ]
                      expression (typing/parmatch.ml[492,15941+4]..[492,15941+57])
                        Pexp_construct "::" (typing/parmatch.ml[492,15941+51]..[492,15941+53])
                        Some
                          expression (typing/parmatch.ml[492,15941+4]..[492,15941+57]) ghost
                            Pexp_tuple
                            [
                              expression (typing/parmatch.ml[492,15941+4]..[492,15941+51])
                                Pexp_apply
                                expression (typing/parmatch.ml[492,15941+4]..[492,15941+12])
                                  Pexp_ident "make_pat" (typing/parmatch.ml[492,15941+4]..[492,15941+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[492,15941+13]..[492,15941+30])
                                      Pexp_construct "Tpat_tuple" (typing/parmatch.ml[492,15941+14]..[492,15941+24])
                                      Some
                                        expression (typing/parmatch.ml[492,15941+25]..[492,15941+29])
                                          Pexp_ident "args" (typing/parmatch.ml[492,15941+25]..[492,15941+29])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[492,15941+31]..[492,15941+41])
                                      Pexp_field
                                      expression (typing/parmatch.ml[492,15941+31]..[492,15941+32])
                                        Pexp_ident "q" (typing/parmatch.ml[492,15941+31]..[492,15941+32])
                                      "pat_type" (typing/parmatch.ml[492,15941+33]..[492,15941+41])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[492,15941+42]..[492,15941+51])
                                      Pexp_field
                                      expression (typing/parmatch.ml[492,15941+42]..[492,15941+43])
                                        Pexp_ident "q" (typing/parmatch.ml[492,15941+42]..[492,15941+43])
                                      "pat_env" (typing/parmatch.ml[492,15941+44]..[492,15941+51])
                                ]
                              expression (typing/parmatch.ml[492,15941+53]..[492,15941+57])
                                Pexp_ident "rest" (typing/parmatch.ml[492,15941+53]..[492,15941+57])
                            ]
                  <case>
                    pattern (typing/parmatch.ml[493,15999+2]..[493,15999+42])
                      Ppat_record Closed
                      [
                        "pat_desc" (typing/parmatch.ml[493,15999+3]..[493,15999+11])
                          pattern (typing/parmatch.ml[493,15999+14]..[493,15999+41])
                            Ppat_construct "Tpat_record" (typing/parmatch.ml[493,15999+14]..[493,15999+25])
                            Some
                              []
                              pattern (typing/parmatch.ml[493,15999+26]..[493,15999+41])
                                Ppat_tuple
                                [
                                  pattern (typing/parmatch.ml[493,15999+27]..[493,15999+33])
                                    Ppat_var "omegas" (typing/parmatch.ml[493,15999+27]..[493,15999+33])
                                  pattern (typing/parmatch.ml[493,15999+34]..[493,15999+40])
                                    Ppat_var "closed" (typing/parmatch.ml[493,15999+34]..[493,15999+40])
                                ]
                      ]
                    expression (typing/parmatch.ml[494,16045+4]..[508,16450+8])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/parmatch.ml[494,16045+8]..[494,16045+17])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[494,16045+8]..[494,16045+12])
                                Ppat_var "args" (typing/parmatch.ml[494,16045+8]..[494,16045+12])
                              pattern (typing/parmatch.ml[494,16045+13]..[494,16045+17])
                                Ppat_var "rest" (typing/parmatch.ml[494,16045+13]..[494,16045+17])
                            ]
                          expression (typing/parmatch.ml[494,16045+20]..[494,16045+38])
                            Pexp_apply
                            expression (typing/parmatch.ml[494,16045+20]..[494,16045+29])
                              Pexp_ident "read_args" (typing/parmatch.ml[494,16045+20]..[494,16045+29])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[494,16045+30]..[494,16045+36])
                                  Pexp_ident "omegas" (typing/parmatch.ml[494,16045+30]..[494,16045+36])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[494,16045+37]..[494,16045+38])
                                  Pexp_ident "r" (typing/parmatch.ml[494,16045+37]..[494,16045+38])
                            ]
                      ]
                      expression (typing/parmatch.ml[495,16087+4]..[508,16450+8])
                        Pexp_construct "::" (typing/parmatch.ml[507,16421+26]..[507,16421+28])
                        Some
                          expression (typing/parmatch.ml[495,16087+4]..[508,16450+8]) ghost
                            Pexp_tuple
                            [
                              expression (typing/parmatch.ml[495,16087+4]..[507,16421+26])
                                Pexp_apply
                                expression (typing/parmatch.ml[495,16087+4]..[495,16087+12])
                                  Pexp_ident "make_pat" (typing/parmatch.ml[495,16087+4]..[495,16087+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[496,16100+6]..[506,16387+33])
                                      Pexp_construct "Tpat_record" (typing/parmatch.ml[496,16100+7]..[496,16100+18])
                                      Some
                                        expression (typing/parmatch.ml[497,16119+9]..[506,16387+32])
                                          Pexp_tuple
                                          [
                                            expression (typing/parmatch.ml[497,16119+10]..[506,16387+23])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[497,16119+10]..[497,16119+19])
                                                Pexp_ident "List.map2" (typing/parmatch.ml[497,16119+10]..[497,16119+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[497,16119+20]..[505,16359+27])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (typing/parmatch.ml[497,16119+25]..[497,16119+37])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/parmatch.ml[497,16119+26]..[497,16119+29])
                                                          Ppat_var "lid" (typing/parmatch.ml[497,16119+26]..[497,16119+29])
                                                        pattern (typing/parmatch.ml[497,16119+31]..[497,16119+34])
                                                          Ppat_var "lbl" (typing/parmatch.ml[497,16119+31]..[497,16119+34])
                                                        pattern (typing/parmatch.ml[497,16119+35]..[497,16119+36])
                                                          Ppat_any
                                                      ]
                                                    expression (typing/parmatch.ml[497,16119+38]..[505,16359+26]) ghost
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (typing/parmatch.ml[497,16119+38]..[497,16119+41])
                                                        Ppat_var "arg" (typing/parmatch.ml[497,16119+38]..[497,16119+41])
                                                      expression (typing/parmatch.ml[498,16164+11]..[505,16359+26])
                                                        Pexp_ifthenelse
                                                        expression (typing/parmatch.ml[499,16178+13]..[501,16245+52])
                                                          Pexp_apply
                                                          expression (typing/parmatch.ml[499,16178+27]..[499,16178+29])
                                                            Pexp_ident "&&" (typing/parmatch.ml[499,16178+27]..[499,16178+29])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/parmatch.ml[499,16178+13]..[499,16178+26])
                                                                Pexp_ident "erase_mutable" (typing/parmatch.ml[499,16178+13]..[499,16178+26])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/parmatch.ml[500,16208+13]..[501,16245+52])
                                                                Pexp_match
                                                                expression (typing/parmatch.ml[500,16208+20]..[500,16208+31])
                                                                  Pexp_field
                                                                  expression (typing/parmatch.ml[500,16208+20]..[500,16208+23])
                                                                    Pexp_ident "lbl" (typing/parmatch.ml[500,16208+20]..[500,16208+23])
                                                                  "lbl_mut" (typing/parmatch.ml[500,16208+24]..[500,16208+31])
                                                                [
                                                                  <case>
                                                                    pattern (typing/parmatch.ml[501,16245+15]..[501,16245+22])
                                                                      Ppat_construct "Mutable" (typing/parmatch.ml[501,16245+15]..[501,16245+22])
                                                                      None
                                                                    expression (typing/parmatch.ml[501,16245+26]..[501,16245+30])
                                                                      Pexp_construct "true" (typing/parmatch.ml[501,16245+26]..[501,16245+30])
                                                                      None
                                                                  <case>
                                                                    pattern (typing/parmatch.ml[501,16245+33]..[501,16245+42])
                                                                      Ppat_construct "Immutable" (typing/parmatch.ml[501,16245+33]..[501,16245+42])
                                                                      None
                                                                    expression (typing/parmatch.ml[501,16245+46]..[501,16245+51])
                                                                      Pexp_construct "false" (typing/parmatch.ml[501,16245+46]..[501,16245+51])
                                                                      None
                                                                ]
                                                          ]
                                                        expression (typing/parmatch.ml[503,16314+13]..[503,16314+28])
                                                          Pexp_tuple
                                                          [
                                                            expression (typing/parmatch.ml[503,16314+13]..[503,16314+16])
                                                              Pexp_ident "lid" (typing/parmatch.ml[503,16314+13]..[503,16314+16])
                                                            expression (typing/parmatch.ml[503,16314+18]..[503,16314+21])
                                                              Pexp_ident "lbl" (typing/parmatch.ml[503,16314+18]..[503,16314+21])
                                                            expression (typing/parmatch.ml[503,16314+23]..[503,16314+28])
                                                              Pexp_ident "omega" (typing/parmatch.ml[503,16314+23]..[503,16314+28])
                                                          ]
                                                        Some
                                                          expression (typing/parmatch.ml[505,16359+13]..[505,16359+26])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/parmatch.ml[505,16359+13]..[505,16359+16])
                                                                Pexp_ident "lid" (typing/parmatch.ml[505,16359+13]..[505,16359+16])
                                                              expression (typing/parmatch.ml[505,16359+18]..[505,16359+21])
                                                                Pexp_ident "lbl" (typing/parmatch.ml[505,16359+18]..[505,16359+21])
                                                              expression (typing/parmatch.ml[505,16359+23]..[505,16359+26])
                                                                Pexp_ident "arg" (typing/parmatch.ml[505,16359+23]..[505,16359+26])
                                                            ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[506,16387+12]..[506,16387+18])
                                                    Pexp_ident "omegas" (typing/parmatch.ml[506,16387+12]..[506,16387+18])
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[506,16387+19]..[506,16387+23])
                                                    Pexp_ident "args" (typing/parmatch.ml[506,16387+19]..[506,16387+23])
                                              ]
                                            expression (typing/parmatch.ml[506,16387+25]..[506,16387+31])
                                              Pexp_ident "closed" (typing/parmatch.ml[506,16387+25]..[506,16387+31])
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[507,16421+6]..[507,16421+16])
                                      Pexp_field
                                      expression (typing/parmatch.ml[507,16421+6]..[507,16421+7])
                                        Pexp_ident "q" (typing/parmatch.ml[507,16421+6]..[507,16421+7])
                                      "pat_type" (typing/parmatch.ml[507,16421+8]..[507,16421+16])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[507,16421+17]..[507,16421+26])
                                      Pexp_field
                                      expression (typing/parmatch.ml[507,16421+17]..[507,16421+18])
                                        Pexp_ident "q" (typing/parmatch.ml[507,16421+17]..[507,16421+18])
                                      "pat_env" (typing/parmatch.ml[507,16421+19]..[507,16421+26])
                                ]
                              expression (typing/parmatch.ml[508,16450+4]..[508,16450+8])
                                Pexp_ident "rest" (typing/parmatch.ml[508,16450+4]..[508,16450+8])
                            ]
                  <case>
                    pattern (typing/parmatch.ml[509,16459+2]..[509,16459+49])
                      Ppat_record Closed
                      [
                        "pat_desc" (typing/parmatch.ml[509,16459+3]..[509,16459+11])
                          pattern (typing/parmatch.ml[509,16459+14]..[509,16459+48])
                            Ppat_construct "Tpat_construct" (typing/parmatch.ml[509,16459+14]..[509,16459+28])
                            Some
                              []
                              pattern (typing/parmatch.ml[509,16459+29]..[509,16459+48])
                                Ppat_tuple
                                [
                                  pattern (typing/parmatch.ml[509,16459+30]..[509,16459+33])
                                    Ppat_var "lid" (typing/parmatch.ml[509,16459+30]..[509,16459+33])
                                  pattern (typing/parmatch.ml[509,16459+35]..[509,16459+36])
                                    Ppat_var "c" (typing/parmatch.ml[509,16459+35]..[509,16459+36])
                                  pattern (typing/parmatch.ml[509,16459+38]..[509,16459+44])
                                    Ppat_var "omegas" (typing/parmatch.ml[509,16459+38]..[509,16459+44])
                                  pattern (typing/parmatch.ml[509,16459+46]..[509,16459+47])
                                    Ppat_any
                                ]
                      ]
                    expression (typing/parmatch.ml[510,16512+4]..[514,16640+8])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/parmatch.ml[510,16512+8]..[510,16512+17])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[510,16512+8]..[510,16512+12])
                                Ppat_var "args" (typing/parmatch.ml[510,16512+8]..[510,16512+12])
                              pattern (typing/parmatch.ml[510,16512+13]..[510,16512+17])
                                Ppat_var "rest" (typing/parmatch.ml[510,16512+13]..[510,16512+17])
                            ]
                          expression (typing/parmatch.ml[510,16512+20]..[510,16512+38])
                            Pexp_apply
                            expression (typing/parmatch.ml[510,16512+20]..[510,16512+29])
                              Pexp_ident "read_args" (typing/parmatch.ml[510,16512+20]..[510,16512+29])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[510,16512+30]..[510,16512+36])
                                  Pexp_ident "omegas" (typing/parmatch.ml[510,16512+30]..[510,16512+36])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[510,16512+37]..[510,16512+38])
                                  Pexp_ident "r" (typing/parmatch.ml[510,16512+37]..[510,16512+38])
                            ]
                      ]
                      expression (typing/parmatch.ml[511,16554+4]..[514,16640+8])
                        Pexp_construct "::" (typing/parmatch.ml[513,16611+26]..[513,16611+28])
                        Some
                          expression (typing/parmatch.ml[511,16554+4]..[514,16640+8]) ghost
                            Pexp_tuple
                            [
                              expression (typing/parmatch.ml[511,16554+4]..[513,16611+26])
                                Pexp_apply
                                expression (typing/parmatch.ml[511,16554+4]..[511,16554+12])
                                  Pexp_ident "make_pat" (typing/parmatch.ml[511,16554+4]..[511,16554+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[512,16567+6]..[512,16567+43])
                                      Pexp_construct "Tpat_construct" (typing/parmatch.ml[512,16567+7]..[512,16567+21])
                                      Some
                                        expression (typing/parmatch.ml[512,16567+22]..[512,16567+42])
                                          Pexp_tuple
                                          [
                                            expression (typing/parmatch.ml[512,16567+23]..[512,16567+26])
                                              Pexp_ident "lid" (typing/parmatch.ml[512,16567+23]..[512,16567+26])
                                            expression (typing/parmatch.ml[512,16567+28]..[512,16567+29])
                                              Pexp_ident "c" (typing/parmatch.ml[512,16567+28]..[512,16567+29])
                                            expression (typing/parmatch.ml[512,16567+31]..[512,16567+35])
                                              Pexp_ident "args" (typing/parmatch.ml[512,16567+31]..[512,16567+35])
                                            expression (typing/parmatch.ml[512,16567+37]..[512,16567+41])
                                              Pexp_construct "None" (typing/parmatch.ml[512,16567+37]..[512,16567+41])
                                              None
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[513,16611+6]..[513,16611+16])
                                      Pexp_field
                                      expression (typing/parmatch.ml[513,16611+6]..[513,16611+7])
                                        Pexp_ident "q" (typing/parmatch.ml[513,16611+6]..[513,16611+7])
                                      "pat_type" (typing/parmatch.ml[513,16611+8]..[513,16611+16])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[513,16611+17]..[513,16611+26])
                                      Pexp_field
                                      expression (typing/parmatch.ml[513,16611+17]..[513,16611+18])
                                        Pexp_ident "q" (typing/parmatch.ml[513,16611+17]..[513,16611+18])
                                      "pat_env" (typing/parmatch.ml[513,16611+19]..[513,16611+26])
                                ]
                              expression (typing/parmatch.ml[514,16640+4]..[514,16640+8])
                                Pexp_ident "rest" (typing/parmatch.ml[514,16640+4]..[514,16640+8])
                            ]
                  <case>
                    pattern (typing/parmatch.ml[515,16649+2]..[515,16649+43])
                      Ppat_record Closed
                      [
                        "pat_desc" (typing/parmatch.ml[515,16649+3]..[515,16649+11])
                          pattern (typing/parmatch.ml[515,16649+14]..[515,16649+42])
                            Ppat_construct "Tpat_variant" (typing/parmatch.ml[515,16649+14]..[515,16649+26])
                            Some
                              []
                              pattern (typing/parmatch.ml[515,16649+27]..[515,16649+42])
                                Ppat_tuple
                                [
                                  pattern (typing/parmatch.ml[515,16649+28]..[515,16649+29])
                                    Ppat_var "l" (typing/parmatch.ml[515,16649+28]..[515,16649+29])
                                  pattern (typing/parmatch.ml[515,16649+31]..[515,16649+36])
                                    Ppat_var "omega" (typing/parmatch.ml[515,16649+31]..[515,16649+36])
                                  pattern (typing/parmatch.ml[515,16649+38]..[515,16649+41])
                                    Ppat_var "row" (typing/parmatch.ml[515,16649+38]..[515,16649+41])
                                ]
                      ]
                    expression (typing/parmatch.ml[516,16696+4]..[524,16907+8])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/parmatch.ml[516,16696+8]..[516,16696+17])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[516,16696+8]..[516,16696+11])
                                Ppat_var "arg" (typing/parmatch.ml[516,16696+8]..[516,16696+11])
                              pattern (typing/parmatch.ml[516,16696+13]..[516,16696+17])
                                Ppat_var "rest" (typing/parmatch.ml[516,16696+13]..[516,16696+17])
                            ]
                          expression (typing/parmatch.ml[517,16716+6]..[520,16803+25])
                            Pexp_match
                            expression (typing/parmatch.ml[517,16716+12]..[517,16716+20])
                              Pexp_tuple
                              [
                                expression (typing/parmatch.ml[517,16716+12]..[517,16716+17])
                                  Pexp_ident "omega" (typing/parmatch.ml[517,16716+12]..[517,16716+17])
                                expression (typing/parmatch.ml[517,16716+19]..[517,16716+20])
                                  Pexp_ident "r" (typing/parmatch.ml[517,16716+19]..[517,16716+20])
                              ]
                            [
                              <case>
                                pattern (typing/parmatch.ml[518,16742+8]..[518,16742+20])
                                  Ppat_tuple
                                  [
                                    pattern (typing/parmatch.ml[518,16742+8]..[518,16742+14])
                                      Ppat_construct "Some" (typing/parmatch.ml[518,16742+8]..[518,16742+12])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[518,16742+13]..[518,16742+14])
                                          Ppat_any
                                    pattern (typing/parmatch.ml[518,16742+16]..[518,16742+20])
                                      Ppat_construct "::" (typing/parmatch.ml[518,16742+17]..[518,16742+19])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[518,16742+16]..[518,16742+20]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[518,16742+16]..[518,16742+17])
                                              Ppat_var "a" (typing/parmatch.ml[518,16742+16]..[518,16742+17])
                                            pattern (typing/parmatch.ml[518,16742+19]..[518,16742+20])
                                              Ppat_var "r" (typing/parmatch.ml[518,16742+19]..[518,16742+20])
                                          ]
                                  ]
                                expression (typing/parmatch.ml[518,16742+24]..[518,16742+33])
                                  Pexp_tuple
                                  [
                                    expression (typing/parmatch.ml[518,16742+24]..[518,16742+30])
                                      Pexp_construct "Some" (typing/parmatch.ml[518,16742+24]..[518,16742+28])
                                      Some
                                        expression (typing/parmatch.ml[518,16742+29]..[518,16742+30])
                                          Pexp_ident "a" (typing/parmatch.ml[518,16742+29]..[518,16742+30])
                                    expression (typing/parmatch.ml[518,16742+32]..[518,16742+33])
                                      Pexp_ident "r" (typing/parmatch.ml[518,16742+32]..[518,16742+33])
                                  ]
                              <case>
                                pattern (typing/parmatch.ml[519,16776+8]..[519,16776+15])
                                  Ppat_tuple
                                  [
                                    pattern (typing/parmatch.ml[519,16776+8]..[519,16776+12])
                                      Ppat_construct "None" (typing/parmatch.ml[519,16776+8]..[519,16776+12])
                                      None
                                    pattern (typing/parmatch.ml[519,16776+14]..[519,16776+15])
                                      Ppat_var "r" (typing/parmatch.ml[519,16776+14]..[519,16776+15])
                                  ]
                                expression (typing/parmatch.ml[519,16776+19]..[519,16776+26])
                                  Pexp_tuple
                                  [
                                    expression (typing/parmatch.ml[519,16776+19]..[519,16776+23])
                                      Pexp_construct "None" (typing/parmatch.ml[519,16776+19]..[519,16776+23])
                                      None
                                    expression (typing/parmatch.ml[519,16776+25]..[519,16776+26])
                                      Pexp_ident "r" (typing/parmatch.ml[519,16776+25]..[519,16776+26])
                                  ]
                              <case>
                                pattern (typing/parmatch.ml[520,16803+8]..[520,16803+9])
                                  Ppat_any
                                expression (typing/parmatch.ml[520,16803+13]..[520,16803+25])
                                  Pexp_assert
                                  expression (typing/parmatch.ml[520,16803+20]..[520,16803+25])
                                    Pexp_construct "false" (typing/parmatch.ml[520,16803+20]..[520,16803+25])
                                    None
                            ]
                      ]
                      expression (typing/parmatch.ml[522,16836+4]..[524,16907+8])
                        Pexp_construct "::" (typing/parmatch.ml[523,16849+55]..[523,16849+57])
                        Some
                          expression (typing/parmatch.ml[522,16836+4]..[524,16907+8]) ghost
                            Pexp_tuple
                            [
                              expression (typing/parmatch.ml[522,16836+4]..[523,16849+55])
                                Pexp_apply
                                expression (typing/parmatch.ml[522,16836+4]..[522,16836+12])
                                  Pexp_ident "make_pat" (typing/parmatch.ml[522,16836+4]..[522,16836+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[523,16849+6]..[523,16849+34])
                                      Pexp_construct "Tpat_variant" (typing/parmatch.ml[523,16849+7]..[523,16849+19])
                                      Some
                                        expression (typing/parmatch.ml[523,16849+20]..[523,16849+33])
                                          Pexp_tuple
                                          [
                                            expression (typing/parmatch.ml[523,16849+21]..[523,16849+22])
                                              Pexp_ident "l" (typing/parmatch.ml[523,16849+21]..[523,16849+22])
                                            expression (typing/parmatch.ml[523,16849+24]..[523,16849+27])
                                              Pexp_ident "arg" (typing/parmatch.ml[523,16849+24]..[523,16849+27])
                                            expression (typing/parmatch.ml[523,16849+29]..[523,16849+32])
                                              Pexp_ident "row" (typing/parmatch.ml[523,16849+29]..[523,16849+32])
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[523,16849+35]..[523,16849+45])
                                      Pexp_field
                                      expression (typing/parmatch.ml[523,16849+35]..[523,16849+36])
                                        Pexp_ident "q" (typing/parmatch.ml[523,16849+35]..[523,16849+36])
                                      "pat_type" (typing/parmatch.ml[523,16849+37]..[523,16849+45])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[523,16849+46]..[523,16849+55])
                                      Pexp_field
                                      expression (typing/parmatch.ml[523,16849+46]..[523,16849+47])
                                        Pexp_ident "q" (typing/parmatch.ml[523,16849+46]..[523,16849+47])
                                      "pat_env" (typing/parmatch.ml[523,16849+48]..[523,16849+55])
                                ]
                              expression (typing/parmatch.ml[524,16907+4]..[524,16907+8])
                                Pexp_ident "rest" (typing/parmatch.ml[524,16907+4]..[524,16907+8])
                            ]
                  <case>
                    pattern (typing/parmatch.ml[525,16916+2]..[525,16916+31])
                      Ppat_record Closed
                      [
                        "pat_desc" (typing/parmatch.ml[525,16916+3]..[525,16916+11])
                          pattern (typing/parmatch.ml[525,16916+14]..[525,16916+30])
                            Ppat_construct "Tpat_lazy" (typing/parmatch.ml[525,16916+14]..[525,16916+23])
                            Some
                              []
                              pattern (typing/parmatch.ml[525,16916+24]..[525,16916+30])
                                Ppat_var "_omega" (typing/parmatch.ml[525,16916+24]..[525,16916+30])
                      ]
                    expression (typing/parmatch.ml[526,16951+4]..[530,17106+7])
                      Pexp_match
                      expression (typing/parmatch.ml[526,16951+16]..[526,16951+17])
                        Pexp_ident "r" (typing/parmatch.ml[526,16951+16]..[526,16951+17])
                      [
                        <case>
                          pattern (typing/parmatch.ml[527,16974+6]..[527,16974+15])
                            Ppat_construct "::" (typing/parmatch.ml[527,16974+9]..[527,16974+11])
                            Some
                              []
                              pattern (typing/parmatch.ml[527,16974+6]..[527,16974+15]) ghost
                                Ppat_tuple
                                [
                                  pattern (typing/parmatch.ml[527,16974+6]..[527,16974+9])
                                    Ppat_var "arg" (typing/parmatch.ml[527,16974+6]..[527,16974+9])
                                  pattern (typing/parmatch.ml[527,16974+11]..[527,16974+15])
                                    Ppat_var "rest" (typing/parmatch.ml[527,16974+11]..[527,16974+15])
                                ]
                          expression (typing/parmatch.ml[528,16993+8]..[528,16993+59])
                            Pexp_construct "::" (typing/parmatch.ml[528,16993+53]..[528,16993+55])
                            Some
                              expression (typing/parmatch.ml[528,16993+8]..[528,16993+59]) ghost
                                Pexp_tuple
                                [
                                  expression (typing/parmatch.ml[528,16993+8]..[528,16993+53])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[528,16993+8]..[528,16993+16])
                                      Pexp_ident "make_pat" (typing/parmatch.ml[528,16993+8]..[528,16993+16])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[528,16993+17]..[528,16993+32])
                                          Pexp_construct "Tpat_lazy" (typing/parmatch.ml[528,16993+18]..[528,16993+27])
                                          Some
                                            expression (typing/parmatch.ml[528,16993+28]..[528,16993+31])
                                              Pexp_ident "arg" (typing/parmatch.ml[528,16993+28]..[528,16993+31])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[528,16993+33]..[528,16993+43])
                                          Pexp_field
                                          expression (typing/parmatch.ml[528,16993+33]..[528,16993+34])
                                            Pexp_ident "q" (typing/parmatch.ml[528,16993+33]..[528,16993+34])
                                          "pat_type" (typing/parmatch.ml[528,16993+35]..[528,16993+43])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[528,16993+44]..[528,16993+53])
                                          Pexp_field
                                          expression (typing/parmatch.ml[528,16993+44]..[528,16993+45])
                                            Pexp_ident "q" (typing/parmatch.ml[528,16993+44]..[528,16993+45])
                                          "pat_env" (typing/parmatch.ml[528,16993+46]..[528,16993+53])
                                    ]
                                  expression (typing/parmatch.ml[528,16993+55]..[528,16993+59])
                                    Pexp_ident "rest" (typing/parmatch.ml[528,16993+55]..[528,16993+59])
                                ]
                        <case>
                          pattern (typing/parmatch.ml[529,17053+6]..[529,17053+7])
                            Ppat_any
                          expression (typing/parmatch.ml[529,17053+11]..[529,17053+52])
                            Pexp_apply
                            expression (typing/parmatch.ml[529,17053+11]..[529,17053+22])
                              Pexp_ident "fatal_error" (typing/parmatch.ml[529,17053+11]..[529,17053+22])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[529,17053+23]..[529,17053+52])
                                  Pexp_constant PConst_string("Parmatch.do_set_args (lazy)",(typing/parmatch.ml[529,17053+24]..[529,17053+51]),None)
                            ]
                      ]
                  <case>
                    pattern (typing/parmatch.ml[531,17114+2]..[531,17114+32])
                      Ppat_record Closed
                      [
                        "pat_desc" (typing/parmatch.ml[531,17114+3]..[531,17114+11])
                          pattern (typing/parmatch.ml[531,17114+14]..[531,17114+31])
                            Ppat_construct "Tpat_array" (typing/parmatch.ml[531,17114+14]..[531,17114+24])
                            Some
                              []
                              pattern (typing/parmatch.ml[531,17114+25]..[531,17114+31])
                                Ppat_var "omegas" (typing/parmatch.ml[531,17114+25]..[531,17114+31])
                      ]
                    expression (typing/parmatch.ml[532,17150+4]..[535,17252+8])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/parmatch.ml[532,17150+8]..[532,17150+17])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[532,17150+8]..[532,17150+12])
                                Ppat_var "args" (typing/parmatch.ml[532,17150+8]..[532,17150+12])
                              pattern (typing/parmatch.ml[532,17150+13]..[532,17150+17])
                                Ppat_var "rest" (typing/parmatch.ml[532,17150+13]..[532,17150+17])
                            ]
                          expression (typing/parmatch.ml[532,17150+20]..[532,17150+38])
                            Pexp_apply
                            expression (typing/parmatch.ml[532,17150+20]..[532,17150+29])
                              Pexp_ident "read_args" (typing/parmatch.ml[532,17150+20]..[532,17150+29])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[532,17150+30]..[532,17150+36])
                                  Pexp_ident "omegas" (typing/parmatch.ml[532,17150+30]..[532,17150+36])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[532,17150+37]..[532,17150+38])
                                  Pexp_ident "r" (typing/parmatch.ml[532,17150+37]..[532,17150+38])
                            ]
                      ]
                      expression (typing/parmatch.ml[533,17192+4]..[535,17252+8])
                        Pexp_construct "::" (typing/parmatch.ml[534,17205+44]..[534,17205+46])
                        Some
                          expression (typing/parmatch.ml[533,17192+4]..[535,17252+8]) ghost
                            Pexp_tuple
                            [
                              expression (typing/parmatch.ml[533,17192+4]..[534,17205+44])
                                Pexp_apply
                                expression (typing/parmatch.ml[533,17192+4]..[533,17192+12])
                                  Pexp_ident "make_pat" (typing/parmatch.ml[533,17192+4]..[533,17192+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[534,17205+6]..[534,17205+23])
                                      Pexp_construct "Tpat_array" (typing/parmatch.ml[534,17205+7]..[534,17205+17])
                                      Some
                                        expression (typing/parmatch.ml[534,17205+18]..[534,17205+22])
                                          Pexp_ident "args" (typing/parmatch.ml[534,17205+18]..[534,17205+22])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[534,17205+24]..[534,17205+34])
                                      Pexp_field
                                      expression (typing/parmatch.ml[534,17205+24]..[534,17205+25])
                                        Pexp_ident "q" (typing/parmatch.ml[534,17205+24]..[534,17205+25])
                                      "pat_type" (typing/parmatch.ml[534,17205+26]..[534,17205+34])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[534,17205+35]..[534,17205+44])
                                      Pexp_field
                                      expression (typing/parmatch.ml[534,17205+35]..[534,17205+36])
                                        Pexp_ident "q" (typing/parmatch.ml[534,17205+35]..[534,17205+36])
                                      "pat_env" (typing/parmatch.ml[534,17205+37]..[534,17205+44])
                                ]
                              expression (typing/parmatch.ml[535,17252+4]..[535,17252+8])
                                Pexp_ident "rest" (typing/parmatch.ml[535,17252+4]..[535,17252+8])
                            ]
                  <case>
                    pattern (typing/parmatch.ml[536,17261+2]..[536,17261+37])
                      Ppat_record Closed
                      [
                        "pat_desc" (typing/parmatch.ml[536,17261+3]..[536,17261+11])
                          pattern (typing/parmatch.ml[536,17261+12]..[536,17261+36])
                            Ppat_or
                            pattern (typing/parmatch.ml[536,17261+12]..[536,17261+27])
                              Ppat_construct "Tpat_constant" (typing/parmatch.ml[536,17261+12]..[536,17261+25])
                              Some
                                []
                                pattern (typing/parmatch.ml[536,17261+26]..[536,17261+27])
                                  Ppat_any
                            pattern (typing/parmatch.ml[536,17261+28]..[536,17261+36])
                              Ppat_construct "Tpat_any" (typing/parmatch.ml[536,17261+28]..[536,17261+36])
                              None
                      ]
                    expression (typing/parmatch.ml[537,17302+4]..[537,17302+8])
                      Pexp_construct "::" (typing/parmatch.ml[537,17302+5]..[537,17302+7])
                      Some
                        expression (typing/parmatch.ml[537,17302+4]..[537,17302+8]) ghost
                          Pexp_tuple
                          [
                            expression (typing/parmatch.ml[537,17302+4]..[537,17302+5])
                              Pexp_ident "q" (typing/parmatch.ml[537,17302+4]..[537,17302+5])
                            expression (typing/parmatch.ml[537,17302+7]..[537,17302+8])
                              Pexp_ident "r" (typing/parmatch.ml[537,17302+7]..[537,17302+8])
                          ]
                  <case>
                    pattern (typing/parmatch.ml[538,17349+2]..[538,17349+3])
                      Ppat_any
                    expression (typing/parmatch.ml[538,17349+7]..[538,17349+38])
                      Pexp_apply
                      expression (typing/parmatch.ml[538,17349+7]..[538,17349+18])
                        Pexp_ident "fatal_error" (typing/parmatch.ml[538,17349+7]..[538,17349+18])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[538,17349+19]..[538,17349+38])
                            Pexp_constant PConst_string("Parmatch.set_args",(typing/parmatch.ml[538,17349+20]..[538,17349+37]),None)
                      ]
                ]
    ]
  structure_item (typing/parmatch.ml[540,17389+0]..[541,17445+68])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[540,17389+4]..[540,17389+12])
          Ppat_var "set_args" (typing/parmatch.ml[540,17389+4]..[540,17389+12])
        expression (typing/parmatch.ml[540,17389+13]..[540,17389+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[540,17389+13]..[540,17389+14])
            Ppat_var "q" (typing/parmatch.ml[540,17389+13]..[540,17389+14])
          expression (typing/parmatch.ml[540,17389+15]..[540,17389+55]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[540,17389+15]..[540,17389+16])
              Ppat_var "r" (typing/parmatch.ml[540,17389+15]..[540,17389+16])
            expression (typing/parmatch.ml[540,17389+19]..[540,17389+55])
              Pexp_apply
              expression (typing/parmatch.ml[540,17389+19]..[540,17389+30])
                Pexp_ident "do_set_args" (typing/parmatch.ml[540,17389+19]..[540,17389+30])
              [
                <arg>
                Labelled "erase_mutable"
                  expression (typing/parmatch.ml[540,17389+46]..[540,17389+51])
                    Pexp_construct "false" (typing/parmatch.ml[540,17389+46]..[540,17389+51])
                    None
                <arg>
                Nolabel
                  expression (typing/parmatch.ml[540,17389+52]..[540,17389+53])
                    Pexp_ident "q" (typing/parmatch.ml[540,17389+52]..[540,17389+53])
                <arg>
                Nolabel
                  expression (typing/parmatch.ml[540,17389+54]..[540,17389+55])
                    Pexp_ident "r" (typing/parmatch.ml[540,17389+54]..[540,17389+55])
              ]
      <def>
        pattern (typing/parmatch.ml[541,17445+4]..[541,17445+26])
          Ppat_var "set_args_erase_mutable" (typing/parmatch.ml[541,17445+4]..[541,17445+26])
        expression (typing/parmatch.ml[541,17445+27]..[541,17445+68]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[541,17445+27]..[541,17445+28])
            Ppat_var "q" (typing/parmatch.ml[541,17445+27]..[541,17445+28])
          expression (typing/parmatch.ml[541,17445+29]..[541,17445+68]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[541,17445+29]..[541,17445+30])
              Ppat_var "r" (typing/parmatch.ml[541,17445+29]..[541,17445+30])
            expression (typing/parmatch.ml[541,17445+33]..[541,17445+68])
              Pexp_apply
              expression (typing/parmatch.ml[541,17445+33]..[541,17445+44])
                Pexp_ident "do_set_args" (typing/parmatch.ml[541,17445+33]..[541,17445+44])
              [
                <arg>
                Labelled "erase_mutable"
                  expression (typing/parmatch.ml[541,17445+60]..[541,17445+64])
                    Pexp_construct "true" (typing/parmatch.ml[541,17445+60]..[541,17445+64])
                    None
                <arg>
                Nolabel
                  expression (typing/parmatch.ml[541,17445+65]..[541,17445+66])
                    Pexp_ident "q" (typing/parmatch.ml[541,17445+65]..[541,17445+66])
                <arg>
                Nolabel
                  expression (typing/parmatch.ml[541,17445+67]..[541,17445+68])
                    Pexp_ident "r" (typing/parmatch.ml[541,17445+67]..[541,17445+68])
              ]
    ]
  structure_item (typing/parmatch.ml[564,18003+0]..[570,18339+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[564,18003+4]..[564,18003+21])
          Ppat_var "simplify_head_pat" (typing/parmatch.ml[564,18003+4]..[564,18003+21])
        expression (typing/parmatch.ml[564,18003+22]..[570,18339+29]) ghost
          Pexp_fun
          Labelled "add_column"
          None
          pattern (typing/parmatch.ml[564,18003+23]..[564,18003+33])
            Ppat_var "add_column" (typing/parmatch.ml[564,18003+23]..[564,18003+33])
          expression (typing/parmatch.ml[564,18003+34]..[570,18339+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[564,18003+34]..[564,18003+35])
              Ppat_var "p" (typing/parmatch.ml[564,18003+34]..[564,18003+35])
            expression (typing/parmatch.ml[564,18003+36]..[570,18339+29]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[564,18003+36]..[564,18003+38])
                Ppat_var "ps" (typing/parmatch.ml[564,18003+36]..[564,18003+38])
              expression (typing/parmatch.ml[564,18003+39]..[570,18339+29]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/parmatch.ml[564,18003+39]..[564,18003+40])
                  Ppat_var "k" (typing/parmatch.ml[564,18003+39]..[564,18003+40])
                expression (typing/parmatch.ml[565,18046+2]..[570,18339+29])
                  Pexp_let Rec
                  [
                    <def>
                      pattern (typing/parmatch.ml[565,18046+10]..[565,18046+27])
                        Ppat_var "simplify_head_pat" (typing/parmatch.ml[565,18046+10]..[565,18046+27])
                      expression (typing/parmatch.ml[565,18046+28]..[569,18261+77]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/parmatch.ml[565,18046+28]..[565,18046+29])
                          Ppat_var "p" (typing/parmatch.ml[565,18046+28]..[565,18046+29])
                        expression (typing/parmatch.ml[565,18046+30]..[569,18261+77]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/parmatch.ml[565,18046+30]..[565,18046+32])
                            Ppat_var "ps" (typing/parmatch.ml[565,18046+30]..[565,18046+32])
                          expression (typing/parmatch.ml[565,18046+33]..[569,18261+77]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/parmatch.ml[565,18046+33]..[565,18046+34])
                              Ppat_var "k" (typing/parmatch.ml[565,18046+33]..[565,18046+34])
                            expression (typing/parmatch.ml[566,18083+4]..[569,18261+77])
                              Pexp_match
                              expression (typing/parmatch.ml[566,18083+10]..[566,18083+58])
                                Pexp_field
                                expression (typing/parmatch.ml[566,18083+10]..[566,18083+49])
                                  Pexp_open Fresh
                                  module_expr (typing/parmatch.ml[566,18083+10]..[566,18083+26])
                                    Pmod_ident "Patterns.General" (typing/parmatch.ml[566,18083+10]..[566,18083+26])
                                  expression (typing/parmatch.ml[566,18083+28]..[566,18083+48])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[566,18083+35]..[566,18083+37])
                                      Pexp_ident "|>" (typing/parmatch.ml[566,18083+35]..[566,18083+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[566,18083+28]..[566,18083+34])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[566,18083+28]..[566,18083+32])
                                            Pexp_ident "view" (typing/parmatch.ml[566,18083+28]..[566,18083+32])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[566,18083+33]..[566,18083+34])
                                                Pexp_ident "p" (typing/parmatch.ml[566,18083+33]..[566,18083+34])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[566,18083+38]..[566,18083+48])
                                          Pexp_ident "strip_vars" (typing/parmatch.ml[566,18083+38]..[566,18083+48])
                                    ]
                                "pat_desc" (typing/parmatch.ml[566,18083+50]..[566,18083+58])
                              [
                                <case>
                                  pattern (typing/parmatch.ml[567,18147+6]..[567,18147+19])
                                    Ppat_variant "Or"
                                    Some
                                      pattern (typing/parmatch.ml[567,18147+10]..[567,18147+19])
                                        Ppat_tuple
                                        [
                                          pattern (typing/parmatch.ml[567,18147+11]..[567,18147+13])
                                            Ppat_var "p1" (typing/parmatch.ml[567,18147+11]..[567,18147+13])
                                          pattern (typing/parmatch.ml[567,18147+14]..[567,18147+16])
                                            Ppat_var "p2" (typing/parmatch.ml[567,18147+14]..[567,18147+16])
                                          pattern (typing/parmatch.ml[567,18147+17]..[567,18147+18])
                                            Ppat_any
                                        ]
                                  expression (typing/parmatch.ml[567,18147+23]..[567,18147+74])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[567,18147+23]..[567,18147+40])
                                      Pexp_ident "simplify_head_pat" (typing/parmatch.ml[567,18147+23]..[567,18147+40])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[567,18147+41]..[567,18147+43])
                                          Pexp_ident "p1" (typing/parmatch.ml[567,18147+41]..[567,18147+43])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[567,18147+44]..[567,18147+46])
                                          Pexp_ident "ps" (typing/parmatch.ml[567,18147+44]..[567,18147+46])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[567,18147+47]..[567,18147+74])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[567,18147+48]..[567,18147+65])
                                            Pexp_ident "simplify_head_pat" (typing/parmatch.ml[567,18147+48]..[567,18147+65])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[567,18147+66]..[567,18147+68])
                                                Pexp_ident "p2" (typing/parmatch.ml[567,18147+66]..[567,18147+68])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[567,18147+69]..[567,18147+71])
                                                Pexp_ident "ps" (typing/parmatch.ml[567,18147+69]..[567,18147+71])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[567,18147+72]..[567,18147+73])
                                                Pexp_ident "k" (typing/parmatch.ml[567,18147+72]..[567,18147+73])
                                          ]
                                    ]
                                <case>
                                  pattern (typing/parmatch.ml[568,18222+6]..[568,18222+35])
                                    Ppat_alias "view" (typing/parmatch.ml[568,18222+31]..[568,18222+35])
                                    pattern (typing/parmatch.ml[568,18222+6]..[568,18222+27])
                                      Ppat_type
                                      "Patterns.Simple.view" (typing/parmatch.ml[568,18222+7]..[568,18222+27])
                                  expression (typing/parmatch.ml[569,18261+7]..[569,18261+77])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[569,18261+7]..[569,18261+17])
                                      Pexp_ident "add_column" (typing/parmatch.ml[569,18261+7]..[569,18261+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[569,18261+18]..[569,18261+72])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[569,18261+19]..[569,18261+44])
                                            Pexp_ident "Patterns.Head.deconstruct" (typing/parmatch.ml[569,18261+19]..[569,18261+44])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[569,18261+45]..[569,18261+71])
                                                Pexp_record
                                                [
                                                  "pat_desc" (typing/parmatch.ml[569,18261+54]..[569,18261+62])
                                                    expression (typing/parmatch.ml[569,18261+65]..[569,18261+69])
                                                      Pexp_ident "view" (typing/parmatch.ml[569,18261+65]..[569,18261+69])
                                                ]
                                                Some
                                                  expression (typing/parmatch.ml[569,18261+47]..[569,18261+48])
                                                    Pexp_ident "p" (typing/parmatch.ml[569,18261+47]..[569,18261+48])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[569,18261+73]..[569,18261+75])
                                          Pexp_ident "ps" (typing/parmatch.ml[569,18261+73]..[569,18261+75])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[569,18261+76]..[569,18261+77])
                                          Pexp_ident "k" (typing/parmatch.ml[569,18261+76]..[569,18261+77])
                                    ]
                              ]
                  ]
                  expression (typing/parmatch.ml[570,18339+5]..[570,18339+29])
                    Pexp_apply
                    expression (typing/parmatch.ml[570,18339+5]..[570,18339+22])
                      Pexp_ident "simplify_head_pat" (typing/parmatch.ml[570,18339+5]..[570,18339+22])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[570,18339+23]..[570,18339+24])
                          Pexp_ident "p" (typing/parmatch.ml[570,18339+23]..[570,18339+24])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[570,18339+25]..[570,18339+27])
                          Pexp_ident "ps" (typing/parmatch.ml[570,18339+25]..[570,18339+27])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[570,18339+28]..[570,18339+29])
                          Pexp_ident "k" (typing/parmatch.ml[570,18339+28]..[570,18339+29])
                    ]
    ]
  structure_item (typing/parmatch.ml[572,18370+0]..[577,18548+66])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[572,18370+8]..[572,18370+26])
          Ppat_var "simplify_first_col" (typing/parmatch.ml[572,18370+8]..[572,18370+26])
        expression (typing/parmatch.ml[572,18370+29]..[577,18548+66])
          Pexp_function
          [
            <case>
              pattern (typing/parmatch.ml[573,18408+4]..[573,18408+6])
                Ppat_construct "[]" (typing/parmatch.ml[573,18408+4]..[573,18408+6])
                None
              expression (typing/parmatch.ml[573,18408+10]..[573,18408+12])
                Pexp_construct "[]" (typing/parmatch.ml[573,18408+10]..[573,18408+12])
                None
            <case>
              pattern (typing/parmatch.ml[574,18421+4]..[574,18421+11])
                Ppat_construct "::" (typing/parmatch.ml[574,18421+7]..[574,18421+9])
                Some
                  []
                  pattern (typing/parmatch.ml[574,18421+4]..[574,18421+11]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[574,18421+4]..[574,18421+6])
                        Ppat_construct "[]" (typing/parmatch.ml[574,18421+4]..[574,18421+6])
                        None
                      pattern (typing/parmatch.ml[574,18421+10]..[574,18421+11])
                        Ppat_any
                    ]
              expression (typing/parmatch.ml[574,18421+15]..[574,18421+27])
                Pexp_assert
                expression (typing/parmatch.ml[574,18421+22]..[574,18421+27])
                  Pexp_construct "false" (typing/parmatch.ml[574,18421+22]..[574,18421+27])
                  None
            <case>
              pattern (typing/parmatch.ml[575,18479+4]..[575,18479+19])
                Ppat_construct "::" (typing/parmatch.ml[575,18479+12]..[575,18479+14])
                Some
                  []
                  pattern (typing/parmatch.ml[575,18479+4]..[575,18479+19]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[575,18479+4]..[575,18479+11])
                        Ppat_construct "::" (typing/parmatch.ml[575,18479+6]..[575,18479+8])
                        Some
                          []
                          pattern (typing/parmatch.ml[575,18479+5]..[575,18479+10]) ghost
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[575,18479+5]..[575,18479+6])
                                Ppat_var "p" (typing/parmatch.ml[575,18479+5]..[575,18479+6])
                              pattern (typing/parmatch.ml[575,18479+8]..[575,18479+10])
                                Ppat_var "ps" (typing/parmatch.ml[575,18479+8]..[575,18479+10])
                            ]
                      pattern (typing/parmatch.ml[575,18479+15]..[575,18479+19])
                        Ppat_var "rows" (typing/parmatch.ml[575,18479+15]..[575,18479+19])
                    ]
              expression (typing/parmatch.ml[576,18502+6]..[577,18548+66])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/parmatch.ml[576,18502+10]..[576,18502+20])
                      Ppat_var "add_column" (typing/parmatch.ml[576,18502+10]..[576,18502+20])
                    expression (typing/parmatch.ml[576,18502+21]..[576,18502+42]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/parmatch.ml[576,18502+21]..[576,18502+22])
                        Ppat_var "p" (typing/parmatch.ml[576,18502+21]..[576,18502+22])
                      expression (typing/parmatch.ml[576,18502+23]..[576,18502+42]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/parmatch.ml[576,18502+23]..[576,18502+25])
                          Ppat_var "ps" (typing/parmatch.ml[576,18502+23]..[576,18502+25])
                        expression (typing/parmatch.ml[576,18502+26]..[576,18502+42]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/parmatch.ml[576,18502+26]..[576,18502+27])
                            Ppat_var "k" (typing/parmatch.ml[576,18502+26]..[576,18502+27])
                          expression (typing/parmatch.ml[576,18502+30]..[576,18502+42])
                            Pexp_construct "::" (typing/parmatch.ml[576,18502+38]..[576,18502+40])
                            Some
                              expression (typing/parmatch.ml[576,18502+30]..[576,18502+42]) ghost
                                Pexp_tuple
                                [
                                  expression (typing/parmatch.ml[576,18502+30]..[576,18502+37])
                                    Pexp_tuple
                                    [
                                      expression (typing/parmatch.ml[576,18502+31]..[576,18502+32])
                                        Pexp_ident "p" (typing/parmatch.ml[576,18502+31]..[576,18502+32])
                                      expression (typing/parmatch.ml[576,18502+34]..[576,18502+36])
                                        Pexp_ident "ps" (typing/parmatch.ml[576,18502+34]..[576,18502+36])
                                    ]
                                  expression (typing/parmatch.ml[576,18502+41]..[576,18502+42])
                                    Pexp_ident "k" (typing/parmatch.ml[576,18502+41]..[576,18502+42])
                                ]
                ]
                expression (typing/parmatch.ml[577,18548+6]..[577,18548+66])
                  Pexp_apply
                  expression (typing/parmatch.ml[577,18548+6]..[577,18548+23])
                    Pexp_ident "simplify_head_pat" (typing/parmatch.ml[577,18548+6]..[577,18548+23])
                  [
                    <arg>
                    Labelled "add_column"
                      expression (typing/parmatch.ml[577,18548+25]..[577,18548+35])
                        Pexp_ident "add_column" (typing/parmatch.ml[577,18548+25]..[577,18548+35])
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[577,18548+36]..[577,18548+37])
                        Pexp_ident "p" (typing/parmatch.ml[577,18548+36]..[577,18548+37])
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[577,18548+38]..[577,18548+40])
                        Pexp_ident "ps" (typing/parmatch.ml[577,18548+38]..[577,18548+40])
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[577,18548+41]..[577,18548+66])
                        Pexp_apply
                        expression (typing/parmatch.ml[577,18548+42]..[577,18548+60])
                          Pexp_ident "simplify_first_col" (typing/parmatch.ml[577,18548+42]..[577,18548+60])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[577,18548+61]..[577,18548+65])
                              Pexp_ident "rows" (typing/parmatch.ml[577,18548+61]..[577,18548+65])
                        ]
                  ]
          ]
    ]
  structure_item (typing/parmatch.ml[589,18974+0]..[596,19258+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[589,18974+4]..[589,18974+31])
          Ppat_var "build_specialized_submatrix" (typing/parmatch.ml[589,18974+4]..[589,18974+31])
        expression (typing/parmatch.ml[589,18974+32]..[596,19258+16]) ghost
          Pexp_fun
          Labelled "extend_row"
          None
          pattern (typing/parmatch.ml[589,18974+33]..[589,18974+43])
            Ppat_var "extend_row" (typing/parmatch.ml[589,18974+33]..[589,18974+43])
          expression (typing/parmatch.ml[589,18974+44]..[596,19258+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[589,18974+44]..[589,18974+49])
              Ppat_var "discr" (typing/parmatch.ml[589,18974+44]..[589,18974+49])
            expression (typing/parmatch.ml[589,18974+50]..[596,19258+16]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[589,18974+50]..[589,18974+53])
                Ppat_var "pss" (typing/parmatch.ml[589,18974+50]..[589,18974+53])
              expression (typing/parmatch.ml[590,19030+2]..[596,19258+16])
                Pexp_let Rec
                [
                  <def>
                    pattern (typing/parmatch.ml[590,19030+10]..[590,19030+20])
                      Ppat_var "filter_rec" (typing/parmatch.ml[590,19030+10]..[590,19030+20])
                    expression (typing/parmatch.ml[590,19030+23]..[595,19241+13])
                      Pexp_function
                      [
                        <case>
                          pattern (typing/parmatch.ml[591,19062+6]..[591,19062+31])
                            Ppat_construct "::" (typing/parmatch.ml[591,19062+25]..[591,19062+27])
                            Some
                              []
                              pattern (typing/parmatch.ml[591,19062+6]..[591,19062+31]) ghost
                                Ppat_tuple
                                [
                                  pattern (typing/parmatch.ml[591,19062+6]..[591,19062+24])
                                    Ppat_tuple
                                    [
                                      pattern (typing/parmatch.ml[591,19062+7]..[591,19062+19])
                                        Ppat_tuple
                                        [
                                          pattern (typing/parmatch.ml[591,19062+8]..[591,19062+12])
                                            Ppat_var "head" (typing/parmatch.ml[591,19062+8]..[591,19062+12])
                                          pattern (typing/parmatch.ml[591,19062+14]..[591,19062+18])
                                            Ppat_var "args" (typing/parmatch.ml[591,19062+14]..[591,19062+18])
                                        ]
                                      pattern (typing/parmatch.ml[591,19062+21]..[591,19062+23])
                                        Ppat_var "ps" (typing/parmatch.ml[591,19062+21]..[591,19062+23])
                                    ]
                                  pattern (typing/parmatch.ml[591,19062+28]..[591,19062+31])
                                    Ppat_var "pss" (typing/parmatch.ml[591,19062+28]..[591,19062+31])
                                ]
                          expression (typing/parmatch.ml[592,19097+8]..[594,19213+27])
                            Pexp_ifthenelse
                            expression (typing/parmatch.ml[592,19097+11]..[592,19097+34])
                              Pexp_apply
                              expression (typing/parmatch.ml[592,19097+11]..[592,19097+23])
                                Pexp_ident "simple_match" (typing/parmatch.ml[592,19097+11]..[592,19097+23])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[592,19097+24]..[592,19097+29])
                                    Pexp_ident "discr" (typing/parmatch.ml[592,19097+24]..[592,19097+29])
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[592,19097+30]..[592,19097+34])
                                    Pexp_ident "head" (typing/parmatch.ml[592,19097+30]..[592,19097+34])
                              ]
                            expression (typing/parmatch.ml[593,19132+13]..[593,19132+80])
                              Pexp_construct "::" (typing/parmatch.ml[593,19132+63]..[593,19132+65])
                              Some
                                expression (typing/parmatch.ml[593,19132+13]..[593,19132+80]) ghost
                                  Pexp_tuple
                                  [
                                    expression (typing/parmatch.ml[593,19132+13]..[593,19132+62])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[593,19132+13]..[593,19132+23])
                                        Pexp_ident "extend_row" (typing/parmatch.ml[593,19132+13]..[593,19132+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[593,19132+24]..[593,19132+59])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[593,19132+25]..[593,19132+42])
                                              Pexp_ident "simple_match_args" (typing/parmatch.ml[593,19132+25]..[593,19132+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[593,19132+43]..[593,19132+48])
                                                  Pexp_ident "discr" (typing/parmatch.ml[593,19132+43]..[593,19132+48])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[593,19132+49]..[593,19132+53])
                                                  Pexp_ident "head" (typing/parmatch.ml[593,19132+49]..[593,19132+53])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[593,19132+54]..[593,19132+58])
                                                  Pexp_ident "args" (typing/parmatch.ml[593,19132+54]..[593,19132+58])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[593,19132+60]..[593,19132+62])
                                            Pexp_ident "ps" (typing/parmatch.ml[593,19132+60]..[593,19132+62])
                                      ]
                                    expression (typing/parmatch.ml[593,19132+66]..[593,19132+80])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[593,19132+66]..[593,19132+76])
                                        Pexp_ident "filter_rec" (typing/parmatch.ml[593,19132+66]..[593,19132+76])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[593,19132+77]..[593,19132+80])
                                            Pexp_ident "pss" (typing/parmatch.ml[593,19132+77]..[593,19132+80])
                                      ]
                                  ]
                            Some
                              expression (typing/parmatch.ml[594,19213+13]..[594,19213+27])
                                Pexp_apply
                                expression (typing/parmatch.ml[594,19213+13]..[594,19213+23])
                                  Pexp_ident "filter_rec" (typing/parmatch.ml[594,19213+13]..[594,19213+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[594,19213+24]..[594,19213+27])
                                      Pexp_ident "pss" (typing/parmatch.ml[594,19213+24]..[594,19213+27])
                                ]
                        <case>
                          pattern (typing/parmatch.ml[595,19241+6]..[595,19241+7])
                            Ppat_any
                          expression (typing/parmatch.ml[595,19241+11]..[595,19241+13])
                            Pexp_construct "[]" (typing/parmatch.ml[595,19241+11]..[595,19241+13])
                            None
                      ]
                ]
                expression (typing/parmatch.ml[596,19258+2]..[596,19258+16])
                  Pexp_apply
                  expression (typing/parmatch.ml[596,19258+2]..[596,19258+12])
                    Pexp_ident "filter_rec" (typing/parmatch.ml[596,19258+2]..[596,19258+12])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[596,19258+13]..[596,19258+16])
                        Pexp_ident "pss" (typing/parmatch.ml[596,19258+13]..[596,19258+16])
                  ]
    ]
  structure_item (typing/parmatch.ml[601,19421+0]..[604,19526+1])
    Pstr_type Rec
    [
      type_declaration "specialized_matrices" (typing/parmatch.ml[601,19421+13]..[601,19421+33]) (typing/parmatch.ml[601,19421+0]..[604,19526+1])
        ptype_params =
          [
            core_type (typing/parmatch.ml[601,19421+5]..[601,19421+12])
              Ptyp_var matrix
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/parmatch.ml[602,19459+2]..[602,19459+20])
                Immutable
                "default" (typing/parmatch.ml[602,19459+2]..[602,19459+9])                core_type (typing/parmatch.ml[602,19459+12]..[602,19459+19])
                  Ptyp_var matrix
              (typing/parmatch.ml[603,19480+2]..[603,19480+45])
                Immutable
                "constrs" (typing/parmatch.ml[603,19480+2]..[603,19480+9])                core_type (typing/parmatch.ml[603,19480+12]..[603,19480+44])
                  Ptyp_constr "list" (typing/parmatch.ml[603,19480+40]..[603,19480+44])
                  [
                    core_type (typing/parmatch.ml[603,19480+13]..[603,19480+38])
                      Ptyp_tuple
                      [
                        core_type (typing/parmatch.ml[603,19480+13]..[603,19480+28])
                          Ptyp_constr "Patterns.Head.t" (typing/parmatch.ml[603,19480+13]..[603,19480+28])
                          []
                        core_type (typing/parmatch.ml[603,19480+31]..[603,19480+38])
                          Ptyp_var matrix
                      ]
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/parmatch.ml[631,20546+0]..[696,23005+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[631,20546+4]..[631,20546+33])
          Ppat_var "build_specialized_submatrices" (typing/parmatch.ml[631,20546+4]..[631,20546+33])
        expression (typing/parmatch.ml[631,20546+34]..[696,23005+23]) ghost
          Pexp_fun
          Labelled "extend_row"
          None
          pattern (typing/parmatch.ml[631,20546+35]..[631,20546+45])
            Ppat_var "extend_row" (typing/parmatch.ml[631,20546+35]..[631,20546+45])
          expression (typing/parmatch.ml[631,20546+46]..[696,23005+23]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[631,20546+46]..[631,20546+51])
              Ppat_var "discr" (typing/parmatch.ml[631,20546+46]..[631,20546+51])
            expression (typing/parmatch.ml[631,20546+52]..[696,23005+23]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[631,20546+52]..[631,20546+56])
                Ppat_var "rows" (typing/parmatch.ml[631,20546+52]..[631,20546+56])
              expression (typing/parmatch.ml[632,20605+2]..[696,23005+23])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/parmatch.ml[632,20605+6]..[632,20605+18])
                      Ppat_var "extend_group" (typing/parmatch.ml[632,20605+6]..[632,20605+18])
                    expression (typing/parmatch.ml[632,20605+19]..[634,20705+20]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/parmatch.ml[632,20605+19]..[632,20605+24])
                        Ppat_var "discr" (typing/parmatch.ml[632,20605+19]..[632,20605+24])
                      expression (typing/parmatch.ml[632,20605+25]..[634,20705+20]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/parmatch.ml[632,20605+25]..[632,20605+26])
                          Ppat_var "p" (typing/parmatch.ml[632,20605+25]..[632,20605+26])
                        expression (typing/parmatch.ml[632,20605+27]..[634,20705+20]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/parmatch.ml[632,20605+27]..[632,20605+31])
                            Ppat_var "args" (typing/parmatch.ml[632,20605+27]..[632,20605+31])
                          expression (typing/parmatch.ml[632,20605+32]..[634,20705+20]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/parmatch.ml[632,20605+32]..[632,20605+33])
                              Ppat_var "r" (typing/parmatch.ml[632,20605+32]..[632,20605+33])
                            expression (typing/parmatch.ml[632,20605+34]..[634,20705+20]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/parmatch.ml[632,20605+34]..[632,20605+36])
                                Ppat_var "rs" (typing/parmatch.ml[632,20605+34]..[632,20605+36])
                              expression (typing/parmatch.ml[633,20644+4]..[634,20705+20])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/parmatch.ml[633,20644+8]..[633,20644+9])
                                      Ppat_var "r" (typing/parmatch.ml[633,20644+8]..[633,20644+9])
                                    expression (typing/parmatch.ml[633,20644+12]..[633,20644+57])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[633,20644+12]..[633,20644+22])
                                        Pexp_ident "extend_row" (typing/parmatch.ml[633,20644+12]..[633,20644+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[633,20644+23]..[633,20644+55])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[633,20644+24]..[633,20644+41])
                                              Pexp_ident "simple_match_args" (typing/parmatch.ml[633,20644+24]..[633,20644+41])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[633,20644+42]..[633,20644+47])
                                                  Pexp_ident "discr" (typing/parmatch.ml[633,20644+42]..[633,20644+47])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[633,20644+48]..[633,20644+49])
                                                  Pexp_ident "p" (typing/parmatch.ml[633,20644+48]..[633,20644+49])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[633,20644+50]..[633,20644+54])
                                                  Pexp_ident "args" (typing/parmatch.ml[633,20644+50]..[633,20644+54])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[633,20644+56]..[633,20644+57])
                                            Pexp_ident "r" (typing/parmatch.ml[633,20644+56]..[633,20644+57])
                                      ]
                                ]
                                expression (typing/parmatch.ml[634,20705+4]..[634,20705+20])
                                  Pexp_tuple
                                  [
                                    expression (typing/parmatch.ml[634,20705+5]..[634,20705+10])
                                      Pexp_ident "discr" (typing/parmatch.ml[634,20705+5]..[634,20705+10])
                                    expression (typing/parmatch.ml[634,20705+12]..[634,20705+19])
                                      Pexp_construct "::" (typing/parmatch.ml[634,20705+14]..[634,20705+16])
                                      Some
                                        expression (typing/parmatch.ml[634,20705+12]..[634,20705+19]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/parmatch.ml[634,20705+12]..[634,20705+13])
                                              Pexp_ident "r" (typing/parmatch.ml[634,20705+12]..[634,20705+13])
                                            expression (typing/parmatch.ml[634,20705+17]..[634,20705+19])
                                              Pexp_ident "rs" (typing/parmatch.ml[634,20705+17]..[634,20705+19])
                                          ]
                                  ]
                ]
                expression (typing/parmatch.ml[644,21009+2]..[696,23005+23])
                  Pexp_let Rec
                  [
                    <def>
                      pattern (typing/parmatch.ml[644,21009+10]..[644,21009+23])
                        Ppat_var "insert_constr" (typing/parmatch.ml[644,21009+10]..[644,21009+23])
                      expression (typing/parmatch.ml[644,21009+24]..[652,21356+46]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/parmatch.ml[644,21009+24]..[644,21009+28])
                          Ppat_var "head" (typing/parmatch.ml[644,21009+24]..[644,21009+28])
                        expression (typing/parmatch.ml[644,21009+29]..[652,21356+46]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/parmatch.ml[644,21009+29]..[644,21009+33])
                            Ppat_var "args" (typing/parmatch.ml[644,21009+29]..[644,21009+33])
                          expression (typing/parmatch.ml[644,21009+34]..[652,21356+46]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/parmatch.ml[644,21009+34]..[644,21009+35])
                              Ppat_var "r" (typing/parmatch.ml[644,21009+34]..[644,21009+35])
                            expression (typing/parmatch.ml[644,21009+38]..[652,21356+46])
                              Pexp_function
                              [
                                <case>
                                  pattern (typing/parmatch.ml[645,21056+6]..[645,21056+8])
                                    Ppat_construct "[]" (typing/parmatch.ml[645,21056+6]..[645,21056+8])
                                    None
                                  expression (typing/parmatch.ml[648,21208+6]..[648,21208+40])
                                    Pexp_construct "::" (typing/parmatch.ml[648,21208+7]..[648,21208+40]) ghost
                                    Some
                                      expression (typing/parmatch.ml[648,21208+7]..[648,21208+40]) ghost
                                        Pexp_tuple
                                        [
                                          expression (typing/parmatch.ml[648,21208+7]..[648,21208+39])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[648,21208+7]..[648,21208+19])
                                              Pexp_ident "extend_group" (typing/parmatch.ml[648,21208+7]..[648,21208+19])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[648,21208+20]..[648,21208+24])
                                                  Pexp_ident "head" (typing/parmatch.ml[648,21208+20]..[648,21208+24])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[648,21208+25]..[648,21208+29])
                                                  Pexp_ident "head" (typing/parmatch.ml[648,21208+25]..[648,21208+29])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[648,21208+30]..[648,21208+34])
                                                  Pexp_ident "args" (typing/parmatch.ml[648,21208+30]..[648,21208+34])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[648,21208+35]..[648,21208+36])
                                                  Pexp_ident "r" (typing/parmatch.ml[648,21208+35]..[648,21208+36])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[648,21208+37]..[648,21208+39])
                                                  Pexp_construct "[]" (typing/parmatch.ml[648,21208+37]..[648,21208+39])
                                                  None
                                            ]
                                          expression (typing/parmatch.ml[648,21208+39]..[648,21208+40]) ghost
                                            Pexp_construct "[]" (typing/parmatch.ml[648,21208+39]..[648,21208+40]) ghost
                                            None
                                        ]
                                <case>
                                  pattern (typing/parmatch.ml[649,21249+6]..[649,21249+24])
                                    Ppat_construct "::" (typing/parmatch.ml[649,21249+19]..[649,21249+21])
                                    Some
                                      []
                                      pattern (typing/parmatch.ml[649,21249+6]..[649,21249+24]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (typing/parmatch.ml[649,21249+6]..[649,21249+19])
                                            Ppat_alias "bd" (typing/parmatch.ml[649,21249+17]..[649,21249+19])
                                            pattern (typing/parmatch.ml[649,21249+6]..[649,21249+13])
                                              Ppat_tuple
                                              [
                                                pattern (typing/parmatch.ml[649,21249+7]..[649,21249+9])
                                                  Ppat_var "q0" (typing/parmatch.ml[649,21249+7]..[649,21249+9])
                                                pattern (typing/parmatch.ml[649,21249+10]..[649,21249+12])
                                                  Ppat_var "rs" (typing/parmatch.ml[649,21249+10]..[649,21249+12])
                                              ]
                                          pattern (typing/parmatch.ml[649,21249+21]..[649,21249+24])
                                            Ppat_var "env" (typing/parmatch.ml[649,21249+21]..[649,21249+24])
                                        ]
                                  expression (typing/parmatch.ml[650,21277+6]..[652,21356+46])
                                    Pexp_ifthenelse
                                    expression (typing/parmatch.ml[650,21277+9]..[650,21277+29])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[650,21277+9]..[650,21277+21])
                                        Pexp_ident "simple_match" (typing/parmatch.ml[650,21277+9]..[650,21277+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[650,21277+22]..[650,21277+24])
                                            Pexp_ident "q0" (typing/parmatch.ml[650,21277+22]..[650,21277+24])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[650,21277+25]..[650,21277+29])
                                            Pexp_ident "head" (typing/parmatch.ml[650,21277+25]..[650,21277+29])
                                      ]
                                    expression (typing/parmatch.ml[651,21307+11]..[651,21307+48])
                                      Pexp_construct "::" (typing/parmatch.ml[651,21307+42]..[651,21307+44])
                                      Some
                                        expression (typing/parmatch.ml[651,21307+11]..[651,21307+48]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/parmatch.ml[651,21307+11]..[651,21307+41])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[651,21307+11]..[651,21307+23])
                                                Pexp_ident "extend_group" (typing/parmatch.ml[651,21307+11]..[651,21307+23])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[651,21307+24]..[651,21307+26])
                                                    Pexp_ident "q0" (typing/parmatch.ml[651,21307+24]..[651,21307+26])
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[651,21307+27]..[651,21307+31])
                                                    Pexp_ident "head" (typing/parmatch.ml[651,21307+27]..[651,21307+31])
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[651,21307+32]..[651,21307+36])
                                                    Pexp_ident "args" (typing/parmatch.ml[651,21307+32]..[651,21307+36])
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[651,21307+37]..[651,21307+38])
                                                    Pexp_ident "r" (typing/parmatch.ml[651,21307+37]..[651,21307+38])
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[651,21307+39]..[651,21307+41])
                                                    Pexp_ident "rs" (typing/parmatch.ml[651,21307+39]..[651,21307+41])
                                              ]
                                            expression (typing/parmatch.ml[651,21307+45]..[651,21307+48])
                                              Pexp_ident "env" (typing/parmatch.ml[651,21307+45]..[651,21307+48])
                                          ]
                                    Some
                                      expression (typing/parmatch.ml[652,21356+11]..[652,21356+46])
                                        Pexp_construct "::" (typing/parmatch.ml[652,21356+14]..[652,21356+16])
                                        Some
                                          expression (typing/parmatch.ml[652,21356+11]..[652,21356+46]) ghost
                                            Pexp_tuple
                                            [
                                              expression (typing/parmatch.ml[652,21356+11]..[652,21356+13])
                                                Pexp_ident "bd" (typing/parmatch.ml[652,21356+11]..[652,21356+13])
                                              expression (typing/parmatch.ml[652,21356+17]..[652,21356+46])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[652,21356+17]..[652,21356+30])
                                                  Pexp_ident "insert_constr" (typing/parmatch.ml[652,21356+17]..[652,21356+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[652,21356+31]..[652,21356+35])
                                                      Pexp_ident "head" (typing/parmatch.ml[652,21356+31]..[652,21356+35])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[652,21356+36]..[652,21356+40])
                                                      Pexp_ident "args" (typing/parmatch.ml[652,21356+36]..[652,21356+40])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[652,21356+41]..[652,21356+42])
                                                      Pexp_ident "r" (typing/parmatch.ml[652,21356+41]..[652,21356+42])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[652,21356+43]..[652,21356+46])
                                                      Pexp_ident "env" (typing/parmatch.ml[652,21356+43]..[652,21356+46])
                                                ]
                                            ]
                              ]
                  ]
                  expression (typing/parmatch.ml[656,21460+2]..[696,23005+23])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[656,21460+6]..[656,21460+18])
                          Ppat_var "insert_omega" (typing/parmatch.ml[656,21460+6]..[656,21460+18])
                        expression (typing/parmatch.ml[656,21460+19]..[657,21487+77]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/parmatch.ml[656,21460+19]..[656,21460+20])
                            Ppat_var "r" (typing/parmatch.ml[656,21460+19]..[656,21460+20])
                          expression (typing/parmatch.ml[656,21460+21]..[657,21487+77]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/parmatch.ml[656,21460+21]..[656,21460+24])
                              Ppat_var "env" (typing/parmatch.ml[656,21460+21]..[656,21460+24])
                            expression (typing/parmatch.ml[657,21487+4]..[657,21487+77])
                              Pexp_apply
                              expression (typing/parmatch.ml[657,21487+4]..[657,21487+12])
                                Pexp_ident "List.map" (typing/parmatch.ml[657,21487+4]..[657,21487+12])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[657,21487+13]..[657,21487+73])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/parmatch.ml[657,21487+18]..[657,21487+25])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[657,21487+19]..[657,21487+21])
                                          Ppat_var "q0" (typing/parmatch.ml[657,21487+19]..[657,21487+21])
                                        pattern (typing/parmatch.ml[657,21487+22]..[657,21487+24])
                                          Ppat_var "rs" (typing/parmatch.ml[657,21487+22]..[657,21487+24])
                                      ]
                                    expression (typing/parmatch.ml[657,21487+29]..[657,21487+72])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[657,21487+29]..[657,21487+41])
                                        Pexp_ident "extend_group" (typing/parmatch.ml[657,21487+29]..[657,21487+41])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[657,21487+42]..[657,21487+44])
                                            Pexp_ident "q0" (typing/parmatch.ml[657,21487+42]..[657,21487+44])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[657,21487+45]..[657,21487+64])
                                            Pexp_ident "Patterns.Head.omega" (typing/parmatch.ml[657,21487+45]..[657,21487+64])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[657,21487+65]..[657,21487+67])
                                            Pexp_construct "[]" (typing/parmatch.ml[657,21487+65]..[657,21487+67])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[657,21487+68]..[657,21487+69])
                                            Pexp_ident "r" (typing/parmatch.ml[657,21487+68]..[657,21487+69])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[657,21487+70]..[657,21487+72])
                                            Pexp_ident "rs" (typing/parmatch.ml[657,21487+70]..[657,21487+72])
                                      ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[657,21487+74]..[657,21487+77])
                                    Pexp_ident "env" (typing/parmatch.ml[657,21487+74]..[657,21487+77])
                              ]
                    ]
                    expression (typing/parmatch.ml[660,21571+2]..[696,23005+23])
                      Pexp_let Rec
                      [
                        <def>
                          pattern (typing/parmatch.ml[660,21571+10]..[660,21571+21])
                            Ppat_var "form_groups" (typing/parmatch.ml[660,21571+10]..[660,21571+21])
                          expression (typing/parmatch.ml[660,21571+22]..[671,22085+75]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/parmatch.ml[660,21571+22]..[660,21571+35])
                              Ppat_var "constr_groups" (typing/parmatch.ml[660,21571+22]..[660,21571+35])
                            expression (typing/parmatch.ml[660,21571+36]..[671,22085+75]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/parmatch.ml[660,21571+36]..[660,21571+47])
                                Ppat_var "omega_tails" (typing/parmatch.ml[660,21571+36]..[660,21571+47])
                              expression (typing/parmatch.ml[660,21571+50]..[671,22085+75])
                                Pexp_function
                                [
                                  <case>
                                    pattern (typing/parmatch.ml[661,21630+6]..[661,21630+8])
                                      Ppat_construct "[]" (typing/parmatch.ml[661,21630+6]..[661,21630+8])
                                      None
                                    expression (typing/parmatch.ml[661,21630+12]..[661,21630+40])
                                      Pexp_tuple
                                      [
                                        expression (typing/parmatch.ml[661,21630+13]..[661,21630+26])
                                          Pexp_ident "constr_groups" (typing/parmatch.ml[661,21630+13]..[661,21630+26])
                                        expression (typing/parmatch.ml[661,21630+28]..[661,21630+39])
                                          Pexp_ident "omega_tails" (typing/parmatch.ml[661,21630+28]..[661,21630+39])
                                      ]
                                  <case>
                                    pattern (typing/parmatch.ml[662,21671+6]..[662,21671+34])
                                      Ppat_construct "::" (typing/parmatch.ml[662,21671+27]..[662,21671+29])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[662,21671+6]..[662,21671+34]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[662,21671+6]..[662,21671+26])
                                              Ppat_tuple
                                              [
                                                pattern (typing/parmatch.ml[662,21671+7]..[662,21671+19])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/parmatch.ml[662,21671+8]..[662,21671+12])
                                                      Ppat_var "head" (typing/parmatch.ml[662,21671+8]..[662,21671+12])
                                                    pattern (typing/parmatch.ml[662,21671+14]..[662,21671+18])
                                                      Ppat_var "args" (typing/parmatch.ml[662,21671+14]..[662,21671+18])
                                                  ]
                                                pattern (typing/parmatch.ml[662,21671+21]..[662,21671+25])
                                                  Ppat_var "tail" (typing/parmatch.ml[662,21671+21]..[662,21671+25])
                                              ]
                                            pattern (typing/parmatch.ml[662,21671+30]..[662,21671+34])
                                              Ppat_var "rest" (typing/parmatch.ml[662,21671+30]..[662,21671+34])
                                          ]
                                    expression (typing/parmatch.ml[663,21709+8]..[671,22085+75])
                                      Pexp_match
                                      expression (typing/parmatch.ml[663,21709+14]..[663,21709+27])
                                        Pexp_field
                                        expression (typing/parmatch.ml[663,21709+14]..[663,21709+18])
                                          Pexp_ident "head" (typing/parmatch.ml[663,21709+14]..[663,21709+18])
                                        "pat_desc" (typing/parmatch.ml[663,21709+19]..[663,21709+27])
                                      [
                                        <case>
                                          pattern (typing/parmatch.ml[664,21742+10]..[664,21742+27])
                                            Ppat_construct "Patterns.Head.Any" (typing/parmatch.ml[664,21742+10]..[664,21742+27])
                                            None
                                          expression (typing/parmatch.ml[668,21981+12]..[668,21981+64])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[668,21981+12]..[668,21981+23])
                                              Pexp_ident "form_groups" (typing/parmatch.ml[668,21981+12]..[668,21981+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[668,21981+24]..[668,21981+37])
                                                  Pexp_ident "constr_groups" (typing/parmatch.ml[668,21981+24]..[668,21981+37])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[668,21981+38]..[668,21981+59])
                                                  Pexp_construct "::" (typing/parmatch.ml[668,21981+44]..[668,21981+46])
                                                  Some
                                                    expression (typing/parmatch.ml[668,21981+39]..[668,21981+58]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (typing/parmatch.ml[668,21981+39]..[668,21981+43])
                                                          Pexp_ident "tail" (typing/parmatch.ml[668,21981+39]..[668,21981+43])
                                                        expression (typing/parmatch.ml[668,21981+47]..[668,21981+58])
                                                          Pexp_ident "omega_tails" (typing/parmatch.ml[668,21981+47]..[668,21981+58])
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[668,21981+60]..[668,21981+64])
                                                  Pexp_ident "rest" (typing/parmatch.ml[668,21981+60]..[668,21981+64])
                                            ]
                                        <case>
                                          pattern (typing/parmatch.ml[669,22046+10]..[669,22046+11])
                                            Ppat_any
                                          expression (typing/parmatch.ml[670,22061+12]..[671,22085+75])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[670,22061+12]..[670,22061+23])
                                              Pexp_ident "form_groups" (typing/parmatch.ml[670,22061+12]..[670,22061+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[671,22085+14]..[671,22085+58])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[671,22085+15]..[671,22085+28])
                                                    Pexp_ident "insert_constr" (typing/parmatch.ml[671,22085+15]..[671,22085+28])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[671,22085+29]..[671,22085+33])
                                                        Pexp_ident "head" (typing/parmatch.ml[671,22085+29]..[671,22085+33])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[671,22085+34]..[671,22085+38])
                                                        Pexp_ident "args" (typing/parmatch.ml[671,22085+34]..[671,22085+38])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[671,22085+39]..[671,22085+43])
                                                        Pexp_ident "tail" (typing/parmatch.ml[671,22085+39]..[671,22085+43])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[671,22085+44]..[671,22085+57])
                                                        Pexp_ident "constr_groups" (typing/parmatch.ml[671,22085+44]..[671,22085+57])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[671,22085+59]..[671,22085+70])
                                                  Pexp_ident "omega_tails" (typing/parmatch.ml[671,22085+59]..[671,22085+70])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[671,22085+71]..[671,22085+75])
                                                  Pexp_ident "rest" (typing/parmatch.ml[671,22085+71]..[671,22085+75])
                                            ]
                                      ]
                                ]
                      ]
                      expression (typing/parmatch.ml[674,22167+2]..[696,23005+23])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/parmatch.ml[674,22167+6]..[674,22167+32])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[674,22167+6]..[674,22167+19])
                                  Ppat_var "constr_groups" (typing/parmatch.ml[674,22167+6]..[674,22167+19])
                                pattern (typing/parmatch.ml[674,22167+21]..[674,22167+32])
                                  Ppat_var "omega_tails" (typing/parmatch.ml[674,22167+21]..[674,22167+32])
                              ]
                            expression (typing/parmatch.ml[675,22202+4]..[686,22674+44])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/parmatch.ml[675,22202+8]..[675,22202+28])
                                    Ppat_var "initial_constr_group" (typing/parmatch.ml[675,22202+8]..[675,22202+28])
                                  expression (typing/parmatch.ml[676,22233+6]..[684,22651+15])
                                    Pexp_open Fresh
                                    module_expr (typing/parmatch.ml[676,22233+15]..[676,22233+28])
                                      Pmod_ident "Patterns.Head" (typing/parmatch.ml[676,22233+15]..[676,22233+28])
                                    expression (typing/parmatch.ml[677,22265+6]..[684,22651+15])
                                      Pexp_match
                                      expression (typing/parmatch.ml[677,22265+12]..[677,22265+26])
                                        Pexp_field
                                        expression (typing/parmatch.ml[677,22265+12]..[677,22265+17])
                                          Pexp_ident "discr" (typing/parmatch.ml[677,22265+12]..[677,22265+17])
                                        "pat_desc" (typing/parmatch.ml[677,22265+18]..[677,22265+26])
                                      [
                                        <case>
                                          pattern (typing/parmatch.ml[678,22297+8]..[678,22297+33])
                                            Ppat_or
                                            pattern (typing/parmatch.ml[678,22297+8]..[678,22297+26])
                                              Ppat_or
                                              pattern (typing/parmatch.ml[678,22297+8]..[678,22297+16])
                                                Ppat_construct "Record" (typing/parmatch.ml[678,22297+8]..[678,22297+14])
                                                Some
                                                  []
                                                  pattern (typing/parmatch.ml[678,22297+15]..[678,22297+16])
                                                    Ppat_any
                                              pattern (typing/parmatch.ml[678,22297+19]..[678,22297+26])
                                                Ppat_construct "Tuple" (typing/parmatch.ml[678,22297+19]..[678,22297+24])
                                                Some
                                                  []
                                                  pattern (typing/parmatch.ml[678,22297+25]..[678,22297+26])
                                                    Ppat_any
                                            pattern (typing/parmatch.ml[678,22297+29]..[678,22297+33])
                                              Ppat_construct "Lazy" (typing/parmatch.ml[678,22297+29]..[678,22297+33])
                                              None
                                          expression (typing/parmatch.ml[683,22632+8]..[683,22632+18])
                                            Pexp_construct "::" (typing/parmatch.ml[683,22632+9]..[683,22632+18]) ghost
                                            Some
                                              expression (typing/parmatch.ml[683,22632+9]..[683,22632+18]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (typing/parmatch.ml[683,22632+9]..[683,22632+17])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/parmatch.ml[683,22632+9]..[683,22632+14])
                                                        Pexp_ident "discr" (typing/parmatch.ml[683,22632+9]..[683,22632+14])
                                                      expression (typing/parmatch.ml[683,22632+15]..[683,22632+17])
                                                        Pexp_construct "[]" (typing/parmatch.ml[683,22632+15]..[683,22632+17])
                                                        None
                                                    ]
                                                  expression (typing/parmatch.ml[683,22632+17]..[683,22632+18]) ghost
                                                    Pexp_construct "[]" (typing/parmatch.ml[683,22632+17]..[683,22632+18]) ghost
                                                    None
                                                ]
                                        <case>
                                          pattern (typing/parmatch.ml[684,22651+8]..[684,22651+9])
                                            Ppat_any
                                          expression (typing/parmatch.ml[684,22651+13]..[684,22651+15])
                                            Pexp_construct "[]" (typing/parmatch.ml[684,22651+13]..[684,22651+15])
                                            None
                                      ]
                              ]
                              expression (typing/parmatch.ml[686,22674+4]..[686,22674+44])
                                Pexp_apply
                                expression (typing/parmatch.ml[686,22674+4]..[686,22674+15])
                                  Pexp_ident "form_groups" (typing/parmatch.ml[686,22674+4]..[686,22674+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[686,22674+16]..[686,22674+36])
                                      Pexp_ident "initial_constr_group" (typing/parmatch.ml[686,22674+16]..[686,22674+36])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[686,22674+37]..[686,22674+39])
                                      Pexp_construct "[]" (typing/parmatch.ml[686,22674+37]..[686,22674+39])
                                      None
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[686,22674+40]..[686,22674+44])
                                      Pexp_ident "rows" (typing/parmatch.ml[686,22674+40]..[686,22674+44])
                                ]
                        ]
                        expression (typing/parmatch.ml[691,22827+2]..[696,23005+23])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/parmatch.ml[691,22827+6]..[691,22827+13])
                                Ppat_var "default" (typing/parmatch.ml[691,22827+6]..[691,22827+13])
                              expression (typing/parmatch.ml[691,22827+16]..[691,22827+36])
                                Pexp_apply
                                expression (typing/parmatch.ml[691,22827+16]..[691,22827+24])
                                  Pexp_ident "List.rev" (typing/parmatch.ml[691,22827+16]..[691,22827+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[691,22827+25]..[691,22827+36])
                                      Pexp_ident "omega_tails" (typing/parmatch.ml[691,22827+25]..[691,22827+36])
                                ]
                          ]
                          expression (typing/parmatch.ml[692,22867+2]..[696,23005+23])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/parmatch.ml[692,22867+6]..[692,22867+13])
                                  Ppat_var "constrs" (typing/parmatch.ml[692,22867+6]..[692,22867+13])
                                expression (typing/parmatch.ml[693,22883+4]..[694,22942+57])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[694,22942+4]..[694,22942+6])
                                    Pexp_ident "|>" (typing/parmatch.ml[694,22942+4]..[694,22942+6])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[693,22883+4]..[693,22883+58])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[693,22883+4]..[693,22883+19])
                                          Pexp_ident "List.fold_right" (typing/parmatch.ml[693,22883+4]..[693,22883+19])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[693,22883+20]..[693,22883+32])
                                              Pexp_ident "insert_omega" (typing/parmatch.ml[693,22883+20]..[693,22883+32])
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[693,22883+33]..[693,22883+44])
                                              Pexp_ident "omega_tails" (typing/parmatch.ml[693,22883+33]..[693,22883+44])
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[693,22883+45]..[693,22883+58])
                                              Pexp_ident "constr_groups" (typing/parmatch.ml[693,22883+45]..[693,22883+58])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[694,22942+7]..[694,22942+57])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[694,22942+7]..[694,22942+15])
                                          Pexp_ident "List.map" (typing/parmatch.ml[694,22942+7]..[694,22942+15])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[694,22942+16]..[694,22942+57])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (typing/parmatch.ml[694,22942+21]..[694,22942+32])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/parmatch.ml[694,22942+22]..[694,22942+27])
                                                    Ppat_var "discr" (typing/parmatch.ml[694,22942+22]..[694,22942+27])
                                                  pattern (typing/parmatch.ml[694,22942+29]..[694,22942+31])
                                                    Ppat_var "rs" (typing/parmatch.ml[694,22942+29]..[694,22942+31])
                                                ]
                                              expression (typing/parmatch.ml[694,22942+36]..[694,22942+56])
                                                Pexp_tuple
                                                [
                                                  expression (typing/parmatch.ml[694,22942+37]..[694,22942+42])
                                                    Pexp_ident "discr" (typing/parmatch.ml[694,22942+37]..[694,22942+42])
                                                  expression (typing/parmatch.ml[694,22942+44]..[694,22942+55])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[694,22942+44]..[694,22942+52])
                                                      Pexp_ident "List.rev" (typing/parmatch.ml[694,22942+44]..[694,22942+52])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[694,22942+53]..[694,22942+55])
                                                          Pexp_ident "rs" (typing/parmatch.ml[694,22942+53]..[694,22942+55])
                                                    ]
                                                ]
                                        ]
                                  ]
                            ]
                            expression (typing/parmatch.ml[696,23005+2]..[696,23005+23])
                              Pexp_record
                              [
                                "default" (typing/parmatch.ml[696,23005+4]..[696,23005+11]) ghost
                                  expression (typing/parmatch.ml[696,23005+4]..[696,23005+11])
                                    Pexp_ident "default" (typing/parmatch.ml[696,23005+4]..[696,23005+11])
                                "constrs" (typing/parmatch.ml[696,23005+13]..[696,23005+20]) ghost
                                  expression (typing/parmatch.ml[696,23005+13]..[696,23005+20])
                                    Pexp_ident "constrs" (typing/parmatch.ml[696,23005+13]..[696,23005+20])
                              ]
                              None
    ]
  structure_item (typing/parmatch.ml[700,23063+0]..[708,23262+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[700,23063+4]..[700,23063+12])
          Ppat_var "set_last" (typing/parmatch.ml[700,23063+4]..[700,23063+12])
        expression (typing/parmatch.ml[700,23063+13]..[708,23262+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[700,23063+13]..[700,23063+14])
            Ppat_var "a" (typing/parmatch.ml[700,23063+13]..[700,23063+14])
          expression (typing/parmatch.ml[701,23080+2]..[708,23262+37])
            Pexp_let Rec
            [
              <def>
                pattern (typing/parmatch.ml[701,23080+10]..[701,23080+14])
                  Ppat_var "loop" (typing/parmatch.ml[701,23080+10]..[701,23080+14])
                expression (typing/parmatch.ml[701,23080+17]..[704,23171+25])
                  Pexp_function
                  [
                    <case>
                      pattern (typing/parmatch.ml[702,23106+6]..[702,23106+8])
                        Ppat_construct "[]" (typing/parmatch.ml[702,23106+6]..[702,23106+8])
                        None
                      expression (typing/parmatch.ml[702,23106+12]..[702,23106+24])
                        Pexp_assert
                        expression (typing/parmatch.ml[702,23106+19]..[702,23106+24])
                          Pexp_construct "false" (typing/parmatch.ml[702,23106+19]..[702,23106+24])
                          None
                    <case>
                      pattern (typing/parmatch.ml[703,23131+6]..[703,23131+9])
                        Ppat_construct "::" (typing/parmatch.ml[703,23131+7]..[703,23131+9]) ghost
                        Some
                          []
                          pattern (typing/parmatch.ml[703,23131+7]..[703,23131+9]) ghost
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[703,23131+7]..[703,23131+8])
                                Ppat_any
                              pattern (typing/parmatch.ml[703,23131+8]..[703,23131+9]) ghost
                                Ppat_construct "[]" (typing/parmatch.ml[703,23131+8]..[703,23131+9]) ghost
                                None
                            ]
                      expression (typing/parmatch.ml[703,23131+13]..[703,23131+39])
                        Pexp_construct "::" (typing/parmatch.ml[703,23131+14]..[703,23131+39]) ghost
                        Some
                          expression (typing/parmatch.ml[703,23131+14]..[703,23131+39]) ghost
                            Pexp_tuple
                            [
                              expression (typing/parmatch.ml[703,23131+14]..[703,23131+38])
                                Pexp_apply
                                expression (typing/parmatch.ml[703,23131+14]..[703,23131+36])
                                  Pexp_ident "Patterns.General.erase" (typing/parmatch.ml[703,23131+14]..[703,23131+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[703,23131+37]..[703,23131+38])
                                      Pexp_ident "a" (typing/parmatch.ml[703,23131+37]..[703,23131+38])
                                ]
                              expression (typing/parmatch.ml[703,23131+38]..[703,23131+39]) ghost
                                Pexp_construct "[]" (typing/parmatch.ml[703,23131+38]..[703,23131+39]) ghost
                                None
                            ]
                    <case>
                      pattern (typing/parmatch.ml[704,23171+6]..[704,23171+10])
                        Ppat_construct "::" (typing/parmatch.ml[704,23171+7]..[704,23171+9])
                        Some
                          []
                          pattern (typing/parmatch.ml[704,23171+6]..[704,23171+10]) ghost
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[704,23171+6]..[704,23171+7])
                                Ppat_var "x" (typing/parmatch.ml[704,23171+6]..[704,23171+7])
                              pattern (typing/parmatch.ml[704,23171+9]..[704,23171+10])
                                Ppat_var "l" (typing/parmatch.ml[704,23171+9]..[704,23171+10])
                            ]
                      expression (typing/parmatch.ml[704,23171+14]..[704,23171+25])
                        Pexp_construct "::" (typing/parmatch.ml[704,23171+16]..[704,23171+18])
                        Some
                          expression (typing/parmatch.ml[704,23171+14]..[704,23171+25]) ghost
                            Pexp_tuple
                            [
                              expression (typing/parmatch.ml[704,23171+14]..[704,23171+15])
                                Pexp_ident "x" (typing/parmatch.ml[704,23171+14]..[704,23171+15])
                              expression (typing/parmatch.ml[704,23171+19]..[704,23171+25])
                                Pexp_apply
                                expression (typing/parmatch.ml[704,23171+19]..[704,23171+23])
                                  Pexp_ident "loop" (typing/parmatch.ml[704,23171+19]..[704,23171+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[704,23171+24]..[704,23171+25])
                                      Pexp_ident "l" (typing/parmatch.ml[704,23171+24]..[704,23171+25])
                                ]
                            ]
                  ]
            ]
            expression (typing/parmatch.ml[706,23202+2]..[708,23262+37])
              Pexp_function
              [
                <case>
                  pattern (typing/parmatch.ml[707,23213+4]..[707,23213+11])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[707,23213+5]..[707,23213+6])
                        Ppat_any
                      pattern (typing/parmatch.ml[707,23213+8]..[707,23213+10])
                        Ppat_construct "[]" (typing/parmatch.ml[707,23213+8]..[707,23213+10])
                        None
                    ]
                  expression (typing/parmatch.ml[707,23213+15]..[707,23213+48])
                    Pexp_tuple
                    [
                      expression (typing/parmatch.ml[707,23213+16]..[707,23213+43])
                        Pexp_apply
                        expression (typing/parmatch.ml[707,23213+16]..[707,23213+41])
                          Pexp_ident "Patterns.Head.deconstruct" (typing/parmatch.ml[707,23213+16]..[707,23213+41])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[707,23213+42]..[707,23213+43])
                              Pexp_ident "a" (typing/parmatch.ml[707,23213+42]..[707,23213+43])
                        ]
                      expression (typing/parmatch.ml[707,23213+45]..[707,23213+47])
                        Pexp_construct "[]" (typing/parmatch.ml[707,23213+45]..[707,23213+47])
                        None
                    ]
                <case>
                  pattern (typing/parmatch.ml[708,23262+4]..[708,23262+16])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[708,23262+5]..[708,23262+10])
                        Ppat_var "first" (typing/parmatch.ml[708,23262+5]..[708,23262+10])
                      pattern (typing/parmatch.ml[708,23262+12]..[708,23262+15])
                        Ppat_var "row" (typing/parmatch.ml[708,23262+12]..[708,23262+15])
                    ]
                  expression (typing/parmatch.ml[708,23262+20]..[708,23262+37])
                    Pexp_tuple
                    [
                      expression (typing/parmatch.ml[708,23262+21]..[708,23262+26])
                        Pexp_ident "first" (typing/parmatch.ml[708,23262+21]..[708,23262+26])
                      expression (typing/parmatch.ml[708,23262+28]..[708,23262+36])
                        Pexp_apply
                        expression (typing/parmatch.ml[708,23262+28]..[708,23262+32])
                          Pexp_ident "loop" (typing/parmatch.ml[708,23262+28]..[708,23262+32])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[708,23262+33]..[708,23262+36])
                              Pexp_ident "row" (typing/parmatch.ml[708,23262+33]..[708,23262+36])
                        ]
                    ]
              ]
    ]
  structure_item (typing/parmatch.ml[711,23367+0]..[717,23581+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[711,23367+4]..[711,23367+16])
          Ppat_var "mark_partial" (typing/parmatch.ml[711,23367+4]..[711,23367+16])
        expression (typing/parmatch.ml[712,23386+2]..[717,23581+3])
          Pexp_let Nonrec
          [
            <def>
              pattern (typing/parmatch.ml[712,23386+6]..[712,23386+10])
                Ppat_var "zero" (typing/parmatch.ml[712,23386+6]..[712,23386+10])
              expression (typing/parmatch.ml[712,23386+13]..[712,23386+68])
                Pexp_apply
                expression (typing/parmatch.ml[712,23386+13]..[712,23386+21])
                  Pexp_ident "make_pat" (typing/parmatch.ml[712,23386+13]..[712,23386+21])
                [
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[712,23386+22]..[712,23386+47])
                      Pexp_variant "Constant"
                      Some
                        expression (typing/parmatch.ml[712,23386+33]..[712,23386+46])
                          Pexp_construct "Const_int" (typing/parmatch.ml[712,23386+34]..[712,23386+43])
                          Some
                            expression (typing/parmatch.ml[712,23386+44]..[712,23386+45])
                              Pexp_constant PConst_int (0,None)
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[712,23386+48]..[712,23386+58])
                      Pexp_ident "Ctype.none" (typing/parmatch.ml[712,23386+48]..[712,23386+58])
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[712,23386+59]..[712,23386+68])
                      Pexp_ident "Env.empty" (typing/parmatch.ml[712,23386+59]..[712,23386+68])
                ]
          ]
          expression (typing/parmatch.ml[713,23458+2]..[717,23581+3])
            Pexp_apply
            expression (typing/parmatch.ml[713,23458+2]..[713,23458+10])
              Pexp_ident "List.map" (typing/parmatch.ml[713,23458+2]..[713,23458+10])
            [
              <arg>
              Nolabel
                expression (typing/parmatch.ml[713,23458+11]..[717,23581+3])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/parmatch.ml[713,23458+16]..[713,23458+34])
                    Ppat_alias "ps" (typing/parmatch.ml[713,23458+31]..[713,23458+33])
                    pattern (typing/parmatch.ml[713,23458+17]..[713,23458+27])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[713,23458+17]..[713,23458+24])
                          Ppat_tuple
                          [
                            pattern (typing/parmatch.ml[713,23458+18]..[713,23458+20])
                              Ppat_var "hp" (typing/parmatch.ml[713,23458+18]..[713,23458+20])
                            pattern (typing/parmatch.ml[713,23458+22]..[713,23458+23])
                              Ppat_any
                          ]
                        pattern (typing/parmatch.ml[713,23458+26]..[713,23458+27])
                          Ppat_any
                      ]
                  expression (typing/parmatch.ml[714,23496+4]..[716,23553+27])
                    Pexp_match
                    expression (typing/parmatch.ml[714,23496+10]..[714,23496+21])
                      Pexp_field
                      expression (typing/parmatch.ml[714,23496+10]..[714,23496+12])
                        Pexp_ident "hp" (typing/parmatch.ml[714,23496+10]..[714,23496+12])
                      "pat_desc" (typing/parmatch.ml[714,23496+13]..[714,23496+21])
                    [
                      <case>
                        pattern (typing/parmatch.ml[715,23523+6]..[715,23523+23])
                          Ppat_construct "Patterns.Head.Any" (typing/parmatch.ml[715,23523+6]..[715,23523+23])
                          None
                        expression (typing/parmatch.ml[715,23523+27]..[715,23523+29])
                          Pexp_ident "ps" (typing/parmatch.ml[715,23523+27]..[715,23523+29])
                      <case>
                        pattern (typing/parmatch.ml[716,23553+6]..[716,23553+7])
                          Ppat_any
                        expression (typing/parmatch.ml[716,23553+11]..[716,23553+27])
                          Pexp_apply
                          expression (typing/parmatch.ml[716,23553+11]..[716,23553+19])
                            Pexp_ident "set_last" (typing/parmatch.ml[716,23553+11]..[716,23553+19])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[716,23553+20]..[716,23553+24])
                                Pexp_ident "zero" (typing/parmatch.ml[716,23553+20]..[716,23553+24])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[716,23553+25]..[716,23553+27])
                                Pexp_ident "ps" (typing/parmatch.ml[716,23553+25]..[716,23553+27])
                          ]
                    ]
            ]
    ]
  structure_item (typing/parmatch.ml[719,23586+0]..[738,24313+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[719,23586+4]..[719,23586+17])
          Ppat_var "close_variant" (typing/parmatch.ml[719,23586+4]..[719,23586+17])
        expression (typing/parmatch.ml[719,23586+18]..[738,24313+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[719,23586+18]..[719,23586+21])
            Ppat_var "env" (typing/parmatch.ml[719,23586+18]..[719,23586+21])
          expression (typing/parmatch.ml[719,23586+22]..[738,24313+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[719,23586+22]..[719,23586+25])
              Ppat_var "row" (typing/parmatch.ml[719,23586+22]..[719,23586+25])
            expression (typing/parmatch.ml[720,23614+2]..[738,24313+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/parmatch.ml[720,23614+6]..[720,23614+9])
                    Ppat_var "row" (typing/parmatch.ml[720,23614+6]..[720,23614+9])
                  expression (typing/parmatch.ml[720,23614+12]..[720,23614+30])
                    Pexp_apply
                    expression (typing/parmatch.ml[720,23614+12]..[720,23614+26])
                      Pexp_ident "Btype.row_repr" (typing/parmatch.ml[720,23614+12]..[720,23614+26])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[720,23614+27]..[720,23614+30])
                          Pexp_ident "row" (typing/parmatch.ml[720,23614+27]..[720,23614+30])
                    ]
              ]
              expression (typing/parmatch.ml[721,23648+2]..[738,24313+5])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/parmatch.ml[721,23648+6]..[721,23648+8])
                      Ppat_var "nm" (typing/parmatch.ml[721,23648+6]..[721,23648+8])
                    expression (typing/parmatch.ml[722,23659+4]..[730,23973+33])
                      Pexp_apply
                      expression (typing/parmatch.ml[722,23659+4]..[722,23659+18])
                        Pexp_ident "List.fold_left" (typing/parmatch.ml[722,23659+4]..[722,23659+18])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[723,23678+6]..[729,23909+63])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/parmatch.ml[723,23678+11]..[723,23678+13])
                              Ppat_var "nm" (typing/parmatch.ml[723,23678+11]..[723,23678+13])
                            expression (typing/parmatch.ml[723,23678+14]..[729,23909+62]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/parmatch.ml[723,23678+14]..[723,23678+22])
                                Ppat_tuple
                                [
                                  pattern (typing/parmatch.ml[723,23678+15]..[723,23678+19])
                                    Ppat_var "_tag" (typing/parmatch.ml[723,23678+15]..[723,23678+19])
                                  pattern (typing/parmatch.ml[723,23678+20]..[723,23678+21])
                                    Ppat_var "f" (typing/parmatch.ml[723,23678+20]..[723,23678+21])
                                ]
                              expression (typing/parmatch.ml[724,23704+8]..[729,23909+62])
                                Pexp_match
                                expression (typing/parmatch.ml[724,23704+14]..[724,23704+36])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[724,23704+14]..[724,23704+34])
                                    Pexp_ident "Btype.row_field_repr" (typing/parmatch.ml[724,23704+14]..[724,23704+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[724,23704+35]..[724,23704+36])
                                        Pexp_ident "f" (typing/parmatch.ml[724,23704+35]..[724,23704+36])
                                  ]
                                [
                                  <case>
                                    pattern (typing/parmatch.ml[725,23746+10]..[725,23746+33])
                                      Ppat_construct "Reither" (typing/parmatch.ml[725,23746+10]..[725,23746+17])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[725,23746+17]..[725,23746+33])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[725,23746+18]..[725,23746+19])
                                              Ppat_any
                                            pattern (typing/parmatch.ml[725,23746+21]..[725,23746+22])
                                              Ppat_any
                                            pattern (typing/parmatch.ml[725,23746+24]..[725,23746+29])
                                              Ppat_construct "false" (typing/parmatch.ml[725,23746+24]..[725,23746+29])
                                              None
                                            pattern (typing/parmatch.ml[725,23746+31]..[725,23746+32])
                                              Ppat_var "e" (typing/parmatch.ml[725,23746+31]..[725,23746+32])
                                          ]
                                    expression (typing/parmatch.ml[727,23855+12]..[728,23892+16])
                                      Pexp_sequence
                                      expression (typing/parmatch.ml[727,23855+12]..[727,23855+35])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[727,23855+12]..[727,23855+25])
                                          Pexp_ident "set_row_field" (typing/parmatch.ml[727,23855+12]..[727,23855+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[727,23855+26]..[727,23855+27])
                                              Pexp_ident "e" (typing/parmatch.ml[727,23855+26]..[727,23855+27])
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[727,23855+28]..[727,23855+35])
                                              Pexp_construct "Rabsent" (typing/parmatch.ml[727,23855+28]..[727,23855+35])
                                              None
                                        ]
                                      expression (typing/parmatch.ml[728,23892+12]..[728,23892+16])
                                        Pexp_construct "None" (typing/parmatch.ml[728,23892+12]..[728,23892+16])
                                        None
                                  <case>
                                    pattern (typing/parmatch.ml[729,23909+10]..[729,23909+56])
                                      Ppat_or
                                      pattern (typing/parmatch.ml[729,23909+10]..[729,23909+43])
                                        Ppat_or
                                        pattern (typing/parmatch.ml[729,23909+10]..[729,23909+17])
                                          Ppat_construct "Rabsent" (typing/parmatch.ml[729,23909+10]..[729,23909+17])
                                          None
                                        pattern (typing/parmatch.ml[729,23909+20]..[729,23909+43])
                                          Ppat_construct "Reither" (typing/parmatch.ml[729,23909+20]..[729,23909+27])
                                          Some
                                            []
                                            pattern (typing/parmatch.ml[729,23909+28]..[729,23909+43])
                                              Ppat_tuple
                                              [
                                                pattern (typing/parmatch.ml[729,23909+29]..[729,23909+30])
                                                  Ppat_any
                                                pattern (typing/parmatch.ml[729,23909+32]..[729,23909+33])
                                                  Ppat_any
                                                pattern (typing/parmatch.ml[729,23909+35]..[729,23909+39])
                                                  Ppat_construct "true" (typing/parmatch.ml[729,23909+35]..[729,23909+39])
                                                  None
                                                pattern (typing/parmatch.ml[729,23909+41]..[729,23909+42])
                                                  Ppat_any
                                              ]
                                      pattern (typing/parmatch.ml[729,23909+46]..[729,23909+56])
                                        Ppat_construct "Rpresent" (typing/parmatch.ml[729,23909+46]..[729,23909+54])
                                        Some
                                          []
                                          pattern (typing/parmatch.ml[729,23909+55]..[729,23909+56])
                                            Ppat_any
                                    expression (typing/parmatch.ml[729,23909+60]..[729,23909+62])
                                      Pexp_ident "nm" (typing/parmatch.ml[729,23909+60]..[729,23909+62])
                                ]
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[730,23973+6]..[730,23973+18])
                            Pexp_field
                            expression (typing/parmatch.ml[730,23973+6]..[730,23973+9])
                              Pexp_ident "row" (typing/parmatch.ml[730,23973+6]..[730,23973+9])
                            "row_name" (typing/parmatch.ml[730,23973+10]..[730,23973+18])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[730,23973+19]..[730,23973+33])
                            Pexp_field
                            expression (typing/parmatch.ml[730,23973+19]..[730,23973+22])
                              Pexp_ident "row" (typing/parmatch.ml[730,23973+19]..[730,23973+22])
                            "row_fields" (typing/parmatch.ml[730,23973+23]..[730,23973+33])
                      ]
                ]
                expression (typing/parmatch.ml[731,24010+2]..[738,24313+5])
                  Pexp_ifthenelse
                  expression (typing/parmatch.ml[731,24010+5]..[731,24010+45])
                    Pexp_apply
                    expression (typing/parmatch.ml[731,24010+24]..[731,24010+26])
                      Pexp_ident "||" (typing/parmatch.ml[731,24010+24]..[731,24010+26])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[731,24010+5]..[731,24010+23])
                          Pexp_apply
                          expression (typing/parmatch.ml[731,24010+5]..[731,24010+8])
                            Pexp_ident "not" (typing/parmatch.ml[731,24010+5]..[731,24010+8])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[731,24010+9]..[731,24010+23])
                                Pexp_field
                                expression (typing/parmatch.ml[731,24010+9]..[731,24010+12])
                                  Pexp_ident "row" (typing/parmatch.ml[731,24010+9]..[731,24010+12])
                                "row_closed" (typing/parmatch.ml[731,24010+13]..[731,24010+23])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[731,24010+27]..[731,24010+45])
                          Pexp_apply
                          expression (typing/parmatch.ml[731,24010+30]..[731,24010+32])
                            Pexp_ident "!=" (typing/parmatch.ml[731,24010+30]..[731,24010+32])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[731,24010+27]..[731,24010+29])
                                Pexp_ident "nm" (typing/parmatch.ml[731,24010+27]..[731,24010+29])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[731,24010+33]..[731,24010+45])
                                Pexp_field
                                expression (typing/parmatch.ml[731,24010+33]..[731,24010+36])
                                  Pexp_ident "row" (typing/parmatch.ml[731,24010+33]..[731,24010+36])
                                "row_name" (typing/parmatch.ml[731,24010+37]..[731,24010+45])
                          ]
                    ]
                  expression (typing/parmatch.ml[731,24010+51]..[738,24313+5])
                    Pexp_apply
                    expression (typing/parmatch.ml[733,24106+4]..[733,24106+15])
                      Pexp_ident "Ctype.unify" (typing/parmatch.ml[733,24106+4]..[733,24106+15])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[733,24106+16]..[733,24106+19])
                          Pexp_ident "env" (typing/parmatch.ml[733,24106+16]..[733,24106+19])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[733,24106+20]..[733,24106+32])
                          Pexp_field
                          expression (typing/parmatch.ml[733,24106+20]..[733,24106+23])
                            Pexp_ident "row" (typing/parmatch.ml[733,24106+20]..[733,24106+23])
                          "row_more" (typing/parmatch.ml[733,24106+24]..[733,24106+32])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[734,24139+6]..[737,24257+55])
                          Pexp_apply
                          expression (typing/parmatch.ml[734,24139+7]..[734,24139+21])
                            Pexp_ident "Btype.newgenty" (typing/parmatch.ml[734,24139+7]..[734,24139+21])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[735,24161+9]..[737,24257+54])
                                Pexp_construct "Tvariant" (typing/parmatch.ml[735,24161+10]..[735,24161+18])
                                Some
                                  expression (typing/parmatch.ml[735,24161+19]..[737,24257+53])
                                    Pexp_record
                                    [
                                      "row_fields" (typing/parmatch.ml[735,24161+29]..[735,24161+39])
                                        expression (typing/parmatch.ml[735,24161+42]..[735,24161+44])
                                          Pexp_construct "[]" (typing/parmatch.ml[735,24161+42]..[735,24161+44])
                                          None
                                      "row_more" (typing/parmatch.ml[736,24207+20]..[736,24207+28])
                                        expression (typing/parmatch.ml[736,24207+31]..[736,24207+48])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[736,24207+31]..[736,24207+46])
                                            Pexp_ident "Btype.newgenvar" (typing/parmatch.ml[736,24207+31]..[736,24207+46])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[736,24207+46]..[736,24207+48])
                                                Pexp_construct "()" (typing/parmatch.ml[736,24207+46]..[736,24207+48])
                                                None
                                          ]
                                      "row_closed" (typing/parmatch.ml[737,24257+20]..[737,24257+30])
                                        expression (typing/parmatch.ml[737,24257+33]..[737,24257+37])
                                          Pexp_construct "true" (typing/parmatch.ml[737,24257+33]..[737,24257+37])
                                          None
                                      "row_name" (typing/parmatch.ml[737,24257+39]..[737,24257+47])
                                        expression (typing/parmatch.ml[737,24257+50]..[737,24257+52])
                                          Pexp_ident "nm" (typing/parmatch.ml[737,24257+50]..[737,24257+52])
                                    ]
                                    Some
                                      expression (typing/parmatch.ml[735,24161+20]..[735,24161+23])
                                        Pexp_ident "row" (typing/parmatch.ml[735,24161+20]..[735,24161+23])
                          ]
                    ]
                  None
    ]
  structure_item (typing/parmatch.ml[745,24496+0]..[785,25783+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[745,24496+4]..[745,24496+14])
          Ppat_var "full_match" (typing/parmatch.ml[745,24496+4]..[745,24496+14])
        expression (typing/parmatch.ml[745,24496+15]..[785,25783+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[745,24496+15]..[745,24496+22])
            Ppat_var "closing" (typing/parmatch.ml[745,24496+15]..[745,24496+22])
          expression (typing/parmatch.ml[745,24496+23]..[785,25783+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[745,24496+23]..[745,24496+26])
              Ppat_var "env" (typing/parmatch.ml[745,24496+23]..[745,24496+26])
            expression (typing/parmatch.ml[745,24496+30]..[785,25783+16])
              Pexp_match
              expression (typing/parmatch.ml[745,24496+36]..[745,24496+39])
                Pexp_ident "env" (typing/parmatch.ml[745,24496+36]..[745,24496+39])
              [
                <case>
                  pattern (typing/parmatch.ml[746,24541+2]..[746,24541+4])
                    Ppat_construct "[]" (typing/parmatch.ml[746,24541+2]..[746,24541+4])
                    None
                  expression (typing/parmatch.ml[746,24541+8]..[746,24541+13])
                    Pexp_construct "false" (typing/parmatch.ml[746,24541+8]..[746,24541+13])
                    None
                <case>
                  pattern (typing/parmatch.ml[747,24555+2]..[747,24555+17])
                    Ppat_construct "::" (typing/parmatch.ml[747,24555+13]..[747,24555+15])
                    Some
                      []
                      pattern (typing/parmatch.ml[747,24555+2]..[747,24555+17]) ghost
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[747,24555+2]..[747,24555+12])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[747,24555+3]..[747,24555+8])
                                Ppat_var "discr" (typing/parmatch.ml[747,24555+3]..[747,24555+8])
                              pattern (typing/parmatch.ml[747,24555+10]..[747,24555+11])
                                Ppat_any
                            ]
                          pattern (typing/parmatch.ml[747,24555+16]..[747,24555+17])
                            Ppat_any
                        ]
                  expression (typing/parmatch.ml[748,24576+2]..[785,25783+16])
                    Pexp_open Fresh
                    module_expr (typing/parmatch.ml[748,24576+11]..[748,24576+24])
                      Pmod_ident "Patterns.Head" (typing/parmatch.ml[748,24576+11]..[748,24576+24])
                    expression (typing/parmatch.ml[749,24604+2]..[785,25783+16])
                      Pexp_match
                      expression (typing/parmatch.ml[749,24604+8]..[749,24604+22])
                        Pexp_field
                        expression (typing/parmatch.ml[749,24604+8]..[749,24604+13])
                          Pexp_ident "discr" (typing/parmatch.ml[749,24604+8]..[749,24604+13])
                        "pat_desc" (typing/parmatch.ml[749,24604+14]..[749,24604+22])
                      [
                        <case>
                          pattern (typing/parmatch.ml[750,24632+4]..[750,24632+7])
                            Ppat_construct "Any" (typing/parmatch.ml[750,24632+4]..[750,24632+7])
                            None
                          expression (typing/parmatch.ml[750,24632+11]..[750,24632+23])
                            Pexp_assert
                            expression (typing/parmatch.ml[750,24632+18]..[750,24632+23])
                              Pexp_construct "false" (typing/parmatch.ml[750,24632+18]..[750,24632+23])
                              None
                        <case>
                          pattern (typing/parmatch.ml[751,24656+4]..[751,24656+49])
                            Ppat_construct "Construct" (typing/parmatch.ml[751,24656+4]..[751,24656+13])
                            Some
                              []
                              pattern (typing/parmatch.ml[751,24656+14]..[751,24656+49])
                                Ppat_record Open
                                [
                                  "cstr_tag" (typing/parmatch.ml[751,24656+16]..[751,24656+24])
                                    pattern (typing/parmatch.ml[751,24656+27]..[751,24656+43])
                                      Ppat_construct "Cstr_extension" (typing/parmatch.ml[751,24656+27]..[751,24656+41])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[751,24656+42]..[751,24656+43])
                                          Ppat_any
                                ]
                          expression (typing/parmatch.ml[751,24656+53]..[751,24656+58])
                            Pexp_construct "false" (typing/parmatch.ml[751,24656+53]..[751,24656+58])
                            None
                        <case>
                          pattern (typing/parmatch.ml[752,24715+4]..[752,24715+15])
                            Ppat_construct "Construct" (typing/parmatch.ml[752,24715+4]..[752,24715+13])
                            Some
                              []
                              pattern (typing/parmatch.ml[752,24715+14]..[752,24715+15])
                                Ppat_var "c" (typing/parmatch.ml[752,24715+14]..[752,24715+15])
                          expression (typing/parmatch.ml[752,24715+19]..[752,24715+69])
                            Pexp_apply
                            expression (typing/parmatch.ml[752,24715+35]..[752,24715+36])
                              Pexp_ident "=" (typing/parmatch.ml[752,24715+35]..[752,24715+36])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[752,24715+19]..[752,24715+34])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[752,24715+19]..[752,24715+30])
                                    Pexp_ident "List.length" (typing/parmatch.ml[752,24715+19]..[752,24715+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[752,24715+31]..[752,24715+34])
                                        Pexp_ident "env" (typing/parmatch.ml[752,24715+31]..[752,24715+34])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[752,24715+37]..[752,24715+69])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[752,24715+51]..[752,24715+52])
                                    Pexp_ident "+" (typing/parmatch.ml[752,24715+51]..[752,24715+52])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[752,24715+37]..[752,24715+50])
                                        Pexp_field
                                        expression (typing/parmatch.ml[752,24715+37]..[752,24715+38])
                                          Pexp_ident "c" (typing/parmatch.ml[752,24715+37]..[752,24715+38])
                                        "cstr_consts" (typing/parmatch.ml[752,24715+39]..[752,24715+50])
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[752,24715+53]..[752,24715+69])
                                        Pexp_field
                                        expression (typing/parmatch.ml[752,24715+53]..[752,24715+54])
                                          Pexp_ident "c" (typing/parmatch.ml[752,24715+53]..[752,24715+54])
                                        "cstr_nonconsts" (typing/parmatch.ml[752,24715+55]..[752,24715+69])
                                  ]
                            ]
                        <case>
                          pattern (typing/parmatch.ml[753,24785+4]..[753,24785+27])
                            Ppat_construct "Variant" (typing/parmatch.ml[753,24785+4]..[753,24785+11])
                            Some
                              []
                              pattern (typing/parmatch.ml[753,24785+12]..[753,24785+27])
                                Ppat_record Open
                                [
                                  "type_row" (typing/parmatch.ml[753,24785+14]..[753,24785+22]) ghost
                                    pattern (typing/parmatch.ml[753,24785+14]..[753,24785+22])
                                      Ppat_var "type_row" (typing/parmatch.ml[753,24785+14]..[753,24785+22])
                                ]
                          expression (typing/parmatch.ml[754,24816+6]..[778,25640+24])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/parmatch.ml[754,24816+10]..[754,24816+16])
                                  Ppat_var "fields" (typing/parmatch.ml[754,24816+10]..[754,24816+16])
                                expression (typing/parmatch.ml[755,24835+8]..[760,24981+13])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[755,24835+8]..[755,24835+16])
                                    Pexp_ident "List.map" (typing/parmatch.ml[755,24835+8]..[755,24835+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[756,24852+10]..[759,24948+32])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/parmatch.ml[756,24852+15]..[756,24852+21])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[756,24852+16]..[756,24852+17])
                                              Ppat_var "d" (typing/parmatch.ml[756,24852+16]..[756,24852+17])
                                            pattern (typing/parmatch.ml[756,24852+19]..[756,24852+20])
                                              Ppat_any
                                          ]
                                        expression (typing/parmatch.ml[757,24877+12]..[759,24948+31])
                                          Pexp_match
                                          expression (typing/parmatch.ml[757,24877+18]..[757,24877+28])
                                            Pexp_field
                                            expression (typing/parmatch.ml[757,24877+18]..[757,24877+19])
                                              Pexp_ident "d" (typing/parmatch.ml[757,24877+18]..[757,24877+19])
                                            "pat_desc" (typing/parmatch.ml[757,24877+20]..[757,24877+28])
                                          [
                                            <case>
                                              pattern (typing/parmatch.ml[758,24911+14]..[758,24911+29])
                                                Ppat_construct "Variant" (typing/parmatch.ml[758,24911+14]..[758,24911+21])
                                                Some
                                                  []
                                                  pattern (typing/parmatch.ml[758,24911+22]..[758,24911+29])
                                                    Ppat_record Closed
                                                    [
                                                      "tag" (typing/parmatch.ml[758,24911+24]..[758,24911+27]) ghost
                                                        pattern (typing/parmatch.ml[758,24911+24]..[758,24911+27])
                                                          Ppat_var "tag" (typing/parmatch.ml[758,24911+24]..[758,24911+27])
                                                    ]
                                              expression (typing/parmatch.ml[758,24911+33]..[758,24911+36])
                                                Pexp_ident "tag" (typing/parmatch.ml[758,24911+33]..[758,24911+36])
                                            <case>
                                              pattern (typing/parmatch.ml[759,24948+14]..[759,24948+15])
                                                Ppat_any
                                              expression (typing/parmatch.ml[759,24948+19]..[759,24948+31])
                                                Pexp_assert
                                                expression (typing/parmatch.ml[759,24948+26]..[759,24948+31])
                                                  Pexp_construct "false" (typing/parmatch.ml[759,24948+26]..[759,24948+31])
                                                  None
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[760,24981+10]..[760,24981+13])
                                        Pexp_ident "env" (typing/parmatch.ml[760,24981+10]..[760,24981+13])
                                  ]
                            ]
                            expression (typing/parmatch.ml[762,25004+6]..[778,25640+24])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/parmatch.ml[762,25004+10]..[762,25004+13])
                                    Ppat_var "row" (typing/parmatch.ml[762,25004+10]..[762,25004+13])
                                  expression (typing/parmatch.ml[762,25004+16]..[762,25004+27])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[762,25004+16]..[762,25004+24])
                                      Pexp_ident "type_row" (typing/parmatch.ml[762,25004+16]..[762,25004+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[762,25004+25]..[762,25004+27])
                                          Pexp_construct "()" (typing/parmatch.ml[762,25004+25]..[762,25004+27])
                                          None
                                    ]
                              ]
                              expression (typing/parmatch.ml[763,25035+6]..[778,25640+24])
                                Pexp_ifthenelse
                                expression (typing/parmatch.ml[763,25035+9]..[763,25035+45])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[763,25035+17]..[763,25035+19])
                                    Pexp_ident "&&" (typing/parmatch.ml[763,25035+17]..[763,25035+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[763,25035+9]..[763,25035+16])
                                        Pexp_ident "closing" (typing/parmatch.ml[763,25035+9]..[763,25035+16])
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[763,25035+20]..[763,25035+45])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[763,25035+20]..[763,25035+23])
                                          Pexp_ident "not" (typing/parmatch.ml[763,25035+20]..[763,25035+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[763,25035+24]..[763,25035+45])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[763,25035+25]..[763,25035+40])
                                                Pexp_ident "Btype.row_fixed" (typing/parmatch.ml[763,25035+25]..[763,25035+40])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[763,25035+41]..[763,25035+44])
                                                    Pexp_ident "row" (typing/parmatch.ml[763,25035+41]..[763,25035+44])
                                              ]
                                        ]
                                  ]
                                expression (typing/parmatch.ml[765,25155+8]..[772,25462+24])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[765,25155+8]..[765,25155+20])
                                    Pexp_ident "List.for_all" (typing/parmatch.ml[765,25155+8]..[765,25155+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[766,25176+10]..[771,25413+48])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/parmatch.ml[766,25176+15]..[766,25176+22])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[766,25176+16]..[766,25176+19])
                                              Ppat_var "tag" (typing/parmatch.ml[766,25176+16]..[766,25176+19])
                                            pattern (typing/parmatch.ml[766,25176+20]..[766,25176+21])
                                              Ppat_var "f" (typing/parmatch.ml[766,25176+20]..[766,25176+21])
                                          ]
                                        expression (typing/parmatch.ml[767,25202+12]..[771,25413+47])
                                          Pexp_match
                                          expression (typing/parmatch.ml[767,25202+18]..[767,25202+40])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[767,25202+18]..[767,25202+38])
                                              Pexp_ident "Btype.row_field_repr" (typing/parmatch.ml[767,25202+18]..[767,25202+38])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[767,25202+39]..[767,25202+40])
                                                  Pexp_ident "f" (typing/parmatch.ml[767,25202+39]..[767,25202+40])
                                            ]
                                          [
                                            <case>
                                              pattern (typing/parmatch.ml[768,25248+14]..[768,25248+47])
                                                Ppat_or
                                                pattern (typing/parmatch.ml[768,25248+14]..[768,25248+21])
                                                  Ppat_construct "Rabsent" (typing/parmatch.ml[768,25248+14]..[768,25248+21])
                                                  None
                                                pattern (typing/parmatch.ml[768,25248+24]..[768,25248+47])
                                                  Ppat_construct "Reither" (typing/parmatch.ml[768,25248+24]..[768,25248+31])
                                                  Some
                                                    []
                                                    pattern (typing/parmatch.ml[768,25248+31]..[768,25248+47])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/parmatch.ml[768,25248+32]..[768,25248+33])
                                                          Ppat_any
                                                        pattern (typing/parmatch.ml[768,25248+35]..[768,25248+36])
                                                          Ppat_any
                                                        pattern (typing/parmatch.ml[768,25248+38]..[768,25248+43])
                                                          Ppat_construct "false" (typing/parmatch.ml[768,25248+38]..[768,25248+43])
                                                          None
                                                        pattern (typing/parmatch.ml[768,25248+45]..[768,25248+46])
                                                          Ppat_any
                                                      ]
                                              expression (typing/parmatch.ml[768,25248+51]..[768,25248+55])
                                                Pexp_construct "true" (typing/parmatch.ml[768,25248+51]..[768,25248+55])
                                                None
                                            <case>
                                              pattern (typing/parmatch.ml[769,25304+14]..[771,25413+24])
                                                Ppat_or
                                                pattern (typing/parmatch.ml[769,25304+14]..[769,25304+37])
                                                  Ppat_construct "Reither" (typing/parmatch.ml[769,25304+14]..[769,25304+21])
                                                  Some
                                                    []
                                                    pattern (typing/parmatch.ml[769,25304+22]..[769,25304+37])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/parmatch.ml[769,25304+23]..[769,25304+24])
                                                          Ppat_any
                                                        pattern (typing/parmatch.ml[769,25304+26]..[769,25304+27])
                                                          Ppat_any
                                                        pattern (typing/parmatch.ml[769,25304+29]..[769,25304+33])
                                                          Ppat_construct "true" (typing/parmatch.ml[769,25304+29]..[769,25304+33])
                                                          None
                                                        pattern (typing/parmatch.ml[769,25304+35]..[769,25304+36])
                                                          Ppat_any
                                                      ]
                                                pattern (typing/parmatch.ml[771,25413+14]..[771,25413+24])
                                                  Ppat_construct "Rpresent" (typing/parmatch.ml[771,25413+14]..[771,25413+22])
                                                  Some
                                                    []
                                                    pattern (typing/parmatch.ml[771,25413+23]..[771,25413+24])
                                                      Ppat_any
                                              expression (typing/parmatch.ml[771,25413+28]..[771,25413+47])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[771,25413+28]..[771,25413+36])
                                                  Pexp_ident "List.mem" (typing/parmatch.ml[771,25413+28]..[771,25413+36])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[771,25413+37]..[771,25413+40])
                                                      Pexp_ident "tag" (typing/parmatch.ml[771,25413+37]..[771,25413+40])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[771,25413+41]..[771,25413+47])
                                                      Pexp_ident "fields" (typing/parmatch.ml[771,25413+41]..[771,25413+47])
                                                ]
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[772,25462+10]..[772,25462+24])
                                        Pexp_field
                                        expression (typing/parmatch.ml[772,25462+10]..[772,25462+13])
                                          Pexp_ident "row" (typing/parmatch.ml[772,25462+10]..[772,25462+13])
                                        "row_fields" (typing/parmatch.ml[772,25462+14]..[772,25462+24])
                                  ]
                                Some
                                  expression (typing/parmatch.ml[774,25498+8]..[778,25640+24])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[774,25498+23]..[774,25498+25])
                                      Pexp_ident "&&" (typing/parmatch.ml[774,25498+23]..[774,25498+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[774,25498+8]..[774,25498+22])
                                          Pexp_field
                                          expression (typing/parmatch.ml[774,25498+8]..[774,25498+11])
                                            Pexp_ident "row" (typing/parmatch.ml[774,25498+8]..[774,25498+11])
                                          "row_closed" (typing/parmatch.ml[774,25498+12]..[774,25498+22])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[775,25524+8]..[778,25640+24])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[775,25524+8]..[775,25524+20])
                                            Pexp_ident "List.for_all" (typing/parmatch.ml[775,25524+8]..[775,25524+20])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[776,25545+10]..[777,25571+68])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (typing/parmatch.ml[776,25545+15]..[776,25545+22])
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/parmatch.ml[776,25545+16]..[776,25545+19])
                                                      Ppat_var "tag" (typing/parmatch.ml[776,25545+16]..[776,25545+19])
                                                    pattern (typing/parmatch.ml[776,25545+20]..[776,25545+21])
                                                      Ppat_var "f" (typing/parmatch.ml[776,25545+20]..[776,25545+21])
                                                  ]
                                                expression (typing/parmatch.ml[777,25571+12]..[777,25571+67])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[777,25571+45]..[777,25571+47])
                                                    Pexp_ident "||" (typing/parmatch.ml[777,25571+45]..[777,25571+47])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[777,25571+12]..[777,25571+44])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[777,25571+35]..[777,25571+36])
                                                          Pexp_ident "=" (typing/parmatch.ml[777,25571+35]..[777,25571+36])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[777,25571+12]..[777,25571+34])
                                                              Pexp_apply
                                                              expression (typing/parmatch.ml[777,25571+12]..[777,25571+32])
                                                                Pexp_ident "Btype.row_field_repr" (typing/parmatch.ml[777,25571+12]..[777,25571+32])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/parmatch.ml[777,25571+33]..[777,25571+34])
                                                                    Pexp_ident "f" (typing/parmatch.ml[777,25571+33]..[777,25571+34])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[777,25571+37]..[777,25571+44])
                                                              Pexp_construct "Rabsent" (typing/parmatch.ml[777,25571+37]..[777,25571+44])
                                                              None
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[777,25571+48]..[777,25571+67])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[777,25571+48]..[777,25571+56])
                                                          Pexp_ident "List.mem" (typing/parmatch.ml[777,25571+48]..[777,25571+56])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[777,25571+57]..[777,25571+60])
                                                              Pexp_ident "tag" (typing/parmatch.ml[777,25571+57]..[777,25571+60])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[777,25571+61]..[777,25571+67])
                                                              Pexp_ident "fields" (typing/parmatch.ml[777,25571+61]..[777,25571+67])
                                                        ]
                                                  ]
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[778,25640+10]..[778,25640+24])
                                                Pexp_field
                                                expression (typing/parmatch.ml[778,25640+10]..[778,25640+13])
                                                  Pexp_ident "row" (typing/parmatch.ml[778,25640+10]..[778,25640+13])
                                                "row_fields" (typing/parmatch.ml[778,25640+14]..[778,25640+24])
                                          ]
                                    ]
                        <case>
                          pattern (typing/parmatch.ml[779,25665+4]..[779,25665+25])
                            Ppat_construct "Constant" (typing/parmatch.ml[779,25665+4]..[779,25665+12])
                            Some
                              []
                              pattern (typing/parmatch.ml[779,25665+13]..[779,25665+25])
                                Ppat_construct "Const_char" (typing/parmatch.ml[779,25665+13]..[779,25665+23])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[779,25665+24]..[779,25665+25])
                                    Ppat_any
                          expression (typing/parmatch.ml[780,25694+6]..[780,25694+27])
                            Pexp_apply
                            expression (typing/parmatch.ml[780,25694+22]..[780,25694+23])
                              Pexp_ident "=" (typing/parmatch.ml[780,25694+22]..[780,25694+23])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[780,25694+6]..[780,25694+21])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[780,25694+6]..[780,25694+17])
                                    Pexp_ident "List.length" (typing/parmatch.ml[780,25694+6]..[780,25694+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[780,25694+18]..[780,25694+21])
                                        Pexp_ident "env" (typing/parmatch.ml[780,25694+18]..[780,25694+21])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[780,25694+24]..[780,25694+27])
                                  Pexp_constant PConst_int (256,None)
                            ]
                        <case>
                          pattern (typing/parmatch.ml[781,25722+4]..[782,25737+11])
                            Ppat_or
                            pattern (typing/parmatch.ml[781,25722+4]..[781,25722+14])
                              Ppat_construct "Constant" (typing/parmatch.ml[781,25722+4]..[781,25722+12])
                              Some
                                []
                                pattern (typing/parmatch.ml[781,25722+13]..[781,25722+14])
                                  Ppat_any
                            pattern (typing/parmatch.ml[782,25737+4]..[782,25737+11])
                              Ppat_construct "Array" (typing/parmatch.ml[782,25737+4]..[782,25737+9])
                              Some
                                []
                                pattern (typing/parmatch.ml[782,25737+10]..[782,25737+11])
                                  Ppat_any
                          expression (typing/parmatch.ml[782,25737+15]..[782,25737+20])
                            Pexp_construct "false" (typing/parmatch.ml[782,25737+15]..[782,25737+20])
                            None
                        <case>
                          pattern (typing/parmatch.ml[783,25758+4]..[785,25783+8])
                            Ppat_or
                            pattern (typing/parmatch.ml[783,25758+4]..[784,25770+12])
                              Ppat_or
                              pattern (typing/parmatch.ml[783,25758+4]..[783,25758+11])
                                Ppat_construct "Tuple" (typing/parmatch.ml[783,25758+4]..[783,25758+9])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[783,25758+10]..[783,25758+11])
                                    Ppat_any
                              pattern (typing/parmatch.ml[784,25770+4]..[784,25770+12])
                                Ppat_construct "Record" (typing/parmatch.ml[784,25770+4]..[784,25770+10])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[784,25770+11]..[784,25770+12])
                                    Ppat_any
                            pattern (typing/parmatch.ml[785,25783+4]..[785,25783+8])
                              Ppat_construct "Lazy" (typing/parmatch.ml[785,25783+4]..[785,25783+8])
                              None
                          expression (typing/parmatch.ml[785,25783+12]..[785,25783+16])
                            Pexp_construct "true" (typing/parmatch.ml[785,25783+12]..[785,25783+16])
                            None
                      ]
              ]
    ]
  structure_item (typing/parmatch.ml[789,25895+0]..[803,26443+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[789,25895+4]..[789,25895+17])
          Ppat_var "should_extend" (typing/parmatch.ml[789,25895+4]..[789,25895+17])
        expression (typing/parmatch.ml[789,25895+18]..[803,26443+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[789,25895+18]..[789,25895+21])
            Ppat_var "ext" (typing/parmatch.ml[789,25895+18]..[789,25895+21])
          expression (typing/parmatch.ml[789,25895+22]..[803,26443+3]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[789,25895+22]..[789,25895+25])
              Ppat_var "env" (typing/parmatch.ml[789,25895+22]..[789,25895+25])
            expression (typing/parmatch.ml[789,25895+28]..[803,26443+3])
              Pexp_match
              expression (typing/parmatch.ml[789,25895+34]..[789,25895+37])
                Pexp_ident "ext" (typing/parmatch.ml[789,25895+34]..[789,25895+37])
              [
                <case>
                  pattern (typing/parmatch.ml[790,25938+2]..[790,25938+6])
                    Ppat_construct "None" (typing/parmatch.ml[790,25938+2]..[790,25938+6])
                    None
                  expression (typing/parmatch.ml[790,25938+10]..[790,25938+15])
                    Pexp_construct "false" (typing/parmatch.ml[790,25938+10]..[790,25938+15])
                    None
                <case>
                  pattern (typing/parmatch.ml[791,25954+2]..[791,25954+10])
                    Ppat_construct "Some" (typing/parmatch.ml[791,25954+2]..[791,25954+6])
                    Some
                      []
                      pattern (typing/parmatch.ml[791,25954+7]..[791,25954+10])
                        Ppat_var "ext" (typing/parmatch.ml[791,25954+7]..[791,25954+10])
                  expression (typing/parmatch.ml[791,25954+14]..[803,26443+3])
                    Pexp_match
                    expression (typing/parmatch.ml[791,25954+26]..[791,25954+29])
                      Pexp_ident "env" (typing/parmatch.ml[791,25954+26]..[791,25954+29])
                    [
                      <case>
                        pattern (typing/parmatch.ml[792,25989+4]..[792,25989+6])
                          Ppat_construct "[]" (typing/parmatch.ml[792,25989+4]..[792,25989+6])
                          None
                        expression (typing/parmatch.ml[792,25989+10]..[792,25989+22])
                          Pexp_assert
                          expression (typing/parmatch.ml[792,25989+17]..[792,25989+22])
                            Pexp_construct "false" (typing/parmatch.ml[792,25989+17]..[792,25989+22])
                            None
                      <case>
                        pattern (typing/parmatch.ml[793,26012+4]..[793,26012+12])
                          Ppat_construct "::" (typing/parmatch.ml[793,26012+9]..[793,26012+11])
                          Some
                            []
                            pattern (typing/parmatch.ml[793,26012+4]..[793,26012+12]) ghost
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[793,26012+4]..[793,26012+9])
                                  Ppat_tuple
                                  [
                                    pattern (typing/parmatch.ml[793,26012+5]..[793,26012+6])
                                      Ppat_var "p" (typing/parmatch.ml[793,26012+5]..[793,26012+6])
                                    pattern (typing/parmatch.ml[793,26012+7]..[793,26012+8])
                                      Ppat_any
                                  ]
                                pattern (typing/parmatch.ml[793,26012+11]..[793,26012+12])
                                  Ppat_any
                              ]
                        expression (typing/parmatch.ml[794,26028+6]..[802,26433+9])
                          Pexp_open Fresh
                          module_expr (typing/parmatch.ml[794,26028+15]..[794,26028+28])
                            Pmod_ident "Patterns.Head" (typing/parmatch.ml[794,26028+15]..[794,26028+28])
                          expression (typing/parmatch.ml[795,26060+6]..[802,26433+9])
                            Pexp_match
                            expression (typing/parmatch.ml[795,26060+18]..[795,26060+28])
                              Pexp_field
                              expression (typing/parmatch.ml[795,26060+18]..[795,26060+19])
                                Pexp_ident "p" (typing/parmatch.ml[795,26060+18]..[795,26060+19])
                              "pat_desc" (typing/parmatch.ml[795,26060+20]..[795,26060+28])
                            [
                              <case>
                                pattern (typing/parmatch.ml[796,26094+8]..[796,26094+72])
                                  Ppat_construct "Construct" (typing/parmatch.ml[796,26094+8]..[796,26094+17])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[796,26094+18]..[796,26094+72])
                                      Ppat_record Closed
                                      [
                                        "cstr_tag" (typing/parmatch.ml[796,26094+19]..[796,26094+27])
                                          pattern (typing/parmatch.ml[796,26094+28]..[796,26094+71])
                                            Ppat_or
                                            pattern (typing/parmatch.ml[796,26094+29]..[796,26094+57])
                                              Ppat_or
                                              pattern (typing/parmatch.ml[796,26094+29]..[796,26094+44])
                                                Ppat_construct "Cstr_constant" (typing/parmatch.ml[796,26094+29]..[796,26094+42])
                                                Some
                                                  []
                                                  pattern (typing/parmatch.ml[796,26094+43]..[796,26094+44])
                                                    Ppat_any
                                              pattern (typing/parmatch.ml[796,26094+45]..[796,26094+57])
                                                Ppat_construct "Cstr_block" (typing/parmatch.ml[796,26094+45]..[796,26094+55])
                                                Some
                                                  []
                                                  pattern (typing/parmatch.ml[796,26094+56]..[796,26094+57])
                                                    Ppat_any
                                            pattern (typing/parmatch.ml[796,26094+58]..[796,26094+70])
                                              Ppat_construct "Cstr_unboxed" (typing/parmatch.ml[796,26094+58]..[796,26094+70])
                                              None
                                      ]
                                expression (typing/parmatch.ml[797,26170+10]..[798,26241+28])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/parmatch.ml[797,26170+14]..[797,26170+18])
                                        Ppat_var "path" (typing/parmatch.ml[797,26170+14]..[797,26170+18])
                                      expression (typing/parmatch.ml[797,26170+21]..[797,26170+67])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[797,26170+21]..[797,26170+46])
                                          Pexp_ident "get_constructor_type_path" (typing/parmatch.ml[797,26170+21]..[797,26170+46])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[797,26170+47]..[797,26170+57])
                                              Pexp_field
                                              expression (typing/parmatch.ml[797,26170+47]..[797,26170+48])
                                                Pexp_ident "p" (typing/parmatch.ml[797,26170+47]..[797,26170+48])
                                              "pat_type" (typing/parmatch.ml[797,26170+49]..[797,26170+57])
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[797,26170+58]..[797,26170+67])
                                              Pexp_field
                                              expression (typing/parmatch.ml[797,26170+58]..[797,26170+59])
                                                Pexp_ident "p" (typing/parmatch.ml[797,26170+58]..[797,26170+59])
                                              "pat_env" (typing/parmatch.ml[797,26170+60]..[797,26170+67])
                                        ]
                                  ]
                                  expression (typing/parmatch.ml[798,26241+10]..[798,26241+28])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[798,26241+10]..[798,26241+19])
                                      Pexp_ident "Path.same" (typing/parmatch.ml[798,26241+10]..[798,26241+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[798,26241+20]..[798,26241+24])
                                          Pexp_ident "path" (typing/parmatch.ml[798,26241+20]..[798,26241+24])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[798,26241+25]..[798,26241+28])
                                          Pexp_ident "ext" (typing/parmatch.ml[798,26241+25]..[798,26241+28])
                                    ]
                              <case>
                                pattern (typing/parmatch.ml[799,26270+8]..[799,26270+47])
                                  Ppat_construct "Construct" (typing/parmatch.ml[799,26270+8]..[799,26270+17])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[799,26270+18]..[799,26270+47])
                                      Ppat_record Closed
                                      [
                                        "cstr_tag" (typing/parmatch.ml[799,26270+19]..[799,26270+27])
                                          pattern (typing/parmatch.ml[799,26270+28]..[799,26270+46])
                                            Ppat_construct "Cstr_extension" (typing/parmatch.ml[799,26270+29]..[799,26270+43])
                                            Some
                                              []
                                              pattern (typing/parmatch.ml[799,26270+44]..[799,26270+45])
                                                Ppat_any
                                      ]
                                expression (typing/parmatch.ml[799,26270+51]..[799,26270+56])
                                  Pexp_construct "false" (typing/parmatch.ml[799,26270+51]..[799,26270+56])
                                  None
                              <case>
                                pattern (typing/parmatch.ml[800,26327+8]..[800,26327+68])
                                  Ppat_or
                                  pattern (typing/parmatch.ml[800,26327+8]..[800,26327+61])
                                    Ppat_or
                                    pattern (typing/parmatch.ml[800,26327+8]..[800,26327+51])
                                      Ppat_or
                                      pattern (typing/parmatch.ml[800,26327+8]..[800,26327+40])
                                        Ppat_or
                                        pattern (typing/parmatch.ml[800,26327+8]..[800,26327+28])
                                          Ppat_or
                                          pattern (typing/parmatch.ml[800,26327+8]..[800,26327+18])
                                            Ppat_construct "Constant" (typing/parmatch.ml[800,26327+8]..[800,26327+16])
                                            Some
                                              []
                                              pattern (typing/parmatch.ml[800,26327+17]..[800,26327+18])
                                                Ppat_any
                                          pattern (typing/parmatch.ml[800,26327+21]..[800,26327+28])
                                            Ppat_construct "Tuple" (typing/parmatch.ml[800,26327+21]..[800,26327+26])
                                            Some
                                              []
                                              pattern (typing/parmatch.ml[800,26327+27]..[800,26327+28])
                                                Ppat_any
                                        pattern (typing/parmatch.ml[800,26327+31]..[800,26327+40])
                                          Ppat_construct "Variant" (typing/parmatch.ml[800,26327+31]..[800,26327+38])
                                          Some
                                            []
                                            pattern (typing/parmatch.ml[800,26327+39]..[800,26327+40])
                                              Ppat_any
                                      pattern (typing/parmatch.ml[800,26327+43]..[800,26327+51])
                                        Ppat_construct "Record" (typing/parmatch.ml[800,26327+43]..[800,26327+49])
                                        Some
                                          []
                                          pattern (typing/parmatch.ml[800,26327+50]..[800,26327+51])
                                            Ppat_any
                                    pattern (typing/parmatch.ml[800,26327+54]..[800,26327+61])
                                      Ppat_construct "Array" (typing/parmatch.ml[800,26327+54]..[800,26327+59])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[800,26327+60]..[800,26327+61])
                                          Ppat_any
                                  pattern (typing/parmatch.ml[800,26327+64]..[800,26327+68])
                                    Ppat_construct "Lazy" (typing/parmatch.ml[800,26327+64]..[800,26327+68])
                                    None
                                expression (typing/parmatch.ml[800,26327+72]..[800,26327+77])
                                  Pexp_construct "false" (typing/parmatch.ml[800,26327+72]..[800,26327+77])
                                  None
                              <case>
                                pattern (typing/parmatch.ml[801,26405+8]..[801,26405+11])
                                  Ppat_construct "Any" (typing/parmatch.ml[801,26405+8]..[801,26405+11])
                                  None
                                expression (typing/parmatch.ml[801,26405+15]..[801,26405+27])
                                  Pexp_assert
                                  expression (typing/parmatch.ml[801,26405+22]..[801,26405+27])
                                    Pexp_construct "false" (typing/parmatch.ml[801,26405+22]..[801,26405+27])
                                    None
                            ]
                    ]
              ]
    ]
  structure_item (typing/parmatch.ml[806,26501+0]..[809,26621+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[806,26501+4]..[806,26501+17])
          Ppat_var "pat_of_constr" (typing/parmatch.ml[806,26501+4]..[806,26501+17])
        expression (typing/parmatch.ml[806,26501+18]..[809,26621+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[806,26501+18]..[806,26501+24])
            Ppat_var "ex_pat" (typing/parmatch.ml[806,26501+18]..[806,26501+24])
          expression (typing/parmatch.ml[806,26501+25]..[809,26621+55]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[806,26501+25]..[806,26501+29])
              Ppat_var "cstr" (typing/parmatch.ml[806,26501+25]..[806,26501+29])
            expression (typing/parmatch.ml[807,26533+2]..[809,26621+55])
              Pexp_record
              [
                "pat_desc" (typing/parmatch.ml[807,26533+15]..[807,26533+23])
                  expression (typing/parmatch.ml[808,26559+3]..[809,26621+54])
                    Pexp_construct "Tpat_construct" (typing/parmatch.ml[808,26559+3]..[808,26559+17])
                    Some
                      expression (typing/parmatch.ml[808,26559+18]..[809,26621+54])
                        Pexp_tuple
                        [
                          expression (typing/parmatch.ml[808,26559+19]..[808,26559+60])
                            Pexp_apply
                            expression (typing/parmatch.ml[808,26559+19]..[808,26559+26])
                              Pexp_ident "mknoloc" (typing/parmatch.ml[808,26559+19]..[808,26559+26])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[808,26559+27]..[808,26559+60])
                                  Pexp_construct "Longident.Lident" (typing/parmatch.ml[808,26559+28]..[808,26559+44])
                                  Some
                                    expression (typing/parmatch.ml[808,26559+45]..[808,26559+59])
                                      Pexp_field
                                      expression (typing/parmatch.ml[808,26559+45]..[808,26559+49])
                                        Pexp_ident "cstr" (typing/parmatch.ml[808,26559+45]..[808,26559+49])
                                      "cstr_name" (typing/parmatch.ml[808,26559+50]..[808,26559+59])
                            ]
                          expression (typing/parmatch.ml[809,26621+19]..[809,26621+23])
                            Pexp_ident "cstr" (typing/parmatch.ml[809,26621+19]..[809,26621+23])
                          expression (typing/parmatch.ml[809,26621+25]..[809,26621+47])
                            Pexp_apply
                            expression (typing/parmatch.ml[809,26621+25]..[809,26621+31])
                              Pexp_ident "omegas" (typing/parmatch.ml[809,26621+25]..[809,26621+31])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[809,26621+32]..[809,26621+47])
                                  Pexp_field
                                  expression (typing/parmatch.ml[809,26621+32]..[809,26621+36])
                                    Pexp_ident "cstr" (typing/parmatch.ml[809,26621+32]..[809,26621+36])
                                  "cstr_arity" (typing/parmatch.ml[809,26621+37]..[809,26621+47])
                            ]
                          expression (typing/parmatch.ml[809,26621+49]..[809,26621+53])
                            Pexp_construct "None" (typing/parmatch.ml[809,26621+49]..[809,26621+53])
                            None
                        ]
              ]
              Some
                expression (typing/parmatch.ml[807,26533+3]..[807,26533+9])
                  Pexp_ident "ex_pat" (typing/parmatch.ml[807,26533+3]..[807,26533+9])
    ]
  structure_item (typing/parmatch.ml[811,26678+0]..[811,26678+68])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[811,26678+4]..[811,26678+9])
          Ppat_var "orify" (typing/parmatch.ml[811,26678+4]..[811,26678+9])
        expression (typing/parmatch.ml[811,26678+10]..[811,26678+68]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[811,26678+10]..[811,26678+11])
            Ppat_var "x" (typing/parmatch.ml[811,26678+10]..[811,26678+11])
          expression (typing/parmatch.ml[811,26678+12]..[811,26678+68]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[811,26678+12]..[811,26678+13])
              Ppat_var "y" (typing/parmatch.ml[811,26678+12]..[811,26678+13])
            expression (typing/parmatch.ml[811,26678+16]..[811,26678+68])
              Pexp_apply
              expression (typing/parmatch.ml[811,26678+16]..[811,26678+24])
                Pexp_ident "make_pat" (typing/parmatch.ml[811,26678+16]..[811,26678+24])
              [
                <arg>
                Nolabel
                  expression (typing/parmatch.ml[811,26678+25]..[811,26678+47])
                    Pexp_construct "Tpat_or" (typing/parmatch.ml[811,26678+26]..[811,26678+33])
                    Some
                      expression (typing/parmatch.ml[811,26678+34]..[811,26678+46])
                        Pexp_tuple
                        [
                          expression (typing/parmatch.ml[811,26678+35]..[811,26678+36])
                            Pexp_ident "x" (typing/parmatch.ml[811,26678+35]..[811,26678+36])
                          expression (typing/parmatch.ml[811,26678+38]..[811,26678+39])
                            Pexp_ident "y" (typing/parmatch.ml[811,26678+38]..[811,26678+39])
                          expression (typing/parmatch.ml[811,26678+41]..[811,26678+45])
                            Pexp_construct "None" (typing/parmatch.ml[811,26678+41]..[811,26678+45])
                            None
                        ]
                <arg>
                Nolabel
                  expression (typing/parmatch.ml[811,26678+48]..[811,26678+58])
                    Pexp_field
                    expression (typing/parmatch.ml[811,26678+48]..[811,26678+49])
                      Pexp_ident "x" (typing/parmatch.ml[811,26678+48]..[811,26678+49])
                    "pat_type" (typing/parmatch.ml[811,26678+50]..[811,26678+58])
                <arg>
                Nolabel
                  expression (typing/parmatch.ml[811,26678+59]..[811,26678+68])
                    Pexp_field
                    expression (typing/parmatch.ml[811,26678+59]..[811,26678+60])
                      Pexp_ident "x" (typing/parmatch.ml[811,26678+59]..[811,26678+60])
                    "pat_env" (typing/parmatch.ml[811,26678+61]..[811,26678+68])
              ]
    ]
  structure_item (typing/parmatch.ml[813,26748+0]..[816,26810+36])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[813,26748+8]..[813,26748+18])
          Ppat_var "orify_many" (typing/parmatch.ml[813,26748+8]..[813,26748+18])
        expression (typing/parmatch.ml[813,26748+21]..[816,26810+36])
          Pexp_function
          [
            <case>
              pattern (typing/parmatch.ml[814,26778+2]..[814,26778+4])
                Ppat_construct "[]" (typing/parmatch.ml[814,26778+2]..[814,26778+4])
                None
              expression (typing/parmatch.ml[814,26778+8]..[814,26778+20])
                Pexp_assert
                expression (typing/parmatch.ml[814,26778+15]..[814,26778+20])
                  Pexp_construct "false" (typing/parmatch.ml[814,26778+15]..[814,26778+20])
                  None
            <case>
              pattern (typing/parmatch.ml[815,26799+2]..[815,26799+5])
                Ppat_construct "::" (typing/parmatch.ml[815,26799+3]..[815,26799+5]) ghost
                Some
                  []
                  pattern (typing/parmatch.ml[815,26799+3]..[815,26799+5]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[815,26799+3]..[815,26799+4])
                        Ppat_var "x" (typing/parmatch.ml[815,26799+3]..[815,26799+4])
                      pattern (typing/parmatch.ml[815,26799+4]..[815,26799+5]) ghost
                        Ppat_construct "[]" (typing/parmatch.ml[815,26799+4]..[815,26799+5]) ghost
                        None
                    ]
              expression (typing/parmatch.ml[815,26799+9]..[815,26799+10])
                Pexp_ident "x" (typing/parmatch.ml[815,26799+9]..[815,26799+10])
            <case>
              pattern (typing/parmatch.ml[816,26810+2]..[816,26810+9])
                Ppat_construct "::" (typing/parmatch.ml[816,26810+4]..[816,26810+6])
                Some
                  []
                  pattern (typing/parmatch.ml[816,26810+2]..[816,26810+9]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[816,26810+2]..[816,26810+3])
                        Ppat_var "x" (typing/parmatch.ml[816,26810+2]..[816,26810+3])
                      pattern (typing/parmatch.ml[816,26810+7]..[816,26810+9])
                        Ppat_var "xs" (typing/parmatch.ml[816,26810+7]..[816,26810+9])
                    ]
              expression (typing/parmatch.ml[816,26810+13]..[816,26810+36])
                Pexp_apply
                expression (typing/parmatch.ml[816,26810+13]..[816,26810+18])
                  Pexp_ident "orify" (typing/parmatch.ml[816,26810+13]..[816,26810+18])
                [
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[816,26810+19]..[816,26810+20])
                      Pexp_ident "x" (typing/parmatch.ml[816,26810+19]..[816,26810+20])
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[816,26810+21]..[816,26810+36])
                      Pexp_apply
                      expression (typing/parmatch.ml[816,26810+22]..[816,26810+32])
                        Pexp_ident "orify_many" (typing/parmatch.ml[816,26810+22]..[816,26810+32])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[816,26810+33]..[816,26810+35])
                            Pexp_ident "xs" (typing/parmatch.ml[816,26810+33]..[816,26810+35])
                      ]
                ]
          ]
    ]
  structure_item (typing/parmatch.ml[819,26898+0]..[822,27026+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[819,26898+4]..[819,26898+18])
          Ppat_var "pat_of_constrs" (typing/parmatch.ml[819,26898+4]..[819,26898+18])
        expression (typing/parmatch.ml[819,26898+19]..[822,27026+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[819,26898+19]..[819,26898+25])
            Ppat_var "ex_pat" (typing/parmatch.ml[819,26898+19]..[819,26898+25])
          expression (typing/parmatch.ml[819,26898+26]..[822,27026+52]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[819,26898+26]..[819,26898+31])
              Ppat_var "cstrs" (typing/parmatch.ml[819,26898+26]..[819,26898+31])
            expression (typing/parmatch.ml[820,26932+2]..[822,27026+52])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/parmatch.ml[820,26932+6]..[820,26932+12])
                    Ppat_var "ex_pat" (typing/parmatch.ml[820,26932+6]..[820,26932+12])
                  expression (typing/parmatch.ml[820,26932+15]..[820,26932+52])
                    Pexp_apply
                    expression (typing/parmatch.ml[820,26932+15]..[820,26932+45])
                      Pexp_ident "Patterns.Head.to_omega_pattern" (typing/parmatch.ml[820,26932+15]..[820,26932+45])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[820,26932+46]..[820,26932+52])
                          Pexp_ident "ex_pat" (typing/parmatch.ml[820,26932+46]..[820,26932+52])
                    ]
              ]
              expression (typing/parmatch.ml[821,26988+2]..[822,27026+52])
                Pexp_ifthenelse
                expression (typing/parmatch.ml[821,26988+5]..[821,26988+15])
                  Pexp_apply
                  expression (typing/parmatch.ml[821,26988+11]..[821,26988+12])
                    Pexp_ident "=" (typing/parmatch.ml[821,26988+11]..[821,26988+12])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[821,26988+5]..[821,26988+10])
                        Pexp_ident "cstrs" (typing/parmatch.ml[821,26988+5]..[821,26988+10])
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[821,26988+13]..[821,26988+15])
                        Pexp_construct "[]" (typing/parmatch.ml[821,26988+13]..[821,26988+15])
                        None
                  ]
                expression (typing/parmatch.ml[821,26988+21]..[821,26988+32])
                  Pexp_apply
                  expression (typing/parmatch.ml[821,26988+21]..[821,26988+26])
                    Pexp_ident "raise" (typing/parmatch.ml[821,26988+21]..[821,26988+26])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[821,26988+27]..[821,26988+32])
                        Pexp_construct "Empty" (typing/parmatch.ml[821,26988+27]..[821,26988+32])
                        None
                  ]
                Some
                  expression (typing/parmatch.ml[822,27026+2]..[822,27026+52])
                    Pexp_apply
                    expression (typing/parmatch.ml[822,27026+2]..[822,27026+12])
                      Pexp_ident "orify_many" (typing/parmatch.ml[822,27026+2]..[822,27026+12])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[822,27026+13]..[822,27026+52])
                          Pexp_apply
                          expression (typing/parmatch.ml[822,27026+14]..[822,27026+22])
                            Pexp_ident "List.map" (typing/parmatch.ml[822,27026+14]..[822,27026+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[822,27026+23]..[822,27026+45])
                                Pexp_apply
                                expression (typing/parmatch.ml[822,27026+24]..[822,27026+37])
                                  Pexp_ident "pat_of_constr" (typing/parmatch.ml[822,27026+24]..[822,27026+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[822,27026+38]..[822,27026+44])
                                      Pexp_ident "ex_pat" (typing/parmatch.ml[822,27026+38]..[822,27026+44])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[822,27026+46]..[822,27026+51])
                                Pexp_ident "cstrs" (typing/parmatch.ml[822,27026+46]..[822,27026+51])
                          ]
                    ]
    ]
  structure_item (typing/parmatch.ml[824,27080+0]..[845,27969+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[824,27080+4]..[824,27080+16])
          Ppat_var "pats_of_type" (typing/parmatch.ml[824,27080+4]..[824,27080+16])
        expression (typing/parmatch.ml[824,27080+17]..[845,27969+16]) ghost
          Pexp_fun
          Optional "always"
          Some
            expression (typing/parmatch.ml[824,27080+26]..[824,27080+31])
              Pexp_construct "false" (typing/parmatch.ml[824,27080+26]..[824,27080+31])
              None
          pattern (typing/parmatch.ml[824,27080+19]..[824,27080+25])
            Ppat_var "always" (typing/parmatch.ml[824,27080+19]..[824,27080+25])
          expression (typing/parmatch.ml[824,27080+33]..[845,27969+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[824,27080+33]..[824,27080+36])
              Ppat_var "env" (typing/parmatch.ml[824,27080+33]..[824,27080+36])
            expression (typing/parmatch.ml[824,27080+37]..[845,27969+16]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[824,27080+37]..[824,27080+39])
                Ppat_var "ty" (typing/parmatch.ml[824,27080+37]..[824,27080+39])
              expression (typing/parmatch.ml[825,27122+2]..[845,27969+16])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/parmatch.ml[825,27122+6]..[825,27122+9])
                      Ppat_var "ty'" (typing/parmatch.ml[825,27122+6]..[825,27122+9])
                    expression (typing/parmatch.ml[825,27122+12]..[825,27122+36])
                      Pexp_apply
                      expression (typing/parmatch.ml[825,27122+12]..[825,27122+29])
                        Pexp_ident "Ctype.expand_head" (typing/parmatch.ml[825,27122+12]..[825,27122+29])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[825,27122+30]..[825,27122+33])
                            Pexp_ident "env" (typing/parmatch.ml[825,27122+30]..[825,27122+33])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[825,27122+34]..[825,27122+36])
                            Pexp_ident "ty" (typing/parmatch.ml[825,27122+34]..[825,27122+36])
                      ]
                ]
                expression (typing/parmatch.ml[826,27162+2]..[845,27969+16])
                  Pexp_match
                  expression (typing/parmatch.ml[826,27162+8]..[826,27162+20])
                    Pexp_apply
                    expression (typing/parmatch.ml[826,27162+8]..[826,27162+16])
                      Pexp_ident "get_desc" (typing/parmatch.ml[826,27162+8]..[826,27162+16])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[826,27162+17]..[826,27162+20])
                          Pexp_ident "ty'" (typing/parmatch.ml[826,27162+17]..[826,27162+20])
                    ]
                  [
                    <case>
                      pattern (typing/parmatch.ml[827,27188+4]..[827,27188+24])
                        Ppat_construct "Tconstr" (typing/parmatch.ml[827,27188+4]..[827,27188+11])
                        Some
                          []
                          pattern (typing/parmatch.ml[827,27188+12]..[827,27188+24])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[827,27188+13]..[827,27188+17])
                                Ppat_var "path" (typing/parmatch.ml[827,27188+13]..[827,27188+17])
                              pattern (typing/parmatch.ml[827,27188+19]..[827,27188+20])
                                Ppat_any
                              pattern (typing/parmatch.ml[827,27188+22]..[827,27188+23])
                                Ppat_any
                            ]
                      expression (typing/parmatch.ml[828,27216+6]..[842,27879+9])
                        Pexp_match
                        expression (typing/parmatch.ml[828,27216+18]..[828,27216+47])
                          Pexp_apply
                          expression (typing/parmatch.ml[828,27216+18]..[828,27216+38])
                            Pexp_ident "Env.find_type_descrs" (typing/parmatch.ml[828,27216+18]..[828,27216+38])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[828,27216+39]..[828,27216+43])
                                Pexp_ident "path" (typing/parmatch.ml[828,27216+39]..[828,27216+43])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[828,27216+44]..[828,27216+47])
                                Pexp_ident "env" (typing/parmatch.ml[828,27216+44]..[828,27216+47])
                          ]
                        [
                          <case>
                            pattern (typing/parmatch.ml[829,27269+8]..[829,27269+27])
                              Ppat_exception
                              pattern (typing/parmatch.ml[829,27269+18]..[829,27269+27])
                                Ppat_construct "Not_found" (typing/parmatch.ml[829,27269+18]..[829,27269+27])
                                None
                            expression (typing/parmatch.ml[829,27269+31]..[829,27269+38])
                              Pexp_construct "::" (typing/parmatch.ml[829,27269+32]..[829,27269+38]) ghost
                              Some
                                expression (typing/parmatch.ml[829,27269+32]..[829,27269+38]) ghost
                                  Pexp_tuple
                                  [
                                    expression (typing/parmatch.ml[829,27269+32]..[829,27269+37])
                                      Pexp_ident "omega" (typing/parmatch.ml[829,27269+32]..[829,27269+37])
                                    expression (typing/parmatch.ml[829,27269+37]..[829,27269+38]) ghost
                                      Pexp_construct "[]" (typing/parmatch.ml[829,27269+37]..[829,27269+38]) ghost
                                      None
                                  ]
                          <case>
                            pattern (typing/parmatch.ml[830,27308+8]..[830,27308+30])
                              Ppat_construct "Type_variant" (typing/parmatch.ml[830,27308+8]..[830,27308+20])
                              Some
                                []
                                pattern (typing/parmatch.ml[830,27308+21]..[830,27308+30])
                                  Ppat_tuple
                                  [
                                    pattern (typing/parmatch.ml[830,27308+22]..[830,27308+27])
                                      Ppat_var "cstrs" (typing/parmatch.ml[830,27308+22]..[830,27308+27])
                                    pattern (typing/parmatch.ml[830,27308+28]..[830,27308+29])
                                      Ppat_any
                                  ]
                            <when>
                              expression (typing/parmatch.ml[830,27308+36]..[832,27439+58])
                                Pexp_apply
                                expression (typing/parmatch.ml[830,27308+43]..[830,27308+45])
                                  Pexp_ident "||" (typing/parmatch.ml[830,27308+43]..[830,27308+45])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[830,27308+36]..[830,27308+42])
                                      Pexp_ident "always" (typing/parmatch.ml[830,27308+36]..[830,27308+42])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[830,27308+46]..[832,27439+58])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[830,27308+69]..[830,27308+71])
                                        Pexp_ident "||" (typing/parmatch.ml[830,27308+69]..[830,27308+71])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[830,27308+46]..[830,27308+68])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[830,27308+64]..[830,27308+66])
                                              Pexp_ident "<=" (typing/parmatch.ml[830,27308+64]..[830,27308+66])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[830,27308+46]..[830,27308+63])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[830,27308+46]..[830,27308+57])
                                                    Pexp_ident "List.length" (typing/parmatch.ml[830,27308+46]..[830,27308+57])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[830,27308+58]..[830,27308+63])
                                                        Pexp_ident "cstrs" (typing/parmatch.ml[830,27308+58]..[830,27308+63])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[830,27308+67]..[830,27308+68])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[832,27439+8]..[832,27439+58])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[832,27439+8]..[832,27439+20])
                                              Pexp_ident "List.for_all" (typing/parmatch.ml[832,27439+8]..[832,27439+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[832,27439+21]..[832,27439+52])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (typing/parmatch.ml[832,27439+26]..[832,27439+28])
                                                    Ppat_var "cd" (typing/parmatch.ml[832,27439+26]..[832,27439+28])
                                                  expression (typing/parmatch.ml[832,27439+32]..[832,27439+51])
                                                    Pexp_field
                                                    expression (typing/parmatch.ml[832,27439+32]..[832,27439+34])
                                                      Pexp_ident "cd" (typing/parmatch.ml[832,27439+32]..[832,27439+34])
                                                    "cstr_generalized" (typing/parmatch.ml[832,27439+35]..[832,27439+51])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[832,27439+53]..[832,27439+58])
                                                  Pexp_ident "cstrs" (typing/parmatch.ml[832,27439+53]..[832,27439+58])
                                            ]
                                      ]
                                ]
                            expression (typing/parmatch.ml[833,27501+10]..[833,27501+67])
                              Pexp_apply
                              expression (typing/parmatch.ml[833,27501+10]..[833,27501+18])
                                Pexp_ident "List.map" (typing/parmatch.ml[833,27501+10]..[833,27501+18])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[833,27501+19]..[833,27501+61])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[833,27501+20]..[833,27501+33])
                                      Pexp_ident "pat_of_constr" (typing/parmatch.ml[833,27501+20]..[833,27501+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[833,27501+34]..[833,27501+60])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[833,27501+35]..[833,27501+43])
                                            Pexp_ident "make_pat" (typing/parmatch.ml[833,27501+35]..[833,27501+43])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[833,27501+44]..[833,27501+52])
                                                Pexp_construct "Tpat_any" (typing/parmatch.ml[833,27501+44]..[833,27501+52])
                                                None
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[833,27501+53]..[833,27501+55])
                                                Pexp_ident "ty" (typing/parmatch.ml[833,27501+53]..[833,27501+55])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[833,27501+56]..[833,27501+59])
                                                Pexp_ident "env" (typing/parmatch.ml[833,27501+56]..[833,27501+59])
                                          ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[833,27501+62]..[833,27501+67])
                                    Pexp_ident "cstrs" (typing/parmatch.ml[833,27501+62]..[833,27501+67])
                              ]
                          <case>
                            pattern (typing/parmatch.ml[834,27569+8]..[834,27569+31])
                              Ppat_construct "Type_record" (typing/parmatch.ml[834,27569+8]..[834,27569+19])
                              Some
                                []
                                pattern (typing/parmatch.ml[834,27569+20]..[834,27569+31])
                                  Ppat_tuple
                                  [
                                    pattern (typing/parmatch.ml[834,27569+21]..[834,27569+27])
                                      Ppat_var "labels" (typing/parmatch.ml[834,27569+21]..[834,27569+27])
                                    pattern (typing/parmatch.ml[834,27569+29]..[834,27569+30])
                                      Ppat_any
                                  ]
                            expression (typing/parmatch.ml[835,27604+10]..[840,27758+58])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/parmatch.ml[835,27604+14]..[835,27604+20])
                                    Ppat_var "fields" (typing/parmatch.ml[835,27604+14]..[835,27604+20])
                                  expression (typing/parmatch.ml[836,27627+12]..[838,27724+20])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[836,27627+12]..[836,27627+20])
                                      Pexp_ident "List.map" (typing/parmatch.ml[836,27627+12]..[836,27627+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[836,27627+21]..[837,27659+64])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/parmatch.ml[836,27627+26]..[836,27627+28])
                                            Ppat_var "ld" (typing/parmatch.ml[836,27627+26]..[836,27627+28])
                                          expression (typing/parmatch.ml[837,27659+14]..[837,27659+63])
                                            Pexp_tuple
                                            [
                                              expression (typing/parmatch.ml[837,27659+14]..[837,27659+52])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[837,27659+14]..[837,27659+21])
                                                  Pexp_ident "mknoloc" (typing/parmatch.ml[837,27659+14]..[837,27659+21])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[837,27659+22]..[837,27659+52])
                                                      Pexp_construct "Longident.Lident" (typing/parmatch.ml[837,27659+23]..[837,27659+39])
                                                      Some
                                                        expression (typing/parmatch.ml[837,27659+40]..[837,27659+51])
                                                          Pexp_field
                                                          expression (typing/parmatch.ml[837,27659+40]..[837,27659+42])
                                                            Pexp_ident "ld" (typing/parmatch.ml[837,27659+40]..[837,27659+42])
                                                          "lbl_name" (typing/parmatch.ml[837,27659+43]..[837,27659+51])
                                                ]
                                              expression (typing/parmatch.ml[837,27659+54]..[837,27659+56])
                                                Pexp_ident "ld" (typing/parmatch.ml[837,27659+54]..[837,27659+56])
                                              expression (typing/parmatch.ml[837,27659+58]..[837,27659+63])
                                                Pexp_ident "omega" (typing/parmatch.ml[837,27659+58]..[837,27659+63])
                                            ]
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[838,27724+14]..[838,27724+20])
                                          Pexp_ident "labels" (typing/parmatch.ml[838,27724+14]..[838,27724+20])
                                    ]
                              ]
                              expression (typing/parmatch.ml[840,27758+10]..[840,27758+58])
                                Pexp_construct "::" (typing/parmatch.ml[840,27758+11]..[840,27758+58]) ghost
                                Some
                                  expression (typing/parmatch.ml[840,27758+11]..[840,27758+58]) ghost
                                    Pexp_tuple
                                    [
                                      expression (typing/parmatch.ml[840,27758+11]..[840,27758+57])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[840,27758+11]..[840,27758+19])
                                          Pexp_ident "make_pat" (typing/parmatch.ml[840,27758+11]..[840,27758+19])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[840,27758+20]..[840,27758+50])
                                              Pexp_construct "Tpat_record" (typing/parmatch.ml[840,27758+21]..[840,27758+32])
                                              Some
                                                expression (typing/parmatch.ml[840,27758+33]..[840,27758+49])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/parmatch.ml[840,27758+34]..[840,27758+40])
                                                      Pexp_ident "fields" (typing/parmatch.ml[840,27758+34]..[840,27758+40])
                                                    expression (typing/parmatch.ml[840,27758+42]..[840,27758+48])
                                                      Pexp_construct "Closed" (typing/parmatch.ml[840,27758+42]..[840,27758+48])
                                                      None
                                                  ]
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[840,27758+51]..[840,27758+53])
                                              Pexp_ident "ty" (typing/parmatch.ml[840,27758+51]..[840,27758+53])
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[840,27758+54]..[840,27758+57])
                                              Pexp_ident "env" (typing/parmatch.ml[840,27758+54]..[840,27758+57])
                                        ]
                                      expression (typing/parmatch.ml[840,27758+57]..[840,27758+58]) ghost
                                        Pexp_construct "[]" (typing/parmatch.ml[840,27758+57]..[840,27758+58]) ghost
                                        None
                                    ]
                          <case>
                            pattern (typing/parmatch.ml[841,27817+8]..[841,27817+50])
                              Ppat_or
                              pattern (typing/parmatch.ml[841,27817+8]..[841,27817+38])
                                Ppat_or
                                pattern (typing/parmatch.ml[841,27817+8]..[841,27817+22])
                                  Ppat_construct "Type_variant" (typing/parmatch.ml[841,27817+8]..[841,27817+20])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[841,27817+21]..[841,27817+22])
                                      Ppat_any
                                pattern (typing/parmatch.ml[841,27817+25]..[841,27817+38])
                                  Ppat_construct "Type_abstract" (typing/parmatch.ml[841,27817+25]..[841,27817+38])
                                  None
                              pattern (typing/parmatch.ml[841,27817+41]..[841,27817+50])
                                Ppat_construct "Type_open" (typing/parmatch.ml[841,27817+41]..[841,27817+50])
                                None
                            expression (typing/parmatch.ml[841,27817+54]..[841,27817+61])
                              Pexp_construct "::" (typing/parmatch.ml[841,27817+55]..[841,27817+61]) ghost
                              Some
                                expression (typing/parmatch.ml[841,27817+55]..[841,27817+61]) ghost
                                  Pexp_tuple
                                  [
                                    expression (typing/parmatch.ml[841,27817+55]..[841,27817+60])
                                      Pexp_ident "omega" (typing/parmatch.ml[841,27817+55]..[841,27817+60])
                                    expression (typing/parmatch.ml[841,27817+60]..[841,27817+61]) ghost
                                      Pexp_construct "[]" (typing/parmatch.ml[841,27817+60]..[841,27817+61]) ghost
                                      None
                                  ]
                        ]
                    <case>
                      pattern (typing/parmatch.ml[843,27889+4]..[843,27889+13])
                        Ppat_construct "Ttuple" (typing/parmatch.ml[843,27889+4]..[843,27889+10])
                        Some
                          []
                          pattern (typing/parmatch.ml[843,27889+11]..[843,27889+13])
                            Ppat_var "tl" (typing/parmatch.ml[843,27889+11]..[843,27889+13])
                      expression (typing/parmatch.ml[844,27906+6]..[844,27906+62])
                        Pexp_construct "::" (typing/parmatch.ml[844,27906+7]..[844,27906+62]) ghost
                        Some
                          expression (typing/parmatch.ml[844,27906+7]..[844,27906+62]) ghost
                            Pexp_tuple
                            [
                              expression (typing/parmatch.ml[844,27906+7]..[844,27906+61])
                                Pexp_apply
                                expression (typing/parmatch.ml[844,27906+7]..[844,27906+15])
                                  Pexp_ident "make_pat" (typing/parmatch.ml[844,27906+7]..[844,27906+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[844,27906+16]..[844,27906+54])
                                      Pexp_construct "Tpat_tuple" (typing/parmatch.ml[844,27906+17]..[844,27906+27])
                                      Some
                                        expression (typing/parmatch.ml[844,27906+28]..[844,27906+53])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[844,27906+29]..[844,27906+35])
                                            Pexp_ident "omegas" (typing/parmatch.ml[844,27906+29]..[844,27906+35])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[844,27906+36]..[844,27906+52])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[844,27906+37]..[844,27906+48])
                                                  Pexp_ident "List.length" (typing/parmatch.ml[844,27906+37]..[844,27906+48])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[844,27906+49]..[844,27906+51])
                                                      Pexp_ident "tl" (typing/parmatch.ml[844,27906+49]..[844,27906+51])
                                                ]
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[844,27906+55]..[844,27906+57])
                                      Pexp_ident "ty" (typing/parmatch.ml[844,27906+55]..[844,27906+57])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[844,27906+58]..[844,27906+61])
                                      Pexp_ident "env" (typing/parmatch.ml[844,27906+58]..[844,27906+61])
                                ]
                              expression (typing/parmatch.ml[844,27906+61]..[844,27906+62]) ghost
                                Pexp_construct "[]" (typing/parmatch.ml[844,27906+61]..[844,27906+62]) ghost
                                None
                            ]
                    <case>
                      pattern (typing/parmatch.ml[845,27969+4]..[845,27969+5])
                        Ppat_any
                      expression (typing/parmatch.ml[845,27969+9]..[845,27969+16])
                        Pexp_construct "::" (typing/parmatch.ml[845,27969+10]..[845,27969+16]) ghost
                        Some
                          expression (typing/parmatch.ml[845,27969+10]..[845,27969+16]) ghost
                            Pexp_tuple
                            [
                              expression (typing/parmatch.ml[845,27969+10]..[845,27969+15])
                                Pexp_ident "omega" (typing/parmatch.ml[845,27969+10]..[845,27969+15])
                              expression (typing/parmatch.ml[845,27969+15]..[845,27969+16]) ghost
                                Pexp_construct "[]" (typing/parmatch.ml[845,27969+15]..[845,27969+16]) ghost
                                None
                            ]
                  ]
    ]
  structure_item (typing/parmatch.ml[847,27987+0]..[859,28488+56])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[847,27987+8]..[847,27987+32])
          Ppat_var "get_variant_constructors" (typing/parmatch.ml[847,27987+8]..[847,27987+32])
        expression (typing/parmatch.ml[847,27987+33]..[859,28488+56]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[847,27987+33]..[847,27987+36])
            Ppat_var "env" (typing/parmatch.ml[847,27987+33]..[847,27987+36])
          expression (typing/parmatch.ml[847,27987+37]..[859,28488+56]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[847,27987+37]..[847,27987+39])
              Ppat_var "ty" (typing/parmatch.ml[847,27987+37]..[847,27987+39])
            expression (typing/parmatch.ml[848,28029+2]..[859,28488+56])
              Pexp_match
              expression (typing/parmatch.ml[848,28029+8]..[848,28029+19])
                Pexp_apply
                expression (typing/parmatch.ml[848,28029+8]..[848,28029+16])
                  Pexp_ident "get_desc" (typing/parmatch.ml[848,28029+8]..[848,28029+16])
                [
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[848,28029+17]..[848,28029+19])
                      Pexp_ident "ty" (typing/parmatch.ml[848,28029+17]..[848,28029+19])
                ]
              [
                <case>
                  pattern (typing/parmatch.ml[849,28054+4]..[849,28054+22])
                    Ppat_construct "Tconstr" (typing/parmatch.ml[849,28054+4]..[849,28054+11])
                    Some
                      []
                      pattern (typing/parmatch.ml[849,28054+12]..[849,28054+22])
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[849,28054+13]..[849,28054+17])
                            Ppat_var "path" (typing/parmatch.ml[849,28054+13]..[849,28054+17])
                          pattern (typing/parmatch.ml[849,28054+18]..[849,28054+19])
                            Ppat_any
                          pattern (typing/parmatch.ml[849,28054+20]..[849,28054+21])
                            Ppat_any
                        ]
                  expression (typing/parmatch.ml[849,28054+26]..[858,28480+7])
                    Pexp_try
                    expression (typing/parmatch.ml[850,28086+10]..[855,28339+60])
                      Pexp_match
                      expression (typing/parmatch.ml[850,28086+16]..[850,28086+69])
                        Pexp_tuple
                        [
                          expression (typing/parmatch.ml[850,28086+16]..[850,28086+38])
                            Pexp_apply
                            expression (typing/parmatch.ml[850,28086+16]..[850,28086+29])
                              Pexp_ident "Env.find_type" (typing/parmatch.ml[850,28086+16]..[850,28086+29])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[850,28086+30]..[850,28086+34])
                                  Pexp_ident "path" (typing/parmatch.ml[850,28086+30]..[850,28086+34])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[850,28086+35]..[850,28086+38])
                                  Pexp_ident "env" (typing/parmatch.ml[850,28086+35]..[850,28086+38])
                            ]
                          expression (typing/parmatch.ml[850,28086+40]..[850,28086+69])
                            Pexp_apply
                            expression (typing/parmatch.ml[850,28086+40]..[850,28086+60])
                              Pexp_ident "Env.find_type_descrs" (typing/parmatch.ml[850,28086+40]..[850,28086+60])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[850,28086+61]..[850,28086+65])
                                  Pexp_ident "path" (typing/parmatch.ml[850,28086+61]..[850,28086+65])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[850,28086+66]..[850,28086+69])
                                  Pexp_ident "env" (typing/parmatch.ml[850,28086+66]..[850,28086+69])
                            ]
                        ]
                      [
                        <case>
                          pattern (typing/parmatch.ml[851,28161+8]..[851,28161+33])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[851,28161+8]..[851,28161+9])
                                Ppat_any
                              pattern (typing/parmatch.ml[851,28161+11]..[851,28161+33])
                                Ppat_construct "Type_variant" (typing/parmatch.ml[851,28161+11]..[851,28161+23])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[851,28161+24]..[851,28161+33])
                                    Ppat_tuple
                                    [
                                      pattern (typing/parmatch.ml[851,28161+25]..[851,28161+30])
                                        Ppat_var "cstrs" (typing/parmatch.ml[851,28161+25]..[851,28161+30])
                                      pattern (typing/parmatch.ml[851,28161+31]..[851,28161+32])
                                        Ppat_any
                                    ]
                            ]
                          expression (typing/parmatch.ml[851,28161+37]..[851,28161+42])
                            Pexp_ident "cstrs" (typing/parmatch.ml[851,28161+37]..[851,28161+42])
                        <case>
                          pattern (typing/parmatch.ml[852,28204+8]..[852,28204+35])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[852,28204+8]..[852,28204+32])
                                Ppat_record Closed
                                [
                                  "type_manifest" (typing/parmatch.ml[852,28204+9]..[852,28204+22])
                                    pattern (typing/parmatch.ml[852,28204+25]..[852,28204+31])
                                      Ppat_construct "Some" (typing/parmatch.ml[852,28204+25]..[852,28204+29])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[852,28204+30]..[852,28204+31])
                                          Ppat_any
                                ]
                              pattern (typing/parmatch.ml[852,28204+34]..[852,28204+35])
                                Ppat_any
                            ]
                          expression (typing/parmatch.ml[853,28243+10]..[854,28282+56])
                            Pexp_apply
                            expression (typing/parmatch.ml[853,28243+10]..[853,28243+34])
                              Pexp_ident "get_variant_constructors" (typing/parmatch.ml[853,28243+10]..[853,28243+34])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[853,28243+35]..[853,28243+38])
                                  Pexp_ident "env" (typing/parmatch.ml[853,28243+35]..[853,28243+38])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[854,28282+12]..[854,28282+56])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[854,28282+13]..[854,28282+35])
                                    Pexp_ident "Ctype.expand_head_once" (typing/parmatch.ml[854,28282+13]..[854,28282+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[854,28282+36]..[854,28282+39])
                                        Pexp_ident "env" (typing/parmatch.ml[854,28282+36]..[854,28282+39])
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[854,28282+40]..[854,28282+55])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[854,28282+41]..[854,28282+51])
                                          Pexp_ident "clean_copy" (typing/parmatch.ml[854,28282+41]..[854,28282+51])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[854,28282+52]..[854,28282+54])
                                              Pexp_ident "ty" (typing/parmatch.ml[854,28282+52]..[854,28282+54])
                                        ]
                                  ]
                            ]
                        <case>
                          pattern (typing/parmatch.ml[855,28339+8]..[855,28339+9])
                            Ppat_any
                          expression (typing/parmatch.ml[855,28339+13]..[855,28339+60])
                            Pexp_apply
                            expression (typing/parmatch.ml[855,28339+13]..[855,28339+24])
                              Pexp_ident "fatal_error" (typing/parmatch.ml[855,28339+13]..[855,28339+24])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[855,28339+25]..[855,28339+60])
                                  Pexp_constant PConst_string("Parmatch.get_variant_constructors",(typing/parmatch.ml[855,28339+26]..[855,28339+59]),None)
                            ]
                      ]
                    [
                      <case>
                        pattern (typing/parmatch.ml[856,28400+11]..[856,28400+20])
                          Ppat_construct "Not_found" (typing/parmatch.ml[856,28400+11]..[856,28400+20])
                          None
                        expression (typing/parmatch.ml[857,28424+8]..[857,28424+55])
                          Pexp_apply
                          expression (typing/parmatch.ml[857,28424+8]..[857,28424+19])
                            Pexp_ident "fatal_error" (typing/parmatch.ml[857,28424+8]..[857,28424+19])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[857,28424+20]..[857,28424+55])
                                Pexp_constant PConst_string("Parmatch.get_variant_constructors",(typing/parmatch.ml[857,28424+21]..[857,28424+54]),None)
                          ]
                    ]
                <case>
                  pattern (typing/parmatch.ml[859,28488+4]..[859,28488+5])
                    Ppat_any
                  expression (typing/parmatch.ml[859,28488+9]..[859,28488+56])
                    Pexp_apply
                    expression (typing/parmatch.ml[859,28488+9]..[859,28488+20])
                      Pexp_ident "fatal_error" (typing/parmatch.ml[859,28488+9]..[859,28488+20])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[859,28488+21]..[859,28488+56])
                          Pexp_constant PConst_string("Parmatch.get_variant_constructors",(typing/parmatch.ml[859,28488+22]..[859,28488+55]),None)
                    ]
              ]
    ]
  structure_item (typing/parmatch.ml[861,28546+0]..[864,28684+4])
    Pstr_module
    "ConstructorSet" (typing/parmatch.ml[861,28546+7]..[861,28546+21])
      module_expr (typing/parmatch.ml[861,28546+24]..[864,28684+4])
        Pmod_apply
        module_expr (typing/parmatch.ml[861,28546+24]..[861,28546+32])
          Pmod_ident "Set.Make" (typing/parmatch.ml[861,28546+24]..[861,28546+32])
        module_expr (typing/parmatch.ml[861,28546+33]..[864,28684+3])
          Pmod_structure
          [
            structure_item (typing/parmatch.ml[862,28586+2]..[862,28586+34])
              Pstr_type Rec
              [
                type_declaration "t" (typing/parmatch.ml[862,28586+7]..[862,28586+8]) (typing/parmatch.ml[862,28586+2]..[862,28586+34])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (typing/parmatch.ml[862,28586+11]..[862,28586+34])
                        Ptyp_constr "constructor_description" (typing/parmatch.ml[862,28586+11]..[862,28586+34])
                        []
              ]
            structure_item (typing/parmatch.ml[863,28621+2]..[863,28621+62])
              Pstr_value Nonrec
              [
                <def>
                  pattern (typing/parmatch.ml[863,28621+6]..[863,28621+13])
                    Ppat_var "compare" (typing/parmatch.ml[863,28621+6]..[863,28621+13])
                  expression (typing/parmatch.ml[863,28621+14]..[863,28621+62]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/parmatch.ml[863,28621+14]..[863,28621+16])
                      Ppat_var "c1" (typing/parmatch.ml[863,28621+14]..[863,28621+16])
                    expression (typing/parmatch.ml[863,28621+17]..[863,28621+62]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/parmatch.ml[863,28621+17]..[863,28621+19])
                        Ppat_var "c2" (typing/parmatch.ml[863,28621+17]..[863,28621+19])
                      expression (typing/parmatch.ml[863,28621+22]..[863,28621+62])
                        Pexp_apply
                        expression (typing/parmatch.ml[863,28621+22]..[863,28621+36])
                          Pexp_ident "String.compare" (typing/parmatch.ml[863,28621+22]..[863,28621+36])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[863,28621+37]..[863,28621+49])
                              Pexp_field
                              expression (typing/parmatch.ml[863,28621+37]..[863,28621+39])
                                Pexp_ident "c1" (typing/parmatch.ml[863,28621+37]..[863,28621+39])
                              "cstr_name" (typing/parmatch.ml[863,28621+40]..[863,28621+49])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[863,28621+50]..[863,28621+62])
                              Pexp_field
                              expression (typing/parmatch.ml[863,28621+50]..[863,28621+52])
                                Pexp_ident "c2" (typing/parmatch.ml[863,28621+50]..[863,28621+52])
                              "cstr_name" (typing/parmatch.ml[863,28621+53]..[863,28621+62])
                        ]
              ]
          ]
  structure_item (typing/parmatch.ml[867,28770+0]..[878,29228+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[867,28770+4]..[867,28770+20])
          Ppat_var "complete_constrs" (typing/parmatch.ml[867,28770+4]..[867,28770+20])
        expression (typing/parmatch.ml[867,28770+21]..[878,29228+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[867,28770+21]..[867,28770+27])
            Ppat_var "constr" (typing/parmatch.ml[867,28770+21]..[867,28770+27])
          expression (typing/parmatch.ml[867,28770+28]..[878,29228+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[867,28770+28]..[867,28770+40])
              Ppat_var "used_constrs" (typing/parmatch.ml[867,28770+28]..[867,28770+40])
            expression (typing/parmatch.ml[868,28813+2]..[878,29228+18])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/parmatch.ml[868,28813+6]..[868,28813+7])
                    Ppat_var "c" (typing/parmatch.ml[868,28813+6]..[868,28813+7])
                  expression (typing/parmatch.ml[868,28813+10]..[868,28813+25])
                    Pexp_field
                    expression (typing/parmatch.ml[868,28813+10]..[868,28813+16])
                      Pexp_ident "constr" (typing/parmatch.ml[868,28813+10]..[868,28813+16])
                    "pat_desc" (typing/parmatch.ml[868,28813+17]..[868,28813+25])
              ]
              expression (typing/parmatch.ml[869,28842+2]..[878,29228+18])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/parmatch.ml[869,28842+6]..[869,28842+13])
                      Ppat_var "constrs" (typing/parmatch.ml[869,28842+6]..[869,28842+13])
                    expression (typing/parmatch.ml[869,28842+16]..[869,28842+66])
                      Pexp_apply
                      expression (typing/parmatch.ml[869,28842+16]..[869,28842+40])
                        Pexp_ident "get_variant_constructors" (typing/parmatch.ml[869,28842+16]..[869,28842+40])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[869,28842+41]..[869,28842+55])
                            Pexp_field
                            expression (typing/parmatch.ml[869,28842+41]..[869,28842+47])
                              Pexp_ident "constr" (typing/parmatch.ml[869,28842+41]..[869,28842+47])
                            "pat_env" (typing/parmatch.ml[869,28842+48]..[869,28842+55])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[869,28842+56]..[869,28842+66])
                            Pexp_field
                            expression (typing/parmatch.ml[869,28842+56]..[869,28842+57])
                              Pexp_ident "c" (typing/parmatch.ml[869,28842+56]..[869,28842+57])
                            "cstr_res" (typing/parmatch.ml[869,28842+58]..[869,28842+66])
                      ]
                ]
                expression (typing/parmatch.ml[870,28912+2]..[878,29228+18])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/parmatch.ml[870,28912+6]..[870,28912+18])
                        Ppat_var "used_constrs" (typing/parmatch.ml[870,28912+6]..[870,28912+18])
                      expression (typing/parmatch.ml[870,28912+21]..[870,28912+56])
                        Pexp_apply
                        expression (typing/parmatch.ml[870,28912+21]..[870,28912+43])
                          Pexp_ident "ConstructorSet.of_list" (typing/parmatch.ml[870,28912+21]..[870,28912+43])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[870,28912+44]..[870,28912+56])
                              Pexp_ident "used_constrs" (typing/parmatch.ml[870,28912+44]..[870,28912+56])
                        ]
                  ]
                  expression (typing/parmatch.ml[871,28972+2]..[878,29228+18])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[871,28972+6]..[871,28972+12])
                          Ppat_var "others" (typing/parmatch.ml[871,28972+6]..[871,28972+12])
                        expression (typing/parmatch.ml[872,28987+4]..[874,29068+13])
                          Pexp_apply
                          expression (typing/parmatch.ml[872,28987+4]..[872,28987+15])
                            Pexp_ident "List.filter" (typing/parmatch.ml[872,28987+4]..[872,28987+15])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[873,29003+6]..[873,29003+64])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/parmatch.ml[873,29003+11]..[873,29003+16])
                                  Ppat_var "cnstr" (typing/parmatch.ml[873,29003+11]..[873,29003+16])
                                expression (typing/parmatch.ml[873,29003+20]..[873,29003+63])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[873,29003+20]..[873,29003+23])
                                    Pexp_ident "not" (typing/parmatch.ml[873,29003+20]..[873,29003+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[873,29003+24]..[873,29003+63])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[873,29003+25]..[873,29003+43])
                                          Pexp_ident "ConstructorSet.mem" (typing/parmatch.ml[873,29003+25]..[873,29003+43])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[873,29003+44]..[873,29003+49])
                                              Pexp_ident "cnstr" (typing/parmatch.ml[873,29003+44]..[873,29003+49])
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[873,29003+50]..[873,29003+62])
                                              Pexp_ident "used_constrs" (typing/parmatch.ml[873,29003+50]..[873,29003+62])
                                        ]
                                  ]
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[874,29068+6]..[874,29068+13])
                                Pexp_ident "constrs" (typing/parmatch.ml[874,29068+6]..[874,29068+13])
                          ]
                    ]
                    expression (typing/parmatch.ml[876,29139+2]..[878,29228+18])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/parmatch.ml[876,29139+6]..[876,29139+21])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[876,29139+6]..[876,29139+11])
                                Ppat_var "const" (typing/parmatch.ml[876,29139+6]..[876,29139+11])
                              pattern (typing/parmatch.ml[876,29139+13]..[876,29139+21])
                                Ppat_var "nonconst" (typing/parmatch.ml[876,29139+13]..[876,29139+21])
                            ]
                          expression (typing/parmatch.ml[877,29163+4]..[877,29163+61])
                            Pexp_apply
                            expression (typing/parmatch.ml[877,29163+4]..[877,29163+18])
                              Pexp_ident "List.partition" (typing/parmatch.ml[877,29163+4]..[877,29163+18])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[877,29163+19]..[877,29163+54])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/parmatch.ml[877,29163+24]..[877,29163+29])
                                    Ppat_var "cnstr" (typing/parmatch.ml[877,29163+24]..[877,29163+29])
                                  expression (typing/parmatch.ml[877,29163+33]..[877,29163+53])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[877,29163+50]..[877,29163+51])
                                      Pexp_ident "=" (typing/parmatch.ml[877,29163+50]..[877,29163+51])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[877,29163+33]..[877,29163+49])
                                          Pexp_field
                                          expression (typing/parmatch.ml[877,29163+33]..[877,29163+38])
                                            Pexp_ident "cnstr" (typing/parmatch.ml[877,29163+33]..[877,29163+38])
                                          "cstr_arity" (typing/parmatch.ml[877,29163+39]..[877,29163+49])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[877,29163+52]..[877,29163+53])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[877,29163+55]..[877,29163+61])
                                  Pexp_ident "others" (typing/parmatch.ml[877,29163+55]..[877,29163+61])
                            ]
                      ]
                      expression (typing/parmatch.ml[878,29228+2]..[878,29228+18])
                        Pexp_apply
                        expression (typing/parmatch.ml[878,29228+8]..[878,29228+9])
                          Pexp_ident "@" (typing/parmatch.ml[878,29228+8]..[878,29228+9])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[878,29228+2]..[878,29228+7])
                              Pexp_ident "const" (typing/parmatch.ml[878,29228+2]..[878,29228+7])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[878,29228+10]..[878,29228+18])
                              Pexp_ident "nonconst" (typing/parmatch.ml[878,29228+10]..[878,29228+18])
                        ]
    ]
  structure_item (typing/parmatch.ml[880,29248+0]..[893,29810+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[880,29248+4]..[880,29248+23])
          Ppat_var "build_other_constrs" (typing/parmatch.ml[880,29248+4]..[880,29248+23])
        expression (typing/parmatch.ml[880,29248+24]..[893,29810+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[880,29248+24]..[880,29248+27])
            Ppat_var "env" (typing/parmatch.ml[880,29248+24]..[880,29248+27])
          expression (typing/parmatch.ml[880,29248+28]..[893,29810+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[880,29248+28]..[880,29248+29])
              Ppat_var "p" (typing/parmatch.ml[880,29248+28]..[880,29248+29])
            expression (typing/parmatch.ml[881,29280+2]..[893,29810+18])
              Pexp_open Fresh
              module_expr (typing/parmatch.ml[881,29280+11]..[881,29280+24])
                Pmod_ident "Patterns.Head" (typing/parmatch.ml[881,29280+11]..[881,29280+24])
              expression (typing/parmatch.ml[882,29308+2]..[893,29810+18])
                Pexp_match
                expression (typing/parmatch.ml[882,29308+8]..[882,29308+18])
                  Pexp_field
                  expression (typing/parmatch.ml[882,29308+8]..[882,29308+9])
                    Pexp_ident "p" (typing/parmatch.ml[882,29308+8]..[882,29308+9])
                  "pat_desc" (typing/parmatch.ml[882,29308+10]..[882,29308+18])
                [
                  <case>
                    pattern (typing/parmatch.ml[883,29332+4]..[883,29332+47])
                      Ppat_construct "Construct" (typing/parmatch.ml[883,29332+4]..[883,29332+13])
                      Some
                        []
                        pattern (typing/parmatch.ml[883,29332+14]..[883,29332+47])
                          Ppat_record Closed
                          [
                            "cstr_tag" (typing/parmatch.ml[883,29332+17]..[883,29332+25])
                              pattern (typing/parmatch.ml[883,29332+28]..[883,29332+44])
                                Ppat_construct "Cstr_extension" (typing/parmatch.ml[883,29332+28]..[883,29332+42])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[883,29332+43]..[883,29332+44])
                                    Ppat_any
                          ]
                    expression (typing/parmatch.ml[883,29332+51]..[883,29332+60])
                      Pexp_ident "extra_pat" (typing/parmatch.ml[883,29332+51]..[883,29332+60])
                  <case>
                    pattern (typing/parmatch.ml[884,29393+4]..[885,29407+73])
                      Ppat_construct "Construct" (typing/parmatch.ml[884,29393+4]..[884,29393+13])
                      Some
                        []
                        pattern (typing/parmatch.ml[885,29407+6]..[885,29407+73])
                          Ppat_alias "c" (typing/parmatch.ml[885,29407+71]..[885,29407+72])
                          pattern (typing/parmatch.ml[885,29407+7]..[885,29407+67])
                            Ppat_record Closed
                            [
                              "cstr_tag" (typing/parmatch.ml[885,29407+9]..[885,29407+17])
                                pattern (typing/parmatch.ml[885,29407+20]..[885,29407+65])
                                  Ppat_or
                                  pattern (typing/parmatch.ml[885,29407+20]..[885,29407+50])
                                    Ppat_or
                                    pattern (typing/parmatch.ml[885,29407+20]..[885,29407+35])
                                      Ppat_construct "Cstr_constant" (typing/parmatch.ml[885,29407+20]..[885,29407+33])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[885,29407+34]..[885,29407+35])
                                          Ppat_any
                                    pattern (typing/parmatch.ml[885,29407+38]..[885,29407+50])
                                      Ppat_construct "Cstr_block" (typing/parmatch.ml[885,29407+38]..[885,29407+48])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[885,29407+49]..[885,29407+50])
                                          Ppat_any
                                  pattern (typing/parmatch.ml[885,29407+53]..[885,29407+65])
                                    Ppat_construct "Cstr_unboxed" (typing/parmatch.ml[885,29407+53]..[885,29407+65])
                                    None
                            ]
                    expression (typing/parmatch.ml[886,29484+8]..[892,29746+63])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/parmatch.ml[886,29484+12]..[886,29484+18])
                            Ppat_var "constr" (typing/parmatch.ml[886,29484+12]..[886,29484+18])
                          expression (typing/parmatch.ml[886,29484+21]..[886,29484+44])
                            Pexp_record
                            [
                              "pat_desc" (typing/parmatch.ml[886,29484+30]..[886,29484+38])
                                expression (typing/parmatch.ml[886,29484+41]..[886,29484+42])
                                  Pexp_ident "c" (typing/parmatch.ml[886,29484+41]..[886,29484+42])
                            ]
                            Some
                              expression (typing/parmatch.ml[886,29484+23]..[886,29484+24])
                                Pexp_ident "p" (typing/parmatch.ml[886,29484+23]..[886,29484+24])
                      ]
                      expression (typing/parmatch.ml[887,29532+8]..[892,29746+63])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/parmatch.ml[887,29532+12]..[887,29532+22])
                              Ppat_var "get_constr" (typing/parmatch.ml[887,29532+12]..[887,29532+22])
                            expression (typing/parmatch.ml[887,29532+23]..[890,29620+50]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/parmatch.ml[887,29532+23]..[887,29532+24])
                                Ppat_var "q" (typing/parmatch.ml[887,29532+23]..[887,29532+24])
                              expression (typing/parmatch.ml[888,29559+10]..[890,29620+50])
                                Pexp_match
                                expression (typing/parmatch.ml[888,29559+16]..[888,29559+26])
                                  Pexp_field
                                  expression (typing/parmatch.ml[888,29559+16]..[888,29559+17])
                                    Pexp_ident "q" (typing/parmatch.ml[888,29559+16]..[888,29559+17])
                                  "pat_desc" (typing/parmatch.ml[888,29559+18]..[888,29559+26])
                                [
                                  <case>
                                    pattern (typing/parmatch.ml[889,29591+12]..[889,29591+23])
                                      Ppat_construct "Construct" (typing/parmatch.ml[889,29591+12]..[889,29591+21])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[889,29591+22]..[889,29591+23])
                                          Ppat_var "c" (typing/parmatch.ml[889,29591+22]..[889,29591+23])
                                    expression (typing/parmatch.ml[889,29591+27]..[889,29591+28])
                                      Pexp_ident "c" (typing/parmatch.ml[889,29591+27]..[889,29591+28])
                                  <case>
                                    pattern (typing/parmatch.ml[890,29620+12]..[890,29620+13])
                                      Ppat_any
                                    expression (typing/parmatch.ml[890,29620+17]..[890,29620+50])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[890,29620+17]..[890,29620+28])
                                        Pexp_ident "fatal_error" (typing/parmatch.ml[890,29620+17]..[890,29620+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[890,29620+29]..[890,29620+50])
                                            Pexp_constant PConst_string("Parmatch.get_constr",(typing/parmatch.ml[890,29620+30]..[890,29620+49]),None)
                                      ]
                                ]
                        ]
                        expression (typing/parmatch.ml[891,29674+8]..[892,29746+63])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/parmatch.ml[891,29674+12]..[891,29674+24])
                                Ppat_var "used_constrs" (typing/parmatch.ml[891,29674+12]..[891,29674+24])
                              expression (typing/parmatch.ml[891,29674+28]..[891,29674+68])
                                Pexp_apply
                                expression (typing/parmatch.ml[891,29674+28]..[891,29674+36])
                                  Pexp_ident "List.map" (typing/parmatch.ml[891,29674+28]..[891,29674+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[891,29674+37]..[891,29674+64])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/parmatch.ml[891,29674+42]..[891,29674+47])
                                        Ppat_tuple
                                        [
                                          pattern (typing/parmatch.ml[891,29674+43]..[891,29674+44])
                                            Ppat_var "p" (typing/parmatch.ml[891,29674+43]..[891,29674+44])
                                          pattern (typing/parmatch.ml[891,29674+45]..[891,29674+46])
                                            Ppat_any
                                        ]
                                      expression (typing/parmatch.ml[891,29674+51]..[891,29674+63])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[891,29674+51]..[891,29674+61])
                                          Pexp_ident "get_constr" (typing/parmatch.ml[891,29674+51]..[891,29674+61])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[891,29674+62]..[891,29674+63])
                                              Pexp_ident "p" (typing/parmatch.ml[891,29674+62]..[891,29674+63])
                                        ]
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[891,29674+65]..[891,29674+68])
                                      Pexp_ident "env" (typing/parmatch.ml[891,29674+65]..[891,29674+68])
                                ]
                          ]
                          expression (typing/parmatch.ml[892,29746+8]..[892,29746+63])
                            Pexp_apply
                            expression (typing/parmatch.ml[892,29746+8]..[892,29746+22])
                              Pexp_ident "pat_of_constrs" (typing/parmatch.ml[892,29746+8]..[892,29746+22])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[892,29746+23]..[892,29746+24])
                                  Pexp_ident "p" (typing/parmatch.ml[892,29746+23]..[892,29746+24])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[892,29746+25]..[892,29746+63])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[892,29746+26]..[892,29746+42])
                                    Pexp_ident "complete_constrs" (typing/parmatch.ml[892,29746+26]..[892,29746+42])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[892,29746+43]..[892,29746+49])
                                        Pexp_ident "constr" (typing/parmatch.ml[892,29746+43]..[892,29746+49])
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[892,29746+50]..[892,29746+62])
                                        Pexp_ident "used_constrs" (typing/parmatch.ml[892,29746+50]..[892,29746+62])
                                  ]
                            ]
                  <case>
                    pattern (typing/parmatch.ml[893,29810+4]..[893,29810+5])
                      Ppat_any
                    expression (typing/parmatch.ml[893,29810+9]..[893,29810+18])
                      Pexp_ident "extra_pat" (typing/parmatch.ml[893,29810+9]..[893,29810+18])
                ]
    ]
  structure_item (typing/parmatch.ml[897,29863+0]..[903,30099+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[897,29863+4]..[897,29863+24])
          Ppat_var "build_other_constant" (typing/parmatch.ml[897,29863+4]..[897,29863+24])
        expression (typing/parmatch.ml[897,29863+25]..[903,30099+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[897,29863+25]..[897,29863+29])
            Ppat_var "proj" (typing/parmatch.ml[897,29863+25]..[897,29863+29])
          expression (typing/parmatch.ml[897,29863+30]..[903,30099+20]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[897,29863+30]..[897,29863+34])
              Ppat_var "make" (typing/parmatch.ml[897,29863+30]..[897,29863+34])
            expression (typing/parmatch.ml[897,29863+35]..[903,30099+20]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[897,29863+35]..[897,29863+40])
                Ppat_var "first" (typing/parmatch.ml[897,29863+35]..[897,29863+40])
              expression (typing/parmatch.ml[897,29863+41]..[903,30099+20]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/parmatch.ml[897,29863+41]..[897,29863+45])
                  Ppat_var "next" (typing/parmatch.ml[897,29863+41]..[897,29863+45])
                expression (typing/parmatch.ml[897,29863+46]..[903,30099+20]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/parmatch.ml[897,29863+46]..[897,29863+47])
                    Ppat_var "p" (typing/parmatch.ml[897,29863+46]..[897,29863+47])
                  expression (typing/parmatch.ml[897,29863+48]..[903,30099+20]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/parmatch.ml[897,29863+48]..[897,29863+51])
                      Ppat_var "env" (typing/parmatch.ml[897,29863+48]..[897,29863+51])
                    expression (typing/parmatch.ml[898,29917+2]..[903,30099+20])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/parmatch.ml[898,29917+6]..[898,29917+9])
                            Ppat_var "all" (typing/parmatch.ml[898,29917+6]..[898,29917+9])
                          expression (typing/parmatch.ml[898,29917+12]..[898,29917+56])
                            Pexp_apply
                            expression (typing/parmatch.ml[898,29917+12]..[898,29917+20])
                              Pexp_ident "List.map" (typing/parmatch.ml[898,29917+12]..[898,29917+20])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[898,29917+21]..[898,29917+52])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/parmatch.ml[898,29917+26]..[898,29917+32])
                                    Ppat_tuple
                                    [
                                      pattern (typing/parmatch.ml[898,29917+27]..[898,29917+28])
                                        Ppat_var "p" (typing/parmatch.ml[898,29917+27]..[898,29917+28])
                                      pattern (typing/parmatch.ml[898,29917+30]..[898,29917+31])
                                        Ppat_any
                                    ]
                                  expression (typing/parmatch.ml[898,29917+36]..[898,29917+51])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[898,29917+36]..[898,29917+40])
                                      Pexp_ident "proj" (typing/parmatch.ml[898,29917+36]..[898,29917+40])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[898,29917+41]..[898,29917+51])
                                          Pexp_field
                                          expression (typing/parmatch.ml[898,29917+41]..[898,29917+42])
                                            Pexp_ident "p" (typing/parmatch.ml[898,29917+41]..[898,29917+42])
                                          "pat_desc" (typing/parmatch.ml[898,29917+43]..[898,29917+51])
                                    ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[898,29917+53]..[898,29917+56])
                                  Pexp_ident "env" (typing/parmatch.ml[898,29917+53]..[898,29917+56])
                            ]
                      ]
                      expression (typing/parmatch.ml[899,29977+2]..[903,30099+20])
                        Pexp_let Rec
                        [
                          <def>
                            pattern (typing/parmatch.ml[899,29977+10]..[899,29977+19])
                              Ppat_var "try_const" (typing/parmatch.ml[899,29977+10]..[899,29977+19])
                            expression (typing/parmatch.ml[899,29977+20]..[902,30051+47]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/parmatch.ml[899,29977+20]..[899,29977+21])
                                Ppat_var "i" (typing/parmatch.ml[899,29977+20]..[899,29977+21])
                              expression (typing/parmatch.ml[900,30001+4]..[902,30051+47])
                                Pexp_ifthenelse
                                expression (typing/parmatch.ml[900,30001+7]..[900,30001+21])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[900,30001+7]..[900,30001+15])
                                    Pexp_ident "List.mem" (typing/parmatch.ml[900,30001+7]..[900,30001+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[900,30001+16]..[900,30001+17])
                                        Pexp_ident "i" (typing/parmatch.ml[900,30001+16]..[900,30001+17])
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[900,30001+18]..[900,30001+21])
                                        Pexp_ident "all" (typing/parmatch.ml[900,30001+18]..[900,30001+21])
                                  ]
                                expression (typing/parmatch.ml[901,30023+9]..[901,30023+27])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[901,30023+9]..[901,30023+18])
                                    Pexp_ident "try_const" (typing/parmatch.ml[901,30023+9]..[901,30023+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[901,30023+19]..[901,30023+27])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[901,30023+20]..[901,30023+24])
                                          Pexp_ident "next" (typing/parmatch.ml[901,30023+20]..[901,30023+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[901,30023+25]..[901,30023+26])
                                              Pexp_ident "i" (typing/parmatch.ml[901,30023+25]..[901,30023+26])
                                        ]
                                  ]
                                Some
                                  expression (typing/parmatch.ml[902,30051+9]..[902,30051+47])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[902,30051+9]..[902,30051+17])
                                      Pexp_ident "make_pat" (typing/parmatch.ml[902,30051+9]..[902,30051+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[902,30051+18]..[902,30051+26])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[902,30051+19]..[902,30051+23])
                                            Pexp_ident "make" (typing/parmatch.ml[902,30051+19]..[902,30051+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[902,30051+24]..[902,30051+25])
                                                Pexp_ident "i" (typing/parmatch.ml[902,30051+24]..[902,30051+25])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[902,30051+27]..[902,30051+37])
                                          Pexp_field
                                          expression (typing/parmatch.ml[902,30051+27]..[902,30051+28])
                                            Pexp_ident "p" (typing/parmatch.ml[902,30051+27]..[902,30051+28])
                                          "pat_type" (typing/parmatch.ml[902,30051+29]..[902,30051+37])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[902,30051+38]..[902,30051+47])
                                          Pexp_field
                                          expression (typing/parmatch.ml[902,30051+38]..[902,30051+39])
                                            Pexp_ident "p" (typing/parmatch.ml[902,30051+38]..[902,30051+39])
                                          "pat_env" (typing/parmatch.ml[902,30051+40]..[902,30051+47])
                                    ]
                        ]
                        expression (typing/parmatch.ml[903,30099+5]..[903,30099+20])
                          Pexp_apply
                          expression (typing/parmatch.ml[903,30099+5]..[903,30099+14])
                            Pexp_ident "try_const" (typing/parmatch.ml[903,30099+5]..[903,30099+14])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[903,30099+15]..[903,30099+20])
                                Pexp_ident "first" (typing/parmatch.ml[903,30099+15]..[903,30099+20])
                          ]
    ]
  structure_item (typing/parmatch.ml[910,30215+0]..[910,30215+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[910,30215+4]..[910,30215+20])
          Ppat_var "some_private_tag" (typing/parmatch.ml[910,30215+4]..[910,30215+20])
        expression (typing/parmatch.ml[910,30215+23]..[910,30215+43])
          Pexp_constant PConst_string("<some private tag>",(typing/parmatch.ml[910,30215+24]..[910,30215+42]),None)
    ]
  structure_item (typing/parmatch.ml[912,30260+0]..[1047,35505+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[912,30260+4]..[912,30260+15])
          Ppat_var "build_other" (typing/parmatch.ml[912,30260+4]..[912,30260+15])
        expression (typing/parmatch.ml[912,30260+16]..[1047,35505+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[912,30260+16]..[912,30260+19])
            Ppat_var "ext" (typing/parmatch.ml[912,30260+16]..[912,30260+19])
          expression (typing/parmatch.ml[912,30260+20]..[1047,35505+27]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[912,30260+20]..[912,30260+23])
              Ppat_var "env" (typing/parmatch.ml[912,30260+20]..[912,30260+23])
            expression (typing/parmatch.ml[913,30286+2]..[1047,35505+27])
              Pexp_match
              expression (typing/parmatch.ml[913,30286+8]..[913,30286+11])
                Pexp_ident "env" (typing/parmatch.ml[913,30286+8]..[913,30286+11])
              [
                <case>
                  pattern (typing/parmatch.ml[914,30303+4]..[914,30303+6])
                    Ppat_construct "[]" (typing/parmatch.ml[914,30303+4]..[914,30303+6])
                    None
                  expression (typing/parmatch.ml[914,30303+10]..[914,30303+15])
                    Pexp_ident "omega" (typing/parmatch.ml[914,30303+10]..[914,30303+15])
                <case>
                  pattern (typing/parmatch.ml[915,30319+4]..[915,30319+15])
                    Ppat_construct "::" (typing/parmatch.ml[915,30319+11]..[915,30319+13])
                    Some
                      []
                      pattern (typing/parmatch.ml[915,30319+4]..[915,30319+15]) ghost
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[915,30319+4]..[915,30319+10])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[915,30319+5]..[915,30319+6])
                                Ppat_var "d" (typing/parmatch.ml[915,30319+5]..[915,30319+6])
                              pattern (typing/parmatch.ml[915,30319+8]..[915,30319+9])
                                Ppat_any
                            ]
                          pattern (typing/parmatch.ml[915,30319+14]..[915,30319+15])
                            Ppat_any
                        ]
                  expression (typing/parmatch.ml[916,30338+6]..[1047,35505+27])
                    Pexp_open Fresh
                    module_expr (typing/parmatch.ml[916,30338+15]..[916,30338+28])
                      Pmod_ident "Patterns.Head" (typing/parmatch.ml[916,30338+15]..[916,30338+28])
                    expression (typing/parmatch.ml[917,30370+6]..[1047,35505+27])
                      Pexp_match
                      expression (typing/parmatch.ml[917,30370+12]..[917,30370+22])
                        Pexp_field
                        expression (typing/parmatch.ml[917,30370+12]..[917,30370+13])
                          Pexp_ident "d" (typing/parmatch.ml[917,30370+12]..[917,30370+13])
                        "pat_desc" (typing/parmatch.ml[917,30370+14]..[917,30370+22])
                      [
                        <case>
                          pattern (typing/parmatch.ml[918,30398+8]..[918,30398+49])
                            Ppat_construct "Construct" (typing/parmatch.ml[918,30398+8]..[918,30398+17])
                            Some
                              []
                              pattern (typing/parmatch.ml[918,30398+18]..[918,30398+49])
                                Ppat_record Closed
                                [
                                  "cstr_tag" (typing/parmatch.ml[918,30398+20]..[918,30398+28])
                                    pattern (typing/parmatch.ml[918,30398+31]..[918,30398+47])
                                      Ppat_construct "Cstr_extension" (typing/parmatch.ml[918,30398+31]..[918,30398+45])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[918,30398+46]..[918,30398+47])
                                          Ppat_any
                                ]
                          expression (typing/parmatch.ml[920,30527+10]..[923,30665+32])
                            Pexp_apply
                            expression (typing/parmatch.ml[920,30527+10]..[920,30527+18])
                              Pexp_ident "make_pat" (typing/parmatch.ml[920,30527+10]..[920,30527+18])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[921,30546+12]..[922,30603+61])
                                  Pexp_construct "Tpat_var" (typing/parmatch.ml[921,30546+13]..[921,30546+21])
                                  Some
                                    expression (typing/parmatch.ml[921,30546+22]..[922,30603+60])
                                      Pexp_tuple
                                      [
                                        expression (typing/parmatch.ml[921,30546+23]..[921,30546+55])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[921,30546+23]..[921,30546+41])
                                            Pexp_ident "Ident.create_local" (typing/parmatch.ml[921,30546+23]..[921,30546+41])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[921,30546+42]..[921,30546+55])
                                                Pexp_constant PConst_string("*extension*",(typing/parmatch.ml[921,30546+43]..[921,30546+54]),None)
                                          ]
                                        expression (typing/parmatch.ml[922,30603+23]..[922,30603+59])
                                          Pexp_record
                                          [
                                            "txt" (typing/parmatch.ml[922,30603+24]..[922,30603+27])
                                              expression (typing/parmatch.ml[922,30603+28]..[922,30603+41])
                                                Pexp_constant PConst_string("*extension*",(typing/parmatch.ml[922,30603+29]..[922,30603+40]),None)
                                            "loc" (typing/parmatch.ml[922,30603+43]..[922,30603+46])
                                              expression (typing/parmatch.ml[922,30603+49]..[922,30603+58])
                                                Pexp_field
                                                expression (typing/parmatch.ml[922,30603+49]..[922,30603+50])
                                                  Pexp_ident "d" (typing/parmatch.ml[922,30603+49]..[922,30603+50])
                                                "pat_loc" (typing/parmatch.ml[922,30603+51]..[922,30603+58])
                                          ]
                                          None
                                      ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[923,30665+12]..[923,30665+22])
                                  Pexp_ident "Ctype.none" (typing/parmatch.ml[923,30665+12]..[923,30665+22])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[923,30665+23]..[923,30665+32])
                                  Pexp_ident "Env.empty" (typing/parmatch.ml[923,30665+23]..[923,30665+32])
                            ]
                        <case>
                          pattern (typing/parmatch.ml[924,30698+8]..[924,30698+19])
                            Ppat_construct "Construct" (typing/parmatch.ml[924,30698+8]..[924,30698+17])
                            Some
                              []
                              pattern (typing/parmatch.ml[924,30698+18]..[924,30698+19])
                                Ppat_any
                          expression (typing/parmatch.ml[925,30721+10]..[934,31019+13])
                            Pexp_match
                            expression (typing/parmatch.ml[925,30721+22]..[925,30721+25])
                              Pexp_ident "ext" (typing/parmatch.ml[925,30721+22]..[925,30721+25])
                            [
                              <case>
                                pattern (typing/parmatch.ml[926,30752+12]..[926,30752+20])
                                  Ppat_construct "Some" (typing/parmatch.ml[926,30752+12]..[926,30752+16])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[926,30752+17]..[926,30752+20])
                                      Ppat_var "ext" (typing/parmatch.ml[926,30752+17]..[926,30752+20])
                                expression (typing/parmatch.ml[927,30776+14]..[931,30920+41])
                                  Pexp_ifthenelse
                                  expression (typing/parmatch.ml[927,30776+17]..[927,30776+79])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[927,30776+17]..[927,30776+26])
                                      Pexp_ident "Path.same" (typing/parmatch.ml[927,30776+17]..[927,30776+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[927,30776+27]..[927,30776+30])
                                          Pexp_ident "ext" (typing/parmatch.ml[927,30776+27]..[927,30776+30])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[927,30776+31]..[927,30776+79])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[927,30776+32]..[927,30776+57])
                                            Pexp_ident "get_constructor_type_path" (typing/parmatch.ml[927,30776+32]..[927,30776+57])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[927,30776+58]..[927,30776+68])
                                                Pexp_field
                                                expression (typing/parmatch.ml[927,30776+58]..[927,30776+59])
                                                  Pexp_ident "d" (typing/parmatch.ml[927,30776+58]..[927,30776+59])
                                                "pat_type" (typing/parmatch.ml[927,30776+60]..[927,30776+68])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[927,30776+69]..[927,30776+78])
                                                Pexp_field
                                                expression (typing/parmatch.ml[927,30776+69]..[927,30776+70])
                                                  Pexp_ident "d" (typing/parmatch.ml[927,30776+69]..[927,30776+70])
                                                "pat_env" (typing/parmatch.ml[927,30776+71]..[927,30776+78])
                                          ]
                                    ]
                                  expression (typing/parmatch.ml[929,30875+16]..[929,30875+25])
                                    Pexp_ident "extra_pat" (typing/parmatch.ml[929,30875+16]..[929,30875+25])
                                  Some
                                    expression (typing/parmatch.ml[931,30920+16]..[931,30920+41])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[931,30920+16]..[931,30920+35])
                                        Pexp_ident "build_other_constrs" (typing/parmatch.ml[931,30920+16]..[931,30920+35])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[931,30920+36]..[931,30920+39])
                                            Pexp_ident "env" (typing/parmatch.ml[931,30920+36]..[931,30920+39])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[931,30920+40]..[931,30920+41])
                                            Pexp_ident "d" (typing/parmatch.ml[931,30920+40]..[931,30920+41])
                                      ]
                              <case>
                                pattern (typing/parmatch.ml[932,30962+12]..[932,30962+13])
                                  Ppat_any
                                expression (typing/parmatch.ml[933,30979+14]..[933,30979+39])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[933,30979+14]..[933,30979+33])
                                    Pexp_ident "build_other_constrs" (typing/parmatch.ml[933,30979+14]..[933,30979+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[933,30979+34]..[933,30979+37])
                                        Pexp_ident "env" (typing/parmatch.ml[933,30979+34]..[933,30979+37])
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[933,30979+38]..[933,30979+39])
                                        Pexp_ident "d" (typing/parmatch.ml[933,30979+38]..[933,30979+39])
                                  ]
                            ]
                        <case>
                          pattern (typing/parmatch.ml[935,31033+8]..[935,31033+38])
                            Ppat_construct "Variant" (typing/parmatch.ml[935,31033+8]..[935,31033+15])
                            Some
                              []
                              pattern (typing/parmatch.ml[935,31033+16]..[935,31033+38])
                                Ppat_record Closed
                                [
                                  "cstr_row" (typing/parmatch.ml[935,31033+18]..[935,31033+26]) ghost
                                    pattern (typing/parmatch.ml[935,31033+18]..[935,31033+26])
                                      Ppat_var "cstr_row" (typing/parmatch.ml[935,31033+18]..[935,31033+26])
                                  "type_row" (typing/parmatch.ml[935,31033+28]..[935,31033+36]) ghost
                                    pattern (typing/parmatch.ml[935,31033+28]..[935,31033+36])
                                      Ppat_var "type_row" (typing/parmatch.ml[935,31033+28]..[935,31033+36])
                                ]
                          expression (typing/parmatch.ml[936,31075+10]..[972,32593+15])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/parmatch.ml[936,31075+14]..[936,31075+18])
                                  Ppat_var "tags" (typing/parmatch.ml[936,31075+14]..[936,31075+18])
                                expression (typing/parmatch.ml[937,31096+12]..[942,31262+17])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[937,31096+12]..[937,31096+20])
                                    Pexp_ident "List.map" (typing/parmatch.ml[937,31096+12]..[937,31096+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[938,31117+14]..[941,31225+36])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/parmatch.ml[938,31117+19]..[938,31117+25])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[938,31117+20]..[938,31117+21])
                                              Ppat_var "d" (typing/parmatch.ml[938,31117+20]..[938,31117+21])
                                            pattern (typing/parmatch.ml[938,31117+23]..[938,31117+24])
                                              Ppat_any
                                          ]
                                        expression (typing/parmatch.ml[939,31146+16]..[941,31225+35])
                                          Pexp_match
                                          expression (typing/parmatch.ml[939,31146+22]..[939,31146+32])
                                            Pexp_field
                                            expression (typing/parmatch.ml[939,31146+22]..[939,31146+23])
                                              Pexp_ident "d" (typing/parmatch.ml[939,31146+22]..[939,31146+23])
                                            "pat_desc" (typing/parmatch.ml[939,31146+24]..[939,31146+32])
                                          [
                                            <case>
                                              pattern (typing/parmatch.ml[940,31184+18]..[940,31184+33])
                                                Ppat_construct "Variant" (typing/parmatch.ml[940,31184+18]..[940,31184+25])
                                                Some
                                                  []
                                                  pattern (typing/parmatch.ml[940,31184+26]..[940,31184+33])
                                                    Ppat_record Closed
                                                    [
                                                      "tag" (typing/parmatch.ml[940,31184+28]..[940,31184+31]) ghost
                                                        pattern (typing/parmatch.ml[940,31184+28]..[940,31184+31])
                                                          Ppat_var "tag" (typing/parmatch.ml[940,31184+28]..[940,31184+31])
                                                    ]
                                              expression (typing/parmatch.ml[940,31184+37]..[940,31184+40])
                                                Pexp_ident "tag" (typing/parmatch.ml[940,31184+37]..[940,31184+40])
                                            <case>
                                              pattern (typing/parmatch.ml[941,31225+18]..[941,31225+19])
                                                Ppat_any
                                              expression (typing/parmatch.ml[941,31225+23]..[941,31225+35])
                                                Pexp_assert
                                                expression (typing/parmatch.ml[941,31225+30]..[941,31225+35])
                                                  Pexp_construct "false" (typing/parmatch.ml[941,31225+30]..[941,31225+35])
                                                  None
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[942,31262+14]..[942,31262+17])
                                        Pexp_ident "env" (typing/parmatch.ml[942,31262+14]..[942,31262+17])
                                  ]
                            ]
                            expression (typing/parmatch.ml[944,31295+12]..[972,32593+15])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/parmatch.ml[944,31295+16]..[944,31295+30])
                                    Ppat_var "make_other_pat" (typing/parmatch.ml[944,31295+16]..[944,31295+30])
                                  expression (typing/parmatch.ml[944,31295+31]..[946,31409+78]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/parmatch.ml[944,31295+31]..[944,31295+34])
                                      Ppat_var "tag" (typing/parmatch.ml[944,31295+31]..[944,31295+34])
                                    expression (typing/parmatch.ml[944,31295+35]..[946,31409+78]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/parmatch.ml[944,31295+35]..[944,31295+40])
                                        Ppat_var "const" (typing/parmatch.ml[944,31295+35]..[944,31295+40])
                                      expression (typing/parmatch.ml[945,31338+14]..[946,31409+78])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/parmatch.ml[945,31338+18]..[945,31338+21])
                                              Ppat_var "arg" (typing/parmatch.ml[945,31338+18]..[945,31338+21])
                                            expression (typing/parmatch.ml[945,31338+24]..[945,31338+67])
                                              Pexp_ifthenelse
                                              expression (typing/parmatch.ml[945,31338+27]..[945,31338+32])
                                                Pexp_ident "const" (typing/parmatch.ml[945,31338+27]..[945,31338+32])
                                              expression (typing/parmatch.ml[945,31338+38]..[945,31338+42])
                                                Pexp_construct "None" (typing/parmatch.ml[945,31338+38]..[945,31338+42])
                                                None
                                              Some
                                                expression (typing/parmatch.ml[945,31338+48]..[945,31338+67])
                                                  Pexp_construct "Some" (typing/parmatch.ml[945,31338+48]..[945,31338+52])
                                                  Some
                                                    expression (typing/parmatch.ml[945,31338+53]..[945,31338+67])
                                                      Pexp_ident "Patterns.omega" (typing/parmatch.ml[945,31338+53]..[945,31338+67])
                                        ]
                                        expression (typing/parmatch.ml[946,31409+14]..[946,31409+78])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[946,31409+14]..[946,31409+22])
                                            Pexp_ident "make_pat" (typing/parmatch.ml[946,31409+14]..[946,31409+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[946,31409+23]..[946,31409+57])
                                                Pexp_construct "Tpat_variant" (typing/parmatch.ml[946,31409+24]..[946,31409+36])
                                                Some
                                                  expression (typing/parmatch.ml[946,31409+36]..[946,31409+56])
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/parmatch.ml[946,31409+37]..[946,31409+40])
                                                        Pexp_ident "tag" (typing/parmatch.ml[946,31409+37]..[946,31409+40])
                                                      expression (typing/parmatch.ml[946,31409+42]..[946,31409+45])
                                                        Pexp_ident "arg" (typing/parmatch.ml[946,31409+42]..[946,31409+45])
                                                      expression (typing/parmatch.ml[946,31409+47]..[946,31409+55])
                                                        Pexp_ident "cstr_row" (typing/parmatch.ml[946,31409+47]..[946,31409+55])
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[946,31409+58]..[946,31409+68])
                                                Pexp_field
                                                expression (typing/parmatch.ml[946,31409+58]..[946,31409+59])
                                                  Pexp_ident "d" (typing/parmatch.ml[946,31409+58]..[946,31409+59])
                                                "pat_type" (typing/parmatch.ml[946,31409+60]..[946,31409+68])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[946,31409+69]..[946,31409+78])
                                                Pexp_field
                                                expression (typing/parmatch.ml[946,31409+69]..[946,31409+70])
                                                  Pexp_ident "d" (typing/parmatch.ml[946,31409+69]..[946,31409+70])
                                                "pat_env" (typing/parmatch.ml[946,31409+71]..[946,31409+78])
                                          ]
                              ]
                              expression (typing/parmatch.ml[948,31503+12]..[972,32593+15])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/parmatch.ml[948,31503+16]..[948,31503+19])
                                      Ppat_var "row" (typing/parmatch.ml[948,31503+16]..[948,31503+19])
                                    expression (typing/parmatch.ml[948,31503+22]..[948,31503+33])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[948,31503+22]..[948,31503+30])
                                        Pexp_ident "type_row" (typing/parmatch.ml[948,31503+22]..[948,31503+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[948,31503+31]..[948,31503+33])
                                            Pexp_construct "()" (typing/parmatch.ml[948,31503+31]..[948,31503+33])
                                            None
                                      ]
                                ]
                                expression (typing/parmatch.ml[949,31540+12]..[972,32593+15])
                                  Pexp_match
                                  expression (typing/parmatch.ml[950,31564+14]..[958,32020+33])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[950,31564+14]..[950,31564+28])
                                      Pexp_ident "List.fold_left" (typing/parmatch.ml[950,31564+14]..[950,31564+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[951,31593+16]..[957,31941+78])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/parmatch.ml[951,31593+21]..[951,31593+27])
                                            Ppat_var "others" (typing/parmatch.ml[951,31593+21]..[951,31593+27])
                                          expression (typing/parmatch.ml[951,31593+28]..[957,31941+77]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/parmatch.ml[951,31593+28]..[951,31593+35])
                                              Ppat_tuple
                                              [
                                                pattern (typing/parmatch.ml[951,31593+29]..[951,31593+32])
                                                  Ppat_var "tag" (typing/parmatch.ml[951,31593+29]..[951,31593+32])
                                                pattern (typing/parmatch.ml[951,31593+33]..[951,31593+34])
                                                  Ppat_var "f" (typing/parmatch.ml[951,31593+33]..[951,31593+34])
                                              ]
                                            expression (typing/parmatch.ml[952,31632+18]..[957,31941+77])
                                              Pexp_ifthenelse
                                              expression (typing/parmatch.ml[952,31632+21]..[952,31632+38])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[952,31632+21]..[952,31632+29])
                                                  Pexp_ident "List.mem" (typing/parmatch.ml[952,31632+21]..[952,31632+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[952,31632+30]..[952,31632+33])
                                                      Pexp_ident "tag" (typing/parmatch.ml[952,31632+30]..[952,31632+33])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[952,31632+34]..[952,31632+38])
                                                      Pexp_ident "tags" (typing/parmatch.ml[952,31632+34]..[952,31632+38])
                                                ]
                                              expression (typing/parmatch.ml[952,31632+44]..[952,31632+50])
                                                Pexp_ident "others" (typing/parmatch.ml[952,31632+44]..[952,31632+50])
                                              Some
                                                expression (typing/parmatch.ml[953,31688+18]..[957,31941+77])
                                                  Pexp_match
                                                  expression (typing/parmatch.ml[953,31688+24]..[953,31688+46])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[953,31688+24]..[953,31688+44])
                                                      Pexp_ident "Btype.row_field_repr" (typing/parmatch.ml[953,31688+24]..[953,31688+44])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[953,31688+45]..[953,31688+46])
                                                          Pexp_ident "f" (typing/parmatch.ml[953,31688+45]..[953,31688+46])
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (typing/parmatch.ml[954,31740+20]..[954,31740+27])
                                                        Ppat_construct "Rabsent" (typing/parmatch.ml[954,31740+20]..[954,31740+27])
                                                        None
                                                      expression (typing/parmatch.ml[954,31740+49]..[954,31740+55])
                                                        Pexp_ident "others" (typing/parmatch.ml[954,31740+49]..[954,31740+55])
                                                    <case>
                                                      pattern (typing/parmatch.ml[956,31866+20]..[956,31866+40])
                                                        Ppat_construct "Reither" (typing/parmatch.ml[956,31866+20]..[956,31866+27])
                                                        Some
                                                          []
                                                          pattern (typing/parmatch.ml[956,31866+28]..[956,31866+40])
                                                            Ppat_tuple
                                                            [
                                                              pattern (typing/parmatch.ml[956,31866+29]..[956,31866+30])
                                                                Ppat_var "c" (typing/parmatch.ml[956,31866+29]..[956,31866+30])
                                                              pattern (typing/parmatch.ml[956,31866+32]..[956,31866+33])
                                                                Ppat_any
                                                              pattern (typing/parmatch.ml[956,31866+35]..[956,31866+36])
                                                                Ppat_any
                                                              pattern (typing/parmatch.ml[956,31866+38]..[956,31866+39])
                                                                Ppat_any
                                                            ]
                                                      expression (typing/parmatch.ml[956,31866+44]..[956,31866+74])
                                                        Pexp_construct "::" (typing/parmatch.ml[956,31866+65]..[956,31866+67])
                                                        Some
                                                          expression (typing/parmatch.ml[956,31866+44]..[956,31866+74]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/parmatch.ml[956,31866+44]..[956,31866+64])
                                                                Pexp_apply
                                                                expression (typing/parmatch.ml[956,31866+44]..[956,31866+58])
                                                                  Pexp_ident "make_other_pat" (typing/parmatch.ml[956,31866+44]..[956,31866+58])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/parmatch.ml[956,31866+59]..[956,31866+62])
                                                                      Pexp_ident "tag" (typing/parmatch.ml[956,31866+59]..[956,31866+62])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/parmatch.ml[956,31866+63]..[956,31866+64])
                                                                      Pexp_ident "c" (typing/parmatch.ml[956,31866+63]..[956,31866+64])
                                                                ]
                                                              expression (typing/parmatch.ml[956,31866+68]..[956,31866+74])
                                                                Pexp_ident "others" (typing/parmatch.ml[956,31866+68]..[956,31866+74])
                                                            ]
                                                    <case>
                                                      pattern (typing/parmatch.ml[957,31941+20]..[957,31941+32])
                                                        Ppat_construct "Rpresent" (typing/parmatch.ml[957,31941+20]..[957,31941+28])
                                                        Some
                                                          []
                                                          pattern (typing/parmatch.ml[957,31941+29]..[957,31941+32])
                                                            Ppat_var "arg" (typing/parmatch.ml[957,31941+29]..[957,31941+32])
                                                      expression (typing/parmatch.ml[957,31941+36]..[957,31941+77])
                                                        Pexp_construct "::" (typing/parmatch.ml[957,31941+68]..[957,31941+70])
                                                        Some
                                                          expression (typing/parmatch.ml[957,31941+36]..[957,31941+77]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/parmatch.ml[957,31941+36]..[957,31941+67])
                                                                Pexp_apply
                                                                expression (typing/parmatch.ml[957,31941+36]..[957,31941+50])
                                                                  Pexp_ident "make_other_pat" (typing/parmatch.ml[957,31941+36]..[957,31941+50])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/parmatch.ml[957,31941+51]..[957,31941+54])
                                                                      Pexp_ident "tag" (typing/parmatch.ml[957,31941+51]..[957,31941+54])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/parmatch.ml[957,31941+55]..[957,31941+67])
                                                                      Pexp_apply
                                                                      expression (typing/parmatch.ml[957,31941+60]..[957,31941+61])
Pexp_ident "=" (typing/parmatch.ml[957,31941+60]..[957,31941+61])
                                                                      [
<arg>
Nolabel
  expression (typing/parmatch.ml[957,31941+56]..[957,31941+59])
    Pexp_ident "arg" (typing/parmatch.ml[957,31941+56]..[957,31941+59])
<arg>
Nolabel
  expression (typing/parmatch.ml[957,31941+62]..[957,31941+66])
    Pexp_construct "None" (typing/parmatch.ml[957,31941+62]..[957,31941+66])
    None
                                                                      ]
                                                                ]
                                                              expression (typing/parmatch.ml[957,31941+71]..[957,31941+77])
                                                                Pexp_ident "others" (typing/parmatch.ml[957,31941+71]..[957,31941+77])
                                                            ]
                                                  ]
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[958,32020+16]..[958,32020+18])
                                          Pexp_construct "[]" (typing/parmatch.ml[958,32020+16]..[958,32020+18])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[958,32020+19]..[958,32020+33])
                                          Pexp_field
                                          expression (typing/parmatch.ml[958,32020+19]..[958,32020+22])
                                            Pexp_ident "row" (typing/parmatch.ml[958,32020+19]..[958,32020+22])
                                          "row_fields" (typing/parmatch.ml[958,32020+23]..[958,32020+33])
                                    ]
                                  [
                                    <case>
                                      pattern (typing/parmatch.ml[960,32071+14]..[960,32071+16])
                                        Ppat_construct "[]" (typing/parmatch.ml[960,32071+14]..[960,32071+16])
                                        None
                                      expression (typing/parmatch.ml[961,32091+16]..[966,32337+42])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/parmatch.ml[961,32091+20]..[961,32091+23])
                                              Ppat_var "tag" (typing/parmatch.ml[961,32091+20]..[961,32091+23])
                                            expression (typing/parmatch.ml[962,32117+18]..[965,32299+37])
                                              Pexp_ifthenelse
                                              expression (typing/parmatch.ml[962,32117+21]..[962,32117+40])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[962,32117+21]..[962,32117+36])
                                                  Pexp_ident "Btype.row_fixed" (typing/parmatch.ml[962,32117+21]..[962,32117+36])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[962,32117+37]..[962,32117+40])
                                                      Pexp_ident "row" (typing/parmatch.ml[962,32117+37]..[962,32117+40])
                                                ]
                                              expression (typing/parmatch.ml[962,32117+46]..[962,32117+62])
                                                Pexp_ident "some_private_tag" (typing/parmatch.ml[962,32117+46]..[962,32117+62])
                                              Some
                                                expression (typing/parmatch.ml[963,32185+18]..[965,32299+37])
                                                  Pexp_let Rec
                                                  [
                                                    <def>
                                                      pattern (typing/parmatch.ml[963,32185+26]..[963,32185+31])
                                                        Ppat_var "mktag" (typing/parmatch.ml[963,32185+26]..[963,32185+31])
                                                      expression (typing/parmatch.ml[963,32185+32]..[964,32223+72]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (typing/parmatch.ml[963,32185+32]..[963,32185+35])
                                                          Ppat_var "tag" (typing/parmatch.ml[963,32185+32]..[963,32185+35])
                                                        expression (typing/parmatch.ml[964,32223+20]..[964,32223+72])
                                                          Pexp_ifthenelse
                                                          expression (typing/parmatch.ml[964,32223+23]..[964,32223+40])
                                                            Pexp_apply
                                                            expression (typing/parmatch.ml[964,32223+23]..[964,32223+31])
                                                              Pexp_ident "List.mem" (typing/parmatch.ml[964,32223+23]..[964,32223+31])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[964,32223+32]..[964,32223+35])
                                                                  Pexp_ident "tag" (typing/parmatch.ml[964,32223+32]..[964,32223+35])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[964,32223+36]..[964,32223+40])
                                                                  Pexp_ident "tags" (typing/parmatch.ml[964,32223+36]..[964,32223+40])
                                                            ]
                                                          expression (typing/parmatch.ml[964,32223+46]..[964,32223+63])
                                                            Pexp_apply
                                                            expression (typing/parmatch.ml[964,32223+46]..[964,32223+51])
                                                              Pexp_ident "mktag" (typing/parmatch.ml[964,32223+46]..[964,32223+51])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[964,32223+52]..[964,32223+63])
                                                                  Pexp_apply
                                                                  expression (typing/parmatch.ml[964,32223+57]..[964,32223+58])
                                                                    Pexp_ident "^" (typing/parmatch.ml[964,32223+57]..[964,32223+58])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/parmatch.ml[964,32223+53]..[964,32223+56])
Pexp_ident "tag" (typing/parmatch.ml[964,32223+53]..[964,32223+56])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/parmatch.ml[964,32223+59]..[964,32223+62])
Pexp_constant PConst_string("'",(typing/parmatch.ml[964,32223+60]..[964,32223+61]),None)
                                                                  ]
                                                            ]
                                                          Some
                                                            expression (typing/parmatch.ml[964,32223+69]..[964,32223+72])
                                                              Pexp_ident "tag" (typing/parmatch.ml[964,32223+69]..[964,32223+72])
                                                  ]
                                                  expression (typing/parmatch.ml[965,32299+18]..[965,32299+37])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[965,32299+18]..[965,32299+23])
                                                      Pexp_ident "mktag" (typing/parmatch.ml[965,32299+18]..[965,32299+23])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[965,32299+24]..[965,32299+37])
                                                          Pexp_constant PConst_string("AnyOtherTag",(typing/parmatch.ml[965,32299+25]..[965,32299+36]),None)
                                                    ]
                                        ]
                                        expression (typing/parmatch.ml[966,32337+19]..[966,32337+42])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[966,32337+19]..[966,32337+33])
                                            Pexp_ident "make_other_pat" (typing/parmatch.ml[966,32337+19]..[966,32337+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[966,32337+34]..[966,32337+37])
                                                Pexp_ident "tag" (typing/parmatch.ml[966,32337+34]..[966,32337+37])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[966,32337+38]..[966,32337+42])
                                                Pexp_construct "true" (typing/parmatch.ml[966,32337+38]..[966,32337+42])
                                                None
                                          ]
                                    <case>
                                      pattern (typing/parmatch.ml[967,32380+14]..[967,32380+29])
                                        Ppat_construct "::" (typing/parmatch.ml[967,32380+17]..[967,32380+19])
                                        Some
                                          []
                                          pattern (typing/parmatch.ml[967,32380+14]..[967,32380+29]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (typing/parmatch.ml[967,32380+14]..[967,32380+17])
                                                Ppat_var "pat" (typing/parmatch.ml[967,32380+14]..[967,32380+17])
                                              pattern (typing/parmatch.ml[967,32380+19]..[967,32380+29])
                                                Ppat_var "other_pats" (typing/parmatch.ml[967,32380+19]..[967,32380+29])
                                            ]
                                      expression (typing/parmatch.ml[968,32413+16]..[971,32560+32])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[968,32413+16]..[968,32413+30])
                                          Pexp_ident "List.fold_left" (typing/parmatch.ml[968,32413+16]..[968,32413+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[969,32444+18]..[970,32480+79])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (typing/parmatch.ml[969,32444+23]..[969,32444+28])
                                                Ppat_var "p_res" (typing/parmatch.ml[969,32444+23]..[969,32444+28])
                                              expression (typing/parmatch.ml[969,32444+29]..[970,32480+78]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (typing/parmatch.ml[969,32444+29]..[969,32444+32])
                                                  Ppat_var "pat" (typing/parmatch.ml[969,32444+29]..[969,32444+32])
                                                expression (typing/parmatch.ml[970,32480+20]..[970,32480+78])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[970,32480+20]..[970,32480+28])
                                                    Pexp_ident "make_pat" (typing/parmatch.ml[970,32480+20]..[970,32480+28])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[970,32480+29]..[970,32480+57])
                                                        Pexp_construct "Tpat_or" (typing/parmatch.ml[970,32480+30]..[970,32480+37])
                                                        Some
                                                          expression (typing/parmatch.ml[970,32480+38]..[970,32480+56])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/parmatch.ml[970,32480+39]..[970,32480+42])
                                                                Pexp_ident "pat" (typing/parmatch.ml[970,32480+39]..[970,32480+42])
                                                              expression (typing/parmatch.ml[970,32480+44]..[970,32480+49])
                                                                Pexp_ident "p_res" (typing/parmatch.ml[970,32480+44]..[970,32480+49])
                                                              expression (typing/parmatch.ml[970,32480+51]..[970,32480+55])
                                                                Pexp_construct "None" (typing/parmatch.ml[970,32480+51]..[970,32480+55])
                                                                None
                                                            ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[970,32480+58]..[970,32480+68])
                                                        Pexp_field
                                                        expression (typing/parmatch.ml[970,32480+58]..[970,32480+59])
                                                          Pexp_ident "d" (typing/parmatch.ml[970,32480+58]..[970,32480+59])
                                                        "pat_type" (typing/parmatch.ml[970,32480+60]..[970,32480+68])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[970,32480+69]..[970,32480+78])
                                                        Pexp_field
                                                        expression (typing/parmatch.ml[970,32480+69]..[970,32480+70])
                                                          Pexp_ident "d" (typing/parmatch.ml[970,32480+69]..[970,32480+70])
                                                        "pat_env" (typing/parmatch.ml[970,32480+71]..[970,32480+78])
                                                  ]
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[971,32560+18]..[971,32560+21])
                                              Pexp_ident "pat" (typing/parmatch.ml[971,32560+18]..[971,32560+21])
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[971,32560+22]..[971,32560+32])
                                              Pexp_ident "other_pats" (typing/parmatch.ml[971,32560+22]..[971,32560+32])
                                        ]
                                  ]
                        <case>
                          pattern (typing/parmatch.ml[973,32609+8]..[973,32609+29])
                            Ppat_construct "Constant" (typing/parmatch.ml[973,32609+8]..[973,32609+16])
                            Some
                              []
                              pattern (typing/parmatch.ml[973,32609+17]..[973,32609+29])
                                Ppat_construct "Const_char" (typing/parmatch.ml[973,32609+17]..[973,32609+27])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[973,32609+28]..[973,32609+29])
                                    Ppat_any
                          expression (typing/parmatch.ml[974,32642+10]..[1000,33512+51])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/parmatch.ml[974,32642+14]..[974,32642+23])
                                  Ppat_var "all_chars" (typing/parmatch.ml[974,32642+14]..[974,32642+23])
                                expression (typing/parmatch.ml[975,32668+12]..[979,32819+17])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[975,32668+12]..[975,32668+20])
                                    Pexp_ident "List.map" (typing/parmatch.ml[975,32668+12]..[975,32668+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[976,32689+14]..[978,32784+34])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/parmatch.ml[976,32689+19]..[976,32689+24])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[976,32689+20]..[976,32689+21])
                                              Ppat_var "p" (typing/parmatch.ml[976,32689+20]..[976,32689+21])
                                            pattern (typing/parmatch.ml[976,32689+22]..[976,32689+23])
                                              Ppat_any
                                          ]
                                        expression (typing/parmatch.ml[976,32689+28]..[978,32784+33])
                                          Pexp_match
                                          expression (typing/parmatch.ml[976,32689+34]..[976,32689+44])
                                            Pexp_field
                                            expression (typing/parmatch.ml[976,32689+34]..[976,32689+35])
                                              Pexp_ident "p" (typing/parmatch.ml[976,32689+34]..[976,32689+35])
                                            "pat_desc" (typing/parmatch.ml[976,32689+36]..[976,32689+44])
                                          [
                                            <case>
                                              pattern (typing/parmatch.ml[977,32739+16]..[977,32739+39])
                                                Ppat_construct "Constant" (typing/parmatch.ml[977,32739+16]..[977,32739+24])
                                                Some
                                                  []
                                                  pattern (typing/parmatch.ml[977,32739+25]..[977,32739+39])
                                                    Ppat_construct "Const_char" (typing/parmatch.ml[977,32739+26]..[977,32739+36])
                                                    Some
                                                      []
                                                      pattern (typing/parmatch.ml[977,32739+37]..[977,32739+38])
                                                        Ppat_var "c" (typing/parmatch.ml[977,32739+37]..[977,32739+38])
                                              expression (typing/parmatch.ml[977,32739+43]..[977,32739+44])
                                                Pexp_ident "c" (typing/parmatch.ml[977,32739+43]..[977,32739+44])
                                            <case>
                                              pattern (typing/parmatch.ml[978,32784+16]..[978,32784+17])
                                                Ppat_any
                                              expression (typing/parmatch.ml[978,32784+21]..[978,32784+33])
                                                Pexp_assert
                                                expression (typing/parmatch.ml[978,32784+28]..[978,32784+33])
                                                  Pexp_construct "false" (typing/parmatch.ml[978,32784+28]..[978,32784+33])
                                                  None
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[979,32819+14]..[979,32819+17])
                                        Pexp_ident "env" (typing/parmatch.ml[979,32819+14]..[979,32819+17])
                                  ]
                            ]
                            expression (typing/parmatch.ml[981,32850+10]..[1000,33512+51])
                              Pexp_let Rec
                              [
                                <def>
                                  pattern (typing/parmatch.ml[981,32850+18]..[981,32850+28])
                                    Ppat_var "find_other" (typing/parmatch.ml[981,32850+18]..[981,32850+28])
                                  expression (typing/parmatch.ml[981,32850+29]..[988,33088+77]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/parmatch.ml[981,32850+29]..[981,32850+30])
                                      Ppat_var "i" (typing/parmatch.ml[981,32850+29]..[981,32850+30])
                                    expression (typing/parmatch.ml[981,32850+31]..[988,33088+77]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/parmatch.ml[981,32850+31]..[981,32850+35])
                                        Ppat_var "imax" (typing/parmatch.ml[981,32850+31]..[981,32850+35])
                                      expression (typing/parmatch.ml[982,32888+12]..[988,33088+77])
                                        Pexp_ifthenelse
                                        expression (typing/parmatch.ml[982,32888+15]..[982,32888+23])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[982,32888+17]..[982,32888+18])
                                            Pexp_ident ">" (typing/parmatch.ml[982,32888+17]..[982,32888+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[982,32888+15]..[982,32888+16])
                                                Pexp_ident "i" (typing/parmatch.ml[982,32888+15]..[982,32888+16])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[982,32888+19]..[982,32888+23])
                                                Pexp_ident "imax" (typing/parmatch.ml[982,32888+19]..[982,32888+23])
                                          ]
                                        expression (typing/parmatch.ml[982,32888+29]..[982,32888+44])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[982,32888+29]..[982,32888+34])
                                            Pexp_ident "raise" (typing/parmatch.ml[982,32888+29]..[982,32888+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[982,32888+35]..[982,32888+44])
                                                Pexp_construct "Not_found" (typing/parmatch.ml[982,32888+35]..[982,32888+44])
                                                None
                                          ]
                                        Some
                                          expression (typing/parmatch.ml[984,32950+14]..[988,33088+77])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/parmatch.ml[984,32950+18]..[984,32950+20])
                                                  Ppat_var "ci" (typing/parmatch.ml[984,32950+18]..[984,32950+20])
                                                expression (typing/parmatch.ml[984,32950+23]..[984,32950+33])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[984,32950+23]..[984,32950+31])
                                                    Pexp_ident "Char.chr" (typing/parmatch.ml[984,32950+23]..[984,32950+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[984,32950+32]..[984,32950+33])
                                                        Pexp_ident "i" (typing/parmatch.ml[984,32950+32]..[984,32950+33])
                                                  ]
                                            ]
                                            expression (typing/parmatch.ml[985,32987+14]..[988,33088+77])
                                              Pexp_ifthenelse
                                              expression (typing/parmatch.ml[985,32987+17]..[985,32987+38])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[985,32987+17]..[985,32987+25])
                                                  Pexp_ident "List.mem" (typing/parmatch.ml[985,32987+17]..[985,32987+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[985,32987+26]..[985,32987+28])
                                                      Pexp_ident "ci" (typing/parmatch.ml[985,32987+26]..[985,32987+28])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[985,32987+29]..[985,32987+38])
                                                      Pexp_ident "all_chars" (typing/parmatch.ml[985,32987+29]..[985,32987+38])
                                                ]
                                              expression (typing/parmatch.ml[986,33031+16]..[986,33031+37])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[986,33031+16]..[986,33031+26])
                                                  Pexp_ident "find_other" (typing/parmatch.ml[986,33031+16]..[986,33031+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[986,33031+27]..[986,33031+32])
                                                      Pexp_apply
                                                      expression (typing/parmatch.ml[986,33031+29]..[986,33031+30])
                                                        Pexp_ident "+" (typing/parmatch.ml[986,33031+29]..[986,33031+30])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[986,33031+28]..[986,33031+29])
                                                            Pexp_ident "i" (typing/parmatch.ml[986,33031+28]..[986,33031+29])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[986,33031+30]..[986,33031+31])
                                                            Pexp_constant PConst_int (1,None)
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[986,33031+33]..[986,33031+37])
                                                      Pexp_ident "imax" (typing/parmatch.ml[986,33031+33]..[986,33031+37])
                                                ]
                                              Some
                                                expression (typing/parmatch.ml[988,33088+16]..[988,33088+77])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[988,33088+16]..[988,33088+24])
                                                    Pexp_ident "make_pat" (typing/parmatch.ml[988,33088+16]..[988,33088+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[988,33088+25]..[988,33088+56])
                                                        Pexp_construct "Tpat_constant" (typing/parmatch.ml[988,33088+26]..[988,33088+39])
                                                        Some
                                                          expression (typing/parmatch.ml[988,33088+40]..[988,33088+55])
                                                            Pexp_construct "Const_char" (typing/parmatch.ml[988,33088+41]..[988,33088+51])
                                                            Some
                                                              expression (typing/parmatch.ml[988,33088+52]..[988,33088+54])
                                                                Pexp_ident "ci" (typing/parmatch.ml[988,33088+52]..[988,33088+54])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[988,33088+57]..[988,33088+67])
                                                        Pexp_field
                                                        expression (typing/parmatch.ml[988,33088+57]..[988,33088+58])
                                                          Pexp_ident "d" (typing/parmatch.ml[988,33088+57]..[988,33088+58])
                                                        "pat_type" (typing/parmatch.ml[988,33088+59]..[988,33088+67])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[988,33088+68]..[988,33088+77])
                                                        Pexp_field
                                                        expression (typing/parmatch.ml[988,33088+68]..[988,33088+69])
                                                          Pexp_ident "d" (typing/parmatch.ml[988,33088+68]..[988,33088+69])
                                                        "pat_env" (typing/parmatch.ml[988,33088+70]..[988,33088+77])
                                                  ]
                              ]
                              expression (typing/parmatch.ml[990,33179+10]..[1000,33512+51])
                                Pexp_let Rec
                                [
                                  <def>
                                    pattern (typing/parmatch.ml[990,33179+18]..[990,33179+27])
                                      Ppat_var "try_chars" (typing/parmatch.ml[990,33179+18]..[990,33179+27])
                                    expression (typing/parmatch.ml[990,33179+30]..[996,33386+45])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (typing/parmatch.ml[991,33218+14]..[991,33218+16])
                                            Ppat_construct "[]" (typing/parmatch.ml[991,33218+14]..[991,33218+16])
                                            None
                                          expression (typing/parmatch.ml[991,33218+20]..[991,33218+34])
                                            Pexp_ident "Patterns.omega" (typing/parmatch.ml[991,33218+20]..[991,33218+34])
                                        <case>
                                          pattern (typing/parmatch.ml[992,33253+14]..[992,33253+29])
                                            Ppat_construct "::" (typing/parmatch.ml[992,33253+22]..[992,33253+24])
                                            Some
                                              []
                                              pattern (typing/parmatch.ml[992,33253+14]..[992,33253+29]) ghost
                                                Ppat_tuple
                                                [
                                                  pattern (typing/parmatch.ml[992,33253+14]..[992,33253+21])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/parmatch.ml[992,33253+15]..[992,33253+17])
                                                        Ppat_var "c1" (typing/parmatch.ml[992,33253+15]..[992,33253+17])
                                                      pattern (typing/parmatch.ml[992,33253+18]..[992,33253+20])
                                                        Ppat_var "c2" (typing/parmatch.ml[992,33253+18]..[992,33253+20])
                                                    ]
                                                  pattern (typing/parmatch.ml[992,33253+25]..[992,33253+29])
                                                    Ppat_var "rest" (typing/parmatch.ml[992,33253+25]..[992,33253+29])
                                                ]
                                          expression (typing/parmatch.ml[993,33286+16]..[996,33386+45])
                                            Pexp_try
                                            expression (typing/parmatch.ml[994,33306+18]..[994,33306+58])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[994,33306+18]..[994,33306+28])
                                                Pexp_ident "find_other" (typing/parmatch.ml[994,33306+18]..[994,33306+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[994,33306+29]..[994,33306+43])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[994,33306+30]..[994,33306+39])
                                                      Pexp_ident "Char.code" (typing/parmatch.ml[994,33306+30]..[994,33306+39])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[994,33306+40]..[994,33306+42])
                                                          Pexp_ident "c1" (typing/parmatch.ml[994,33306+40]..[994,33306+42])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[994,33306+44]..[994,33306+58])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[994,33306+45]..[994,33306+54])
                                                      Pexp_ident "Char.code" (typing/parmatch.ml[994,33306+45]..[994,33306+54])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[994,33306+55]..[994,33306+57])
                                                          Pexp_ident "c2" (typing/parmatch.ml[994,33306+55]..[994,33306+57])
                                                    ]
                                              ]
                                            [
                                              <case>
                                                pattern (typing/parmatch.ml[996,33386+18]..[996,33386+27])
                                                  Ppat_construct "Not_found" (typing/parmatch.ml[996,33386+18]..[996,33386+27])
                                                  None
                                                expression (typing/parmatch.ml[996,33386+31]..[996,33386+45])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[996,33386+31]..[996,33386+40])
                                                    Pexp_ident "try_chars" (typing/parmatch.ml[996,33386+31]..[996,33386+40])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[996,33386+41]..[996,33386+45])
                                                        Pexp_ident "rest" (typing/parmatch.ml[996,33386+41]..[996,33386+45])
                                                  ]
                                            ]
                                      ]
                                ]
                                expression (typing/parmatch.ml[998,33445+10]..[1000,33512+51])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[998,33445+10]..[998,33445+19])
                                    Pexp_ident "try_chars" (typing/parmatch.ml[998,33445+10]..[998,33445+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[999,33465+12]..[1000,33512+51])
                                        Pexp_construct "::" (typing/parmatch.ml[999,33465+14]..[1000,33512+51]) ghost
                                        Some
                                          expression (typing/parmatch.ml[999,33465+14]..[1000,33512+51]) ghost
                                            Pexp_tuple
                                            [
                                              expression (typing/parmatch.ml[999,33465+14]..[999,33465+22])
                                                Pexp_tuple
                                                [
                                                  expression (typing/parmatch.ml[999,33465+14]..[999,33465+17])
                                                    Pexp_constant PConst_char 61
                                                  expression (typing/parmatch.ml[999,33465+19]..[999,33465+22])
                                                    Pexp_constant PConst_char 7a
                                                ]
                                              expression (typing/parmatch.ml[999,33465+25]..[1000,33512+51]) ghost
                                                Pexp_construct "::" (typing/parmatch.ml[999,33465+25]..[1000,33512+51]) ghost
                                                Some
                                                  expression (typing/parmatch.ml[999,33465+25]..[1000,33512+51]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/parmatch.ml[999,33465+25]..[999,33465+33])
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/parmatch.ml[999,33465+25]..[999,33465+28])
                                                            Pexp_constant PConst_char 41
                                                          expression (typing/parmatch.ml[999,33465+30]..[999,33465+33])
                                                            Pexp_constant PConst_char 5a
                                                        ]
                                                      expression (typing/parmatch.ml[999,33465+36]..[1000,33512+51]) ghost
                                                        Pexp_construct "::" (typing/parmatch.ml[999,33465+36]..[1000,33512+51]) ghost
                                                        Some
                                                          expression (typing/parmatch.ml[999,33465+36]..[1000,33512+51]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/parmatch.ml[999,33465+36]..[999,33465+44])
                                                                Pexp_tuple
                                                                [
                                                                  expression (typing/parmatch.ml[999,33465+36]..[999,33465+39])
                                                                    Pexp_constant PConst_char 30
                                                                  expression (typing/parmatch.ml[999,33465+41]..[999,33465+44])
                                                                    Pexp_constant PConst_char 39
                                                                ]
                                                              expression (typing/parmatch.ml[1000,33512+14]..[1000,33512+51]) ghost
                                                                Pexp_construct "::" (typing/parmatch.ml[1000,33512+14]..[1000,33512+51]) ghost
                                                                Some
                                                                  expression (typing/parmatch.ml[1000,33512+14]..[1000,33512+51]) ghost
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (typing/parmatch.ml[1000,33512+14]..[1000,33512+22])
Pexp_tuple
[
  expression (typing/parmatch.ml[1000,33512+14]..[1000,33512+17])
    Pexp_constant PConst_char 20
  expression (typing/parmatch.ml[1000,33512+19]..[1000,33512+22])
    Pexp_constant PConst_char 7e
]
                                                                      expression (typing/parmatch.ml[1000,33512+25]..[1000,33512+51]) ghost
Pexp_construct "::" (typing/parmatch.ml[1000,33512+25]..[1000,33512+51]) ghost
Some
  expression (typing/parmatch.ml[1000,33512+25]..[1000,33512+51]) ghost
    Pexp_tuple
    [
      expression (typing/parmatch.ml[1000,33512+25]..[1000,33512+50])
        Pexp_tuple
        [
          expression (typing/parmatch.ml[1000,33512+25]..[1000,33512+35])
            Pexp_apply
            expression (typing/parmatch.ml[1000,33512+25]..[1000,33512+33])
              Pexp_ident "Char.chr" (typing/parmatch.ml[1000,33512+25]..[1000,33512+33])
            [
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1000,33512+34]..[1000,33512+35])
                  Pexp_constant PConst_int (0,None)
            ]
          expression (typing/parmatch.ml[1000,33512+38]..[1000,33512+50])
            Pexp_apply
            expression (typing/parmatch.ml[1000,33512+38]..[1000,33512+46])
              Pexp_ident "Char.chr" (typing/parmatch.ml[1000,33512+38]..[1000,33512+46])
            [
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1000,33512+47]..[1000,33512+50])
                  Pexp_constant PConst_int (255,None)
            ]
        ]
      expression (typing/parmatch.ml[1000,33512+50]..[1000,33512+51]) ghost
        Pexp_construct "[]" (typing/parmatch.ml[1000,33512+50]..[1000,33512+51]) ghost
        None
    ]
                                                                    ]
                                                            ]
                                                    ]
                                            ]
                                  ]
                        <case>
                          pattern (typing/parmatch.ml[1001,33564+8]..[1001,33564+28])
                            Ppat_construct "Constant" (typing/parmatch.ml[1001,33564+8]..[1001,33564+16])
                            Some
                              []
                              pattern (typing/parmatch.ml[1001,33564+17]..[1001,33564+28])
                                Ppat_construct "Const_int" (typing/parmatch.ml[1001,33564+17]..[1001,33564+26])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[1001,33564+27]..[1001,33564+28])
                                    Ppat_any
                          expression (typing/parmatch.ml[1002,33596+10]..[1005,33752+24])
                            Pexp_apply
                            expression (typing/parmatch.ml[1002,33596+10]..[1002,33596+30])
                              Pexp_ident "build_other_constant" (typing/parmatch.ml[1002,33596+10]..[1002,33596+30])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1003,33627+12]..[1003,33627+69])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/parmatch.ml[1003,33627+22]..[1003,33627+43])
                                        Ppat_construct "Constant" (typing/parmatch.ml[1003,33627+22]..[1003,33627+30])
                                        Some
                                          []
                                          pattern (typing/parmatch.ml[1003,33627+30]..[1003,33627+43])
                                            Ppat_construct "Const_int" (typing/parmatch.ml[1003,33627+31]..[1003,33627+40])
                                            Some
                                              []
                                              pattern (typing/parmatch.ml[1003,33627+41]..[1003,33627+42])
                                                Ppat_var "i" (typing/parmatch.ml[1003,33627+41]..[1003,33627+42])
                                      expression (typing/parmatch.ml[1003,33627+47]..[1003,33627+48])
                                        Pexp_ident "i" (typing/parmatch.ml[1003,33627+47]..[1003,33627+48])
                                    <case>
                                      pattern (typing/parmatch.ml[1003,33627+51]..[1003,33627+52])
                                        Ppat_any
                                      expression (typing/parmatch.ml[1003,33627+56]..[1003,33627+68])
                                        Pexp_assert
                                        expression (typing/parmatch.ml[1003,33627+63]..[1003,33627+68])
                                          Pexp_construct "false" (typing/parmatch.ml[1003,33627+63]..[1003,33627+68])
                                          None
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1004,33697+12]..[1004,33697+54])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/parmatch.ml[1004,33697+22]..[1004,33697+23])
                                        Ppat_var "i" (typing/parmatch.ml[1004,33697+22]..[1004,33697+23])
                                      expression (typing/parmatch.ml[1004,33697+27]..[1004,33697+53])
                                        Pexp_construct "Tpat_constant" (typing/parmatch.ml[1004,33697+27]..[1004,33697+40])
                                        Some
                                          expression (typing/parmatch.ml[1004,33697+40]..[1004,33697+53])
                                            Pexp_construct "Const_int" (typing/parmatch.ml[1004,33697+41]..[1004,33697+50])
                                            Some
                                              expression (typing/parmatch.ml[1004,33697+51]..[1004,33697+52])
                                                Pexp_ident "i" (typing/parmatch.ml[1004,33697+51]..[1004,33697+52])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1005,33752+12]..[1005,33752+13])
                                  Pexp_constant PConst_int (0,None)
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1005,33752+14]..[1005,33752+18])
                                  Pexp_ident "succ" (typing/parmatch.ml[1005,33752+14]..[1005,33752+18])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1005,33752+19]..[1005,33752+20])
                                  Pexp_ident "d" (typing/parmatch.ml[1005,33752+19]..[1005,33752+20])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1005,33752+21]..[1005,33752+24])
                                  Pexp_ident "env" (typing/parmatch.ml[1005,33752+21]..[1005,33752+24])
                            ]
                        <case>
                          pattern (typing/parmatch.ml[1006,33777+8]..[1006,33777+30])
                            Ppat_construct "Constant" (typing/parmatch.ml[1006,33777+8]..[1006,33777+16])
                            Some
                              []
                              pattern (typing/parmatch.ml[1006,33777+17]..[1006,33777+30])
                                Ppat_construct "Const_int32" (typing/parmatch.ml[1006,33777+17]..[1006,33777+28])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[1006,33777+29]..[1006,33777+30])
                                    Ppat_any
                          expression (typing/parmatch.ml[1007,33811+10]..[1010,33971+31])
                            Pexp_apply
                            expression (typing/parmatch.ml[1007,33811+10]..[1007,33811+30])
                              Pexp_ident "build_other_constant" (typing/parmatch.ml[1007,33811+10]..[1007,33811+30])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1008,33842+12]..[1008,33842+71])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/parmatch.ml[1008,33842+22]..[1008,33842+45])
                                        Ppat_construct "Constant" (typing/parmatch.ml[1008,33842+22]..[1008,33842+30])
                                        Some
                                          []
                                          pattern (typing/parmatch.ml[1008,33842+30]..[1008,33842+45])
                                            Ppat_construct "Const_int32" (typing/parmatch.ml[1008,33842+31]..[1008,33842+42])
                                            Some
                                              []
                                              pattern (typing/parmatch.ml[1008,33842+43]..[1008,33842+44])
                                                Ppat_var "i" (typing/parmatch.ml[1008,33842+43]..[1008,33842+44])
                                      expression (typing/parmatch.ml[1008,33842+49]..[1008,33842+50])
                                        Pexp_ident "i" (typing/parmatch.ml[1008,33842+49]..[1008,33842+50])
                                    <case>
                                      pattern (typing/parmatch.ml[1008,33842+53]..[1008,33842+54])
                                        Ppat_any
                                      expression (typing/parmatch.ml[1008,33842+58]..[1008,33842+70])
                                        Pexp_assert
                                        expression (typing/parmatch.ml[1008,33842+65]..[1008,33842+70])
                                          Pexp_construct "false" (typing/parmatch.ml[1008,33842+65]..[1008,33842+70])
                                          None
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1009,33914+12]..[1009,33914+56])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/parmatch.ml[1009,33914+22]..[1009,33914+23])
                                        Ppat_var "i" (typing/parmatch.ml[1009,33914+22]..[1009,33914+23])
                                      expression (typing/parmatch.ml[1009,33914+27]..[1009,33914+55])
                                        Pexp_construct "Tpat_constant" (typing/parmatch.ml[1009,33914+27]..[1009,33914+40])
                                        Some
                                          expression (typing/parmatch.ml[1009,33914+40]..[1009,33914+55])
                                            Pexp_construct "Const_int32" (typing/parmatch.ml[1009,33914+41]..[1009,33914+52])
                                            Some
                                              expression (typing/parmatch.ml[1009,33914+53]..[1009,33914+54])
                                                Pexp_ident "i" (typing/parmatch.ml[1009,33914+53]..[1009,33914+54])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1010,33971+12]..[1010,33971+14])
                                  Pexp_constant PConst_int (0,Some l)
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1010,33971+15]..[1010,33971+25])
                                  Pexp_ident "Int32.succ" (typing/parmatch.ml[1010,33971+15]..[1010,33971+25])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1010,33971+26]..[1010,33971+27])
                                  Pexp_ident "d" (typing/parmatch.ml[1010,33971+26]..[1010,33971+27])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1010,33971+28]..[1010,33971+31])
                                  Pexp_ident "env" (typing/parmatch.ml[1010,33971+28]..[1010,33971+31])
                            ]
                        <case>
                          pattern (typing/parmatch.ml[1011,34003+8]..[1011,34003+30])
                            Ppat_construct "Constant" (typing/parmatch.ml[1011,34003+8]..[1011,34003+16])
                            Some
                              []
                              pattern (typing/parmatch.ml[1011,34003+17]..[1011,34003+30])
                                Ppat_construct "Const_int64" (typing/parmatch.ml[1011,34003+17]..[1011,34003+28])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[1011,34003+29]..[1011,34003+30])
                                    Ppat_any
                          expression (typing/parmatch.ml[1012,34037+10]..[1015,34197+31])
                            Pexp_apply
                            expression (typing/parmatch.ml[1012,34037+10]..[1012,34037+30])
                              Pexp_ident "build_other_constant" (typing/parmatch.ml[1012,34037+10]..[1012,34037+30])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1013,34068+12]..[1013,34068+71])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/parmatch.ml[1013,34068+22]..[1013,34068+45])
                                        Ppat_construct "Constant" (typing/parmatch.ml[1013,34068+22]..[1013,34068+30])
                                        Some
                                          []
                                          pattern (typing/parmatch.ml[1013,34068+30]..[1013,34068+45])
                                            Ppat_construct "Const_int64" (typing/parmatch.ml[1013,34068+31]..[1013,34068+42])
                                            Some
                                              []
                                              pattern (typing/parmatch.ml[1013,34068+43]..[1013,34068+44])
                                                Ppat_var "i" (typing/parmatch.ml[1013,34068+43]..[1013,34068+44])
                                      expression (typing/parmatch.ml[1013,34068+49]..[1013,34068+50])
                                        Pexp_ident "i" (typing/parmatch.ml[1013,34068+49]..[1013,34068+50])
                                    <case>
                                      pattern (typing/parmatch.ml[1013,34068+53]..[1013,34068+54])
                                        Ppat_any
                                      expression (typing/parmatch.ml[1013,34068+58]..[1013,34068+70])
                                        Pexp_assert
                                        expression (typing/parmatch.ml[1013,34068+65]..[1013,34068+70])
                                          Pexp_construct "false" (typing/parmatch.ml[1013,34068+65]..[1013,34068+70])
                                          None
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1014,34140+12]..[1014,34140+56])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/parmatch.ml[1014,34140+22]..[1014,34140+23])
                                        Ppat_var "i" (typing/parmatch.ml[1014,34140+22]..[1014,34140+23])
                                      expression (typing/parmatch.ml[1014,34140+27]..[1014,34140+55])
                                        Pexp_construct "Tpat_constant" (typing/parmatch.ml[1014,34140+27]..[1014,34140+40])
                                        Some
                                          expression (typing/parmatch.ml[1014,34140+40]..[1014,34140+55])
                                            Pexp_construct "Const_int64" (typing/parmatch.ml[1014,34140+41]..[1014,34140+52])
                                            Some
                                              expression (typing/parmatch.ml[1014,34140+53]..[1014,34140+54])
                                                Pexp_ident "i" (typing/parmatch.ml[1014,34140+53]..[1014,34140+54])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1015,34197+12]..[1015,34197+14])
                                  Pexp_constant PConst_int (0,Some L)
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1015,34197+15]..[1015,34197+25])
                                  Pexp_ident "Int64.succ" (typing/parmatch.ml[1015,34197+15]..[1015,34197+25])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1015,34197+26]..[1015,34197+27])
                                  Pexp_ident "d" (typing/parmatch.ml[1015,34197+26]..[1015,34197+27])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1015,34197+28]..[1015,34197+31])
                                  Pexp_ident "env" (typing/parmatch.ml[1015,34197+28]..[1015,34197+31])
                            ]
                        <case>
                          pattern (typing/parmatch.ml[1016,34229+8]..[1016,34229+34])
                            Ppat_construct "Constant" (typing/parmatch.ml[1016,34229+8]..[1016,34229+16])
                            Some
                              []
                              pattern (typing/parmatch.ml[1016,34229+17]..[1016,34229+34])
                                Ppat_construct "Const_nativeint" (typing/parmatch.ml[1016,34229+17]..[1016,34229+32])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[1016,34229+33]..[1016,34229+34])
                                    Ppat_any
                          expression (typing/parmatch.ml[1017,34267+10]..[1020,34435+35])
                            Pexp_apply
                            expression (typing/parmatch.ml[1017,34267+10]..[1017,34267+30])
                              Pexp_ident "build_other_constant" (typing/parmatch.ml[1017,34267+10]..[1017,34267+30])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1018,34298+12]..[1018,34298+75])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/parmatch.ml[1018,34298+22]..[1018,34298+49])
                                        Ppat_construct "Constant" (typing/parmatch.ml[1018,34298+22]..[1018,34298+30])
                                        Some
                                          []
                                          pattern (typing/parmatch.ml[1018,34298+30]..[1018,34298+49])
                                            Ppat_construct "Const_nativeint" (typing/parmatch.ml[1018,34298+31]..[1018,34298+46])
                                            Some
                                              []
                                              pattern (typing/parmatch.ml[1018,34298+47]..[1018,34298+48])
                                                Ppat_var "i" (typing/parmatch.ml[1018,34298+47]..[1018,34298+48])
                                      expression (typing/parmatch.ml[1018,34298+53]..[1018,34298+54])
                                        Pexp_ident "i" (typing/parmatch.ml[1018,34298+53]..[1018,34298+54])
                                    <case>
                                      pattern (typing/parmatch.ml[1018,34298+57]..[1018,34298+58])
                                        Ppat_any
                                      expression (typing/parmatch.ml[1018,34298+62]..[1018,34298+74])
                                        Pexp_assert
                                        expression (typing/parmatch.ml[1018,34298+69]..[1018,34298+74])
                                          Pexp_construct "false" (typing/parmatch.ml[1018,34298+69]..[1018,34298+74])
                                          None
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1019,34374+12]..[1019,34374+60])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/parmatch.ml[1019,34374+22]..[1019,34374+23])
                                        Ppat_var "i" (typing/parmatch.ml[1019,34374+22]..[1019,34374+23])
                                      expression (typing/parmatch.ml[1019,34374+27]..[1019,34374+59])
                                        Pexp_construct "Tpat_constant" (typing/parmatch.ml[1019,34374+27]..[1019,34374+40])
                                        Some
                                          expression (typing/parmatch.ml[1019,34374+40]..[1019,34374+59])
                                            Pexp_construct "Const_nativeint" (typing/parmatch.ml[1019,34374+41]..[1019,34374+56])
                                            Some
                                              expression (typing/parmatch.ml[1019,34374+57]..[1019,34374+58])
                                                Pexp_ident "i" (typing/parmatch.ml[1019,34374+57]..[1019,34374+58])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1020,34435+12]..[1020,34435+14])
                                  Pexp_constant PConst_int (0,Some n)
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1020,34435+15]..[1020,34435+29])
                                  Pexp_ident "Nativeint.succ" (typing/parmatch.ml[1020,34435+15]..[1020,34435+29])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1020,34435+30]..[1020,34435+31])
                                  Pexp_ident "d" (typing/parmatch.ml[1020,34435+30]..[1020,34435+31])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1020,34435+32]..[1020,34435+35])
                                  Pexp_ident "env" (typing/parmatch.ml[1020,34435+32]..[1020,34435+35])
                            ]
                        <case>
                          pattern (typing/parmatch.ml[1021,34471+8]..[1021,34471+31])
                            Ppat_construct "Constant" (typing/parmatch.ml[1021,34471+8]..[1021,34471+16])
                            Some
                              []
                              pattern (typing/parmatch.ml[1021,34471+17]..[1021,34471+31])
                                Ppat_construct "Const_string" (typing/parmatch.ml[1021,34471+17]..[1021,34471+29])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[1021,34471+30]..[1021,34471+31])
                                    Ppat_any
                          expression (typing/parmatch.ml[1022,34506+10]..[1028,34779+24])
                            Pexp_apply
                            expression (typing/parmatch.ml[1022,34506+10]..[1022,34506+30])
                              Pexp_ident "build_other_constant" (typing/parmatch.ml[1022,34506+10]..[1022,34506+30])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1023,34537+12]..[1024,34611+40])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/parmatch.ml[1023,34537+22]..[1023,34537+54])
                                        Ppat_construct "Constant" (typing/parmatch.ml[1023,34537+22]..[1023,34537+30])
                                        Some
                                          []
                                          pattern (typing/parmatch.ml[1023,34537+30]..[1023,34537+54])
                                            Ppat_construct "Const_string" (typing/parmatch.ml[1023,34537+31]..[1023,34537+43])
                                            Some
                                              []
                                              pattern (typing/parmatch.ml[1023,34537+44]..[1023,34537+53])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/parmatch.ml[1023,34537+45]..[1023,34537+46])
                                                    Ppat_var "s" (typing/parmatch.ml[1023,34537+45]..[1023,34537+46])
                                                  pattern (typing/parmatch.ml[1023,34537+48]..[1023,34537+49])
                                                    Ppat_any
                                                  pattern (typing/parmatch.ml[1023,34537+51]..[1023,34537+52])
                                                    Ppat_any
                                                ]
                                      expression (typing/parmatch.ml[1023,34537+58]..[1023,34537+73])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1023,34537+58]..[1023,34537+71])
                                          Pexp_ident "String.length" (typing/parmatch.ml[1023,34537+58]..[1023,34537+71])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1023,34537+72]..[1023,34537+73])
                                              Pexp_ident "s" (typing/parmatch.ml[1023,34537+72]..[1023,34537+73])
                                        ]
                                    <case>
                                      pattern (typing/parmatch.ml[1024,34611+22]..[1024,34611+23])
                                        Ppat_any
                                      expression (typing/parmatch.ml[1024,34611+27]..[1024,34611+39])
                                        Pexp_assert
                                        expression (typing/parmatch.ml[1024,34611+34]..[1024,34611+39])
                                          Pexp_construct "false" (typing/parmatch.ml[1024,34611+34]..[1024,34611+39])
                                          None
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1025,34652+12]..[1027,34708+70])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/parmatch.ml[1025,34652+22]..[1025,34652+23])
                                        Ppat_var "i" (typing/parmatch.ml[1025,34652+22]..[1025,34652+23])
                                      expression (typing/parmatch.ml[1026,34679+15]..[1027,34708+69])
                                        Pexp_construct "Tpat_constant" (typing/parmatch.ml[1026,34679+15]..[1026,34679+28])
                                        Some
                                          expression (typing/parmatch.ml[1027,34708+17]..[1027,34708+69])
                                            Pexp_construct "Const_string" (typing/parmatch.ml[1027,34708+18]..[1027,34708+30])
                                            Some
                                              expression (typing/parmatch.ml[1027,34708+30]..[1027,34708+68])
                                                Pexp_tuple
                                                [
                                                  expression (typing/parmatch.ml[1027,34708+31]..[1027,34708+48])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1027,34708+31]..[1027,34708+42])
                                                      Pexp_ident "String.make" (typing/parmatch.ml[1027,34708+31]..[1027,34708+42])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1027,34708+43]..[1027,34708+44])
                                                          Pexp_ident "i" (typing/parmatch.ml[1027,34708+43]..[1027,34708+44])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1027,34708+45]..[1027,34708+48])
                                                          Pexp_constant PConst_char 2a
                                                    ]
                                                  expression (typing/parmatch.ml[1027,34708+49]..[1027,34708+62])
                                                    Pexp_ident "Location.none" (typing/parmatch.ml[1027,34708+49]..[1027,34708+62])
                                                  expression (typing/parmatch.ml[1027,34708+63]..[1027,34708+67])
                                                    Pexp_construct "None" (typing/parmatch.ml[1027,34708+63]..[1027,34708+67])
                                                    None
                                                ]
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1028,34779+12]..[1028,34779+13])
                                  Pexp_constant PConst_int (0,None)
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1028,34779+14]..[1028,34779+18])
                                  Pexp_ident "succ" (typing/parmatch.ml[1028,34779+14]..[1028,34779+18])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1028,34779+19]..[1028,34779+20])
                                  Pexp_ident "d" (typing/parmatch.ml[1028,34779+19]..[1028,34779+20])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1028,34779+21]..[1028,34779+24])
                                  Pexp_ident "env" (typing/parmatch.ml[1028,34779+21]..[1028,34779+24])
                            ]
                        <case>
                          pattern (typing/parmatch.ml[1029,34804+8]..[1029,34804+30])
                            Ppat_construct "Constant" (typing/parmatch.ml[1029,34804+8]..[1029,34804+16])
                            Some
                              []
                              pattern (typing/parmatch.ml[1029,34804+17]..[1029,34804+30])
                                Ppat_construct "Const_float" (typing/parmatch.ml[1029,34804+17]..[1029,34804+28])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[1029,34804+29]..[1029,34804+30])
                                    Ppat_any
                          expression (typing/parmatch.ml[1030,34838+10]..[1034,35052+41])
                            Pexp_apply
                            expression (typing/parmatch.ml[1030,34838+10]..[1030,34838+30])
                              Pexp_ident "build_other_constant" (typing/parmatch.ml[1030,34838+10]..[1030,34838+30])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1031,34869+12]..[1032,34936+40])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/parmatch.ml[1031,34869+22]..[1031,34869+45])
                                        Ppat_construct "Constant" (typing/parmatch.ml[1031,34869+22]..[1031,34869+30])
                                        Some
                                          []
                                          pattern (typing/parmatch.ml[1031,34869+30]..[1031,34869+45])
                                            Ppat_construct "Const_float" (typing/parmatch.ml[1031,34869+31]..[1031,34869+42])
                                            Some
                                              []
                                              pattern (typing/parmatch.ml[1031,34869+43]..[1031,34869+44])
                                                Ppat_var "f" (typing/parmatch.ml[1031,34869+43]..[1031,34869+44])
                                      expression (typing/parmatch.ml[1031,34869+49]..[1031,34869+66])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1031,34869+49]..[1031,34869+64])
                                          Pexp_ident "float_of_string" (typing/parmatch.ml[1031,34869+49]..[1031,34869+64])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1031,34869+65]..[1031,34869+66])
                                              Pexp_ident "f" (typing/parmatch.ml[1031,34869+65]..[1031,34869+66])
                                        ]
                                    <case>
                                      pattern (typing/parmatch.ml[1032,34936+22]..[1032,34936+23])
                                        Ppat_any
                                      expression (typing/parmatch.ml[1032,34936+27]..[1032,34936+39])
                                        Pexp_assert
                                        expression (typing/parmatch.ml[1032,34936+34]..[1032,34936+39])
                                          Pexp_construct "false" (typing/parmatch.ml[1032,34936+34]..[1032,34936+39])
                                          None
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1033,34977+12]..[1033,34977+74])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/parmatch.ml[1033,34977+22]..[1033,34977+23])
                                        Ppat_var "f" (typing/parmatch.ml[1033,34977+22]..[1033,34977+23])
                                      expression (typing/parmatch.ml[1033,34977+27]..[1033,34977+73])
                                        Pexp_construct "Tpat_constant" (typing/parmatch.ml[1033,34977+27]..[1033,34977+40])
                                        Some
                                          expression (typing/parmatch.ml[1033,34977+40]..[1033,34977+73])
                                            Pexp_construct "Const_float" (typing/parmatch.ml[1033,34977+41]..[1033,34977+52])
                                            Some
                                              expression (typing/parmatch.ml[1033,34977+53]..[1033,34977+72])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[1033,34977+54]..[1033,34977+69])
                                                  Pexp_ident "string_of_float" (typing/parmatch.ml[1033,34977+54]..[1033,34977+69])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1033,34977+70]..[1033,34977+71])
                                                      Pexp_ident "f" (typing/parmatch.ml[1033,34977+70]..[1033,34977+71])
                                                ]
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1034,35052+12]..[1034,35052+15])
                                  Pexp_constant PConst_float (0.0,None)
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1034,35052+16]..[1034,35052+35])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/parmatch.ml[1034,35052+21]..[1034,35052+22])
                                    Ppat_var "f" (typing/parmatch.ml[1034,35052+21]..[1034,35052+22])
                                  expression (typing/parmatch.ml[1034,35052+26]..[1034,35052+34])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1034,35052+28]..[1034,35052+30])
                                      Pexp_ident "+." (typing/parmatch.ml[1034,35052+28]..[1034,35052+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1034,35052+26]..[1034,35052+27])
                                          Pexp_ident "f" (typing/parmatch.ml[1034,35052+26]..[1034,35052+27])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1034,35052+31]..[1034,35052+34])
                                          Pexp_constant PConst_float (1.0,None)
                                    ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1034,35052+36]..[1034,35052+37])
                                  Pexp_ident "d" (typing/parmatch.ml[1034,35052+36]..[1034,35052+37])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1034,35052+38]..[1034,35052+41])
                                  Pexp_ident "env" (typing/parmatch.ml[1034,35052+38]..[1034,35052+41])
                            ]
                        <case>
                          pattern (typing/parmatch.ml[1035,35094+8]..[1035,35094+15])
                            Ppat_construct "Array" (typing/parmatch.ml[1035,35094+8]..[1035,35094+13])
                            Some
                              []
                              pattern (typing/parmatch.ml[1035,35094+14]..[1035,35094+15])
                                Ppat_any
                          expression (typing/parmatch.ml[1036,35113+10]..[1046,35482+22])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/parmatch.ml[1036,35113+14]..[1036,35113+25])
                                  Ppat_var "all_lengths" (typing/parmatch.ml[1036,35113+14]..[1036,35113+25])
                                expression (typing/parmatch.ml[1037,35141+12]..[1041,35280+17])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1037,35141+12]..[1037,35141+20])
                                    Pexp_ident "List.map" (typing/parmatch.ml[1037,35141+12]..[1037,35141+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1038,35162+14]..[1040,35245+34])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/parmatch.ml[1038,35162+19]..[1038,35162+24])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[1038,35162+20]..[1038,35162+21])
                                              Ppat_var "p" (typing/parmatch.ml[1038,35162+20]..[1038,35162+21])
                                            pattern (typing/parmatch.ml[1038,35162+22]..[1038,35162+23])
                                              Ppat_any
                                          ]
                                        expression (typing/parmatch.ml[1038,35162+28]..[1040,35245+33])
                                          Pexp_match
                                          expression (typing/parmatch.ml[1038,35162+34]..[1038,35162+44])
                                            Pexp_field
                                            expression (typing/parmatch.ml[1038,35162+34]..[1038,35162+35])
                                              Pexp_ident "p" (typing/parmatch.ml[1038,35162+34]..[1038,35162+35])
                                            "pat_desc" (typing/parmatch.ml[1038,35162+36]..[1038,35162+44])
                                          [
                                            <case>
                                              pattern (typing/parmatch.ml[1039,35212+16]..[1039,35212+25])
                                                Ppat_construct "Array" (typing/parmatch.ml[1039,35212+16]..[1039,35212+21])
                                                Some
                                                  []
                                                  pattern (typing/parmatch.ml[1039,35212+22]..[1039,35212+25])
                                                    Ppat_var "len" (typing/parmatch.ml[1039,35212+22]..[1039,35212+25])
                                              expression (typing/parmatch.ml[1039,35212+29]..[1039,35212+32])
                                                Pexp_ident "len" (typing/parmatch.ml[1039,35212+29]..[1039,35212+32])
                                            <case>
                                              pattern (typing/parmatch.ml[1040,35245+16]..[1040,35245+17])
                                                Ppat_any
                                              expression (typing/parmatch.ml[1040,35245+21]..[1040,35245+33])
                                                Pexp_assert
                                                expression (typing/parmatch.ml[1040,35245+28]..[1040,35245+33])
                                                  Pexp_construct "false" (typing/parmatch.ml[1040,35245+28]..[1040,35245+33])
                                                  None
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1041,35280+14]..[1041,35280+17])
                                        Pexp_ident "env" (typing/parmatch.ml[1041,35280+14]..[1041,35280+17])
                                  ]
                            ]
                            expression (typing/parmatch.ml[1042,35301+10]..[1046,35482+22])
                              Pexp_let Rec
                              [
                                <def>
                                  pattern (typing/parmatch.ml[1042,35301+18]..[1042,35301+28])
                                    Ppat_var "try_arrays" (typing/parmatch.ml[1042,35301+18]..[1042,35301+28])
                                  expression (typing/parmatch.ml[1042,35301+29]..[1045,35411+67]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/parmatch.ml[1042,35301+29]..[1042,35301+30])
                                      Ppat_var "l" (typing/parmatch.ml[1042,35301+29]..[1042,35301+30])
                                    expression (typing/parmatch.ml[1043,35334+12]..[1045,35411+67])
                                      Pexp_ifthenelse
                                      expression (typing/parmatch.ml[1043,35334+15]..[1043,35334+37])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1043,35334+15]..[1043,35334+23])
                                          Pexp_ident "List.mem" (typing/parmatch.ml[1043,35334+15]..[1043,35334+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1043,35334+24]..[1043,35334+25])
                                              Pexp_ident "l" (typing/parmatch.ml[1043,35334+24]..[1043,35334+25])
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1043,35334+26]..[1043,35334+37])
                                              Pexp_ident "all_lengths" (typing/parmatch.ml[1043,35334+26]..[1043,35334+37])
                                        ]
                                      expression (typing/parmatch.ml[1043,35334+43]..[1043,35334+59])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1043,35334+43]..[1043,35334+53])
                                          Pexp_ident "try_arrays" (typing/parmatch.ml[1043,35334+43]..[1043,35334+53])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1043,35334+54]..[1043,35334+59])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[1043,35334+56]..[1043,35334+57])
                                                Pexp_ident "+" (typing/parmatch.ml[1043,35334+56]..[1043,35334+57])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1043,35334+55]..[1043,35334+56])
                                                    Pexp_ident "l" (typing/parmatch.ml[1043,35334+55]..[1043,35334+56])
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1043,35334+57]..[1043,35334+58])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                        ]
                                      Some
                                        expression (typing/parmatch.ml[1045,35411+14]..[1045,35411+67])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[1045,35411+14]..[1045,35411+22])
                                            Pexp_ident "make_pat" (typing/parmatch.ml[1045,35411+14]..[1045,35411+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1045,35411+23]..[1045,35411+46])
                                                Pexp_construct "Tpat_array" (typing/parmatch.ml[1045,35411+24]..[1045,35411+34])
                                                Some
                                                  expression (typing/parmatch.ml[1045,35411+35]..[1045,35411+45])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1045,35411+36]..[1045,35411+42])
                                                      Pexp_ident "omegas" (typing/parmatch.ml[1045,35411+36]..[1045,35411+42])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1045,35411+43]..[1045,35411+44])
                                                          Pexp_ident "l" (typing/parmatch.ml[1045,35411+43]..[1045,35411+44])
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1045,35411+47]..[1045,35411+57])
                                                Pexp_field
                                                expression (typing/parmatch.ml[1045,35411+47]..[1045,35411+48])
                                                  Pexp_ident "d" (typing/parmatch.ml[1045,35411+47]..[1045,35411+48])
                                                "pat_type" (typing/parmatch.ml[1045,35411+49]..[1045,35411+57])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1045,35411+58]..[1045,35411+67])
                                                Pexp_field
                                                expression (typing/parmatch.ml[1045,35411+58]..[1045,35411+59])
                                                  Pexp_ident "d" (typing/parmatch.ml[1045,35411+58]..[1045,35411+59])
                                                "pat_env" (typing/parmatch.ml[1045,35411+60]..[1045,35411+67])
                                          ]
                              ]
                              expression (typing/parmatch.ml[1046,35482+10]..[1046,35482+22])
                                Pexp_apply
                                expression (typing/parmatch.ml[1046,35482+10]..[1046,35482+20])
                                  Pexp_ident "try_arrays" (typing/parmatch.ml[1046,35482+10]..[1046,35482+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1046,35482+21]..[1046,35482+22])
                                      Pexp_constant PConst_int (0,None)
                                ]
                        <case>
                          pattern (typing/parmatch.ml[1047,35505+8]..[1047,35505+9])
                            Ppat_any
                          expression (typing/parmatch.ml[1047,35505+13]..[1047,35505+27])
                            Pexp_ident "Patterns.omega" (typing/parmatch.ml[1047,35505+13]..[1047,35505+27])
                      ]
              ]
    ]
  structure_item (typing/parmatch.ml[1049,35534+0]..[1062,36087+49])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[1049,35534+8]..[1049,35534+20])
          Ppat_var "has_instance" (typing/parmatch.ml[1049,35534+8]..[1049,35534+20])
        expression (typing/parmatch.ml[1049,35534+21]..[1058,36020+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1049,35534+21]..[1049,35534+22])
            Ppat_var "p" (typing/parmatch.ml[1049,35534+21]..[1049,35534+22])
          expression (typing/parmatch.ml[1049,35534+25]..[1058,36020+21])
            Pexp_match
            expression (typing/parmatch.ml[1049,35534+31]..[1049,35534+41])
              Pexp_field
              expression (typing/parmatch.ml[1049,35534+31]..[1049,35534+32])
                Pexp_ident "p" (typing/parmatch.ml[1049,35534+31]..[1049,35534+32])
              "pat_desc" (typing/parmatch.ml[1049,35534+33]..[1049,35534+41])
            [
              <case>
                pattern (typing/parmatch.ml[1050,35581+4]..[1050,35581+24])
                  Ppat_construct "Tpat_variant" (typing/parmatch.ml[1050,35581+4]..[1050,35581+16])
                  Some
                    []
                    pattern (typing/parmatch.ml[1050,35581+17]..[1050,35581+24])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[1050,35581+18]..[1050,35581+19])
                          Ppat_var "l" (typing/parmatch.ml[1050,35581+18]..[1050,35581+19])
                        pattern (typing/parmatch.ml[1050,35581+20]..[1050,35581+21])
                          Ppat_any
                        pattern (typing/parmatch.ml[1050,35581+22]..[1050,35581+23])
                          Ppat_var "r" (typing/parmatch.ml[1050,35581+22]..[1050,35581+23])
                      ]
                <when>
                  expression (typing/parmatch.ml[1050,35581+30]..[1050,35581+43])
                    Pexp_apply
                    expression (typing/parmatch.ml[1050,35581+30]..[1050,35581+39])
                      Pexp_ident "is_absent" (typing/parmatch.ml[1050,35581+30]..[1050,35581+39])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1050,35581+40]..[1050,35581+41])
                          Pexp_ident "l" (typing/parmatch.ml[1050,35581+40]..[1050,35581+41])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1050,35581+42]..[1050,35581+43])
                          Pexp_ident "r" (typing/parmatch.ml[1050,35581+42]..[1050,35581+43])
                    ]
                expression (typing/parmatch.ml[1050,35581+47]..[1050,35581+52])
                  Pexp_construct "false" (typing/parmatch.ml[1050,35581+47]..[1050,35581+52])
                  None
              <case>
                pattern (typing/parmatch.ml[1051,35634+4]..[1051,35634+69])
                  Ppat_or
                  pattern (typing/parmatch.ml[1051,35634+4]..[1051,35634+43])
                    Ppat_or
                    pattern (typing/parmatch.ml[1051,35634+4]..[1051,35634+25])
                      Ppat_or
                      pattern (typing/parmatch.ml[1051,35634+4]..[1051,35634+12])
                        Ppat_construct "Tpat_any" (typing/parmatch.ml[1051,35634+4]..[1051,35634+12])
                        None
                      pattern (typing/parmatch.ml[1051,35634+15]..[1051,35634+25])
                        Ppat_construct "Tpat_var" (typing/parmatch.ml[1051,35634+15]..[1051,35634+23])
                        Some
                          []
                          pattern (typing/parmatch.ml[1051,35634+24]..[1051,35634+25])
                            Ppat_any
                    pattern (typing/parmatch.ml[1051,35634+28]..[1051,35634+43])
                      Ppat_construct "Tpat_constant" (typing/parmatch.ml[1051,35634+28]..[1051,35634+41])
                      Some
                        []
                        pattern (typing/parmatch.ml[1051,35634+42]..[1051,35634+43])
                          Ppat_any
                  pattern (typing/parmatch.ml[1051,35634+46]..[1051,35634+69])
                    Ppat_construct "Tpat_variant" (typing/parmatch.ml[1051,35634+46]..[1051,35634+58])
                    Some
                      []
                      pattern (typing/parmatch.ml[1051,35634+59]..[1051,35634+69])
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[1051,35634+60]..[1051,35634+61])
                            Ppat_any
                          pattern (typing/parmatch.ml[1051,35634+62]..[1051,35634+66])
                            Ppat_construct "None" (typing/parmatch.ml[1051,35634+62]..[1051,35634+66])
                            None
                          pattern (typing/parmatch.ml[1051,35634+67]..[1051,35634+68])
                            Ppat_any
                        ]
                expression (typing/parmatch.ml[1051,35634+73]..[1051,35634+77])
                  Pexp_construct "true" (typing/parmatch.ml[1051,35634+73]..[1051,35634+77])
                  None
              <case>
                pattern (typing/parmatch.ml[1052,35712+4]..[1052,35712+50])
                  Ppat_or
                  pattern (typing/parmatch.ml[1052,35712+4]..[1052,35712+22])
                    Ppat_construct "Tpat_alias" (typing/parmatch.ml[1052,35712+4]..[1052,35712+14])
                    Some
                      []
                      pattern (typing/parmatch.ml[1052,35712+15]..[1052,35712+22])
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[1052,35712+16]..[1052,35712+17])
                            Ppat_var "p" (typing/parmatch.ml[1052,35712+16]..[1052,35712+17])
                          pattern (typing/parmatch.ml[1052,35712+18]..[1052,35712+19])
                            Ppat_any
                          pattern (typing/parmatch.ml[1052,35712+20]..[1052,35712+21])
                            Ppat_any
                        ]
                  pattern (typing/parmatch.ml[1052,35712+25]..[1052,35712+50])
                    Ppat_construct "Tpat_variant" (typing/parmatch.ml[1052,35712+25]..[1052,35712+37])
                    Some
                      []
                      pattern (typing/parmatch.ml[1052,35712+38]..[1052,35712+50])
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[1052,35712+39]..[1052,35712+40])
                            Ppat_any
                          pattern (typing/parmatch.ml[1052,35712+41]..[1052,35712+47])
                            Ppat_construct "Some" (typing/parmatch.ml[1052,35712+41]..[1052,35712+45])
                            Some
                              []
                              pattern (typing/parmatch.ml[1052,35712+46]..[1052,35712+47])
                                Ppat_var "p" (typing/parmatch.ml[1052,35712+46]..[1052,35712+47])
                          pattern (typing/parmatch.ml[1052,35712+48]..[1052,35712+49])
                            Ppat_any
                        ]
                expression (typing/parmatch.ml[1052,35712+54]..[1052,35712+68])
                  Pexp_apply
                  expression (typing/parmatch.ml[1052,35712+54]..[1052,35712+66])
                    Pexp_ident "has_instance" (typing/parmatch.ml[1052,35712+54]..[1052,35712+66])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[1052,35712+67]..[1052,35712+68])
                        Pexp_ident "p" (typing/parmatch.ml[1052,35712+67]..[1052,35712+68])
                  ]
              <case>
                pattern (typing/parmatch.ml[1053,35781+4]..[1053,35781+21])
                  Ppat_construct "Tpat_or" (typing/parmatch.ml[1053,35781+4]..[1053,35781+11])
                  Some
                    []
                    pattern (typing/parmatch.ml[1053,35781+12]..[1053,35781+21])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[1053,35781+13]..[1053,35781+15])
                          Ppat_var "p1" (typing/parmatch.ml[1053,35781+13]..[1053,35781+15])
                        pattern (typing/parmatch.ml[1053,35781+16]..[1053,35781+18])
                          Ppat_var "p2" (typing/parmatch.ml[1053,35781+16]..[1053,35781+18])
                        pattern (typing/parmatch.ml[1053,35781+19]..[1053,35781+20])
                          Ppat_any
                      ]
                expression (typing/parmatch.ml[1053,35781+25]..[1053,35781+59])
                  Pexp_apply
                  expression (typing/parmatch.ml[1053,35781+41]..[1053,35781+43])
                    Pexp_ident "||" (typing/parmatch.ml[1053,35781+41]..[1053,35781+43])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[1053,35781+25]..[1053,35781+40])
                        Pexp_apply
                        expression (typing/parmatch.ml[1053,35781+25]..[1053,35781+37])
                          Pexp_ident "has_instance" (typing/parmatch.ml[1053,35781+25]..[1053,35781+37])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1053,35781+38]..[1053,35781+40])
                              Pexp_ident "p1" (typing/parmatch.ml[1053,35781+38]..[1053,35781+40])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[1053,35781+44]..[1053,35781+59])
                        Pexp_apply
                        expression (typing/parmatch.ml[1053,35781+44]..[1053,35781+56])
                          Pexp_ident "has_instance" (typing/parmatch.ml[1053,35781+44]..[1053,35781+56])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1053,35781+57]..[1053,35781+59])
                              Pexp_ident "p2" (typing/parmatch.ml[1053,35781+57]..[1053,35781+59])
                        ]
                  ]
              <case>
                pattern (typing/parmatch.ml[1054,35841+4]..[1054,35841+61])
                  Ppat_or
                  pattern (typing/parmatch.ml[1054,35841+4]..[1054,35841+45])
                    Ppat_or
                    pattern (typing/parmatch.ml[1054,35841+4]..[1054,35841+29])
                      Ppat_construct "Tpat_construct" (typing/parmatch.ml[1054,35841+4]..[1054,35841+18])
                      Some
                        []
                        pattern (typing/parmatch.ml[1054,35841+19]..[1054,35841+29])
                          Ppat_tuple
                          [
                            pattern (typing/parmatch.ml[1054,35841+20]..[1054,35841+21])
                              Ppat_any
                            pattern (typing/parmatch.ml[1054,35841+22]..[1054,35841+23])
                              Ppat_any
                            pattern (typing/parmatch.ml[1054,35841+24]..[1054,35841+26])
                              Ppat_var "ps" (typing/parmatch.ml[1054,35841+24]..[1054,35841+26])
                            pattern (typing/parmatch.ml[1054,35841+27]..[1054,35841+28])
                              Ppat_any
                          ]
                    pattern (typing/parmatch.ml[1054,35841+32]..[1054,35841+45])
                      Ppat_construct "Tpat_tuple" (typing/parmatch.ml[1054,35841+32]..[1054,35841+42])
                      Some
                        []
                        pattern (typing/parmatch.ml[1054,35841+43]..[1054,35841+45])
                          Ppat_var "ps" (typing/parmatch.ml[1054,35841+43]..[1054,35841+45])
                  pattern (typing/parmatch.ml[1054,35841+48]..[1054,35841+61])
                    Ppat_construct "Tpat_array" (typing/parmatch.ml[1054,35841+48]..[1054,35841+58])
                    Some
                      []
                      pattern (typing/parmatch.ml[1054,35841+59]..[1054,35841+61])
                        Ppat_var "ps" (typing/parmatch.ml[1054,35841+59]..[1054,35841+61])
                expression (typing/parmatch.ml[1055,35906+6]..[1055,35906+22])
                  Pexp_apply
                  expression (typing/parmatch.ml[1055,35906+6]..[1055,35906+19])
                    Pexp_ident "has_instances" (typing/parmatch.ml[1055,35906+6]..[1055,35906+19])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[1055,35906+20]..[1055,35906+22])
                        Pexp_ident "ps" (typing/parmatch.ml[1055,35906+20]..[1055,35906+22])
                  ]
              <case>
                pattern (typing/parmatch.ml[1056,35929+4]..[1056,35929+23])
                  Ppat_construct "Tpat_record" (typing/parmatch.ml[1056,35929+4]..[1056,35929+15])
                  Some
                    []
                    pattern (typing/parmatch.ml[1056,35929+16]..[1056,35929+23])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[1056,35929+17]..[1056,35929+20])
                          Ppat_var "lps" (typing/parmatch.ml[1056,35929+17]..[1056,35929+20])
                        pattern (typing/parmatch.ml[1056,35929+21]..[1056,35929+22])
                          Ppat_any
                      ]
                expression (typing/parmatch.ml[1056,35929+27]..[1056,35929+74])
                  Pexp_apply
                  expression (typing/parmatch.ml[1056,35929+27]..[1056,35929+40])
                    Pexp_ident "has_instances" (typing/parmatch.ml[1056,35929+27]..[1056,35929+40])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[1056,35929+41]..[1056,35929+74])
                        Pexp_apply
                        expression (typing/parmatch.ml[1056,35929+42]..[1056,35929+50])
                          Pexp_ident "List.map" (typing/parmatch.ml[1056,35929+42]..[1056,35929+50])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1056,35929+51]..[1056,35929+69])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/parmatch.ml[1056,35929+56]..[1056,35929+63])
                                Ppat_tuple
                                [
                                  pattern (typing/parmatch.ml[1056,35929+57]..[1056,35929+58])
                                    Ppat_any
                                  pattern (typing/parmatch.ml[1056,35929+59]..[1056,35929+60])
                                    Ppat_any
                                  pattern (typing/parmatch.ml[1056,35929+61]..[1056,35929+62])
                                    Ppat_var "x" (typing/parmatch.ml[1056,35929+61]..[1056,35929+62])
                                ]
                              expression (typing/parmatch.ml[1056,35929+67]..[1056,35929+68])
                                Pexp_ident "x" (typing/parmatch.ml[1056,35929+67]..[1056,35929+68])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1056,35929+70]..[1056,35929+73])
                              Pexp_ident "lps" (typing/parmatch.ml[1056,35929+70]..[1056,35929+73])
                        ]
                  ]
              <case>
                pattern (typing/parmatch.ml[1057,36004+4]..[1057,36004+15])
                  Ppat_construct "Tpat_lazy" (typing/parmatch.ml[1057,36004+4]..[1057,36004+13])
                  Some
                    []
                    pattern (typing/parmatch.ml[1057,36004+14]..[1057,36004+15])
                      Ppat_var "p" (typing/parmatch.ml[1057,36004+14]..[1057,36004+15])
                expression (typing/parmatch.ml[1058,36020+7]..[1058,36020+21])
                  Pexp_apply
                  expression (typing/parmatch.ml[1058,36020+7]..[1058,36020+19])
                    Pexp_ident "has_instance" (typing/parmatch.ml[1058,36020+7]..[1058,36020+19])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[1058,36020+20]..[1058,36020+21])
                        Pexp_ident "p" (typing/parmatch.ml[1058,36020+20]..[1058,36020+21])
                  ]
            ]
      <def>
        pattern (typing/parmatch.ml[1060,36043+4]..[1060,36043+17])
          Ppat_var "has_instances" (typing/parmatch.ml[1060,36043+4]..[1060,36043+17])
        expression (typing/parmatch.ml[1060,36043+20]..[1062,36087+49])
          Pexp_function
          [
            <case>
              pattern (typing/parmatch.ml[1061,36072+4]..[1061,36072+6])
                Ppat_construct "[]" (typing/parmatch.ml[1061,36072+4]..[1061,36072+6])
                None
              expression (typing/parmatch.ml[1061,36072+10]..[1061,36072+14])
                Pexp_construct "true" (typing/parmatch.ml[1061,36072+10]..[1061,36072+14])
                None
            <case>
              pattern (typing/parmatch.ml[1062,36087+4]..[1062,36087+10])
                Ppat_construct "::" (typing/parmatch.ml[1062,36087+5]..[1062,36087+7])
                Some
                  []
                  pattern (typing/parmatch.ml[1062,36087+4]..[1062,36087+10]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1062,36087+4]..[1062,36087+5])
                        Ppat_var "q" (typing/parmatch.ml[1062,36087+4]..[1062,36087+5])
                      pattern (typing/parmatch.ml[1062,36087+7]..[1062,36087+10])
                        Ppat_var "rem" (typing/parmatch.ml[1062,36087+7]..[1062,36087+10])
                    ]
              expression (typing/parmatch.ml[1062,36087+14]..[1062,36087+49])
                Pexp_apply
                expression (typing/parmatch.ml[1062,36087+29]..[1062,36087+31])
                  Pexp_ident "&&" (typing/parmatch.ml[1062,36087+29]..[1062,36087+31])
                [
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[1062,36087+14]..[1062,36087+28])
                      Pexp_apply
                      expression (typing/parmatch.ml[1062,36087+14]..[1062,36087+26])
                        Pexp_ident "has_instance" (typing/parmatch.ml[1062,36087+14]..[1062,36087+26])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1062,36087+27]..[1062,36087+28])
                            Pexp_ident "q" (typing/parmatch.ml[1062,36087+27]..[1062,36087+28])
                      ]
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[1062,36087+32]..[1062,36087+49])
                      Pexp_apply
                      expression (typing/parmatch.ml[1062,36087+32]..[1062,36087+45])
                        Pexp_ident "has_instances" (typing/parmatch.ml[1062,36087+32]..[1062,36087+45])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1062,36087+46]..[1062,36087+49])
                            Pexp_ident "rem" (typing/parmatch.ml[1062,36087+46]..[1062,36087+49])
                      ]
                ]
          ]
    ]
  structure_item (typing/parmatch.ml[1087,37096+0]..[1125,38582+15])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[1087,37096+8]..[1087,37096+19])
          Ppat_var "satisfiable" (typing/parmatch.ml[1087,37096+8]..[1087,37096+19])
        expression (typing/parmatch.ml[1087,37096+20]..[1125,38582+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1087,37096+20]..[1087,37096+23])
            Ppat_var "pss" (typing/parmatch.ml[1087,37096+20]..[1087,37096+23])
          expression (typing/parmatch.ml[1087,37096+24]..[1125,38582+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1087,37096+24]..[1087,37096+26])
              Ppat_var "qs" (typing/parmatch.ml[1087,37096+24]..[1087,37096+26])
            expression (typing/parmatch.ml[1087,37096+29]..[1125,38582+15])
              Pexp_match
              expression (typing/parmatch.ml[1087,37096+35]..[1087,37096+38])
                Pexp_ident "pss" (typing/parmatch.ml[1087,37096+35]..[1087,37096+38])
              [
                <case>
                  pattern (typing/parmatch.ml[1088,37140+2]..[1088,37140+4])
                    Ppat_construct "[]" (typing/parmatch.ml[1088,37140+2]..[1088,37140+4])
                    None
                  expression (typing/parmatch.ml[1088,37140+8]..[1088,37140+24])
                    Pexp_apply
                    expression (typing/parmatch.ml[1088,37140+8]..[1088,37140+21])
                      Pexp_ident "has_instances" (typing/parmatch.ml[1088,37140+8]..[1088,37140+21])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1088,37140+22]..[1088,37140+24])
                          Pexp_ident "qs" (typing/parmatch.ml[1088,37140+22]..[1088,37140+24])
                    ]
                <case>
                  pattern (typing/parmatch.ml[1089,37165+2]..[1089,37165+3])
                    Ppat_any
                  expression (typing/parmatch.ml[1090,37173+4]..[1125,38582+15])
                    Pexp_match
                    expression (typing/parmatch.ml[1090,37173+10]..[1090,37173+12])
                      Pexp_ident "qs" (typing/parmatch.ml[1090,37173+10]..[1090,37173+12])
                    [
                      <case>
                        pattern (typing/parmatch.ml[1091,37191+6]..[1091,37191+8])
                          Ppat_construct "[]" (typing/parmatch.ml[1091,37191+6]..[1091,37191+8])
                          None
                        expression (typing/parmatch.ml[1091,37191+12]..[1091,37191+17])
                          Pexp_construct "false" (typing/parmatch.ml[1091,37191+12]..[1091,37191+17])
                          None
                      <case>
                        pattern (typing/parmatch.ml[1092,37209+6]..[1092,37209+11])
                          Ppat_construct "::" (typing/parmatch.ml[1092,37209+7]..[1092,37209+9])
                          Some
                            []
                            pattern (typing/parmatch.ml[1092,37209+6]..[1092,37209+11]) ghost
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[1092,37209+6]..[1092,37209+7])
                                  Ppat_var "q" (typing/parmatch.ml[1092,37209+6]..[1092,37209+7])
                                pattern (typing/parmatch.ml[1092,37209+9]..[1092,37209+11])
                                  Ppat_var "qs" (typing/parmatch.ml[1092,37209+9]..[1092,37209+11])
                              ]
                        expression (typing/parmatch.ml[1093,37224+7]..[1125,38582+15])
                          Pexp_match
                          expression (typing/parmatch.ml[1093,37224+13]..[1093,37224+61])
                            Pexp_field
                            expression (typing/parmatch.ml[1093,37224+13]..[1093,37224+52])
                              Pexp_open Fresh
                              module_expr (typing/parmatch.ml[1093,37224+13]..[1093,37224+29])
                                Pmod_ident "Patterns.General" (typing/parmatch.ml[1093,37224+13]..[1093,37224+29])
                              expression (typing/parmatch.ml[1093,37224+31]..[1093,37224+51])
                                Pexp_apply
                                expression (typing/parmatch.ml[1093,37224+38]..[1093,37224+40])
                                  Pexp_ident "|>" (typing/parmatch.ml[1093,37224+38]..[1093,37224+40])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1093,37224+31]..[1093,37224+37])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1093,37224+31]..[1093,37224+35])
                                        Pexp_ident "view" (typing/parmatch.ml[1093,37224+31]..[1093,37224+35])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1093,37224+36]..[1093,37224+37])
                                            Pexp_ident "q" (typing/parmatch.ml[1093,37224+36]..[1093,37224+37])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1093,37224+41]..[1093,37224+51])
                                      Pexp_ident "strip_vars" (typing/parmatch.ml[1093,37224+41]..[1093,37224+51])
                                ]
                            "pat_desc" (typing/parmatch.ml[1093,37224+53]..[1093,37224+61])
                          [
                            <case>
                              pattern (typing/parmatch.ml[1094,37291+9]..[1094,37291+21])
                                Ppat_variant "Or"
                                Some
                                  pattern (typing/parmatch.ml[1094,37291+12]..[1094,37291+21])
                                    Ppat_tuple
                                    [
                                      pattern (typing/parmatch.ml[1094,37291+13]..[1094,37291+15])
                                        Ppat_var "q1" (typing/parmatch.ml[1094,37291+13]..[1094,37291+15])
                                      pattern (typing/parmatch.ml[1094,37291+16]..[1094,37291+18])
                                        Ppat_var "q2" (typing/parmatch.ml[1094,37291+16]..[1094,37291+18])
                                      pattern (typing/parmatch.ml[1094,37291+19]..[1094,37291+20])
                                        Ppat_any
                                    ]
                              expression (typing/parmatch.ml[1095,37316+10]..[1095,37316+62])
                                Pexp_apply
                                expression (typing/parmatch.ml[1095,37316+35]..[1095,37316+37])
                                  Pexp_ident "||" (typing/parmatch.ml[1095,37316+35]..[1095,37316+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1095,37316+10]..[1095,37316+34])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1095,37316+10]..[1095,37316+21])
                                        Pexp_ident "satisfiable" (typing/parmatch.ml[1095,37316+10]..[1095,37316+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1095,37316+22]..[1095,37316+25])
                                            Pexp_ident "pss" (typing/parmatch.ml[1095,37316+22]..[1095,37316+25])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1095,37316+26]..[1095,37316+34])
                                            Pexp_construct "::" (typing/parmatch.ml[1095,37316+29]..[1095,37316+31])
                                            Some
                                              expression (typing/parmatch.ml[1095,37316+27]..[1095,37316+33]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (typing/parmatch.ml[1095,37316+27]..[1095,37316+29])
                                                    Pexp_ident "q1" (typing/parmatch.ml[1095,37316+27]..[1095,37316+29])
                                                  expression (typing/parmatch.ml[1095,37316+31]..[1095,37316+33])
                                                    Pexp_ident "qs" (typing/parmatch.ml[1095,37316+31]..[1095,37316+33])
                                                ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1095,37316+38]..[1095,37316+62])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1095,37316+38]..[1095,37316+49])
                                        Pexp_ident "satisfiable" (typing/parmatch.ml[1095,37316+38]..[1095,37316+49])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1095,37316+50]..[1095,37316+53])
                                            Pexp_ident "pss" (typing/parmatch.ml[1095,37316+50]..[1095,37316+53])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1095,37316+54]..[1095,37316+62])
                                            Pexp_construct "::" (typing/parmatch.ml[1095,37316+57]..[1095,37316+59])
                                            Some
                                              expression (typing/parmatch.ml[1095,37316+55]..[1095,37316+61]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (typing/parmatch.ml[1095,37316+55]..[1095,37316+57])
                                                    Pexp_ident "q2" (typing/parmatch.ml[1095,37316+55]..[1095,37316+57])
                                                  expression (typing/parmatch.ml[1095,37316+59]..[1095,37316+61])
                                                    Pexp_ident "qs" (typing/parmatch.ml[1095,37316+59]..[1095,37316+61])
                                                ]
                                      ]
                                ]
                            <case>
                              pattern (typing/parmatch.ml[1096,37379+9]..[1096,37379+13])
                                Ppat_variant "Any"
                                None
                              expression (typing/parmatch.ml[1097,37396+10]..[1113,38046+13])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/parmatch.ml[1097,37396+14]..[1097,37396+17])
                                      Ppat_var "pss" (typing/parmatch.ml[1097,37396+14]..[1097,37396+17])
                                    expression (typing/parmatch.ml[1097,37396+20]..[1097,37396+42])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1097,37396+20]..[1097,37396+38])
                                        Pexp_ident "simplify_first_col" (typing/parmatch.ml[1097,37396+20]..[1097,37396+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1097,37396+39]..[1097,37396+42])
                                            Pexp_ident "pss" (typing/parmatch.ml[1097,37396+39]..[1097,37396+42])
                                      ]
                                ]
                                expression (typing/parmatch.ml[1098,37442+10]..[1113,38046+13])
                                  Pexp_ifthenelse
                                  expression (typing/parmatch.ml[1098,37442+13]..[1098,37442+50])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1098,37442+13]..[1098,37442+16])
                                      Pexp_ident "not" (typing/parmatch.ml[1098,37442+13]..[1098,37442+16])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1098,37442+17]..[1098,37442+50])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[1098,37442+18]..[1098,37442+30])
                                            Pexp_ident "all_coherent" (typing/parmatch.ml[1098,37442+18]..[1098,37442+30])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1098,37442+31]..[1098,37442+49])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[1098,37442+32]..[1098,37442+44])
                                                  Pexp_ident "first_column" (typing/parmatch.ml[1098,37442+32]..[1098,37442+44])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1098,37442+45]..[1098,37442+48])
                                                      Pexp_ident "pss" (typing/parmatch.ml[1098,37442+45]..[1098,37442+48])
                                                ]
                                          ]
                                    ]
                                  expression (typing/parmatch.ml[1099,37498+12]..[1099,37498+17])
                                    Pexp_construct "false" (typing/parmatch.ml[1099,37498+12]..[1099,37498+17])
                                    None
                                  Some
                                    expression (typing/parmatch.ml[1100,37516+15]..[1113,38046+13])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/parmatch.ml[1101,37537+16]..[1101,37537+36])
                                            Ppat_record Closed
                                            [
                                              "default" (typing/parmatch.ml[1101,37537+18]..[1101,37537+25]) ghost
                                                pattern (typing/parmatch.ml[1101,37537+18]..[1101,37537+25])
                                                  Ppat_var "default" (typing/parmatch.ml[1101,37537+18]..[1101,37537+25])
                                              "constrs" (typing/parmatch.ml[1101,37537+27]..[1101,37537+34]) ghost
                                                pattern (typing/parmatch.ml[1101,37537+27]..[1101,37537+34])
                                                  Ppat_var "constrs" (typing/parmatch.ml[1101,37537+27]..[1101,37537+34])
                                            ]
                                          expression (typing/parmatch.ml[1102,37576+14]..[1103,37638+66])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/parmatch.ml[1102,37576+18]..[1102,37576+20])
                                                  Ppat_var "q0" (typing/parmatch.ml[1102,37576+18]..[1102,37576+20])
                                                expression (typing/parmatch.ml[1102,37576+23]..[1102,37576+58])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[1102,37576+23]..[1102,37576+32])
                                                    Pexp_ident "discr_pat" (typing/parmatch.ml[1102,37576+23]..[1102,37576+32])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1102,37576+33]..[1102,37576+54])
                                                        Pexp_ident "Patterns.Simple.omega" (typing/parmatch.ml[1102,37576+33]..[1102,37576+54])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1102,37576+55]..[1102,37576+58])
                                                        Pexp_ident "pss" (typing/parmatch.ml[1102,37576+55]..[1102,37576+58])
                                                  ]
                                            ]
                                            expression (typing/parmatch.ml[1103,37638+14]..[1103,37638+66])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[1103,37638+14]..[1103,37638+43])
                                                Pexp_ident "build_specialized_submatrices" (typing/parmatch.ml[1103,37638+14]..[1103,37638+43])
                                              [
                                                <arg>
                                                Labelled "extend_row"
                                                  expression (typing/parmatch.ml[1103,37638+56]..[1103,37638+59])
                                                    Pexp_ident "@" (typing/parmatch.ml[1103,37638+56]..[1103,37638+59])
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1103,37638+60]..[1103,37638+62])
                                                    Pexp_ident "q0" (typing/parmatch.ml[1103,37638+60]..[1103,37638+62])
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1103,37638+63]..[1103,37638+66])
                                                    Pexp_ident "pss" (typing/parmatch.ml[1103,37638+63]..[1103,37638+66])
                                              ]
                                      ]
                                      expression (typing/parmatch.ml[1104,37708+12]..[1112,38022+23])
                                        Pexp_ifthenelse
                                        expression (typing/parmatch.ml[1104,37708+15]..[1104,37708+45])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[1104,37708+15]..[1104,37708+18])
                                            Pexp_ident "not" (typing/parmatch.ml[1104,37708+15]..[1104,37708+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1104,37708+19]..[1104,37708+45])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[1104,37708+20]..[1104,37708+30])
                                                  Pexp_ident "full_match" (typing/parmatch.ml[1104,37708+20]..[1104,37708+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1104,37708+31]..[1104,37708+36])
                                                      Pexp_construct "false" (typing/parmatch.ml[1104,37708+31]..[1104,37708+36])
                                                      None
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1104,37708+37]..[1104,37708+44])
                                                      Pexp_ident "constrs" (typing/parmatch.ml[1104,37708+37]..[1104,37708+44])
                                                ]
                                          ]
                                        expression (typing/parmatch.ml[1105,37759+14]..[1105,37759+36])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[1105,37759+14]..[1105,37759+25])
                                            Pexp_ident "satisfiable" (typing/parmatch.ml[1105,37759+14]..[1105,37759+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1105,37759+26]..[1105,37759+33])
                                                Pexp_ident "default" (typing/parmatch.ml[1105,37759+26]..[1105,37759+33])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1105,37759+34]..[1105,37759+36])
                                                Pexp_ident "qs" (typing/parmatch.ml[1105,37759+34]..[1105,37759+36])
                                          ]
                                        Some
                                          expression (typing/parmatch.ml[1107,37813+14]..[1112,38022+23])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[1107,37813+14]..[1107,37813+25])
                                              Pexp_ident "List.exists" (typing/parmatch.ml[1107,37813+14]..[1107,37813+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1108,37839+16]..[1111,37950+71])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (typing/parmatch.ml[1108,37839+21]..[1108,37839+28])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/parmatch.ml[1108,37839+22]..[1108,37839+23])
                                                        Ppat_var "p" (typing/parmatch.ml[1108,37839+22]..[1108,37839+23])
                                                      pattern (typing/parmatch.ml[1108,37839+24]..[1108,37839+27])
                                                        Ppat_var "pss" (typing/parmatch.ml[1108,37839+24]..[1108,37839+27])
                                                    ]
                                                  expression (typing/parmatch.ml[1109,37871+19]..[1111,37950+70])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1109,37871+41]..[1109,37871+43])
                                                      Pexp_ident "&&" (typing/parmatch.ml[1109,37871+41]..[1109,37871+43])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1109,37871+19]..[1109,37871+40])
                                                          Pexp_apply
                                                          expression (typing/parmatch.ml[1109,37871+19]..[1109,37871+22])
                                                            Pexp_ident "not" (typing/parmatch.ml[1109,37871+19]..[1109,37871+22])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/parmatch.ml[1109,37871+23]..[1109,37871+40])
                                                                Pexp_apply
                                                                expression (typing/parmatch.ml[1109,37871+24]..[1109,37871+37])
                                                                  Pexp_ident "is_absent_pat" (typing/parmatch.ml[1109,37871+24]..[1109,37871+37])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/parmatch.ml[1109,37871+38]..[1109,37871+39])
                                                                      Pexp_ident "p" (typing/parmatch.ml[1109,37871+38]..[1109,37871+39])
                                                                ]
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1110,37915+19]..[1111,37950+70])
                                                          Pexp_apply
                                                          expression (typing/parmatch.ml[1110,37915+19]..[1110,37915+30])
                                                            Pexp_ident "satisfiable" (typing/parmatch.ml[1110,37915+19]..[1110,37915+30])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/parmatch.ml[1110,37915+31]..[1110,37915+34])
                                                                Pexp_ident "pss" (typing/parmatch.ml[1110,37915+31]..[1110,37915+34])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/parmatch.ml[1111,37950+21]..[1111,37950+70])
                                                                Pexp_apply
                                                                expression (typing/parmatch.ml[1111,37950+65]..[1111,37950+66])
                                                                  Pexp_ident "@" (typing/parmatch.ml[1111,37950+65]..[1111,37950+66])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/parmatch.ml[1111,37950+22]..[1111,37950+64])
                                                                      Pexp_apply
                                                                      expression (typing/parmatch.ml[1111,37950+22]..[1111,37950+39])
Pexp_ident "simple_match_args" (typing/parmatch.ml[1111,37950+22]..[1111,37950+39])
                                                                      [
<arg>
Nolabel
  expression (typing/parmatch.ml[1111,37950+40]..[1111,37950+41])
    Pexp_ident "p" (typing/parmatch.ml[1111,37950+40]..[1111,37950+41])
<arg>
Nolabel
  expression (typing/parmatch.ml[1111,37950+42]..[1111,37950+61])
    Pexp_ident "Patterns.Head.omega" (typing/parmatch.ml[1111,37950+42]..[1111,37950+61])
<arg>
Nolabel
  expression (typing/parmatch.ml[1111,37950+62]..[1111,37950+64])
    Pexp_construct "[]" (typing/parmatch.ml[1111,37950+62]..[1111,37950+64])
    None
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/parmatch.ml[1111,37950+67]..[1111,37950+69])
                                                                      Pexp_ident "qs" (typing/parmatch.ml[1111,37950+67]..[1111,37950+69])
                                                                ]
                                                          ]
                                                    ]
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1112,38022+16]..[1112,38022+23])
                                                  Pexp_ident "constrs" (typing/parmatch.ml[1112,38022+16]..[1112,38022+23])
                                            ]
                            <case>
                              pattern (typing/parmatch.ml[1114,38060+9]..[1114,38060+25])
                                Ppat_variant "Variant"
                                Some
                                  pattern (typing/parmatch.ml[1114,38060+18]..[1114,38060+25])
                                    Ppat_tuple
                                    [
                                      pattern (typing/parmatch.ml[1114,38060+19]..[1114,38060+20])
                                        Ppat_var "l" (typing/parmatch.ml[1114,38060+19]..[1114,38060+20])
                                      pattern (typing/parmatch.ml[1114,38060+21]..[1114,38060+22])
                                        Ppat_any
                                      pattern (typing/parmatch.ml[1114,38060+23]..[1114,38060+24])
                                        Ppat_var "r" (typing/parmatch.ml[1114,38060+23]..[1114,38060+24])
                                    ]
                              <when>
                                expression (typing/parmatch.ml[1114,38060+31]..[1114,38060+44])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1114,38060+31]..[1114,38060+40])
                                    Pexp_ident "is_absent" (typing/parmatch.ml[1114,38060+31]..[1114,38060+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1114,38060+41]..[1114,38060+42])
                                        Pexp_ident "l" (typing/parmatch.ml[1114,38060+41]..[1114,38060+42])
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1114,38060+43]..[1114,38060+44])
                                        Pexp_ident "r" (typing/parmatch.ml[1114,38060+43]..[1114,38060+44])
                                  ]
                              expression (typing/parmatch.ml[1114,38060+48]..[1114,38060+53])
                                Pexp_construct "false" (typing/parmatch.ml[1114,38060+48]..[1114,38060+53])
                                None
                            <case>
                              pattern (typing/parmatch.ml[1115,38114+9]..[1115,38114+38])
                                Ppat_alias "view" (typing/parmatch.ml[1115,38114+34]..[1115,38114+38])
                                pattern (typing/parmatch.ml[1115,38114+9]..[1115,38114+30])
                                  Ppat_type
                                  "Patterns.Simple.view" (typing/parmatch.ml[1115,38114+10]..[1115,38114+30])
                              expression (typing/parmatch.ml[1116,38156+10]..[1125,38582+15])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/parmatch.ml[1116,38156+14]..[1116,38156+15])
                                      Ppat_var "q" (typing/parmatch.ml[1116,38156+14]..[1116,38156+15])
                                    expression (typing/parmatch.ml[1116,38156+18]..[1116,38156+44])
                                      Pexp_record
                                      [
                                        "pat_desc" (typing/parmatch.ml[1116,38156+27]..[1116,38156+35])
                                          expression (typing/parmatch.ml[1116,38156+38]..[1116,38156+42])
                                            Pexp_ident "view" (typing/parmatch.ml[1116,38156+38]..[1116,38156+42])
                                      ]
                                      Some
                                        expression (typing/parmatch.ml[1116,38156+20]..[1116,38156+21])
                                          Pexp_ident "q" (typing/parmatch.ml[1116,38156+20]..[1116,38156+21])
                                ]
                                expression (typing/parmatch.ml[1117,38204+10]..[1125,38582+15])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/parmatch.ml[1117,38204+14]..[1117,38204+17])
                                        Ppat_var "pss" (typing/parmatch.ml[1117,38204+14]..[1117,38204+17])
                                      expression (typing/parmatch.ml[1117,38204+20]..[1117,38204+42])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1117,38204+20]..[1117,38204+38])
                                          Pexp_ident "simplify_first_col" (typing/parmatch.ml[1117,38204+20]..[1117,38204+38])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1117,38204+39]..[1117,38204+42])
                                              Pexp_ident "pss" (typing/parmatch.ml[1117,38204+39]..[1117,38204+42])
                                        ]
                                  ]
                                  expression (typing/parmatch.ml[1118,38250+10]..[1125,38582+15])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/parmatch.ml[1118,38250+14]..[1118,38250+23])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[1118,38250+14]..[1118,38250+16])
                                              Ppat_var "hq" (typing/parmatch.ml[1118,38250+14]..[1118,38250+16])
                                            pattern (typing/parmatch.ml[1118,38250+18]..[1118,38250+23])
                                              Ppat_var "qargs" (typing/parmatch.ml[1118,38250+18]..[1118,38250+23])
                                          ]
                                        expression (typing/parmatch.ml[1118,38250+26]..[1118,38250+53])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[1118,38250+26]..[1118,38250+51])
                                            Pexp_ident "Patterns.Head.deconstruct" (typing/parmatch.ml[1118,38250+26]..[1118,38250+51])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1118,38250+52]..[1118,38250+53])
                                                Pexp_ident "q" (typing/parmatch.ml[1118,38250+52]..[1118,38250+53])
                                          ]
                                    ]
                                    expression (typing/parmatch.ml[1119,38307+10]..[1125,38582+15])
                                      Pexp_ifthenelse
                                      expression (typing/parmatch.ml[1119,38307+13]..[1119,38307+56])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1119,38307+13]..[1119,38307+16])
                                          Pexp_ident "not" (typing/parmatch.ml[1119,38307+13]..[1119,38307+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1119,38307+17]..[1119,38307+56])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[1119,38307+18]..[1119,38307+30])
                                                Pexp_ident "all_coherent" (typing/parmatch.ml[1119,38307+18]..[1119,38307+30])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1119,38307+31]..[1119,38307+55])
                                                    Pexp_construct "::" (typing/parmatch.ml[1119,38307+35]..[1119,38307+37])
                                                    Some
                                                      expression (typing/parmatch.ml[1119,38307+32]..[1119,38307+54]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/parmatch.ml[1119,38307+32]..[1119,38307+34])
                                                            Pexp_ident "hq" (typing/parmatch.ml[1119,38307+32]..[1119,38307+34])
                                                          expression (typing/parmatch.ml[1119,38307+38]..[1119,38307+54])
                                                            Pexp_apply
                                                            expression (typing/parmatch.ml[1119,38307+38]..[1119,38307+50])
                                                              Pexp_ident "first_column" (typing/parmatch.ml[1119,38307+38]..[1119,38307+50])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[1119,38307+51]..[1119,38307+54])
                                                                  Pexp_ident "pss" (typing/parmatch.ml[1119,38307+51]..[1119,38307+54])
                                                            ]
                                                        ]
                                              ]
                                        ]
                                      expression (typing/parmatch.ml[1120,38369+12]..[1120,38369+17])
                                        Pexp_construct "false" (typing/parmatch.ml[1120,38369+12]..[1120,38369+17])
                                        None
                                      Some
                                        expression (typing/parmatch.ml[1121,38387+15]..[1125,38582+15])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/parmatch.ml[1122,38408+18]..[1122,38408+20])
                                                Ppat_var "q0" (typing/parmatch.ml[1122,38408+18]..[1122,38408+20])
                                              expression (typing/parmatch.ml[1122,38408+23]..[1122,38408+38])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[1122,38408+23]..[1122,38408+32])
                                                  Pexp_ident "discr_pat" (typing/parmatch.ml[1122,38408+23]..[1122,38408+32])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1122,38408+33]..[1122,38408+34])
                                                      Pexp_ident "q" (typing/parmatch.ml[1122,38408+33]..[1122,38408+34])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1122,38408+35]..[1122,38408+38])
                                                      Pexp_ident "pss" (typing/parmatch.ml[1122,38408+35]..[1122,38408+38])
                                                ]
                                          ]
                                          expression (typing/parmatch.ml[1123,38450+14]..[1124,38529+52])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[1123,38450+14]..[1123,38450+25])
                                              Pexp_ident "satisfiable" (typing/parmatch.ml[1123,38450+14]..[1123,38450+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1123,38450+26]..[1123,38450+78])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[1123,38450+27]..[1123,38450+54])
                                                    Pexp_ident "build_specialized_submatrix" (typing/parmatch.ml[1123,38450+27]..[1123,38450+54])
                                                  [
                                                    <arg>
                                                    Labelled "extend_row"
                                                      expression (typing/parmatch.ml[1123,38450+67]..[1123,38450+70])
                                                        Pexp_ident "@" (typing/parmatch.ml[1123,38450+67]..[1123,38450+70])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1123,38450+71]..[1123,38450+73])
                                                        Pexp_ident "q0" (typing/parmatch.ml[1123,38450+71]..[1123,38450+73])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1123,38450+74]..[1123,38450+77])
                                                        Pexp_ident "pss" (typing/parmatch.ml[1123,38450+74]..[1123,38450+77])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1124,38529+16]..[1124,38529+52])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[1124,38529+47]..[1124,38529+48])
                                                    Pexp_ident "@" (typing/parmatch.ml[1124,38529+47]..[1124,38529+48])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1124,38529+17]..[1124,38529+46])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[1124,38529+17]..[1124,38529+34])
                                                          Pexp_ident "simple_match_args" (typing/parmatch.ml[1124,38529+17]..[1124,38529+34])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1124,38529+35]..[1124,38529+37])
                                                              Pexp_ident "q0" (typing/parmatch.ml[1124,38529+35]..[1124,38529+37])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1124,38529+38]..[1124,38529+40])
                                                              Pexp_ident "hq" (typing/parmatch.ml[1124,38529+38]..[1124,38529+40])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1124,38529+41]..[1124,38529+46])
                                                              Pexp_ident "qargs" (typing/parmatch.ml[1124,38529+41]..[1124,38529+46])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1124,38529+49]..[1124,38529+51])
                                                        Pexp_ident "qs" (typing/parmatch.ml[1124,38529+49]..[1124,38529+51])
                                                  ]
                                            ]
                          ]
                    ]
              ]
    ]
  structure_item (typing/parmatch.ml[1137,39028+0]..[1202,41808+13])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[1137,39028+8]..[1137,39028+31])
          Ppat_var "list_satisfying_vectors" (typing/parmatch.ml[1137,39028+8]..[1137,39028+31])
        expression (typing/parmatch.ml[1137,39028+32]..[1202,41808+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1137,39028+32]..[1137,39028+35])
            Ppat_var "pss" (typing/parmatch.ml[1137,39028+32]..[1137,39028+35])
          expression (typing/parmatch.ml[1137,39028+36]..[1202,41808+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1137,39028+36]..[1137,39028+38])
              Ppat_var "qs" (typing/parmatch.ml[1137,39028+36]..[1137,39028+38])
            expression (typing/parmatch.ml[1138,39069+2]..[1202,41808+13])
              Pexp_match
              expression (typing/parmatch.ml[1138,39069+8]..[1138,39069+11])
                Pexp_ident "pss" (typing/parmatch.ml[1138,39069+8]..[1138,39069+11])
              [
                <case>
                  pattern (typing/parmatch.ml[1139,39086+4]..[1139,39086+6])
                    Ppat_construct "[]" (typing/parmatch.ml[1139,39086+4]..[1139,39086+6])
                    None
                  expression (typing/parmatch.ml[1139,39086+10]..[1139,39086+47])
                    Pexp_ifthenelse
                    expression (typing/parmatch.ml[1139,39086+13]..[1139,39086+29])
                      Pexp_apply
                      expression (typing/parmatch.ml[1139,39086+13]..[1139,39086+26])
                        Pexp_ident "has_instances" (typing/parmatch.ml[1139,39086+13]..[1139,39086+26])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1139,39086+27]..[1139,39086+29])
                            Pexp_ident "qs" (typing/parmatch.ml[1139,39086+27]..[1139,39086+29])
                      ]
                    expression (typing/parmatch.ml[1139,39086+35]..[1139,39086+39])
                      Pexp_construct "::" (typing/parmatch.ml[1139,39086+36]..[1139,39086+39]) ghost
                      Some
                        expression (typing/parmatch.ml[1139,39086+36]..[1139,39086+39]) ghost
                          Pexp_tuple
                          [
                            expression (typing/parmatch.ml[1139,39086+36]..[1139,39086+38])
                              Pexp_ident "qs" (typing/parmatch.ml[1139,39086+36]..[1139,39086+38])
                            expression (typing/parmatch.ml[1139,39086+38]..[1139,39086+39]) ghost
                              Pexp_construct "[]" (typing/parmatch.ml[1139,39086+38]..[1139,39086+39]) ghost
                              None
                          ]
                    Some
                      expression (typing/parmatch.ml[1139,39086+45]..[1139,39086+47])
                        Pexp_construct "[]" (typing/parmatch.ml[1139,39086+45]..[1139,39086+47])
                        None
                <case>
                  pattern (typing/parmatch.ml[1140,39134+4]..[1140,39134+5])
                    Ppat_any
                  expression (typing/parmatch.ml[1141,39144+6]..[1202,41808+13])
                    Pexp_match
                    expression (typing/parmatch.ml[1141,39144+12]..[1141,39144+14])
                      Pexp_ident "qs" (typing/parmatch.ml[1141,39144+12]..[1141,39144+14])
                    [
                      <case>
                        pattern (typing/parmatch.ml[1142,39164+8]..[1142,39164+10])
                          Ppat_construct "[]" (typing/parmatch.ml[1142,39164+8]..[1142,39164+10])
                          None
                        expression (typing/parmatch.ml[1142,39164+14]..[1142,39164+16])
                          Pexp_construct "[]" (typing/parmatch.ml[1142,39164+14]..[1142,39164+16])
                          None
                      <case>
                        pattern (typing/parmatch.ml[1143,39181+8]..[1143,39181+15])
                          Ppat_construct "::" (typing/parmatch.ml[1143,39181+10]..[1143,39181+12])
                          Some
                            []
                            pattern (typing/parmatch.ml[1143,39181+8]..[1143,39181+15]) ghost
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[1143,39181+8]..[1143,39181+9])
                                  Ppat_var "q" (typing/parmatch.ml[1143,39181+8]..[1143,39181+9])
                                pattern (typing/parmatch.ml[1143,39181+13]..[1143,39181+15])
                                  Ppat_var "qs" (typing/parmatch.ml[1143,39181+13]..[1143,39181+15])
                              ]
                        expression (typing/parmatch.ml[1144,39200+9]..[1202,41808+13])
                          Pexp_match
                          expression (typing/parmatch.ml[1144,39200+15]..[1144,39200+63])
                            Pexp_field
                            expression (typing/parmatch.ml[1144,39200+15]..[1144,39200+54])
                              Pexp_open Fresh
                              module_expr (typing/parmatch.ml[1144,39200+15]..[1144,39200+31])
                                Pmod_ident "Patterns.General" (typing/parmatch.ml[1144,39200+15]..[1144,39200+31])
                              expression (typing/parmatch.ml[1144,39200+33]..[1144,39200+53])
                                Pexp_apply
                                expression (typing/parmatch.ml[1144,39200+40]..[1144,39200+42])
                                  Pexp_ident "|>" (typing/parmatch.ml[1144,39200+40]..[1144,39200+42])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1144,39200+33]..[1144,39200+39])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1144,39200+33]..[1144,39200+37])
                                        Pexp_ident "view" (typing/parmatch.ml[1144,39200+33]..[1144,39200+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1144,39200+38]..[1144,39200+39])
                                            Pexp_ident "q" (typing/parmatch.ml[1144,39200+38]..[1144,39200+39])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1144,39200+43]..[1144,39200+53])
                                      Pexp_ident "strip_vars" (typing/parmatch.ml[1144,39200+43]..[1144,39200+53])
                                ]
                            "pat_desc" (typing/parmatch.ml[1144,39200+55]..[1144,39200+63])
                          [
                            <case>
                              pattern (typing/parmatch.ml[1145,39269+11]..[1145,39269+23])
                                Ppat_variant "Or"
                                Some
                                  pattern (typing/parmatch.ml[1145,39269+14]..[1145,39269+23])
                                    Ppat_tuple
                                    [
                                      pattern (typing/parmatch.ml[1145,39269+15]..[1145,39269+17])
                                        Ppat_var "q1" (typing/parmatch.ml[1145,39269+15]..[1145,39269+17])
                                      pattern (typing/parmatch.ml[1145,39269+18]..[1145,39269+20])
                                        Ppat_var "q2" (typing/parmatch.ml[1145,39269+18]..[1145,39269+20])
                                      pattern (typing/parmatch.ml[1145,39269+21]..[1145,39269+22])
                                        Ppat_any
                                    ]
                              expression (typing/parmatch.ml[1146,39296+12]..[1147,39347+48])
                                Pexp_apply
                                expression (typing/parmatch.ml[1146,39296+49]..[1146,39296+50])
                                  Pexp_ident "@" (typing/parmatch.ml[1146,39296+49]..[1146,39296+50])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1146,39296+12]..[1146,39296+48])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1146,39296+12]..[1146,39296+35])
                                        Pexp_ident "list_satisfying_vectors" (typing/parmatch.ml[1146,39296+12]..[1146,39296+35])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1146,39296+36]..[1146,39296+39])
                                            Pexp_ident "pss" (typing/parmatch.ml[1146,39296+36]..[1146,39296+39])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1146,39296+40]..[1146,39296+48])
                                            Pexp_construct "::" (typing/parmatch.ml[1146,39296+43]..[1146,39296+45])
                                            Some
                                              expression (typing/parmatch.ml[1146,39296+41]..[1146,39296+47]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (typing/parmatch.ml[1146,39296+41]..[1146,39296+43])
                                                    Pexp_ident "q1" (typing/parmatch.ml[1146,39296+41]..[1146,39296+43])
                                                  expression (typing/parmatch.ml[1146,39296+45]..[1146,39296+47])
                                                    Pexp_ident "qs" (typing/parmatch.ml[1146,39296+45]..[1146,39296+47])
                                                ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1147,39347+12]..[1147,39347+48])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1147,39347+12]..[1147,39347+35])
                                        Pexp_ident "list_satisfying_vectors" (typing/parmatch.ml[1147,39347+12]..[1147,39347+35])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1147,39347+36]..[1147,39347+39])
                                            Pexp_ident "pss" (typing/parmatch.ml[1147,39347+36]..[1147,39347+39])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1147,39347+40]..[1147,39347+48])
                                            Pexp_construct "::" (typing/parmatch.ml[1147,39347+43]..[1147,39347+45])
                                            Some
                                              expression (typing/parmatch.ml[1147,39347+41]..[1147,39347+47]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (typing/parmatch.ml[1147,39347+41]..[1147,39347+43])
                                                    Pexp_ident "q2" (typing/parmatch.ml[1147,39347+41]..[1147,39347+43])
                                                  expression (typing/parmatch.ml[1147,39347+45]..[1147,39347+47])
                                                    Pexp_ident "qs" (typing/parmatch.ml[1147,39347+45]..[1147,39347+47])
                                                ]
                                      ]
                                ]
                            <case>
                              pattern (typing/parmatch.ml[1148,39396+11]..[1148,39396+15])
                                Ppat_variant "Any"
                                None
                              expression (typing/parmatch.ml[1149,39415+12]..[1188,41180+13])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/parmatch.ml[1149,39415+16]..[1149,39415+19])
                                      Ppat_var "pss" (typing/parmatch.ml[1149,39415+16]..[1149,39415+19])
                                    expression (typing/parmatch.ml[1149,39415+22]..[1149,39415+44])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1149,39415+22]..[1149,39415+40])
                                        Pexp_ident "simplify_first_col" (typing/parmatch.ml[1149,39415+22]..[1149,39415+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1149,39415+41]..[1149,39415+44])
                                            Pexp_ident "pss" (typing/parmatch.ml[1149,39415+41]..[1149,39415+44])
                                      ]
                                ]
                                expression (typing/parmatch.ml[1150,39463+12]..[1188,41180+13])
                                  Pexp_ifthenelse
                                  expression (typing/parmatch.ml[1150,39463+15]..[1150,39463+52])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1150,39463+15]..[1150,39463+18])
                                      Pexp_ident "not" (typing/parmatch.ml[1150,39463+15]..[1150,39463+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1150,39463+19]..[1150,39463+52])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[1150,39463+20]..[1150,39463+32])
                                            Pexp_ident "all_coherent" (typing/parmatch.ml[1150,39463+20]..[1150,39463+32])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1150,39463+33]..[1150,39463+51])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[1150,39463+34]..[1150,39463+46])
                                                  Pexp_ident "first_column" (typing/parmatch.ml[1150,39463+34]..[1150,39463+46])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1150,39463+47]..[1150,39463+50])
                                                      Pexp_ident "pss" (typing/parmatch.ml[1150,39463+47]..[1150,39463+50])
                                                ]
                                          ]
                                    ]
                                  expression (typing/parmatch.ml[1151,39521+14]..[1151,39521+16])
                                    Pexp_construct "[]" (typing/parmatch.ml[1151,39521+14]..[1151,39521+16])
                                    None
                                  Some
                                    expression (typing/parmatch.ml[1152,39538+17]..[1188,41180+13])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/parmatch.ml[1153,39561+18]..[1153,39561+20])
                                            Ppat_var "q0" (typing/parmatch.ml[1153,39561+18]..[1153,39561+20])
                                          expression (typing/parmatch.ml[1153,39561+23]..[1153,39561+58])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[1153,39561+23]..[1153,39561+32])
                                              Pexp_ident "discr_pat" (typing/parmatch.ml[1153,39561+23]..[1153,39561+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1153,39561+33]..[1153,39561+54])
                                                  Pexp_ident "Patterns.Simple.omega" (typing/parmatch.ml[1153,39561+33]..[1153,39561+54])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1153,39561+55]..[1153,39561+58])
                                                  Pexp_ident "pss" (typing/parmatch.ml[1153,39561+55]..[1153,39561+58])
                                            ]
                                      ]
                                      expression (typing/parmatch.ml[1154,39623+14]..[1187,41158+21])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/parmatch.ml[1154,39623+18]..[1154,39623+22])
                                              Ppat_var "wild" (typing/parmatch.ml[1154,39623+18]..[1154,39623+22])
                                            expression (typing/parmatch.ml[1154,39623+23]..[1156,39708+61]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (typing/parmatch.ml[1154,39623+23]..[1154,39623+37])
                                                Ppat_var "default_matrix" (typing/parmatch.ml[1154,39623+23]..[1154,39623+37])
                                              expression (typing/parmatch.ml[1154,39623+38]..[1156,39708+61]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (typing/parmatch.ml[1154,39623+38]..[1154,39623+39])
                                                  Ppat_var "p" (typing/parmatch.ml[1154,39623+38]..[1154,39623+39])
                                                expression (typing/parmatch.ml[1155,39665+16]..[1156,39708+61])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[1155,39665+16]..[1155,39665+24])
                                                    Pexp_ident "List.map" (typing/parmatch.ml[1155,39665+16]..[1155,39665+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1155,39665+25]..[1155,39665+42])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (typing/parmatch.ml[1155,39665+30]..[1155,39665+32])
                                                          Ppat_var "qs" (typing/parmatch.ml[1155,39665+30]..[1155,39665+32])
                                                        expression (typing/parmatch.ml[1155,39665+36]..[1155,39665+41])
                                                          Pexp_construct "::" (typing/parmatch.ml[1155,39665+37]..[1155,39665+39])
                                                          Some
                                                            expression (typing/parmatch.ml[1155,39665+36]..[1155,39665+41]) ghost
                                                              Pexp_tuple
                                                              [
                                                                expression (typing/parmatch.ml[1155,39665+36]..[1155,39665+37])
                                                                  Pexp_ident "p" (typing/parmatch.ml[1155,39665+36]..[1155,39665+37])
                                                                expression (typing/parmatch.ml[1155,39665+39]..[1155,39665+41])
                                                                  Pexp_ident "qs" (typing/parmatch.ml[1155,39665+39]..[1155,39665+41])
                                                              ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1156,39708+18]..[1156,39708+61])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[1156,39708+19]..[1156,39708+42])
                                                          Pexp_ident "list_satisfying_vectors" (typing/parmatch.ml[1156,39708+19]..[1156,39708+42])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1156,39708+43]..[1156,39708+57])
                                                              Pexp_ident "default_matrix" (typing/parmatch.ml[1156,39708+43]..[1156,39708+57])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1156,39708+58]..[1156,39708+60])
                                                              Pexp_ident "qs" (typing/parmatch.ml[1156,39708+58]..[1156,39708+60])
                                                        ]
                                                  ]
                                        ]
                                        expression (typing/parmatch.ml[1158,39787+14]..[1187,41158+21])
                                          Pexp_match
                                          expression (typing/parmatch.ml[1158,39787+20]..[1158,39787+72])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[1158,39787+20]..[1158,39787+49])
                                              Pexp_ident "build_specialized_submatrices" (typing/parmatch.ml[1158,39787+20]..[1158,39787+49])
                                            [
                                              <arg>
                                              Labelled "extend_row"
                                                expression (typing/parmatch.ml[1158,39787+62]..[1158,39787+65])
                                                  Pexp_ident "@" (typing/parmatch.ml[1158,39787+62]..[1158,39787+65])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1158,39787+66]..[1158,39787+68])
                                                  Pexp_ident "q0" (typing/parmatch.ml[1158,39787+66]..[1158,39787+68])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1158,39787+69]..[1158,39787+72])
                                                  Pexp_ident "pss" (typing/parmatch.ml[1158,39787+69]..[1158,39787+72])
                                            ]
                                          [
                                            <case>
                                              pattern (typing/parmatch.ml[1159,39865+16]..[1159,39865+41])
                                                Ppat_record Closed
                                                [
                                                  "default" (typing/parmatch.ml[1159,39865+18]..[1159,39865+25]) ghost
                                                    pattern (typing/parmatch.ml[1159,39865+18]..[1159,39865+25])
                                                      Ppat_var "default" (typing/parmatch.ml[1159,39865+18]..[1159,39865+25])
                                                  "constrs" (typing/parmatch.ml[1159,39865+27]..[1159,39865+34])
                                                    pattern (typing/parmatch.ml[1159,39865+37]..[1159,39865+39])
                                                      Ppat_construct "[]" (typing/parmatch.ml[1159,39865+37]..[1159,39865+39])
                                                      None
                                                ]
                                              expression (typing/parmatch.ml[1161,39980+18]..[1161,39980+36])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[1161,39980+18]..[1161,39980+22])
                                                  Pexp_ident "wild" (typing/parmatch.ml[1161,39980+18]..[1161,39980+22])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1161,39980+23]..[1161,39980+30])
                                                      Pexp_ident "default" (typing/parmatch.ml[1161,39980+23]..[1161,39980+30])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1161,39980+31]..[1161,39980+36])
                                                      Pexp_ident "omega" (typing/parmatch.ml[1161,39980+31]..[1161,39980+36])
                                                ]
                                            <case>
                                              pattern (typing/parmatch.ml[1162,40017+16]..[1162,40017+60])
                                                Ppat_record Closed
                                                [
                                                  "default" (typing/parmatch.ml[1162,40017+18]..[1162,40017+25]) ghost
                                                    pattern (typing/parmatch.ml[1162,40017+18]..[1162,40017+25])
                                                      Ppat_var "default" (typing/parmatch.ml[1162,40017+18]..[1162,40017+25])
                                                  "constrs" (typing/parmatch.ml[1162,40017+27]..[1162,40017+34])
                                                    pattern (typing/parmatch.ml[1162,40017+37]..[1162,40017+58])
                                                      Ppat_alias "constrs" (typing/parmatch.ml[1162,40017+50]..[1162,40017+57])
                                                      pattern (typing/parmatch.ml[1162,40017+38]..[1162,40017+46])
                                                        Ppat_construct "::" (typing/parmatch.ml[1162,40017+43]..[1162,40017+45])
                                                        Some
                                                          []
                                                          pattern (typing/parmatch.ml[1162,40017+38]..[1162,40017+46]) ghost
                                                            Ppat_tuple
                                                            [
                                                              pattern (typing/parmatch.ml[1162,40017+38]..[1162,40017+43])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (typing/parmatch.ml[1162,40017+39]..[1162,40017+40])
                                                                    Ppat_var "p" (typing/parmatch.ml[1162,40017+39]..[1162,40017+40])
                                                                  pattern (typing/parmatch.ml[1162,40017+41]..[1162,40017+42])
                                                                    Ppat_any
                                                                ]
                                                              pattern (typing/parmatch.ml[1162,40017+45]..[1162,40017+46])
                                                                Ppat_any
                                                            ]
                                                ]
                                              expression (typing/parmatch.ml[1163,40081+18]..[1187,41158+21])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (typing/parmatch.ml[1163,40081+22]..[1163,40081+33])
                                                      Ppat_var "for_constrs" (typing/parmatch.ml[1163,40081+22]..[1163,40081+33])
                                                    expression (typing/parmatch.ml[1163,40081+34]..[1176,40675+21]) ghost
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (typing/parmatch.ml[1163,40081+34]..[1163,40081+36])
                                                        Ppat_construct "()" (typing/parmatch.ml[1163,40081+34]..[1163,40081+36])
                                                        None
                                                      expression (typing/parmatch.ml[1164,40120+20]..[1176,40675+21])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[1164,40120+20]..[1164,40120+32])
                                                          Pexp_ident "List.flatten" (typing/parmatch.ml[1164,40120+20]..[1164,40120+32])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1164,40120+33]..[1176,40675+21])
                                                              Pexp_apply
                                                              expression (typing/parmatch.ml[1165,40155+22]..[1165,40155+30])
                                                                Pexp_ident "List.map" (typing/parmatch.ml[1165,40155+22]..[1165,40155+30])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/parmatch.ml[1165,40155+31]..[1175,40643+23])
                                                                    Pexp_fun
                                                                    Nolabel
                                                                    None
                                                                    pattern (typing/parmatch.ml[1165,40155+36]..[1165,40155+43])
                                                                      Ppat_tuple
                                                                      [
pattern (typing/parmatch.ml[1165,40155+37]..[1165,40155+38])
  Ppat_var "p" (typing/parmatch.ml[1165,40155+37]..[1165,40155+38])
pattern (typing/parmatch.ml[1165,40155+39]..[1165,40155+42])
  Ppat_var "pss" (typing/parmatch.ml[1165,40155+39]..[1165,40155+42])
                                                                      ]
                                                                    expression (typing/parmatch.ml[1166,40202+24]..[1174,40585+57])
                                                                      Pexp_ifthenelse
                                                                      expression (typing/parmatch.ml[1166,40202+27]..[1166,40202+42])
Pexp_apply
expression (typing/parmatch.ml[1166,40202+27]..[1166,40202+40])
  Pexp_ident "is_absent_pat" (typing/parmatch.ml[1166,40202+27]..[1166,40202+40])
[
  <arg>
  Nolabel
    expression (typing/parmatch.ml[1166,40202+41]..[1166,40202+42])
      Pexp_ident "p" (typing/parmatch.ml[1166,40202+41]..[1166,40202+42])
]
                                                                      expression (typing/parmatch.ml[1167,40250+26]..[1167,40250+28])
Pexp_construct "[]" (typing/parmatch.ml[1167,40250+26]..[1167,40250+28])
None
                                                                      Some
expression (typing/parmatch.ml[1169,40308+26]..[1174,40585+57])
  Pexp_let Nonrec
  [
    <def>
      pattern (typing/parmatch.ml[1169,40308+30]..[1169,40308+39])
        Ppat_var "witnesses" (typing/parmatch.ml[1169,40308+30]..[1169,40308+39])
      expression (typing/parmatch.ml[1170,40350+28]..[1171,40406+79])
        Pexp_apply
        expression (typing/parmatch.ml[1170,40350+28]..[1170,40350+51])
          Pexp_ident "list_satisfying_vectors" (typing/parmatch.ml[1170,40350+28]..[1170,40350+51])
        [
          <arg>
          Nolabel
            expression (typing/parmatch.ml[1170,40350+52]..[1170,40350+55])
              Pexp_ident "pss" (typing/parmatch.ml[1170,40350+52]..[1170,40350+55])
          <arg>
          Nolabel
            expression (typing/parmatch.ml[1171,40406+30]..[1171,40406+79])
              Pexp_apply
              expression (typing/parmatch.ml[1171,40406+74]..[1171,40406+75])
                Pexp_ident "@" (typing/parmatch.ml[1171,40406+74]..[1171,40406+75])
              [
                <arg>
                Nolabel
                  expression (typing/parmatch.ml[1171,40406+31]..[1171,40406+73])
                    Pexp_apply
                    expression (typing/parmatch.ml[1171,40406+31]..[1171,40406+48])
                      Pexp_ident "simple_match_args" (typing/parmatch.ml[1171,40406+31]..[1171,40406+48])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1171,40406+49]..[1171,40406+50])
                          Pexp_ident "p" (typing/parmatch.ml[1171,40406+49]..[1171,40406+50])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1171,40406+51]..[1171,40406+70])
                          Pexp_ident "Patterns.Head.omega" (typing/parmatch.ml[1171,40406+51]..[1171,40406+70])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1171,40406+71]..[1171,40406+73])
                          Pexp_construct "[]" (typing/parmatch.ml[1171,40406+71]..[1171,40406+73])
                          None
                    ]
                <arg>
                Nolabel
                  expression (typing/parmatch.ml[1171,40406+76]..[1171,40406+78])
                    Pexp_ident "qs" (typing/parmatch.ml[1171,40406+76]..[1171,40406+78])
              ]
        ]
  ]
  expression (typing/parmatch.ml[1173,40515+26]..[1174,40585+57])
    Pexp_let Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1173,40515+30]..[1173,40515+31])
          Ppat_var "p" (typing/parmatch.ml[1173,40515+30]..[1173,40515+31])
        expression (typing/parmatch.ml[1173,40515+34]..[1173,40515+66])
          Pexp_apply
          expression (typing/parmatch.ml[1173,40515+34]..[1173,40515+64])
            Pexp_ident "Patterns.Head.to_omega_pattern" (typing/parmatch.ml[1173,40515+34]..[1173,40515+64])
          [
            <arg>
            Nolabel
              expression (typing/parmatch.ml[1173,40515+65]..[1173,40515+66])
                Pexp_ident "p" (typing/parmatch.ml[1173,40515+65]..[1173,40515+66])
          ]
    ]
    expression (typing/parmatch.ml[1174,40585+26]..[1174,40585+57])
      Pexp_apply
      expression (typing/parmatch.ml[1174,40585+26]..[1174,40585+34])
        Pexp_ident "List.map" (typing/parmatch.ml[1174,40585+26]..[1174,40585+34])
      [
        <arg>
        Nolabel
          expression (typing/parmatch.ml[1174,40585+35]..[1174,40585+47])
            Pexp_apply
            expression (typing/parmatch.ml[1174,40585+36]..[1174,40585+44])
              Pexp_ident "set_args" (typing/parmatch.ml[1174,40585+36]..[1174,40585+44])
            [
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1174,40585+45]..[1174,40585+46])
                  Pexp_ident "p" (typing/parmatch.ml[1174,40585+45]..[1174,40585+46])
            ]
        <arg>
        Nolabel
          expression (typing/parmatch.ml[1174,40585+48]..[1174,40585+57])
            Pexp_ident "witnesses" (typing/parmatch.ml[1174,40585+48]..[1174,40585+57])
      ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/parmatch.ml[1175,40643+24]..[1175,40643+31])
                                                                    Pexp_ident "constrs" (typing/parmatch.ml[1175,40643+24]..[1175,40643+31])
                                                              ]
                                                        ]
                                                ]
                                                expression (typing/parmatch.ml[1178,40718+18]..[1187,41158+21])
                                                  Pexp_ifthenelse
                                                  expression (typing/parmatch.ml[1178,40718+21]..[1178,40718+45])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1178,40718+21]..[1178,40718+31])
                                                      Pexp_ident "full_match" (typing/parmatch.ml[1178,40718+21]..[1178,40718+31])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1178,40718+32]..[1178,40718+37])
                                                          Pexp_construct "false" (typing/parmatch.ml[1178,40718+32]..[1178,40718+37])
                                                          None
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1178,40718+38]..[1178,40718+45])
                                                          Pexp_ident "constrs" (typing/parmatch.ml[1178,40718+38]..[1178,40718+45])
                                                    ]
                                                  expression (typing/parmatch.ml[1178,40718+51]..[1178,40718+65])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1178,40718+51]..[1178,40718+62])
                                                      Pexp_ident "for_constrs" (typing/parmatch.ml[1178,40718+51]..[1178,40718+62])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1178,40718+63]..[1178,40718+65])
                                                          Pexp_construct "()" (typing/parmatch.ml[1178,40718+63]..[1178,40718+65])
                                                          None
                                                    ]
                                                  Some
                                                    expression (typing/parmatch.ml[1179,40789+18]..[1187,41158+21])
                                                      Pexp_match
                                                      expression (typing/parmatch.ml[1179,40789+30]..[1179,40789+40])
                                                        Pexp_field
                                                        expression (typing/parmatch.ml[1179,40789+30]..[1179,40789+31])
                                                          Pexp_ident "p" (typing/parmatch.ml[1179,40789+30]..[1179,40789+31])
                                                        "pat_desc" (typing/parmatch.ml[1179,40789+32]..[1179,40789+40])
                                                      [
                                                        <case>
                                                          pattern (typing/parmatch.ml[1180,40835+20]..[1180,40835+31])
                                                            Ppat_construct "Construct" (typing/parmatch.ml[1180,40835+20]..[1180,40835+29])
                                                            Some
                                                              []
                                                              pattern (typing/parmatch.ml[1180,40835+30]..[1180,40835+31])
                                                                Ppat_any
                                                          expression (typing/parmatch.ml[1183,40977+22]..[1184,41044+38])
                                                            Pexp_apply
                                                            expression (typing/parmatch.ml[1184,41044+22]..[1184,41044+23])
                                                              Pexp_ident "@" (typing/parmatch.ml[1184,41044+22]..[1184,41044+23])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[1183,40977+22]..[1183,40977+66])
                                                                  Pexp_apply
                                                                  expression (typing/parmatch.ml[1183,40977+22]..[1183,40977+26])
                                                                    Pexp_ident "wild" (typing/parmatch.ml[1183,40977+22]..[1183,40977+26])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/parmatch.ml[1183,40977+27]..[1183,40977+34])
Pexp_ident "default" (typing/parmatch.ml[1183,40977+27]..[1183,40977+34])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/parmatch.ml[1183,40977+35]..[1183,40977+66])
Pexp_apply
expression (typing/parmatch.ml[1183,40977+36]..[1183,40977+55])
  Pexp_ident "build_other_constrs" (typing/parmatch.ml[1183,40977+36]..[1183,40977+55])
[
  <arg>
  Nolabel
    expression (typing/parmatch.ml[1183,40977+56]..[1183,40977+63])
      Pexp_ident "constrs" (typing/parmatch.ml[1183,40977+56]..[1183,40977+63])
  <arg>
  Nolabel
    expression (typing/parmatch.ml[1183,40977+64]..[1183,40977+65])
      Pexp_ident "p" (typing/parmatch.ml[1183,40977+64]..[1183,40977+65])
]
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[1184,41044+24]..[1184,41044+38])
                                                                  Pexp_apply
                                                                  expression (typing/parmatch.ml[1184,41044+24]..[1184,41044+35])
                                                                    Pexp_ident "for_constrs" (typing/parmatch.ml[1184,41044+24]..[1184,41044+35])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/parmatch.ml[1184,41044+36]..[1184,41044+38])
Pexp_construct "()" (typing/parmatch.ml[1184,41044+36]..[1184,41044+38])
None
                                                                  ]
                                                            ]
                                                        <case>
                                                          pattern (typing/parmatch.ml[1185,41083+20]..[1185,41083+21])
                                                            Ppat_any
                                                          expression (typing/parmatch.ml[1186,41108+22]..[1186,41108+49])
                                                            Pexp_apply
                                                            expression (typing/parmatch.ml[1186,41108+22]..[1186,41108+26])
                                                              Pexp_ident "wild" (typing/parmatch.ml[1186,41108+22]..[1186,41108+26])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[1186,41108+27]..[1186,41108+34])
                                                                  Pexp_ident "default" (typing/parmatch.ml[1186,41108+27]..[1186,41108+34])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[1186,41108+35]..[1186,41108+49])
                                                                  Pexp_ident "Patterns.omega" (typing/parmatch.ml[1186,41108+35]..[1186,41108+49])
                                                            ]
                                                      ]
                                          ]
                            <case>
                              pattern (typing/parmatch.ml[1189,41194+8]..[1189,41194+26])
                                Ppat_variant "Variant"
                                Some
                                  pattern (typing/parmatch.ml[1189,41194+17]..[1189,41194+26])
                                    Ppat_tuple
                                    [
                                      pattern (typing/parmatch.ml[1189,41194+18]..[1189,41194+19])
                                        Ppat_var "l" (typing/parmatch.ml[1189,41194+18]..[1189,41194+19])
                                      pattern (typing/parmatch.ml[1189,41194+21]..[1189,41194+22])
                                        Ppat_any
                                      pattern (typing/parmatch.ml[1189,41194+24]..[1189,41194+25])
                                        Ppat_var "r" (typing/parmatch.ml[1189,41194+24]..[1189,41194+25])
                                    ]
                              <when>
                                expression (typing/parmatch.ml[1189,41194+32]..[1189,41194+45])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1189,41194+32]..[1189,41194+41])
                                    Pexp_ident "is_absent" (typing/parmatch.ml[1189,41194+32]..[1189,41194+41])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1189,41194+42]..[1189,41194+43])
                                        Pexp_ident "l" (typing/parmatch.ml[1189,41194+42]..[1189,41194+43])
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1189,41194+44]..[1189,41194+45])
                                        Pexp_ident "r" (typing/parmatch.ml[1189,41194+44]..[1189,41194+45])
                                  ]
                              expression (typing/parmatch.ml[1189,41194+49]..[1189,41194+51])
                                Pexp_construct "[]" (typing/parmatch.ml[1189,41194+49]..[1189,41194+51])
                                None
                            <case>
                              pattern (typing/parmatch.ml[1190,41246+8]..[1190,41246+37])
                                Ppat_alias "view" (typing/parmatch.ml[1190,41246+33]..[1190,41246+37])
                                pattern (typing/parmatch.ml[1190,41246+8]..[1190,41246+29])
                                  Ppat_type
                                  "Patterns.Simple.view" (typing/parmatch.ml[1190,41246+9]..[1190,41246+29])
                              expression (typing/parmatch.ml[1191,41287+10]..[1202,41808+13])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/parmatch.ml[1191,41287+14]..[1191,41287+15])
                                      Ppat_var "q" (typing/parmatch.ml[1191,41287+14]..[1191,41287+15])
                                    expression (typing/parmatch.ml[1191,41287+18]..[1191,41287+44])
                                      Pexp_record
                                      [
                                        "pat_desc" (typing/parmatch.ml[1191,41287+27]..[1191,41287+35])
                                          expression (typing/parmatch.ml[1191,41287+38]..[1191,41287+42])
                                            Pexp_ident "view" (typing/parmatch.ml[1191,41287+38]..[1191,41287+42])
                                      ]
                                      Some
                                        expression (typing/parmatch.ml[1191,41287+20]..[1191,41287+21])
                                          Pexp_ident "q" (typing/parmatch.ml[1191,41287+20]..[1191,41287+21])
                                ]
                                expression (typing/parmatch.ml[1192,41335+10]..[1202,41808+13])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/parmatch.ml[1192,41335+14]..[1192,41335+23])
                                        Ppat_tuple
                                        [
                                          pattern (typing/parmatch.ml[1192,41335+14]..[1192,41335+16])
                                            Ppat_var "hq" (typing/parmatch.ml[1192,41335+14]..[1192,41335+16])
                                          pattern (typing/parmatch.ml[1192,41335+18]..[1192,41335+23])
                                            Ppat_var "qargs" (typing/parmatch.ml[1192,41335+18]..[1192,41335+23])
                                        ]
                                      expression (typing/parmatch.ml[1192,41335+26]..[1192,41335+53])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1192,41335+26]..[1192,41335+51])
                                          Pexp_ident "Patterns.Head.deconstruct" (typing/parmatch.ml[1192,41335+26]..[1192,41335+51])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1192,41335+52]..[1192,41335+53])
                                              Pexp_ident "q" (typing/parmatch.ml[1192,41335+52]..[1192,41335+53])
                                        ]
                                  ]
                                  expression (typing/parmatch.ml[1193,41392+10]..[1202,41808+13])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/parmatch.ml[1193,41392+14]..[1193,41392+17])
                                          Ppat_var "pss" (typing/parmatch.ml[1193,41392+14]..[1193,41392+17])
                                        expression (typing/parmatch.ml[1193,41392+20]..[1193,41392+42])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[1193,41392+20]..[1193,41392+38])
                                            Pexp_ident "simplify_first_col" (typing/parmatch.ml[1193,41392+20]..[1193,41392+38])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1193,41392+39]..[1193,41392+42])
                                                Pexp_ident "pss" (typing/parmatch.ml[1193,41392+39]..[1193,41392+42])
                                          ]
                                    ]
                                    expression (typing/parmatch.ml[1194,41438+10]..[1202,41808+13])
                                      Pexp_ifthenelse
                                      expression (typing/parmatch.ml[1194,41438+13]..[1194,41438+56])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1194,41438+13]..[1194,41438+16])
                                          Pexp_ident "not" (typing/parmatch.ml[1194,41438+13]..[1194,41438+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1194,41438+17]..[1194,41438+56])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[1194,41438+18]..[1194,41438+30])
                                                Pexp_ident "all_coherent" (typing/parmatch.ml[1194,41438+18]..[1194,41438+30])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1194,41438+31]..[1194,41438+55])
                                                    Pexp_construct "::" (typing/parmatch.ml[1194,41438+35]..[1194,41438+37])
                                                    Some
                                                      expression (typing/parmatch.ml[1194,41438+32]..[1194,41438+54]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/parmatch.ml[1194,41438+32]..[1194,41438+34])
                                                            Pexp_ident "hq" (typing/parmatch.ml[1194,41438+32]..[1194,41438+34])
                                                          expression (typing/parmatch.ml[1194,41438+38]..[1194,41438+54])
                                                            Pexp_apply
                                                            expression (typing/parmatch.ml[1194,41438+38]..[1194,41438+50])
                                                              Pexp_ident "first_column" (typing/parmatch.ml[1194,41438+38]..[1194,41438+50])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[1194,41438+51]..[1194,41438+54])
                                                                  Pexp_ident "pss" (typing/parmatch.ml[1194,41438+51]..[1194,41438+54])
                                                            ]
                                                        ]
                                              ]
                                        ]
                                      expression (typing/parmatch.ml[1195,41500+12]..[1195,41500+14])
                                        Pexp_construct "[]" (typing/parmatch.ml[1195,41500+12]..[1195,41500+14])
                                        None
                                      Some
                                        expression (typing/parmatch.ml[1196,41515+15]..[1202,41808+13])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/parmatch.ml[1197,41536+16]..[1197,41536+18])
                                                Ppat_var "q0" (typing/parmatch.ml[1197,41536+16]..[1197,41536+18])
                                              expression (typing/parmatch.ml[1197,41536+21]..[1197,41536+36])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[1197,41536+21]..[1197,41536+30])
                                                  Pexp_ident "discr_pat" (typing/parmatch.ml[1197,41536+21]..[1197,41536+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1197,41536+31]..[1197,41536+32])
                                                      Pexp_ident "q" (typing/parmatch.ml[1197,41536+31]..[1197,41536+32])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1197,41536+33]..[1197,41536+36])
                                                      Pexp_ident "pss" (typing/parmatch.ml[1197,41536+33]..[1197,41536+36])
                                                ]
                                          ]
                                          expression (typing/parmatch.ml[1198,41576+12]..[1201,41753+54])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[1198,41576+12]..[1198,41576+20])
                                              Pexp_ident "List.map" (typing/parmatch.ml[1198,41576+12]..[1198,41576+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1198,41576+21]..[1198,41576+67])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[1198,41576+22]..[1198,41576+30])
                                                    Pexp_ident "set_args" (typing/parmatch.ml[1198,41576+22]..[1198,41576+30])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1198,41576+31]..[1198,41576+66])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[1198,41576+32]..[1198,41576+62])
                                                          Pexp_ident "Patterns.Head.to_omega_pattern" (typing/parmatch.ml[1198,41576+32]..[1198,41576+62])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1198,41576+63]..[1198,41576+65])
                                                              Pexp_ident "q0" (typing/parmatch.ml[1198,41576+63]..[1198,41576+65])
                                                        ]
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1199,41644+14]..[1201,41753+54])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[1199,41644+15]..[1199,41644+38])
                                                    Pexp_ident "list_satisfying_vectors" (typing/parmatch.ml[1199,41644+15]..[1199,41644+38])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1200,41683+17]..[1200,41683+69])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[1200,41683+18]..[1200,41683+45])
                                                          Pexp_ident "build_specialized_submatrix" (typing/parmatch.ml[1200,41683+18]..[1200,41683+45])
                                                        [
                                                          <arg>
                                                          Labelled "extend_row"
                                                            expression (typing/parmatch.ml[1200,41683+58]..[1200,41683+61])
                                                              Pexp_ident "@" (typing/parmatch.ml[1200,41683+58]..[1200,41683+61])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1200,41683+62]..[1200,41683+64])
                                                              Pexp_ident "q0" (typing/parmatch.ml[1200,41683+62]..[1200,41683+64])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1200,41683+65]..[1200,41683+68])
                                                              Pexp_ident "pss" (typing/parmatch.ml[1200,41683+65]..[1200,41683+68])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1201,41753+17]..[1201,41753+53])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[1201,41753+48]..[1201,41753+49])
                                                          Pexp_ident "@" (typing/parmatch.ml[1201,41753+48]..[1201,41753+49])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1201,41753+18]..[1201,41753+47])
                                                              Pexp_apply
                                                              expression (typing/parmatch.ml[1201,41753+18]..[1201,41753+35])
                                                                Pexp_ident "simple_match_args" (typing/parmatch.ml[1201,41753+18]..[1201,41753+35])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/parmatch.ml[1201,41753+36]..[1201,41753+38])
                                                                    Pexp_ident "q0" (typing/parmatch.ml[1201,41753+36]..[1201,41753+38])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/parmatch.ml[1201,41753+39]..[1201,41753+41])
                                                                    Pexp_ident "hq" (typing/parmatch.ml[1201,41753+39]..[1201,41753+41])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/parmatch.ml[1201,41753+42]..[1201,41753+47])
                                                                    Pexp_ident "qargs" (typing/parmatch.ml[1201,41753+42]..[1201,41753+47])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1201,41753+50]..[1201,41753+52])
                                                              Pexp_ident "qs" (typing/parmatch.ml[1201,41753+50]..[1201,41753+52])
                                                        ]
                                                  ]
                                            ]
                          ]
                    ]
              ]
    ]
  structure_item (typing/parmatch.ml[1214,42070+0]..[1237,42877+20])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[1214,42070+8]..[1214,42070+16])
          Ppat_var "do_match" (typing/parmatch.ml[1214,42070+8]..[1214,42070+16])
        expression (typing/parmatch.ml[1214,42070+17]..[1237,42877+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1214,42070+17]..[1214,42070+20])
            Ppat_var "pss" (typing/parmatch.ml[1214,42070+17]..[1214,42070+20])
          expression (typing/parmatch.ml[1214,42070+21]..[1237,42877+20]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1214,42070+21]..[1214,42070+23])
              Ppat_var "qs" (typing/parmatch.ml[1214,42070+21]..[1214,42070+23])
            expression (typing/parmatch.ml[1214,42070+26]..[1237,42877+20])
              Pexp_match
              expression (typing/parmatch.ml[1214,42070+32]..[1214,42070+34])
                Pexp_ident "qs" (typing/parmatch.ml[1214,42070+32]..[1214,42070+34])
              [
                <case>
                  pattern (typing/parmatch.ml[1215,42110+2]..[1215,42110+4])
                    Ppat_construct "[]" (typing/parmatch.ml[1215,42110+2]..[1215,42110+4])
                    None
                  expression (typing/parmatch.ml[1216,42118+4]..[1219,42181+7])
                    Pexp_match
                    expression (typing/parmatch.ml[1216,42118+16]..[1216,42118+19])
                      Pexp_ident "pss" (typing/parmatch.ml[1216,42118+16]..[1216,42118+19])
                    [
                      <case>
                        pattern (typing/parmatch.ml[1217,42144+6]..[1217,42144+11])
                          Ppat_construct "::" (typing/parmatch.ml[1217,42144+8]..[1217,42144+10])
                          Some
                            []
                            pattern (typing/parmatch.ml[1217,42144+6]..[1217,42144+11]) ghost
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[1217,42144+6]..[1217,42144+8])
                                  Ppat_construct "[]" (typing/parmatch.ml[1217,42144+6]..[1217,42144+8])
                                  None
                                pattern (typing/parmatch.ml[1217,42144+10]..[1217,42144+11])
                                  Ppat_any
                              ]
                        expression (typing/parmatch.ml[1217,42144+15]..[1217,42144+19])
                          Pexp_construct "true" (typing/parmatch.ml[1217,42144+15]..[1217,42144+19])
                          None
                      <case>
                        pattern (typing/parmatch.ml[1218,42164+6]..[1218,42164+7])
                          Ppat_any
                        expression (typing/parmatch.ml[1218,42164+11]..[1218,42164+16])
                          Pexp_construct "false" (typing/parmatch.ml[1218,42164+11]..[1218,42164+16])
                          None
                    ]
                <case>
                  pattern (typing/parmatch.ml[1220,42189+2]..[1220,42189+7])
                    Ppat_construct "::" (typing/parmatch.ml[1220,42189+3]..[1220,42189+5])
                    Some
                      []
                      pattern (typing/parmatch.ml[1220,42189+2]..[1220,42189+7]) ghost
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[1220,42189+2]..[1220,42189+3])
                            Ppat_var "q" (typing/parmatch.ml[1220,42189+2]..[1220,42189+3])
                          pattern (typing/parmatch.ml[1220,42189+5]..[1220,42189+7])
                            Ppat_var "qs" (typing/parmatch.ml[1220,42189+5]..[1220,42189+7])
                        ]
                  expression (typing/parmatch.ml[1220,42189+11]..[1237,42877+20])
                    Pexp_match
                    expression (typing/parmatch.ml[1220,42189+17]..[1220,42189+65])
                      Pexp_field
                      expression (typing/parmatch.ml[1220,42189+17]..[1220,42189+56])
                        Pexp_open Fresh
                        module_expr (typing/parmatch.ml[1220,42189+17]..[1220,42189+33])
                          Pmod_ident "Patterns.General" (typing/parmatch.ml[1220,42189+17]..[1220,42189+33])
                        expression (typing/parmatch.ml[1220,42189+35]..[1220,42189+55])
                          Pexp_apply
                          expression (typing/parmatch.ml[1220,42189+42]..[1220,42189+44])
                            Pexp_ident "|>" (typing/parmatch.ml[1220,42189+42]..[1220,42189+44])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1220,42189+35]..[1220,42189+41])
                                Pexp_apply
                                expression (typing/parmatch.ml[1220,42189+35]..[1220,42189+39])
                                  Pexp_ident "view" (typing/parmatch.ml[1220,42189+35]..[1220,42189+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1220,42189+40]..[1220,42189+41])
                                      Pexp_ident "q" (typing/parmatch.ml[1220,42189+40]..[1220,42189+41])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1220,42189+45]..[1220,42189+55])
                                Pexp_ident "strip_vars" (typing/parmatch.ml[1220,42189+45]..[1220,42189+55])
                          ]
                      "pat_desc" (typing/parmatch.ml[1220,42189+57]..[1220,42189+65])
                    [
                      <case>
                        pattern (typing/parmatch.ml[1221,42260+4]..[1221,42260+17])
                          Ppat_variant "Or"
                          Some
                            pattern (typing/parmatch.ml[1221,42260+8]..[1221,42260+17])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[1221,42260+9]..[1221,42260+11])
                                  Ppat_var "q1" (typing/parmatch.ml[1221,42260+9]..[1221,42260+11])
                                pattern (typing/parmatch.ml[1221,42260+12]..[1221,42260+14])
                                  Ppat_var "q2" (typing/parmatch.ml[1221,42260+12]..[1221,42260+14])
                                pattern (typing/parmatch.ml[1221,42260+15]..[1221,42260+16])
                                  Ppat_any
                              ]
                        expression (typing/parmatch.ml[1222,42281+6]..[1222,42281+52])
                          Pexp_apply
                          expression (typing/parmatch.ml[1222,42281+28]..[1222,42281+30])
                            Pexp_ident "||" (typing/parmatch.ml[1222,42281+28]..[1222,42281+30])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1222,42281+6]..[1222,42281+27])
                                Pexp_apply
                                expression (typing/parmatch.ml[1222,42281+6]..[1222,42281+14])
                                  Pexp_ident "do_match" (typing/parmatch.ml[1222,42281+6]..[1222,42281+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1222,42281+15]..[1222,42281+18])
                                      Pexp_ident "pss" (typing/parmatch.ml[1222,42281+15]..[1222,42281+18])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1222,42281+19]..[1222,42281+27])
                                      Pexp_construct "::" (typing/parmatch.ml[1222,42281+22]..[1222,42281+24])
                                      Some
                                        expression (typing/parmatch.ml[1222,42281+20]..[1222,42281+26]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/parmatch.ml[1222,42281+20]..[1222,42281+22])
                                              Pexp_ident "q1" (typing/parmatch.ml[1222,42281+20]..[1222,42281+22])
                                            expression (typing/parmatch.ml[1222,42281+24]..[1222,42281+26])
                                              Pexp_ident "qs" (typing/parmatch.ml[1222,42281+24]..[1222,42281+26])
                                          ]
                                ]
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1222,42281+31]..[1222,42281+52])
                                Pexp_apply
                                expression (typing/parmatch.ml[1222,42281+31]..[1222,42281+39])
                                  Pexp_ident "do_match" (typing/parmatch.ml[1222,42281+31]..[1222,42281+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1222,42281+40]..[1222,42281+43])
                                      Pexp_ident "pss" (typing/parmatch.ml[1222,42281+40]..[1222,42281+43])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1222,42281+44]..[1222,42281+52])
                                      Pexp_construct "::" (typing/parmatch.ml[1222,42281+47]..[1222,42281+49])
                                      Some
                                        expression (typing/parmatch.ml[1222,42281+45]..[1222,42281+51]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/parmatch.ml[1222,42281+45]..[1222,42281+47])
                                              Pexp_ident "q2" (typing/parmatch.ml[1222,42281+45]..[1222,42281+47])
                                            expression (typing/parmatch.ml[1222,42281+49]..[1222,42281+51])
                                              Pexp_ident "qs" (typing/parmatch.ml[1222,42281+49]..[1222,42281+51])
                                          ]
                                ]
                          ]
                      <case>
                        pattern (typing/parmatch.ml[1223,42334+4]..[1223,42334+8])
                          Ppat_variant "Any"
                          None
                        expression (typing/parmatch.ml[1224,42346+6]..[1228,42472+43])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (typing/parmatch.ml[1224,42346+14]..[1224,42346+33])
                                Ppat_var "remove_first_column" (typing/parmatch.ml[1224,42346+14]..[1224,42346+33])
                              expression (typing/parmatch.ml[1224,42346+36]..[1226,42445+17])
                                Pexp_function
                                [
                                  <case>
                                    pattern (typing/parmatch.ml[1225,42391+10]..[1225,42391+22])
                                      Ppat_construct "::" (typing/parmatch.ml[1225,42391+17]..[1225,42391+19])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[1225,42391+10]..[1225,42391+22]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[1225,42391+10]..[1225,42391+17])
                                              Ppat_construct "::" (typing/parmatch.ml[1225,42391+12]..[1225,42391+14])
                                              Some
                                                []
                                                pattern (typing/parmatch.ml[1225,42391+11]..[1225,42391+16]) ghost
                                                  Ppat_tuple
                                                  [
                                                    pattern (typing/parmatch.ml[1225,42391+11]..[1225,42391+12])
                                                      Ppat_any
                                                    pattern (typing/parmatch.ml[1225,42391+14]..[1225,42391+16])
                                                      Ppat_var "ps" (typing/parmatch.ml[1225,42391+14]..[1225,42391+16])
                                                  ]
                                            pattern (typing/parmatch.ml[1225,42391+19]..[1225,42391+22])
                                              Ppat_var "rem" (typing/parmatch.ml[1225,42391+19]..[1225,42391+22])
                                          ]
                                    expression (typing/parmatch.ml[1225,42391+26]..[1225,42391+53])
                                      Pexp_construct "::" (typing/parmatch.ml[1225,42391+28]..[1225,42391+30])
                                      Some
                                        expression (typing/parmatch.ml[1225,42391+26]..[1225,42391+53]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/parmatch.ml[1225,42391+26]..[1225,42391+28])
                                              Pexp_ident "ps" (typing/parmatch.ml[1225,42391+26]..[1225,42391+28])
                                            expression (typing/parmatch.ml[1225,42391+30]..[1225,42391+53])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[1225,42391+30]..[1225,42391+49])
                                                Pexp_ident "remove_first_column" (typing/parmatch.ml[1225,42391+30]..[1225,42391+49])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1225,42391+50]..[1225,42391+53])
                                                    Pexp_ident "rem" (typing/parmatch.ml[1225,42391+50]..[1225,42391+53])
                                              ]
                                          ]
                                  <case>
                                    pattern (typing/parmatch.ml[1226,42445+10]..[1226,42445+11])
                                      Ppat_any
                                    expression (typing/parmatch.ml[1226,42445+15]..[1226,42445+17])
                                      Pexp_construct "[]" (typing/parmatch.ml[1226,42445+15]..[1226,42445+17])
                                      None
                                ]
                          ]
                          expression (typing/parmatch.ml[1228,42472+6]..[1228,42472+43])
                            Pexp_apply
                            expression (typing/parmatch.ml[1228,42472+6]..[1228,42472+14])
                              Pexp_ident "do_match" (typing/parmatch.ml[1228,42472+6]..[1228,42472+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1228,42472+15]..[1228,42472+40])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1228,42472+16]..[1228,42472+35])
                                    Pexp_ident "remove_first_column" (typing/parmatch.ml[1228,42472+16]..[1228,42472+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1228,42472+36]..[1228,42472+39])
                                        Pexp_ident "pss" (typing/parmatch.ml[1228,42472+36]..[1228,42472+39])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1228,42472+41]..[1228,42472+43])
                                  Pexp_ident "qs" (typing/parmatch.ml[1228,42472+41]..[1228,42472+43])
                            ]
                      <case>
                        pattern (typing/parmatch.ml[1229,42516+4]..[1229,42516+33])
                          Ppat_alias "view" (typing/parmatch.ml[1229,42516+29]..[1229,42516+33])
                          pattern (typing/parmatch.ml[1229,42516+4]..[1229,42516+25])
                            Ppat_type
                            "Patterns.Simple.view" (typing/parmatch.ml[1229,42516+5]..[1229,42516+25])
                        expression (typing/parmatch.ml[1230,42553+6]..[1237,42877+20])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/parmatch.ml[1230,42553+10]..[1230,42553+11])
                                Ppat_var "q" (typing/parmatch.ml[1230,42553+10]..[1230,42553+11])
                              expression (typing/parmatch.ml[1230,42553+14]..[1230,42553+40])
                                Pexp_record
                                [
                                  "pat_desc" (typing/parmatch.ml[1230,42553+23]..[1230,42553+31])
                                    expression (typing/parmatch.ml[1230,42553+34]..[1230,42553+38])
                                      Pexp_ident "view" (typing/parmatch.ml[1230,42553+34]..[1230,42553+38])
                                ]
                                Some
                                  expression (typing/parmatch.ml[1230,42553+16]..[1230,42553+17])
                                    Pexp_ident "q" (typing/parmatch.ml[1230,42553+16]..[1230,42553+17])
                          ]
                          expression (typing/parmatch.ml[1231,42597+6]..[1237,42877+20])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/parmatch.ml[1231,42597+10]..[1231,42597+19])
                                  Ppat_tuple
                                  [
                                    pattern (typing/parmatch.ml[1231,42597+10]..[1231,42597+12])
                                      Ppat_var "q0" (typing/parmatch.ml[1231,42597+10]..[1231,42597+12])
                                    pattern (typing/parmatch.ml[1231,42597+14]..[1231,42597+19])
                                      Ppat_var "qargs" (typing/parmatch.ml[1231,42597+14]..[1231,42597+19])
                                  ]
                                expression (typing/parmatch.ml[1231,42597+22]..[1231,42597+49])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1231,42597+22]..[1231,42597+47])
                                    Pexp_ident "Patterns.Head.deconstruct" (typing/parmatch.ml[1231,42597+22]..[1231,42597+47])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1231,42597+48]..[1231,42597+49])
                                        Pexp_ident "q" (typing/parmatch.ml[1231,42597+48]..[1231,42597+49])
                                  ]
                            ]
                            expression (typing/parmatch.ml[1232,42650+6]..[1237,42877+20])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/parmatch.ml[1232,42650+10]..[1232,42650+13])
                                    Ppat_var "pss" (typing/parmatch.ml[1232,42650+10]..[1232,42650+13])
                                  expression (typing/parmatch.ml[1232,42650+16]..[1232,42650+38])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1232,42650+16]..[1232,42650+34])
                                      Pexp_ident "simplify_first_col" (typing/parmatch.ml[1232,42650+16]..[1232,42650+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1232,42650+35]..[1232,42650+38])
                                          Pexp_ident "pss" (typing/parmatch.ml[1232,42650+35]..[1232,42650+38])
                                    ]
                              ]
                              expression (typing/parmatch.ml[1235,42801+6]..[1237,42877+20])
                                Pexp_apply
                                expression (typing/parmatch.ml[1235,42801+6]..[1235,42801+14])
                                  Pexp_ident "do_match" (typing/parmatch.ml[1235,42801+6]..[1235,42801+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1236,42816+8]..[1236,42816+60])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1236,42816+9]..[1236,42816+36])
                                        Pexp_ident "build_specialized_submatrix" (typing/parmatch.ml[1236,42816+9]..[1236,42816+36])
                                      [
                                        <arg>
                                        Labelled "extend_row"
                                          expression (typing/parmatch.ml[1236,42816+49]..[1236,42816+52])
                                            Pexp_ident "@" (typing/parmatch.ml[1236,42816+49]..[1236,42816+52])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1236,42816+53]..[1236,42816+55])
                                            Pexp_ident "q0" (typing/parmatch.ml[1236,42816+53]..[1236,42816+55])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1236,42816+56]..[1236,42816+59])
                                            Pexp_ident "pss" (typing/parmatch.ml[1236,42816+56]..[1236,42816+59])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1237,42877+8]..[1237,42877+20])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1237,42877+15]..[1237,42877+16])
                                        Pexp_ident "@" (typing/parmatch.ml[1237,42877+15]..[1237,42877+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1237,42877+9]..[1237,42877+14])
                                            Pexp_ident "qargs" (typing/parmatch.ml[1237,42877+9]..[1237,42877+14])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1237,42877+17]..[1237,42877+19])
                                            Pexp_ident "qs" (typing/parmatch.ml[1237,42877+17]..[1237,42877+19])
                                      ]
                                ]
                    ]
              ]
    ]
  structure_item (typing/parmatch.ml[1268,43884+0]..[1372,48241+5])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[1268,43884+8]..[1268,43884+15])
          Ppat_var "exhaust" (typing/parmatch.ml[1268,43884+8]..[1268,43884+15])
        expression (typing/parmatch.ml[1268,43884+16]..[1272,44046+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1268,43884+16]..[1268,43884+35])
            Ppat_constraint
            pattern (typing/parmatch.ml[1268,43884+17]..[1268,43884+20])
              Ppat_var "ext" (typing/parmatch.ml[1268,43884+17]..[1268,43884+20])
            core_type (typing/parmatch.ml[1268,43884+21]..[1268,43884+34])
              Ptyp_constr "option" (typing/parmatch.ml[1268,43884+28]..[1268,43884+34])
              [
                core_type (typing/parmatch.ml[1268,43884+21]..[1268,43884+27])
                  Ptyp_constr "Path.t" (typing/parmatch.ml[1268,43884+21]..[1268,43884+27])
                  []
              ]
          expression (typing/parmatch.ml[1268,43884+36]..[1272,44046+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1268,43884+36]..[1268,43884+39])
              Ppat_var "pss" (typing/parmatch.ml[1268,43884+36]..[1268,43884+39])
            expression (typing/parmatch.ml[1268,43884+40]..[1272,44046+43]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[1268,43884+40]..[1268,43884+41])
                Ppat_var "n" (typing/parmatch.ml[1268,43884+40]..[1268,43884+41])
              expression (typing/parmatch.ml[1268,43884+44]..[1272,44046+43])
                Pexp_match
                expression (typing/parmatch.ml[1268,43884+50]..[1268,43884+53])
                  Pexp_ident "pss" (typing/parmatch.ml[1268,43884+50]..[1268,43884+53])
                [
                  <case>
                    pattern (typing/parmatch.ml[1269,43943+2]..[1269,43943+4])
                      Ppat_construct "[]" (typing/parmatch.ml[1269,43943+2]..[1269,43943+4])
                      None
                    expression (typing/parmatch.ml[1269,43943+12]..[1269,43943+33])
                      Pexp_apply
                      expression (typing/parmatch.ml[1269,43943+12]..[1269,43943+22])
                        Pexp_ident "Seq.return" (typing/parmatch.ml[1269,43943+12]..[1269,43943+22])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1269,43943+23]..[1269,43943+33])
                            Pexp_apply
                            expression (typing/parmatch.ml[1269,43943+24]..[1269,43943+30])
                              Pexp_ident "omegas" (typing/parmatch.ml[1269,43943+24]..[1269,43943+30])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1269,43943+31]..[1269,43943+32])
                                  Pexp_ident "n" (typing/parmatch.ml[1269,43943+31]..[1269,43943+32])
                            ]
                      ]
                  <case>
                    pattern (typing/parmatch.ml[1270,43977+2]..[1270,43977+7])
                      Ppat_construct "::" (typing/parmatch.ml[1270,43977+4]..[1270,43977+6])
                      Some
                        []
                        pattern (typing/parmatch.ml[1270,43977+2]..[1270,43977+7]) ghost
                          Ppat_tuple
                          [
                            pattern (typing/parmatch.ml[1270,43977+2]..[1270,43977+4])
                              Ppat_construct "[]" (typing/parmatch.ml[1270,43977+2]..[1270,43977+4])
                              None
                            pattern (typing/parmatch.ml[1270,43977+6]..[1270,43977+7])
                              Ppat_any
                          ]
                    expression (typing/parmatch.ml[1270,43977+12]..[1270,43977+21])
                      Pexp_ident "Seq.empty" (typing/parmatch.ml[1270,43977+12]..[1270,43977+21])
                  <case>
                    pattern (typing/parmatch.ml[1271,43999+2]..[1271,43999+13])
                      Ppat_construct "::" (typing/parmatch.ml[1271,43999+3]..[1271,43999+13]) ghost
                      Some
                        []
                        pattern (typing/parmatch.ml[1271,43999+3]..[1271,43999+13]) ghost
                          Ppat_tuple
                          [
                            pattern (typing/parmatch.ml[1271,43999+3]..[1271,43999+12])
                              Ppat_construct "::" (typing/parmatch.ml[1271,43999+6]..[1271,43999+8])
                              Some
                                []
                                pattern (typing/parmatch.ml[1271,43999+4]..[1271,43999+11]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (typing/parmatch.ml[1271,43999+4]..[1271,43999+5])
                                      Ppat_var "p" (typing/parmatch.ml[1271,43999+4]..[1271,43999+5])
                                    pattern (typing/parmatch.ml[1271,43999+9]..[1271,43999+11])
                                      Ppat_var "ps" (typing/parmatch.ml[1271,43999+9]..[1271,43999+11])
                                  ]
                            pattern (typing/parmatch.ml[1271,43999+12]..[1271,43999+13]) ghost
                              Ppat_construct "[]" (typing/parmatch.ml[1271,43999+12]..[1271,43999+13]) ghost
                              None
                          ]
                    expression (typing/parmatch.ml[1271,43999+17]..[1271,43999+46])
                      Pexp_apply
                      expression (typing/parmatch.ml[1271,43999+17]..[1271,43999+35])
                        Pexp_ident "exhaust_single_row" (typing/parmatch.ml[1271,43999+17]..[1271,43999+35])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1271,43999+36]..[1271,43999+39])
                            Pexp_ident "ext" (typing/parmatch.ml[1271,43999+36]..[1271,43999+39])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1271,43999+40]..[1271,43999+41])
                            Pexp_ident "p" (typing/parmatch.ml[1271,43999+40]..[1271,43999+41])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1271,43999+42]..[1271,43999+44])
                            Pexp_ident "ps" (typing/parmatch.ml[1271,43999+42]..[1271,43999+44])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1271,43999+45]..[1271,43999+46])
                            Pexp_ident "n" (typing/parmatch.ml[1271,43999+45]..[1271,43999+46])
                      ]
                  <case>
                    pattern (typing/parmatch.ml[1272,44046+2]..[1272,44046+5])
                      Ppat_var "pss" (typing/parmatch.ml[1272,44046+2]..[1272,44046+5])
                    expression (typing/parmatch.ml[1272,44046+11]..[1272,44046+43])
                      Pexp_apply
                      expression (typing/parmatch.ml[1272,44046+11]..[1272,44046+33])
                        Pexp_ident "specialize_and_exhaust" (typing/parmatch.ml[1272,44046+11]..[1272,44046+33])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1272,44046+34]..[1272,44046+37])
                            Pexp_ident "ext" (typing/parmatch.ml[1272,44046+34]..[1272,44046+37])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1272,44046+38]..[1272,44046+41])
                            Pexp_ident "pss" (typing/parmatch.ml[1272,44046+38]..[1272,44046+41])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1272,44046+42]..[1272,44046+43])
                            Pexp_ident "n" (typing/parmatch.ml[1272,44046+42]..[1272,44046+43])
                      ]
                ]
      <def>
        pattern (typing/parmatch.ml[1274,44091+4]..[1274,44091+22])
          Ppat_var "exhaust_single_row" (typing/parmatch.ml[1274,44091+4]..[1274,44091+22])
        expression (typing/parmatch.ml[1274,44091+23]..[1309,45552+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1274,44091+23]..[1274,44091+26])
            Ppat_var "ext" (typing/parmatch.ml[1274,44091+23]..[1274,44091+26])
          expression (typing/parmatch.ml[1274,44091+27]..[1309,45552+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1274,44091+27]..[1274,44091+28])
              Ppat_var "p" (typing/parmatch.ml[1274,44091+27]..[1274,44091+28])
            expression (typing/parmatch.ml[1274,44091+29]..[1309,45552+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[1274,44091+29]..[1274,44091+31])
                Ppat_var "ps" (typing/parmatch.ml[1274,44091+29]..[1274,44091+31])
              expression (typing/parmatch.ml[1274,44091+32]..[1309,45552+5]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/parmatch.ml[1274,44091+32]..[1274,44091+33])
                  Ppat_var "n" (typing/parmatch.ml[1274,44091+32]..[1274,44091+33])
                expression (typing/parmatch.ml[1299,45094+2]..[1309,45552+5])
                  Pexp_apply
                  expression (typing/parmatch.ml[1299,45094+29]..[1299,45094+31])
                    Pexp_ident "|>" (typing/parmatch.ml[1299,45094+29]..[1299,45094+31])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[1299,45094+2]..[1299,45094+28])
                        Pexp_apply
                        expression (typing/parmatch.ml[1299,45094+2]..[1299,45094+13])
                          Pexp_ident "List.to_seq" (typing/parmatch.ml[1299,45094+2]..[1299,45094+13])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1299,45094+14]..[1299,45094+28])
                              Pexp_construct "::" (typing/parmatch.ml[1299,45094+15]..[1299,45094+28]) ghost
                              Some
                                expression (typing/parmatch.ml[1299,45094+15]..[1299,45094+28]) ghost
                                  Pexp_tuple
                                  [
                                    expression (typing/parmatch.ml[1299,45094+15]..[1299,45094+21])
                                      Pexp_construct "Some" (typing/parmatch.ml[1299,45094+15]..[1299,45094+19])
                                      Some
                                        expression (typing/parmatch.ml[1299,45094+20]..[1299,45094+21])
                                          Pexp_ident "p" (typing/parmatch.ml[1299,45094+20]..[1299,45094+21])
                                    expression (typing/parmatch.ml[1299,45094+23]..[1299,45094+28]) ghost
                                      Pexp_construct "::" (typing/parmatch.ml[1299,45094+23]..[1299,45094+28]) ghost
                                      Some
                                        expression (typing/parmatch.ml[1299,45094+23]..[1299,45094+28]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/parmatch.ml[1299,45094+23]..[1299,45094+27])
                                              Pexp_construct "None" (typing/parmatch.ml[1299,45094+23]..[1299,45094+27])
                                              None
                                            expression (typing/parmatch.ml[1299,45094+27]..[1299,45094+28]) ghost
                                              Pexp_construct "[]" (typing/parmatch.ml[1299,45094+27]..[1299,45094+28]) ghost
                                              None
                                          ]
                                  ]
                        ]
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[1299,45094+32]..[1309,45552+5])
                        Pexp_apply
                        expression (typing/parmatch.ml[1299,45094+32]..[1299,45094+44])
                          Pexp_ident "Seq.flat_map" (typing/parmatch.ml[1299,45094+32]..[1299,45094+44])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1300,45139+4]..[1309,45552+5])
                              Pexp_function
                              [
                                <case>
                                  pattern (typing/parmatch.ml[1301,45153+8]..[1301,45153+14])
                                    Ppat_construct "Some" (typing/parmatch.ml[1301,45153+8]..[1301,45153+12])
                                    Some
                                      []
                                      pattern (typing/parmatch.ml[1301,45153+13]..[1301,45153+14])
                                        Ppat_var "p" (typing/parmatch.ml[1301,45153+13]..[1301,45153+14])
                                  expression (typing/parmatch.ml[1302,45171+10]..[1303,45229+53])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/parmatch.ml[1302,45171+14]..[1302,45171+27])
                                          Ppat_var "sub_witnesses" (typing/parmatch.ml[1302,45171+14]..[1302,45171+27])
                                        expression (typing/parmatch.ml[1302,45171+30]..[1302,45171+54])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[1302,45171+30]..[1302,45171+37])
                                            Pexp_ident "exhaust" (typing/parmatch.ml[1302,45171+30]..[1302,45171+37])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1302,45171+38]..[1302,45171+41])
                                                Pexp_ident "ext" (typing/parmatch.ml[1302,45171+38]..[1302,45171+41])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1302,45171+42]..[1302,45171+46])
                                                Pexp_construct "::" (typing/parmatch.ml[1302,45171+43]..[1302,45171+46]) ghost
                                                Some
                                                  expression (typing/parmatch.ml[1302,45171+43]..[1302,45171+46]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/parmatch.ml[1302,45171+43]..[1302,45171+45])
                                                        Pexp_ident "ps" (typing/parmatch.ml[1302,45171+43]..[1302,45171+45])
                                                      expression (typing/parmatch.ml[1302,45171+45]..[1302,45171+46]) ghost
                                                        Pexp_construct "[]" (typing/parmatch.ml[1302,45171+45]..[1302,45171+46]) ghost
                                                        None
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1302,45171+47]..[1302,45171+54])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[1302,45171+50]..[1302,45171+51])
                                                  Pexp_ident "-" (typing/parmatch.ml[1302,45171+50]..[1302,45171+51])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1302,45171+48]..[1302,45171+49])
                                                      Pexp_ident "n" (typing/parmatch.ml[1302,45171+48]..[1302,45171+49])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1302,45171+52]..[1302,45171+53])
                                                      Pexp_constant PConst_int (1,None)
                                                ]
                                          ]
                                    ]
                                    expression (typing/parmatch.ml[1303,45229+10]..[1303,45229+53])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1303,45229+10]..[1303,45229+17])
                                        Pexp_ident "Seq.map" (typing/parmatch.ml[1303,45229+10]..[1303,45229+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1303,45229+18]..[1303,45229+39])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/parmatch.ml[1303,45229+23]..[1303,45229+26])
                                              Ppat_var "row" (typing/parmatch.ml[1303,45229+23]..[1303,45229+26])
                                            expression (typing/parmatch.ml[1303,45229+30]..[1303,45229+38])
                                              Pexp_construct "::" (typing/parmatch.ml[1303,45229+32]..[1303,45229+34])
                                              Some
                                                expression (typing/parmatch.ml[1303,45229+30]..[1303,45229+38]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/parmatch.ml[1303,45229+30]..[1303,45229+31])
                                                      Pexp_ident "p" (typing/parmatch.ml[1303,45229+30]..[1303,45229+31])
                                                    expression (typing/parmatch.ml[1303,45229+35]..[1303,45229+38])
                                                      Pexp_ident "row" (typing/parmatch.ml[1303,45229+35]..[1303,45229+38])
                                                  ]
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1303,45229+40]..[1303,45229+53])
                                            Pexp_ident "sub_witnesses" (typing/parmatch.ml[1303,45229+40]..[1303,45229+53])
                                      ]
                                <case>
                                  pattern (typing/parmatch.ml[1304,45283+8]..[1304,45283+12])
                                    Ppat_construct "None" (typing/parmatch.ml[1304,45283+8]..[1304,45283+12])
                                    None
                                  expression (typing/parmatch.ml[1307,45418+10]..[1308,45484+67])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/parmatch.ml[1307,45418+14]..[1307,45418+25])
                                          Ppat_var "p_witnesses" (typing/parmatch.ml[1307,45418+14]..[1307,45418+25])
                                        expression (typing/parmatch.ml[1307,45418+28]..[1307,45418+62])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[1307,45418+28]..[1307,45418+50])
                                            Pexp_ident "specialize_and_exhaust" (typing/parmatch.ml[1307,45418+28]..[1307,45418+50])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1307,45418+51]..[1307,45418+54])
                                                Pexp_ident "ext" (typing/parmatch.ml[1307,45418+51]..[1307,45418+54])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1307,45418+55]..[1307,45418+60])
                                                Pexp_construct "::" (typing/parmatch.ml[1307,45418+56]..[1307,45418+60]) ghost
                                                Some
                                                  expression (typing/parmatch.ml[1307,45418+56]..[1307,45418+60]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/parmatch.ml[1307,45418+56]..[1307,45418+59])
                                                        Pexp_construct "::" (typing/parmatch.ml[1307,45418+57]..[1307,45418+59]) ghost
                                                        Some
                                                          expression (typing/parmatch.ml[1307,45418+57]..[1307,45418+59]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/parmatch.ml[1307,45418+57]..[1307,45418+58])
                                                                Pexp_ident "p" (typing/parmatch.ml[1307,45418+57]..[1307,45418+58])
                                                              expression (typing/parmatch.ml[1307,45418+58]..[1307,45418+59]) ghost
                                                                Pexp_construct "[]" (typing/parmatch.ml[1307,45418+58]..[1307,45418+59]) ghost
                                                                None
                                                            ]
                                                      expression (typing/parmatch.ml[1307,45418+59]..[1307,45418+60]) ghost
                                                        Pexp_construct "[]" (typing/parmatch.ml[1307,45418+59]..[1307,45418+60]) ghost
                                                        None
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1307,45418+61]..[1307,45418+62])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                    ]
                                    expression (typing/parmatch.ml[1308,45484+10]..[1308,45484+67])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1308,45484+10]..[1308,45484+17])
                                        Pexp_ident "Seq.map" (typing/parmatch.ml[1308,45484+10]..[1308,45484+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1308,45484+18]..[1308,45484+55])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (typing/parmatch.ml[1308,45484+23]..[1308,45484+28])
                                              Ppat_var "p_row" (typing/parmatch.ml[1308,45484+23]..[1308,45484+28])
                                            expression (typing/parmatch.ml[1308,45484+32]..[1308,45484+54])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[1308,45484+38]..[1308,45484+39])
                                                Pexp_ident "@" (typing/parmatch.ml[1308,45484+38]..[1308,45484+39])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1308,45484+32]..[1308,45484+37])
                                                    Pexp_ident "p_row" (typing/parmatch.ml[1308,45484+32]..[1308,45484+37])
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1308,45484+40]..[1308,45484+54])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1308,45484+40]..[1308,45484+46])
                                                      Pexp_ident "omegas" (typing/parmatch.ml[1308,45484+40]..[1308,45484+46])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1308,45484+47]..[1308,45484+54])
                                                          Pexp_apply
                                                          expression (typing/parmatch.ml[1308,45484+50]..[1308,45484+51])
                                                            Pexp_ident "-" (typing/parmatch.ml[1308,45484+50]..[1308,45484+51])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/parmatch.ml[1308,45484+48]..[1308,45484+49])
                                                                Pexp_ident "n" (typing/parmatch.ml[1308,45484+48]..[1308,45484+49])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/parmatch.ml[1308,45484+52]..[1308,45484+53])
                                                                Pexp_constant PConst_int (1,None)
                                                          ]
                                                    ]
                                              ]
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1308,45484+56]..[1308,45484+67])
                                            Pexp_ident "p_witnesses" (typing/parmatch.ml[1308,45484+56]..[1308,45484+67])
                                      ]
                              ]
                        ]
                  ]
      <def>
        pattern (typing/parmatch.ml[1311,45559+4]..[1311,45559+26])
          Ppat_var "specialize_and_exhaust" (typing/parmatch.ml[1311,45559+4]..[1311,45559+26])
        expression (typing/parmatch.ml[1311,45559+27]..[1372,48241+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1311,45559+27]..[1311,45559+30])
            Ppat_var "ext" (typing/parmatch.ml[1311,45559+27]..[1311,45559+30])
          expression (typing/parmatch.ml[1311,45559+31]..[1372,48241+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1311,45559+31]..[1311,45559+34])
              Ppat_var "pss" (typing/parmatch.ml[1311,45559+31]..[1311,45559+34])
            expression (typing/parmatch.ml[1311,45559+35]..[1372,48241+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[1311,45559+35]..[1311,45559+36])
                Ppat_var "n" (typing/parmatch.ml[1311,45559+35]..[1311,45559+36])
              expression (typing/parmatch.ml[1312,45598+2]..[1372,48241+5])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/parmatch.ml[1312,45598+6]..[1312,45598+9])
                      Ppat_var "pss" (typing/parmatch.ml[1312,45598+6]..[1312,45598+9])
                    expression (typing/parmatch.ml[1312,45598+12]..[1312,45598+34])
                      Pexp_apply
                      expression (typing/parmatch.ml[1312,45598+12]..[1312,45598+30])
                        Pexp_ident "simplify_first_col" (typing/parmatch.ml[1312,45598+12]..[1312,45598+30])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1312,45598+31]..[1312,45598+34])
                            Pexp_ident "pss" (typing/parmatch.ml[1312,45598+31]..[1312,45598+34])
                      ]
                ]
                expression (typing/parmatch.ml[1313,45636+2]..[1372,48241+5])
                  Pexp_ifthenelse
                  expression (typing/parmatch.ml[1313,45636+5]..[1313,45636+42])
                    Pexp_apply
                    expression (typing/parmatch.ml[1313,45636+5]..[1313,45636+8])
                      Pexp_ident "not" (typing/parmatch.ml[1313,45636+5]..[1313,45636+8])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1313,45636+9]..[1313,45636+42])
                          Pexp_apply
                          expression (typing/parmatch.ml[1313,45636+10]..[1313,45636+22])
                            Pexp_ident "all_coherent" (typing/parmatch.ml[1313,45636+10]..[1313,45636+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1313,45636+23]..[1313,45636+41])
                                Pexp_apply
                                expression (typing/parmatch.ml[1313,45636+24]..[1313,45636+36])
                                  Pexp_ident "first_column" (typing/parmatch.ml[1313,45636+24]..[1313,45636+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1313,45636+37]..[1313,45636+40])
                                      Pexp_ident "pss" (typing/parmatch.ml[1313,45636+37]..[1313,45636+40])
                                ]
                          ]
                    ]
                  expression (typing/parmatch.ml[1316,45816+4]..[1316,45816+13])
                    Pexp_ident "Seq.empty" (typing/parmatch.ml[1316,45816+4]..[1316,45816+13])
                  Some
                    expression (typing/parmatch.ml[1317,45830+7]..[1372,48241+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/parmatch.ml[1328,46396+8]..[1328,46396+10])
                            Ppat_var "q0" (typing/parmatch.ml[1328,46396+8]..[1328,46396+10])
                          expression (typing/parmatch.ml[1328,46396+13]..[1328,46396+48])
                            Pexp_apply
                            expression (typing/parmatch.ml[1328,46396+13]..[1328,46396+22])
                              Pexp_ident "discr_pat" (typing/parmatch.ml[1328,46396+13]..[1328,46396+22])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1328,46396+23]..[1328,46396+44])
                                  Pexp_ident "Patterns.Simple.omega" (typing/parmatch.ml[1328,46396+23]..[1328,46396+44])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1328,46396+45]..[1328,46396+48])
                                  Pexp_ident "pss" (typing/parmatch.ml[1328,46396+45]..[1328,46396+48])
                            ]
                      ]
                      expression (typing/parmatch.ml[1329,46448+4]..[1371,48205+35])
                        Pexp_match
                        expression (typing/parmatch.ml[1329,46448+10]..[1329,46448+62])
                          Pexp_apply
                          expression (typing/parmatch.ml[1329,46448+10]..[1329,46448+39])
                            Pexp_ident "build_specialized_submatrices" (typing/parmatch.ml[1329,46448+10]..[1329,46448+39])
                          [
                            <arg>
                            Labelled "extend_row"
                              expression (typing/parmatch.ml[1329,46448+52]..[1329,46448+55])
                                Pexp_ident "@" (typing/parmatch.ml[1329,46448+52]..[1329,46448+55])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1329,46448+56]..[1329,46448+58])
                                Pexp_ident "q0" (typing/parmatch.ml[1329,46448+56]..[1329,46448+58])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1329,46448+59]..[1329,46448+62])
                                Pexp_ident "pss" (typing/parmatch.ml[1329,46448+59]..[1329,46448+62])
                          ]
                        [
                          <case>
                            pattern (typing/parmatch.ml[1330,46516+6]..[1330,46516+31])
                              Ppat_record Closed
                              [
                                "default" (typing/parmatch.ml[1330,46516+8]..[1330,46516+15]) ghost
                                  pattern (typing/parmatch.ml[1330,46516+8]..[1330,46516+15])
                                    Ppat_var "default" (typing/parmatch.ml[1330,46516+8]..[1330,46516+15])
                                "constrs" (typing/parmatch.ml[1330,46516+17]..[1330,46516+24])
                                  pattern (typing/parmatch.ml[1330,46516+27]..[1330,46516+29])
                                    Ppat_construct "[]" (typing/parmatch.ml[1330,46516+27]..[1330,46516+29])
                                    None
                              ]
                            expression (typing/parmatch.ml[1332,46611+8]..[1334,46722+50])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/parmatch.ml[1332,46611+12]..[1332,46611+25])
                                    Ppat_var "sub_witnesses" (typing/parmatch.ml[1332,46611+12]..[1332,46611+25])
                                  expression (typing/parmatch.ml[1332,46611+28]..[1332,46611+53])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1332,46611+28]..[1332,46611+35])
                                      Pexp_ident "exhaust" (typing/parmatch.ml[1332,46611+28]..[1332,46611+35])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1332,46611+36]..[1332,46611+39])
                                          Pexp_ident "ext" (typing/parmatch.ml[1332,46611+36]..[1332,46611+39])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1332,46611+40]..[1332,46611+47])
                                          Pexp_ident "default" (typing/parmatch.ml[1332,46611+40]..[1332,46611+47])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1332,46611+48]..[1332,46611+53])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[1332,46611+50]..[1332,46611+51])
                                            Pexp_ident "-" (typing/parmatch.ml[1332,46611+50]..[1332,46611+51])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1332,46611+49]..[1332,46611+50])
                                                Pexp_ident "n" (typing/parmatch.ml[1332,46611+49]..[1332,46611+50])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1332,46611+51]..[1332,46611+52])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                    ]
                              ]
                              expression (typing/parmatch.ml[1333,46668+8]..[1334,46722+50])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/parmatch.ml[1333,46668+12]..[1333,46668+14])
                                      Ppat_var "q0" (typing/parmatch.ml[1333,46668+12]..[1333,46668+14])
                                    expression (typing/parmatch.ml[1333,46668+17]..[1333,46668+50])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1333,46668+17]..[1333,46668+47])
                                        Pexp_ident "Patterns.Head.to_omega_pattern" (typing/parmatch.ml[1333,46668+17]..[1333,46668+47])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1333,46668+48]..[1333,46668+50])
                                            Pexp_ident "q0" (typing/parmatch.ml[1333,46668+48]..[1333,46668+50])
                                      ]
                                ]
                                expression (typing/parmatch.ml[1334,46722+8]..[1334,46722+50])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1334,46722+8]..[1334,46722+15])
                                    Pexp_ident "Seq.map" (typing/parmatch.ml[1334,46722+8]..[1334,46722+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1334,46722+16]..[1334,46722+36])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/parmatch.ml[1334,46722+21]..[1334,46722+24])
                                          Ppat_var "row" (typing/parmatch.ml[1334,46722+21]..[1334,46722+24])
                                        expression (typing/parmatch.ml[1334,46722+28]..[1334,46722+35])
                                          Pexp_construct "::" (typing/parmatch.ml[1334,46722+30]..[1334,46722+32])
                                          Some
                                            expression (typing/parmatch.ml[1334,46722+28]..[1334,46722+35]) ghost
                                              Pexp_tuple
                                              [
                                                expression (typing/parmatch.ml[1334,46722+28]..[1334,46722+30])
                                                  Pexp_ident "q0" (typing/parmatch.ml[1334,46722+28]..[1334,46722+30])
                                                expression (typing/parmatch.ml[1334,46722+32]..[1334,46722+35])
                                                  Pexp_ident "row" (typing/parmatch.ml[1334,46722+32]..[1334,46722+35])
                                              ]
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1334,46722+37]..[1334,46722+50])
                                        Pexp_ident "sub_witnesses" (typing/parmatch.ml[1334,46722+37]..[1334,46722+50])
                                  ]
                          <case>
                            pattern (typing/parmatch.ml[1335,46773+6]..[1335,46773+26])
                              Ppat_record Closed
                              [
                                "default" (typing/parmatch.ml[1335,46773+8]..[1335,46773+15]) ghost
                                  pattern (typing/parmatch.ml[1335,46773+8]..[1335,46773+15])
                                    Ppat_var "default" (typing/parmatch.ml[1335,46773+8]..[1335,46773+15])
                                "constrs" (typing/parmatch.ml[1335,46773+17]..[1335,46773+24]) ghost
                                  pattern (typing/parmatch.ml[1335,46773+17]..[1335,46773+24])
                                    Ppat_var "constrs" (typing/parmatch.ml[1335,46773+17]..[1335,46773+24])
                              ]
                            expression (typing/parmatch.ml[1336,46803+8]..[1371,48205+35])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/parmatch.ml[1336,46803+12]..[1336,46803+25])
                                    Ppat_var "try_non_omega" (typing/parmatch.ml[1336,46803+12]..[1336,46803+25])
                                  expression (typing/parmatch.ml[1336,46803+26]..[1347,47159+46]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/parmatch.ml[1336,46803+26]..[1336,46803+33])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[1336,46803+27]..[1336,46803+28])
                                          Ppat_var "p" (typing/parmatch.ml[1336,46803+27]..[1336,46803+28])
                                        pattern (typing/parmatch.ml[1336,46803+29]..[1336,46803+32])
                                          Ppat_var "pss" (typing/parmatch.ml[1336,46803+29]..[1336,46803+32])
                                      ]
                                    expression (typing/parmatch.ml[1337,46839+10]..[1347,47159+46])
                                      Pexp_ifthenelse
                                      expression (typing/parmatch.ml[1337,46839+13]..[1337,46839+28])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1337,46839+13]..[1337,46839+26])
                                          Pexp_ident "is_absent_pat" (typing/parmatch.ml[1337,46839+13]..[1337,46839+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1337,46839+27]..[1337,46839+28])
                                              Pexp_ident "p" (typing/parmatch.ml[1337,46839+27]..[1337,46839+28])
                                        ]
                                      expression (typing/parmatch.ml[1338,46873+12]..[1338,46873+21])
                                        Pexp_ident "Seq.empty" (typing/parmatch.ml[1338,46873+12]..[1338,46873+21])
                                      Some
                                        expression (typing/parmatch.ml[1340,46910+12]..[1347,47159+46])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/parmatch.ml[1340,46910+16]..[1340,46910+29])
                                                Ppat_var "sub_witnesses" (typing/parmatch.ml[1340,46910+16]..[1340,46910+29])
                                              expression (typing/parmatch.ml[1341,46942+14]..[1344,47062+25])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[1341,46942+14]..[1341,46942+21])
                                                  Pexp_ident "exhaust" (typing/parmatch.ml[1341,46942+14]..[1341,46942+21])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1342,46964+16]..[1342,46964+19])
                                                      Pexp_ident "ext" (typing/parmatch.ml[1342,46964+16]..[1342,46964+19])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1342,46964+20]..[1342,46964+23])
                                                      Pexp_ident "pss" (typing/parmatch.ml[1342,46964+20]..[1342,46964+23])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1343,46988+16]..[1344,47062+25])
                                                      Pexp_apply
                                                      expression (typing/parmatch.ml[1344,47062+21]..[1344,47062+22])
                                                        Pexp_ident "-" (typing/parmatch.ml[1344,47062+21]..[1344,47062+22])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[1343,46988+17]..[1344,47062+20])
                                                            Pexp_apply
                                                            expression (typing/parmatch.ml[1344,47062+17]..[1344,47062+18])
                                                              Pexp_ident "+" (typing/parmatch.ml[1344,47062+17]..[1344,47062+18])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[1343,46988+17]..[1343,46988+73])
                                                                  Pexp_apply
                                                                  expression (typing/parmatch.ml[1343,46988+17]..[1343,46988+28])
                                                                    Pexp_ident "List.length" (typing/parmatch.ml[1343,46988+17]..[1343,46988+28])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/parmatch.ml[1343,46988+29]..[1343,46988+73])
Pexp_apply
expression (typing/parmatch.ml[1343,46988+30]..[1343,46988+47])
  Pexp_ident "simple_match_args" (typing/parmatch.ml[1343,46988+30]..[1343,46988+47])
[
  <arg>
  Nolabel
    expression (typing/parmatch.ml[1343,46988+48]..[1343,46988+49])
      Pexp_ident "p" (typing/parmatch.ml[1343,46988+48]..[1343,46988+49])
  <arg>
  Nolabel
    expression (typing/parmatch.ml[1343,46988+50]..[1343,46988+69])
      Pexp_ident "Patterns.Head.omega" (typing/parmatch.ml[1343,46988+50]..[1343,46988+69])
  <arg>
  Nolabel
    expression (typing/parmatch.ml[1343,46988+70]..[1343,46988+72])
      Pexp_construct "[]" (typing/parmatch.ml[1343,46988+70]..[1343,46988+72])
      None
]
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[1344,47062+19]..[1344,47062+20])
                                                                  Pexp_ident "n" (typing/parmatch.ml[1344,47062+19]..[1344,47062+20])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[1344,47062+23]..[1344,47062+24])
                                                            Pexp_constant PConst_int (1,None)
                                                      ]
                                                ]
                                          ]
                                          expression (typing/parmatch.ml[1346,47103+12]..[1347,47159+46])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/parmatch.ml[1346,47103+16]..[1346,47103+17])
                                                  Ppat_var "p" (typing/parmatch.ml[1346,47103+16]..[1346,47103+17])
                                                expression (typing/parmatch.ml[1346,47103+20]..[1346,47103+52])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[1346,47103+20]..[1346,47103+50])
                                                    Pexp_ident "Patterns.Head.to_omega_pattern" (typing/parmatch.ml[1346,47103+20]..[1346,47103+50])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1346,47103+51]..[1346,47103+52])
                                                        Pexp_ident "p" (typing/parmatch.ml[1346,47103+51]..[1346,47103+52])
                                                  ]
                                            ]
                                            expression (typing/parmatch.ml[1347,47159+12]..[1347,47159+46])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[1347,47159+12]..[1347,47159+19])
                                                Pexp_ident "Seq.map" (typing/parmatch.ml[1347,47159+12]..[1347,47159+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1347,47159+20]..[1347,47159+32])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1347,47159+21]..[1347,47159+29])
                                                      Pexp_ident "set_args" (typing/parmatch.ml[1347,47159+21]..[1347,47159+29])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1347,47159+30]..[1347,47159+31])
                                                          Pexp_ident "p" (typing/parmatch.ml[1347,47159+30]..[1347,47159+31])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1347,47159+33]..[1347,47159+46])
                                                    Pexp_ident "sub_witnesses" (typing/parmatch.ml[1347,47159+33]..[1347,47159+46])
                                              ]
                              ]
                              expression (typing/parmatch.ml[1349,47217+8]..[1371,48205+35])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/parmatch.ml[1349,47217+12]..[1349,47217+21])
                                      Ppat_var "try_omega" (typing/parmatch.ml[1349,47217+12]..[1349,47217+21])
                                    expression (typing/parmatch.ml[1349,47217+22]..[1360,47668+61]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (typing/parmatch.ml[1349,47217+22]..[1349,47217+24])
                                        Ppat_construct "()" (typing/parmatch.ml[1349,47217+22]..[1349,47217+24])
                                        None
                                      expression (typing/parmatch.ml[1350,47244+10]..[1360,47668+61])
                                        Pexp_ifthenelse
                                        expression (typing/parmatch.ml[1350,47244+13]..[1350,47244+72])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[1350,47244+38]..[1350,47244+40])
                                            Pexp_ident "&&" (typing/parmatch.ml[1350,47244+38]..[1350,47244+40])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1350,47244+13]..[1350,47244+37])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[1350,47244+13]..[1350,47244+23])
                                                  Pexp_ident "full_match" (typing/parmatch.ml[1350,47244+13]..[1350,47244+23])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1350,47244+24]..[1350,47244+29])
                                                      Pexp_construct "false" (typing/parmatch.ml[1350,47244+24]..[1350,47244+29])
                                                      None
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1350,47244+30]..[1350,47244+37])
                                                      Pexp_ident "constrs" (typing/parmatch.ml[1350,47244+30]..[1350,47244+37])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1350,47244+41]..[1350,47244+72])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[1350,47244+41]..[1350,47244+44])
                                                  Pexp_ident "not" (typing/parmatch.ml[1350,47244+41]..[1350,47244+44])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1350,47244+45]..[1350,47244+72])
                                                      Pexp_apply
                                                      expression (typing/parmatch.ml[1350,47244+46]..[1350,47244+59])
                                                        Pexp_ident "should_extend" (typing/parmatch.ml[1350,47244+46]..[1350,47244+59])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[1350,47244+60]..[1350,47244+63])
                                                            Pexp_ident "ext" (typing/parmatch.ml[1350,47244+60]..[1350,47244+63])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[1350,47244+64]..[1350,47244+71])
                                                            Pexp_ident "constrs" (typing/parmatch.ml[1350,47244+64]..[1350,47244+71])
                                                      ]
                                                ]
                                          ]
                                        expression (typing/parmatch.ml[1351,47322+12]..[1351,47322+21])
                                          Pexp_ident "Seq.empty" (typing/parmatch.ml[1351,47322+12]..[1351,47322+21])
                                        Some
                                          expression (typing/parmatch.ml[1353,47359+12]..[1360,47668+61])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/parmatch.ml[1353,47359+16]..[1353,47359+29])
                                                  Ppat_var "sub_witnesses" (typing/parmatch.ml[1353,47359+16]..[1353,47359+29])
                                                expression (typing/parmatch.ml[1353,47359+32]..[1353,47359+57])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[1353,47359+32]..[1353,47359+39])
                                                    Pexp_ident "exhaust" (typing/parmatch.ml[1353,47359+32]..[1353,47359+39])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1353,47359+40]..[1353,47359+43])
                                                        Pexp_ident "ext" (typing/parmatch.ml[1353,47359+40]..[1353,47359+43])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1353,47359+44]..[1353,47359+51])
                                                        Pexp_ident "default" (typing/parmatch.ml[1353,47359+44]..[1353,47359+51])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1353,47359+52]..[1353,47359+57])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[1353,47359+54]..[1353,47359+55])
                                                          Pexp_ident "-" (typing/parmatch.ml[1353,47359+54]..[1353,47359+55])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1353,47359+53]..[1353,47359+54])
                                                              Pexp_ident "n" (typing/parmatch.ml[1353,47359+53]..[1353,47359+54])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1353,47359+55]..[1353,47359+56])
                                                              Pexp_constant PConst_int (1,None)
                                                        ]
                                                  ]
                                            ]
                                            expression (typing/parmatch.ml[1354,47420+12]..[1360,47668+61])
                                              Pexp_match
                                              expression (typing/parmatch.ml[1354,47420+18]..[1354,47420+41])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[1354,47420+18]..[1354,47420+29])
                                                  Pexp_ident "build_other" (typing/parmatch.ml[1354,47420+18]..[1354,47420+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1354,47420+30]..[1354,47420+33])
                                                      Pexp_ident "ext" (typing/parmatch.ml[1354,47420+30]..[1354,47420+33])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1354,47420+34]..[1354,47420+41])
                                                      Pexp_ident "constrs" (typing/parmatch.ml[1354,47420+34]..[1354,47420+41])
                                                ]
                                              [
                                                <case>
                                                  pattern (typing/parmatch.ml[1355,47467+14]..[1355,47467+29])
                                                    Ppat_exception
                                                    pattern (typing/parmatch.ml[1355,47467+24]..[1355,47467+29])
                                                      Ppat_construct "Empty" (typing/parmatch.ml[1355,47467+24]..[1355,47467+29])
                                                      None
                                                  expression (typing/parmatch.ml[1358,47602+16]..[1358,47602+46])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1358,47602+16]..[1358,47602+27])
                                                      Pexp_ident "fatal_error" (typing/parmatch.ml[1358,47602+16]..[1358,47602+27])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1358,47602+28]..[1358,47602+46])
                                                          Pexp_constant PConst_string("Parmatch.exhaust",(typing/parmatch.ml[1358,47602+29]..[1358,47602+45]),None)
                                                    ]
                                                <case>
                                                  pattern (typing/parmatch.ml[1359,47649+14]..[1359,47649+15])
                                                    Ppat_var "p" (typing/parmatch.ml[1359,47649+14]..[1359,47649+15])
                                                  expression (typing/parmatch.ml[1360,47668+16]..[1360,47668+61])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1360,47668+16]..[1360,47668+23])
                                                      Pexp_ident "Seq.map" (typing/parmatch.ml[1360,47668+16]..[1360,47668+23])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1360,47668+24]..[1360,47668+47])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (typing/parmatch.ml[1360,47668+29]..[1360,47668+33])
                                                            Ppat_var "tail" (typing/parmatch.ml[1360,47668+29]..[1360,47668+33])
                                                          expression (typing/parmatch.ml[1360,47668+37]..[1360,47668+46])
                                                            Pexp_construct "::" (typing/parmatch.ml[1360,47668+39]..[1360,47668+41])
                                                            Some
                                                              expression (typing/parmatch.ml[1360,47668+37]..[1360,47668+46]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (typing/parmatch.ml[1360,47668+37]..[1360,47668+38])
                                                                    Pexp_ident "p" (typing/parmatch.ml[1360,47668+37]..[1360,47668+38])
                                                                  expression (typing/parmatch.ml[1360,47668+42]..[1360,47668+46])
                                                                    Pexp_ident "tail" (typing/parmatch.ml[1360,47668+42]..[1360,47668+46])
                                                                ]
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1360,47668+48]..[1360,47668+61])
                                                          Pexp_ident "sub_witnesses" (typing/parmatch.ml[1360,47668+48]..[1360,47668+61])
                                                    ]
                                              ]
                                ]
                                expression (typing/parmatch.ml[1366,48010+8]..[1371,48205+35])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1368,48103+8]..[1368,48103+10])
                                    Pexp_ident "|>" (typing/parmatch.ml[1368,48103+8]..[1368,48103+10])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1366,48010+8]..[1367,48080+22])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1367,48080+8]..[1367,48080+10])
                                          Pexp_ident "|>" (typing/parmatch.ml[1367,48080+8]..[1367,48080+10])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1366,48010+8]..[1366,48010+69])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[1366,48010+61]..[1366,48010+62])
                                                Pexp_ident "@" (typing/parmatch.ml[1366,48010+61]..[1366,48010+62])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1366,48010+8]..[1366,48010+60])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1366,48010+8]..[1366,48010+16])
                                                      Pexp_ident "List.map" (typing/parmatch.ml[1366,48010+8]..[1366,48010+16])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1366,48010+17]..[1366,48010+52])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (typing/parmatch.ml[1366,48010+22]..[1366,48010+32])
                                                            Ppat_var "constr_mat" (typing/parmatch.ml[1366,48010+22]..[1366,48010+32])
                                                          expression (typing/parmatch.ml[1366,48010+36]..[1366,48010+51])
                                                            Pexp_construct "Some" (typing/parmatch.ml[1366,48010+36]..[1366,48010+40])
                                                            Some
                                                              expression (typing/parmatch.ml[1366,48010+41]..[1366,48010+51])
                                                                Pexp_ident "constr_mat" (typing/parmatch.ml[1366,48010+41]..[1366,48010+51])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1366,48010+53]..[1366,48010+60])
                                                          Pexp_ident "constrs" (typing/parmatch.ml[1366,48010+53]..[1366,48010+60])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1366,48010+63]..[1366,48010+69])
                                                    Pexp_construct "::" (typing/parmatch.ml[1366,48010+64]..[1366,48010+69]) ghost
                                                    Some
                                                      expression (typing/parmatch.ml[1366,48010+64]..[1366,48010+69]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/parmatch.ml[1366,48010+64]..[1366,48010+68])
                                                            Pexp_construct "None" (typing/parmatch.ml[1366,48010+64]..[1366,48010+68])
                                                            None
                                                          expression (typing/parmatch.ml[1366,48010+68]..[1366,48010+69]) ghost
                                                            Pexp_construct "[]" (typing/parmatch.ml[1366,48010+68]..[1366,48010+69]) ghost
                                                            None
                                                        ]
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1367,48080+11]..[1367,48080+22])
                                              Pexp_ident "List.to_seq" (typing/parmatch.ml[1367,48080+11]..[1367,48080+22])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1368,48103+11]..[1371,48205+35])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1368,48103+11]..[1368,48103+23])
                                          Pexp_ident "Seq.flat_map" (typing/parmatch.ml[1368,48103+11]..[1368,48103+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1369,48127+10]..[1371,48205+35])
                                              Pexp_function
                                              [
                                                <case>
                                                  pattern (typing/parmatch.ml[1370,48147+14]..[1370,48147+29])
                                                    Ppat_construct "Some" (typing/parmatch.ml[1370,48147+14]..[1370,48147+18])
                                                    Some
                                                      []
                                                      pattern (typing/parmatch.ml[1370,48147+19]..[1370,48147+29])
                                                        Ppat_var "constr_mat" (typing/parmatch.ml[1370,48147+19]..[1370,48147+29])
                                                  expression (typing/parmatch.ml[1370,48147+33]..[1370,48147+57])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1370,48147+33]..[1370,48147+46])
                                                      Pexp_ident "try_non_omega" (typing/parmatch.ml[1370,48147+33]..[1370,48147+46])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1370,48147+47]..[1370,48147+57])
                                                          Pexp_ident "constr_mat" (typing/parmatch.ml[1370,48147+47]..[1370,48147+57])
                                                    ]
                                                <case>
                                                  pattern (typing/parmatch.ml[1371,48205+14]..[1371,48205+18])
                                                    Ppat_construct "None" (typing/parmatch.ml[1371,48205+14]..[1371,48205+18])
                                                    None
                                                  expression (typing/parmatch.ml[1371,48205+22]..[1371,48205+34])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1371,48205+22]..[1371,48205+31])
                                                      Pexp_ident "try_omega" (typing/parmatch.ml[1371,48205+22]..[1371,48205+31])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1371,48205+32]..[1371,48205+34])
                                                          Pexp_construct "()" (typing/parmatch.ml[1371,48205+32]..[1371,48205+34])
                                                          None
                                                    ]
                                              ]
                                        ]
                                  ]
                        ]
    ]
  structure_item (typing/parmatch.ml[1374,48248+0]..[1378,48331+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1374,48248+4]..[1374,48248+11])
          Ppat_var "exhaust" (typing/parmatch.ml[1374,48248+4]..[1374,48248+11])
        expression (typing/parmatch.ml[1374,48248+12]..[1378,48331+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1374,48248+12]..[1374,48248+15])
            Ppat_var "ext" (typing/parmatch.ml[1374,48248+12]..[1374,48248+15])
          expression (typing/parmatch.ml[1374,48248+16]..[1378,48331+25]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1374,48248+16]..[1374,48248+19])
              Ppat_var "pss" (typing/parmatch.ml[1374,48248+16]..[1374,48248+19])
            expression (typing/parmatch.ml[1374,48248+20]..[1378,48331+25]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[1374,48248+20]..[1374,48248+21])
                Ppat_var "n" (typing/parmatch.ml[1374,48248+20]..[1374,48248+21])
              expression (typing/parmatch.ml[1375,48272+2]..[1378,48331+25])
                Pexp_apply
                expression (typing/parmatch.ml[1376,48292+2]..[1376,48292+4])
                  Pexp_ident "|>" (typing/parmatch.ml[1376,48292+2]..[1376,48292+4])
                [
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[1375,48272+2]..[1375,48272+19])
                      Pexp_apply
                      expression (typing/parmatch.ml[1375,48272+2]..[1375,48272+9])
                        Pexp_ident "exhaust" (typing/parmatch.ml[1375,48272+2]..[1375,48272+9])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1375,48272+10]..[1375,48272+13])
                            Pexp_ident "ext" (typing/parmatch.ml[1375,48272+10]..[1375,48272+13])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1375,48272+14]..[1375,48272+17])
                            Pexp_ident "pss" (typing/parmatch.ml[1375,48272+14]..[1375,48272+17])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1375,48272+18]..[1375,48272+19])
                            Pexp_ident "n" (typing/parmatch.ml[1375,48272+18]..[1375,48272+19])
                      ]
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[1376,48292+5]..[1378,48331+25])
                      Pexp_apply
                      expression (typing/parmatch.ml[1376,48292+5]..[1376,48292+12])
                        Pexp_ident "Seq.map" (typing/parmatch.ml[1376,48292+5]..[1376,48292+12])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1376,48292+13]..[1378,48331+25])
                            Pexp_function
                            [
                              <case>
                                pattern (typing/parmatch.ml[1377,48315+7]..[1377,48315+10])
                                  Ppat_construct "::" (typing/parmatch.ml[1377,48315+8]..[1377,48315+10]) ghost
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[1377,48315+8]..[1377,48315+10]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[1377,48315+8]..[1377,48315+9])
                                          Ppat_var "x" (typing/parmatch.ml[1377,48315+8]..[1377,48315+9])
                                        pattern (typing/parmatch.ml[1377,48315+9]..[1377,48315+10]) ghost
                                          Ppat_construct "[]" (typing/parmatch.ml[1377,48315+9]..[1377,48315+10]) ghost
                                          None
                                      ]
                                expression (typing/parmatch.ml[1377,48315+14]..[1377,48315+15])
                                  Pexp_ident "x" (typing/parmatch.ml[1377,48315+14]..[1377,48315+15])
                              <case>
                                pattern (typing/parmatch.ml[1378,48331+7]..[1378,48331+8])
                                  Ppat_any
                                expression (typing/parmatch.ml[1378,48331+12]..[1378,48331+24])
                                  Pexp_assert
                                  expression (typing/parmatch.ml[1378,48331+19]..[1378,48331+24])
                                    Pexp_construct "false" (typing/parmatch.ml[1378,48331+19]..[1378,48331+24])
                                    None
                            ]
                      ]
                ]
    ]
  structure_item (typing/parmatch.ml[1392,48916+0]..[1444,50982+9])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[1392,48916+8]..[1392,48916+25])
          Ppat_var "pressure_variants" (typing/parmatch.ml[1392,48916+8]..[1392,48916+25])
        expression (typing/parmatch.ml[1392,48916+26]..[1444,50982+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1392,48916+26]..[1392,48916+31])
            Ppat_var "tdefs" (typing/parmatch.ml[1392,48916+26]..[1392,48916+31])
          expression (typing/parmatch.ml[1392,48916+34]..[1444,50982+9])
            Pexp_function
            [
              <case>
                pattern (typing/parmatch.ml[1393,48959+4]..[1393,48959+6])
                  Ppat_construct "[]" (typing/parmatch.ml[1393,48959+4]..[1393,48959+6])
                  None
                expression (typing/parmatch.ml[1393,48959+13]..[1393,48959+18])
                  Pexp_construct "false" (typing/parmatch.ml[1393,48959+13]..[1393,48959+18])
                  None
              <case>
                pattern (typing/parmatch.ml[1394,48978+4]..[1394,48978+9])
                  Ppat_construct "::" (typing/parmatch.ml[1394,48978+6]..[1394,48978+8])
                  Some
                    []
                    pattern (typing/parmatch.ml[1394,48978+4]..[1394,48978+9]) ghost
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[1394,48978+4]..[1394,48978+6])
                          Ppat_construct "[]" (typing/parmatch.ml[1394,48978+4]..[1394,48978+6])
                          None
                        pattern (typing/parmatch.ml[1394,48978+8]..[1394,48978+9])
                          Ppat_any
                      ]
                expression (typing/parmatch.ml[1394,48978+13]..[1394,48978+17])
                  Pexp_construct "true" (typing/parmatch.ml[1394,48978+13]..[1394,48978+17])
                  None
              <case>
                pattern (typing/parmatch.ml[1395,48996+4]..[1395,48996+7])
                  Ppat_var "pss" (typing/parmatch.ml[1395,48996+4]..[1395,48996+7])
                expression (typing/parmatch.ml[1396,49009+6]..[1444,50982+9])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/parmatch.ml[1396,49009+10]..[1396,49009+13])
                        Ppat_var "pss" (typing/parmatch.ml[1396,49009+10]..[1396,49009+13])
                      expression (typing/parmatch.ml[1396,49009+16]..[1396,49009+38])
                        Pexp_apply
                        expression (typing/parmatch.ml[1396,49009+16]..[1396,49009+34])
                          Pexp_ident "simplify_first_col" (typing/parmatch.ml[1396,49009+16]..[1396,49009+34])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1396,49009+35]..[1396,49009+38])
                              Pexp_ident "pss" (typing/parmatch.ml[1396,49009+35]..[1396,49009+38])
                        ]
                  ]
                  expression (typing/parmatch.ml[1397,49051+6]..[1444,50982+9])
                    Pexp_ifthenelse
                    expression (typing/parmatch.ml[1397,49051+9]..[1397,49051+46])
                      Pexp_apply
                      expression (typing/parmatch.ml[1397,49051+9]..[1397,49051+12])
                        Pexp_ident "not" (typing/parmatch.ml[1397,49051+9]..[1397,49051+12])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1397,49051+13]..[1397,49051+46])
                            Pexp_apply
                            expression (typing/parmatch.ml[1397,49051+14]..[1397,49051+26])
                              Pexp_ident "all_coherent" (typing/parmatch.ml[1397,49051+14]..[1397,49051+26])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1397,49051+27]..[1397,49051+45])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1397,49051+28]..[1397,49051+40])
                                    Pexp_ident "first_column" (typing/parmatch.ml[1397,49051+28]..[1397,49051+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1397,49051+41]..[1397,49051+44])
                                        Pexp_ident "pss" (typing/parmatch.ml[1397,49051+41]..[1397,49051+44])
                                  ]
                            ]
                      ]
                    expression (typing/parmatch.ml[1398,49103+8]..[1398,49103+12])
                      Pexp_construct "true" (typing/parmatch.ml[1398,49103+8]..[1398,49103+12])
                      None
                    Some
                      expression (typing/parmatch.ml[1399,49116+11]..[1444,50982+9])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/parmatch.ml[1400,49133+12]..[1400,49133+14])
                              Ppat_var "q0" (typing/parmatch.ml[1400,49133+12]..[1400,49133+14])
                            expression (typing/parmatch.ml[1400,49133+17]..[1400,49133+52])
                              Pexp_apply
                              expression (typing/parmatch.ml[1400,49133+17]..[1400,49133+26])
                                Pexp_ident "discr_pat" (typing/parmatch.ml[1400,49133+17]..[1400,49133+26])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1400,49133+27]..[1400,49133+48])
                                    Pexp_ident "Patterns.Simple.omega" (typing/parmatch.ml[1400,49133+27]..[1400,49133+48])
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1400,49133+49]..[1400,49133+52])
                                    Pexp_ident "pss" (typing/parmatch.ml[1400,49133+49]..[1400,49133+52])
                              ]
                        ]
                        expression (typing/parmatch.ml[1401,49189+8]..[1443,50965+16])
                          Pexp_match
                          expression (typing/parmatch.ml[1401,49189+14]..[1401,49189+66])
                            Pexp_apply
                            expression (typing/parmatch.ml[1401,49189+14]..[1401,49189+43])
                              Pexp_ident "build_specialized_submatrices" (typing/parmatch.ml[1401,49189+14]..[1401,49189+43])
                            [
                              <arg>
                              Labelled "extend_row"
                                expression (typing/parmatch.ml[1401,49189+56]..[1401,49189+59])
                                  Pexp_ident "@" (typing/parmatch.ml[1401,49189+56]..[1401,49189+59])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1401,49189+60]..[1401,49189+62])
                                  Pexp_ident "q0" (typing/parmatch.ml[1401,49189+60]..[1401,49189+62])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1401,49189+63]..[1401,49189+66])
                                  Pexp_ident "pss" (typing/parmatch.ml[1401,49189+63]..[1401,49189+66])
                            ]
                          [
                            <case>
                              pattern (typing/parmatch.ml[1402,49261+10]..[1402,49261+35])
                                Ppat_record Closed
                                [
                                  "default" (typing/parmatch.ml[1402,49261+12]..[1402,49261+19]) ghost
                                    pattern (typing/parmatch.ml[1402,49261+12]..[1402,49261+19])
                                      Ppat_var "default" (typing/parmatch.ml[1402,49261+12]..[1402,49261+19])
                                  "constrs" (typing/parmatch.ml[1402,49261+21]..[1402,49261+28])
                                    pattern (typing/parmatch.ml[1402,49261+31]..[1402,49261+33])
                                      Ppat_construct "[]" (typing/parmatch.ml[1402,49261+31]..[1402,49261+33])
                                      None
                                ]
                              expression (typing/parmatch.ml[1402,49261+39]..[1402,49261+70])
                                Pexp_apply
                                expression (typing/parmatch.ml[1402,49261+39]..[1402,49261+56])
                                  Pexp_ident "pressure_variants" (typing/parmatch.ml[1402,49261+39]..[1402,49261+56])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1402,49261+57]..[1402,49261+62])
                                      Pexp_ident "tdefs" (typing/parmatch.ml[1402,49261+57]..[1402,49261+62])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1402,49261+63]..[1402,49261+70])
                                      Pexp_ident "default" (typing/parmatch.ml[1402,49261+63]..[1402,49261+70])
                                ]
                            <case>
                              pattern (typing/parmatch.ml[1403,49332+10]..[1403,49332+30])
                                Ppat_record Closed
                                [
                                  "default" (typing/parmatch.ml[1403,49332+12]..[1403,49332+19]) ghost
                                    pattern (typing/parmatch.ml[1403,49332+12]..[1403,49332+19])
                                      Ppat_var "default" (typing/parmatch.ml[1403,49332+12]..[1403,49332+19])
                                  "constrs" (typing/parmatch.ml[1403,49332+21]..[1403,49332+28]) ghost
                                    pattern (typing/parmatch.ml[1403,49332+21]..[1403,49332+28])
                                      Ppat_var "constrs" (typing/parmatch.ml[1403,49332+21]..[1403,49332+28])
                                ]
                              expression (typing/parmatch.ml[1404,49366+12]..[1443,50965+16])
                                Pexp_let Rec
                                [
                                  <def>
                                    pattern (typing/parmatch.ml[1404,49366+20]..[1404,49366+33])
                                      Ppat_var "try_non_omega" (typing/parmatch.ml[1404,49366+20]..[1404,49366+33])
                                    expression (typing/parmatch.ml[1404,49366+36]..[1412,49835+26])
                                      Pexp_function
                                      [
                                        <case>
                                          pattern (typing/parmatch.ml[1405,49411+16]..[1405,49411+31])
                                            Ppat_construct "::" (typing/parmatch.ml[1405,49411+25]..[1405,49411+27])
                                            Some
                                              []
                                              pattern (typing/parmatch.ml[1405,49411+16]..[1405,49411+31]) ghost
                                                Ppat_tuple
                                                [
                                                  pattern (typing/parmatch.ml[1405,49411+16]..[1405,49411+24])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/parmatch.ml[1405,49411+17]..[1405,49411+19])
                                                        Ppat_var "_p" (typing/parmatch.ml[1405,49411+17]..[1405,49411+19])
                                                      pattern (typing/parmatch.ml[1405,49411+20]..[1405,49411+23])
                                                        Ppat_var "pss" (typing/parmatch.ml[1405,49411+20]..[1405,49411+23])
                                                    ]
                                                  pattern (typing/parmatch.ml[1405,49411+28]..[1405,49411+31])
                                                    Ppat_var "rem" (typing/parmatch.ml[1405,49411+28]..[1405,49411+31])
                                                ]
                                          expression (typing/parmatch.ml[1406,49446+18]..[1411,49793+41])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/parmatch.ml[1406,49446+22]..[1406,49446+24])
                                                  Ppat_var "ok" (typing/parmatch.ml[1406,49446+22]..[1406,49446+24])
                                                expression (typing/parmatch.ml[1406,49446+27]..[1406,49446+54])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[1406,49446+27]..[1406,49446+44])
                                                    Pexp_ident "pressure_variants" (typing/parmatch.ml[1406,49446+27]..[1406,49446+44])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1406,49446+45]..[1406,49446+50])
                                                        Pexp_ident "tdefs" (typing/parmatch.ml[1406,49446+45]..[1406,49446+50])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1406,49446+51]..[1406,49446+54])
                                                        Pexp_ident "pss" (typing/parmatch.ml[1406,49446+51]..[1406,49446+54])
                                                  ]
                                            ]
                                            expression (typing/parmatch.ml[1411,49793+18]..[1411,49793+41])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[1411,49793+36]..[1411,49793+38])
                                                Pexp_ident "&&" (typing/parmatch.ml[1411,49793+36]..[1411,49793+38])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1411,49793+18]..[1411,49793+35])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1411,49793+18]..[1411,49793+31])
                                                      Pexp_ident "try_non_omega" (typing/parmatch.ml[1411,49793+18]..[1411,49793+31])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1411,49793+32]..[1411,49793+35])
                                                          Pexp_ident "rem" (typing/parmatch.ml[1411,49793+32]..[1411,49793+35])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1411,49793+39]..[1411,49793+41])
                                                    Pexp_ident "ok" (typing/parmatch.ml[1411,49793+39]..[1411,49793+41])
                                              ]
                                        <case>
                                          pattern (typing/parmatch.ml[1412,49835+16]..[1412,49835+18])
                                            Ppat_construct "[]" (typing/parmatch.ml[1412,49835+16]..[1412,49835+18])
                                            None
                                          expression (typing/parmatch.ml[1412,49835+22]..[1412,49835+26])
                                            Pexp_construct "true" (typing/parmatch.ml[1412,49835+22]..[1412,49835+26])
                                            None
                                      ]
                                ]
                                expression (typing/parmatch.ml[1414,49877+12]..[1443,50965+16])
                                  Pexp_ifthenelse
                                  expression (typing/parmatch.ml[1414,49877+15]..[1414,49877+46])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1414,49877+15]..[1414,49877+25])
                                      Pexp_ident "full_match" (typing/parmatch.ml[1414,49877+15]..[1414,49877+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1414,49877+26]..[1414,49877+38])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[1414,49877+32]..[1414,49877+33])
                                            Pexp_ident "=" (typing/parmatch.ml[1414,49877+32]..[1414,49877+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1414,49877+27]..[1414,49877+32])
                                                Pexp_ident "tdefs" (typing/parmatch.ml[1414,49877+27]..[1414,49877+32])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1414,49877+33]..[1414,49877+37])
                                                Pexp_construct "None" (typing/parmatch.ml[1414,49877+33]..[1414,49877+37])
                                                None
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1414,49877+39]..[1414,49877+46])
                                          Pexp_ident "constrs" (typing/parmatch.ml[1414,49877+39]..[1414,49877+46])
                                    ]
                                  expression (typing/parmatch.ml[1415,49929+14]..[1415,49929+35])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1415,49929+14]..[1415,49929+27])
                                      Pexp_ident "try_non_omega" (typing/parmatch.ml[1415,49929+14]..[1415,49929+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1415,49929+28]..[1415,49929+35])
                                          Pexp_ident "constrs" (typing/parmatch.ml[1415,49929+28]..[1415,49929+35])
                                    ]
                                  Some
                                    expression (typing/parmatch.ml[1416,49965+17]..[1443,50965+16])
                                      Pexp_ifthenelse
                                      expression (typing/parmatch.ml[1416,49965+20]..[1416,49965+32])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1416,49965+26]..[1416,49965+27])
                                          Pexp_ident "=" (typing/parmatch.ml[1416,49965+26]..[1416,49965+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1416,49965+20]..[1416,49965+25])
                                              Pexp_ident "tdefs" (typing/parmatch.ml[1416,49965+20]..[1416,49965+25])
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1416,49965+28]..[1416,49965+32])
                                              Pexp_construct "None" (typing/parmatch.ml[1416,49965+28]..[1416,49965+32])
                                              None
                                        ]
                                      expression (typing/parmatch.ml[1417,50003+14]..[1417,50003+44])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1417,50003+14]..[1417,50003+31])
                                          Pexp_ident "pressure_variants" (typing/parmatch.ml[1417,50003+14]..[1417,50003+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1417,50003+32]..[1417,50003+36])
                                              Pexp_construct "None" (typing/parmatch.ml[1417,50003+32]..[1417,50003+36])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1417,50003+37]..[1417,50003+44])
                                              Pexp_ident "default" (typing/parmatch.ml[1417,50003+37]..[1417,50003+44])
                                        ]
                                      Some
                                        expression (typing/parmatch.ml[1419,50065+14]..[1443,50965+16])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/parmatch.ml[1419,50065+18]..[1419,50065+22])
                                                Ppat_var "full" (typing/parmatch.ml[1419,50065+18]..[1419,50065+22])
                                              expression (typing/parmatch.ml[1419,50065+25]..[1419,50065+48])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[1419,50065+25]..[1419,50065+35])
                                                  Pexp_ident "full_match" (typing/parmatch.ml[1419,50065+25]..[1419,50065+35])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1419,50065+36]..[1419,50065+40])
                                                      Pexp_construct "true" (typing/parmatch.ml[1419,50065+36]..[1419,50065+40])
                                                      None
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1419,50065+41]..[1419,50065+48])
                                                      Pexp_ident "constrs" (typing/parmatch.ml[1419,50065+41]..[1419,50065+48])
                                                ]
                                          ]
                                          expression (typing/parmatch.ml[1420,50117+14]..[1443,50965+16])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/parmatch.ml[1420,50117+18]..[1420,50117+20])
                                                  Ppat_var "ok" (typing/parmatch.ml[1420,50117+18]..[1420,50117+20])
                                                expression (typing/parmatch.ml[1421,50140+16]..[1429,50472+19])
                                                  Pexp_ifthenelse
                                                  expression (typing/parmatch.ml[1421,50140+19]..[1421,50140+23])
                                                    Pexp_ident "full" (typing/parmatch.ml[1421,50140+19]..[1421,50140+23])
                                                  expression (typing/parmatch.ml[1422,50169+18]..[1422,50169+39])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1422,50169+18]..[1422,50169+31])
                                                      Pexp_ident "try_non_omega" (typing/parmatch.ml[1422,50169+18]..[1422,50169+31])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1422,50169+32]..[1422,50169+39])
                                                          Pexp_ident "constrs" (typing/parmatch.ml[1422,50169+32]..[1422,50169+39])
                                                    ]
                                                  Some
                                                    expression (typing/parmatch.ml[1423,50209+21]..[1429,50472+19])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (typing/parmatch.ml[1424,50236+22]..[1424,50236+54])
                                                            Ppat_record Open
                                                            [
                                                              "constrs" (typing/parmatch.ml[1424,50236+24]..[1424,50236+31])
                                                                pattern (typing/parmatch.ml[1424,50236+34]..[1424,50236+49])
                                                                  Ppat_var "partial_constrs" (typing/parmatch.ml[1424,50236+34]..[1424,50236+49])
                                                            ]
                                                          expression (typing/parmatch.ml[1425,50293+20]..[1426,50362+40])
                                                            Pexp_apply
                                                            expression (typing/parmatch.ml[1425,50293+20]..[1425,50293+49])
                                                              Pexp_ident "build_specialized_submatrices" (typing/parmatch.ml[1425,50293+20]..[1425,50293+49])
                                                            [
                                                              <arg>
                                                              Labelled "extend_row"
                                                                expression (typing/parmatch.ml[1425,50293+62]..[1425,50293+65])
                                                                  Pexp_ident "@" (typing/parmatch.ml[1425,50293+62]..[1425,50293+65])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[1425,50293+66]..[1425,50293+68])
                                                                  Pexp_ident "q0" (typing/parmatch.ml[1425,50293+66]..[1425,50293+68])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[1426,50362+22]..[1426,50362+40])
                                                                  Pexp_apply
                                                                  expression (typing/parmatch.ml[1426,50362+23]..[1426,50362+35])
                                                                    Pexp_ident "mark_partial" (typing/parmatch.ml[1426,50362+23]..[1426,50362+35])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/parmatch.ml[1426,50362+36]..[1426,50362+39])
Pexp_ident "pss" (typing/parmatch.ml[1426,50362+36]..[1426,50362+39])
                                                                  ]
                                                            ]
                                                      ]
                                                      expression (typing/parmatch.ml[1428,50424+18]..[1428,50424+47])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[1428,50424+18]..[1428,50424+31])
                                                          Pexp_ident "try_non_omega" (typing/parmatch.ml[1428,50424+18]..[1428,50424+31])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1428,50424+32]..[1428,50424+47])
                                                              Pexp_ident "partial_constrs" (typing/parmatch.ml[1428,50424+32]..[1428,50424+47])
                                                        ]
                                            ]
                                            expression (typing/parmatch.ml[1431,50509+14]..[1443,50965+16])
                                              Pexp_sequence
                                              expression (typing/parmatch.ml[1431,50509+14]..[1442,50946+17])
                                                Pexp_match
                                                expression (typing/parmatch.ml[1431,50509+26]..[1431,50509+40])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/parmatch.ml[1431,50509+26]..[1431,50509+33])
                                                      Pexp_ident "constrs" (typing/parmatch.ml[1431,50509+26]..[1431,50509+33])
                                                    expression (typing/parmatch.ml[1431,50509+35]..[1431,50509+40])
                                                      Pexp_ident "tdefs" (typing/parmatch.ml[1431,50509+35]..[1431,50509+40])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (typing/parmatch.ml[1432,50555+16]..[1433,50577+23])
                                                      Ppat_or
                                                      pattern (typing/parmatch.ml[1432,50555+16]..[1432,50555+21])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/parmatch.ml[1432,50555+16]..[1432,50555+18])
                                                            Ppat_construct "[]" (typing/parmatch.ml[1432,50555+16]..[1432,50555+18])
                                                            None
                                                          pattern (typing/parmatch.ml[1432,50555+20]..[1432,50555+21])
                                                            Ppat_any
                                                        ]
                                                      pattern (typing/parmatch.ml[1433,50577+16]..[1433,50577+23])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/parmatch.ml[1433,50577+16]..[1433,50577+17])
                                                            Ppat_any
                                                          pattern (typing/parmatch.ml[1433,50577+19]..[1433,50577+23])
                                                            Ppat_construct "None" (typing/parmatch.ml[1433,50577+19]..[1433,50577+23])
                                                            None
                                                        ]
                                                    expression (typing/parmatch.ml[1433,50577+27]..[1433,50577+29])
                                                      Pexp_construct "()" (typing/parmatch.ml[1433,50577+27]..[1433,50577+29])
                                                      None
                                                  <case>
                                                    pattern (typing/parmatch.ml[1434,50607+16]..[1434,50607+37])
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/parmatch.ml[1434,50607+16]..[1434,50607+27])
                                                          Ppat_construct "::" (typing/parmatch.ml[1434,50607+23]..[1434,50607+25])
                                                          Some
                                                            []
                                                            pattern (typing/parmatch.ml[1434,50607+16]..[1434,50607+27]) ghost
                                                              Ppat_tuple
                                                              [
                                                                pattern (typing/parmatch.ml[1434,50607+16]..[1434,50607+22])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (typing/parmatch.ml[1434,50607+17]..[1434,50607+18])
                                                                      Ppat_var "d" (typing/parmatch.ml[1434,50607+17]..[1434,50607+18])
                                                                    pattern (typing/parmatch.ml[1434,50607+20]..[1434,50607+21])
                                                                      Ppat_any
                                                                  ]
                                                                pattern (typing/parmatch.ml[1434,50607+26]..[1434,50607+27])
                                                                  Ppat_any
                                                              ]
                                                        pattern (typing/parmatch.ml[1434,50607+29]..[1434,50607+37])
                                                          Ppat_construct "Some" (typing/parmatch.ml[1434,50607+29]..[1434,50607+33])
                                                          Some
                                                            []
                                                            pattern (typing/parmatch.ml[1434,50607+34]..[1434,50607+37])
                                                              Ppat_var "env" (typing/parmatch.ml[1434,50607+34]..[1434,50607+37])
                                                      ]
                                                    expression (typing/parmatch.ml[1435,50648+16]..[1441,50920+25])
                                                      Pexp_match
                                                      expression (typing/parmatch.ml[1435,50648+22]..[1435,50648+32])
                                                        Pexp_field
                                                        expression (typing/parmatch.ml[1435,50648+22]..[1435,50648+23])
                                                          Pexp_ident "d" (typing/parmatch.ml[1435,50648+22]..[1435,50648+23])
                                                        "pat_desc" (typing/parmatch.ml[1435,50648+24]..[1435,50648+32])
                                                      [
                                                        <case>
                                                          pattern (typing/parmatch.ml[1436,50686+18]..[1436,50686+41])
                                                            Ppat_construct "Variant" (typing/parmatch.ml[1436,50686+18]..[1436,50686+25])
                                                            Some
                                                              []
                                                              pattern (typing/parmatch.ml[1436,50686+26]..[1436,50686+41])
                                                                Ppat_record Open
                                                                [
                                                                  "type_row" (typing/parmatch.ml[1436,50686+28]..[1436,50686+36]) ghost
                                                                    pattern (typing/parmatch.ml[1436,50686+28]..[1436,50686+36])
                                                                      Ppat_var "type_row" (typing/parmatch.ml[1436,50686+28]..[1436,50686+36])
                                                                ]
                                                          expression (typing/parmatch.ml[1437,50731+18]..[1440,50875+44])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (typing/parmatch.ml[1437,50731+22]..[1437,50731+25])
                                                                  Ppat_var "row" (typing/parmatch.ml[1437,50731+22]..[1437,50731+25])
                                                                expression (typing/parmatch.ml[1437,50731+28]..[1437,50731+39])
                                                                  Pexp_apply
                                                                  expression (typing/parmatch.ml[1437,50731+28]..[1437,50731+36])
                                                                    Pexp_ident "type_row" (typing/parmatch.ml[1437,50731+28]..[1437,50731+36])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/parmatch.ml[1437,50731+37]..[1437,50731+39])
Pexp_construct "()" (typing/parmatch.ml[1437,50731+37]..[1437,50731+39])
None
                                                                  ]
                                                            ]
                                                            expression (typing/parmatch.ml[1438,50774+18]..[1440,50875+44])
                                                              Pexp_ifthenelse
                                                              expression (typing/parmatch.ml[1438,50774+21]..[1439,50815+51])
                                                                Pexp_apply
                                                                expression (typing/parmatch.ml[1439,50815+18]..[1439,50815+20])
                                                                  Pexp_ident "||" (typing/parmatch.ml[1439,50815+18]..[1439,50815+20])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/parmatch.ml[1438,50774+21]..[1438,50774+40])
                                                                      Pexp_apply
                                                                      expression (typing/parmatch.ml[1438,50774+21]..[1438,50774+36])
Pexp_ident "Btype.row_fixed" (typing/parmatch.ml[1438,50774+21]..[1438,50774+36])
                                                                      [
<arg>
Nolabel
  expression (typing/parmatch.ml[1438,50774+37]..[1438,50774+40])
    Pexp_ident "row" (typing/parmatch.ml[1438,50774+37]..[1438,50774+40])
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/parmatch.ml[1439,50815+21]..[1439,50815+51])
                                                                      Pexp_apply
                                                                      expression (typing/parmatch.ml[1439,50815+21]..[1439,50815+38])
Pexp_ident "pressure_variants" (typing/parmatch.ml[1439,50815+21]..[1439,50815+38])
                                                                      [
<arg>
Nolabel
  expression (typing/parmatch.ml[1439,50815+39]..[1439,50815+43])
    Pexp_construct "None" (typing/parmatch.ml[1439,50815+39]..[1439,50815+43])
    None
<arg>
Nolabel
  expression (typing/parmatch.ml[1439,50815+44]..[1439,50815+51])
    Pexp_ident "default" (typing/parmatch.ml[1439,50815+44]..[1439,50815+51])
                                                                      ]
                                                                ]
                                                              expression (typing/parmatch.ml[1439,50815+57]..[1439,50815+59])
                                                                Pexp_construct "()" (typing/parmatch.ml[1439,50815+57]..[1439,50815+59])
                                                                None
                                                              Some
                                                                expression (typing/parmatch.ml[1440,50875+23]..[1440,50875+44])
                                                                  Pexp_apply
                                                                  expression (typing/parmatch.ml[1440,50875+23]..[1440,50875+36])
                                                                    Pexp_ident "close_variant" (typing/parmatch.ml[1440,50875+23]..[1440,50875+36])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/parmatch.ml[1440,50875+37]..[1440,50875+40])
Pexp_ident "env" (typing/parmatch.ml[1440,50875+37]..[1440,50875+40])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (typing/parmatch.ml[1440,50875+41]..[1440,50875+44])
Pexp_ident "row" (typing/parmatch.ml[1440,50875+41]..[1440,50875+44])
                                                                  ]
                                                        <case>
                                                          pattern (typing/parmatch.ml[1441,50920+18]..[1441,50920+19])
                                                            Ppat_any
                                                          expression (typing/parmatch.ml[1441,50920+23]..[1441,50920+25])
                                                            Pexp_construct "()" (typing/parmatch.ml[1441,50920+23]..[1441,50920+25])
                                                            None
                                                      ]
                                                ]
                                              expression (typing/parmatch.ml[1443,50965+14]..[1443,50965+16])
                                                Pexp_ident "ok" (typing/parmatch.ml[1443,50965+14]..[1443,50965+16])
                          ]
            ]
    ]
  structure_item (typing/parmatch.ml[1455,51181+0]..[1458,51318+38])
    Pstr_type Rec
    [
      type_declaration "answer" (typing/parmatch.ml[1455,51181+5]..[1455,51181+11]) (typing/parmatch.ml[1455,51181+0]..[1458,51318+38])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/parmatch.ml[1456,51195+2]..[1456,51195+8])
                "Used" (typing/parmatch.ml[1456,51195+4]..[1456,51195+8])
                []
                None
              (typing/parmatch.ml[1457,51256+2]..[1457,51256+10])
                "Unused" (typing/parmatch.ml[1457,51256+4]..[1457,51256+10])
                []
                None
              (typing/parmatch.ml[1458,51318+2]..[1458,51318+38])
                "Upartial" (typing/parmatch.ml[1458,51318+4]..[1458,51318+12])
                [
                  core_type (typing/parmatch.ml[1458,51318+16]..[1458,51318+38])
                    Ptyp_constr "list" (typing/parmatch.ml[1458,51318+34]..[1458,51318+38])
                    [
                      core_type (typing/parmatch.ml[1458,51318+16]..[1458,51318+33])
                        Ptyp_constr "Typedtree.pattern" (typing/parmatch.ml[1458,51318+16]..[1458,51318+33])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/parmatch.ml[1466,51550+0]..[1467,51572+70])
    Pstr_type Rec
    [
      type_declaration "usefulness_row" (typing/parmatch.ml[1466,51550+5]..[1466,51550+19]) (typing/parmatch.ml[1466,51550+0]..[1467,51572+70])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/parmatch.ml[1467,51572+3]..[1467,51572+26])
                Immutable
                "no_ors" (typing/parmatch.ml[1467,51572+3]..[1467,51572+9])                core_type (typing/parmatch.ml[1467,51572+12]..[1467,51572+24])
                  Ptyp_constr "list" (typing/parmatch.ml[1467,51572+20]..[1467,51572+24])
                  [
                    core_type (typing/parmatch.ml[1467,51572+12]..[1467,51572+19])
                      Ptyp_constr "pattern" (typing/parmatch.ml[1467,51572+12]..[1467,51572+19])
                      []
                  ]
              (typing/parmatch.ml[1467,51572+27]..[1467,51572+47])
                Immutable
                "ors" (typing/parmatch.ml[1467,51572+27]..[1467,51572+30])                core_type (typing/parmatch.ml[1467,51572+33]..[1467,51572+45])
                  Ptyp_constr "list" (typing/parmatch.ml[1467,51572+41]..[1467,51572+45])
                  [
                    core_type (typing/parmatch.ml[1467,51572+33]..[1467,51572+40])
                      Ptyp_constr "pattern" (typing/parmatch.ml[1467,51572+33]..[1467,51572+40])
                      []
                  ]
              (typing/parmatch.ml[1467,51572+48]..[1467,51572+69])
                Immutable
                "active" (typing/parmatch.ml[1467,51572+48]..[1467,51572+54])                core_type (typing/parmatch.ml[1467,51572+57]..[1467,51572+69])
                  Ptyp_constr "list" (typing/parmatch.ml[1467,51572+65]..[1467,51572+69])
                  [
                    core_type (typing/parmatch.ml[1467,51572+57]..[1467,51572+64])
                      Ptyp_constr "pattern" (typing/parmatch.ml[1467,51572+57]..[1467,51572+64])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/parmatch.ml[1486,51997+0]..[1486,51997+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1486,51997+4]..[1486,51997+12])
          Ppat_var "make_row" (typing/parmatch.ml[1486,51997+4]..[1486,51997+12])
        expression (typing/parmatch.ml[1486,51997+13]..[1486,51997+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1486,51997+13]..[1486,51997+15])
            Ppat_var "ps" (typing/parmatch.ml[1486,51997+13]..[1486,51997+15])
          expression (typing/parmatch.ml[1486,51997+18]..[1486,51997+49])
            Pexp_record
            [
              "ors" (typing/parmatch.ml[1486,51997+19]..[1486,51997+22])
                expression (typing/parmatch.ml[1486,51997+23]..[1486,51997+25])
                  Pexp_construct "[]" (typing/parmatch.ml[1486,51997+23]..[1486,51997+25])
                  None
              "no_ors" (typing/parmatch.ml[1486,51997+28]..[1486,51997+34])
                expression (typing/parmatch.ml[1486,51997+35]..[1486,51997+37])
                  Pexp_construct "[]" (typing/parmatch.ml[1486,51997+35]..[1486,51997+37])
                  None
              "active" (typing/parmatch.ml[1486,51997+39]..[1486,51997+45])
                expression (typing/parmatch.ml[1486,51997+46]..[1486,51997+48])
                  Pexp_ident "ps" (typing/parmatch.ml[1486,51997+46]..[1486,51997+48])
            ]
            None
    ]
  structure_item (typing/parmatch.ml[1488,52048+0]..[1488,52048+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1488,52048+4]..[1488,52048+13])
          Ppat_var "make_rows" (typing/parmatch.ml[1488,52048+4]..[1488,52048+13])
        expression (typing/parmatch.ml[1488,52048+14]..[1488,52048+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1488,52048+14]..[1488,52048+17])
            Ppat_var "pss" (typing/parmatch.ml[1488,52048+14]..[1488,52048+17])
          expression (typing/parmatch.ml[1488,52048+20]..[1488,52048+41])
            Pexp_apply
            expression (typing/parmatch.ml[1488,52048+20]..[1488,52048+28])
              Pexp_ident "List.map" (typing/parmatch.ml[1488,52048+20]..[1488,52048+28])
            [
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1488,52048+29]..[1488,52048+37])
                  Pexp_ident "make_row" (typing/parmatch.ml[1488,52048+29]..[1488,52048+37])
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1488,52048+38]..[1488,52048+41])
                  Pexp_ident "pss" (typing/parmatch.ml[1488,52048+38]..[1488,52048+41])
            ]
    ]
  structure_item (typing/parmatch.ml[1492,52149+0]..[1494,52239+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1492,52149+4]..[1492,52149+10])
          Ppat_var "is_var" (typing/parmatch.ml[1492,52149+4]..[1492,52149+10])
        expression (typing/parmatch.ml[1492,52149+11]..[1494,52239+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1492,52149+11]..[1492,52149+12])
            Ppat_var "p" (typing/parmatch.ml[1492,52149+11]..[1492,52149+12])
          expression (typing/parmatch.ml[1492,52149+15]..[1494,52239+15])
            Pexp_match
            expression (typing/parmatch.ml[1492,52149+21]..[1492,52149+69])
              Pexp_field
              expression (typing/parmatch.ml[1492,52149+21]..[1492,52149+60])
                Pexp_open Fresh
                module_expr (typing/parmatch.ml[1492,52149+21]..[1492,52149+37])
                  Pmod_ident "Patterns.General" (typing/parmatch.ml[1492,52149+21]..[1492,52149+37])
                expression (typing/parmatch.ml[1492,52149+39]..[1492,52149+59])
                  Pexp_apply
                  expression (typing/parmatch.ml[1492,52149+46]..[1492,52149+48])
                    Pexp_ident "|>" (typing/parmatch.ml[1492,52149+46]..[1492,52149+48])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[1492,52149+39]..[1492,52149+45])
                        Pexp_apply
                        expression (typing/parmatch.ml[1492,52149+39]..[1492,52149+43])
                          Pexp_ident "view" (typing/parmatch.ml[1492,52149+39]..[1492,52149+43])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1492,52149+44]..[1492,52149+45])
                              Pexp_ident "p" (typing/parmatch.ml[1492,52149+44]..[1492,52149+45])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[1492,52149+49]..[1492,52149+59])
                        Pexp_ident "strip_vars" (typing/parmatch.ml[1492,52149+49]..[1492,52149+59])
                  ]
              "pat_desc" (typing/parmatch.ml[1492,52149+61]..[1492,52149+69])
            [
              <case>
                pattern (typing/parmatch.ml[1493,52224+2]..[1493,52224+6])
                  Ppat_variant "Any"
                  None
                expression (typing/parmatch.ml[1493,52224+10]..[1493,52224+14])
                  Pexp_construct "true" (typing/parmatch.ml[1493,52224+10]..[1493,52224+14])
                  None
              <case>
                pattern (typing/parmatch.ml[1494,52239+2]..[1494,52239+3])
                  Ppat_any
                expression (typing/parmatch.ml[1494,52239+10]..[1494,52239+15])
                  Pexp_construct "false" (typing/parmatch.ml[1494,52239+10]..[1494,52239+15])
                  None
            ]
    ]
  structure_item (typing/parmatch.ml[1496,52256+0]..[1501,52379+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1496,52256+4]..[1496,52256+17])
          Ppat_var "is_var_column" (typing/parmatch.ml[1496,52256+4]..[1496,52256+17])
        expression (typing/parmatch.ml[1496,52256+18]..[1501,52379+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1496,52256+18]..[1496,52256+20])
            Ppat_var "rs" (typing/parmatch.ml[1496,52256+18]..[1496,52256+20])
          expression (typing/parmatch.ml[1497,52279+2]..[1501,52379+6])
            Pexp_apply
            expression (typing/parmatch.ml[1497,52279+2]..[1497,52279+14])
              Pexp_ident "List.for_all" (typing/parmatch.ml[1497,52279+2]..[1497,52279+14])
            [
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1498,52294+4]..[1500,52351+27])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/parmatch.ml[1498,52294+9]..[1498,52294+10])
                    Ppat_var "r" (typing/parmatch.ml[1498,52294+9]..[1498,52294+10])
                  expression (typing/parmatch.ml[1498,52294+14]..[1500,52351+26])
                    Pexp_match
                    expression (typing/parmatch.ml[1498,52294+20]..[1498,52294+28])
                      Pexp_field
                      expression (typing/parmatch.ml[1498,52294+20]..[1498,52294+21])
                        Pexp_ident "r" (typing/parmatch.ml[1498,52294+20]..[1498,52294+21])
                      "active" (typing/parmatch.ml[1498,52294+22]..[1498,52294+28])
                    [
                      <case>
                        pattern (typing/parmatch.ml[1499,52328+6]..[1499,52328+10])
                          Ppat_construct "::" (typing/parmatch.ml[1499,52328+7]..[1499,52328+9])
                          Some
                            []
                            pattern (typing/parmatch.ml[1499,52328+6]..[1499,52328+10]) ghost
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[1499,52328+6]..[1499,52328+7])
                                  Ppat_var "p" (typing/parmatch.ml[1499,52328+6]..[1499,52328+7])
                                pattern (typing/parmatch.ml[1499,52328+9]..[1499,52328+10])
                                  Ppat_any
                              ]
                        expression (typing/parmatch.ml[1499,52328+14]..[1499,52328+22])
                          Pexp_apply
                          expression (typing/parmatch.ml[1499,52328+14]..[1499,52328+20])
                            Pexp_ident "is_var" (typing/parmatch.ml[1499,52328+14]..[1499,52328+20])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1499,52328+21]..[1499,52328+22])
                                Pexp_ident "p" (typing/parmatch.ml[1499,52328+21]..[1499,52328+22])
                          ]
                      <case>
                        pattern (typing/parmatch.ml[1500,52351+6]..[1500,52351+8])
                          Ppat_construct "[]" (typing/parmatch.ml[1500,52351+6]..[1500,52351+8])
                          None
                        expression (typing/parmatch.ml[1500,52351+14]..[1500,52351+26])
                          Pexp_assert
                          expression (typing/parmatch.ml[1500,52351+21]..[1500,52351+26])
                            Pexp_construct "false" (typing/parmatch.ml[1500,52351+21]..[1500,52351+26])
                            None
                    ]
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1501,52379+4]..[1501,52379+6])
                  Pexp_ident "rs" (typing/parmatch.ml[1501,52379+4]..[1501,52379+6])
            ]
    ]
  structure_item (typing/parmatch.ml[1504,52437+0]..[1507,52543+35])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[1504,52437+8]..[1504,52437+15])
          Ppat_var "or_args" (typing/parmatch.ml[1504,52437+8]..[1504,52437+15])
        expression (typing/parmatch.ml[1504,52437+16]..[1507,52543+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1504,52437+16]..[1504,52437+17])
            Ppat_var "p" (typing/parmatch.ml[1504,52437+16]..[1504,52437+17])
          expression (typing/parmatch.ml[1504,52437+20]..[1507,52543+35])
            Pexp_match
            expression (typing/parmatch.ml[1504,52437+26]..[1504,52437+36])
              Pexp_field
              expression (typing/parmatch.ml[1504,52437+26]..[1504,52437+27])
                Pexp_ident "p" (typing/parmatch.ml[1504,52437+26]..[1504,52437+27])
              "pat_desc" (typing/parmatch.ml[1504,52437+28]..[1504,52437+36])
            [
              <case>
                pattern (typing/parmatch.ml[1505,52479+2]..[1505,52479+19])
                  Ppat_construct "Tpat_or" (typing/parmatch.ml[1505,52479+2]..[1505,52479+9])
                  Some
                    []
                    pattern (typing/parmatch.ml[1505,52479+10]..[1505,52479+19])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[1505,52479+11]..[1505,52479+13])
                          Ppat_var "p1" (typing/parmatch.ml[1505,52479+11]..[1505,52479+13])
                        pattern (typing/parmatch.ml[1505,52479+14]..[1505,52479+16])
                          Ppat_var "p2" (typing/parmatch.ml[1505,52479+14]..[1505,52479+16])
                        pattern (typing/parmatch.ml[1505,52479+17]..[1505,52479+18])
                          Ppat_any
                      ]
                expression (typing/parmatch.ml[1505,52479+23]..[1505,52479+28])
                  Pexp_tuple
                  [
                    expression (typing/parmatch.ml[1505,52479+23]..[1505,52479+25])
                      Pexp_ident "p1" (typing/parmatch.ml[1505,52479+23]..[1505,52479+25])
                    expression (typing/parmatch.ml[1505,52479+26]..[1505,52479+28])
                      Pexp_ident "p2" (typing/parmatch.ml[1505,52479+26]..[1505,52479+28])
                  ]
              <case>
                pattern (typing/parmatch.ml[1506,52508+2]..[1506,52508+20])
                  Ppat_construct "Tpat_alias" (typing/parmatch.ml[1506,52508+2]..[1506,52508+12])
                  Some
                    []
                    pattern (typing/parmatch.ml[1506,52508+13]..[1506,52508+20])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[1506,52508+14]..[1506,52508+15])
                          Ppat_var "p" (typing/parmatch.ml[1506,52508+14]..[1506,52508+15])
                        pattern (typing/parmatch.ml[1506,52508+16]..[1506,52508+17])
                          Ppat_any
                        pattern (typing/parmatch.ml[1506,52508+18]..[1506,52508+19])
                          Ppat_any
                      ]
                expression (typing/parmatch.ml[1506,52508+25]..[1506,52508+34])
                  Pexp_apply
                  expression (typing/parmatch.ml[1506,52508+25]..[1506,52508+32])
                    Pexp_ident "or_args" (typing/parmatch.ml[1506,52508+25]..[1506,52508+32])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[1506,52508+33]..[1506,52508+34])
                        Pexp_ident "p" (typing/parmatch.ml[1506,52508+33]..[1506,52508+34])
                  ]
              <case>
                pattern (typing/parmatch.ml[1507,52543+2]..[1507,52543+3])
                  Ppat_any
                expression (typing/parmatch.ml[1507,52543+23]..[1507,52543+35])
                  Pexp_assert
                  expression (typing/parmatch.ml[1507,52543+30]..[1507,52543+35])
                    Pexp_construct "false" (typing/parmatch.ml[1507,52543+30]..[1507,52543+35])
                    None
            ]
    ]
  structure_item (typing/parmatch.ml[1510,52613+0]..[1512,52680+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1510,52613+4]..[1510,52613+10])
          Ppat_var "remove" (typing/parmatch.ml[1510,52613+4]..[1510,52613+10])
        expression (typing/parmatch.ml[1510,52613+11]..[1512,52680+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1510,52613+11]..[1510,52613+12])
            Ppat_var "r" (typing/parmatch.ml[1510,52613+11]..[1510,52613+12])
          expression (typing/parmatch.ml[1510,52613+15]..[1512,52680+24])
            Pexp_match
            expression (typing/parmatch.ml[1510,52613+21]..[1510,52613+29])
              Pexp_field
              expression (typing/parmatch.ml[1510,52613+21]..[1510,52613+22])
                Pexp_ident "r" (typing/parmatch.ml[1510,52613+21]..[1510,52613+22])
              "active" (typing/parmatch.ml[1510,52613+23]..[1510,52613+29])
            [
              <case>
                pattern (typing/parmatch.ml[1511,52648+2]..[1511,52648+8])
                  Ppat_construct "::" (typing/parmatch.ml[1511,52648+3]..[1511,52648+5])
                  Some
                    []
                    pattern (typing/parmatch.ml[1511,52648+2]..[1511,52648+8]) ghost
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[1511,52648+2]..[1511,52648+3])
                          Ppat_any
                        pattern (typing/parmatch.ml[1511,52648+5]..[1511,52648+8])
                          Ppat_var "rem" (typing/parmatch.ml[1511,52648+5]..[1511,52648+8])
                      ]
                expression (typing/parmatch.ml[1511,52648+12]..[1511,52648+31])
                  Pexp_record
                  [
                    "active" (typing/parmatch.ml[1511,52648+20]..[1511,52648+26])
                      expression (typing/parmatch.ml[1511,52648+27]..[1511,52648+30])
                        Pexp_ident "rem" (typing/parmatch.ml[1511,52648+27]..[1511,52648+30])
                  ]
                  Some
                    expression (typing/parmatch.ml[1511,52648+13]..[1511,52648+14])
                      Pexp_ident "r" (typing/parmatch.ml[1511,52648+13]..[1511,52648+14])
              <case>
                pattern (typing/parmatch.ml[1512,52680+2]..[1512,52680+4])
                  Ppat_construct "[]" (typing/parmatch.ml[1512,52680+2]..[1512,52680+4])
                  None
                expression (typing/parmatch.ml[1512,52680+12]..[1512,52680+24])
                  Pexp_assert
                  expression (typing/parmatch.ml[1512,52680+19]..[1512,52680+24])
                    Pexp_construct "false" (typing/parmatch.ml[1512,52680+19]..[1512,52680+24])
                    None
            ]
    ]
  structure_item (typing/parmatch.ml[1514,52706+0]..[1514,52706+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1514,52706+4]..[1514,52706+17])
          Ppat_var "remove_column" (typing/parmatch.ml[1514,52706+4]..[1514,52706+17])
        expression (typing/parmatch.ml[1514,52706+18]..[1514,52706+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1514,52706+18]..[1514,52706+20])
            Ppat_var "rs" (typing/parmatch.ml[1514,52706+18]..[1514,52706+20])
          expression (typing/parmatch.ml[1514,52706+23]..[1514,52706+41])
            Pexp_apply
            expression (typing/parmatch.ml[1514,52706+23]..[1514,52706+31])
              Pexp_ident "List.map" (typing/parmatch.ml[1514,52706+23]..[1514,52706+31])
            [
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1514,52706+32]..[1514,52706+38])
                  Pexp_ident "remove" (typing/parmatch.ml[1514,52706+32]..[1514,52706+38])
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1514,52706+39]..[1514,52706+41])
                  Pexp_ident "rs" (typing/parmatch.ml[1514,52706+39]..[1514,52706+41])
            ]
    ]
  structure_item (typing/parmatch.ml[1517,52789+0]..[1519,52884+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1517,52789+4]..[1517,52789+14])
          Ppat_var "push_no_or" (typing/parmatch.ml[1517,52789+4]..[1517,52789+14])
        expression (typing/parmatch.ml[1517,52789+15]..[1519,52884+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1517,52789+15]..[1517,52789+16])
            Ppat_var "r" (typing/parmatch.ml[1517,52789+15]..[1517,52789+16])
          expression (typing/parmatch.ml[1517,52789+19]..[1519,52884+20])
            Pexp_match
            expression (typing/parmatch.ml[1517,52789+25]..[1517,52789+33])
              Pexp_field
              expression (typing/parmatch.ml[1517,52789+25]..[1517,52789+26])
                Pexp_ident "r" (typing/parmatch.ml[1517,52789+25]..[1517,52789+26])
              "active" (typing/parmatch.ml[1517,52789+27]..[1517,52789+33])
            [
              <case>
                pattern (typing/parmatch.ml[1518,52828+2]..[1518,52828+8])
                  Ppat_construct "::" (typing/parmatch.ml[1518,52828+3]..[1518,52828+5])
                  Some
                    []
                    pattern (typing/parmatch.ml[1518,52828+2]..[1518,52828+8]) ghost
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[1518,52828+2]..[1518,52828+3])
                          Ppat_var "p" (typing/parmatch.ml[1518,52828+2]..[1518,52828+3])
                        pattern (typing/parmatch.ml[1518,52828+5]..[1518,52828+8])
                          Ppat_var "rem" (typing/parmatch.ml[1518,52828+5]..[1518,52828+8])
                      ]
                expression (typing/parmatch.ml[1518,52828+12]..[1518,52828+55])
                  Pexp_record
                  [
                    "no_ors" (typing/parmatch.ml[1518,52828+21]..[1518,52828+27])
                      expression (typing/parmatch.ml[1518,52828+30]..[1518,52828+41])
                        Pexp_construct "::" (typing/parmatch.ml[1518,52828+31]..[1518,52828+33])
                        Some
                          expression (typing/parmatch.ml[1518,52828+30]..[1518,52828+41]) ghost
                            Pexp_tuple
                            [
                              expression (typing/parmatch.ml[1518,52828+30]..[1518,52828+31])
                                Pexp_ident "p" (typing/parmatch.ml[1518,52828+30]..[1518,52828+31])
                              expression (typing/parmatch.ml[1518,52828+33]..[1518,52828+41])
                                Pexp_field
                                expression (typing/parmatch.ml[1518,52828+33]..[1518,52828+34])
                                  Pexp_ident "r" (typing/parmatch.ml[1518,52828+33]..[1518,52828+34])
                                "no_ors" (typing/parmatch.ml[1518,52828+35]..[1518,52828+41])
                            ]
                    "active" (typing/parmatch.ml[1518,52828+44]..[1518,52828+50])
                      expression (typing/parmatch.ml[1518,52828+51]..[1518,52828+54])
                        Pexp_ident "rem" (typing/parmatch.ml[1518,52828+51]..[1518,52828+54])
                  ]
                  Some
                    expression (typing/parmatch.ml[1518,52828+14]..[1518,52828+15])
                      Pexp_ident "r" (typing/parmatch.ml[1518,52828+14]..[1518,52828+15])
              <case>
                pattern (typing/parmatch.ml[1519,52884+2]..[1519,52884+4])
                  Ppat_construct "[]" (typing/parmatch.ml[1519,52884+2]..[1519,52884+4])
                  None
                expression (typing/parmatch.ml[1519,52884+8]..[1519,52884+20])
                  Pexp_assert
                  expression (typing/parmatch.ml[1519,52884+15]..[1519,52884+20])
                    Pexp_construct "false" (typing/parmatch.ml[1519,52884+15]..[1519,52884+20])
                    None
            ]
    ]
  structure_item (typing/parmatch.ml[1521,52906+0]..[1523,52992+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1521,52906+4]..[1521,52906+11])
          Ppat_var "push_or" (typing/parmatch.ml[1521,52906+4]..[1521,52906+11])
        expression (typing/parmatch.ml[1521,52906+12]..[1523,52992+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1521,52906+12]..[1521,52906+13])
            Ppat_var "r" (typing/parmatch.ml[1521,52906+12]..[1521,52906+13])
          expression (typing/parmatch.ml[1521,52906+16]..[1523,52992+20])
            Pexp_match
            expression (typing/parmatch.ml[1521,52906+22]..[1521,52906+30])
              Pexp_field
              expression (typing/parmatch.ml[1521,52906+22]..[1521,52906+23])
                Pexp_ident "r" (typing/parmatch.ml[1521,52906+22]..[1521,52906+23])
              "active" (typing/parmatch.ml[1521,52906+24]..[1521,52906+30])
            [
              <case>
                pattern (typing/parmatch.ml[1522,52942+2]..[1522,52942+8])
                  Ppat_construct "::" (typing/parmatch.ml[1522,52942+3]..[1522,52942+5])
                  Some
                    []
                    pattern (typing/parmatch.ml[1522,52942+2]..[1522,52942+8]) ghost
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[1522,52942+2]..[1522,52942+3])
                          Ppat_var "p" (typing/parmatch.ml[1522,52942+2]..[1522,52942+3])
                        pattern (typing/parmatch.ml[1522,52942+5]..[1522,52942+8])
                          Ppat_var "rem" (typing/parmatch.ml[1522,52942+5]..[1522,52942+8])
                      ]
                expression (typing/parmatch.ml[1522,52942+12]..[1522,52942+49])
                  Pexp_record
                  [
                    "ors" (typing/parmatch.ml[1522,52942+21]..[1522,52942+24])
                      expression (typing/parmatch.ml[1522,52942+27]..[1522,52942+35])
                        Pexp_construct "::" (typing/parmatch.ml[1522,52942+28]..[1522,52942+30])
                        Some
                          expression (typing/parmatch.ml[1522,52942+27]..[1522,52942+35]) ghost
                            Pexp_tuple
                            [
                              expression (typing/parmatch.ml[1522,52942+27]..[1522,52942+28])
                                Pexp_ident "p" (typing/parmatch.ml[1522,52942+27]..[1522,52942+28])
                              expression (typing/parmatch.ml[1522,52942+30]..[1522,52942+35])
                                Pexp_field
                                expression (typing/parmatch.ml[1522,52942+30]..[1522,52942+31])
                                  Pexp_ident "r" (typing/parmatch.ml[1522,52942+30]..[1522,52942+31])
                                "ors" (typing/parmatch.ml[1522,52942+32]..[1522,52942+35])
                            ]
                    "active" (typing/parmatch.ml[1522,52942+38]..[1522,52942+44])
                      expression (typing/parmatch.ml[1522,52942+45]..[1522,52942+48])
                        Pexp_ident "rem" (typing/parmatch.ml[1522,52942+45]..[1522,52942+48])
                  ]
                  Some
                    expression (typing/parmatch.ml[1522,52942+14]..[1522,52942+15])
                      Pexp_ident "r" (typing/parmatch.ml[1522,52942+14]..[1522,52942+15])
              <case>
                pattern (typing/parmatch.ml[1523,52992+2]..[1523,52992+4])
                  Ppat_construct "[]" (typing/parmatch.ml[1523,52992+2]..[1523,52992+4])
                  None
                expression (typing/parmatch.ml[1523,52992+8]..[1523,52992+20])
                  Pexp_assert
                  expression (typing/parmatch.ml[1523,52992+15]..[1523,52992+20])
                    Pexp_construct "false" (typing/parmatch.ml[1523,52992+15]..[1523,52992+20])
                    None
            ]
    ]
  structure_item (typing/parmatch.ml[1525,53014+0]..[1526,53058+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1525,53014+4]..[1525,53014+18])
          Ppat_var "push_or_column" (typing/parmatch.ml[1525,53014+4]..[1525,53014+18])
        expression (typing/parmatch.ml[1525,53014+19]..[1525,53014+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1525,53014+19]..[1525,53014+21])
            Ppat_var "rs" (typing/parmatch.ml[1525,53014+19]..[1525,53014+21])
          expression (typing/parmatch.ml[1525,53014+24]..[1525,53014+43])
            Pexp_apply
            expression (typing/parmatch.ml[1525,53014+24]..[1525,53014+32])
              Pexp_ident "List.map" (typing/parmatch.ml[1525,53014+24]..[1525,53014+32])
            [
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1525,53014+33]..[1525,53014+40])
                  Pexp_ident "push_or" (typing/parmatch.ml[1525,53014+33]..[1525,53014+40])
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1525,53014+41]..[1525,53014+43])
                  Pexp_ident "rs" (typing/parmatch.ml[1525,53014+41]..[1525,53014+43])
            ]
      <def>
        pattern (typing/parmatch.ml[1526,53058+4]..[1526,53058+21])
          Ppat_var "push_no_or_column" (typing/parmatch.ml[1526,53058+4]..[1526,53058+21])
        expression (typing/parmatch.ml[1526,53058+22]..[1526,53058+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1526,53058+22]..[1526,53058+24])
            Ppat_var "rs" (typing/parmatch.ml[1526,53058+22]..[1526,53058+24])
          expression (typing/parmatch.ml[1526,53058+27]..[1526,53058+49])
            Pexp_apply
            expression (typing/parmatch.ml[1526,53058+27]..[1526,53058+35])
              Pexp_ident "List.map" (typing/parmatch.ml[1526,53058+27]..[1526,53058+35])
            [
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1526,53058+36]..[1526,53058+46])
                  Pexp_ident "push_no_or" (typing/parmatch.ml[1526,53058+36]..[1526,53058+46])
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1526,53058+47]..[1526,53058+49])
                  Pexp_ident "rs" (typing/parmatch.ml[1526,53058+47]..[1526,53058+49])
            ]
    ]
  structure_item (typing/parmatch.ml[1528,53109+0]..[1537,53405+44])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[1528,53109+8]..[1528,53109+37])
          Ppat_var "simplify_first_usefulness_col" (typing/parmatch.ml[1528,53109+8]..[1528,53109+37])
        expression (typing/parmatch.ml[1528,53109+40]..[1537,53405+44])
          Pexp_function
          [
            <case>
              pattern (typing/parmatch.ml[1529,53158+4]..[1529,53158+6])
                Ppat_construct "[]" (typing/parmatch.ml[1529,53158+4]..[1529,53158+6])
                None
              expression (typing/parmatch.ml[1529,53158+10]..[1529,53158+12])
                Pexp_construct "[]" (typing/parmatch.ml[1529,53158+10]..[1529,53158+12])
                None
            <case>
              pattern (typing/parmatch.ml[1530,53171+4]..[1530,53171+15])
                Ppat_construct "::" (typing/parmatch.ml[1530,53171+8]..[1530,53171+10])
                Some
                  []
                  pattern (typing/parmatch.ml[1530,53171+4]..[1530,53171+15]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1530,53171+4]..[1530,53171+7])
                        Ppat_var "row" (typing/parmatch.ml[1530,53171+4]..[1530,53171+7])
                      pattern (typing/parmatch.ml[1530,53171+11]..[1530,53171+15])
                        Ppat_var "rows" (typing/parmatch.ml[1530,53171+11]..[1530,53171+15])
                    ]
              expression (typing/parmatch.ml[1531,53190+4]..[1537,53405+44])
                Pexp_match
                expression (typing/parmatch.ml[1531,53190+10]..[1531,53190+20])
                  Pexp_field
                  expression (typing/parmatch.ml[1531,53190+10]..[1531,53190+13])
                    Pexp_ident "row" (typing/parmatch.ml[1531,53190+10]..[1531,53190+13])
                  "active" (typing/parmatch.ml[1531,53190+14]..[1531,53190+20])
                [
                  <case>
                    pattern (typing/parmatch.ml[1532,53216+6]..[1532,53216+8])
                      Ppat_construct "[]" (typing/parmatch.ml[1532,53216+6]..[1532,53216+8])
                      None
                    expression (typing/parmatch.ml[1532,53216+12]..[1532,53216+24])
                      Pexp_assert
                      expression (typing/parmatch.ml[1532,53216+19]..[1532,53216+24])
                        Pexp_construct "false" (typing/parmatch.ml[1532,53216+19]..[1532,53216+24])
                        None
                  <case>
                    pattern (typing/parmatch.ml[1533,53271+6]..[1533,53271+13])
                      Ppat_construct "::" (typing/parmatch.ml[1533,53271+8]..[1533,53271+10])
                      Some
                        []
                        pattern (typing/parmatch.ml[1533,53271+6]..[1533,53271+13]) ghost
                          Ppat_tuple
                          [
                            pattern (typing/parmatch.ml[1533,53271+6]..[1533,53271+7])
                              Ppat_var "p" (typing/parmatch.ml[1533,53271+6]..[1533,53271+7])
                            pattern (typing/parmatch.ml[1533,53271+11]..[1533,53271+13])
                              Ppat_var "ps" (typing/parmatch.ml[1533,53271+11]..[1533,53271+13])
                          ]
                    expression (typing/parmatch.ml[1534,53288+6]..[1537,53405+44])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/parmatch.ml[1534,53288+10]..[1534,53288+20])
                            Ppat_var "add_column" (typing/parmatch.ml[1534,53288+10]..[1534,53288+20])
                          expression (typing/parmatch.ml[1534,53288+21]..[1535,53318+42]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/parmatch.ml[1534,53288+21]..[1534,53288+22])
                              Ppat_var "p" (typing/parmatch.ml[1534,53288+21]..[1534,53288+22])
                            expression (typing/parmatch.ml[1534,53288+23]..[1535,53318+42]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/parmatch.ml[1534,53288+23]..[1534,53288+25])
                                Ppat_var "ps" (typing/parmatch.ml[1534,53288+23]..[1534,53288+25])
                              expression (typing/parmatch.ml[1534,53288+26]..[1535,53318+42]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/parmatch.ml[1534,53288+26]..[1534,53288+27])
                                  Ppat_var "k" (typing/parmatch.ml[1534,53288+26]..[1534,53288+27])
                                expression (typing/parmatch.ml[1535,53318+8]..[1535,53318+42])
                                  Pexp_construct "::" (typing/parmatch.ml[1535,53318+38]..[1535,53318+40])
                                  Some
                                    expression (typing/parmatch.ml[1535,53318+8]..[1535,53318+42]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/parmatch.ml[1535,53318+8]..[1535,53318+37])
                                          Pexp_tuple
                                          [
                                            expression (typing/parmatch.ml[1535,53318+9]..[1535,53318+10])
                                              Pexp_ident "p" (typing/parmatch.ml[1535,53318+9]..[1535,53318+10])
                                            expression (typing/parmatch.ml[1535,53318+12]..[1535,53318+36])
                                              Pexp_record
                                              [
                                                "active" (typing/parmatch.ml[1535,53318+23]..[1535,53318+29])
                                                  expression (typing/parmatch.ml[1535,53318+32]..[1535,53318+34])
                                                    Pexp_ident "ps" (typing/parmatch.ml[1535,53318+32]..[1535,53318+34])
                                              ]
                                              Some
                                                expression (typing/parmatch.ml[1535,53318+14]..[1535,53318+17])
                                                  Pexp_ident "row" (typing/parmatch.ml[1535,53318+14]..[1535,53318+17])
                                          ]
                                        expression (typing/parmatch.ml[1535,53318+41]..[1535,53318+42])
                                          Pexp_ident "k" (typing/parmatch.ml[1535,53318+41]..[1535,53318+42])
                                      ]
                      ]
                      expression (typing/parmatch.ml[1536,53364+6]..[1537,53405+44])
                        Pexp_apply
                        expression (typing/parmatch.ml[1536,53364+6]..[1536,53364+23])
                          Pexp_ident "simplify_head_pat" (typing/parmatch.ml[1536,53364+6]..[1536,53364+23])
                        [
                          <arg>
                          Labelled "add_column"
                            expression (typing/parmatch.ml[1536,53364+25]..[1536,53364+35])
                              Pexp_ident "add_column" (typing/parmatch.ml[1536,53364+25]..[1536,53364+35])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1536,53364+36]..[1536,53364+37])
                              Pexp_ident "p" (typing/parmatch.ml[1536,53364+36]..[1536,53364+37])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1536,53364+38]..[1536,53364+40])
                              Pexp_ident "ps" (typing/parmatch.ml[1536,53364+38]..[1536,53364+40])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1537,53405+8]..[1537,53405+44])
                              Pexp_apply
                              expression (typing/parmatch.ml[1537,53405+9]..[1537,53405+38])
                                Pexp_ident "simplify_first_usefulness_col" (typing/parmatch.ml[1537,53405+9]..[1537,53405+38])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1537,53405+39]..[1537,53405+43])
                                    Pexp_ident "rows" (typing/parmatch.ml[1537,53405+39]..[1537,53405+43])
                              ]
                        ]
                ]
          ]
    ]
  structure_item (typing/parmatch.ml[1540,53481+0]..[1540,53481+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1540,53481+4]..[1540,53481+15])
          Ppat_var "make_vector" (typing/parmatch.ml[1540,53481+4]..[1540,53481+15])
        expression (typing/parmatch.ml[1540,53481+16]..[1540,53481+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1540,53481+16]..[1540,53481+17])
            Ppat_var "r" (typing/parmatch.ml[1540,53481+16]..[1540,53481+17])
          expression (typing/parmatch.ml[1540,53481+20]..[1540,53481+37])
            Pexp_apply
            expression (typing/parmatch.ml[1540,53481+20]..[1540,53481+28])
              Pexp_ident "List.rev" (typing/parmatch.ml[1540,53481+20]..[1540,53481+28])
            [
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1540,53481+29]..[1540,53481+37])
                  Pexp_field
                  expression (typing/parmatch.ml[1540,53481+29]..[1540,53481+30])
                    Pexp_ident "r" (typing/parmatch.ml[1540,53481+29]..[1540,53481+30])
                  "no_ors" (typing/parmatch.ml[1540,53481+31]..[1540,53481+37])
            ]
    ]
  structure_item (typing/parmatch.ml[1542,53520+0]..[1542,53520+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1542,53520+4]..[1542,53520+15])
          Ppat_var "make_matrix" (typing/parmatch.ml[1542,53520+4]..[1542,53520+15])
        expression (typing/parmatch.ml[1542,53520+16]..[1542,53520+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1542,53520+16]..[1542,53520+18])
            Ppat_var "rs" (typing/parmatch.ml[1542,53520+16]..[1542,53520+18])
          expression (typing/parmatch.ml[1542,53520+21]..[1542,53520+44])
            Pexp_apply
            expression (typing/parmatch.ml[1542,53520+21]..[1542,53520+29])
              Pexp_ident "List.map" (typing/parmatch.ml[1542,53520+21]..[1542,53520+29])
            [
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1542,53520+30]..[1542,53520+41])
                  Pexp_ident "make_vector" (typing/parmatch.ml[1542,53520+30]..[1542,53520+41])
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1542,53520+42]..[1542,53520+44])
                  Pexp_ident "rs" (typing/parmatch.ml[1542,53520+42]..[1542,53520+44])
            ]
    ]
  structure_item (typing/parmatch.ml[1546,53599+0]..[1551,53712+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1546,53599+4]..[1546,53599+13])
          Ppat_var "union_res" (typing/parmatch.ml[1546,53599+4]..[1546,53599+13])
        expression (typing/parmatch.ml[1546,53599+14]..[1551,53712+46]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1546,53599+14]..[1546,53599+16])
            Ppat_var "r1" (typing/parmatch.ml[1546,53599+14]..[1546,53599+16])
          expression (typing/parmatch.ml[1546,53599+17]..[1551,53712+46]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1546,53599+17]..[1546,53599+19])
              Ppat_var "r2" (typing/parmatch.ml[1546,53599+17]..[1546,53599+19])
            expression (typing/parmatch.ml[1546,53599+22]..[1551,53712+46])
              Pexp_match
              expression (typing/parmatch.ml[1546,53599+28]..[1546,53599+34])
                Pexp_tuple
                [
                  expression (typing/parmatch.ml[1546,53599+28]..[1546,53599+30])
                    Pexp_ident "r1" (typing/parmatch.ml[1546,53599+28]..[1546,53599+30])
                  expression (typing/parmatch.ml[1546,53599+32]..[1546,53599+34])
                    Pexp_ident "r2" (typing/parmatch.ml[1546,53599+32]..[1546,53599+34])
                ]
              [
                <case>
                  pattern (typing/parmatch.ml[1547,53639+2]..[1548,53652+13])
                    Ppat_or
                    pattern (typing/parmatch.ml[1547,53639+2]..[1547,53639+12])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[1547,53639+3]..[1547,53639+9])
                          Ppat_construct "Unused" (typing/parmatch.ml[1547,53639+3]..[1547,53639+9])
                          None
                        pattern (typing/parmatch.ml[1547,53639+10]..[1547,53639+11])
                          Ppat_any
                      ]
                    pattern (typing/parmatch.ml[1548,53652+2]..[1548,53652+13])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[1548,53652+3]..[1548,53652+4])
                          Ppat_any
                        pattern (typing/parmatch.ml[1548,53652+6]..[1548,53652+12])
                          Ppat_construct "Unused" (typing/parmatch.ml[1548,53652+6]..[1548,53652+12])
                          None
                      ]
                  expression (typing/parmatch.ml[1548,53652+17]..[1548,53652+23])
                    Pexp_construct "Unused" (typing/parmatch.ml[1548,53652+17]..[1548,53652+23])
                    None
                <case>
                  pattern (typing/parmatch.ml[1549,53676+2]..[1549,53676+8])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1549,53676+2]..[1549,53676+6])
                        Ppat_construct "Used" (typing/parmatch.ml[1549,53676+2]..[1549,53676+6])
                        None
                      pattern (typing/parmatch.ml[1549,53676+7]..[1549,53676+8])
                        Ppat_any
                    ]
                  expression (typing/parmatch.ml[1549,53676+15]..[1549,53676+17])
                    Pexp_ident "r2" (typing/parmatch.ml[1549,53676+15]..[1549,53676+17])
                <case>
                  pattern (typing/parmatch.ml[1550,53694+2]..[1550,53694+9])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1550,53694+2]..[1550,53694+3])
                        Ppat_any
                      pattern (typing/parmatch.ml[1550,53694+5]..[1550,53694+9])
                        Ppat_construct "Used" (typing/parmatch.ml[1550,53694+5]..[1550,53694+9])
                        None
                    ]
                  expression (typing/parmatch.ml[1550,53694+15]..[1550,53694+17])
                    Pexp_ident "r1" (typing/parmatch.ml[1550,53694+15]..[1550,53694+17])
                <case>
                  pattern (typing/parmatch.ml[1551,53712+2]..[1551,53712+26])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1551,53712+2]..[1551,53712+13])
                        Ppat_construct "Upartial" (typing/parmatch.ml[1551,53712+2]..[1551,53712+10])
                        Some
                          []
                          pattern (typing/parmatch.ml[1551,53712+11]..[1551,53712+13])
                            Ppat_var "u1" (typing/parmatch.ml[1551,53712+11]..[1551,53712+13])
                      pattern (typing/parmatch.ml[1551,53712+15]..[1551,53712+26])
                        Ppat_construct "Upartial" (typing/parmatch.ml[1551,53712+15]..[1551,53712+23])
                        Some
                          []
                          pattern (typing/parmatch.ml[1551,53712+24]..[1551,53712+26])
                            Ppat_var "u2" (typing/parmatch.ml[1551,53712+24]..[1551,53712+26])
                    ]
                  expression (typing/parmatch.ml[1551,53712+30]..[1551,53712+46])
                    Pexp_construct "Upartial" (typing/parmatch.ml[1551,53712+30]..[1551,53712+38])
                    Some
                      expression (typing/parmatch.ml[1551,53712+39]..[1551,53712+46])
                        Pexp_apply
                        expression (typing/parmatch.ml[1551,53712+42]..[1551,53712+43])
                          Pexp_ident "@" (typing/parmatch.ml[1551,53712+42]..[1551,53712+43])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1551,53712+40]..[1551,53712+42])
                              Pexp_ident "u1" (typing/parmatch.ml[1551,53712+40]..[1551,53712+42])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1551,53712+43]..[1551,53712+45])
                              Pexp_ident "u2" (typing/parmatch.ml[1551,53712+43]..[1551,53712+45])
                        ]
              ]
    ]
  structure_item (typing/parmatch.ml[1554,53796+0]..[1562,54015+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1554,53796+4]..[1554,53796+20])
          Ppat_var "extract_elements" (typing/parmatch.ml[1554,53796+4]..[1554,53796+20])
        expression (typing/parmatch.ml[1554,53796+21]..[1562,54015+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1554,53796+21]..[1554,53796+23])
            Ppat_var "qs" (typing/parmatch.ml[1554,53796+21]..[1554,53796+23])
          expression (typing/parmatch.ml[1555,53822+2]..[1562,54015+18])
            Pexp_let Rec
            [
              <def>
                pattern (typing/parmatch.ml[1555,53822+10]..[1555,53822+16])
                  Ppat_var "do_rec" (typing/parmatch.ml[1555,53822+10]..[1555,53822+16])
                expression (typing/parmatch.ml[1555,53822+17]..[1561,53983+28]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/parmatch.ml[1555,53822+17]..[1555,53822+21])
                    Ppat_var "seen" (typing/parmatch.ml[1555,53822+17]..[1555,53822+21])
                  expression (typing/parmatch.ml[1555,53822+24]..[1561,53983+28])
                    Pexp_function
                    [
                      <case>
                        pattern (typing/parmatch.ml[1556,53855+6]..[1556,53855+8])
                          Ppat_construct "[]" (typing/parmatch.ml[1556,53855+6]..[1556,53855+8])
                          None
                        expression (typing/parmatch.ml[1556,53855+12]..[1556,53855+14])
                          Pexp_construct "[]" (typing/parmatch.ml[1556,53855+12]..[1556,53855+14])
                          None
                      <case>
                        pattern (typing/parmatch.ml[1557,53870+6]..[1557,53870+12])
                          Ppat_construct "::" (typing/parmatch.ml[1557,53870+7]..[1557,53870+9])
                          Some
                            []
                            pattern (typing/parmatch.ml[1557,53870+6]..[1557,53870+12]) ghost
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[1557,53870+6]..[1557,53870+7])
                                  Ppat_var "q" (typing/parmatch.ml[1557,53870+6]..[1557,53870+7])
                                pattern (typing/parmatch.ml[1557,53870+9]..[1557,53870+12])
                                  Ppat_var "rem" (typing/parmatch.ml[1557,53870+9]..[1557,53870+12])
                              ]
                        expression (typing/parmatch.ml[1558,53886+8]..[1561,53983+28])
                          Pexp_construct "::" (typing/parmatch.ml[1560,53959+21]..[1560,53959+23])
                          Some
                            expression (typing/parmatch.ml[1558,53886+8]..[1561,53983+28]) ghost
                              Pexp_tuple
                              [
                                expression (typing/parmatch.ml[1558,53886+8]..[1560,53959+21])
                                  Pexp_record
                                  [
                                    "no_ors" (typing/parmatch.ml[1558,53886+9]..[1558,53886+15])
                                      expression (typing/parmatch.ml[1558,53886+17]..[1558,53886+53])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1558,53886+42]..[1558,53886+43])
                                          Pexp_ident "@" (typing/parmatch.ml[1558,53886+42]..[1558,53886+43])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1558,53886+17]..[1558,53886+41])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[1558,53886+17]..[1558,53886+32])
                                                Pexp_ident "List.rev_append" (typing/parmatch.ml[1558,53886+17]..[1558,53886+32])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1558,53886+33]..[1558,53886+37])
                                                    Pexp_ident "seen" (typing/parmatch.ml[1558,53886+33]..[1558,53886+37])
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1558,53886+38]..[1558,53886+41])
                                                    Pexp_ident "rem" (typing/parmatch.ml[1558,53886+38]..[1558,53886+41])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1558,53886+44]..[1558,53886+53])
                                              Pexp_field
                                              expression (typing/parmatch.ml[1558,53886+44]..[1558,53886+46])
                                                Pexp_ident "qs" (typing/parmatch.ml[1558,53886+44]..[1558,53886+46])
                                              "no_ors" (typing/parmatch.ml[1558,53886+47]..[1558,53886+53])
                                        ]
                                    "ors" (typing/parmatch.ml[1559,53942+8]..[1559,53942+11])
                                      expression (typing/parmatch.ml[1559,53942+12]..[1559,53942+14])
                                        Pexp_construct "[]" (typing/parmatch.ml[1559,53942+12]..[1559,53942+14])
                                        None
                                    "active" (typing/parmatch.ml[1560,53959+8]..[1560,53959+14])
                                      expression (typing/parmatch.ml[1560,53959+17]..[1560,53959+20])
                                        Pexp_construct "::" (typing/parmatch.ml[1560,53959+18]..[1560,53959+20]) ghost
                                        Some
                                          expression (typing/parmatch.ml[1560,53959+18]..[1560,53959+20]) ghost
                                            Pexp_tuple
                                            [
                                              expression (typing/parmatch.ml[1560,53959+18]..[1560,53959+19])
                                                Pexp_ident "q" (typing/parmatch.ml[1560,53959+18]..[1560,53959+19])
                                              expression (typing/parmatch.ml[1560,53959+19]..[1560,53959+20]) ghost
                                                Pexp_construct "[]" (typing/parmatch.ml[1560,53959+19]..[1560,53959+20]) ghost
                                                None
                                            ]
                                  ]
                                  None
                                expression (typing/parmatch.ml[1561,53983+8]..[1561,53983+28])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1561,53983+8]..[1561,53983+14])
                                    Pexp_ident "do_rec" (typing/parmatch.ml[1561,53983+8]..[1561,53983+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1561,53983+15]..[1561,53983+24])
                                        Pexp_construct "::" (typing/parmatch.ml[1561,53983+17]..[1561,53983+19])
                                        Some
                                          expression (typing/parmatch.ml[1561,53983+16]..[1561,53983+23]) ghost
                                            Pexp_tuple
                                            [
                                              expression (typing/parmatch.ml[1561,53983+16]..[1561,53983+17])
                                                Pexp_ident "q" (typing/parmatch.ml[1561,53983+16]..[1561,53983+17])
                                              expression (typing/parmatch.ml[1561,53983+19]..[1561,53983+23])
                                                Pexp_ident "seen" (typing/parmatch.ml[1561,53983+19]..[1561,53983+23])
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1561,53983+25]..[1561,53983+28])
                                        Pexp_ident "rem" (typing/parmatch.ml[1561,53983+25]..[1561,53983+28])
                                  ]
                              ]
                    ]
            ]
            expression (typing/parmatch.ml[1562,54015+2]..[1562,54015+18])
              Pexp_apply
              expression (typing/parmatch.ml[1562,54015+2]..[1562,54015+8])
                Pexp_ident "do_rec" (typing/parmatch.ml[1562,54015+2]..[1562,54015+8])
              [
                <arg>
                Nolabel
                  expression (typing/parmatch.ml[1562,54015+9]..[1562,54015+11])
                    Pexp_construct "[]" (typing/parmatch.ml[1562,54015+9]..[1562,54015+11])
                    None
                <arg>
                Nolabel
                  expression (typing/parmatch.ml[1562,54015+12]..[1562,54015+18])
                    Pexp_field
                    expression (typing/parmatch.ml[1562,54015+12]..[1562,54015+14])
                      Pexp_ident "qs" (typing/parmatch.ml[1562,54015+12]..[1562,54015+14])
                    "ors" (typing/parmatch.ml[1562,54015+15]..[1562,54015+18])
              ]
    ]
  structure_item (typing/parmatch.ml[1565,54059+0]..[1571,54221+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1565,54059+4]..[1565,54059+13])
          Ppat_var "transpose" (typing/parmatch.ml[1565,54059+4]..[1565,54059+13])
        expression (typing/parmatch.ml[1565,54059+14]..[1571,54221+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1565,54059+14]..[1565,54059+16])
            Ppat_var "rs" (typing/parmatch.ml[1565,54059+14]..[1565,54059+16])
          expression (typing/parmatch.ml[1565,54059+19]..[1571,54221+11])
            Pexp_match
            expression (typing/parmatch.ml[1565,54059+25]..[1565,54059+27])
              Pexp_ident "rs" (typing/parmatch.ml[1565,54059+25]..[1565,54059+27])
            [
              <case>
                pattern (typing/parmatch.ml[1566,54092+2]..[1566,54092+4])
                  Ppat_construct "[]" (typing/parmatch.ml[1566,54092+2]..[1566,54092+4])
                  None
                expression (typing/parmatch.ml[1566,54092+8]..[1566,54092+20])
                  Pexp_assert
                  expression (typing/parmatch.ml[1566,54092+15]..[1566,54092+20])
                    Pexp_construct "false" (typing/parmatch.ml[1566,54092+15]..[1566,54092+20])
                    None
              <case>
                pattern (typing/parmatch.ml[1567,54113+2]..[1567,54113+8])
                  Ppat_construct "::" (typing/parmatch.ml[1567,54113+3]..[1567,54113+5])
                  Some
                    []
                    pattern (typing/parmatch.ml[1567,54113+2]..[1567,54113+8]) ghost
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[1567,54113+2]..[1567,54113+3])
                          Ppat_var "r" (typing/parmatch.ml[1567,54113+2]..[1567,54113+3])
                        pattern (typing/parmatch.ml[1567,54113+5]..[1567,54113+8])
                          Ppat_var "rem" (typing/parmatch.ml[1567,54113+5]..[1567,54113+8])
                      ]
                expression (typing/parmatch.ml[1568,54125+4]..[1571,54221+11])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/parmatch.ml[1568,54125+8]..[1568,54125+9])
                        Ppat_var "i" (typing/parmatch.ml[1568,54125+8]..[1568,54125+9])
                      expression (typing/parmatch.ml[1568,54125+12]..[1568,54125+37])
                        Pexp_apply
                        expression (typing/parmatch.ml[1568,54125+12]..[1568,54125+20])
                          Pexp_ident "List.map" (typing/parmatch.ml[1568,54125+12]..[1568,54125+20])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1568,54125+21]..[1568,54125+35])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/parmatch.ml[1568,54125+26]..[1568,54125+27])
                                Ppat_var "x" (typing/parmatch.ml[1568,54125+26]..[1568,54125+27])
                              expression (typing/parmatch.ml[1568,54125+31]..[1568,54125+34])
                                Pexp_construct "::" (typing/parmatch.ml[1568,54125+32]..[1568,54125+34]) ghost
                                Some
                                  expression (typing/parmatch.ml[1568,54125+32]..[1568,54125+34]) ghost
                                    Pexp_tuple
                                    [
                                      expression (typing/parmatch.ml[1568,54125+32]..[1568,54125+33])
                                        Pexp_ident "x" (typing/parmatch.ml[1568,54125+32]..[1568,54125+33])
                                      expression (typing/parmatch.ml[1568,54125+33]..[1568,54125+34]) ghost
                                        Pexp_construct "[]" (typing/parmatch.ml[1568,54125+33]..[1568,54125+34]) ghost
                                        None
                                    ]
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1568,54125+36]..[1568,54125+37])
                              Pexp_ident "r" (typing/parmatch.ml[1568,54125+36]..[1568,54125+37])
                        ]
                  ]
                  expression (typing/parmatch.ml[1569,54166+4]..[1571,54221+11])
                    Pexp_apply
                    expression (typing/parmatch.ml[1569,54166+4]..[1569,54166+18])
                      Pexp_ident "List.fold_left" (typing/parmatch.ml[1569,54166+4]..[1569,54166+18])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1570,54185+6]..[1570,54185+35])
                          Pexp_apply
                          expression (typing/parmatch.ml[1570,54185+7]..[1570,54185+16])
                            Pexp_ident "List.map2" (typing/parmatch.ml[1570,54185+7]..[1570,54185+16])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1570,54185+17]..[1570,54185+34])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/parmatch.ml[1570,54185+22]..[1570,54185+23])
                                  Ppat_var "r" (typing/parmatch.ml[1570,54185+22]..[1570,54185+23])
                                expression (typing/parmatch.ml[1570,54185+24]..[1570,54185+33]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/parmatch.ml[1570,54185+24]..[1570,54185+25])
                                    Ppat_var "x" (typing/parmatch.ml[1570,54185+24]..[1570,54185+25])
                                  expression (typing/parmatch.ml[1570,54185+29]..[1570,54185+33])
                                    Pexp_construct "::" (typing/parmatch.ml[1570,54185+30]..[1570,54185+32])
                                    Some
                                      expression (typing/parmatch.ml[1570,54185+29]..[1570,54185+33]) ghost
                                        Pexp_tuple
                                        [
                                          expression (typing/parmatch.ml[1570,54185+29]..[1570,54185+30])
                                            Pexp_ident "x" (typing/parmatch.ml[1570,54185+29]..[1570,54185+30])
                                          expression (typing/parmatch.ml[1570,54185+32]..[1570,54185+33])
                                            Pexp_ident "r" (typing/parmatch.ml[1570,54185+32]..[1570,54185+33])
                                        ]
                          ]
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1571,54221+6]..[1571,54221+7])
                          Pexp_ident "i" (typing/parmatch.ml[1571,54221+6]..[1571,54221+7])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1571,54221+8]..[1571,54221+11])
                          Pexp_ident "rem" (typing/parmatch.ml[1571,54221+8]..[1571,54221+11])
                    ]
            ]
    ]
  structure_item (typing/parmatch.ml[1573,54234+0]..[1577,54370+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1573,54234+4]..[1573,54234+19])
          Ppat_var "extract_columns" (typing/parmatch.ml[1573,54234+4]..[1573,54234+19])
        expression (typing/parmatch.ml[1573,54234+20]..[1577,54370+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1573,54234+20]..[1573,54234+23])
            Ppat_var "pss" (typing/parmatch.ml[1573,54234+20]..[1573,54234+23])
          expression (typing/parmatch.ml[1573,54234+24]..[1577,54370+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1573,54234+24]..[1573,54234+26])
              Ppat_var "qs" (typing/parmatch.ml[1573,54234+24]..[1573,54234+26])
            expression (typing/parmatch.ml[1573,54234+29]..[1577,54370+16])
              Pexp_match
              expression (typing/parmatch.ml[1573,54234+35]..[1573,54234+38])
                Pexp_ident "pss" (typing/parmatch.ml[1573,54234+35]..[1573,54234+38])
              [
                <case>
                  pattern (typing/parmatch.ml[1574,54278+2]..[1574,54278+4])
                    Ppat_construct "[]" (typing/parmatch.ml[1574,54278+2]..[1574,54278+4])
                    None
                  expression (typing/parmatch.ml[1574,54278+8]..[1574,54278+37])
                    Pexp_apply
                    expression (typing/parmatch.ml[1574,54278+8]..[1574,54278+16])
                      Pexp_ident "List.map" (typing/parmatch.ml[1574,54278+8]..[1574,54278+16])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1574,54278+17]..[1574,54278+30])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/parmatch.ml[1574,54278+22]..[1574,54278+23])
                            Ppat_any
                          expression (typing/parmatch.ml[1574,54278+27]..[1574,54278+29])
                            Pexp_construct "[]" (typing/parmatch.ml[1574,54278+27]..[1574,54278+29])
                            None
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1574,54278+31]..[1574,54278+37])
                          Pexp_field
                          expression (typing/parmatch.ml[1574,54278+31]..[1574,54278+33])
                            Pexp_ident "qs" (typing/parmatch.ml[1574,54278+31]..[1574,54278+33])
                          "ors" (typing/parmatch.ml[1574,54278+34]..[1574,54278+37])
                    ]
                <case>
                  pattern (typing/parmatch.ml[1575,54316+2]..[1575,54316+3])
                    Ppat_any
                  expression (typing/parmatch.ml[1576,54324+2]..[1577,54370+16])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[1576,54324+6]..[1576,54324+10])
                          Ppat_var "rows" (typing/parmatch.ml[1576,54324+6]..[1576,54324+10])
                        expression (typing/parmatch.ml[1576,54324+13]..[1576,54324+42])
                          Pexp_apply
                          expression (typing/parmatch.ml[1576,54324+13]..[1576,54324+21])
                            Pexp_ident "List.map" (typing/parmatch.ml[1576,54324+13]..[1576,54324+21])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1576,54324+22]..[1576,54324+38])
                                Pexp_ident "extract_elements" (typing/parmatch.ml[1576,54324+22]..[1576,54324+38])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1576,54324+39]..[1576,54324+42])
                                Pexp_ident "pss" (typing/parmatch.ml[1576,54324+39]..[1576,54324+42])
                          ]
                    ]
                    expression (typing/parmatch.ml[1577,54370+2]..[1577,54370+16])
                      Pexp_apply
                      expression (typing/parmatch.ml[1577,54370+2]..[1577,54370+11])
                        Pexp_ident "transpose" (typing/parmatch.ml[1577,54370+2]..[1577,54370+11])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1577,54370+12]..[1577,54370+16])
                            Pexp_ident "rows" (typing/parmatch.ml[1577,54370+12]..[1577,54370+16])
                      ]
              ]
    ]
  structure_item (typing/parmatch.ml[1584,54534+0]..[1677,57810+9])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[1584,54534+8]..[1584,54534+26])
          Ppat_var "every_satisfiables" (typing/parmatch.ml[1584,54534+8]..[1584,54534+26])
        expression (typing/parmatch.ml[1584,54534+27]..[1644,56852+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1584,54534+27]..[1584,54534+30])
            Ppat_var "pss" (typing/parmatch.ml[1584,54534+27]..[1584,54534+30])
          expression (typing/parmatch.ml[1584,54534+31]..[1644,56852+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1584,54534+31]..[1584,54534+33])
              Ppat_var "qs" (typing/parmatch.ml[1584,54534+31]..[1584,54534+33])
            expression (typing/parmatch.ml[1584,54534+36]..[1644,56852+7])
              Pexp_match
              expression (typing/parmatch.ml[1584,54534+42]..[1584,54534+51])
                Pexp_field
                expression (typing/parmatch.ml[1584,54534+42]..[1584,54534+44])
                  Pexp_ident "qs" (typing/parmatch.ml[1584,54534+42]..[1584,54534+44])
                "active" (typing/parmatch.ml[1584,54534+45]..[1584,54534+51])
              [
                <case>
                  pattern (typing/parmatch.ml[1585,54591+2]..[1585,54591+4])
                    Ppat_construct "[]" (typing/parmatch.ml[1585,54591+2]..[1585,54591+4])
                    None
                  expression (typing/parmatch.ml[1587,54655+4]..[1606,55287+7])
                    Pexp_match
                    expression (typing/parmatch.ml[1587,54655+16]..[1587,54655+22])
                      Pexp_field
                      expression (typing/parmatch.ml[1587,54655+16]..[1587,54655+18])
                        Pexp_ident "qs" (typing/parmatch.ml[1587,54655+16]..[1587,54655+18])
                      "ors" (typing/parmatch.ml[1587,54655+19]..[1587,54655+22])
                    [
                      <case>
                        pattern (typing/parmatch.ml[1588,54683+6]..[1588,54683+8])
                          Ppat_construct "[]" (typing/parmatch.ml[1588,54683+6]..[1588,54683+8])
                          None
                        expression (typing/parmatch.ml[1589,54716+8]..[1592,54807+16])
                          Pexp_ifthenelse
                          expression (typing/parmatch.ml[1589,54716+11]..[1589,54716+57])
                            Pexp_apply
                            expression (typing/parmatch.ml[1589,54716+11]..[1589,54716+22])
                              Pexp_ident "satisfiable" (typing/parmatch.ml[1589,54716+11]..[1589,54716+22])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1589,54716+23]..[1589,54716+40])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1589,54716+24]..[1589,54716+35])
                                    Pexp_ident "make_matrix" (typing/parmatch.ml[1589,54716+24]..[1589,54716+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1589,54716+36]..[1589,54716+39])
                                        Pexp_ident "pss" (typing/parmatch.ml[1589,54716+36]..[1589,54716+39])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1589,54716+41]..[1589,54716+57])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1589,54716+42]..[1589,54716+53])
                                    Pexp_ident "make_vector" (typing/parmatch.ml[1589,54716+42]..[1589,54716+53])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1589,54716+54]..[1589,54716+56])
                                        Pexp_ident "qs" (typing/parmatch.ml[1589,54716+54]..[1589,54716+56])
                                  ]
                            ]
                          expression (typing/parmatch.ml[1590,54779+10]..[1590,54779+14])
                            Pexp_construct "Used" (typing/parmatch.ml[1590,54779+10]..[1590,54779+14])
                            None
                          Some
                            expression (typing/parmatch.ml[1592,54807+10]..[1592,54807+16])
                              Pexp_construct "Unused" (typing/parmatch.ml[1592,54807+10]..[1592,54807+16])
                              None
                      <case>
                        pattern (typing/parmatch.ml[1593,54824+6]..[1593,54824+7])
                          Ppat_any
                        expression (typing/parmatch.ml[1594,54873+8]..[1605,55272+14])
                          Pexp_apply
                          expression (typing/parmatch.ml[1594,54873+8]..[1594,54873+24])
                            Pexp_ident "List.fold_right2" (typing/parmatch.ml[1594,54873+8]..[1594,54873+24])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1595,54898+10]..[1603,55178+36])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/parmatch.ml[1595,54898+15]..[1595,54898+18])
                                  Ppat_var "pss" (typing/parmatch.ml[1595,54898+15]..[1595,54898+18])
                                expression (typing/parmatch.ml[1595,54898+19]..[1603,55178+35]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/parmatch.ml[1595,54898+19]..[1595,54898+21])
                                    Ppat_var "qs" (typing/parmatch.ml[1595,54898+19]..[1595,54898+21])
                                  expression (typing/parmatch.ml[1595,54898+22]..[1603,55178+35]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/parmatch.ml[1595,54898+22]..[1595,54898+23])
                                      Ppat_var "r" (typing/parmatch.ml[1595,54898+22]..[1595,54898+23])
                                    expression (typing/parmatch.ml[1595,54898+27]..[1603,55178+35])
                                      Pexp_match
                                      expression (typing/parmatch.ml[1595,54898+33]..[1595,54898+34])
                                        Pexp_ident "r" (typing/parmatch.ml[1595,54898+33]..[1595,54898+34])
                                      [
                                        <case>
                                          pattern (typing/parmatch.ml[1596,54938+12]..[1596,54938+18])
                                            Ppat_construct "Unused" (typing/parmatch.ml[1596,54938+12]..[1596,54938+18])
                                            None
                                          expression (typing/parmatch.ml[1596,54938+22]..[1596,54938+28])
                                            Pexp_construct "Unused" (typing/parmatch.ml[1596,54938+22]..[1596,54938+28])
                                            None
                                        <case>
                                          pattern (typing/parmatch.ml[1597,54967+12]..[1597,54967+13])
                                            Ppat_any
                                          expression (typing/parmatch.ml[1598,54984+14]..[1603,55178+35])
                                            Pexp_match
                                            expression (typing/parmatch.ml[1598,54984+20]..[1598,54984+29])
                                              Pexp_field
                                              expression (typing/parmatch.ml[1598,54984+20]..[1598,54984+22])
                                                Pexp_ident "qs" (typing/parmatch.ml[1598,54984+20]..[1598,54984+22])
                                              "active" (typing/parmatch.ml[1598,54984+23]..[1598,54984+29])
                                            [
                                              <case>
                                                pattern (typing/parmatch.ml[1599,55019+16]..[1599,55019+19])
                                                  Ppat_construct "::" (typing/parmatch.ml[1599,55019+17]..[1599,55019+19]) ghost
                                                  Some
                                                    []
                                                    pattern (typing/parmatch.ml[1599,55019+17]..[1599,55019+19]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (typing/parmatch.ml[1599,55019+17]..[1599,55019+18])
                                                          Ppat_var "q" (typing/parmatch.ml[1599,55019+17]..[1599,55019+18])
                                                        pattern (typing/parmatch.ml[1599,55019+18]..[1599,55019+19]) ghost
                                                          Ppat_construct "[]" (typing/parmatch.ml[1599,55019+18]..[1599,55019+19]) ghost
                                                          None
                                                      ]
                                                expression (typing/parmatch.ml[1600,55042+18]..[1602,55142+35])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/parmatch.ml[1600,55042+22]..[1600,55042+27])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/parmatch.ml[1600,55042+22]..[1600,55042+24])
                                                            Ppat_var "q1" (typing/parmatch.ml[1600,55042+22]..[1600,55042+24])
                                                          pattern (typing/parmatch.ml[1600,55042+25]..[1600,55042+27])
                                                            Ppat_var "q2" (typing/parmatch.ml[1600,55042+25]..[1600,55042+27])
                                                        ]
                                                      expression (typing/parmatch.ml[1600,55042+30]..[1600,55042+39])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[1600,55042+30]..[1600,55042+37])
                                                          Pexp_ident "or_args" (typing/parmatch.ml[1600,55042+30]..[1600,55042+37])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1600,55042+38]..[1600,55042+39])
                                                              Pexp_ident "q" (typing/parmatch.ml[1600,55042+38]..[1600,55042+39])
                                                        ]
                                                  ]
                                                  expression (typing/parmatch.ml[1601,55085+18]..[1602,55142+35])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/parmatch.ml[1601,55085+22]..[1601,55085+27])
                                                          Ppat_var "r_loc" (typing/parmatch.ml[1601,55085+22]..[1601,55085+27])
                                                        expression (typing/parmatch.ml[1601,55085+30]..[1601,55085+53])
                                                          Pexp_apply
                                                          expression (typing/parmatch.ml[1601,55085+30]..[1601,55085+40])
                                                            Pexp_ident "every_both" (typing/parmatch.ml[1601,55085+30]..[1601,55085+40])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/parmatch.ml[1601,55085+41]..[1601,55085+44])
                                                                Pexp_ident "pss" (typing/parmatch.ml[1601,55085+41]..[1601,55085+44])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/parmatch.ml[1601,55085+45]..[1601,55085+47])
                                                                Pexp_ident "qs" (typing/parmatch.ml[1601,55085+45]..[1601,55085+47])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/parmatch.ml[1601,55085+48]..[1601,55085+50])
                                                                Pexp_ident "q1" (typing/parmatch.ml[1601,55085+48]..[1601,55085+50])
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/parmatch.ml[1601,55085+51]..[1601,55085+53])
                                                                Pexp_ident "q2" (typing/parmatch.ml[1601,55085+51]..[1601,55085+53])
                                                          ]
                                                    ]
                                                    expression (typing/parmatch.ml[1602,55142+18]..[1602,55142+35])
                                                      Pexp_apply
                                                      expression (typing/parmatch.ml[1602,55142+18]..[1602,55142+27])
                                                        Pexp_ident "union_res" (typing/parmatch.ml[1602,55142+18]..[1602,55142+27])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[1602,55142+28]..[1602,55142+29])
                                                            Pexp_ident "r" (typing/parmatch.ml[1602,55142+28]..[1602,55142+29])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[1602,55142+30]..[1602,55142+35])
                                                            Pexp_ident "r_loc" (typing/parmatch.ml[1602,55142+30]..[1602,55142+35])
                                                      ]
                                              <case>
                                                pattern (typing/parmatch.ml[1603,55178+16]..[1603,55178+17])
                                                  Ppat_any
                                                expression (typing/parmatch.ml[1603,55178+23]..[1603,55178+35])
                                                  Pexp_assert
                                                  expression (typing/parmatch.ml[1603,55178+30]..[1603,55178+35])
                                                    Pexp_construct "false" (typing/parmatch.ml[1603,55178+30]..[1603,55178+35])
                                                    None
                                            ]
                                      ]
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1604,55215+10]..[1604,55215+34])
                                Pexp_apply
                                expression (typing/parmatch.ml[1604,55215+11]..[1604,55215+26])
                                  Pexp_ident "extract_columns" (typing/parmatch.ml[1604,55215+11]..[1604,55215+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1604,55215+27]..[1604,55215+30])
                                      Pexp_ident "pss" (typing/parmatch.ml[1604,55215+27]..[1604,55215+30])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1604,55215+31]..[1604,55215+33])
                                      Pexp_ident "qs" (typing/parmatch.ml[1604,55215+31]..[1604,55215+33])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1604,55215+35]..[1604,55215+56])
                                Pexp_apply
                                expression (typing/parmatch.ml[1604,55215+36]..[1604,55215+52])
                                  Pexp_ident "extract_elements" (typing/parmatch.ml[1604,55215+36]..[1604,55215+52])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1604,55215+53]..[1604,55215+55])
                                      Pexp_ident "qs" (typing/parmatch.ml[1604,55215+53]..[1604,55215+55])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1605,55272+10]..[1605,55272+14])
                                Pexp_construct "Used" (typing/parmatch.ml[1605,55272+10]..[1605,55272+14])
                                None
                          ]
                    ]
                <case>
                  pattern (typing/parmatch.ml[1607,55295+2]..[1607,55295+8])
                    Ppat_construct "::" (typing/parmatch.ml[1607,55295+3]..[1607,55295+5])
                    Some
                      []
                      pattern (typing/parmatch.ml[1607,55295+2]..[1607,55295+8]) ghost
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[1607,55295+2]..[1607,55295+3])
                            Ppat_var "q" (typing/parmatch.ml[1607,55295+2]..[1607,55295+3])
                          pattern (typing/parmatch.ml[1607,55295+5]..[1607,55295+8])
                            Ppat_var "rem" (typing/parmatch.ml[1607,55295+5]..[1607,55295+8])
                        ]
                  expression (typing/parmatch.ml[1608,55307+4]..[1644,56852+7])
                    Pexp_match
                    expression (typing/parmatch.ml[1608,55307+16]..[1608,55307+64])
                      Pexp_field
                      expression (typing/parmatch.ml[1608,55307+16]..[1608,55307+55])
                        Pexp_open Fresh
                        module_expr (typing/parmatch.ml[1608,55307+16]..[1608,55307+32])
                          Pmod_ident "Patterns.General" (typing/parmatch.ml[1608,55307+16]..[1608,55307+32])
                        expression (typing/parmatch.ml[1608,55307+34]..[1608,55307+54])
                          Pexp_apply
                          expression (typing/parmatch.ml[1608,55307+41]..[1608,55307+43])
                            Pexp_ident "|>" (typing/parmatch.ml[1608,55307+41]..[1608,55307+43])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1608,55307+34]..[1608,55307+40])
                                Pexp_apply
                                expression (typing/parmatch.ml[1608,55307+34]..[1608,55307+38])
                                  Pexp_ident "view" (typing/parmatch.ml[1608,55307+34]..[1608,55307+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1608,55307+39]..[1608,55307+40])
                                      Pexp_ident "q" (typing/parmatch.ml[1608,55307+39]..[1608,55307+40])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1608,55307+44]..[1608,55307+54])
                                Pexp_ident "strip_vars" (typing/parmatch.ml[1608,55307+44]..[1608,55307+54])
                          ]
                      "pat_desc" (typing/parmatch.ml[1608,55307+56]..[1608,55307+64])
                    [
                      <case>
                        pattern (typing/parmatch.ml[1609,55377+6]..[1609,55377+10])
                          Ppat_variant "Any"
                          None
                        expression (typing/parmatch.ml[1610,55391+8]..[1615,55620+68])
                          Pexp_ifthenelse
                          expression (typing/parmatch.ml[1610,55391+11]..[1610,55391+28])
                            Pexp_apply
                            expression (typing/parmatch.ml[1610,55391+11]..[1610,55391+24])
                              Pexp_ident "is_var_column" (typing/parmatch.ml[1610,55391+11]..[1610,55391+24])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1610,55391+25]..[1610,55391+28])
                                  Pexp_ident "pss" (typing/parmatch.ml[1610,55391+25]..[1610,55391+28])
                            ]
                          expression (typing/parmatch.ml[1612,55484+10]..[1612,55484+60])
                            Pexp_apply
                            expression (typing/parmatch.ml[1612,55484+10]..[1612,55484+28])
                              Pexp_ident "every_satisfiables" (typing/parmatch.ml[1612,55484+10]..[1612,55484+28])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1612,55484+29]..[1612,55484+48])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1612,55484+30]..[1612,55484+43])
                                    Pexp_ident "remove_column" (typing/parmatch.ml[1612,55484+30]..[1612,55484+43])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1612,55484+44]..[1612,55484+47])
                                        Pexp_ident "pss" (typing/parmatch.ml[1612,55484+44]..[1612,55484+47])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1612,55484+49]..[1612,55484+60])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1612,55484+50]..[1612,55484+56])
                                    Pexp_ident "remove" (typing/parmatch.ml[1612,55484+50]..[1612,55484+56])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1612,55484+57]..[1612,55484+59])
                                        Pexp_ident "qs" (typing/parmatch.ml[1612,55484+57]..[1612,55484+59])
                                  ]
                            ]
                          Some
                            expression (typing/parmatch.ml[1615,55620+10]..[1615,55620+68])
                              Pexp_apply
                              expression (typing/parmatch.ml[1615,55620+10]..[1615,55620+28])
                                Pexp_ident "every_satisfiables" (typing/parmatch.ml[1615,55620+10]..[1615,55620+28])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1615,55620+29]..[1615,55620+52])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1615,55620+30]..[1615,55620+47])
                                      Pexp_ident "push_no_or_column" (typing/parmatch.ml[1615,55620+30]..[1615,55620+47])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1615,55620+48]..[1615,55620+51])
                                          Pexp_ident "pss" (typing/parmatch.ml[1615,55620+48]..[1615,55620+51])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1615,55620+53]..[1615,55620+68])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1615,55620+54]..[1615,55620+64])
                                      Pexp_ident "push_no_or" (typing/parmatch.ml[1615,55620+54]..[1615,55620+64])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1615,55620+65]..[1615,55620+67])
                                          Pexp_ident "qs" (typing/parmatch.ml[1615,55620+65]..[1615,55620+67])
                                    ]
                              ]
                      <case>
                        pattern (typing/parmatch.ml[1616,55689+6]..[1616,55689+19])
                          Ppat_variant "Or"
                          Some
                            pattern (typing/parmatch.ml[1616,55689+10]..[1616,55689+19])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[1616,55689+11]..[1616,55689+13])
                                  Ppat_var "q1" (typing/parmatch.ml[1616,55689+11]..[1616,55689+13])
                                pattern (typing/parmatch.ml[1616,55689+14]..[1616,55689+16])
                                  Ppat_var "q2" (typing/parmatch.ml[1616,55689+14]..[1616,55689+16])
                                pattern (typing/parmatch.ml[1616,55689+17]..[1616,55689+18])
                                  Ppat_any
                              ]
                        expression (typing/parmatch.ml[1617,55712+8]..[1625,56014+62])
                          Pexp_ifthenelse
                          expression (typing/parmatch.ml[1618,55723+10]..[1619,55766+39])
                            Pexp_apply
                            expression (typing/parmatch.ml[1618,55723+40]..[1618,55723+42])
                              Pexp_ident "&&" (typing/parmatch.ml[1618,55723+40]..[1618,55723+42])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1618,55723+10]..[1618,55723+39])
                                  Pexp_field
                                  expression (typing/parmatch.ml[1618,55723+10]..[1618,55723+20])
                                    Pexp_field
                                    expression (typing/parmatch.ml[1618,55723+10]..[1618,55723+12])
                                      Pexp_ident "q1" (typing/parmatch.ml[1618,55723+10]..[1618,55723+12])
                                    "pat_loc" (typing/parmatch.ml[1618,55723+13]..[1618,55723+20])
                                  "Location.loc_ghost" (typing/parmatch.ml[1618,55723+21]..[1618,55723+39])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1619,55766+10]..[1619,55766+39])
                                  Pexp_field
                                  expression (typing/parmatch.ml[1619,55766+10]..[1619,55766+20])
                                    Pexp_field
                                    expression (typing/parmatch.ml[1619,55766+10]..[1619,55766+12])
                                      Pexp_ident "q2" (typing/parmatch.ml[1619,55766+10]..[1619,55766+12])
                                    "pat_loc" (typing/parmatch.ml[1619,55766+13]..[1619,55766+20])
                                  "Location.loc_ghost" (typing/parmatch.ml[1619,55766+21]..[1619,55766+39])
                            ]
                          expression (typing/parmatch.ml[1622,55890+10]..[1622,55890+68])
                            Pexp_apply
                            expression (typing/parmatch.ml[1622,55890+10]..[1622,55890+28])
                              Pexp_ident "every_satisfiables" (typing/parmatch.ml[1622,55890+10]..[1622,55890+28])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1622,55890+29]..[1622,55890+52])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1622,55890+30]..[1622,55890+47])
                                    Pexp_ident "push_no_or_column" (typing/parmatch.ml[1622,55890+30]..[1622,55890+47])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1622,55890+48]..[1622,55890+51])
                                        Pexp_ident "pss" (typing/parmatch.ml[1622,55890+48]..[1622,55890+51])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1622,55890+53]..[1622,55890+68])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1622,55890+54]..[1622,55890+64])
                                    Pexp_ident "push_no_or" (typing/parmatch.ml[1622,55890+54]..[1622,55890+64])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1622,55890+65]..[1622,55890+67])
                                        Pexp_ident "qs" (typing/parmatch.ml[1622,55890+65]..[1622,55890+67])
                                  ]
                            ]
                          Some
                            expression (typing/parmatch.ml[1625,56014+10]..[1625,56014+62])
                              Pexp_apply
                              expression (typing/parmatch.ml[1625,56014+10]..[1625,56014+28])
                                Pexp_ident "every_satisfiables" (typing/parmatch.ml[1625,56014+10]..[1625,56014+28])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1625,56014+29]..[1625,56014+49])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1625,56014+30]..[1625,56014+44])
                                      Pexp_ident "push_or_column" (typing/parmatch.ml[1625,56014+30]..[1625,56014+44])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1625,56014+45]..[1625,56014+48])
                                          Pexp_ident "pss" (typing/parmatch.ml[1625,56014+45]..[1625,56014+48])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1625,56014+50]..[1625,56014+62])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1625,56014+51]..[1625,56014+58])
                                      Pexp_ident "push_or" (typing/parmatch.ml[1625,56014+51]..[1625,56014+58])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1625,56014+59]..[1625,56014+61])
                                          Pexp_ident "qs" (typing/parmatch.ml[1625,56014+59]..[1625,56014+61])
                                    ]
                              ]
                      <case>
                        pattern (typing/parmatch.ml[1626,56077+6]..[1626,56077+22])
                          Ppat_variant "Variant"
                          Some
                            pattern (typing/parmatch.ml[1626,56077+15]..[1626,56077+22])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[1626,56077+16]..[1626,56077+17])
                                  Ppat_var "l" (typing/parmatch.ml[1626,56077+16]..[1626,56077+17])
                                pattern (typing/parmatch.ml[1626,56077+18]..[1626,56077+19])
                                  Ppat_any
                                pattern (typing/parmatch.ml[1626,56077+20]..[1626,56077+21])
                                  Ppat_var "r" (typing/parmatch.ml[1626,56077+20]..[1626,56077+21])
                              ]
                        <when>
                          expression (typing/parmatch.ml[1626,56077+28]..[1626,56077+41])
                            Pexp_apply
                            expression (typing/parmatch.ml[1626,56077+28]..[1626,56077+37])
                              Pexp_ident "is_absent" (typing/parmatch.ml[1626,56077+28]..[1626,56077+37])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1626,56077+38]..[1626,56077+39])
                                  Pexp_ident "l" (typing/parmatch.ml[1626,56077+38]..[1626,56077+39])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1626,56077+40]..[1626,56077+41])
                                  Pexp_ident "r" (typing/parmatch.ml[1626,56077+40]..[1626,56077+41])
                            ]
                        expression (typing/parmatch.ml[1627,56142+8]..[1627,56142+14])
                          Pexp_construct "Unused" (typing/parmatch.ml[1627,56142+8]..[1627,56142+14])
                          None
                      <case>
                        pattern (typing/parmatch.ml[1628,56157+6]..[1628,56157+35])
                          Ppat_alias "view" (typing/parmatch.ml[1628,56157+31]..[1628,56157+35])
                          pattern (typing/parmatch.ml[1628,56157+6]..[1628,56157+27])
                            Ppat_type
                            "Patterns.Simple.view" (typing/parmatch.ml[1628,56157+7]..[1628,56157+27])
                        expression (typing/parmatch.ml[1629,56196+8]..[1643,56840+11])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/parmatch.ml[1629,56196+12]..[1629,56196+13])
                                Ppat_var "q" (typing/parmatch.ml[1629,56196+12]..[1629,56196+13])
                              expression (typing/parmatch.ml[1629,56196+16]..[1629,56196+42])
                                Pexp_record
                                [
                                  "pat_desc" (typing/parmatch.ml[1629,56196+25]..[1629,56196+33])
                                    expression (typing/parmatch.ml[1629,56196+36]..[1629,56196+40])
                                      Pexp_ident "view" (typing/parmatch.ml[1629,56196+36]..[1629,56196+40])
                                ]
                                Some
                                  expression (typing/parmatch.ml[1629,56196+18]..[1629,56196+19])
                                    Pexp_ident "q" (typing/parmatch.ml[1629,56196+18]..[1629,56196+19])
                          ]
                          expression (typing/parmatch.ml[1631,56285+8]..[1643,56840+11])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/parmatch.ml[1631,56285+12]..[1631,56285+15])
                                  Ppat_var "pss" (typing/parmatch.ml[1631,56285+12]..[1631,56285+15])
                                expression (typing/parmatch.ml[1631,56285+18]..[1631,56285+51])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1631,56285+18]..[1631,56285+47])
                                    Pexp_ident "simplify_first_usefulness_col" (typing/parmatch.ml[1631,56285+18]..[1631,56285+47])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1631,56285+48]..[1631,56285+51])
                                        Pexp_ident "pss" (typing/parmatch.ml[1631,56285+48]..[1631,56285+51])
                                  ]
                            ]
                            expression (typing/parmatch.ml[1632,56340+8]..[1643,56840+11])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/parmatch.ml[1632,56340+12]..[1632,56340+20])
                                    Ppat_tuple
                                    [
                                      pattern (typing/parmatch.ml[1632,56340+12]..[1632,56340+14])
                                        Ppat_var "hq" (typing/parmatch.ml[1632,56340+12]..[1632,56340+14])
                                      pattern (typing/parmatch.ml[1632,56340+16]..[1632,56340+20])
                                        Ppat_var "args" (typing/parmatch.ml[1632,56340+16]..[1632,56340+20])
                                    ]
                                  expression (typing/parmatch.ml[1632,56340+23]..[1632,56340+50])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1632,56340+23]..[1632,56340+48])
                                      Pexp_ident "Patterns.Head.deconstruct" (typing/parmatch.ml[1632,56340+23]..[1632,56340+48])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1632,56340+49]..[1632,56340+50])
                                          Pexp_ident "q" (typing/parmatch.ml[1632,56340+49]..[1632,56340+50])
                                    ]
                              ]
                              expression (typing/parmatch.ml[1635,56490+8]..[1643,56840+11])
                                Pexp_ifthenelse
                                expression (typing/parmatch.ml[1635,56490+11]..[1635,56490+54])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1635,56490+11]..[1635,56490+14])
                                    Pexp_ident "not" (typing/parmatch.ml[1635,56490+11]..[1635,56490+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1635,56490+15]..[1635,56490+54])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1635,56490+16]..[1635,56490+28])
                                          Pexp_ident "all_coherent" (typing/parmatch.ml[1635,56490+16]..[1635,56490+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1635,56490+29]..[1635,56490+53])
                                              Pexp_construct "::" (typing/parmatch.ml[1635,56490+33]..[1635,56490+35])
                                              Some
                                                expression (typing/parmatch.ml[1635,56490+30]..[1635,56490+52]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/parmatch.ml[1635,56490+30]..[1635,56490+32])
                                                      Pexp_ident "hq" (typing/parmatch.ml[1635,56490+30]..[1635,56490+32])
                                                    expression (typing/parmatch.ml[1635,56490+36]..[1635,56490+52])
                                                      Pexp_apply
                                                      expression (typing/parmatch.ml[1635,56490+36]..[1635,56490+48])
                                                        Pexp_ident "first_column" (typing/parmatch.ml[1635,56490+36]..[1635,56490+48])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[1635,56490+49]..[1635,56490+52])
                                                            Pexp_ident "pss" (typing/parmatch.ml[1635,56490+49]..[1635,56490+52])
                                                      ]
                                                  ]
                                        ]
                                  ]
                                expression (typing/parmatch.ml[1636,56550+10]..[1636,56550+16])
                                  Pexp_construct "Unused" (typing/parmatch.ml[1636,56550+10]..[1636,56550+16])
                                  None
                                Some
                                  expression (typing/parmatch.ml[1637,56567+13]..[1643,56840+11])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/parmatch.ml[1638,56586+14]..[1638,56586+16])
                                          Ppat_var "q0" (typing/parmatch.ml[1638,56586+14]..[1638,56586+16])
                                        expression (typing/parmatch.ml[1638,56586+19]..[1638,56586+34])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[1638,56586+19]..[1638,56586+28])
                                            Pexp_ident "discr_pat" (typing/parmatch.ml[1638,56586+19]..[1638,56586+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1638,56586+29]..[1638,56586+30])
                                                Pexp_ident "q" (typing/parmatch.ml[1638,56586+29]..[1638,56586+30])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1638,56586+31]..[1638,56586+34])
                                                Pexp_ident "pss" (typing/parmatch.ml[1638,56586+31]..[1638,56586+34])
                                          ]
                                    ]
                                    expression (typing/parmatch.ml[1639,56624+10]..[1642,56776+63])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1639,56624+10]..[1639,56624+28])
                                        Pexp_ident "every_satisfiables" (typing/parmatch.ml[1639,56624+10]..[1639,56624+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1640,56653+12]..[1641,56701+74])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[1640,56653+13]..[1640,56653+40])
                                              Pexp_ident "build_specialized_submatrix" (typing/parmatch.ml[1640,56653+13]..[1640,56653+40])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1640,56653+41]..[1640,56653+43])
                                                  Pexp_ident "q0" (typing/parmatch.ml[1640,56653+41]..[1640,56653+43])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1640,56653+44]..[1640,56653+47])
                                                  Pexp_ident "pss" (typing/parmatch.ml[1640,56653+44]..[1640,56653+47])
                                              <arg>
                                              Labelled "extend_row"
                                                expression (typing/parmatch.ml[1641,56701+26]..[1641,56701+73])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (typing/parmatch.ml[1641,56701+31]..[1641,56701+33])
                                                    Ppat_var "ps" (typing/parmatch.ml[1641,56701+31]..[1641,56701+33])
                                                  expression (typing/parmatch.ml[1641,56701+34]..[1641,56701+72]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (typing/parmatch.ml[1641,56701+34]..[1641,56701+35])
                                                      Ppat_var "r" (typing/parmatch.ml[1641,56701+34]..[1641,56701+35])
                                                    expression (typing/parmatch.ml[1641,56701+39]..[1641,56701+72])
                                                      Pexp_record
                                                      [
                                                        "active" (typing/parmatch.ml[1641,56701+48]..[1641,56701+54])
                                                          expression (typing/parmatch.ml[1641,56701+57]..[1641,56701+70])
                                                            Pexp_apply
                                                            expression (typing/parmatch.ml[1641,56701+60]..[1641,56701+61])
                                                              Pexp_ident "@" (typing/parmatch.ml[1641,56701+60]..[1641,56701+61])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[1641,56701+57]..[1641,56701+59])
                                                                  Pexp_ident "ps" (typing/parmatch.ml[1641,56701+57]..[1641,56701+59])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[1641,56701+62]..[1641,56701+70])
                                                                  Pexp_field
                                                                  expression (typing/parmatch.ml[1641,56701+62]..[1641,56701+63])
                                                                    Pexp_ident "r" (typing/parmatch.ml[1641,56701+62]..[1641,56701+63])
                                                                  "active" (typing/parmatch.ml[1641,56701+64]..[1641,56701+70])
                                                            ]
                                                      ]
                                                      Some
                                                        expression (typing/parmatch.ml[1641,56701+41]..[1641,56701+42])
                                                          Pexp_ident "r" (typing/parmatch.ml[1641,56701+41]..[1641,56701+42])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1642,56776+12]..[1642,56776+63])
                                            Pexp_record
                                            [
                                              "active" (typing/parmatch.ml[1642,56776+21]..[1642,56776+27])
                                                expression (typing/parmatch.ml[1642,56776+28]..[1642,56776+62])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[1642,56776+57]..[1642,56776+58])
                                                    Pexp_ident "@" (typing/parmatch.ml[1642,56776+57]..[1642,56776+58])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1642,56776+28]..[1642,56776+56])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[1642,56776+28]..[1642,56776+45])
                                                          Pexp_ident "simple_match_args" (typing/parmatch.ml[1642,56776+28]..[1642,56776+45])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1642,56776+46]..[1642,56776+48])
                                                              Pexp_ident "q0" (typing/parmatch.ml[1642,56776+46]..[1642,56776+48])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1642,56776+49]..[1642,56776+51])
                                                              Pexp_ident "hq" (typing/parmatch.ml[1642,56776+49]..[1642,56776+51])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1642,56776+52]..[1642,56776+56])
                                                              Pexp_ident "args" (typing/parmatch.ml[1642,56776+52]..[1642,56776+56])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1642,56776+59]..[1642,56776+62])
                                                        Pexp_ident "rem" (typing/parmatch.ml[1642,56776+59]..[1642,56776+62])
                                                  ]
                                            ]
                                            Some
                                              expression (typing/parmatch.ml[1642,56776+13]..[1642,56776+15])
                                                Pexp_ident "qs" (typing/parmatch.ml[1642,56776+13]..[1642,56776+15])
                                      ]
                    ]
              ]
      <def>
        pattern (typing/parmatch.ml[1655,57181+4]..[1655,57181+14])
          Ppat_var "every_both" (typing/parmatch.ml[1655,57181+4]..[1655,57181+14])
        expression (typing/parmatch.ml[1655,57181+15]..[1677,57810+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1655,57181+15]..[1655,57181+18])
            Ppat_var "pss" (typing/parmatch.ml[1655,57181+15]..[1655,57181+18])
          expression (typing/parmatch.ml[1655,57181+19]..[1677,57810+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1655,57181+19]..[1655,57181+21])
              Ppat_var "qs" (typing/parmatch.ml[1655,57181+19]..[1655,57181+21])
            expression (typing/parmatch.ml[1655,57181+22]..[1677,57810+9]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[1655,57181+22]..[1655,57181+24])
                Ppat_var "q1" (typing/parmatch.ml[1655,57181+22]..[1655,57181+24])
              expression (typing/parmatch.ml[1655,57181+25]..[1677,57810+9]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/parmatch.ml[1655,57181+25]..[1655,57181+27])
                  Ppat_var "q2" (typing/parmatch.ml[1655,57181+25]..[1655,57181+27])
                expression (typing/parmatch.ml[1656,57211+2]..[1677,57810+9])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/parmatch.ml[1656,57211+6]..[1656,57211+9])
                        Ppat_var "qs1" (typing/parmatch.ml[1656,57211+6]..[1656,57211+9])
                      expression (typing/parmatch.ml[1656,57211+12]..[1656,57211+33])
                        Pexp_record
                        [
                          "active" (typing/parmatch.ml[1656,57211+21]..[1656,57211+27])
                            expression (typing/parmatch.ml[1656,57211+28]..[1656,57211+32])
                              Pexp_construct "::" (typing/parmatch.ml[1656,57211+29]..[1656,57211+32]) ghost
                              Some
                                expression (typing/parmatch.ml[1656,57211+29]..[1656,57211+32]) ghost
                                  Pexp_tuple
                                  [
                                    expression (typing/parmatch.ml[1656,57211+29]..[1656,57211+31])
                                      Pexp_ident "q1" (typing/parmatch.ml[1656,57211+29]..[1656,57211+31])
                                    expression (typing/parmatch.ml[1656,57211+31]..[1656,57211+32]) ghost
                                      Pexp_construct "[]" (typing/parmatch.ml[1656,57211+31]..[1656,57211+32]) ghost
                                      None
                                  ]
                        ]
                        Some
                          expression (typing/parmatch.ml[1656,57211+13]..[1656,57211+15])
                            Pexp_ident "qs" (typing/parmatch.ml[1656,57211+13]..[1656,57211+15])
                    <def>
                      pattern (typing/parmatch.ml[1657,57245+6]..[1657,57245+9])
                        Ppat_var "qs2" (typing/parmatch.ml[1657,57245+6]..[1657,57245+9])
                      expression (typing/parmatch.ml[1657,57245+13]..[1657,57245+34])
                        Pexp_record
                        [
                          "active" (typing/parmatch.ml[1657,57245+22]..[1657,57245+28])
                            expression (typing/parmatch.ml[1657,57245+29]..[1657,57245+33])
                              Pexp_construct "::" (typing/parmatch.ml[1657,57245+30]..[1657,57245+33]) ghost
                              Some
                                expression (typing/parmatch.ml[1657,57245+30]..[1657,57245+33]) ghost
                                  Pexp_tuple
                                  [
                                    expression (typing/parmatch.ml[1657,57245+30]..[1657,57245+32])
                                      Pexp_ident "q2" (typing/parmatch.ml[1657,57245+30]..[1657,57245+32])
                                    expression (typing/parmatch.ml[1657,57245+32]..[1657,57245+33]) ghost
                                      Pexp_construct "[]" (typing/parmatch.ml[1657,57245+32]..[1657,57245+33]) ghost
                                      None
                                  ]
                        ]
                        Some
                          expression (typing/parmatch.ml[1657,57245+14]..[1657,57245+16])
                            Pexp_ident "qs" (typing/parmatch.ml[1657,57245+14]..[1657,57245+16])
                  ]
                  expression (typing/parmatch.ml[1658,57283+2]..[1677,57810+9])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[1658,57283+6]..[1658,57283+8])
                          Ppat_var "r1" (typing/parmatch.ml[1658,57283+6]..[1658,57283+8])
                        expression (typing/parmatch.ml[1658,57283+11]..[1658,57283+37])
                          Pexp_apply
                          expression (typing/parmatch.ml[1658,57283+11]..[1658,57283+29])
                            Pexp_ident "every_satisfiables" (typing/parmatch.ml[1658,57283+11]..[1658,57283+29])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1658,57283+30]..[1658,57283+33])
                                Pexp_ident "pss" (typing/parmatch.ml[1658,57283+30]..[1658,57283+33])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1658,57283+34]..[1658,57283+37])
                                Pexp_ident "qs1" (typing/parmatch.ml[1658,57283+34]..[1658,57283+37])
                          ]
                      <def>
                        pattern (typing/parmatch.ml[1659,57321+6]..[1659,57321+8])
                          Ppat_var "r2" (typing/parmatch.ml[1659,57321+6]..[1659,57321+8])
                        expression (typing/parmatch.ml[1659,57321+12]..[1659,57321+75])
                          Pexp_apply
                          expression (typing/parmatch.ml[1659,57321+12]..[1659,57321+30])
                            Pexp_ident "every_satisfiables" (typing/parmatch.ml[1659,57321+12]..[1659,57321+30])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1659,57321+31]..[1659,57321+71])
                                Pexp_ifthenelse
                                expression (typing/parmatch.ml[1659,57321+35]..[1659,57321+47])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1659,57321+35]..[1659,57321+41])
                                    Pexp_ident "compat" (typing/parmatch.ml[1659,57321+35]..[1659,57321+41])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1659,57321+42]..[1659,57321+44])
                                        Pexp_ident "q1" (typing/parmatch.ml[1659,57321+42]..[1659,57321+44])
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1659,57321+45]..[1659,57321+47])
                                        Pexp_ident "q2" (typing/parmatch.ml[1659,57321+45]..[1659,57321+47])
                                  ]
                                expression (typing/parmatch.ml[1659,57321+53]..[1659,57321+61])
                                  Pexp_construct "::" (typing/parmatch.ml[1659,57321+56]..[1659,57321+58])
                                  Some
                                    expression (typing/parmatch.ml[1659,57321+53]..[1659,57321+61]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/parmatch.ml[1659,57321+53]..[1659,57321+56])
                                          Pexp_ident "qs1" (typing/parmatch.ml[1659,57321+53]..[1659,57321+56])
                                        expression (typing/parmatch.ml[1659,57321+58]..[1659,57321+61])
                                          Pexp_ident "pss" (typing/parmatch.ml[1659,57321+58]..[1659,57321+61])
                                      ]
                                Some
                                  expression (typing/parmatch.ml[1659,57321+67]..[1659,57321+70])
                                    Pexp_ident "pss" (typing/parmatch.ml[1659,57321+67]..[1659,57321+70])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1659,57321+72]..[1659,57321+75])
                                Pexp_ident "qs2" (typing/parmatch.ml[1659,57321+72]..[1659,57321+75])
                          ]
                    ]
                    expression (typing/parmatch.ml[1660,57400+2]..[1677,57810+9])
                      Pexp_match
                      expression (typing/parmatch.ml[1660,57400+8]..[1660,57400+10])
                        Pexp_ident "r1" (typing/parmatch.ml[1660,57400+8]..[1660,57400+10])
                      [
                        <case>
                          pattern (typing/parmatch.ml[1661,57416+4]..[1661,57416+10])
                            Ppat_construct "Unused" (typing/parmatch.ml[1661,57416+4]..[1661,57416+10])
                            None
                          expression (typing/parmatch.ml[1662,57430+6]..[1666,57554+9])
                            Pexp_match
                            expression (typing/parmatch.ml[1662,57430+18]..[1662,57430+20])
                              Pexp_ident "r2" (typing/parmatch.ml[1662,57430+18]..[1662,57430+20])
                            [
                              <case>
                                pattern (typing/parmatch.ml[1663,57456+8]..[1663,57456+14])
                                  Ppat_construct "Unused" (typing/parmatch.ml[1663,57456+8]..[1663,57456+14])
                                  None
                                expression (typing/parmatch.ml[1663,57456+18]..[1663,57456+24])
                                  Pexp_construct "Unused" (typing/parmatch.ml[1663,57456+18]..[1663,57456+24])
                                  None
                              <case>
                                pattern (typing/parmatch.ml[1664,57481+8]..[1664,57481+12])
                                  Ppat_construct "Used" (typing/parmatch.ml[1664,57481+8]..[1664,57481+12])
                                  None
                                expression (typing/parmatch.ml[1664,57481+18]..[1664,57481+31])
                                  Pexp_construct "Upartial" (typing/parmatch.ml[1664,57481+18]..[1664,57481+26])
                                  Some
                                    expression (typing/parmatch.ml[1664,57481+27]..[1664,57481+31])
                                      Pexp_construct "::" (typing/parmatch.ml[1664,57481+28]..[1664,57481+31]) ghost
                                      Some
                                        expression (typing/parmatch.ml[1664,57481+28]..[1664,57481+31]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/parmatch.ml[1664,57481+28]..[1664,57481+30])
                                              Pexp_ident "q1" (typing/parmatch.ml[1664,57481+28]..[1664,57481+30])
                                            expression (typing/parmatch.ml[1664,57481+30]..[1664,57481+31]) ghost
                                              Pexp_construct "[]" (typing/parmatch.ml[1664,57481+30]..[1664,57481+31]) ghost
                                              None
                                          ]
                              <case>
                                pattern (typing/parmatch.ml[1665,57513+8]..[1665,57513+19])
                                  Ppat_construct "Upartial" (typing/parmatch.ml[1665,57513+8]..[1665,57513+16])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[1665,57513+17]..[1665,57513+19])
                                      Ppat_var "u2" (typing/parmatch.ml[1665,57513+17]..[1665,57513+19])
                                expression (typing/parmatch.ml[1665,57513+23]..[1665,57513+40])
                                  Pexp_construct "Upartial" (typing/parmatch.ml[1665,57513+23]..[1665,57513+31])
                                  Some
                                    expression (typing/parmatch.ml[1665,57513+32]..[1665,57513+40])
                                      Pexp_construct "::" (typing/parmatch.ml[1665,57513+35]..[1665,57513+37])
                                      Some
                                        expression (typing/parmatch.ml[1665,57513+33]..[1665,57513+39]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/parmatch.ml[1665,57513+33]..[1665,57513+35])
                                              Pexp_ident "q1" (typing/parmatch.ml[1665,57513+33]..[1665,57513+35])
                                            expression (typing/parmatch.ml[1665,57513+37]..[1665,57513+39])
                                              Pexp_ident "u2" (typing/parmatch.ml[1665,57513+37]..[1665,57513+39])
                                          ]
                            ]
                        <case>
                          pattern (typing/parmatch.ml[1667,57564+4]..[1667,57564+8])
                            Ppat_construct "Used" (typing/parmatch.ml[1667,57564+4]..[1667,57564+8])
                            None
                          expression (typing/parmatch.ml[1668,57576+6]..[1671,57655+9])
                            Pexp_match
                            expression (typing/parmatch.ml[1668,57576+18]..[1668,57576+20])
                              Pexp_ident "r2" (typing/parmatch.ml[1668,57576+18]..[1668,57576+20])
                            [
                              <case>
                                pattern (typing/parmatch.ml[1669,57602+8]..[1669,57602+14])
                                  Ppat_construct "Unused" (typing/parmatch.ml[1669,57602+8]..[1669,57602+14])
                                  None
                                expression (typing/parmatch.ml[1669,57602+18]..[1669,57602+31])
                                  Pexp_construct "Upartial" (typing/parmatch.ml[1669,57602+18]..[1669,57602+26])
                                  Some
                                    expression (typing/parmatch.ml[1669,57602+27]..[1669,57602+31])
                                      Pexp_construct "::" (typing/parmatch.ml[1669,57602+28]..[1669,57602+31]) ghost
                                      Some
                                        expression (typing/parmatch.ml[1669,57602+28]..[1669,57602+31]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/parmatch.ml[1669,57602+28]..[1669,57602+30])
                                              Pexp_ident "q2" (typing/parmatch.ml[1669,57602+28]..[1669,57602+30])
                                            expression (typing/parmatch.ml[1669,57602+30]..[1669,57602+31]) ghost
                                              Pexp_construct "[]" (typing/parmatch.ml[1669,57602+30]..[1669,57602+31]) ghost
                                              None
                                          ]
                              <case>
                                pattern (typing/parmatch.ml[1670,57634+8]..[1670,57634+9])
                                  Ppat_any
                                expression (typing/parmatch.ml[1670,57634+18]..[1670,57634+20])
                                  Pexp_ident "r2" (typing/parmatch.ml[1670,57634+18]..[1670,57634+20])
                            ]
                        <case>
                          pattern (typing/parmatch.ml[1672,57665+4]..[1672,57665+15])
                            Ppat_construct "Upartial" (typing/parmatch.ml[1672,57665+4]..[1672,57665+12])
                            Some
                              []
                              pattern (typing/parmatch.ml[1672,57665+13]..[1672,57665+15])
                                Ppat_var "u1" (typing/parmatch.ml[1672,57665+13]..[1672,57665+15])
                          expression (typing/parmatch.ml[1673,57684+6]..[1677,57810+9])
                            Pexp_match
                            expression (typing/parmatch.ml[1673,57684+18]..[1673,57684+20])
                              Pexp_ident "r2" (typing/parmatch.ml[1673,57684+18]..[1673,57684+20])
                            [
                              <case>
                                pattern (typing/parmatch.ml[1674,57710+8]..[1674,57710+14])
                                  Ppat_construct "Unused" (typing/parmatch.ml[1674,57710+8]..[1674,57710+14])
                                  None
                                expression (typing/parmatch.ml[1674,57710+18]..[1674,57710+36])
                                  Pexp_construct "Upartial" (typing/parmatch.ml[1674,57710+18]..[1674,57710+26])
                                  Some
                                    expression (typing/parmatch.ml[1674,57710+27]..[1674,57710+36])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1674,57710+30]..[1674,57710+31])
                                        Pexp_ident "@" (typing/parmatch.ml[1674,57710+30]..[1674,57710+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1674,57710+28]..[1674,57710+30])
                                            Pexp_ident "u1" (typing/parmatch.ml[1674,57710+28]..[1674,57710+30])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1674,57710+31]..[1674,57710+35])
                                            Pexp_construct "::" (typing/parmatch.ml[1674,57710+32]..[1674,57710+35]) ghost
                                            Some
                                              expression (typing/parmatch.ml[1674,57710+32]..[1674,57710+35]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (typing/parmatch.ml[1674,57710+32]..[1674,57710+34])
                                                    Pexp_ident "q2" (typing/parmatch.ml[1674,57710+32]..[1674,57710+34])
                                                  expression (typing/parmatch.ml[1674,57710+34]..[1674,57710+35]) ghost
                                                    Pexp_construct "[]" (typing/parmatch.ml[1674,57710+34]..[1674,57710+35]) ghost
                                                    None
                                                ]
                                      ]
                              <case>
                                pattern (typing/parmatch.ml[1675,57747+8]..[1675,57747+12])
                                  Ppat_construct "Used" (typing/parmatch.ml[1675,57747+8]..[1675,57747+12])
                                  None
                                expression (typing/parmatch.ml[1675,57747+18]..[1675,57747+20])
                                  Pexp_ident "r1" (typing/parmatch.ml[1675,57747+18]..[1675,57747+20])
                              <case>
                                pattern (typing/parmatch.ml[1676,57768+8]..[1676,57768+19])
                                  Ppat_construct "Upartial" (typing/parmatch.ml[1676,57768+8]..[1676,57768+16])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[1676,57768+17]..[1676,57768+19])
                                      Ppat_var "u2" (typing/parmatch.ml[1676,57768+17]..[1676,57768+19])
                                expression (typing/parmatch.ml[1676,57768+23]..[1676,57768+41])
                                  Pexp_construct "Upartial" (typing/parmatch.ml[1676,57768+23]..[1676,57768+31])
                                  Some
                                    expression (typing/parmatch.ml[1676,57768+32]..[1676,57768+41])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1676,57768+36]..[1676,57768+37])
                                        Pexp_ident "@" (typing/parmatch.ml[1676,57768+36]..[1676,57768+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1676,57768+33]..[1676,57768+35])
                                            Pexp_ident "u1" (typing/parmatch.ml[1676,57768+33]..[1676,57768+35])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1676,57768+38]..[1676,57768+40])
                                            Pexp_ident "u2" (typing/parmatch.ml[1676,57768+38]..[1676,57768+40])
                                      ]
                            ]
                      ]
    ]
  structure_item (typing/parmatch.ml[1683,57892+0]..[1709,58949+24])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[1683,57892+8]..[1683,57892+14])
          Ppat_var "le_pat" (typing/parmatch.ml[1683,57892+8]..[1683,57892+14])
        expression (typing/parmatch.ml[1683,57892+15]..[1704,58821+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1683,57892+15]..[1683,57892+16])
            Ppat_var "p" (typing/parmatch.ml[1683,57892+15]..[1683,57892+16])
          expression (typing/parmatch.ml[1683,57892+17]..[1704,58821+39]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1683,57892+17]..[1683,57892+18])
              Ppat_var "q" (typing/parmatch.ml[1683,57892+17]..[1683,57892+18])
            expression (typing/parmatch.ml[1684,57913+2]..[1704,58821+39])
              Pexp_match
              expression (typing/parmatch.ml[1684,57913+8]..[1684,57913+32])
                Pexp_tuple
                [
                  expression (typing/parmatch.ml[1684,57913+9]..[1684,57913+19])
                    Pexp_field
                    expression (typing/parmatch.ml[1684,57913+9]..[1684,57913+10])
                      Pexp_ident "p" (typing/parmatch.ml[1684,57913+9]..[1684,57913+10])
                    "pat_desc" (typing/parmatch.ml[1684,57913+11]..[1684,57913+19])
                  expression (typing/parmatch.ml[1684,57913+21]..[1684,57913+31])
                    Pexp_field
                    expression (typing/parmatch.ml[1684,57913+21]..[1684,57913+22])
                      Pexp_ident "q" (typing/parmatch.ml[1684,57913+21]..[1684,57913+22])
                    "pat_desc" (typing/parmatch.ml[1684,57913+23]..[1684,57913+31])
                ]
              [
                <case>
                  pattern (typing/parmatch.ml[1685,57951+4]..[1685,57951+27])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1685,57951+4]..[1685,57951+25])
                        Ppat_or
                        pattern (typing/parmatch.ml[1685,57951+5]..[1685,57951+15])
                          Ppat_construct "Tpat_var" (typing/parmatch.ml[1685,57951+5]..[1685,57951+13])
                          Some
                            []
                            pattern (typing/parmatch.ml[1685,57951+14]..[1685,57951+15])
                              Ppat_any
                        pattern (typing/parmatch.ml[1685,57951+16]..[1685,57951+24])
                          Ppat_construct "Tpat_any" (typing/parmatch.ml[1685,57951+16]..[1685,57951+24])
                          None
                      pattern (typing/parmatch.ml[1685,57951+26]..[1685,57951+27])
                        Ppat_any
                    ]
                  expression (typing/parmatch.ml[1685,57951+31]..[1685,57951+35])
                    Pexp_construct "true" (typing/parmatch.ml[1685,57951+31]..[1685,57951+35])
                    None
                <case>
                  pattern (typing/parmatch.ml[1686,57987+4]..[1686,57987+24])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1686,57987+4]..[1686,57987+21])
                        Ppat_construct "Tpat_alias" (typing/parmatch.ml[1686,57987+4]..[1686,57987+14])
                        Some
                          []
                          pattern (typing/parmatch.ml[1686,57987+14]..[1686,57987+21])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1686,57987+15]..[1686,57987+16])
                                Ppat_var "p" (typing/parmatch.ml[1686,57987+15]..[1686,57987+16])
                              pattern (typing/parmatch.ml[1686,57987+17]..[1686,57987+18])
                                Ppat_any
                              pattern (typing/parmatch.ml[1686,57987+19]..[1686,57987+20])
                                Ppat_any
                            ]
                      pattern (typing/parmatch.ml[1686,57987+23]..[1686,57987+24])
                        Ppat_any
                    ]
                  expression (typing/parmatch.ml[1686,57987+28]..[1686,57987+38])
                    Pexp_apply
                    expression (typing/parmatch.ml[1686,57987+28]..[1686,57987+34])
                      Pexp_ident "le_pat" (typing/parmatch.ml[1686,57987+28]..[1686,57987+34])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1686,57987+35]..[1686,57987+36])
                          Pexp_ident "p" (typing/parmatch.ml[1686,57987+35]..[1686,57987+36])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1686,57987+37]..[1686,57987+38])
                          Pexp_ident "q" (typing/parmatch.ml[1686,57987+37]..[1686,57987+38])
                    ]
                <case>
                  pattern (typing/parmatch.ml[1687,58026+4]..[1687,58026+24])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1687,58026+4]..[1687,58026+5])
                        Ppat_any
                      pattern (typing/parmatch.ml[1687,58026+7]..[1687,58026+24])
                        Ppat_construct "Tpat_alias" (typing/parmatch.ml[1687,58026+7]..[1687,58026+17])
                        Some
                          []
                          pattern (typing/parmatch.ml[1687,58026+17]..[1687,58026+24])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1687,58026+18]..[1687,58026+19])
                                Ppat_var "q" (typing/parmatch.ml[1687,58026+18]..[1687,58026+19])
                              pattern (typing/parmatch.ml[1687,58026+20]..[1687,58026+21])
                                Ppat_any
                              pattern (typing/parmatch.ml[1687,58026+22]..[1687,58026+23])
                                Ppat_any
                            ]
                    ]
                  expression (typing/parmatch.ml[1687,58026+28]..[1687,58026+38])
                    Pexp_apply
                    expression (typing/parmatch.ml[1687,58026+28]..[1687,58026+34])
                      Pexp_ident "le_pat" (typing/parmatch.ml[1687,58026+28]..[1687,58026+34])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1687,58026+35]..[1687,58026+36])
                          Pexp_ident "p" (typing/parmatch.ml[1687,58026+35]..[1687,58026+36])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1687,58026+37]..[1687,58026+38])
                          Pexp_ident "q" (typing/parmatch.ml[1687,58026+37]..[1687,58026+38])
                    ]
                <case>
                  pattern (typing/parmatch.ml[1688,58065+4]..[1688,58065+40])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1688,58065+4]..[1688,58065+21])
                        Ppat_construct "Tpat_constant" (typing/parmatch.ml[1688,58065+4]..[1688,58065+17])
                        Some
                          []
                          pattern (typing/parmatch.ml[1688,58065+17]..[1688,58065+21])
                            Ppat_var "c1" (typing/parmatch.ml[1688,58065+18]..[1688,58065+20])
                      pattern (typing/parmatch.ml[1688,58065+23]..[1688,58065+40])
                        Ppat_construct "Tpat_constant" (typing/parmatch.ml[1688,58065+23]..[1688,58065+36])
                        Some
                          []
                          pattern (typing/parmatch.ml[1688,58065+36]..[1688,58065+40])
                            Ppat_var "c2" (typing/parmatch.ml[1688,58065+37]..[1688,58065+39])
                    ]
                  expression (typing/parmatch.ml[1688,58065+44]..[1688,58065+67])
                    Pexp_apply
                    expression (typing/parmatch.ml[1688,58065+64]..[1688,58065+65])
                      Pexp_ident "=" (typing/parmatch.ml[1688,58065+64]..[1688,58065+65])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1688,58065+44]..[1688,58065+63])
                          Pexp_apply
                          expression (typing/parmatch.ml[1688,58065+44]..[1688,58065+57])
                            Pexp_ident "const_compare" (typing/parmatch.ml[1688,58065+44]..[1688,58065+57])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1688,58065+58]..[1688,58065+60])
                                Pexp_ident "c1" (typing/parmatch.ml[1688,58065+58]..[1688,58065+60])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1688,58065+61]..[1688,58065+63])
                                Pexp_ident "c2" (typing/parmatch.ml[1688,58065+61]..[1688,58065+63])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1688,58065+66]..[1688,58065+67])
                          Pexp_constant PConst_int (0,None)
                    ]
                <case>
                  pattern (typing/parmatch.ml[1689,58133+4]..[1689,58133+56])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1689,58133+4]..[1689,58133+29])
                        Ppat_construct "Tpat_construct" (typing/parmatch.ml[1689,58133+4]..[1689,58133+18])
                        Some
                          []
                          pattern (typing/parmatch.ml[1689,58133+18]..[1689,58133+29])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1689,58133+19]..[1689,58133+20])
                                Ppat_any
                              pattern (typing/parmatch.ml[1689,58133+21]..[1689,58133+23])
                                Ppat_var "c1" (typing/parmatch.ml[1689,58133+21]..[1689,58133+23])
                              pattern (typing/parmatch.ml[1689,58133+24]..[1689,58133+26])
                                Ppat_var "ps" (typing/parmatch.ml[1689,58133+24]..[1689,58133+26])
                              pattern (typing/parmatch.ml[1689,58133+27]..[1689,58133+28])
                                Ppat_any
                            ]
                      pattern (typing/parmatch.ml[1689,58133+31]..[1689,58133+56])
                        Ppat_construct "Tpat_construct" (typing/parmatch.ml[1689,58133+31]..[1689,58133+45])
                        Some
                          []
                          pattern (typing/parmatch.ml[1689,58133+45]..[1689,58133+56])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1689,58133+46]..[1689,58133+47])
                                Ppat_any
                              pattern (typing/parmatch.ml[1689,58133+48]..[1689,58133+50])
                                Ppat_var "c2" (typing/parmatch.ml[1689,58133+48]..[1689,58133+50])
                              pattern (typing/parmatch.ml[1689,58133+51]..[1689,58133+53])
                                Ppat_var "qs" (typing/parmatch.ml[1689,58133+51]..[1689,58133+53])
                              pattern (typing/parmatch.ml[1689,58133+54]..[1689,58133+55])
                                Ppat_any
                            ]
                    ]
                  expression (typing/parmatch.ml[1690,58193+6]..[1690,58193+62])
                    Pexp_apply
                    expression (typing/parmatch.ml[1690,58193+46]..[1690,58193+48])
                      Pexp_ident "&&" (typing/parmatch.ml[1690,58193+46]..[1690,58193+48])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1690,58193+6]..[1690,58193+45])
                          Pexp_apply
                          expression (typing/parmatch.ml[1690,58193+6]..[1690,58193+21])
                            Pexp_ident "Types.equal_tag" (typing/parmatch.ml[1690,58193+6]..[1690,58193+21])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1690,58193+22]..[1690,58193+33])
                                Pexp_field
                                expression (typing/parmatch.ml[1690,58193+22]..[1690,58193+24])
                                  Pexp_ident "c1" (typing/parmatch.ml[1690,58193+22]..[1690,58193+24])
                                "cstr_tag" (typing/parmatch.ml[1690,58193+25]..[1690,58193+33])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1690,58193+34]..[1690,58193+45])
                                Pexp_field
                                expression (typing/parmatch.ml[1690,58193+34]..[1690,58193+36])
                                  Pexp_ident "c2" (typing/parmatch.ml[1690,58193+34]..[1690,58193+36])
                                "cstr_tag" (typing/parmatch.ml[1690,58193+37]..[1690,58193+45])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1690,58193+49]..[1690,58193+62])
                          Pexp_apply
                          expression (typing/parmatch.ml[1690,58193+49]..[1690,58193+56])
                            Pexp_ident "le_pats" (typing/parmatch.ml[1690,58193+49]..[1690,58193+56])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1690,58193+57]..[1690,58193+59])
                                Pexp_ident "ps" (typing/parmatch.ml[1690,58193+57]..[1690,58193+59])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1690,58193+60]..[1690,58193+62])
                                Pexp_ident "qs" (typing/parmatch.ml[1690,58193+60]..[1690,58193+62])
                          ]
                    ]
                <case>
                  pattern (typing/parmatch.ml[1691,58256+4]..[1691,58256+58])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1691,58256+4]..[1691,58256+30])
                        Ppat_construct "Tpat_variant" (typing/parmatch.ml[1691,58256+4]..[1691,58256+16])
                        Some
                          []
                          pattern (typing/parmatch.ml[1691,58256+16]..[1691,58256+30])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1691,58256+17]..[1691,58256+19])
                                Ppat_var "l1" (typing/parmatch.ml[1691,58256+17]..[1691,58256+19])
                              pattern (typing/parmatch.ml[1691,58256+20]..[1691,58256+27])
                                Ppat_construct "Some" (typing/parmatch.ml[1691,58256+20]..[1691,58256+24])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[1691,58256+25]..[1691,58256+27])
                                    Ppat_var "p1" (typing/parmatch.ml[1691,58256+25]..[1691,58256+27])
                              pattern (typing/parmatch.ml[1691,58256+28]..[1691,58256+29])
                                Ppat_any
                            ]
                      pattern (typing/parmatch.ml[1691,58256+32]..[1691,58256+58])
                        Ppat_construct "Tpat_variant" (typing/parmatch.ml[1691,58256+32]..[1691,58256+44])
                        Some
                          []
                          pattern (typing/parmatch.ml[1691,58256+44]..[1691,58256+58])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1691,58256+45]..[1691,58256+47])
                                Ppat_var "l2" (typing/parmatch.ml[1691,58256+45]..[1691,58256+47])
                              pattern (typing/parmatch.ml[1691,58256+48]..[1691,58256+55])
                                Ppat_construct "Some" (typing/parmatch.ml[1691,58256+48]..[1691,58256+52])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[1691,58256+53]..[1691,58256+55])
                                    Ppat_var "p2" (typing/parmatch.ml[1691,58256+53]..[1691,58256+55])
                              pattern (typing/parmatch.ml[1691,58256+56]..[1691,58256+57])
                                Ppat_any
                            ]
                    ]
                  expression (typing/parmatch.ml[1692,58318+6]..[1692,58318+31])
                    Pexp_apply
                    expression (typing/parmatch.ml[1692,58318+15]..[1692,58318+17])
                      Pexp_ident "&&" (typing/parmatch.ml[1692,58318+15]..[1692,58318+17])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1692,58318+7]..[1692,58318+14])
                          Pexp_apply
                          expression (typing/parmatch.ml[1692,58318+10]..[1692,58318+11])
                            Pexp_ident "=" (typing/parmatch.ml[1692,58318+10]..[1692,58318+11])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1692,58318+7]..[1692,58318+9])
                                Pexp_ident "l1" (typing/parmatch.ml[1692,58318+7]..[1692,58318+9])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1692,58318+12]..[1692,58318+14])
                                Pexp_ident "l2" (typing/parmatch.ml[1692,58318+12]..[1692,58318+14])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1692,58318+18]..[1692,58318+30])
                          Pexp_apply
                          expression (typing/parmatch.ml[1692,58318+18]..[1692,58318+24])
                            Pexp_ident "le_pat" (typing/parmatch.ml[1692,58318+18]..[1692,58318+24])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1692,58318+25]..[1692,58318+27])
                                Pexp_ident "p1" (typing/parmatch.ml[1692,58318+25]..[1692,58318+27])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1692,58318+28]..[1692,58318+30])
                                Pexp_ident "p2" (typing/parmatch.ml[1692,58318+28]..[1692,58318+30])
                          ]
                    ]
                <case>
                  pattern (typing/parmatch.ml[1693,58350+4]..[1693,58350+54])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1693,58350+4]..[1693,58350+29])
                        Ppat_construct "Tpat_variant" (typing/parmatch.ml[1693,58350+4]..[1693,58350+16])
                        Some
                          []
                          pattern (typing/parmatch.ml[1693,58350+16]..[1693,58350+29])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1693,58350+17]..[1693,58350+19])
                                Ppat_var "l1" (typing/parmatch.ml[1693,58350+17]..[1693,58350+19])
                              pattern (typing/parmatch.ml[1693,58350+20]..[1693,58350+24])
                                Ppat_construct "None" (typing/parmatch.ml[1693,58350+20]..[1693,58350+24])
                                None
                              pattern (typing/parmatch.ml[1693,58350+25]..[1693,58350+28])
                                Ppat_var "_r1" (typing/parmatch.ml[1693,58350+25]..[1693,58350+28])
                            ]
                      pattern (typing/parmatch.ml[1693,58350+31]..[1693,58350+54])
                        Ppat_construct "Tpat_variant" (typing/parmatch.ml[1693,58350+31]..[1693,58350+43])
                        Some
                          []
                          pattern (typing/parmatch.ml[1693,58350+43]..[1693,58350+54])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1693,58350+44]..[1693,58350+46])
                                Ppat_var "l2" (typing/parmatch.ml[1693,58350+44]..[1693,58350+46])
                              pattern (typing/parmatch.ml[1693,58350+47]..[1693,58350+51])
                                Ppat_construct "None" (typing/parmatch.ml[1693,58350+47]..[1693,58350+51])
                                None
                              pattern (typing/parmatch.ml[1693,58350+52]..[1693,58350+53])
                                Ppat_any
                            ]
                    ]
                  expression (typing/parmatch.ml[1694,58408+6]..[1694,58408+13])
                    Pexp_apply
                    expression (typing/parmatch.ml[1694,58408+9]..[1694,58408+10])
                      Pexp_ident "=" (typing/parmatch.ml[1694,58408+9]..[1694,58408+10])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1694,58408+6]..[1694,58408+8])
                          Pexp_ident "l1" (typing/parmatch.ml[1694,58408+6]..[1694,58408+8])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1694,58408+11]..[1694,58408+13])
                          Pexp_ident "l2" (typing/parmatch.ml[1694,58408+11]..[1694,58408+13])
                    ]
                <case>
                  pattern (typing/parmatch.ml[1695,58422+4]..[1695,58422+44])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1695,58422+4]..[1695,58422+23])
                        Ppat_construct "Tpat_variant" (typing/parmatch.ml[1695,58422+4]..[1695,58422+16])
                        Some
                          []
                          pattern (typing/parmatch.ml[1695,58422+16]..[1695,58422+23])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1695,58422+17]..[1695,58422+18])
                                Ppat_any
                              pattern (typing/parmatch.ml[1695,58422+19]..[1695,58422+20])
                                Ppat_any
                              pattern (typing/parmatch.ml[1695,58422+21]..[1695,58422+22])
                                Ppat_any
                            ]
                      pattern (typing/parmatch.ml[1695,58422+25]..[1695,58422+44])
                        Ppat_construct "Tpat_variant" (typing/parmatch.ml[1695,58422+25]..[1695,58422+37])
                        Some
                          []
                          pattern (typing/parmatch.ml[1695,58422+37]..[1695,58422+44])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1695,58422+38]..[1695,58422+39])
                                Ppat_any
                              pattern (typing/parmatch.ml[1695,58422+40]..[1695,58422+41])
                                Ppat_any
                              pattern (typing/parmatch.ml[1695,58422+42]..[1695,58422+43])
                                Ppat_any
                            ]
                    ]
                  expression (typing/parmatch.ml[1695,58422+48]..[1695,58422+53])
                    Pexp_construct "false" (typing/parmatch.ml[1695,58422+48]..[1695,58422+53])
                    None
                <case>
                  pattern (typing/parmatch.ml[1696,58476+4]..[1696,58476+34])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1696,58476+4]..[1696,58476+18])
                        Ppat_construct "Tpat_tuple" (typing/parmatch.ml[1696,58476+4]..[1696,58476+14])
                        Some
                          []
                          pattern (typing/parmatch.ml[1696,58476+14]..[1696,58476+18])
                            Ppat_var "ps" (typing/parmatch.ml[1696,58476+15]..[1696,58476+17])
                      pattern (typing/parmatch.ml[1696,58476+20]..[1696,58476+34])
                        Ppat_construct "Tpat_tuple" (typing/parmatch.ml[1696,58476+20]..[1696,58476+30])
                        Some
                          []
                          pattern (typing/parmatch.ml[1696,58476+30]..[1696,58476+34])
                            Ppat_var "qs" (typing/parmatch.ml[1696,58476+31]..[1696,58476+33])
                    ]
                  expression (typing/parmatch.ml[1696,58476+38]..[1696,58476+51])
                    Pexp_apply
                    expression (typing/parmatch.ml[1696,58476+38]..[1696,58476+45])
                      Pexp_ident "le_pats" (typing/parmatch.ml[1696,58476+38]..[1696,58476+45])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1696,58476+46]..[1696,58476+48])
                          Pexp_ident "ps" (typing/parmatch.ml[1696,58476+46]..[1696,58476+48])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1696,58476+49]..[1696,58476+51])
                          Pexp_ident "qs" (typing/parmatch.ml[1696,58476+49]..[1696,58476+51])
                    ]
                <case>
                  pattern (typing/parmatch.ml[1697,58528+4]..[1697,58528+28])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1697,58528+4]..[1697,58528+15])
                        Ppat_construct "Tpat_lazy" (typing/parmatch.ml[1697,58528+4]..[1697,58528+13])
                        Some
                          []
                          pattern (typing/parmatch.ml[1697,58528+14]..[1697,58528+15])
                            Ppat_var "p" (typing/parmatch.ml[1697,58528+14]..[1697,58528+15])
                      pattern (typing/parmatch.ml[1697,58528+17]..[1697,58528+28])
                        Ppat_construct "Tpat_lazy" (typing/parmatch.ml[1697,58528+17]..[1697,58528+26])
                        Some
                          []
                          pattern (typing/parmatch.ml[1697,58528+27]..[1697,58528+28])
                            Ppat_var "q" (typing/parmatch.ml[1697,58528+27]..[1697,58528+28])
                    ]
                  expression (typing/parmatch.ml[1697,58528+32]..[1697,58528+42])
                    Pexp_apply
                    expression (typing/parmatch.ml[1697,58528+32]..[1697,58528+38])
                      Pexp_ident "le_pat" (typing/parmatch.ml[1697,58528+32]..[1697,58528+38])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1697,58528+39]..[1697,58528+40])
                          Pexp_ident "p" (typing/parmatch.ml[1697,58528+39]..[1697,58528+40])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1697,58528+41]..[1697,58528+42])
                          Pexp_ident "q" (typing/parmatch.ml[1697,58528+41]..[1697,58528+42])
                    ]
                <case>
                  pattern (typing/parmatch.ml[1698,58571+4]..[1698,58571+42])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1698,58571+4]..[1698,58571+22])
                        Ppat_construct "Tpat_record" (typing/parmatch.ml[1698,58571+4]..[1698,58571+15])
                        Some
                          []
                          pattern (typing/parmatch.ml[1698,58571+16]..[1698,58571+22])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1698,58571+17]..[1698,58571+19])
                                Ppat_var "l1" (typing/parmatch.ml[1698,58571+17]..[1698,58571+19])
                              pattern (typing/parmatch.ml[1698,58571+20]..[1698,58571+21])
                                Ppat_any
                            ]
                      pattern (typing/parmatch.ml[1698,58571+24]..[1698,58571+42])
                        Ppat_construct "Tpat_record" (typing/parmatch.ml[1698,58571+24]..[1698,58571+35])
                        Some
                          []
                          pattern (typing/parmatch.ml[1698,58571+36]..[1698,58571+42])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1698,58571+37]..[1698,58571+39])
                                Ppat_var "l2" (typing/parmatch.ml[1698,58571+37]..[1698,58571+39])
                              pattern (typing/parmatch.ml[1698,58571+40]..[1698,58571+41])
                                Ppat_any
                            ]
                    ]
                  expression (typing/parmatch.ml[1699,58617+6]..[1700,58657+19])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[1699,58617+10]..[1699,58617+15])
                          Ppat_tuple
                          [
                            pattern (typing/parmatch.ml[1699,58617+10]..[1699,58617+12])
                              Ppat_var "ps" (typing/parmatch.ml[1699,58617+10]..[1699,58617+12])
                            pattern (typing/parmatch.ml[1699,58617+13]..[1699,58617+15])
                              Ppat_var "qs" (typing/parmatch.ml[1699,58617+13]..[1699,58617+15])
                          ]
                        expression (typing/parmatch.ml[1699,58617+18]..[1699,58617+36])
                          Pexp_apply
                          expression (typing/parmatch.ml[1699,58617+18]..[1699,58617+30])
                            Pexp_ident "records_args" (typing/parmatch.ml[1699,58617+18]..[1699,58617+30])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1699,58617+31]..[1699,58617+33])
                                Pexp_ident "l1" (typing/parmatch.ml[1699,58617+31]..[1699,58617+33])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1699,58617+34]..[1699,58617+36])
                                Pexp_ident "l2" (typing/parmatch.ml[1699,58617+34]..[1699,58617+36])
                          ]
                    ]
                    expression (typing/parmatch.ml[1700,58657+6]..[1700,58657+19])
                      Pexp_apply
                      expression (typing/parmatch.ml[1700,58657+6]..[1700,58657+13])
                        Pexp_ident "le_pats" (typing/parmatch.ml[1700,58657+6]..[1700,58657+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1700,58657+14]..[1700,58657+16])
                            Pexp_ident "ps" (typing/parmatch.ml[1700,58657+14]..[1700,58657+16])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1700,58657+17]..[1700,58657+19])
                            Pexp_ident "qs" (typing/parmatch.ml[1700,58657+17]..[1700,58657+19])
                      ]
                <case>
                  pattern (typing/parmatch.ml[1701,58677+4]..[1701,58677+34])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1701,58677+4]..[1701,58677+18])
                        Ppat_construct "Tpat_array" (typing/parmatch.ml[1701,58677+4]..[1701,58677+14])
                        Some
                          []
                          pattern (typing/parmatch.ml[1701,58677+14]..[1701,58677+18])
                            Ppat_var "ps" (typing/parmatch.ml[1701,58677+15]..[1701,58677+17])
                      pattern (typing/parmatch.ml[1701,58677+20]..[1701,58677+34])
                        Ppat_construct "Tpat_array" (typing/parmatch.ml[1701,58677+20]..[1701,58677+30])
                        Some
                          []
                          pattern (typing/parmatch.ml[1701,58677+30]..[1701,58677+34])
                            Ppat_var "qs" (typing/parmatch.ml[1701,58677+31]..[1701,58677+33])
                    ]
                  expression (typing/parmatch.ml[1702,58715+6]..[1702,58715+54])
                    Pexp_apply
                    expression (typing/parmatch.ml[1702,58715+38]..[1702,58715+40])
                      Pexp_ident "&&" (typing/parmatch.ml[1702,58715+38]..[1702,58715+40])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1702,58715+6]..[1702,58715+37])
                          Pexp_apply
                          expression (typing/parmatch.ml[1702,58715+21]..[1702,58715+22])
                            Pexp_ident "=" (typing/parmatch.ml[1702,58715+21]..[1702,58715+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1702,58715+6]..[1702,58715+20])
                                Pexp_apply
                                expression (typing/parmatch.ml[1702,58715+6]..[1702,58715+17])
                                  Pexp_ident "List.length" (typing/parmatch.ml[1702,58715+6]..[1702,58715+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1702,58715+18]..[1702,58715+20])
                                      Pexp_ident "ps" (typing/parmatch.ml[1702,58715+18]..[1702,58715+20])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1702,58715+23]..[1702,58715+37])
                                Pexp_apply
                                expression (typing/parmatch.ml[1702,58715+23]..[1702,58715+34])
                                  Pexp_ident "List.length" (typing/parmatch.ml[1702,58715+23]..[1702,58715+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1702,58715+35]..[1702,58715+37])
                                      Pexp_ident "qs" (typing/parmatch.ml[1702,58715+35]..[1702,58715+37])
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1702,58715+41]..[1702,58715+54])
                          Pexp_apply
                          expression (typing/parmatch.ml[1702,58715+41]..[1702,58715+48])
                            Pexp_ident "le_pats" (typing/parmatch.ml[1702,58715+41]..[1702,58715+48])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1702,58715+49]..[1702,58715+51])
                                Pexp_ident "ps" (typing/parmatch.ml[1702,58715+49]..[1702,58715+51])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1702,58715+52]..[1702,58715+54])
                                Pexp_ident "qs" (typing/parmatch.ml[1702,58715+52]..[1702,58715+54])
                          ]
                    ]
                <case>
                  pattern (typing/parmatch.ml[1704,58821+4]..[1704,58821+7])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1704,58821+4]..[1704,58821+5])
                        Ppat_any
                      pattern (typing/parmatch.ml[1704,58821+6]..[1704,58821+7])
                        Ppat_any
                    ]
                  expression (typing/parmatch.ml[1704,58821+12]..[1704,58821+39])
                    Pexp_apply
                    expression (typing/parmatch.ml[1704,58821+12]..[1704,58821+15])
                      Pexp_ident "not" (typing/parmatch.ml[1704,58821+12]..[1704,58821+15])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1704,58821+16]..[1704,58821+39])
                          Pexp_apply
                          expression (typing/parmatch.ml[1704,58821+17]..[1704,58821+28])
                            Pexp_ident "satisfiable" (typing/parmatch.ml[1704,58821+17]..[1704,58821+28])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1704,58821+29]..[1704,58821+34])
                                Pexp_construct "::" (typing/parmatch.ml[1704,58821+30]..[1704,58821+34]) ghost
                                Some
                                  expression (typing/parmatch.ml[1704,58821+30]..[1704,58821+34]) ghost
                                    Pexp_tuple
                                    [
                                      expression (typing/parmatch.ml[1704,58821+30]..[1704,58821+33])
                                        Pexp_construct "::" (typing/parmatch.ml[1704,58821+31]..[1704,58821+33]) ghost
                                        Some
                                          expression (typing/parmatch.ml[1704,58821+31]..[1704,58821+33]) ghost
                                            Pexp_tuple
                                            [
                                              expression (typing/parmatch.ml[1704,58821+31]..[1704,58821+32])
                                                Pexp_ident "p" (typing/parmatch.ml[1704,58821+31]..[1704,58821+32])
                                              expression (typing/parmatch.ml[1704,58821+32]..[1704,58821+33]) ghost
                                                Pexp_construct "[]" (typing/parmatch.ml[1704,58821+32]..[1704,58821+33]) ghost
                                                None
                                            ]
                                      expression (typing/parmatch.ml[1704,58821+33]..[1704,58821+34]) ghost
                                        Pexp_construct "[]" (typing/parmatch.ml[1704,58821+33]..[1704,58821+34]) ghost
                                        None
                                    ]
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1704,58821+35]..[1704,58821+38])
                                Pexp_construct "::" (typing/parmatch.ml[1704,58821+36]..[1704,58821+38]) ghost
                                Some
                                  expression (typing/parmatch.ml[1704,58821+36]..[1704,58821+38]) ghost
                                    Pexp_tuple
                                    [
                                      expression (typing/parmatch.ml[1704,58821+36]..[1704,58821+37])
                                        Pexp_ident "q" (typing/parmatch.ml[1704,58821+36]..[1704,58821+37])
                                      expression (typing/parmatch.ml[1704,58821+37]..[1704,58821+38]) ghost
                                        Pexp_construct "[]" (typing/parmatch.ml[1704,58821+37]..[1704,58821+38]) ghost
                                        None
                                    ]
                          ]
                    ]
              ]
      <def>
        pattern (typing/parmatch.ml[1706,58862+4]..[1706,58862+11])
          Ppat_var "le_pats" (typing/parmatch.ml[1706,58862+4]..[1706,58862+11])
        expression (typing/parmatch.ml[1706,58862+12]..[1709,58949+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1706,58862+12]..[1706,58862+14])
            Ppat_var "ps" (typing/parmatch.ml[1706,58862+12]..[1706,58862+14])
          expression (typing/parmatch.ml[1706,58862+15]..[1709,58949+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1706,58862+15]..[1706,58862+17])
              Ppat_var "qs" (typing/parmatch.ml[1706,58862+15]..[1706,58862+17])
            expression (typing/parmatch.ml[1707,58882+2]..[1709,58949+24])
              Pexp_match
              expression (typing/parmatch.ml[1707,58882+8]..[1707,58882+13])
                Pexp_tuple
                [
                  expression (typing/parmatch.ml[1707,58882+8]..[1707,58882+10])
                    Pexp_ident "ps" (typing/parmatch.ml[1707,58882+8]..[1707,58882+10])
                  expression (typing/parmatch.ml[1707,58882+11]..[1707,58882+13])
                    Pexp_ident "qs" (typing/parmatch.ml[1707,58882+11]..[1707,58882+13])
                ]
              [
                <case>
                  pattern (typing/parmatch.ml[1708,58901+4]..[1708,58901+16])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1708,58901+4]..[1708,58901+9])
                        Ppat_construct "::" (typing/parmatch.ml[1708,58901+5]..[1708,58901+7])
                        Some
                          []
                          pattern (typing/parmatch.ml[1708,58901+4]..[1708,58901+9]) ghost
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1708,58901+4]..[1708,58901+5])
                                Ppat_var "p" (typing/parmatch.ml[1708,58901+4]..[1708,58901+5])
                              pattern (typing/parmatch.ml[1708,58901+7]..[1708,58901+9])
                                Ppat_var "ps" (typing/parmatch.ml[1708,58901+7]..[1708,58901+9])
                            ]
                      pattern (typing/parmatch.ml[1708,58901+11]..[1708,58901+16])
                        Ppat_construct "::" (typing/parmatch.ml[1708,58901+12]..[1708,58901+14])
                        Some
                          []
                          pattern (typing/parmatch.ml[1708,58901+11]..[1708,58901+16]) ghost
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1708,58901+11]..[1708,58901+12])
                                Ppat_var "q" (typing/parmatch.ml[1708,58901+11]..[1708,58901+12])
                              pattern (typing/parmatch.ml[1708,58901+14]..[1708,58901+16])
                                Ppat_var "qs" (typing/parmatch.ml[1708,58901+14]..[1708,58901+16])
                            ]
                    ]
                  expression (typing/parmatch.ml[1708,58901+20]..[1708,58901+47])
                    Pexp_apply
                    expression (typing/parmatch.ml[1708,58901+31]..[1708,58901+33])
                      Pexp_ident "&&" (typing/parmatch.ml[1708,58901+31]..[1708,58901+33])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1708,58901+20]..[1708,58901+30])
                          Pexp_apply
                          expression (typing/parmatch.ml[1708,58901+20]..[1708,58901+26])
                            Pexp_ident "le_pat" (typing/parmatch.ml[1708,58901+20]..[1708,58901+26])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1708,58901+27]..[1708,58901+28])
                                Pexp_ident "p" (typing/parmatch.ml[1708,58901+27]..[1708,58901+28])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1708,58901+29]..[1708,58901+30])
                                Pexp_ident "q" (typing/parmatch.ml[1708,58901+29]..[1708,58901+30])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1708,58901+34]..[1708,58901+47])
                          Pexp_apply
                          expression (typing/parmatch.ml[1708,58901+34]..[1708,58901+41])
                            Pexp_ident "le_pats" (typing/parmatch.ml[1708,58901+34]..[1708,58901+41])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1708,58901+42]..[1708,58901+44])
                                Pexp_ident "ps" (typing/parmatch.ml[1708,58901+42]..[1708,58901+44])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1708,58901+45]..[1708,58901+47])
                                Pexp_ident "qs" (typing/parmatch.ml[1708,58901+45]..[1708,58901+47])
                          ]
                    ]
                <case>
                  pattern (typing/parmatch.ml[1709,58949+4]..[1709,58949+8])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1709,58949+4]..[1709,58949+5])
                        Ppat_any
                      pattern (typing/parmatch.ml[1709,58949+7]..[1709,58949+8])
                        Ppat_any
                    ]
                  expression (typing/parmatch.ml[1709,58949+20]..[1709,58949+24])
                    Pexp_construct "true" (typing/parmatch.ml[1709,58949+20]..[1709,58949+24])
                    None
              ]
    ]
  structure_item (typing/parmatch.ml[1711,58975+0]..[1718,59171+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1711,58975+4]..[1711,58975+12])
          Ppat_var "get_mins" (typing/parmatch.ml[1711,58975+4]..[1711,58975+12])
        expression (typing/parmatch.ml[1711,58975+13]..[1718,59171+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1711,58975+13]..[1711,58975+15])
            Ppat_var "le" (typing/parmatch.ml[1711,58975+13]..[1711,58975+15])
          expression (typing/parmatch.ml[1711,58975+16]..[1718,59171+34]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1711,58975+16]..[1711,58975+18])
              Ppat_var "ps" (typing/parmatch.ml[1711,58975+16]..[1711,58975+18])
            expression (typing/parmatch.ml[1712,58996+2]..[1718,59171+34])
              Pexp_let Rec
              [
                <def>
                  pattern (typing/parmatch.ml[1712,58996+10]..[1712,58996+20])
                    Ppat_var "select_rec" (typing/parmatch.ml[1712,58996+10]..[1712,58996+20])
                  expression (typing/parmatch.ml[1712,58996+21]..[1717,59134+33]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/parmatch.ml[1712,58996+21]..[1712,58996+22])
                      Ppat_var "r" (typing/parmatch.ml[1712,58996+21]..[1712,58996+22])
                    expression (typing/parmatch.ml[1712,58996+25]..[1717,59134+33])
                      Pexp_function
                      [
                        <case>
                          pattern (typing/parmatch.ml[1713,59030+6]..[1713,59030+8])
                            Ppat_construct "[]" (typing/parmatch.ml[1713,59030+6]..[1713,59030+8])
                            None
                          expression (typing/parmatch.ml[1713,59030+12]..[1713,59030+13])
                            Pexp_ident "r" (typing/parmatch.ml[1713,59030+12]..[1713,59030+13])
                        <case>
                          pattern (typing/parmatch.ml[1714,59044+6]..[1714,59044+11])
                            Ppat_construct "::" (typing/parmatch.ml[1714,59044+7]..[1714,59044+9])
                            Some
                              []
                              pattern (typing/parmatch.ml[1714,59044+6]..[1714,59044+11]) ghost
                                Ppat_tuple
                                [
                                  pattern (typing/parmatch.ml[1714,59044+6]..[1714,59044+7])
                                    Ppat_var "p" (typing/parmatch.ml[1714,59044+6]..[1714,59044+7])
                                  pattern (typing/parmatch.ml[1714,59044+9]..[1714,59044+11])
                                    Ppat_var "ps" (typing/parmatch.ml[1714,59044+9]..[1714,59044+11])
                                ]
                          expression (typing/parmatch.ml[1715,59059+8]..[1717,59134+33])
                            Pexp_ifthenelse
                            expression (typing/parmatch.ml[1715,59059+11]..[1715,59059+45])
                              Pexp_apply
                              expression (typing/parmatch.ml[1715,59059+11]..[1715,59059+22])
                                Pexp_ident "List.exists" (typing/parmatch.ml[1715,59059+11]..[1715,59059+22])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1715,59059+23]..[1715,59059+42])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/parmatch.ml[1715,59059+28]..[1715,59059+30])
                                      Ppat_var "p0" (typing/parmatch.ml[1715,59059+28]..[1715,59059+30])
                                    expression (typing/parmatch.ml[1715,59059+34]..[1715,59059+41])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1715,59059+34]..[1715,59059+36])
                                        Pexp_ident "le" (typing/parmatch.ml[1715,59059+34]..[1715,59059+36])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1715,59059+37]..[1715,59059+39])
                                            Pexp_ident "p0" (typing/parmatch.ml[1715,59059+37]..[1715,59059+39])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1715,59059+40]..[1715,59059+41])
                                            Pexp_ident "p" (typing/parmatch.ml[1715,59059+40]..[1715,59059+41])
                                      ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1715,59059+43]..[1715,59059+45])
                                    Pexp_ident "ps" (typing/parmatch.ml[1715,59059+43]..[1715,59059+45])
                              ]
                            expression (typing/parmatch.ml[1716,59105+13]..[1716,59105+28])
                              Pexp_apply
                              expression (typing/parmatch.ml[1716,59105+13]..[1716,59105+23])
                                Pexp_ident "select_rec" (typing/parmatch.ml[1716,59105+13]..[1716,59105+23])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1716,59105+24]..[1716,59105+25])
                                    Pexp_ident "r" (typing/parmatch.ml[1716,59105+24]..[1716,59105+25])
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1716,59105+26]..[1716,59105+28])
                                    Pexp_ident "ps" (typing/parmatch.ml[1716,59105+26]..[1716,59105+28])
                              ]
                            Some
                              expression (typing/parmatch.ml[1717,59134+13]..[1717,59134+33])
                                Pexp_apply
                                expression (typing/parmatch.ml[1717,59134+13]..[1717,59134+23])
                                  Pexp_ident "select_rec" (typing/parmatch.ml[1717,59134+13]..[1717,59134+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1717,59134+24]..[1717,59134+30])
                                      Pexp_construct "::" (typing/parmatch.ml[1717,59134+26]..[1717,59134+28])
                                      Some
                                        expression (typing/parmatch.ml[1717,59134+25]..[1717,59134+29]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/parmatch.ml[1717,59134+25]..[1717,59134+26])
                                              Pexp_ident "p" (typing/parmatch.ml[1717,59134+25]..[1717,59134+26])
                                            expression (typing/parmatch.ml[1717,59134+28]..[1717,59134+29])
                                              Pexp_ident "r" (typing/parmatch.ml[1717,59134+28]..[1717,59134+29])
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1717,59134+31]..[1717,59134+33])
                                      Pexp_ident "ps" (typing/parmatch.ml[1717,59134+31]..[1717,59134+33])
                                ]
                      ]
              ]
              expression (typing/parmatch.ml[1718,59171+2]..[1718,59171+34])
                Pexp_apply
                expression (typing/parmatch.ml[1718,59171+2]..[1718,59171+12])
                  Pexp_ident "select_rec" (typing/parmatch.ml[1718,59171+2]..[1718,59171+12])
                [
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[1718,59171+13]..[1718,59171+15])
                      Pexp_construct "[]" (typing/parmatch.ml[1718,59171+13]..[1718,59171+15])
                      None
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[1718,59171+16]..[1718,59171+34])
                      Pexp_apply
                      expression (typing/parmatch.ml[1718,59171+17]..[1718,59171+27])
                        Pexp_ident "select_rec" (typing/parmatch.ml[1718,59171+17]..[1718,59171+27])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1718,59171+28]..[1718,59171+30])
                            Pexp_construct "[]" (typing/parmatch.ml[1718,59171+28]..[1718,59171+30])
                            None
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1718,59171+31]..[1718,59171+33])
                            Pexp_ident "ps" (typing/parmatch.ml[1718,59171+31]..[1718,59171+33])
                      ]
                ]
    ]
  structure_item (typing/parmatch.ml[1725,59331+0]..[1785,61407+11])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[1725,59331+8]..[1725,59331+11])
          Ppat_var "lub" (typing/parmatch.ml[1725,59331+8]..[1725,59331+11])
        expression (typing/parmatch.ml[1725,59331+12]..[1758,60753+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1725,59331+12]..[1725,59331+13])
            Ppat_var "p" (typing/parmatch.ml[1725,59331+12]..[1725,59331+13])
          expression (typing/parmatch.ml[1725,59331+14]..[1758,60753+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1725,59331+14]..[1725,59331+15])
              Ppat_var "q" (typing/parmatch.ml[1725,59331+14]..[1725,59331+15])
            expression (typing/parmatch.ml[1725,59331+18]..[1758,60753+15])
              Pexp_match
              expression (typing/parmatch.ml[1725,59331+24]..[1725,59331+45])
                Pexp_tuple
                [
                  expression (typing/parmatch.ml[1725,59331+24]..[1725,59331+34])
                    Pexp_field
                    expression (typing/parmatch.ml[1725,59331+24]..[1725,59331+25])
                      Pexp_ident "p" (typing/parmatch.ml[1725,59331+24]..[1725,59331+25])
                    "pat_desc" (typing/parmatch.ml[1725,59331+26]..[1725,59331+34])
                  expression (typing/parmatch.ml[1725,59331+35]..[1725,59331+45])
                    Pexp_field
                    expression (typing/parmatch.ml[1725,59331+35]..[1725,59331+36])
                      Pexp_ident "q" (typing/parmatch.ml[1725,59331+35]..[1725,59331+36])
                    "pat_desc" (typing/parmatch.ml[1725,59331+37]..[1725,59331+45])
                ]
              [
                <case>
                  pattern (typing/parmatch.ml[1726,59382+2]..[1726,59382+22])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1726,59382+2]..[1726,59382+20])
                        Ppat_construct "Tpat_alias" (typing/parmatch.ml[1726,59382+2]..[1726,59382+12])
                        Some
                          []
                          pattern (typing/parmatch.ml[1726,59382+13]..[1726,59382+20])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1726,59382+14]..[1726,59382+15])
                                Ppat_var "p" (typing/parmatch.ml[1726,59382+14]..[1726,59382+15])
                              pattern (typing/parmatch.ml[1726,59382+16]..[1726,59382+17])
                                Ppat_any
                              pattern (typing/parmatch.ml[1726,59382+18]..[1726,59382+19])
                                Ppat_any
                            ]
                      pattern (typing/parmatch.ml[1726,59382+21]..[1726,59382+22])
                        Ppat_any
                    ]
                  expression (typing/parmatch.ml[1726,59382+31]..[1726,59382+38])
                    Pexp_apply
                    expression (typing/parmatch.ml[1726,59382+31]..[1726,59382+34])
                      Pexp_ident "lub" (typing/parmatch.ml[1726,59382+31]..[1726,59382+34])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1726,59382+35]..[1726,59382+36])
                          Pexp_ident "p" (typing/parmatch.ml[1726,59382+35]..[1726,59382+36])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1726,59382+37]..[1726,59382+38])
                          Pexp_ident "q" (typing/parmatch.ml[1726,59382+37]..[1726,59382+38])
                    ]
                <case>
                  pattern (typing/parmatch.ml[1727,59421+2]..[1727,59421+22])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1727,59421+2]..[1727,59421+3])
                        Ppat_any
                      pattern (typing/parmatch.ml[1727,59421+4]..[1727,59421+22])
                        Ppat_construct "Tpat_alias" (typing/parmatch.ml[1727,59421+4]..[1727,59421+14])
                        Some
                          []
                          pattern (typing/parmatch.ml[1727,59421+15]..[1727,59421+22])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1727,59421+16]..[1727,59421+17])
                                Ppat_var "q" (typing/parmatch.ml[1727,59421+16]..[1727,59421+17])
                              pattern (typing/parmatch.ml[1727,59421+18]..[1727,59421+19])
                                Ppat_any
                              pattern (typing/parmatch.ml[1727,59421+20]..[1727,59421+21])
                                Ppat_any
                            ]
                    ]
                  expression (typing/parmatch.ml[1727,59421+31]..[1727,59421+38])
                    Pexp_apply
                    expression (typing/parmatch.ml[1727,59421+31]..[1727,59421+34])
                      Pexp_ident "lub" (typing/parmatch.ml[1727,59421+31]..[1727,59421+34])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1727,59421+35]..[1727,59421+36])
                          Pexp_ident "p" (typing/parmatch.ml[1727,59421+35]..[1727,59421+36])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1727,59421+37]..[1727,59421+38])
                          Pexp_ident "q" (typing/parmatch.ml[1727,59421+37]..[1727,59421+38])
                    ]
                <case>
                  pattern (typing/parmatch.ml[1728,59460+2]..[1728,59460+25])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1728,59460+2]..[1728,59460+23])
                        Ppat_or
                        pattern (typing/parmatch.ml[1728,59460+3]..[1728,59460+11])
                          Ppat_construct "Tpat_any" (typing/parmatch.ml[1728,59460+3]..[1728,59460+11])
                          None
                        pattern (typing/parmatch.ml[1728,59460+12]..[1728,59460+22])
                          Ppat_construct "Tpat_var" (typing/parmatch.ml[1728,59460+12]..[1728,59460+20])
                          Some
                            []
                            pattern (typing/parmatch.ml[1728,59460+21]..[1728,59460+22])
                              Ppat_any
                      pattern (typing/parmatch.ml[1728,59460+24]..[1728,59460+25])
                        Ppat_any
                    ]
                  expression (typing/parmatch.ml[1728,59460+29]..[1728,59460+30])
                    Pexp_ident "q" (typing/parmatch.ml[1728,59460+29]..[1728,59460+30])
                <case>
                  pattern (typing/parmatch.ml[1729,59491+2]..[1729,59491+25])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1729,59491+2]..[1729,59491+3])
                        Ppat_any
                      pattern (typing/parmatch.ml[1729,59491+4]..[1729,59491+25])
                        Ppat_or
                        pattern (typing/parmatch.ml[1729,59491+5]..[1729,59491+13])
                          Ppat_construct "Tpat_any" (typing/parmatch.ml[1729,59491+5]..[1729,59491+13])
                          None
                        pattern (typing/parmatch.ml[1729,59491+14]..[1729,59491+24])
                          Ppat_construct "Tpat_var" (typing/parmatch.ml[1729,59491+14]..[1729,59491+22])
                          Some
                            []
                            pattern (typing/parmatch.ml[1729,59491+23]..[1729,59491+24])
                              Ppat_any
                    ]
                  expression (typing/parmatch.ml[1729,59491+29]..[1729,59491+30])
                    Pexp_ident "p" (typing/parmatch.ml[1729,59491+29]..[1729,59491+30])
                <case>
                  pattern (typing/parmatch.ml[1730,59522+2]..[1730,59522+21])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1730,59522+2]..[1730,59522+19])
                        Ppat_construct "Tpat_or" (typing/parmatch.ml[1730,59522+2]..[1730,59522+9])
                        Some
                          []
                          pattern (typing/parmatch.ml[1730,59522+10]..[1730,59522+19])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1730,59522+11]..[1730,59522+13])
                                Ppat_var "p1" (typing/parmatch.ml[1730,59522+11]..[1730,59522+13])
                              pattern (typing/parmatch.ml[1730,59522+14]..[1730,59522+16])
                                Ppat_var "p2" (typing/parmatch.ml[1730,59522+14]..[1730,59522+16])
                              pattern (typing/parmatch.ml[1730,59522+17]..[1730,59522+18])
                                Ppat_any
                            ]
                      pattern (typing/parmatch.ml[1730,59522+20]..[1730,59522+21])
                        Ppat_any
                    ]
                  expression (typing/parmatch.ml[1730,59522+29]..[1730,59522+42])
                    Pexp_apply
                    expression (typing/parmatch.ml[1730,59522+29]..[1730,59522+34])
                      Pexp_ident "orlub" (typing/parmatch.ml[1730,59522+29]..[1730,59522+34])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1730,59522+35]..[1730,59522+37])
                          Pexp_ident "p1" (typing/parmatch.ml[1730,59522+35]..[1730,59522+37])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1730,59522+38]..[1730,59522+40])
                          Pexp_ident "p2" (typing/parmatch.ml[1730,59522+38]..[1730,59522+40])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1730,59522+41]..[1730,59522+42])
                          Pexp_ident "q" (typing/parmatch.ml[1730,59522+41]..[1730,59522+42])
                    ]
                <case>
                  pattern (typing/parmatch.ml[1731,59565+2]..[1731,59565+21])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1731,59565+2]..[1731,59565+3])
                        Ppat_any
                      pattern (typing/parmatch.ml[1731,59565+4]..[1731,59565+21])
                        Ppat_construct "Tpat_or" (typing/parmatch.ml[1731,59565+4]..[1731,59565+11])
                        Some
                          []
                          pattern (typing/parmatch.ml[1731,59565+12]..[1731,59565+21])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1731,59565+13]..[1731,59565+15])
                                Ppat_var "q1" (typing/parmatch.ml[1731,59565+13]..[1731,59565+15])
                              pattern (typing/parmatch.ml[1731,59565+16]..[1731,59565+18])
                                Ppat_var "q2" (typing/parmatch.ml[1731,59565+16]..[1731,59565+18])
                              pattern (typing/parmatch.ml[1731,59565+19]..[1731,59565+20])
                                Ppat_any
                            ]
                    ]
                  expression (typing/parmatch.ml[1731,59565+29]..[1731,59565+42])
                    Pexp_apply
                    expression (typing/parmatch.ml[1731,59565+29]..[1731,59565+34])
                      Pexp_ident "orlub" (typing/parmatch.ml[1731,59565+29]..[1731,59565+34])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1731,59565+35]..[1731,59565+37])
                          Pexp_ident "q1" (typing/parmatch.ml[1731,59565+35]..[1731,59565+37])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1731,59565+38]..[1731,59565+40])
                          Pexp_ident "q2" (typing/parmatch.ml[1731,59565+38]..[1731,59565+40])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1731,59565+41]..[1731,59565+42])
                          Pexp_ident "p" (typing/parmatch.ml[1731,59565+41]..[1731,59565+42])
                    ]
                <case>
                  pattern (typing/parmatch.ml[1732,59645+2]..[1732,59645+36])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1732,59645+2]..[1732,59645+18])
                        Ppat_construct "Tpat_constant" (typing/parmatch.ml[1732,59645+2]..[1732,59645+15])
                        Some
                          []
                          pattern (typing/parmatch.ml[1732,59645+16]..[1732,59645+18])
                            Ppat_var "c1" (typing/parmatch.ml[1732,59645+16]..[1732,59645+18])
                      pattern (typing/parmatch.ml[1732,59645+20]..[1732,59645+36])
                        Ppat_construct "Tpat_constant" (typing/parmatch.ml[1732,59645+20]..[1732,59645+33])
                        Some
                          []
                          pattern (typing/parmatch.ml[1732,59645+34]..[1732,59645+36])
                            Ppat_var "c2" (typing/parmatch.ml[1732,59645+34]..[1732,59645+36])
                    ]
                  <when>
                    expression (typing/parmatch.ml[1732,59645+42]..[1732,59645+65])
                      Pexp_apply
                      expression (typing/parmatch.ml[1732,59645+62]..[1732,59645+63])
                        Pexp_ident "=" (typing/parmatch.ml[1732,59645+62]..[1732,59645+63])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1732,59645+42]..[1732,59645+61])
                            Pexp_apply
                            expression (typing/parmatch.ml[1732,59645+42]..[1732,59645+55])
                              Pexp_ident "const_compare" (typing/parmatch.ml[1732,59645+42]..[1732,59645+55])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1732,59645+56]..[1732,59645+58])
                                  Pexp_ident "c1" (typing/parmatch.ml[1732,59645+56]..[1732,59645+58])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1732,59645+59]..[1732,59645+61])
                                  Pexp_ident "c2" (typing/parmatch.ml[1732,59645+59]..[1732,59645+61])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1732,59645+64]..[1732,59645+65])
                            Pexp_constant PConst_int (0,None)
                      ]
                  expression (typing/parmatch.ml[1732,59645+69]..[1732,59645+70])
                    Pexp_ident "p" (typing/parmatch.ml[1732,59645+69]..[1732,59645+70])
                <case>
                  pattern (typing/parmatch.ml[1733,59716+2]..[1733,59716+30])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1733,59716+2]..[1733,59716+15])
                        Ppat_construct "Tpat_tuple" (typing/parmatch.ml[1733,59716+2]..[1733,59716+12])
                        Some
                          []
                          pattern (typing/parmatch.ml[1733,59716+13]..[1733,59716+15])
                            Ppat_var "ps" (typing/parmatch.ml[1733,59716+13]..[1733,59716+15])
                      pattern (typing/parmatch.ml[1733,59716+17]..[1733,59716+30])
                        Ppat_construct "Tpat_tuple" (typing/parmatch.ml[1733,59716+17]..[1733,59716+27])
                        Some
                          []
                          pattern (typing/parmatch.ml[1733,59716+28]..[1733,59716+30])
                            Ppat_var "qs" (typing/parmatch.ml[1733,59716+28]..[1733,59716+30])
                    ]
                  expression (typing/parmatch.ml[1734,59750+4]..[1735,59777+49])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[1734,59750+8]..[1734,59750+10])
                          Ppat_var "rs" (typing/parmatch.ml[1734,59750+8]..[1734,59750+10])
                        expression (typing/parmatch.ml[1734,59750+13]..[1734,59750+23])
                          Pexp_apply
                          expression (typing/parmatch.ml[1734,59750+13]..[1734,59750+17])
                            Pexp_ident "lubs" (typing/parmatch.ml[1734,59750+13]..[1734,59750+17])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1734,59750+18]..[1734,59750+20])
                                Pexp_ident "ps" (typing/parmatch.ml[1734,59750+18]..[1734,59750+20])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1734,59750+21]..[1734,59750+23])
                                Pexp_ident "qs" (typing/parmatch.ml[1734,59750+21]..[1734,59750+23])
                          ]
                    ]
                    expression (typing/parmatch.ml[1735,59777+4]..[1735,59777+49])
                      Pexp_apply
                      expression (typing/parmatch.ml[1735,59777+4]..[1735,59777+12])
                        Pexp_ident "make_pat" (typing/parmatch.ml[1735,59777+4]..[1735,59777+12])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1735,59777+13]..[1735,59777+28])
                            Pexp_construct "Tpat_tuple" (typing/parmatch.ml[1735,59777+14]..[1735,59777+24])
                            Some
                              expression (typing/parmatch.ml[1735,59777+25]..[1735,59777+27])
                                Pexp_ident "rs" (typing/parmatch.ml[1735,59777+25]..[1735,59777+27])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1735,59777+29]..[1735,59777+39])
                            Pexp_field
                            expression (typing/parmatch.ml[1735,59777+29]..[1735,59777+30])
                              Pexp_ident "p" (typing/parmatch.ml[1735,59777+29]..[1735,59777+30])
                            "pat_type" (typing/parmatch.ml[1735,59777+31]..[1735,59777+39])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1735,59777+40]..[1735,59777+49])
                            Pexp_field
                            expression (typing/parmatch.ml[1735,59777+40]..[1735,59777+41])
                              Pexp_ident "p" (typing/parmatch.ml[1735,59777+40]..[1735,59777+41])
                            "pat_env" (typing/parmatch.ml[1735,59777+42]..[1735,59777+49])
                      ]
                <case>
                  pattern (typing/parmatch.ml[1736,59827+2]..[1736,59827+26])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1736,59827+2]..[1736,59827+13])
                        Ppat_construct "Tpat_lazy" (typing/parmatch.ml[1736,59827+2]..[1736,59827+11])
                        Some
                          []
                          pattern (typing/parmatch.ml[1736,59827+12]..[1736,59827+13])
                            Ppat_var "p" (typing/parmatch.ml[1736,59827+12]..[1736,59827+13])
                      pattern (typing/parmatch.ml[1736,59827+15]..[1736,59827+26])
                        Ppat_construct "Tpat_lazy" (typing/parmatch.ml[1736,59827+15]..[1736,59827+24])
                        Some
                          []
                          pattern (typing/parmatch.ml[1736,59827+25]..[1736,59827+26])
                            Ppat_var "q" (typing/parmatch.ml[1736,59827+25]..[1736,59827+26])
                    ]
                  expression (typing/parmatch.ml[1737,59857+4]..[1738,59880+47])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[1737,59857+8]..[1737,59857+9])
                          Ppat_var "r" (typing/parmatch.ml[1737,59857+8]..[1737,59857+9])
                        expression (typing/parmatch.ml[1737,59857+12]..[1737,59857+19])
                          Pexp_apply
                          expression (typing/parmatch.ml[1737,59857+12]..[1737,59857+15])
                            Pexp_ident "lub" (typing/parmatch.ml[1737,59857+12]..[1737,59857+15])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1737,59857+16]..[1737,59857+17])
                                Pexp_ident "p" (typing/parmatch.ml[1737,59857+16]..[1737,59857+17])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1737,59857+18]..[1737,59857+19])
                                Pexp_ident "q" (typing/parmatch.ml[1737,59857+18]..[1737,59857+19])
                          ]
                    ]
                    expression (typing/parmatch.ml[1738,59880+4]..[1738,59880+47])
                      Pexp_apply
                      expression (typing/parmatch.ml[1738,59880+4]..[1738,59880+12])
                        Pexp_ident "make_pat" (typing/parmatch.ml[1738,59880+4]..[1738,59880+12])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1738,59880+13]..[1738,59880+26])
                            Pexp_construct "Tpat_lazy" (typing/parmatch.ml[1738,59880+14]..[1738,59880+23])
                            Some
                              expression (typing/parmatch.ml[1738,59880+24]..[1738,59880+25])
                                Pexp_ident "r" (typing/parmatch.ml[1738,59880+24]..[1738,59880+25])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1738,59880+27]..[1738,59880+37])
                            Pexp_field
                            expression (typing/parmatch.ml[1738,59880+27]..[1738,59880+28])
                              Pexp_ident "p" (typing/parmatch.ml[1738,59880+27]..[1738,59880+28])
                            "pat_type" (typing/parmatch.ml[1738,59880+29]..[1738,59880+37])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1738,59880+38]..[1738,59880+47])
                            Pexp_field
                            expression (typing/parmatch.ml[1738,59880+38]..[1738,59880+39])
                              Pexp_ident "p" (typing/parmatch.ml[1738,59880+38]..[1738,59880+39])
                            "pat_env" (typing/parmatch.ml[1738,59880+40]..[1738,59880+47])
                      ]
                <case>
                  pattern (typing/parmatch.ml[1739,59928+2]..[1739,59928+60])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1739,59928+2]..[1739,59928+31])
                        Ppat_construct "Tpat_construct" (typing/parmatch.ml[1739,59928+2]..[1739,59928+16])
                        Some
                          []
                          pattern (typing/parmatch.ml[1739,59928+17]..[1739,59928+31])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1739,59928+18]..[1739,59928+21])
                                Ppat_var "lid" (typing/parmatch.ml[1739,59928+18]..[1739,59928+21])
                              pattern (typing/parmatch.ml[1739,59928+22]..[1739,59928+24])
                                Ppat_var "c1" (typing/parmatch.ml[1739,59928+22]..[1739,59928+24])
                              pattern (typing/parmatch.ml[1739,59928+25]..[1739,59928+28])
                                Ppat_var "ps1" (typing/parmatch.ml[1739,59928+25]..[1739,59928+28])
                              pattern (typing/parmatch.ml[1739,59928+29]..[1739,59928+30])
                                Ppat_any
                            ]
                      pattern (typing/parmatch.ml[1739,59928+33]..[1739,59928+60])
                        Ppat_construct "Tpat_construct" (typing/parmatch.ml[1739,59928+33]..[1739,59928+47])
                        Some
                          []
                          pattern (typing/parmatch.ml[1739,59928+48]..[1739,59928+60])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1739,59928+49]..[1739,59928+50])
                                Ppat_any
                              pattern (typing/parmatch.ml[1739,59928+51]..[1739,59928+53])
                                Ppat_var "c2" (typing/parmatch.ml[1739,59928+51]..[1739,59928+53])
                              pattern (typing/parmatch.ml[1739,59928+54]..[1739,59928+57])
                                Ppat_var "ps2" (typing/parmatch.ml[1739,59928+54]..[1739,59928+57])
                              pattern (typing/parmatch.ml[1739,59928+58]..[1739,59928+59])
                                Ppat_any
                            ]
                    ]
                  <when>
                    expression (typing/parmatch.ml[1740,59989+12]..[1740,59989+51])
                      Pexp_apply
                      expression (typing/parmatch.ml[1740,59989+12]..[1740,59989+27])
                        Pexp_ident "Types.equal_tag" (typing/parmatch.ml[1740,59989+12]..[1740,59989+27])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1740,59989+28]..[1740,59989+39])
                            Pexp_field
                            expression (typing/parmatch.ml[1740,59989+28]..[1740,59989+30])
                              Pexp_ident "c1" (typing/parmatch.ml[1740,59989+28]..[1740,59989+30])
                            "cstr_tag" (typing/parmatch.ml[1740,59989+31]..[1740,59989+39])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1740,59989+40]..[1740,59989+51])
                            Pexp_field
                            expression (typing/parmatch.ml[1740,59989+40]..[1740,59989+42])
                              Pexp_ident "c2" (typing/parmatch.ml[1740,59989+40]..[1740,59989+42])
                            "cstr_tag" (typing/parmatch.ml[1740,59989+43]..[1740,59989+51])
                      ]
                  expression (typing/parmatch.ml[1741,60045+8]..[1743,60132+30])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[1741,60045+12]..[1741,60045+14])
                          Ppat_var "rs" (typing/parmatch.ml[1741,60045+12]..[1741,60045+14])
                        expression (typing/parmatch.ml[1741,60045+17]..[1741,60045+29])
                          Pexp_apply
                          expression (typing/parmatch.ml[1741,60045+17]..[1741,60045+21])
                            Pexp_ident "lubs" (typing/parmatch.ml[1741,60045+17]..[1741,60045+21])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1741,60045+22]..[1741,60045+25])
                                Pexp_ident "ps1" (typing/parmatch.ml[1741,60045+22]..[1741,60045+25])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1741,60045+26]..[1741,60045+29])
                                Pexp_ident "ps2" (typing/parmatch.ml[1741,60045+26]..[1741,60045+29])
                          ]
                    ]
                    expression (typing/parmatch.ml[1742,60078+8]..[1743,60132+30])
                      Pexp_apply
                      expression (typing/parmatch.ml[1742,60078+8]..[1742,60078+16])
                        Pexp_ident "make_pat" (typing/parmatch.ml[1742,60078+8]..[1742,60078+16])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1742,60078+17]..[1742,60078+53])
                            Pexp_construct "Tpat_construct" (typing/parmatch.ml[1742,60078+18]..[1742,60078+32])
                            Some
                              expression (typing/parmatch.ml[1742,60078+33]..[1742,60078+52])
                                Pexp_tuple
                                [
                                  expression (typing/parmatch.ml[1742,60078+34]..[1742,60078+37])
                                    Pexp_ident "lid" (typing/parmatch.ml[1742,60078+34]..[1742,60078+37])
                                  expression (typing/parmatch.ml[1742,60078+39]..[1742,60078+41])
                                    Pexp_ident "c1" (typing/parmatch.ml[1742,60078+39]..[1742,60078+41])
                                  expression (typing/parmatch.ml[1742,60078+43]..[1742,60078+45])
                                    Pexp_ident "rs" (typing/parmatch.ml[1742,60078+43]..[1742,60078+45])
                                  expression (typing/parmatch.ml[1742,60078+47]..[1742,60078+51])
                                    Pexp_construct "None" (typing/parmatch.ml[1742,60078+47]..[1742,60078+51])
                                    None
                                ]
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1743,60132+10]..[1743,60132+20])
                            Pexp_field
                            expression (typing/parmatch.ml[1743,60132+10]..[1743,60132+11])
                              Pexp_ident "p" (typing/parmatch.ml[1743,60132+10]..[1743,60132+11])
                            "pat_type" (typing/parmatch.ml[1743,60132+12]..[1743,60132+20])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1743,60132+21]..[1743,60132+30])
                            Pexp_field
                            expression (typing/parmatch.ml[1743,60132+21]..[1743,60132+22])
                              Pexp_ident "p" (typing/parmatch.ml[1743,60132+21]..[1743,60132+22])
                            "pat_env" (typing/parmatch.ml[1743,60132+23]..[1743,60132+30])
                      ]
                <case>
                  pattern (typing/parmatch.ml[1744,60163+2]..[1744,60163+58])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1744,60163+2]..[1744,60163+30])
                        Ppat_construct "Tpat_variant" (typing/parmatch.ml[1744,60163+2]..[1744,60163+14])
                        Some
                          []
                          pattern (typing/parmatch.ml[1744,60163+14]..[1744,60163+30])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1744,60163+15]..[1744,60163+17])
                                Ppat_var "l1" (typing/parmatch.ml[1744,60163+15]..[1744,60163+17])
                              pattern (typing/parmatch.ml[1744,60163+18]..[1744,60163+25])
                                Ppat_construct "Some" (typing/parmatch.ml[1744,60163+18]..[1744,60163+22])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[1744,60163+23]..[1744,60163+25])
                                    Ppat_var "p1" (typing/parmatch.ml[1744,60163+23]..[1744,60163+25])
                              pattern (typing/parmatch.ml[1744,60163+26]..[1744,60163+29])
                                Ppat_var "row" (typing/parmatch.ml[1744,60163+26]..[1744,60163+29])
                            ]
                      pattern (typing/parmatch.ml[1744,60163+32]..[1744,60163+58])
                        Ppat_construct "Tpat_variant" (typing/parmatch.ml[1744,60163+32]..[1744,60163+44])
                        Some
                          []
                          pattern (typing/parmatch.ml[1744,60163+44]..[1744,60163+58])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1744,60163+45]..[1744,60163+47])
                                Ppat_var "l2" (typing/parmatch.ml[1744,60163+45]..[1744,60163+47])
                              pattern (typing/parmatch.ml[1744,60163+48]..[1744,60163+55])
                                Ppat_construct "Some" (typing/parmatch.ml[1744,60163+48]..[1744,60163+52])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[1744,60163+53]..[1744,60163+55])
                                    Ppat_var "p2" (typing/parmatch.ml[1744,60163+53]..[1744,60163+55])
                              pattern (typing/parmatch.ml[1744,60163+56]..[1744,60163+57])
                                Ppat_any
                            ]
                    ]
                  <when>
                    expression (typing/parmatch.ml[1745,60222+16]..[1745,60222+21])
                      Pexp_apply
                      expression (typing/parmatch.ml[1745,60222+18]..[1745,60222+19])
                        Pexp_ident "=" (typing/parmatch.ml[1745,60222+18]..[1745,60222+19])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1745,60222+16]..[1745,60222+18])
                            Pexp_ident "l1" (typing/parmatch.ml[1745,60222+16]..[1745,60222+18])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1745,60222+19]..[1745,60222+21])
                            Pexp_ident "l2" (typing/parmatch.ml[1745,60222+19]..[1745,60222+21])
                      ]
                  expression (typing/parmatch.ml[1746,60247+12]..[1747,60278+72])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[1746,60247+16]..[1746,60247+17])
                          Ppat_var "r" (typing/parmatch.ml[1746,60247+16]..[1746,60247+17])
                        expression (typing/parmatch.ml[1746,60247+18]..[1746,60247+27])
                          Pexp_apply
                          expression (typing/parmatch.ml[1746,60247+18]..[1746,60247+21])
                            Pexp_ident "lub" (typing/parmatch.ml[1746,60247+18]..[1746,60247+21])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1746,60247+22]..[1746,60247+24])
                                Pexp_ident "p1" (typing/parmatch.ml[1746,60247+22]..[1746,60247+24])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1746,60247+25]..[1746,60247+27])
                                Pexp_ident "p2" (typing/parmatch.ml[1746,60247+25]..[1746,60247+27])
                          ]
                    ]
                    expression (typing/parmatch.ml[1747,60278+12]..[1747,60278+72])
                      Pexp_apply
                      expression (typing/parmatch.ml[1747,60278+12]..[1747,60278+20])
                        Pexp_ident "make_pat" (typing/parmatch.ml[1747,60278+12]..[1747,60278+20])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1747,60278+21]..[1747,60278+51])
                            Pexp_construct "Tpat_variant" (typing/parmatch.ml[1747,60278+22]..[1747,60278+34])
                            Some
                              expression (typing/parmatch.ml[1747,60278+35]..[1747,60278+50])
                                Pexp_tuple
                                [
                                  expression (typing/parmatch.ml[1747,60278+36]..[1747,60278+38])
                                    Pexp_ident "l1" (typing/parmatch.ml[1747,60278+36]..[1747,60278+38])
                                  expression (typing/parmatch.ml[1747,60278+39]..[1747,60278+45])
                                    Pexp_construct "Some" (typing/parmatch.ml[1747,60278+39]..[1747,60278+43])
                                    Some
                                      expression (typing/parmatch.ml[1747,60278+44]..[1747,60278+45])
                                        Pexp_ident "r" (typing/parmatch.ml[1747,60278+44]..[1747,60278+45])
                                  expression (typing/parmatch.ml[1747,60278+46]..[1747,60278+49])
                                    Pexp_ident "row" (typing/parmatch.ml[1747,60278+46]..[1747,60278+49])
                                ]
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1747,60278+52]..[1747,60278+62])
                            Pexp_field
                            expression (typing/parmatch.ml[1747,60278+52]..[1747,60278+53])
                              Pexp_ident "p" (typing/parmatch.ml[1747,60278+52]..[1747,60278+53])
                            "pat_type" (typing/parmatch.ml[1747,60278+54]..[1747,60278+62])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1747,60278+63]..[1747,60278+72])
                            Pexp_field
                            expression (typing/parmatch.ml[1747,60278+63]..[1747,60278+64])
                              Pexp_ident "p" (typing/parmatch.ml[1747,60278+63]..[1747,60278+64])
                            "pat_env" (typing/parmatch.ml[1747,60278+65]..[1747,60278+72])
                      ]
                <case>
                  pattern (typing/parmatch.ml[1748,60351+2]..[1748,60351+54])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1748,60351+2]..[1748,60351+29])
                        Ppat_construct "Tpat_variant" (typing/parmatch.ml[1748,60351+2]..[1748,60351+14])
                        Some
                          []
                          pattern (typing/parmatch.ml[1748,60351+15]..[1748,60351+29])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1748,60351+16]..[1748,60351+18])
                                Ppat_var "l1" (typing/parmatch.ml[1748,60351+16]..[1748,60351+18])
                              pattern (typing/parmatch.ml[1748,60351+19]..[1748,60351+23])
                                Ppat_construct "None" (typing/parmatch.ml[1748,60351+19]..[1748,60351+23])
                                None
                              pattern (typing/parmatch.ml[1748,60351+24]..[1748,60351+28])
                                Ppat_var "_row" (typing/parmatch.ml[1748,60351+24]..[1748,60351+28])
                            ]
                      pattern (typing/parmatch.ml[1748,60351+31]..[1748,60351+54])
                        Ppat_construct "Tpat_variant" (typing/parmatch.ml[1748,60351+31]..[1748,60351+43])
                        Some
                          []
                          pattern (typing/parmatch.ml[1748,60351+43]..[1748,60351+54])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1748,60351+44]..[1748,60351+46])
                                Ppat_var "l2" (typing/parmatch.ml[1748,60351+44]..[1748,60351+46])
                              pattern (typing/parmatch.ml[1748,60351+47]..[1748,60351+51])
                                Ppat_construct "None" (typing/parmatch.ml[1748,60351+47]..[1748,60351+51])
                                None
                              pattern (typing/parmatch.ml[1748,60351+52]..[1748,60351+53])
                                Ppat_any
                            ]
                    ]
                  <when>
                    expression (typing/parmatch.ml[1749,60406+19]..[1749,60406+26])
                      Pexp_apply
                      expression (typing/parmatch.ml[1749,60406+22]..[1749,60406+23])
                        Pexp_ident "=" (typing/parmatch.ml[1749,60406+22]..[1749,60406+23])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1749,60406+19]..[1749,60406+21])
                            Pexp_ident "l1" (typing/parmatch.ml[1749,60406+19]..[1749,60406+21])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1749,60406+24]..[1749,60406+26])
                            Pexp_ident "l2" (typing/parmatch.ml[1749,60406+24]..[1749,60406+26])
                      ]
                  expression (typing/parmatch.ml[1749,60406+30]..[1749,60406+31])
                    Pexp_ident "p" (typing/parmatch.ml[1749,60406+30]..[1749,60406+31])
                <case>
                  pattern (typing/parmatch.ml[1750,60438+2]..[1750,60438+44])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1750,60438+2]..[1750,60438+25])
                        Ppat_construct "Tpat_record" (typing/parmatch.ml[1750,60438+2]..[1750,60438+13])
                        Some
                          []
                          pattern (typing/parmatch.ml[1750,60438+14]..[1750,60438+25])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1750,60438+15]..[1750,60438+17])
                                Ppat_var "l1" (typing/parmatch.ml[1750,60438+15]..[1750,60438+17])
                              pattern (typing/parmatch.ml[1750,60438+18]..[1750,60438+24])
                                Ppat_var "closed" (typing/parmatch.ml[1750,60438+18]..[1750,60438+24])
                            ]
                      pattern (typing/parmatch.ml[1750,60438+26]..[1750,60438+44])
                        Ppat_construct "Tpat_record" (typing/parmatch.ml[1750,60438+26]..[1750,60438+37])
                        Some
                          []
                          pattern (typing/parmatch.ml[1750,60438+38]..[1750,60438+44])
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1750,60438+39]..[1750,60438+41])
                                Ppat_var "l2" (typing/parmatch.ml[1750,60438+39]..[1750,60438+41])
                              pattern (typing/parmatch.ml[1750,60438+42]..[1750,60438+43])
                                Ppat_any
                            ]
                    ]
                  expression (typing/parmatch.ml[1751,60486+4]..[1752,60520+60])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[1751,60486+8]..[1751,60486+10])
                          Ppat_var "rs" (typing/parmatch.ml[1751,60486+8]..[1751,60486+10])
                        expression (typing/parmatch.ml[1751,60486+13]..[1751,60486+30])
                          Pexp_apply
                          expression (typing/parmatch.ml[1751,60486+13]..[1751,60486+24])
                            Pexp_ident "record_lubs" (typing/parmatch.ml[1751,60486+13]..[1751,60486+24])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1751,60486+25]..[1751,60486+27])
                                Pexp_ident "l1" (typing/parmatch.ml[1751,60486+25]..[1751,60486+27])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1751,60486+28]..[1751,60486+30])
                                Pexp_ident "l2" (typing/parmatch.ml[1751,60486+28]..[1751,60486+30])
                          ]
                    ]
                    expression (typing/parmatch.ml[1752,60520+4]..[1752,60520+60])
                      Pexp_apply
                      expression (typing/parmatch.ml[1752,60520+4]..[1752,60520+12])
                        Pexp_ident "make_pat" (typing/parmatch.ml[1752,60520+4]..[1752,60520+12])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1752,60520+13]..[1752,60520+39])
                            Pexp_construct "Tpat_record" (typing/parmatch.ml[1752,60520+14]..[1752,60520+25])
                            Some
                              expression (typing/parmatch.ml[1752,60520+26]..[1752,60520+38])
                                Pexp_tuple
                                [
                                  expression (typing/parmatch.ml[1752,60520+27]..[1752,60520+29])
                                    Pexp_ident "rs" (typing/parmatch.ml[1752,60520+27]..[1752,60520+29])
                                  expression (typing/parmatch.ml[1752,60520+31]..[1752,60520+37])
                                    Pexp_ident "closed" (typing/parmatch.ml[1752,60520+31]..[1752,60520+37])
                                ]
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1752,60520+40]..[1752,60520+50])
                            Pexp_field
                            expression (typing/parmatch.ml[1752,60520+40]..[1752,60520+41])
                              Pexp_ident "p" (typing/parmatch.ml[1752,60520+40]..[1752,60520+41])
                            "pat_type" (typing/parmatch.ml[1752,60520+42]..[1752,60520+50])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1752,60520+51]..[1752,60520+60])
                            Pexp_field
                            expression (typing/parmatch.ml[1752,60520+51]..[1752,60520+52])
                              Pexp_ident "p" (typing/parmatch.ml[1752,60520+51]..[1752,60520+52])
                            "pat_env" (typing/parmatch.ml[1752,60520+53]..[1752,60520+60])
                      ]
                <case>
                  pattern (typing/parmatch.ml[1753,60581+2]..[1753,60581+30])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1753,60581+2]..[1753,60581+15])
                        Ppat_construct "Tpat_array" (typing/parmatch.ml[1753,60581+2]..[1753,60581+12])
                        Some
                          []
                          pattern (typing/parmatch.ml[1753,60581+13]..[1753,60581+15])
                            Ppat_var "ps" (typing/parmatch.ml[1753,60581+13]..[1753,60581+15])
                      pattern (typing/parmatch.ml[1753,60581+17]..[1753,60581+30])
                        Ppat_construct "Tpat_array" (typing/parmatch.ml[1753,60581+17]..[1753,60581+27])
                        Some
                          []
                          pattern (typing/parmatch.ml[1753,60581+28]..[1753,60581+30])
                            Ppat_var "qs" (typing/parmatch.ml[1753,60581+28]..[1753,60581+30])
                    ]
                  <when>
                    expression (typing/parmatch.ml[1754,60612+11]..[1754,60612+42])
                      Pexp_apply
                      expression (typing/parmatch.ml[1754,60612+26]..[1754,60612+27])
                        Pexp_ident "=" (typing/parmatch.ml[1754,60612+26]..[1754,60612+27])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1754,60612+11]..[1754,60612+25])
                            Pexp_apply
                            expression (typing/parmatch.ml[1754,60612+11]..[1754,60612+22])
                              Pexp_ident "List.length" (typing/parmatch.ml[1754,60612+11]..[1754,60612+22])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1754,60612+23]..[1754,60612+25])
                                  Pexp_ident "ps" (typing/parmatch.ml[1754,60612+23]..[1754,60612+25])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1754,60612+28]..[1754,60612+42])
                            Pexp_apply
                            expression (typing/parmatch.ml[1754,60612+28]..[1754,60612+39])
                              Pexp_ident "List.length" (typing/parmatch.ml[1754,60612+28]..[1754,60612+39])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1754,60612+40]..[1754,60612+42])
                                  Pexp_ident "qs" (typing/parmatch.ml[1754,60612+40]..[1754,60612+42])
                            ]
                      ]
                  expression (typing/parmatch.ml[1755,60658+8]..[1756,60689+53])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[1755,60658+12]..[1755,60658+14])
                          Ppat_var "rs" (typing/parmatch.ml[1755,60658+12]..[1755,60658+14])
                        expression (typing/parmatch.ml[1755,60658+17]..[1755,60658+27])
                          Pexp_apply
                          expression (typing/parmatch.ml[1755,60658+17]..[1755,60658+21])
                            Pexp_ident "lubs" (typing/parmatch.ml[1755,60658+17]..[1755,60658+21])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1755,60658+22]..[1755,60658+24])
                                Pexp_ident "ps" (typing/parmatch.ml[1755,60658+22]..[1755,60658+24])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1755,60658+25]..[1755,60658+27])
                                Pexp_ident "qs" (typing/parmatch.ml[1755,60658+25]..[1755,60658+27])
                          ]
                    ]
                    expression (typing/parmatch.ml[1756,60689+8]..[1756,60689+53])
                      Pexp_apply
                      expression (typing/parmatch.ml[1756,60689+8]..[1756,60689+16])
                        Pexp_ident "make_pat" (typing/parmatch.ml[1756,60689+8]..[1756,60689+16])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1756,60689+17]..[1756,60689+32])
                            Pexp_construct "Tpat_array" (typing/parmatch.ml[1756,60689+18]..[1756,60689+28])
                            Some
                              expression (typing/parmatch.ml[1756,60689+29]..[1756,60689+31])
                                Pexp_ident "rs" (typing/parmatch.ml[1756,60689+29]..[1756,60689+31])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1756,60689+33]..[1756,60689+43])
                            Pexp_field
                            expression (typing/parmatch.ml[1756,60689+33]..[1756,60689+34])
                              Pexp_ident "p" (typing/parmatch.ml[1756,60689+33]..[1756,60689+34])
                            "pat_type" (typing/parmatch.ml[1756,60689+35]..[1756,60689+43])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1756,60689+44]..[1756,60689+53])
                            Pexp_field
                            expression (typing/parmatch.ml[1756,60689+44]..[1756,60689+45])
                              Pexp_ident "p" (typing/parmatch.ml[1756,60689+44]..[1756,60689+45])
                            "pat_env" (typing/parmatch.ml[1756,60689+46]..[1756,60689+53])
                      ]
                <case>
                  pattern (typing/parmatch.ml[1757,60743+2]..[1757,60743+5])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1757,60743+2]..[1757,60743+3])
                        Ppat_any
                      pattern (typing/parmatch.ml[1757,60743+4]..[1757,60743+5])
                        Ppat_any
                    ]
                  expression (typing/parmatch.ml[1758,60753+4]..[1758,60753+15])
                    Pexp_apply
                    expression (typing/parmatch.ml[1758,60753+4]..[1758,60753+9])
                      Pexp_ident "raise" (typing/parmatch.ml[1758,60753+4]..[1758,60753+9])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1758,60753+10]..[1758,60753+15])
                          Pexp_construct "Empty" (typing/parmatch.ml[1758,60753+10]..[1758,60753+15])
                          None
                    ]
              ]
      <def>
        pattern (typing/parmatch.ml[1760,60770+4]..[1760,60770+9])
          Ppat_var "orlub" (typing/parmatch.ml[1760,60770+4]..[1760,60770+9])
        expression (typing/parmatch.ml[1760,60770+10]..[1768,60910+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1760,60770+10]..[1760,60770+12])
            Ppat_var "p1" (typing/parmatch.ml[1760,60770+10]..[1760,60770+12])
          expression (typing/parmatch.ml[1760,60770+13]..[1768,60910+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1760,60770+13]..[1760,60770+15])
              Ppat_var "p2" (typing/parmatch.ml[1760,60770+13]..[1760,60770+15])
            expression (typing/parmatch.ml[1760,60770+16]..[1768,60910+19]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[1760,60770+16]..[1760,60770+17])
                Ppat_var "q" (typing/parmatch.ml[1760,60770+16]..[1760,60770+17])
              expression (typing/parmatch.ml[1761,60790+2]..[1768,60910+19])
                Pexp_try
                expression (typing/parmatch.ml[1762,60796+4]..[1766,60889+15])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/parmatch.ml[1762,60796+8]..[1762,60796+10])
                        Ppat_var "r1" (typing/parmatch.ml[1762,60796+8]..[1762,60796+10])
                      expression (typing/parmatch.ml[1762,60796+13]..[1762,60796+21])
                        Pexp_apply
                        expression (typing/parmatch.ml[1762,60796+13]..[1762,60796+16])
                          Pexp_ident "lub" (typing/parmatch.ml[1762,60796+13]..[1762,60796+16])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1762,60796+17]..[1762,60796+19])
                              Pexp_ident "p1" (typing/parmatch.ml[1762,60796+17]..[1762,60796+19])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1762,60796+20]..[1762,60796+21])
                              Pexp_ident "q" (typing/parmatch.ml[1762,60796+20]..[1762,60796+21])
                        ]
                  ]
                  expression (typing/parmatch.ml[1763,60821+4]..[1766,60889+15])
                    Pexp_try
                    expression (typing/parmatch.ml[1764,60829+6]..[1764,60829+52])
                      Pexp_record
                      [
                        "pat_desc" (typing/parmatch.ml[1764,60829+14]..[1764,60829+22])
                          expression (typing/parmatch.ml[1764,60829+23]..[1764,60829+51])
                            Pexp_construct "Tpat_or" (typing/parmatch.ml[1764,60829+24]..[1764,60829+31])
                            Some
                              expression (typing/parmatch.ml[1764,60829+32]..[1764,60829+50])
                                Pexp_tuple
                                [
                                  expression (typing/parmatch.ml[1764,60829+33]..[1764,60829+35])
                                    Pexp_ident "r1" (typing/parmatch.ml[1764,60829+33]..[1764,60829+35])
                                  expression (typing/parmatch.ml[1764,60829+36]..[1764,60829+44])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1764,60829+36]..[1764,60829+39])
                                      Pexp_ident "lub" (typing/parmatch.ml[1764,60829+36]..[1764,60829+39])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1764,60829+40]..[1764,60829+42])
                                          Pexp_ident "p2" (typing/parmatch.ml[1764,60829+40]..[1764,60829+42])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1764,60829+43]..[1764,60829+44])
                                          Pexp_ident "q" (typing/parmatch.ml[1764,60829+43]..[1764,60829+44])
                                    ]
                                  expression (typing/parmatch.ml[1764,60829+45]..[1764,60829+49])
                                    Pexp_construct "None" (typing/parmatch.ml[1764,60829+45]..[1764,60829+49])
                                    None
                                ]
                      ]
                      Some
                        expression (typing/parmatch.ml[1764,60829+7]..[1764,60829+8])
                          Pexp_ident "q" (typing/parmatch.ml[1764,60829+7]..[1764,60829+8])
                    [
                      <case>
                        pattern (typing/parmatch.ml[1766,60889+4]..[1766,60889+9])
                          Ppat_construct "Empty" (typing/parmatch.ml[1766,60889+4]..[1766,60889+9])
                          None
                        expression (typing/parmatch.ml[1766,60889+13]..[1766,60889+15])
                          Pexp_ident "r1" (typing/parmatch.ml[1766,60889+13]..[1766,60889+15])
                    ]
                [
                  <case>
                    pattern (typing/parmatch.ml[1768,60910+2]..[1768,60910+7])
                      Ppat_construct "Empty" (typing/parmatch.ml[1768,60910+2]..[1768,60910+7])
                      None
                    expression (typing/parmatch.ml[1768,60910+11]..[1768,60910+19])
                      Pexp_apply
                      expression (typing/parmatch.ml[1768,60910+11]..[1768,60910+14])
                        Pexp_ident "lub" (typing/parmatch.ml[1768,60910+11]..[1768,60910+14])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1768,60910+15]..[1768,60910+17])
                            Pexp_ident "p2" (typing/parmatch.ml[1768,60910+15]..[1768,60910+17])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1768,60910+18]..[1768,60910+19])
                            Pexp_ident "q" (typing/parmatch.ml[1768,60910+18]..[1768,60910+19])
                      ]
                ]
      <def>
        pattern (typing/parmatch.ml[1770,60931+4]..[1770,60931+15])
          Ppat_var "record_lubs" (typing/parmatch.ml[1770,60931+4]..[1770,60931+15])
        expression (typing/parmatch.ml[1770,60931+16]..[1781,61316+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1770,60931+16]..[1770,60931+18])
            Ppat_var "l1" (typing/parmatch.ml[1770,60931+16]..[1770,60931+18])
          expression (typing/parmatch.ml[1770,60931+19]..[1781,61316+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1770,60931+19]..[1770,60931+21])
              Ppat_var "l2" (typing/parmatch.ml[1770,60931+19]..[1770,60931+21])
            expression (typing/parmatch.ml[1771,60955+2]..[1781,61316+15])
              Pexp_let Rec
              [
                <def>
                  pattern (typing/parmatch.ml[1771,60955+10]..[1771,60955+17])
                    Ppat_var "lub_rec" (typing/parmatch.ml[1771,60955+10]..[1771,60955+17])
                  expression (typing/parmatch.ml[1771,60955+18]..[1780,61263+49]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/parmatch.ml[1771,60955+18]..[1771,60955+20])
                      Ppat_var "l1" (typing/parmatch.ml[1771,60955+18]..[1771,60955+20])
                    expression (typing/parmatch.ml[1771,60955+21]..[1780,61263+49]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/parmatch.ml[1771,60955+21]..[1771,60955+23])
                        Ppat_var "l2" (typing/parmatch.ml[1771,60955+21]..[1771,60955+23])
                      expression (typing/parmatch.ml[1771,60955+26]..[1780,61263+49])
                        Pexp_match
                        expression (typing/parmatch.ml[1771,60955+32]..[1771,60955+37])
                          Pexp_tuple
                          [
                            expression (typing/parmatch.ml[1771,60955+32]..[1771,60955+34])
                              Pexp_ident "l1" (typing/parmatch.ml[1771,60955+32]..[1771,60955+34])
                            expression (typing/parmatch.ml[1771,60955+35]..[1771,60955+37])
                              Pexp_ident "l2" (typing/parmatch.ml[1771,60955+35]..[1771,60955+37])
                          ]
                        [
                          <case>
                            pattern (typing/parmatch.ml[1772,60998+4]..[1772,60998+8])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[1772,60998+4]..[1772,60998+6])
                                  Ppat_construct "[]" (typing/parmatch.ml[1772,60998+4]..[1772,60998+6])
                                  None
                                pattern (typing/parmatch.ml[1772,60998+7]..[1772,60998+8])
                                  Ppat_any
                              ]
                            expression (typing/parmatch.ml[1772,60998+12]..[1772,60998+14])
                              Pexp_ident "l2" (typing/parmatch.ml[1772,60998+12]..[1772,60998+14])
                          <case>
                            pattern (typing/parmatch.ml[1773,61013+4]..[1773,61013+8])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[1773,61013+4]..[1773,61013+5])
                                  Ppat_any
                                pattern (typing/parmatch.ml[1773,61013+6]..[1773,61013+8])
                                  Ppat_construct "[]" (typing/parmatch.ml[1773,61013+6]..[1773,61013+8])
                                  None
                              ]
                            expression (typing/parmatch.ml[1773,61013+12]..[1773,61013+14])
                              Pexp_ident "l1" (typing/parmatch.ml[1773,61013+12]..[1773,61013+14])
                          <case>
                            pattern (typing/parmatch.ml[1774,61028+4]..[1774,61028+48])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[1774,61028+4]..[1774,61028+25])
                                  Ppat_construct "::" (typing/parmatch.ml[1774,61028+19]..[1774,61028+21])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[1774,61028+4]..[1774,61028+25]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[1774,61028+4]..[1774,61028+19])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[1774,61028+5]..[1774,61028+9])
                                              Ppat_var "lid1" (typing/parmatch.ml[1774,61028+5]..[1774,61028+9])
                                            pattern (typing/parmatch.ml[1774,61028+11]..[1774,61028+15])
                                              Ppat_var "lbl1" (typing/parmatch.ml[1774,61028+11]..[1774,61028+15])
                                            pattern (typing/parmatch.ml[1774,61028+16]..[1774,61028+18])
                                              Ppat_var "p1" (typing/parmatch.ml[1774,61028+16]..[1774,61028+18])
                                          ]
                                        pattern (typing/parmatch.ml[1774,61028+21]..[1774,61028+25])
                                          Ppat_var "rem1" (typing/parmatch.ml[1774,61028+21]..[1774,61028+25])
                                      ]
                                pattern (typing/parmatch.ml[1774,61028+27]..[1774,61028+48])
                                  Ppat_construct "::" (typing/parmatch.ml[1774,61028+42]..[1774,61028+44])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[1774,61028+27]..[1774,61028+48]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[1774,61028+27]..[1774,61028+42])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[1774,61028+28]..[1774,61028+32])
                                              Ppat_var "lid2" (typing/parmatch.ml[1774,61028+28]..[1774,61028+32])
                                            pattern (typing/parmatch.ml[1774,61028+34]..[1774,61028+38])
                                              Ppat_var "lbl2" (typing/parmatch.ml[1774,61028+34]..[1774,61028+38])
                                            pattern (typing/parmatch.ml[1774,61028+39]..[1774,61028+41])
                                              Ppat_var "p2" (typing/parmatch.ml[1774,61028+39]..[1774,61028+41])
                                          ]
                                        pattern (typing/parmatch.ml[1774,61028+44]..[1774,61028+48])
                                          Ppat_var "rem2" (typing/parmatch.ml[1774,61028+44]..[1774,61028+48])
                                      ]
                              ]
                            expression (typing/parmatch.ml[1775,61080+6]..[1780,61263+49])
                              Pexp_ifthenelse
                              expression (typing/parmatch.ml[1775,61080+9]..[1775,61080+36])
                                Pexp_apply
                                expression (typing/parmatch.ml[1775,61080+22]..[1775,61080+23])
                                  Pexp_ident "<" (typing/parmatch.ml[1775,61080+22]..[1775,61080+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1775,61080+9]..[1775,61080+21])
                                      Pexp_field
                                      expression (typing/parmatch.ml[1775,61080+9]..[1775,61080+13])
                                        Pexp_ident "lbl1" (typing/parmatch.ml[1775,61080+9]..[1775,61080+13])
                                      "lbl_pos" (typing/parmatch.ml[1775,61080+14]..[1775,61080+21])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1775,61080+24]..[1775,61080+36])
                                      Pexp_field
                                      expression (typing/parmatch.ml[1775,61080+24]..[1775,61080+28])
                                        Pexp_ident "lbl2" (typing/parmatch.ml[1775,61080+24]..[1775,61080+28])
                                      "lbl_pos" (typing/parmatch.ml[1775,61080+29]..[1775,61080+36])
                                ]
                              expression (typing/parmatch.ml[1776,61122+8]..[1776,61122+40])
                                Pexp_construct "::" (typing/parmatch.ml[1776,61122+23]..[1776,61122+25])
                                Some
                                  expression (typing/parmatch.ml[1776,61122+8]..[1776,61122+40]) ghost
                                    Pexp_tuple
                                    [
                                      expression (typing/parmatch.ml[1776,61122+8]..[1776,61122+23])
                                        Pexp_tuple
                                        [
                                          expression (typing/parmatch.ml[1776,61122+9]..[1776,61122+13])
                                            Pexp_ident "lid1" (typing/parmatch.ml[1776,61122+9]..[1776,61122+13])
                                          expression (typing/parmatch.ml[1776,61122+15]..[1776,61122+19])
                                            Pexp_ident "lbl1" (typing/parmatch.ml[1776,61122+15]..[1776,61122+19])
                                          expression (typing/parmatch.ml[1776,61122+20]..[1776,61122+22])
                                            Pexp_ident "p1" (typing/parmatch.ml[1776,61122+20]..[1776,61122+22])
                                        ]
                                      expression (typing/parmatch.ml[1776,61122+25]..[1776,61122+40])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1776,61122+25]..[1776,61122+32])
                                          Pexp_ident "lub_rec" (typing/parmatch.ml[1776,61122+25]..[1776,61122+32])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1776,61122+33]..[1776,61122+37])
                                              Pexp_ident "rem1" (typing/parmatch.ml[1776,61122+33]..[1776,61122+37])
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1776,61122+38]..[1776,61122+40])
                                              Pexp_ident "l2" (typing/parmatch.ml[1776,61122+38]..[1776,61122+40])
                                        ]
                                    ]
                              Some
                                expression (typing/parmatch.ml[1777,61163+11]..[1780,61263+49])
                                  Pexp_ifthenelse
                                  expression (typing/parmatch.ml[1777,61163+14]..[1777,61163+41])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1777,61163+27]..[1777,61163+28])
                                      Pexp_ident "<" (typing/parmatch.ml[1777,61163+27]..[1777,61163+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1777,61163+14]..[1777,61163+26])
                                          Pexp_field
                                          expression (typing/parmatch.ml[1777,61163+14]..[1777,61163+18])
                                            Pexp_ident "lbl2" (typing/parmatch.ml[1777,61163+14]..[1777,61163+18])
                                          "lbl_pos" (typing/parmatch.ml[1777,61163+19]..[1777,61163+26])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1777,61163+29]..[1777,61163+41])
                                          Pexp_field
                                          expression (typing/parmatch.ml[1777,61163+29]..[1777,61163+33])
                                            Pexp_ident "lbl1" (typing/parmatch.ml[1777,61163+29]..[1777,61163+33])
                                          "lbl_pos" (typing/parmatch.ml[1777,61163+34]..[1777,61163+41])
                                    ]
                                  expression (typing/parmatch.ml[1778,61211+8]..[1778,61211+40])
                                    Pexp_construct "::" (typing/parmatch.ml[1778,61211+23]..[1778,61211+25])
                                    Some
                                      expression (typing/parmatch.ml[1778,61211+8]..[1778,61211+40]) ghost
                                        Pexp_tuple
                                        [
                                          expression (typing/parmatch.ml[1778,61211+8]..[1778,61211+23])
                                            Pexp_tuple
                                            [
                                              expression (typing/parmatch.ml[1778,61211+9]..[1778,61211+13])
                                                Pexp_ident "lid2" (typing/parmatch.ml[1778,61211+9]..[1778,61211+13])
                                              expression (typing/parmatch.ml[1778,61211+15]..[1778,61211+19])
                                                Pexp_ident "lbl2" (typing/parmatch.ml[1778,61211+15]..[1778,61211+19])
                                              expression (typing/parmatch.ml[1778,61211+20]..[1778,61211+22])
                                                Pexp_ident "p2" (typing/parmatch.ml[1778,61211+20]..[1778,61211+22])
                                            ]
                                          expression (typing/parmatch.ml[1778,61211+25]..[1778,61211+40])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[1778,61211+25]..[1778,61211+32])
                                              Pexp_ident "lub_rec" (typing/parmatch.ml[1778,61211+25]..[1778,61211+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1778,61211+33]..[1778,61211+35])
                                                  Pexp_ident "l1" (typing/parmatch.ml[1778,61211+33]..[1778,61211+35])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1778,61211+36]..[1778,61211+40])
                                                  Pexp_ident "rem2" (typing/parmatch.ml[1778,61211+36]..[1778,61211+40])
                                            ]
                                        ]
                                  Some
                                    expression (typing/parmatch.ml[1780,61263+8]..[1780,61263+49])
                                      Pexp_construct "::" (typing/parmatch.ml[1780,61263+30]..[1780,61263+32])
                                      Some
                                        expression (typing/parmatch.ml[1780,61263+8]..[1780,61263+49]) ghost
                                          Pexp_tuple
                                          [
                                            expression (typing/parmatch.ml[1780,61263+8]..[1780,61263+30])
                                              Pexp_tuple
                                              [
                                                expression (typing/parmatch.ml[1780,61263+9]..[1780,61263+13])
                                                  Pexp_ident "lid1" (typing/parmatch.ml[1780,61263+9]..[1780,61263+13])
                                                expression (typing/parmatch.ml[1780,61263+15]..[1780,61263+19])
                                                  Pexp_ident "lbl1" (typing/parmatch.ml[1780,61263+15]..[1780,61263+19])
                                                expression (typing/parmatch.ml[1780,61263+20]..[1780,61263+29])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[1780,61263+20]..[1780,61263+23])
                                                    Pexp_ident "lub" (typing/parmatch.ml[1780,61263+20]..[1780,61263+23])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1780,61263+24]..[1780,61263+26])
                                                        Pexp_ident "p1" (typing/parmatch.ml[1780,61263+24]..[1780,61263+26])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1780,61263+27]..[1780,61263+29])
                                                        Pexp_ident "p2" (typing/parmatch.ml[1780,61263+27]..[1780,61263+29])
                                                  ]
                                              ]
                                            expression (typing/parmatch.ml[1780,61263+32]..[1780,61263+49])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[1780,61263+32]..[1780,61263+39])
                                                Pexp_ident "lub_rec" (typing/parmatch.ml[1780,61263+32]..[1780,61263+39])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1780,61263+40]..[1780,61263+44])
                                                    Pexp_ident "rem1" (typing/parmatch.ml[1780,61263+40]..[1780,61263+44])
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1780,61263+45]..[1780,61263+49])
                                                    Pexp_ident "rem2" (typing/parmatch.ml[1780,61263+45]..[1780,61263+49])
                                              ]
                                          ]
                        ]
              ]
              expression (typing/parmatch.ml[1781,61316+2]..[1781,61316+15])
                Pexp_apply
                expression (typing/parmatch.ml[1781,61316+2]..[1781,61316+9])
                  Pexp_ident "lub_rec" (typing/parmatch.ml[1781,61316+2]..[1781,61316+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[1781,61316+10]..[1781,61316+12])
                      Pexp_ident "l1" (typing/parmatch.ml[1781,61316+10]..[1781,61316+12])
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[1781,61316+13]..[1781,61316+15])
                      Pexp_ident "l2" (typing/parmatch.ml[1781,61316+13]..[1781,61316+15])
                ]
      <def>
        pattern (typing/parmatch.ml[1783,61333+4]..[1783,61333+8])
          Ppat_var "lubs" (typing/parmatch.ml[1783,61333+4]..[1783,61333+8])
        expression (typing/parmatch.ml[1783,61333+9]..[1785,61407+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1783,61333+9]..[1783,61333+11])
            Ppat_var "ps" (typing/parmatch.ml[1783,61333+9]..[1783,61333+11])
          expression (typing/parmatch.ml[1783,61333+12]..[1785,61407+11]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1783,61333+12]..[1783,61333+14])
              Ppat_var "qs" (typing/parmatch.ml[1783,61333+12]..[1783,61333+14])
            expression (typing/parmatch.ml[1783,61333+17]..[1785,61407+11])
              Pexp_match
              expression (typing/parmatch.ml[1783,61333+23]..[1783,61333+28])
                Pexp_tuple
                [
                  expression (typing/parmatch.ml[1783,61333+23]..[1783,61333+25])
                    Pexp_ident "ps" (typing/parmatch.ml[1783,61333+23]..[1783,61333+25])
                  expression (typing/parmatch.ml[1783,61333+26]..[1783,61333+28])
                    Pexp_ident "qs" (typing/parmatch.ml[1783,61333+26]..[1783,61333+28])
                ]
              [
                <case>
                  pattern (typing/parmatch.ml[1784,61367+2]..[1784,61367+14])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1784,61367+2]..[1784,61367+7])
                        Ppat_construct "::" (typing/parmatch.ml[1784,61367+3]..[1784,61367+5])
                        Some
                          []
                          pattern (typing/parmatch.ml[1784,61367+2]..[1784,61367+7]) ghost
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1784,61367+2]..[1784,61367+3])
                                Ppat_var "p" (typing/parmatch.ml[1784,61367+2]..[1784,61367+3])
                              pattern (typing/parmatch.ml[1784,61367+5]..[1784,61367+7])
                                Ppat_var "ps" (typing/parmatch.ml[1784,61367+5]..[1784,61367+7])
                            ]
                      pattern (typing/parmatch.ml[1784,61367+9]..[1784,61367+14])
                        Ppat_construct "::" (typing/parmatch.ml[1784,61367+10]..[1784,61367+12])
                        Some
                          []
                          pattern (typing/parmatch.ml[1784,61367+9]..[1784,61367+14]) ghost
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1784,61367+9]..[1784,61367+10])
                                Ppat_var "q" (typing/parmatch.ml[1784,61367+9]..[1784,61367+10])
                              pattern (typing/parmatch.ml[1784,61367+12]..[1784,61367+14])
                                Ppat_var "qs" (typing/parmatch.ml[1784,61367+12]..[1784,61367+14])
                            ]
                    ]
                  expression (typing/parmatch.ml[1784,61367+18]..[1784,61367+39])
                    Pexp_construct "::" (typing/parmatch.ml[1784,61367+26]..[1784,61367+28])
                    Some
                      expression (typing/parmatch.ml[1784,61367+18]..[1784,61367+39]) ghost
                        Pexp_tuple
                        [
                          expression (typing/parmatch.ml[1784,61367+18]..[1784,61367+25])
                            Pexp_apply
                            expression (typing/parmatch.ml[1784,61367+18]..[1784,61367+21])
                              Pexp_ident "lub" (typing/parmatch.ml[1784,61367+18]..[1784,61367+21])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1784,61367+22]..[1784,61367+23])
                                  Pexp_ident "p" (typing/parmatch.ml[1784,61367+22]..[1784,61367+23])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1784,61367+24]..[1784,61367+25])
                                  Pexp_ident "q" (typing/parmatch.ml[1784,61367+24]..[1784,61367+25])
                            ]
                          expression (typing/parmatch.ml[1784,61367+29]..[1784,61367+39])
                            Pexp_apply
                            expression (typing/parmatch.ml[1784,61367+29]..[1784,61367+33])
                              Pexp_ident "lubs" (typing/parmatch.ml[1784,61367+29]..[1784,61367+33])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1784,61367+34]..[1784,61367+36])
                                  Pexp_ident "ps" (typing/parmatch.ml[1784,61367+34]..[1784,61367+36])
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1784,61367+37]..[1784,61367+39])
                                  Pexp_ident "qs" (typing/parmatch.ml[1784,61367+37]..[1784,61367+39])
                            ]
                        ]
                <case>
                  pattern (typing/parmatch.ml[1785,61407+2]..[1785,61407+5])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1785,61407+2]..[1785,61407+3])
                        Ppat_any
                      pattern (typing/parmatch.ml[1785,61407+4]..[1785,61407+5])
                        Ppat_any
                    ]
                  expression (typing/parmatch.ml[1785,61407+9]..[1785,61407+11])
                    Pexp_construct "[]" (typing/parmatch.ml[1785,61407+9]..[1785,61407+11])
                    None
              ]
    ]
  structure_item (typing/parmatch.ml[1794,61555+0]..[1797,61643+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1794,61555+4]..[1794,61555+21])
          Ppat_var "pressure_variants" (typing/parmatch.ml[1794,61555+4]..[1794,61555+21])
        expression (typing/parmatch.ml[1794,61555+22]..[1797,61643+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1794,61555+22]..[1794,61555+27])
            Ppat_var "tdefs" (typing/parmatch.ml[1794,61555+22]..[1794,61555+27])
          expression (typing/parmatch.ml[1794,61555+28]..[1797,61643+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1794,61555+28]..[1794,61555+32])
              Ppat_var "patl" (typing/parmatch.ml[1794,61555+28]..[1794,61555+32])
            expression (typing/parmatch.ml[1795,61590+2]..[1797,61643+50])
              Pexp_apply
              expression (typing/parmatch.ml[1795,61590+2]..[1795,61590+8])
                Pexp_ident "ignore" (typing/parmatch.ml[1795,61590+2]..[1795,61590+8])
              [
                <arg>
                Nolabel
                  expression (typing/parmatch.ml[1795,61590+9]..[1797,61643+50])
                    Pexp_apply
                    expression (typing/parmatch.ml[1795,61590+10]..[1795,61590+27])
                      Pexp_ident "pressure_variants" (typing/parmatch.ml[1795,61590+10]..[1795,61590+27])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1796,61618+12]..[1796,61618+24])
                          Pexp_construct "Some" (typing/parmatch.ml[1796,61618+13]..[1796,61618+17])
                          Some
                            expression (typing/parmatch.ml[1796,61618+18]..[1796,61618+23])
                              Pexp_ident "tdefs" (typing/parmatch.ml[1796,61618+18]..[1796,61618+23])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1797,61643+12]..[1797,61643+49])
                          Pexp_apply
                          expression (typing/parmatch.ml[1797,61643+13]..[1797,61643+21])
                            Pexp_ident "List.map" (typing/parmatch.ml[1797,61643+13]..[1797,61643+21])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1797,61643+22]..[1797,61643+43])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/parmatch.ml[1797,61643+27]..[1797,61643+28])
                                  Ppat_var "p" (typing/parmatch.ml[1797,61643+27]..[1797,61643+28])
                                expression (typing/parmatch.ml[1797,61643+32]..[1797,61643+42])
                                  Pexp_construct "::" (typing/parmatch.ml[1797,61643+33]..[1797,61643+42]) ghost
                                  Some
                                    expression (typing/parmatch.ml[1797,61643+33]..[1797,61643+42]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/parmatch.ml[1797,61643+33]..[1797,61643+34])
                                          Pexp_ident "p" (typing/parmatch.ml[1797,61643+33]..[1797,61643+34])
                                        expression (typing/parmatch.ml[1797,61643+36]..[1797,61643+42]) ghost
                                          Pexp_construct "::" (typing/parmatch.ml[1797,61643+36]..[1797,61643+42]) ghost
                                          Some
                                            expression (typing/parmatch.ml[1797,61643+36]..[1797,61643+42]) ghost
                                              Pexp_tuple
                                              [
                                                expression (typing/parmatch.ml[1797,61643+36]..[1797,61643+41])
                                                  Pexp_ident "omega" (typing/parmatch.ml[1797,61643+36]..[1797,61643+41])
                                                expression (typing/parmatch.ml[1797,61643+41]..[1797,61643+42]) ghost
                                                  Pexp_construct "[]" (typing/parmatch.ml[1797,61643+41]..[1797,61643+42]) ghost
                                                  None
                                              ]
                                      ]
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1797,61643+44]..[1797,61643+48])
                                Pexp_ident "patl" (typing/parmatch.ml[1797,61643+44]..[1797,61643+48])
                          ]
                    ]
              ]
    ]
  structure_item (typing/parmatch.ml[1799,61695+0]..[1812,62058+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1799,61695+4]..[1799,61695+44])
          Ppat_var "pressure_variants_in_computation_pattern" (typing/parmatch.ml[1799,61695+4]..[1799,61695+44])
        expression (typing/parmatch.ml[1799,61695+45]..[1812,62058+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1799,61695+45]..[1799,61695+50])
            Ppat_var "tdefs" (typing/parmatch.ml[1799,61695+45]..[1799,61695+50])
          expression (typing/parmatch.ml[1799,61695+51]..[1812,62058+33]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1799,61695+51]..[1799,61695+55])
              Ppat_var "patl" (typing/parmatch.ml[1799,61695+51]..[1799,61695+55])
            expression (typing/parmatch.ml[1800,61753+2]..[1812,62058+33])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/parmatch.ml[1800,61753+6]..[1800,61753+13])
                    Ppat_var "add_row" (typing/parmatch.ml[1800,61753+6]..[1800,61753+13])
                  expression (typing/parmatch.ml[1800,61753+14]..[1803,61818+24]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/parmatch.ml[1800,61753+14]..[1800,61753+17])
                      Ppat_var "pss" (typing/parmatch.ml[1800,61753+14]..[1800,61753+17])
                    expression (typing/parmatch.ml[1800,61753+18]..[1803,61818+24]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/parmatch.ml[1800,61753+18]..[1800,61753+23])
                        Ppat_var "p_opt" (typing/parmatch.ml[1800,61753+18]..[1800,61753+23])
                      expression (typing/parmatch.ml[1801,61779+4]..[1803,61818+24])
                        Pexp_match
                        expression (typing/parmatch.ml[1801,61779+10]..[1801,61779+15])
                          Pexp_ident "p_opt" (typing/parmatch.ml[1801,61779+10]..[1801,61779+15])
                        [
                          <case>
                            pattern (typing/parmatch.ml[1802,61800+6]..[1802,61800+10])
                              Ppat_construct "None" (typing/parmatch.ml[1802,61800+6]..[1802,61800+10])
                              None
                            expression (typing/parmatch.ml[1802,61800+14]..[1802,61800+17])
                              Pexp_ident "pss" (typing/parmatch.ml[1802,61800+14]..[1802,61800+17])
                          <case>
                            pattern (typing/parmatch.ml[1803,61818+6]..[1803,61818+12])
                              Ppat_construct "Some" (typing/parmatch.ml[1803,61818+6]..[1803,61818+10])
                              Some
                                []
                                pattern (typing/parmatch.ml[1803,61818+11]..[1803,61818+12])
                                  Ppat_var "p" (typing/parmatch.ml[1803,61818+11]..[1803,61818+12])
                            expression (typing/parmatch.ml[1803,61818+16]..[1803,61818+24])
                              Pexp_construct "::" (typing/parmatch.ml[1803,61818+18]..[1803,61818+20])
                              Some
                                expression (typing/parmatch.ml[1803,61818+16]..[1803,61818+24]) ghost
                                  Pexp_tuple
                                  [
                                    expression (typing/parmatch.ml[1803,61818+16]..[1803,61818+17])
                                      Pexp_ident "p" (typing/parmatch.ml[1803,61818+16]..[1803,61818+17])
                                    expression (typing/parmatch.ml[1803,61818+21]..[1803,61818+24])
                                      Pexp_ident "pss" (typing/parmatch.ml[1803,61818+21]..[1803,61818+24])
                                  ]
                        ]
              ]
              expression (typing/parmatch.ml[1805,61848+2]..[1812,62058+33])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/parmatch.ml[1805,61848+6]..[1805,61848+22])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[1805,61848+6]..[1805,61848+13])
                          Ppat_var "val_pss" (typing/parmatch.ml[1805,61848+6]..[1805,61848+13])
                        pattern (typing/parmatch.ml[1805,61848+15]..[1805,61848+22])
                          Ppat_var "exn_pss" (typing/parmatch.ml[1805,61848+15]..[1805,61848+22])
                      ]
                    expression (typing/parmatch.ml[1806,61873+4]..[1809,61998+19])
                      Pexp_apply
                      expression (typing/parmatch.ml[1806,61873+4]..[1806,61873+19])
                        Pexp_ident "List.fold_right" (typing/parmatch.ml[1806,61873+4]..[1806,61873+19])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1806,61873+20]..[1809,61998+5])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/parmatch.ml[1806,61873+25]..[1806,61873+28])
                              Ppat_var "pat" (typing/parmatch.ml[1806,61873+25]..[1806,61873+28])
                            expression (typing/parmatch.ml[1806,61873+29]..[1808,61959+38]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/parmatch.ml[1806,61873+29]..[1806,61873+41])
                                Ppat_tuple
                                [
                                  pattern (typing/parmatch.ml[1806,61873+30]..[1806,61873+34])
                                    Ppat_var "vpss" (typing/parmatch.ml[1806,61873+30]..[1806,61873+34])
                                  pattern (typing/parmatch.ml[1806,61873+36]..[1806,61873+40])
                                    Ppat_var "epss" (typing/parmatch.ml[1806,61873+36]..[1806,61873+40])
                                ]
                              expression (typing/parmatch.ml[1807,61917+6]..[1808,61959+38])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/parmatch.ml[1807,61917+10]..[1807,61917+18])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[1807,61917+11]..[1807,61917+13])
                                          Ppat_var "vp" (typing/parmatch.ml[1807,61917+11]..[1807,61917+13])
                                        pattern (typing/parmatch.ml[1807,61917+15]..[1807,61917+17])
                                          Ppat_var "ep" (typing/parmatch.ml[1807,61917+15]..[1807,61917+17])
                                      ]
                                    expression (typing/parmatch.ml[1807,61917+21]..[1807,61917+38])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1807,61917+21]..[1807,61917+34])
                                        Pexp_ident "split_pattern" (typing/parmatch.ml[1807,61917+21]..[1807,61917+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1807,61917+35]..[1807,61917+38])
                                            Pexp_ident "pat" (typing/parmatch.ml[1807,61917+35]..[1807,61917+38])
                                      ]
                                ]
                                expression (typing/parmatch.ml[1808,61959+6]..[1808,61959+38])
                                  Pexp_tuple
                                  [
                                    expression (typing/parmatch.ml[1808,61959+6]..[1808,61959+21])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1808,61959+6]..[1808,61959+13])
                                        Pexp_ident "add_row" (typing/parmatch.ml[1808,61959+6]..[1808,61959+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1808,61959+14]..[1808,61959+18])
                                            Pexp_ident "vpss" (typing/parmatch.ml[1808,61959+14]..[1808,61959+18])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1808,61959+19]..[1808,61959+21])
                                            Pexp_ident "vp" (typing/parmatch.ml[1808,61959+19]..[1808,61959+21])
                                      ]
                                    expression (typing/parmatch.ml[1808,61959+23]..[1808,61959+38])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1808,61959+23]..[1808,61959+30])
                                        Pexp_ident "add_row" (typing/parmatch.ml[1808,61959+23]..[1808,61959+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1808,61959+31]..[1808,61959+35])
                                            Pexp_ident "epss" (typing/parmatch.ml[1808,61959+31]..[1808,61959+35])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1808,61959+36]..[1808,61959+38])
                                            Pexp_ident "ep" (typing/parmatch.ml[1808,61959+36]..[1808,61959+38])
                                      ]
                                  ]
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1809,61998+6]..[1809,61998+10])
                            Pexp_ident "patl" (typing/parmatch.ml[1809,61998+6]..[1809,61998+10])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[1809,61998+11]..[1809,61998+19])
                            Pexp_tuple
                            [
                              expression (typing/parmatch.ml[1809,61998+12]..[1809,61998+14])
                                Pexp_construct "[]" (typing/parmatch.ml[1809,61998+12]..[1809,61998+14])
                                None
                              expression (typing/parmatch.ml[1809,61998+16]..[1809,61998+18])
                                Pexp_construct "[]" (typing/parmatch.ml[1809,61998+16]..[1809,61998+18])
                                None
                            ]
                      ]
                ]
                expression (typing/parmatch.ml[1811,62023+2]..[1812,62058+33])
                  Pexp_sequence
                  expression (typing/parmatch.ml[1811,62023+2]..[1811,62023+33])
                    Pexp_apply
                    expression (typing/parmatch.ml[1811,62023+2]..[1811,62023+19])
                      Pexp_ident "pressure_variants" (typing/parmatch.ml[1811,62023+2]..[1811,62023+19])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1811,62023+20]..[1811,62023+25])
                          Pexp_ident "tdefs" (typing/parmatch.ml[1811,62023+20]..[1811,62023+25])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1811,62023+26]..[1811,62023+33])
                          Pexp_ident "val_pss" (typing/parmatch.ml[1811,62023+26]..[1811,62023+33])
                    ]
                  expression (typing/parmatch.ml[1812,62058+2]..[1812,62058+33])
                    Pexp_apply
                    expression (typing/parmatch.ml[1812,62058+2]..[1812,62058+19])
                      Pexp_ident "pressure_variants" (typing/parmatch.ml[1812,62058+2]..[1812,62058+19])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1812,62058+20]..[1812,62058+25])
                          Pexp_ident "tdefs" (typing/parmatch.ml[1812,62058+20]..[1812,62058+25])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1812,62058+26]..[1812,62058+33])
                          Pexp_ident "exn_pss" (typing/parmatch.ml[1812,62058+26]..[1812,62058+33])
                    ]
    ]
  structure_item (typing/parmatch.ml[1823,62272+0]..[1826,62369+63])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[1823,62272+8]..[1823,62272+22])
          Ppat_var "initial_matrix" (typing/parmatch.ml[1823,62272+8]..[1823,62272+22])
        expression (typing/parmatch.ml[1823,62272+25]..[1826,62369+63])
          Pexp_function
          [
            <case>
              pattern (typing/parmatch.ml[1824,62306+4]..[1824,62306+6])
                Ppat_construct "[]" (typing/parmatch.ml[1824,62306+4]..[1824,62306+6])
                None
              expression (typing/parmatch.ml[1824,62306+10]..[1824,62306+12])
                Pexp_construct "[]" (typing/parmatch.ml[1824,62306+10]..[1824,62306+12])
                None
            <case>
              pattern (typing/parmatch.ml[1825,62319+4]..[1825,62319+27])
                Ppat_construct "::" (typing/parmatch.ml[1825,62319+21]..[1825,62319+23])
                Some
                  []
                  pattern (typing/parmatch.ml[1825,62319+4]..[1825,62319+27]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1825,62319+4]..[1825,62319+20])
                        Ppat_record Closed
                        [
                          "c_guard" (typing/parmatch.ml[1825,62319+5]..[1825,62319+12])
                            pattern (typing/parmatch.ml[1825,62319+13]..[1825,62319+19])
                              Ppat_construct "Some" (typing/parmatch.ml[1825,62319+13]..[1825,62319+17])
                              Some
                                []
                                pattern (typing/parmatch.ml[1825,62319+18]..[1825,62319+19])
                                  Ppat_any
                        ]
                      pattern (typing/parmatch.ml[1825,62319+24]..[1825,62319+27])
                        Ppat_var "rem" (typing/parmatch.ml[1825,62319+24]..[1825,62319+27])
                    ]
              expression (typing/parmatch.ml[1825,62319+31]..[1825,62319+49])
                Pexp_apply
                expression (typing/parmatch.ml[1825,62319+31]..[1825,62319+45])
                  Pexp_ident "initial_matrix" (typing/parmatch.ml[1825,62319+31]..[1825,62319+45])
                [
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[1825,62319+46]..[1825,62319+49])
                      Pexp_ident "rem" (typing/parmatch.ml[1825,62319+46]..[1825,62319+49])
                ]
            <case>
              pattern (typing/parmatch.ml[1826,62369+4]..[1826,62369+34])
                Ppat_construct "::" (typing/parmatch.ml[1826,62369+28]..[1826,62369+30])
                Some
                  []
                  pattern (typing/parmatch.ml[1826,62369+4]..[1826,62369+34]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1826,62369+4]..[1826,62369+27])
                        Ppat_record Closed
                        [
                          "c_guard" (typing/parmatch.ml[1826,62369+5]..[1826,62369+12])
                            pattern (typing/parmatch.ml[1826,62369+13]..[1826,62369+17])
                              Ppat_construct "None" (typing/parmatch.ml[1826,62369+13]..[1826,62369+17])
                              None
                          "c_lhs" (typing/parmatch.ml[1826,62369+19]..[1826,62369+24])
                            pattern (typing/parmatch.ml[1826,62369+25]..[1826,62369+26])
                              Ppat_var "p" (typing/parmatch.ml[1826,62369+25]..[1826,62369+26])
                        ]
                      pattern (typing/parmatch.ml[1826,62369+31]..[1826,62369+34])
                        Ppat_var "rem" (typing/parmatch.ml[1826,62369+31]..[1826,62369+34])
                    ]
              expression (typing/parmatch.ml[1826,62369+38]..[1826,62369+63])
                Pexp_construct "::" (typing/parmatch.ml[1826,62369+42]..[1826,62369+44])
                Some
                  expression (typing/parmatch.ml[1826,62369+38]..[1826,62369+63]) ghost
                    Pexp_tuple
                    [
                      expression (typing/parmatch.ml[1826,62369+38]..[1826,62369+41])
                        Pexp_construct "::" (typing/parmatch.ml[1826,62369+39]..[1826,62369+41]) ghost
                        Some
                          expression (typing/parmatch.ml[1826,62369+39]..[1826,62369+41]) ghost
                            Pexp_tuple
                            [
                              expression (typing/parmatch.ml[1826,62369+39]..[1826,62369+40])
                                Pexp_ident "p" (typing/parmatch.ml[1826,62369+39]..[1826,62369+40])
                              expression (typing/parmatch.ml[1826,62369+40]..[1826,62369+41]) ghost
                                Pexp_construct "[]" (typing/parmatch.ml[1826,62369+40]..[1826,62369+41]) ghost
                                None
                            ]
                      expression (typing/parmatch.ml[1826,62369+45]..[1826,62369+63])
                        Pexp_apply
                        expression (typing/parmatch.ml[1826,62369+45]..[1826,62369+59])
                          Pexp_ident "initial_matrix" (typing/parmatch.ml[1826,62369+45]..[1826,62369+59])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1826,62369+60]..[1826,62369+63])
                              Pexp_ident "rem" (typing/parmatch.ml[1826,62369+60]..[1826,62369+63])
                        ]
                    ]
          ]
    ]
  structure_item (typing/parmatch.ml[1832,62527+0]..[1837,62679+39])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[1832,62527+8]..[1832,62527+28])
          Ppat_var "initial_only_guarded" (typing/parmatch.ml[1832,62527+8]..[1832,62527+28])
        expression (typing/parmatch.ml[1832,62527+31]..[1837,62679+39])
          Pexp_function
          [
            <case>
              pattern (typing/parmatch.ml[1833,62567+4]..[1833,62567+6])
                Ppat_construct "[]" (typing/parmatch.ml[1833,62567+4]..[1833,62567+6])
                None
              expression (typing/parmatch.ml[1833,62567+10]..[1833,62567+12])
                Pexp_construct "[]" (typing/parmatch.ml[1833,62567+10]..[1833,62567+12])
                None
            <case>
              pattern (typing/parmatch.ml[1834,62580+4]..[1834,62580+31])
                Ppat_construct "::" (typing/parmatch.ml[1834,62580+25]..[1834,62580+27])
                Some
                  []
                  pattern (typing/parmatch.ml[1834,62580+4]..[1834,62580+31]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1834,62580+4]..[1834,62580+24])
                        Ppat_record Open
                        [
                          "c_guard" (typing/parmatch.ml[1834,62580+6]..[1834,62580+13])
                            pattern (typing/parmatch.ml[1834,62580+16]..[1834,62580+20])
                              Ppat_construct "None" (typing/parmatch.ml[1834,62580+16]..[1834,62580+20])
                              None
                        ]
                      pattern (typing/parmatch.ml[1834,62580+28]..[1834,62580+31])
                        Ppat_var "rem" (typing/parmatch.ml[1834,62580+28]..[1834,62580+31])
                    ]
              expression (typing/parmatch.ml[1835,62615+6]..[1835,62615+30])
                Pexp_apply
                expression (typing/parmatch.ml[1835,62615+6]..[1835,62615+26])
                  Pexp_ident "initial_only_guarded" (typing/parmatch.ml[1835,62615+6]..[1835,62615+26])
                [
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[1835,62615+27]..[1835,62615+30])
                      Pexp_ident "rem" (typing/parmatch.ml[1835,62615+27]..[1835,62615+30])
                ]
            <case>
              pattern (typing/parmatch.ml[1836,62646+4]..[1836,62646+29])
                Ppat_construct "::" (typing/parmatch.ml[1836,62646+23]..[1836,62646+25])
                Some
                  []
                  pattern (typing/parmatch.ml[1836,62646+4]..[1836,62646+29]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1836,62646+4]..[1836,62646+22])
                        Ppat_record Open
                        [
                          "c_lhs" (typing/parmatch.ml[1836,62646+6]..[1836,62646+11])
                            pattern (typing/parmatch.ml[1836,62646+14]..[1836,62646+17])
                              Ppat_var "pat" (typing/parmatch.ml[1836,62646+14]..[1836,62646+17])
                        ]
                      pattern (typing/parmatch.ml[1836,62646+26]..[1836,62646+29])
                        Ppat_var "rem" (typing/parmatch.ml[1836,62646+26]..[1836,62646+29])
                    ]
              expression (typing/parmatch.ml[1837,62679+6]..[1837,62679+39])
                Pexp_construct "::" (typing/parmatch.ml[1837,62679+12]..[1837,62679+14])
                Some
                  expression (typing/parmatch.ml[1837,62679+6]..[1837,62679+39]) ghost
                    Pexp_tuple
                    [
                      expression (typing/parmatch.ml[1837,62679+6]..[1837,62679+11])
                        Pexp_construct "::" (typing/parmatch.ml[1837,62679+7]..[1837,62679+11]) ghost
                        Some
                          expression (typing/parmatch.ml[1837,62679+7]..[1837,62679+11]) ghost
                            Pexp_tuple
                            [
                              expression (typing/parmatch.ml[1837,62679+7]..[1837,62679+10])
                                Pexp_ident "pat" (typing/parmatch.ml[1837,62679+7]..[1837,62679+10])
                              expression (typing/parmatch.ml[1837,62679+10]..[1837,62679+11]) ghost
                                Pexp_construct "[]" (typing/parmatch.ml[1837,62679+10]..[1837,62679+11]) ghost
                                None
                            ]
                      expression (typing/parmatch.ml[1837,62679+15]..[1837,62679+39])
                        Pexp_apply
                        expression (typing/parmatch.ml[1837,62679+15]..[1837,62679+35])
                          Pexp_ident "initial_only_guarded" (typing/parmatch.ml[1837,62679+15]..[1837,62679+35])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1837,62679+36]..[1837,62679+39])
                              Pexp_ident "rem" (typing/parmatch.ml[1837,62679+36]..[1837,62679+39])
                        ]
                    ]
          ]
    ]
  structure_item (typing/parmatch.ml[1845,62869+0]..[1903,64809+3])
    Pstr_module
    "Conv" (typing/parmatch.ml[1845,62869+7]..[1845,62869+11])
      module_expr (typing/parmatch.ml[1845,62869+14]..[1903,64809+3])
        Pmod_structure
        [
          structure_item (typing/parmatch.ml[1846,62890+2]..[1846,62890+16])
            Pstr_open Fresh
            module_expr (typing/parmatch.ml[1846,62890+7]..[1846,62890+16])
              Pmod_ident "Parsetree" (typing/parmatch.ml[1846,62890+7]..[1846,62890+16])
          structure_item (typing/parmatch.ml[1847,62907+2]..[1847,62907+41])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/parmatch.ml[1847,62907+6]..[1847,62907+11])
                  Ppat_var "mkpat" (typing/parmatch.ml[1847,62907+6]..[1847,62907+11])
                expression (typing/parmatch.ml[1847,62907+12]..[1847,62907+41]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/parmatch.ml[1847,62907+12]..[1847,62907+16])
                    Ppat_var "desc" (typing/parmatch.ml[1847,62907+12]..[1847,62907+16])
                  expression (typing/parmatch.ml[1847,62907+19]..[1847,62907+41])
                    Pexp_apply
                    expression (typing/parmatch.ml[1847,62907+19]..[1847,62907+36])
                      Pexp_ident "Ast_helper.Pat.mk" (typing/parmatch.ml[1847,62907+19]..[1847,62907+36])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1847,62907+37]..[1847,62907+41])
                          Pexp_ident "desc" (typing/parmatch.ml[1847,62907+37]..[1847,62907+41])
                    ]
            ]
          structure_item (typing/parmatch.ml[1849,62950+2]..[1849,62950+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/parmatch.ml[1849,62950+6]..[1849,62950+18])
                  Ppat_var "name_counter" (typing/parmatch.ml[1849,62950+6]..[1849,62950+18])
                expression (typing/parmatch.ml[1849,62950+21]..[1849,62950+26])
                  Pexp_apply
                  expression (typing/parmatch.ml[1849,62950+21]..[1849,62950+24])
                    Pexp_ident "ref" (typing/parmatch.ml[1849,62950+21]..[1849,62950+24])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[1849,62950+25]..[1849,62950+26])
                        Pexp_constant PConst_int (0,None)
                  ]
            ]
          structure_item (typing/parmatch.ml[1850,62977+2]..[1853,63070+39])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/parmatch.ml[1850,62977+6]..[1850,62977+11])
                  Ppat_var "fresh" (typing/parmatch.ml[1850,62977+6]..[1850,62977+11])
                expression (typing/parmatch.ml[1850,62977+12]..[1853,63070+39]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/parmatch.ml[1850,62977+12]..[1850,62977+16])
                    Ppat_var "name" (typing/parmatch.ml[1850,62977+12]..[1850,62977+16])
                  expression (typing/parmatch.ml[1851,62996+4]..[1853,63070+39])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[1851,62996+8]..[1851,62996+15])
                          Ppat_var "current" (typing/parmatch.ml[1851,62996+8]..[1851,62996+15])
                        expression (typing/parmatch.ml[1851,62996+18]..[1851,62996+31])
                          Pexp_apply
                          expression (typing/parmatch.ml[1851,62996+18]..[1851,62996+19])
                            Pexp_ident "!" (typing/parmatch.ml[1851,62996+18]..[1851,62996+19])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1851,62996+19]..[1851,62996+31])
                                Pexp_ident "name_counter" (typing/parmatch.ml[1851,62996+19]..[1851,62996+31])
                          ]
                    ]
                    expression (typing/parmatch.ml[1852,63031+4]..[1853,63070+39])
                      Pexp_sequence
                      expression (typing/parmatch.ml[1852,63031+4]..[1852,63031+37])
                        Pexp_apply
                        expression (typing/parmatch.ml[1852,63031+17]..[1852,63031+19])
                          Pexp_ident ":=" (typing/parmatch.ml[1852,63031+17]..[1852,63031+19])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1852,63031+4]..[1852,63031+16])
                              Pexp_ident "name_counter" (typing/parmatch.ml[1852,63031+4]..[1852,63031+16])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1852,63031+20]..[1852,63031+37])
                              Pexp_apply
                              expression (typing/parmatch.ml[1852,63031+34]..[1852,63031+35])
                                Pexp_ident "+" (typing/parmatch.ml[1852,63031+34]..[1852,63031+35])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1852,63031+20]..[1852,63031+33])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1852,63031+20]..[1852,63031+21])
                                      Pexp_ident "!" (typing/parmatch.ml[1852,63031+20]..[1852,63031+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1852,63031+21]..[1852,63031+33])
                                          Pexp_ident "name_counter" (typing/parmatch.ml[1852,63031+21]..[1852,63031+33])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1852,63031+36]..[1852,63031+37])
                                    Pexp_constant PConst_int (1,None)
                              ]
                        ]
                      expression (typing/parmatch.ml[1853,63070+4]..[1853,63070+39])
                        Pexp_apply
                        expression (typing/parmatch.ml[1853,63070+9]..[1853,63070+10])
                          Pexp_ident "^" (typing/parmatch.ml[1853,63070+9]..[1853,63070+10])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1853,63070+4]..[1853,63070+8])
                              Pexp_constant PConst_string("#$",(typing/parmatch.ml[1853,63070+5]..[1853,63070+7]),None)
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[1853,63070+11]..[1853,63070+39])
                              Pexp_apply
                              expression (typing/parmatch.ml[1853,63070+16]..[1853,63070+17])
                                Pexp_ident "^" (typing/parmatch.ml[1853,63070+16]..[1853,63070+17])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1853,63070+11]..[1853,63070+15])
                                    Pexp_ident "name" (typing/parmatch.ml[1853,63070+11]..[1853,63070+15])
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1853,63070+18]..[1853,63070+39])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1853,63070+18]..[1853,63070+31])
                                      Pexp_ident "Int.to_string" (typing/parmatch.ml[1853,63070+18]..[1853,63070+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1853,63070+32]..[1853,63070+39])
                                          Pexp_ident "current" (typing/parmatch.ml[1853,63070+32]..[1853,63070+39])
                                    ]
                              ]
                        ]
            ]
          structure_item (typing/parmatch.ml[1855,63111+2]..[1902,64783+25])
            Pstr_value Nonrec
            [
              <def>
                pattern (typing/parmatch.ml[1855,63111+6]..[1855,63111+10])
                  Ppat_var "conv" (typing/parmatch.ml[1855,63111+6]..[1855,63111+10])
                expression (typing/parmatch.ml[1855,63111+11]..[1902,64783+25]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/parmatch.ml[1855,63111+11]..[1855,63111+16])
                    Ppat_var "typed" (typing/parmatch.ml[1855,63111+11]..[1855,63111+16])
                  expression (typing/parmatch.ml[1856,63130+4]..[1902,64783+25])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[1856,63130+8]..[1856,63130+15])
                          Ppat_var "constrs" (typing/parmatch.ml[1856,63130+8]..[1856,63130+15])
                        expression (typing/parmatch.ml[1856,63130+18]..[1856,63130+34])
                          Pexp_apply
                          expression (typing/parmatch.ml[1856,63130+18]..[1856,63130+32])
                            Pexp_ident "Hashtbl.create" (typing/parmatch.ml[1856,63130+18]..[1856,63130+32])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1856,63130+33]..[1856,63130+34])
                                Pexp_constant PConst_int (7,None)
                          ]
                    ]
                    expression (typing/parmatch.ml[1857,63168+4]..[1902,64783+25])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (typing/parmatch.ml[1857,63168+8]..[1857,63168+14])
                            Ppat_var "labels" (typing/parmatch.ml[1857,63168+8]..[1857,63168+14])
                          expression (typing/parmatch.ml[1857,63168+17]..[1857,63168+33])
                            Pexp_apply
                            expression (typing/parmatch.ml[1857,63168+17]..[1857,63168+31])
                              Pexp_ident "Hashtbl.create" (typing/parmatch.ml[1857,63168+17]..[1857,63168+31])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1857,63168+32]..[1857,63168+33])
                                  Pexp_constant PConst_int (7,None)
                            ]
                      ]
                      expression (typing/parmatch.ml[1858,63205+4]..[1902,64783+25])
                        Pexp_let Rec
                        [
                          <def>
                            pattern (typing/parmatch.ml[1858,63205+12]..[1858,63205+16])
                              Ppat_var "loop" (typing/parmatch.ml[1858,63205+12]..[1858,63205+16])
                            expression (typing/parmatch.ml[1858,63205+17]..[1899,64712+36]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/parmatch.ml[1858,63205+17]..[1858,63205+20])
                                Ppat_var "pat" (typing/parmatch.ml[1858,63205+17]..[1858,63205+20])
                              expression (typing/parmatch.ml[1859,63228+6]..[1899,64712+36])
                                Pexp_match
                                expression (typing/parmatch.ml[1859,63228+12]..[1859,63228+24])
                                  Pexp_field
                                  expression (typing/parmatch.ml[1859,63228+12]..[1859,63228+15])
                                    Pexp_ident "pat" (typing/parmatch.ml[1859,63228+12]..[1859,63228+15])
                                  "pat_desc" (typing/parmatch.ml[1859,63228+16]..[1859,63228+24])
                                [
                                  <case>
                                    pattern (typing/parmatch.ml[1860,63258+8]..[1860,63258+25])
                                      Ppat_construct "Tpat_or" (typing/parmatch.ml[1860,63258+8]..[1860,63258+15])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[1860,63258+16]..[1860,63258+25])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[1860,63258+17]..[1860,63258+19])
                                              Ppat_var "pa" (typing/parmatch.ml[1860,63258+17]..[1860,63258+19])
                                            pattern (typing/parmatch.ml[1860,63258+20]..[1860,63258+22])
                                              Ppat_var "pb" (typing/parmatch.ml[1860,63258+20]..[1860,63258+22])
                                            pattern (typing/parmatch.ml[1860,63258+23]..[1860,63258+24])
                                              Ppat_any
                                          ]
                                    expression (typing/parmatch.ml[1861,63287+10]..[1861,63287+44])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1861,63287+10]..[1861,63287+15])
                                        Pexp_ident "mkpat" (typing/parmatch.ml[1861,63287+10]..[1861,63287+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1861,63287+16]..[1861,63287+44])
                                            Pexp_construct "Ppat_or" (typing/parmatch.ml[1861,63287+17]..[1861,63287+24])
                                            Some
                                              expression (typing/parmatch.ml[1861,63287+25]..[1861,63287+43])
                                                Pexp_tuple
                                                [
                                                  expression (typing/parmatch.ml[1861,63287+26]..[1861,63287+33])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1861,63287+26]..[1861,63287+30])
                                                      Pexp_ident "loop" (typing/parmatch.ml[1861,63287+26]..[1861,63287+30])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1861,63287+31]..[1861,63287+33])
                                                          Pexp_ident "pa" (typing/parmatch.ml[1861,63287+31]..[1861,63287+33])
                                                    ]
                                                  expression (typing/parmatch.ml[1861,63287+35]..[1861,63287+42])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1861,63287+35]..[1861,63287+39])
                                                      Pexp_ident "loop" (typing/parmatch.ml[1861,63287+35]..[1861,63287+39])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1861,63287+40]..[1861,63287+42])
                                                          Pexp_ident "pb" (typing/parmatch.ml[1861,63287+40]..[1861,63287+42])
                                                    ]
                                                ]
                                      ]
                                  <case>
                                    pattern (typing/parmatch.ml[1862,63332+8]..[1862,63332+49])
                                      Ppat_construct "Tpat_var" (typing/parmatch.ml[1862,63332+8]..[1862,63332+16])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[1862,63332+17]..[1862,63332+49])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[1862,63332+18]..[1862,63332+19])
                                              Ppat_any
                                            pattern (typing/parmatch.ml[1862,63332+21]..[1862,63332+48])
                                              Ppat_alias "nm" (typing/parmatch.ml[1862,63332+45]..[1862,63332+47])
                                              pattern (typing/parmatch.ml[1862,63332+22]..[1862,63332+41])
                                                Ppat_record Closed
                                                [
                                                  "txt" (typing/parmatch.ml[1862,63332+23]..[1862,63332+26])
                                                    pattern (typing/parmatch.ml[1862,63332+27]..[1862,63332+40])
                                                      Ppat_constant PConst_string("*extension*",(typing/parmatch.ml[1862,63332+28]..[1862,63332+39]),None)
                                                ]
                                          ]
                                    expression (typing/parmatch.ml[1863,63399+10]..[1863,63399+29])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1863,63399+10]..[1863,63399+15])
                                        Pexp_ident "mkpat" (typing/parmatch.ml[1863,63399+10]..[1863,63399+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1863,63399+16]..[1863,63399+29])
                                            Pexp_construct "Ppat_var" (typing/parmatch.ml[1863,63399+17]..[1863,63399+25])
                                            Some
                                              expression (typing/parmatch.ml[1863,63399+26]..[1863,63399+28])
                                                Pexp_ident "nm" (typing/parmatch.ml[1863,63399+26]..[1863,63399+28])
                                      ]
                                  <case>
                                    pattern (typing/parmatch.ml[1864,63429+8]..[1865,63446+18])
                                      Ppat_or
                                      pattern (typing/parmatch.ml[1864,63429+8]..[1864,63429+16])
                                        Ppat_construct "Tpat_any" (typing/parmatch.ml[1864,63429+8]..[1864,63429+16])
                                        None
                                      pattern (typing/parmatch.ml[1865,63446+8]..[1865,63446+18])
                                        Ppat_construct "Tpat_var" (typing/parmatch.ml[1865,63446+8]..[1865,63446+16])
                                        Some
                                          []
                                          pattern (typing/parmatch.ml[1865,63446+17]..[1865,63446+18])
                                            Ppat_any
                                    expression (typing/parmatch.ml[1866,63468+10]..[1866,63468+24])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1866,63468+10]..[1866,63468+15])
                                        Pexp_ident "mkpat" (typing/parmatch.ml[1866,63468+10]..[1866,63468+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1866,63468+16]..[1866,63468+24])
                                            Pexp_construct "Ppat_any" (typing/parmatch.ml[1866,63468+16]..[1866,63468+24])
                                            None
                                      ]
                                  <case>
                                    pattern (typing/parmatch.ml[1867,63493+8]..[1867,63493+23])
                                      Ppat_construct "Tpat_constant" (typing/parmatch.ml[1867,63493+8]..[1867,63493+21])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[1867,63493+22]..[1867,63493+23])
                                          Ppat_var "c" (typing/parmatch.ml[1867,63493+22]..[1867,63493+23])
                                    expression (typing/parmatch.ml[1868,63520+10]..[1868,63520+54])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1868,63520+10]..[1868,63520+15])
                                        Pexp_ident "mkpat" (typing/parmatch.ml[1868,63520+10]..[1868,63520+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1868,63520+16]..[1868,63520+54])
                                            Pexp_construct "Ppat_constant" (typing/parmatch.ml[1868,63520+17]..[1868,63520+30])
                                            Some
                                              expression (typing/parmatch.ml[1868,63520+31]..[1868,63520+53])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[1868,63520+32]..[1868,63520+50])
                                                  Pexp_ident "Untypeast.constant" (typing/parmatch.ml[1868,63520+32]..[1868,63520+50])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1868,63520+51]..[1868,63520+52])
                                                      Pexp_ident "c" (typing/parmatch.ml[1868,63520+51]..[1868,63520+52])
                                                ]
                                      ]
                                  <case>
                                    pattern (typing/parmatch.ml[1869,63575+8]..[1869,63575+26])
                                      Ppat_construct "Tpat_alias" (typing/parmatch.ml[1869,63575+8]..[1869,63575+18])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[1869,63575+19]..[1869,63575+26])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[1869,63575+20]..[1869,63575+21])
                                              Ppat_var "p" (typing/parmatch.ml[1869,63575+20]..[1869,63575+21])
                                            pattern (typing/parmatch.ml[1869,63575+22]..[1869,63575+23])
                                              Ppat_any
                                            pattern (typing/parmatch.ml[1869,63575+24]..[1869,63575+25])
                                              Ppat_any
                                          ]
                                    expression (typing/parmatch.ml[1869,63575+30]..[1869,63575+36])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1869,63575+30]..[1869,63575+34])
                                        Pexp_ident "loop" (typing/parmatch.ml[1869,63575+30]..[1869,63575+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1869,63575+35]..[1869,63575+36])
                                            Pexp_ident "p" (typing/parmatch.ml[1869,63575+35]..[1869,63575+36])
                                      ]
                                  <case>
                                    pattern (typing/parmatch.ml[1870,63612+8]..[1870,63612+22])
                                      Ppat_construct "Tpat_tuple" (typing/parmatch.ml[1870,63612+8]..[1870,63612+18])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[1870,63612+19]..[1870,63612+22])
                                          Ppat_var "lst" (typing/parmatch.ml[1870,63612+19]..[1870,63612+22])
                                    expression (typing/parmatch.ml[1871,63638+10]..[1871,63638+48])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1871,63638+10]..[1871,63638+15])
                                        Pexp_ident "mkpat" (typing/parmatch.ml[1871,63638+10]..[1871,63638+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1871,63638+16]..[1871,63638+48])
                                            Pexp_construct "Ppat_tuple" (typing/parmatch.ml[1871,63638+17]..[1871,63638+27])
                                            Some
                                              expression (typing/parmatch.ml[1871,63638+28]..[1871,63638+47])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[1871,63638+29]..[1871,63638+37])
                                                  Pexp_ident "List.map" (typing/parmatch.ml[1871,63638+29]..[1871,63638+37])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1871,63638+38]..[1871,63638+42])
                                                      Pexp_ident "loop" (typing/parmatch.ml[1871,63638+38]..[1871,63638+42])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1871,63638+43]..[1871,63638+46])
                                                      Pexp_ident "lst" (typing/parmatch.ml[1871,63638+43]..[1871,63638+46])
                                                ]
                                      ]
                                  <case>
                                    pattern (typing/parmatch.ml[1872,63687+8]..[1872,63687+47])
                                      Ppat_construct "Tpat_construct" (typing/parmatch.ml[1872,63687+8]..[1872,63687+22])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[1872,63687+23]..[1872,63687+47])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[1872,63687+24]..[1872,63687+32])
                                              Ppat_var "cstr_lid" (typing/parmatch.ml[1872,63687+24]..[1872,63687+32])
                                            pattern (typing/parmatch.ml[1872,63687+34]..[1872,63687+38])
                                              Ppat_var "cstr" (typing/parmatch.ml[1872,63687+34]..[1872,63687+38])
                                            pattern (typing/parmatch.ml[1872,63687+40]..[1872,63687+43])
                                              Ppat_var "lst" (typing/parmatch.ml[1872,63687+40]..[1872,63687+43])
                                            pattern (typing/parmatch.ml[1872,63687+45]..[1872,63687+46])
                                              Ppat_any
                                          ]
                                    expression (typing/parmatch.ml[1873,63738+10]..[1882,64076+42])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/parmatch.ml[1873,63738+14]..[1873,63738+16])
                                            Ppat_var "id" (typing/parmatch.ml[1873,63738+14]..[1873,63738+16])
                                          expression (typing/parmatch.ml[1873,63738+19]..[1873,63738+39])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[1873,63738+19]..[1873,63738+24])
                                              Pexp_ident "fresh" (typing/parmatch.ml[1873,63738+19]..[1873,63738+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1873,63738+25]..[1873,63738+39])
                                                  Pexp_field
                                                  expression (typing/parmatch.ml[1873,63738+25]..[1873,63738+29])
                                                    Pexp_ident "cstr" (typing/parmatch.ml[1873,63738+25]..[1873,63738+29])
                                                  "cstr_name" (typing/parmatch.ml[1873,63738+30]..[1873,63738+39])
                                            ]
                                      ]
                                      expression (typing/parmatch.ml[1874,63781+10]..[1882,64076+42])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/parmatch.ml[1874,63781+14]..[1874,63781+17])
                                              Ppat_var "lid" (typing/parmatch.ml[1874,63781+14]..[1874,63781+17])
                                            expression (typing/parmatch.ml[1874,63781+20]..[1874,63781+63])
                                              Pexp_record
                                              [
                                                "txt" (typing/parmatch.ml[1874,63781+36]..[1874,63781+39])
                                                  expression (typing/parmatch.ml[1874,63781+42]..[1874,63781+61])
                                                    Pexp_construct "Longident.Lident" (typing/parmatch.ml[1874,63781+42]..[1874,63781+58])
                                                    Some
                                                      expression (typing/parmatch.ml[1874,63781+59]..[1874,63781+61])
                                                        Pexp_ident "id" (typing/parmatch.ml[1874,63781+59]..[1874,63781+61])
                                              ]
                                              Some
                                                expression (typing/parmatch.ml[1874,63781+22]..[1874,63781+30])
                                                  Pexp_ident "cstr_lid" (typing/parmatch.ml[1874,63781+22]..[1874,63781+30])
                                        ]
                                        expression (typing/parmatch.ml[1875,63848+10]..[1882,64076+42])
                                          Pexp_sequence
                                          expression (typing/parmatch.ml[1875,63848+10]..[1875,63848+37])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[1875,63848+10]..[1875,63848+21])
                                              Pexp_ident "Hashtbl.add" (typing/parmatch.ml[1875,63848+10]..[1875,63848+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1875,63848+22]..[1875,63848+29])
                                                  Pexp_ident "constrs" (typing/parmatch.ml[1875,63848+22]..[1875,63848+29])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1875,63848+30]..[1875,63848+32])
                                                  Pexp_ident "id" (typing/parmatch.ml[1875,63848+30]..[1875,63848+32])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1875,63848+33]..[1875,63848+37])
                                                  Pexp_ident "cstr" (typing/parmatch.ml[1875,63848+33]..[1875,63848+37])
                                            ]
                                          expression (typing/parmatch.ml[1876,63887+10]..[1882,64076+42])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/parmatch.ml[1876,63887+14]..[1876,63887+17])
                                                  Ppat_var "arg" (typing/parmatch.ml[1876,63887+14]..[1876,63887+17])
                                                expression (typing/parmatch.ml[1877,63907+12]..[1880,64008+54])
                                                  Pexp_match
                                                  expression (typing/parmatch.ml[1877,63907+18]..[1877,63907+35])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1877,63907+18]..[1877,63907+26])
                                                      Pexp_ident "List.map" (typing/parmatch.ml[1877,63907+18]..[1877,63907+26])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1877,63907+27]..[1877,63907+31])
                                                          Pexp_ident "loop" (typing/parmatch.ml[1877,63907+27]..[1877,63907+31])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1877,63907+32]..[1877,63907+35])
                                                          Pexp_ident "lst" (typing/parmatch.ml[1877,63907+32]..[1877,63907+35])
                                                    ]
                                                  [
                                                    <case>
                                                      pattern (typing/parmatch.ml[1878,63948+14]..[1878,63948+16])
                                                        Ppat_construct "[]" (typing/parmatch.ml[1878,63948+14]..[1878,63948+16])
                                                        None
                                                      expression (typing/parmatch.ml[1878,63948+21]..[1878,63948+25])
                                                        Pexp_construct "None" (typing/parmatch.ml[1878,63948+21]..[1878,63948+25])
                                                        None
                                                    <case>
                                                      pattern (typing/parmatch.ml[1879,63974+14]..[1879,63974+17])
                                                        Ppat_construct "::" (typing/parmatch.ml[1879,63974+15]..[1879,63974+17]) ghost
                                                        Some
                                                          []
                                                          pattern (typing/parmatch.ml[1879,63974+15]..[1879,63974+17]) ghost
                                                            Ppat_tuple
                                                            [
                                                              pattern (typing/parmatch.ml[1879,63974+15]..[1879,63974+16])
                                                                Ppat_var "p" (typing/parmatch.ml[1879,63974+15]..[1879,63974+16])
                                                              pattern (typing/parmatch.ml[1879,63974+16]..[1879,63974+17]) ghost
                                                                Ppat_construct "[]" (typing/parmatch.ml[1879,63974+16]..[1879,63974+17]) ghost
                                                                None
                                                            ]
                                                      expression (typing/parmatch.ml[1879,63974+21]..[1879,63974+33])
                                                        Pexp_construct "Some" (typing/parmatch.ml[1879,63974+21]..[1879,63974+25])
                                                        Some
                                                          expression (typing/parmatch.ml[1879,63974+26]..[1879,63974+33])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/parmatch.ml[1879,63974+27]..[1879,63974+29])
                                                                Pexp_construct "[]" (typing/parmatch.ml[1879,63974+27]..[1879,63974+29])
                                                                None
                                                              expression (typing/parmatch.ml[1879,63974+31]..[1879,63974+32])
                                                                Pexp_ident "p" (typing/parmatch.ml[1879,63974+31]..[1879,63974+32])
                                                            ]
                                                    <case>
                                                      pattern (typing/parmatch.ml[1880,64008+14]..[1880,64008+17])
                                                        Ppat_var "lst" (typing/parmatch.ml[1880,64008+14]..[1880,64008+17])
                                                      expression (typing/parmatch.ml[1880,64008+21]..[1880,64008+54])
                                                        Pexp_construct "Some" (typing/parmatch.ml[1880,64008+21]..[1880,64008+25])
                                                        Some
                                                          expression (typing/parmatch.ml[1880,64008+26]..[1880,64008+54])
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/parmatch.ml[1880,64008+27]..[1880,64008+29])
                                                                Pexp_construct "[]" (typing/parmatch.ml[1880,64008+27]..[1880,64008+29])
                                                                None
                                                              expression (typing/parmatch.ml[1880,64008+31]..[1880,64008+53])
                                                                Pexp_apply
                                                                expression (typing/parmatch.ml[1880,64008+31]..[1880,64008+36])
                                                                  Pexp_ident "mkpat" (typing/parmatch.ml[1880,64008+31]..[1880,64008+36])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/parmatch.ml[1880,64008+37]..[1880,64008+53])
                                                                      Pexp_construct "Ppat_tuple" (typing/parmatch.ml[1880,64008+38]..[1880,64008+48])
                                                                      Some
expression (typing/parmatch.ml[1880,64008+49]..[1880,64008+52])
  Pexp_ident "lst" (typing/parmatch.ml[1880,64008+49]..[1880,64008+52])
                                                                ]
                                                            ]
                                                  ]
                                            ]
                                            expression (typing/parmatch.ml[1882,64076+10]..[1882,64076+42])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[1882,64076+10]..[1882,64076+15])
                                                Pexp_ident "mkpat" (typing/parmatch.ml[1882,64076+10]..[1882,64076+15])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[1882,64076+16]..[1882,64076+42])
                                                    Pexp_construct "Ppat_construct" (typing/parmatch.ml[1882,64076+17]..[1882,64076+31])
                                                    Some
                                                      expression (typing/parmatch.ml[1882,64076+31]..[1882,64076+41])
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/parmatch.ml[1882,64076+32]..[1882,64076+35])
                                                            Pexp_ident "lid" (typing/parmatch.ml[1882,64076+32]..[1882,64076+35])
                                                          expression (typing/parmatch.ml[1882,64076+37]..[1882,64076+40])
                                                            Pexp_ident "arg" (typing/parmatch.ml[1882,64076+37]..[1882,64076+40])
                                                        ]
                                              ]
                                  <case>
                                    pattern (typing/parmatch.ml[1883,64119+8]..[1883,64119+43])
                                      Ppat_construct "Tpat_variant" (typing/parmatch.ml[1883,64119+8]..[1883,64119+20])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[1883,64119+20]..[1883,64119+43])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[1883,64119+21]..[1883,64119+26])
                                              Ppat_var "label" (typing/parmatch.ml[1883,64119+21]..[1883,64119+26])
                                            pattern (typing/parmatch.ml[1883,64119+27]..[1883,64119+32])
                                              Ppat_var "p_opt" (typing/parmatch.ml[1883,64119+27]..[1883,64119+32])
                                            pattern (typing/parmatch.ml[1883,64119+33]..[1883,64119+42])
                                              Ppat_var "_row_desc" (typing/parmatch.ml[1883,64119+33]..[1883,64119+42])
                                          ]
                                    expression (typing/parmatch.ml[1884,64166+10]..[1885,64211+42])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/parmatch.ml[1884,64166+14]..[1884,64166+17])
                                            Ppat_var "arg" (typing/parmatch.ml[1884,64166+14]..[1884,64166+17])
                                          expression (typing/parmatch.ml[1884,64166+20]..[1884,64166+41])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[1884,64166+20]..[1884,64166+30])
                                              Pexp_ident "Option.map" (typing/parmatch.ml[1884,64166+20]..[1884,64166+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1884,64166+31]..[1884,64166+35])
                                                  Pexp_ident "loop" (typing/parmatch.ml[1884,64166+31]..[1884,64166+35])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1884,64166+36]..[1884,64166+41])
                                                  Pexp_ident "p_opt" (typing/parmatch.ml[1884,64166+36]..[1884,64166+41])
                                            ]
                                      ]
                                      expression (typing/parmatch.ml[1885,64211+10]..[1885,64211+42])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1885,64211+10]..[1885,64211+15])
                                          Pexp_ident "mkpat" (typing/parmatch.ml[1885,64211+10]..[1885,64211+15])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1885,64211+16]..[1885,64211+42])
                                              Pexp_construct "Ppat_variant" (typing/parmatch.ml[1885,64211+17]..[1885,64211+29])
                                              Some
                                                expression (typing/parmatch.ml[1885,64211+29]..[1885,64211+41])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/parmatch.ml[1885,64211+30]..[1885,64211+35])
                                                      Pexp_ident "label" (typing/parmatch.ml[1885,64211+30]..[1885,64211+35])
                                                    expression (typing/parmatch.ml[1885,64211+37]..[1885,64211+40])
                                                      Pexp_ident "arg" (typing/parmatch.ml[1885,64211+37]..[1885,64211+40])
                                                  ]
                                        ]
                                  <case>
                                    pattern (typing/parmatch.ml[1886,64254+8]..[1886,64254+47])
                                      Ppat_construct "Tpat_record" (typing/parmatch.ml[1886,64254+8]..[1886,64254+19])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[1886,64254+20]..[1886,64254+47])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[1886,64254+21]..[1886,64254+32])
                                              Ppat_var "subpatterns" (typing/parmatch.ml[1886,64254+21]..[1886,64254+32])
                                            pattern (typing/parmatch.ml[1886,64254+34]..[1886,64254+46])
                                              Ppat_var "_closed_flag" (typing/parmatch.ml[1886,64254+34]..[1886,64254+46])
                                          ]
                                    expression (typing/parmatch.ml[1887,64305+10]..[1895,64569+44])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/parmatch.ml[1887,64305+14]..[1887,64305+20])
                                            Ppat_var "fields" (typing/parmatch.ml[1887,64305+14]..[1887,64305+20])
                                          expression (typing/parmatch.ml[1888,64328+12]..[1893,64530+25])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[1888,64328+12]..[1888,64328+20])
                                              Pexp_ident "List.map" (typing/parmatch.ml[1888,64328+12]..[1888,64328+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1889,64349+14]..[1892,64473+56])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (typing/parmatch.ml[1889,64349+19]..[1889,64349+30])
                                                    Ppat_tuple
                                                    [
                                                      pattern (typing/parmatch.ml[1889,64349+20]..[1889,64349+21])
                                                        Ppat_any
                                                      pattern (typing/parmatch.ml[1889,64349+23]..[1889,64349+26])
                                                        Ppat_var "lbl" (typing/parmatch.ml[1889,64349+23]..[1889,64349+26])
                                                      pattern (typing/parmatch.ml[1889,64349+28]..[1889,64349+29])
                                                        Ppat_var "p" (typing/parmatch.ml[1889,64349+28]..[1889,64349+29])
                                                    ]
                                                  expression (typing/parmatch.ml[1890,64383+16]..[1892,64473+55])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/parmatch.ml[1890,64383+20]..[1890,64383+22])
                                                          Ppat_var "id" (typing/parmatch.ml[1890,64383+20]..[1890,64383+22])
                                                        expression (typing/parmatch.ml[1890,64383+25]..[1890,64383+43])
                                                          Pexp_apply
                                                          expression (typing/parmatch.ml[1890,64383+25]..[1890,64383+30])
                                                            Pexp_ident "fresh" (typing/parmatch.ml[1890,64383+25]..[1890,64383+30])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/parmatch.ml[1890,64383+31]..[1890,64383+43])
                                                                Pexp_field
                                                                expression (typing/parmatch.ml[1890,64383+31]..[1890,64383+34])
                                                                  Pexp_ident "lbl" (typing/parmatch.ml[1890,64383+31]..[1890,64383+34])
                                                                "lbl_name" (typing/parmatch.ml[1890,64383+35]..[1890,64383+43])
                                                          ]
                                                    ]
                                                    expression (typing/parmatch.ml[1891,64430+16]..[1892,64473+55])
                                                      Pexp_sequence
                                                      expression (typing/parmatch.ml[1891,64430+16]..[1891,64430+41])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[1891,64430+16]..[1891,64430+27])
                                                          Pexp_ident "Hashtbl.add" (typing/parmatch.ml[1891,64430+16]..[1891,64430+27])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1891,64430+28]..[1891,64430+34])
                                                              Pexp_ident "labels" (typing/parmatch.ml[1891,64430+28]..[1891,64430+34])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1891,64430+35]..[1891,64430+37])
                                                              Pexp_ident "id" (typing/parmatch.ml[1891,64430+35]..[1891,64430+37])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1891,64430+38]..[1891,64430+41])
                                                              Pexp_ident "lbl" (typing/parmatch.ml[1891,64430+38]..[1891,64430+41])
                                                        ]
                                                      expression (typing/parmatch.ml[1892,64473+16]..[1892,64473+55])
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/parmatch.ml[1892,64473+17]..[1892,64473+46])
                                                            Pexp_apply
                                                            expression (typing/parmatch.ml[1892,64473+17]..[1892,64473+24])
                                                              Pexp_ident "mknoloc" (typing/parmatch.ml[1892,64473+17]..[1892,64473+24])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[1892,64473+25]..[1892,64473+46])
                                                                  Pexp_construct "Longident.Lident" (typing/parmatch.ml[1892,64473+26]..[1892,64473+42])
                                                                  Some
                                                                    expression (typing/parmatch.ml[1892,64473+43]..[1892,64473+45])
                                                                      Pexp_ident "id" (typing/parmatch.ml[1892,64473+43]..[1892,64473+45])
                                                            ]
                                                          expression (typing/parmatch.ml[1892,64473+48]..[1892,64473+54])
                                                            Pexp_apply
                                                            expression (typing/parmatch.ml[1892,64473+48]..[1892,64473+52])
                                                              Pexp_ident "loop" (typing/parmatch.ml[1892,64473+48]..[1892,64473+52])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[1892,64473+53]..[1892,64473+54])
                                                                  Pexp_ident "p" (typing/parmatch.ml[1892,64473+53]..[1892,64473+54])
                                                            ]
                                                        ]
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[1893,64530+14]..[1893,64530+25])
                                                  Pexp_ident "subpatterns" (typing/parmatch.ml[1893,64530+14]..[1893,64530+25])
                                            ]
                                      ]
                                      expression (typing/parmatch.ml[1895,64569+10]..[1895,64569+44])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[1895,64569+10]..[1895,64569+15])
                                          Pexp_ident "mkpat" (typing/parmatch.ml[1895,64569+10]..[1895,64569+15])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[1895,64569+16]..[1895,64569+44])
                                              Pexp_construct "Ppat_record" (typing/parmatch.ml[1895,64569+17]..[1895,64569+28])
                                              Some
                                                expression (typing/parmatch.ml[1895,64569+29]..[1895,64569+43])
                                                  Pexp_tuple
                                                  [
                                                    expression (typing/parmatch.ml[1895,64569+30]..[1895,64569+36])
                                                      Pexp_ident "fields" (typing/parmatch.ml[1895,64569+30]..[1895,64569+36])
                                                    expression (typing/parmatch.ml[1895,64569+38]..[1895,64569+42])
                                                      Pexp_construct "Open" (typing/parmatch.ml[1895,64569+38]..[1895,64569+42])
                                                      None
                                                  ]
                                        ]
                                  <case>
                                    pattern (typing/parmatch.ml[1896,64614+8]..[1896,64614+22])
                                      Ppat_construct "Tpat_array" (typing/parmatch.ml[1896,64614+8]..[1896,64614+18])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[1896,64614+19]..[1896,64614+22])
                                          Ppat_var "lst" (typing/parmatch.ml[1896,64614+19]..[1896,64614+22])
                                    expression (typing/parmatch.ml[1897,64640+10]..[1897,64640+48])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1897,64640+10]..[1897,64640+15])
                                        Pexp_ident "mkpat" (typing/parmatch.ml[1897,64640+10]..[1897,64640+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1897,64640+16]..[1897,64640+48])
                                            Pexp_construct "Ppat_array" (typing/parmatch.ml[1897,64640+17]..[1897,64640+27])
                                            Some
                                              expression (typing/parmatch.ml[1897,64640+28]..[1897,64640+47])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[1897,64640+29]..[1897,64640+37])
                                                  Pexp_ident "List.map" (typing/parmatch.ml[1897,64640+29]..[1897,64640+37])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1897,64640+38]..[1897,64640+42])
                                                      Pexp_ident "loop" (typing/parmatch.ml[1897,64640+38]..[1897,64640+42])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1897,64640+43]..[1897,64640+46])
                                                      Pexp_ident "lst" (typing/parmatch.ml[1897,64640+43]..[1897,64640+46])
                                                ]
                                      ]
                                  <case>
                                    pattern (typing/parmatch.ml[1898,64689+8]..[1898,64689+19])
                                      Ppat_construct "Tpat_lazy" (typing/parmatch.ml[1898,64689+8]..[1898,64689+17])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[1898,64689+18]..[1898,64689+19])
                                          Ppat_var "p" (typing/parmatch.ml[1898,64689+18]..[1898,64689+19])
                                    expression (typing/parmatch.ml[1899,64712+10]..[1899,64712+36])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1899,64712+10]..[1899,64712+15])
                                        Pexp_ident "mkpat" (typing/parmatch.ml[1899,64712+10]..[1899,64712+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1899,64712+16]..[1899,64712+36])
                                            Pexp_construct "Ppat_lazy" (typing/parmatch.ml[1899,64712+17]..[1899,64712+26])
                                            Some
                                              expression (typing/parmatch.ml[1899,64712+27]..[1899,64712+35])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[1899,64712+28]..[1899,64712+32])
                                                  Pexp_ident "loop" (typing/parmatch.ml[1899,64712+28]..[1899,64712+32])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[1899,64712+33]..[1899,64712+34])
                                                      Pexp_ident "p" (typing/parmatch.ml[1899,64712+33]..[1899,64712+34])
                                                ]
                                      ]
                                ]
                        ]
                        expression (typing/parmatch.ml[1901,64756+4]..[1902,64783+25])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (typing/parmatch.ml[1901,64756+8]..[1901,64756+10])
                                Ppat_var "ps" (typing/parmatch.ml[1901,64756+8]..[1901,64756+10])
                              expression (typing/parmatch.ml[1901,64756+13]..[1901,64756+23])
                                Pexp_apply
                                expression (typing/parmatch.ml[1901,64756+13]..[1901,64756+17])
                                  Pexp_ident "loop" (typing/parmatch.ml[1901,64756+13]..[1901,64756+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1901,64756+18]..[1901,64756+23])
                                      Pexp_ident "typed" (typing/parmatch.ml[1901,64756+18]..[1901,64756+23])
                                ]
                          ]
                          expression (typing/parmatch.ml[1902,64783+4]..[1902,64783+25])
                            Pexp_tuple
                            [
                              expression (typing/parmatch.ml[1902,64783+5]..[1902,64783+7])
                                Pexp_ident "ps" (typing/parmatch.ml[1902,64783+5]..[1902,64783+7])
                              expression (typing/parmatch.ml[1902,64783+9]..[1902,64783+16])
                                Pexp_ident "constrs" (typing/parmatch.ml[1902,64783+9]..[1902,64783+16])
                              expression (typing/parmatch.ml[1902,64783+18]..[1902,64783+24])
                                Pexp_ident "labels" (typing/parmatch.ml[1902,64783+18]..[1902,64783+24])
                            ]
            ]
        ]
  structure_item (typing/parmatch.ml[1907,64879+0]..[1912,65018+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1907,64879+4]..[1907,64879+22])
          Ppat_var "contains_extension" (typing/parmatch.ml[1907,64879+4]..[1907,64879+22])
        expression (typing/parmatch.ml[1907,64879+23]..[1912,65018+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1907,64879+23]..[1907,64879+26])
            Ppat_var "pat" (typing/parmatch.ml[1907,64879+23]..[1907,64879+26])
          expression (typing/parmatch.ml[1908,64908+2]..[1912,65018+7])
            Pexp_apply
            expression (typing/parmatch.ml[1908,64908+2]..[1908,64908+16])
              Pexp_ident "exists_pattern" (typing/parmatch.ml[1908,64908+2]..[1908,64908+16])
            [
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1909,64925+4]..[1911,64999+18])
                  Pexp_function
                  [
                    <case>
                      pattern (typing/parmatch.ml[1910,64939+7]..[1910,64939+51])
                        Ppat_record Closed
                        [
                          "pat_desc" (typing/parmatch.ml[1910,64939+8]..[1910,64939+16])
                            pattern (typing/parmatch.ml[1910,64939+17]..[1910,64939+50])
                              Ppat_construct "Tpat_var" (typing/parmatch.ml[1910,64939+17]..[1910,64939+25])
                              Some
                                []
                                pattern (typing/parmatch.ml[1910,64939+26]..[1910,64939+50])
                                  Ppat_tuple
                                  [
                                    pattern (typing/parmatch.ml[1910,64939+27]..[1910,64939+28])
                                      Ppat_any
                                    pattern (typing/parmatch.ml[1910,64939+30]..[1910,64939+49])
                                      Ppat_record Closed
                                      [
                                        "txt" (typing/parmatch.ml[1910,64939+31]..[1910,64939+34])
                                          pattern (typing/parmatch.ml[1910,64939+35]..[1910,64939+48])
                                            Ppat_constant PConst_string("*extension*",(typing/parmatch.ml[1910,64939+36]..[1910,64939+47]),None)
                                      ]
                                  ]
                        ]
                      expression (typing/parmatch.ml[1910,64939+55]..[1910,64939+59])
                        Pexp_construct "true" (typing/parmatch.ml[1910,64939+55]..[1910,64939+59])
                        None
                    <case>
                      pattern (typing/parmatch.ml[1911,64999+7]..[1911,64999+8])
                        Ppat_any
                      expression (typing/parmatch.ml[1911,64999+12]..[1911,64999+17])
                        Pexp_construct "false" (typing/parmatch.ml[1911,64999+12]..[1911,64999+17])
                        None
                  ]
              <arg>
              Nolabel
                expression (typing/parmatch.ml[1912,65018+4]..[1912,65018+7])
                  Pexp_ident "pat" (typing/parmatch.ml[1912,65018+4]..[1912,65018+7])
            ]
    ]
  structure_item (typing/parmatch.ml[1915,65072+0]..[1915,65072+46])
    Pstr_type Rec
    [
      type_declaration "pat_explosion" (typing/parmatch.ml[1915,65072+5]..[1915,65072+18]) (typing/parmatch.ml[1915,65072+0]..[1915,65072+46])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/parmatch.ml[1915,65072+21]..[1915,65072+30])
                "PE_single" (typing/parmatch.ml[1915,65072+21]..[1915,65072+30])
                []
                None
              (typing/parmatch.ml[1915,65072+31]..[1915,65072+46])
                "PE_gadt_cases" (typing/parmatch.ml[1915,65072+33]..[1915,65072+46])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/parmatch.ml[1916,65119+0]..[1923,65281+43])
    Pstr_type Rec
    [
      type_declaration "ppat_of_type" (typing/parmatch.ml[1916,65119+5]..[1916,65119+17]) (typing/parmatch.ml[1916,65119+0]..[1923,65281+43])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/parmatch.ml[1917,65139+2]..[1917,65139+12])
                "PT_empty" (typing/parmatch.ml[1917,65139+4]..[1917,65139+12])
                []
                None
              (typing/parmatch.ml[1918,65152+2]..[1918,65152+10])
                "PT_any" (typing/parmatch.ml[1918,65152+4]..[1918,65152+10])
                []
                None
              (typing/parmatch.ml[1919,65163+2]..[1923,65281+43])
                "PT_pattern" (typing/parmatch.ml[1919,65163+4]..[1919,65163+14])
                [
                  core_type (typing/parmatch.ml[1920,65181+6]..[1920,65181+19])
                    Ptyp_constr "pat_explosion" (typing/parmatch.ml[1920,65181+6]..[1920,65181+19])
                    []
                  core_type (typing/parmatch.ml[1921,65203+6]..[1921,65203+23])
                    Ptyp_constr "Parsetree.pattern" (typing/parmatch.ml[1921,65203+6]..[1921,65203+23])
                    []
                  core_type (typing/parmatch.ml[1922,65229+6]..[1922,65229+49])
                    Ptyp_constr "Hashtbl.t" (typing/parmatch.ml[1922,65229+40]..[1922,65229+49])
                    [
                      core_type (typing/parmatch.ml[1922,65229+7]..[1922,65229+13])
                        Ptyp_constr "string" (typing/parmatch.ml[1922,65229+7]..[1922,65229+13])
                        []
                      core_type (typing/parmatch.ml[1922,65229+15]..[1922,65229+38])
                        Ptyp_constr "constructor_description" (typing/parmatch.ml[1922,65229+15]..[1922,65229+38])
                        []
                    ]
                  core_type (typing/parmatch.ml[1923,65281+6]..[1923,65281+43])
                    Ptyp_constr "Hashtbl.t" (typing/parmatch.ml[1923,65281+34]..[1923,65281+43])
                    [
                      core_type (typing/parmatch.ml[1923,65281+7]..[1923,65281+13])
                        Ptyp_constr "string" (typing/parmatch.ml[1923,65281+7]..[1923,65281+13])
                        []
                      core_type (typing/parmatch.ml[1923,65281+15]..[1923,65281+32])
                        Ptyp_constr "label_description" (typing/parmatch.ml[1923,65281+15]..[1923,65281+32])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/parmatch.ml[1925,65326+0]..[1934,65639+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1925,65326+4]..[1925,65326+16])
          Ppat_var "ppat_of_type" (typing/parmatch.ml[1925,65326+4]..[1925,65326+16])
        expression (typing/parmatch.ml[1925,65326+17]..[1934,65639+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1925,65326+17]..[1925,65326+20])
            Ppat_var "env" (typing/parmatch.ml[1925,65326+17]..[1925,65326+20])
          expression (typing/parmatch.ml[1925,65326+21]..[1934,65639+55]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1925,65326+21]..[1925,65326+23])
              Ppat_var "ty" (typing/parmatch.ml[1925,65326+21]..[1925,65326+23])
            expression (typing/parmatch.ml[1926,65352+2]..[1934,65639+55])
              Pexp_match
              expression (typing/parmatch.ml[1926,65352+8]..[1926,65352+27])
                Pexp_apply
                expression (typing/parmatch.ml[1926,65352+8]..[1926,65352+20])
                  Pexp_ident "pats_of_type" (typing/parmatch.ml[1926,65352+8]..[1926,65352+20])
                [
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[1926,65352+21]..[1926,65352+24])
                      Pexp_ident "env" (typing/parmatch.ml[1926,65352+21]..[1926,65352+24])
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[1926,65352+25]..[1926,65352+27])
                      Pexp_ident "ty" (typing/parmatch.ml[1926,65352+25]..[1926,65352+27])
                ]
              [
                <case>
                  pattern (typing/parmatch.ml[1927,65385+4]..[1927,65385+6])
                    Ppat_construct "[]" (typing/parmatch.ml[1927,65385+4]..[1927,65385+6])
                    None
                  expression (typing/parmatch.ml[1927,65385+10]..[1927,65385+18])
                    Pexp_construct "PT_empty" (typing/parmatch.ml[1927,65385+10]..[1927,65385+18])
                    None
                <case>
                  pattern (typing/parmatch.ml[1928,65404+4]..[1928,65404+27])
                    Ppat_construct "::" (typing/parmatch.ml[1928,65404+5]..[1928,65404+27]) ghost
                    Some
                      []
                      pattern (typing/parmatch.ml[1928,65404+5]..[1928,65404+27]) ghost
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[1928,65404+5]..[1928,65404+26])
                            Ppat_record Closed
                            [
                              "pat_desc" (typing/parmatch.ml[1928,65404+6]..[1928,65404+14])
                                pattern (typing/parmatch.ml[1928,65404+17]..[1928,65404+25])
                                  Ppat_construct "Tpat_any" (typing/parmatch.ml[1928,65404+17]..[1928,65404+25])
                                  None
                            ]
                          pattern (typing/parmatch.ml[1928,65404+26]..[1928,65404+27]) ghost
                            Ppat_construct "[]" (typing/parmatch.ml[1928,65404+26]..[1928,65404+27]) ghost
                            None
                        ]
                  expression (typing/parmatch.ml[1928,65404+31]..[1928,65404+37])
                    Pexp_construct "PT_any" (typing/parmatch.ml[1928,65404+31]..[1928,65404+37])
                    None
                <case>
                  pattern (typing/parmatch.ml[1929,65442+4]..[1929,65442+9])
                    Ppat_construct "::" (typing/parmatch.ml[1929,65442+5]..[1929,65442+9]) ghost
                    Some
                      []
                      pattern (typing/parmatch.ml[1929,65442+5]..[1929,65442+9]) ghost
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[1929,65442+5]..[1929,65442+8])
                            Ppat_var "pat" (typing/parmatch.ml[1929,65442+5]..[1929,65442+8])
                          pattern (typing/parmatch.ml[1929,65442+8]..[1929,65442+9]) ghost
                            Ppat_construct "[]" (typing/parmatch.ml[1929,65442+8]..[1929,65442+9]) ghost
                            None
                        ]
                  expression (typing/parmatch.ml[1930,65455+6]..[1931,65508+51])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[1930,65455+10]..[1930,65455+33])
                          Ppat_tuple
                          [
                            pattern (typing/parmatch.ml[1930,65455+11]..[1930,65455+15])
                              Ppat_var "ppat" (typing/parmatch.ml[1930,65455+11]..[1930,65455+15])
                            pattern (typing/parmatch.ml[1930,65455+17]..[1930,65455+24])
                              Ppat_var "constrs" (typing/parmatch.ml[1930,65455+17]..[1930,65455+24])
                            pattern (typing/parmatch.ml[1930,65455+26]..[1930,65455+32])
                              Ppat_var "labels" (typing/parmatch.ml[1930,65455+26]..[1930,65455+32])
                          ]
                        expression (typing/parmatch.ml[1930,65455+36]..[1930,65455+49])
                          Pexp_apply
                          expression (typing/parmatch.ml[1930,65455+36]..[1930,65455+45])
                            Pexp_ident "Conv.conv" (typing/parmatch.ml[1930,65455+36]..[1930,65455+45])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1930,65455+46]..[1930,65455+49])
                                Pexp_ident "pat" (typing/parmatch.ml[1930,65455+46]..[1930,65455+49])
                          ]
                    ]
                    expression (typing/parmatch.ml[1931,65508+6]..[1931,65508+51])
                      Pexp_construct "PT_pattern" (typing/parmatch.ml[1931,65508+6]..[1931,65508+16])
                      Some
                        expression (typing/parmatch.ml[1931,65508+17]..[1931,65508+51])
                          Pexp_tuple
                          [
                            expression (typing/parmatch.ml[1931,65508+18]..[1931,65508+27])
                              Pexp_construct "PE_single" (typing/parmatch.ml[1931,65508+18]..[1931,65508+27])
                              None
                            expression (typing/parmatch.ml[1931,65508+29]..[1931,65508+33])
                              Pexp_ident "ppat" (typing/parmatch.ml[1931,65508+29]..[1931,65508+33])
                            expression (typing/parmatch.ml[1931,65508+35]..[1931,65508+42])
                              Pexp_ident "constrs" (typing/parmatch.ml[1931,65508+35]..[1931,65508+42])
                            expression (typing/parmatch.ml[1931,65508+44]..[1931,65508+50])
                              Pexp_ident "labels" (typing/parmatch.ml[1931,65508+44]..[1931,65508+50])
                          ]
                <case>
                  pattern (typing/parmatch.ml[1932,65560+4]..[1932,65560+8])
                    Ppat_var "pats" (typing/parmatch.ml[1932,65560+4]..[1932,65560+8])
                  expression (typing/parmatch.ml[1933,65572+6]..[1934,65639+55])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[1933,65572+10]..[1933,65572+33])
                          Ppat_tuple
                          [
                            pattern (typing/parmatch.ml[1933,65572+11]..[1933,65572+15])
                              Ppat_var "ppat" (typing/parmatch.ml[1933,65572+11]..[1933,65572+15])
                            pattern (typing/parmatch.ml[1933,65572+17]..[1933,65572+24])
                              Ppat_var "constrs" (typing/parmatch.ml[1933,65572+17]..[1933,65572+24])
                            pattern (typing/parmatch.ml[1933,65572+26]..[1933,65572+32])
                              Ppat_var "labels" (typing/parmatch.ml[1933,65572+26]..[1933,65572+32])
                          ]
                        expression (typing/parmatch.ml[1933,65572+36]..[1933,65572+63])
                          Pexp_apply
                          expression (typing/parmatch.ml[1933,65572+36]..[1933,65572+45])
                            Pexp_ident "Conv.conv" (typing/parmatch.ml[1933,65572+36]..[1933,65572+45])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[1933,65572+46]..[1933,65572+63])
                                Pexp_apply
                                expression (typing/parmatch.ml[1933,65572+47]..[1933,65572+57])
                                  Pexp_ident "orify_many" (typing/parmatch.ml[1933,65572+47]..[1933,65572+57])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[1933,65572+58]..[1933,65572+62])
                                      Pexp_ident "pats" (typing/parmatch.ml[1933,65572+58]..[1933,65572+62])
                                ]
                          ]
                    ]
                    expression (typing/parmatch.ml[1934,65639+6]..[1934,65639+55])
                      Pexp_construct "PT_pattern" (typing/parmatch.ml[1934,65639+6]..[1934,65639+16])
                      Some
                        expression (typing/parmatch.ml[1934,65639+17]..[1934,65639+55])
                          Pexp_tuple
                          [
                            expression (typing/parmatch.ml[1934,65639+18]..[1934,65639+31])
                              Pexp_construct "PE_gadt_cases" (typing/parmatch.ml[1934,65639+18]..[1934,65639+31])
                              None
                            expression (typing/parmatch.ml[1934,65639+33]..[1934,65639+37])
                              Pexp_ident "ppat" (typing/parmatch.ml[1934,65639+33]..[1934,65639+37])
                            expression (typing/parmatch.ml[1934,65639+39]..[1934,65639+46])
                              Pexp_ident "constrs" (typing/parmatch.ml[1934,65639+39]..[1934,65639+46])
                            expression (typing/parmatch.ml[1934,65639+48]..[1934,65639+54])
                              Pexp_ident "labels" (typing/parmatch.ml[1934,65639+48]..[1934,65639+54])
                          ]
              ]
    ]
  structure_item (typing/parmatch.ml[1936,65696+0]..[1938,65768+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1936,65696+4]..[1936,65696+13])
          Ppat_var "typecheck" (typing/parmatch.ml[1936,65696+4]..[1936,65696+13])
        expression (typing/parmatch.ml[1936,65696+14]..[1938,65768+29]) ghost
          Pexp_fun
          Labelled "pred"
          None
          pattern (typing/parmatch.ml[1936,65696+15]..[1936,65696+19])
            Ppat_var "pred" (typing/parmatch.ml[1936,65696+15]..[1936,65696+19])
          expression (typing/parmatch.ml[1936,65696+20]..[1938,65768+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1936,65696+20]..[1936,65696+21])
              Ppat_var "p" (typing/parmatch.ml[1936,65696+20]..[1936,65696+21])
            expression (typing/parmatch.ml[1937,65720+2]..[1938,65768+29])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/parmatch.ml[1937,65720+6]..[1937,65720+30])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[1937,65720+7]..[1937,65720+14])
                        Ppat_var "pattern" (typing/parmatch.ml[1937,65720+7]..[1937,65720+14])
                      pattern (typing/parmatch.ml[1937,65720+15]..[1937,65720+22])
                        Ppat_var "constrs" (typing/parmatch.ml[1937,65720+15]..[1937,65720+22])
                      pattern (typing/parmatch.ml[1937,65720+23]..[1937,65720+29])
                        Ppat_var "labels" (typing/parmatch.ml[1937,65720+23]..[1937,65720+29])
                    ]
                  expression (typing/parmatch.ml[1937,65720+33]..[1937,65720+44])
                    Pexp_apply
                    expression (typing/parmatch.ml[1937,65720+33]..[1937,65720+42])
                      Pexp_ident "Conv.conv" (typing/parmatch.ml[1937,65720+33]..[1937,65720+42])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1937,65720+43]..[1937,65720+44])
                          Pexp_ident "p" (typing/parmatch.ml[1937,65720+43]..[1937,65720+44])
                    ]
              ]
              expression (typing/parmatch.ml[1938,65768+2]..[1938,65768+29])
                Pexp_apply
                expression (typing/parmatch.ml[1938,65768+2]..[1938,65768+6])
                  Pexp_ident "pred" (typing/parmatch.ml[1938,65768+2]..[1938,65768+6])
                [
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[1938,65768+7]..[1938,65768+14])
                      Pexp_ident "constrs" (typing/parmatch.ml[1938,65768+7]..[1938,65768+14])
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[1938,65768+15]..[1938,65768+21])
                      Pexp_ident "labels" (typing/parmatch.ml[1938,65768+15]..[1938,65768+21])
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[1938,65768+22]..[1938,65768+29])
                      Pexp_ident "pattern" (typing/parmatch.ml[1938,65768+22]..[1938,65768+29])
                ]
    ]
  structure_item (typing/parmatch.ml[1940,65799+0]..[1985,67436+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1940,65799+4]..[1940,65799+20])
          Ppat_var "do_check_partial" (typing/parmatch.ml[1940,65799+4]..[1940,65799+20])
        expression (typing/parmatch.ml[1940,65799+21]..[1985,67436+13]) ghost
          Pexp_fun
          Labelled "pred"
          None
          pattern (typing/parmatch.ml[1940,65799+22]..[1940,65799+26])
            Ppat_var "pred" (typing/parmatch.ml[1940,65799+22]..[1940,65799+26])
          expression (typing/parmatch.ml[1940,65799+27]..[1985,67436+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[1940,65799+27]..[1940,65799+30])
              Ppat_var "loc" (typing/parmatch.ml[1940,65799+27]..[1940,65799+30])
            expression (typing/parmatch.ml[1940,65799+31]..[1985,67436+13]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[1940,65799+31]..[1940,65799+36])
                Ppat_var "casel" (typing/parmatch.ml[1940,65799+31]..[1940,65799+36])
              expression (typing/parmatch.ml[1940,65799+37]..[1985,67436+13]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/parmatch.ml[1940,65799+37]..[1940,65799+40])
                  Ppat_var "pss" (typing/parmatch.ml[1940,65799+37]..[1940,65799+40])
                expression (typing/parmatch.ml[1940,65799+43]..[1985,67436+13])
                  Pexp_match
                  expression (typing/parmatch.ml[1940,65799+49]..[1940,65799+52])
                    Pexp_ident "pss" (typing/parmatch.ml[1940,65799+49]..[1940,65799+52])
                  [
                    <case>
                      pattern (typing/parmatch.ml[1941,65857+2]..[1941,65857+4])
                        Ppat_construct "[]" (typing/parmatch.ml[1941,65857+2]..[1941,65857+4])
                        None
                      expression (typing/parmatch.ml[1950,66174+4]..[1956,66364+11])
                        Pexp_sequence
                        expression (typing/parmatch.ml[1950,66174+4]..[1955,66354+7])
                          Pexp_match
                          expression (typing/parmatch.ml[1950,66174+16]..[1950,66174+21])
                            Pexp_ident "casel" (typing/parmatch.ml[1950,66174+16]..[1950,66174+21])
                          [
                            <case>
                              pattern (typing/parmatch.ml[1951,66201+6]..[1951,66201+8])
                                Ppat_construct "[]" (typing/parmatch.ml[1951,66201+6]..[1951,66201+8])
                                None
                              expression (typing/parmatch.ml[1951,66201+12]..[1951,66201+14])
                                Pexp_construct "()" (typing/parmatch.ml[1951,66201+12]..[1951,66201+14])
                                None
                            <case>
                              pattern (typing/parmatch.ml[1952,66216+6]..[1952,66216+7])
                                Ppat_any
                              expression (typing/parmatch.ml[1953,66228+6]..[1954,66290+63])
                                Pexp_ifthenelse
                                expression (typing/parmatch.ml[1953,66228+9]..[1953,66228+56])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1953,66228+9]..[1953,66228+27])
                                    Pexp_ident "Warnings.is_active" (typing/parmatch.ml[1953,66228+9]..[1953,66228+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1953,66228+28]..[1953,66228+56])
                                        Pexp_construct "Warnings.All_clauses_guarded" (typing/parmatch.ml[1953,66228+28]..[1953,66228+56])
                                        None
                                  ]
                                expression (typing/parmatch.ml[1954,66290+8]..[1954,66290+63])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[1954,66290+8]..[1954,66290+30])
                                    Pexp_ident "Location.prerr_warning" (typing/parmatch.ml[1954,66290+8]..[1954,66290+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1954,66290+31]..[1954,66290+34])
                                        Pexp_ident "loc" (typing/parmatch.ml[1954,66290+31]..[1954,66290+34])
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[1954,66290+35]..[1954,66290+63])
                                        Pexp_construct "Warnings.All_clauses_guarded" (typing/parmatch.ml[1954,66290+35]..[1954,66290+63])
                                        None
                                  ]
                                None
                          ]
                        expression (typing/parmatch.ml[1956,66364+4]..[1956,66364+11])
                          Pexp_construct "Partial" (typing/parmatch.ml[1956,66364+4]..[1956,66364+11])
                          None
                    <case>
                      pattern (typing/parmatch.ml[1957,66376+2]..[1957,66376+7])
                        Ppat_construct "::" (typing/parmatch.ml[1957,66376+4]..[1957,66376+6])
                        Some
                          []
                          pattern (typing/parmatch.ml[1957,66376+2]..[1957,66376+7]) ghost
                            Ppat_tuple
                            [
                              pattern (typing/parmatch.ml[1957,66376+2]..[1957,66376+4])
                                Ppat_var "ps" (typing/parmatch.ml[1957,66376+2]..[1957,66376+4])
                              pattern (typing/parmatch.ml[1957,66376+6]..[1957,66376+7])
                                Ppat_any
                            ]
                      expression (typing/parmatch.ml[1958,66388+4]..[1985,67436+13])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/parmatch.ml[1958,66388+8]..[1958,66388+24])
                              Ppat_var "counter_examples" (typing/parmatch.ml[1958,66388+8]..[1958,66388+24])
                            expression (typing/parmatch.ml[1959,66415+6]..[1960,66455+41])
                              Pexp_apply
                              expression (typing/parmatch.ml[1960,66455+6]..[1960,66455+8])
                                Pexp_ident "|>" (typing/parmatch.ml[1960,66455+6]..[1960,66455+8])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1959,66415+6]..[1959,66415+39])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1959,66415+6]..[1959,66415+13])
                                      Pexp_ident "exhaust" (typing/parmatch.ml[1959,66415+6]..[1959,66415+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1959,66415+14]..[1959,66415+18])
                                          Pexp_construct "None" (typing/parmatch.ml[1959,66415+14]..[1959,66415+18])
                                          None
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1959,66415+19]..[1959,66415+22])
                                          Pexp_ident "pss" (typing/parmatch.ml[1959,66415+19]..[1959,66415+22])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1959,66415+23]..[1959,66415+39])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[1959,66415+24]..[1959,66415+35])
                                            Pexp_ident "List.length" (typing/parmatch.ml[1959,66415+24]..[1959,66415+35])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[1959,66415+36]..[1959,66415+38])
                                                Pexp_ident "ps" (typing/parmatch.ml[1959,66415+36]..[1959,66415+38])
                                          ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1960,66455+9]..[1960,66455+41])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1960,66455+9]..[1960,66455+23])
                                      Pexp_ident "Seq.filter_map" (typing/parmatch.ml[1960,66455+9]..[1960,66455+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1960,66455+24]..[1960,66455+41])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[1960,66455+25]..[1960,66455+34])
                                            Pexp_ident "typecheck" (typing/parmatch.ml[1960,66455+25]..[1960,66455+34])
                                          [
                                            <arg>
                                            Labelled "pred"
                                              expression (typing/parmatch.ml[1960,66455+36]..[1960,66455+40])
                                                Pexp_ident "pred" (typing/parmatch.ml[1960,66455+36]..[1960,66455+40])
                                          ]
                                    ]
                              ]
                        ]
                        expression (typing/parmatch.ml[1961,66500+4]..[1985,67436+13])
                          Pexp_match
                          expression (typing/parmatch.ml[1961,66500+10]..[1961,66500+29])
                            Pexp_apply
                            expression (typing/parmatch.ml[1961,66500+10]..[1961,66500+26])
                              Pexp_ident "counter_examples" (typing/parmatch.ml[1961,66500+10]..[1961,66500+26])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[1961,66500+27]..[1961,66500+29])
                                  Pexp_construct "()" (typing/parmatch.ml[1961,66500+27]..[1961,66500+29])
                                  None
                            ]
                          [
                            <case>
                              pattern (typing/parmatch.ml[1962,66535+6]..[1962,66535+13])
                                Ppat_construct "Seq.Nil" (typing/parmatch.ml[1962,66535+6]..[1962,66535+13])
                                None
                              expression (typing/parmatch.ml[1962,66535+17]..[1962,66535+22])
                                Pexp_construct "Total" (typing/parmatch.ml[1962,66535+17]..[1962,66535+22])
                                None
                            <case>
                              pattern (typing/parmatch.ml[1963,66558+6]..[1963,66558+25])
                                Ppat_construct "Seq.Cons" (typing/parmatch.ml[1963,66558+6]..[1963,66558+14])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[1963,66558+15]..[1963,66558+25])
                                    Ppat_tuple
                                    [
                                      pattern (typing/parmatch.ml[1963,66558+16]..[1963,66558+17])
                                        Ppat_var "v" (typing/parmatch.ml[1963,66558+16]..[1963,66558+17])
                                      pattern (typing/parmatch.ml[1963,66558+19]..[1963,66558+24])
                                        Ppat_var "_rest" (typing/parmatch.ml[1963,66558+19]..[1963,66558+24])
                                    ]
                              expression (typing/parmatch.ml[1964,66587+6]..[1985,67436+13])
                                Pexp_sequence
                                expression (typing/parmatch.ml[1964,66587+6]..[1984,67425+9])
                                  Pexp_ifthenelse
                                  expression (typing/parmatch.ml[1964,66587+9]..[1964,66587+55])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[1964,66587+9]..[1964,66587+27])
                                      Pexp_ident "Warnings.is_active" (typing/parmatch.ml[1964,66587+9]..[1964,66587+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[1964,66587+28]..[1964,66587+55])
                                          Pexp_construct "Warnings.Partial_match" (typing/parmatch.ml[1964,66587+29]..[1964,66587+51])
                                          Some
                                            expression (typing/parmatch.ml[1964,66587+52]..[1964,66587+54])
                                              Pexp_constant PConst_string("",(typing/parmatch.ml[1964,66587+53]..[1964,66587+53]),None)
                                    ]
                                  expression (typing/parmatch.ml[1964,66587+61]..[1984,67425+9])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/parmatch.ml[1965,66654+12]..[1965,66654+18])
                                          Ppat_var "errmsg" (typing/parmatch.ml[1965,66654+12]..[1965,66654+18])
                                        expression (typing/parmatch.ml[1966,66675+10]..[1981,67332+14])
                                          Pexp_try
                                          expression (typing/parmatch.ml[1967,66689+12]..[1979,67280+31])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (typing/parmatch.ml[1967,66689+16]..[1967,66689+19])
                                                  Ppat_var "buf" (typing/parmatch.ml[1967,66689+16]..[1967,66689+19])
                                                expression (typing/parmatch.ml[1967,66689+22]..[1967,66689+38])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[1967,66689+22]..[1967,66689+35])
                                                    Pexp_ident "Buffer.create" (typing/parmatch.ml[1967,66689+22]..[1967,66689+35])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1967,66689+36]..[1967,66689+38])
                                                        Pexp_constant PConst_int (16,None)
                                                  ]
                                            ]
                                            expression (typing/parmatch.ml[1968,66731+12]..[1979,67280+31])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/parmatch.ml[1968,66731+16]..[1968,66731+19])
                                                    Ppat_var "fmt" (typing/parmatch.ml[1968,66731+16]..[1968,66731+19])
                                                  expression (typing/parmatch.ml[1968,66731+22]..[1968,66731+52])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[1968,66731+22]..[1968,66731+48])
                                                      Pexp_ident "Format.formatter_of_buffer" (typing/parmatch.ml[1968,66731+22]..[1968,66731+48])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[1968,66731+49]..[1968,66731+52])
                                                          Pexp_ident "buf" (typing/parmatch.ml[1968,66731+49]..[1968,66731+52])
                                                    ]
                                              ]
                                              expression (typing/parmatch.ml[1969,66787+12]..[1979,67280+31])
                                                Pexp_sequence
                                                expression (typing/parmatch.ml[1969,66787+12]..[1969,66787+37])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[1969,66787+12]..[1969,66787+31])
                                                    Pexp_ident "Printpat.top_pretty" (typing/parmatch.ml[1969,66787+12]..[1969,66787+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1969,66787+32]..[1969,66787+35])
                                                        Pexp_ident "fmt" (typing/parmatch.ml[1969,66787+32]..[1969,66787+35])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[1969,66787+36]..[1969,66787+37])
                                                        Pexp_ident "v" (typing/parmatch.ml[1969,66787+36]..[1969,66787+37])
                                                  ]
                                                expression (typing/parmatch.ml[1970,66826+12]..[1979,67280+31])
                                                  Pexp_sequence
                                                  expression (typing/parmatch.ml[1970,66826+12]..[1972,66924+72])
                                                    Pexp_ifthenelse
                                                    expression (typing/parmatch.ml[1970,66826+15]..[1970,66826+56])
                                                      Pexp_apply
                                                      expression (typing/parmatch.ml[1970,66826+15]..[1970,66826+23])
                                                        Pexp_ident "do_match" (typing/parmatch.ml[1970,66826+15]..[1970,66826+23])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[1970,66826+24]..[1970,66826+52])
                                                            Pexp_apply
                                                            expression (typing/parmatch.ml[1970,66826+25]..[1970,66826+45])
                                                              Pexp_ident "initial_only_guarded" (typing/parmatch.ml[1970,66826+25]..[1970,66826+45])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[1970,66826+46]..[1970,66826+51])
                                                                  Pexp_ident "casel" (typing/parmatch.ml[1970,66826+46]..[1970,66826+51])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[1970,66826+53]..[1970,66826+56])
                                                            Pexp_construct "::" (typing/parmatch.ml[1970,66826+54]..[1970,66826+56]) ghost
                                                            Some
                                                              expression (typing/parmatch.ml[1970,66826+54]..[1970,66826+56]) ghost
                                                                Pexp_tuple
                                                                [
                                                                  expression (typing/parmatch.ml[1970,66826+54]..[1970,66826+55])
                                                                    Pexp_ident "v" (typing/parmatch.ml[1970,66826+54]..[1970,66826+55])
                                                                  expression (typing/parmatch.ml[1970,66826+55]..[1970,66826+56]) ghost
                                                                    Pexp_construct "[]" (typing/parmatch.ml[1970,66826+55]..[1970,66826+56]) ghost
                                                                    None
                                                                ]
                                                      ]
                                                    expression (typing/parmatch.ml[1971,66888+14]..[1972,66924+72])
                                                      Pexp_apply
                                                      expression (typing/parmatch.ml[1971,66888+14]..[1971,66888+31])
                                                        Pexp_ident "Buffer.add_string" (typing/parmatch.ml[1971,66888+14]..[1971,66888+31])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[1971,66888+32]..[1971,66888+35])
                                                            Pexp_ident "buf" (typing/parmatch.ml[1971,66888+32]..[1971,66888+35])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[1972,66924+16]..[1972,66924+72])
                                                            Pexp_constant PConst_string("\n(However, some guarded clause may match this value.)",(typing/parmatch.ml[1972,66924+17]..[1972,66924+71]),None)
                                                      ]
                                                    None
                                                  expression (typing/parmatch.ml[1973,66998+12]..[1979,67280+31])
                                                    Pexp_sequence
                                                    expression (typing/parmatch.ml[1973,66998+12]..[1977,67191+74])
                                                      Pexp_ifthenelse
                                                      expression (typing/parmatch.ml[1973,66998+15]..[1973,66998+35])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[1973,66998+15]..[1973,66998+33])
                                                          Pexp_ident "contains_extension" (typing/parmatch.ml[1973,66998+15]..[1973,66998+33])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1973,66998+34]..[1973,66998+35])
                                                              Pexp_ident "v" (typing/parmatch.ml[1973,66998+34]..[1973,66998+35])
                                                        ]
                                                      expression (typing/parmatch.ml[1974,67039+14]..[1977,67191+74])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[1974,67039+14]..[1974,67039+31])
                                                          Pexp_ident "Buffer.add_string" (typing/parmatch.ml[1974,67039+14]..[1974,67039+31])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1974,67039+32]..[1974,67039+35])
                                                              Pexp_ident "buf" (typing/parmatch.ml[1974,67039+32]..[1974,67039+35])
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[1975,67075+16]..[1977,67191+74])
                                                              Pexp_constant PConst_string("\nMatching over values of extensible variant types (the *extension* above)\nmust include a wild card pattern in order to be exhaustive.",(typing/parmatch.ml[1975,67075+17]..[1977,67191+73]),None)
                                                        ]
                                                      None
                                                    expression (typing/parmatch.ml[1979,67280+12]..[1979,67280+31])
                                                      Pexp_apply
                                                      expression (typing/parmatch.ml[1979,67280+12]..[1979,67280+27])
                                                        Pexp_ident "Buffer.contents" (typing/parmatch.ml[1979,67280+12]..[1979,67280+27])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[1979,67280+28]..[1979,67280+31])
                                                            Pexp_ident "buf" (typing/parmatch.ml[1979,67280+28]..[1979,67280+31])
                                                      ]
                                          [
                                            <case>
                                              pattern (typing/parmatch.ml[1980,67312+15]..[1980,67312+16])
                                                Ppat_any
                                              expression (typing/parmatch.ml[1981,67332+12]..[1981,67332+14])
                                                Pexp_constant PConst_string("",(typing/parmatch.ml[1981,67332+13]..[1981,67332+13]),None)
                                          ]
                                    ]
                                    expression (typing/parmatch.ml[1983,67358+8]..[1983,67358+66])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[1983,67358+8]..[1983,67358+30])
                                        Pexp_ident "Location.prerr_warning" (typing/parmatch.ml[1983,67358+8]..[1983,67358+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1983,67358+31]..[1983,67358+34])
                                            Pexp_ident "loc" (typing/parmatch.ml[1983,67358+31]..[1983,67358+34])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[1983,67358+35]..[1983,67358+66])
                                            Pexp_construct "Warnings.Partial_match" (typing/parmatch.ml[1983,67358+36]..[1983,67358+58])
                                            Some
                                              expression (typing/parmatch.ml[1983,67358+59]..[1983,67358+65])
                                                Pexp_ident "errmsg" (typing/parmatch.ml[1983,67358+59]..[1983,67358+65])
                                      ]
                                  None
                                expression (typing/parmatch.ml[1985,67436+6]..[1985,67436+13])
                                  Pexp_construct "Partial" (typing/parmatch.ml[1985,67436+6]..[1985,67436+13])
                                  None
                          ]
                  ]
    ]
  structure_item (typing/parmatch.ml[1993,67555+0]..[1997,67665+31])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[1993,67555+8]..[1993,67555+16])
          Ppat_var "add_path" (typing/parmatch.ml[1993,67555+8]..[1993,67555+16])
        expression (typing/parmatch.ml[1993,67555+17]..[1997,67665+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1993,67555+17]..[1993,67555+21])
            Ppat_var "path" (typing/parmatch.ml[1993,67555+17]..[1993,67555+21])
          expression (typing/parmatch.ml[1993,67555+24]..[1997,67665+31])
            Pexp_function
            [
              <case>
                pattern (typing/parmatch.ml[1994,67588+4]..[1994,67588+6])
                  Ppat_construct "[]" (typing/parmatch.ml[1994,67588+4]..[1994,67588+6])
                  None
                expression (typing/parmatch.ml[1994,67588+10]..[1994,67588+16])
                  Pexp_construct "::" (typing/parmatch.ml[1994,67588+11]..[1994,67588+16]) ghost
                  Some
                    expression (typing/parmatch.ml[1994,67588+11]..[1994,67588+16]) ghost
                      Pexp_tuple
                      [
                        expression (typing/parmatch.ml[1994,67588+11]..[1994,67588+15])
                          Pexp_ident "path" (typing/parmatch.ml[1994,67588+11]..[1994,67588+15])
                        expression (typing/parmatch.ml[1994,67588+15]..[1994,67588+16]) ghost
                          Pexp_construct "[]" (typing/parmatch.ml[1994,67588+15]..[1994,67588+16]) ghost
                          None
                      ]
              <case>
                pattern (typing/parmatch.ml[1995,67605+4]..[1995,67605+19])
                  Ppat_alias "paths" (typing/parmatch.ml[1995,67605+14]..[1995,67605+19])
                  pattern (typing/parmatch.ml[1995,67605+4]..[1995,67605+10])
                    Ppat_construct "::" (typing/parmatch.ml[1995,67605+5]..[1995,67605+7])
                    Some
                      []
                      pattern (typing/parmatch.ml[1995,67605+4]..[1995,67605+10]) ghost
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[1995,67605+4]..[1995,67605+5])
                            Ppat_var "x" (typing/parmatch.ml[1995,67605+4]..[1995,67605+5])
                          pattern (typing/parmatch.ml[1995,67605+7]..[1995,67605+10])
                            Ppat_var "rem" (typing/parmatch.ml[1995,67605+7]..[1995,67605+10])
                        ]
                expression (typing/parmatch.ml[1996,67628+6]..[1997,67665+31])
                  Pexp_ifthenelse
                  expression (typing/parmatch.ml[1996,67628+9]..[1996,67628+25])
                    Pexp_apply
                    expression (typing/parmatch.ml[1996,67628+9]..[1996,67628+18])
                      Pexp_ident "Path.same" (typing/parmatch.ml[1996,67628+9]..[1996,67628+18])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1996,67628+19]..[1996,67628+23])
                          Pexp_ident "path" (typing/parmatch.ml[1996,67628+19]..[1996,67628+23])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[1996,67628+24]..[1996,67628+25])
                          Pexp_ident "x" (typing/parmatch.ml[1996,67628+24]..[1996,67628+25])
                    ]
                  expression (typing/parmatch.ml[1996,67628+31]..[1996,67628+36])
                    Pexp_ident "paths" (typing/parmatch.ml[1996,67628+31]..[1996,67628+36])
                  Some
                    expression (typing/parmatch.ml[1997,67665+11]..[1997,67665+31])
                      Pexp_construct "::" (typing/parmatch.ml[1997,67665+12]..[1997,67665+14])
                      Some
                        expression (typing/parmatch.ml[1997,67665+11]..[1997,67665+31]) ghost
                          Pexp_tuple
                          [
                            expression (typing/parmatch.ml[1997,67665+11]..[1997,67665+12])
                              Pexp_ident "x" (typing/parmatch.ml[1997,67665+11]..[1997,67665+12])
                            expression (typing/parmatch.ml[1997,67665+14]..[1997,67665+31])
                              Pexp_apply
                              expression (typing/parmatch.ml[1997,67665+14]..[1997,67665+22])
                                Pexp_ident "add_path" (typing/parmatch.ml[1997,67665+14]..[1997,67665+22])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1997,67665+23]..[1997,67665+27])
                                    Pexp_ident "path" (typing/parmatch.ml[1997,67665+23]..[1997,67665+27])
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[1997,67665+28]..[1997,67665+31])
                                    Pexp_ident "rem" (typing/parmatch.ml[1997,67665+28]..[1997,67665+31])
                              ]
                          ]
            ]
    ]
  structure_item (typing/parmatch.ml[1999,67698+0]..[2004,67849+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[1999,67698+4]..[1999,67698+19])
          Ppat_var "extendable_path" (typing/parmatch.ml[1999,67698+4]..[1999,67698+19])
        expression (typing/parmatch.ml[1999,67698+20]..[2004,67849+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[1999,67698+20]..[1999,67698+24])
            Ppat_var "path" (typing/parmatch.ml[1999,67698+20]..[1999,67698+24])
          expression (typing/parmatch.ml[2000,67725+2]..[2004,67849+38])
            Pexp_apply
            expression (typing/parmatch.ml[2000,67725+2]..[2000,67725+5])
              Pexp_ident "not" (typing/parmatch.ml[2000,67725+2]..[2000,67725+5])
            [
              <arg>
              Nolabel
                expression (typing/parmatch.ml[2001,67731+4]..[2004,67849+38])
                  Pexp_apply
                  expression (typing/parmatch.ml[2001,67731+37]..[2001,67731+39])
                    Pexp_ident "||" (typing/parmatch.ml[2001,67731+37]..[2001,67731+39])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2001,67731+5]..[2001,67731+36])
                        Pexp_apply
                        expression (typing/parmatch.ml[2001,67731+5]..[2001,67731+14])
                          Pexp_ident "Path.same" (typing/parmatch.ml[2001,67731+5]..[2001,67731+14])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2001,67731+15]..[2001,67731+19])
                              Pexp_ident "path" (typing/parmatch.ml[2001,67731+15]..[2001,67731+19])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2001,67731+20]..[2001,67731+36])
                              Pexp_ident "Predef.path_bool" (typing/parmatch.ml[2001,67731+20]..[2001,67731+36])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2002,67771+4]..[2004,67849+37])
                        Pexp_apply
                        expression (typing/parmatch.ml[2002,67771+36]..[2002,67771+38])
                          Pexp_ident "||" (typing/parmatch.ml[2002,67771+36]..[2002,67771+38])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2002,67771+4]..[2002,67771+35])
                              Pexp_apply
                              expression (typing/parmatch.ml[2002,67771+4]..[2002,67771+13])
                                Pexp_ident "Path.same" (typing/parmatch.ml[2002,67771+4]..[2002,67771+13])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[2002,67771+14]..[2002,67771+18])
                                    Pexp_ident "path" (typing/parmatch.ml[2002,67771+14]..[2002,67771+18])
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[2002,67771+19]..[2002,67771+35])
                                    Pexp_ident "Predef.path_list" (typing/parmatch.ml[2002,67771+19]..[2002,67771+35])
                              ]
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2003,67810+4]..[2004,67849+37])
                              Pexp_apply
                              expression (typing/parmatch.ml[2003,67810+36]..[2003,67810+38])
                                Pexp_ident "||" (typing/parmatch.ml[2003,67810+36]..[2003,67810+38])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[2003,67810+4]..[2003,67810+35])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[2003,67810+4]..[2003,67810+13])
                                      Pexp_ident "Path.same" (typing/parmatch.ml[2003,67810+4]..[2003,67810+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[2003,67810+14]..[2003,67810+18])
                                          Pexp_ident "path" (typing/parmatch.ml[2003,67810+14]..[2003,67810+18])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[2003,67810+19]..[2003,67810+35])
                                          Pexp_ident "Predef.path_unit" (typing/parmatch.ml[2003,67810+19]..[2003,67810+35])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[2004,67849+4]..[2004,67849+37])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[2004,67849+4]..[2004,67849+13])
                                      Pexp_ident "Path.same" (typing/parmatch.ml[2004,67849+4]..[2004,67849+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[2004,67849+14]..[2004,67849+18])
                                          Pexp_ident "path" (typing/parmatch.ml[2004,67849+14]..[2004,67849+18])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[2004,67849+19]..[2004,67849+37])
                                          Pexp_ident "Predef.path_option" (typing/parmatch.ml[2004,67849+19]..[2004,67849+37])
                                    ]
                              ]
                        ]
                  ]
            ]
    ]
  structure_item (typing/parmatch.ml[2006,67889+0]..[2027,68734+30])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[2006,67889+8]..[2006,67889+30])
          Ppat_var "collect_paths_from_pat" (typing/parmatch.ml[2006,67889+8]..[2006,67889+30])
        expression (typing/parmatch.ml[2006,67889+31]..[2027,68734+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[2006,67889+31]..[2006,67889+32])
            Ppat_var "r" (typing/parmatch.ml[2006,67889+31]..[2006,67889+32])
          expression (typing/parmatch.ml[2006,67889+33]..[2027,68734+30]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[2006,67889+33]..[2006,67889+34])
              Ppat_var "p" (typing/parmatch.ml[2006,67889+33]..[2006,67889+34])
            expression (typing/parmatch.ml[2006,67889+37]..[2027,68734+30])
              Pexp_match
              expression (typing/parmatch.ml[2006,67889+43]..[2006,67889+53])
                Pexp_field
                expression (typing/parmatch.ml[2006,67889+43]..[2006,67889+44])
                  Pexp_ident "p" (typing/parmatch.ml[2006,67889+43]..[2006,67889+44])
                "pat_desc" (typing/parmatch.ml[2006,67889+45]..[2006,67889+53])
              [
                <case>
                  pattern (typing/parmatch.ml[2007,67948+2]..[2008,68024+23])
                    Ppat_construct "Tpat_construct" (typing/parmatch.ml[2007,67948+2]..[2007,67948+16])
                    Some
                      []
                      pattern (typing/parmatch.ml[2007,67948+16]..[2008,68024+23])
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[2007,67948+17]..[2007,67948+18])
                            Ppat_any
                          pattern (typing/parmatch.ml[2007,67948+20]..[2007,67948+74])
                            Ppat_record Closed
                            [
                              "cstr_tag" (typing/parmatch.ml[2007,67948+21]..[2007,67948+29])
                                pattern (typing/parmatch.ml[2007,67948+30]..[2007,67948+73])
                                  Ppat_or
                                  pattern (typing/parmatch.ml[2007,67948+31]..[2007,67948+59])
                                    Ppat_or
                                    pattern (typing/parmatch.ml[2007,67948+31]..[2007,67948+46])
                                      Ppat_construct "Cstr_constant" (typing/parmatch.ml[2007,67948+31]..[2007,67948+44])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[2007,67948+45]..[2007,67948+46])
                                          Ppat_any
                                    pattern (typing/parmatch.ml[2007,67948+47]..[2007,67948+59])
                                      Ppat_construct "Cstr_block" (typing/parmatch.ml[2007,67948+47]..[2007,67948+57])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[2007,67948+58]..[2007,67948+59])
                                          Ppat_any
                                  pattern (typing/parmatch.ml[2007,67948+60]..[2007,67948+72])
                                    Ppat_construct "Cstr_unboxed" (typing/parmatch.ml[2007,67948+60]..[2007,67948+72])
                                    None
                            ]
                          pattern (typing/parmatch.ml[2008,68024+17]..[2008,68024+19])
                            Ppat_var "ps" (typing/parmatch.ml[2008,68024+17]..[2008,68024+19])
                          pattern (typing/parmatch.ml[2008,68024+21]..[2008,68024+22])
                            Ppat_any
                        ]
                  expression (typing/parmatch.ml[2009,68051+4]..[2013,68224+8])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[2009,68051+8]..[2009,68051+12])
                          Ppat_var "path" (typing/parmatch.ml[2009,68051+8]..[2009,68051+12])
                        expression (typing/parmatch.ml[2009,68051+15]..[2009,68051+61])
                          Pexp_apply
                          expression (typing/parmatch.ml[2009,68051+15]..[2009,68051+40])
                            Pexp_ident "get_constructor_type_path" (typing/parmatch.ml[2009,68051+15]..[2009,68051+40])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[2009,68051+41]..[2009,68051+51])
                                Pexp_field
                                expression (typing/parmatch.ml[2009,68051+41]..[2009,68051+42])
                                  Pexp_ident "p" (typing/parmatch.ml[2009,68051+41]..[2009,68051+42])
                                "pat_type" (typing/parmatch.ml[2009,68051+43]..[2009,68051+51])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[2009,68051+52]..[2009,68051+61])
                                Pexp_field
                                expression (typing/parmatch.ml[2009,68051+52]..[2009,68051+53])
                                  Pexp_ident "p" (typing/parmatch.ml[2009,68051+52]..[2009,68051+53])
                                "pat_env" (typing/parmatch.ml[2009,68051+54]..[2009,68051+61])
                          ]
                    ]
                    expression (typing/parmatch.ml[2010,68116+4]..[2013,68224+8])
                      Pexp_apply
                      expression (typing/parmatch.ml[2010,68116+4]..[2010,68116+18])
                        Pexp_ident "List.fold_left" (typing/parmatch.ml[2010,68116+4]..[2010,68116+18])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[2011,68135+6]..[2011,68135+28])
                            Pexp_ident "collect_paths_from_pat" (typing/parmatch.ml[2011,68135+6]..[2011,68135+28])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[2012,68164+6]..[2012,68164+59])
                            Pexp_ifthenelse
                            expression (typing/parmatch.ml[2012,68164+10]..[2012,68164+30])
                              Pexp_apply
                              expression (typing/parmatch.ml[2012,68164+10]..[2012,68164+25])
                                Pexp_ident "extendable_path" (typing/parmatch.ml[2012,68164+10]..[2012,68164+25])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[2012,68164+26]..[2012,68164+30])
                                    Pexp_ident "path" (typing/parmatch.ml[2012,68164+26]..[2012,68164+30])
                              ]
                            expression (typing/parmatch.ml[2012,68164+36]..[2012,68164+51])
                              Pexp_apply
                              expression (typing/parmatch.ml[2012,68164+36]..[2012,68164+44])
                                Pexp_ident "add_path" (typing/parmatch.ml[2012,68164+36]..[2012,68164+44])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[2012,68164+45]..[2012,68164+49])
                                    Pexp_ident "path" (typing/parmatch.ml[2012,68164+45]..[2012,68164+49])
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[2012,68164+50]..[2012,68164+51])
                                    Pexp_ident "r" (typing/parmatch.ml[2012,68164+50]..[2012,68164+51])
                              ]
                            Some
                              expression (typing/parmatch.ml[2012,68164+57]..[2012,68164+58])
                                Pexp_ident "r" (typing/parmatch.ml[2012,68164+57]..[2012,68164+58])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[2013,68224+6]..[2013,68224+8])
                            Pexp_ident "ps" (typing/parmatch.ml[2013,68224+6]..[2013,68224+8])
                      ]
                <case>
                  pattern (typing/parmatch.ml[2014,68233+2]..[2014,68233+62])
                    Ppat_or
                    pattern (typing/parmatch.ml[2014,68233+2]..[2014,68233+37])
                      Ppat_or
                      pattern (typing/parmatch.ml[2014,68233+2]..[2014,68233+21])
                        Ppat_or
                        pattern (typing/parmatch.ml[2014,68233+2]..[2014,68233+10])
                          Ppat_construct "Tpat_any" (typing/parmatch.ml[2014,68233+2]..[2014,68233+10])
                          None
                        pattern (typing/parmatch.ml[2014,68233+11]..[2014,68233+21])
                          Ppat_construct "Tpat_var" (typing/parmatch.ml[2014,68233+11]..[2014,68233+19])
                          Some
                            []
                            pattern (typing/parmatch.ml[2014,68233+20]..[2014,68233+21])
                              Ppat_any
                      pattern (typing/parmatch.ml[2014,68233+22]..[2014,68233+37])
                        Ppat_construct "Tpat_constant" (typing/parmatch.ml[2014,68233+22]..[2014,68233+35])
                        Some
                          []
                          pattern (typing/parmatch.ml[2014,68233+36]..[2014,68233+37])
                            Ppat_any
                    pattern (typing/parmatch.ml[2014,68233+39]..[2014,68233+62])
                      Ppat_construct "Tpat_variant" (typing/parmatch.ml[2014,68233+39]..[2014,68233+51])
                      Some
                        []
                        pattern (typing/parmatch.ml[2014,68233+52]..[2014,68233+62])
                          Ppat_tuple
                          [
                            pattern (typing/parmatch.ml[2014,68233+53]..[2014,68233+54])
                              Ppat_any
                            pattern (typing/parmatch.ml[2014,68233+55]..[2014,68233+59])
                              Ppat_construct "None" (typing/parmatch.ml[2014,68233+55]..[2014,68233+59])
                              None
                            pattern (typing/parmatch.ml[2014,68233+60]..[2014,68233+61])
                              Ppat_any
                          ]
                  expression (typing/parmatch.ml[2014,68233+66]..[2014,68233+67])
                    Pexp_ident "r" (typing/parmatch.ml[2014,68233+66]..[2014,68233+67])
                <case>
                  pattern (typing/parmatch.ml[2015,68301+2]..[2016,68333+56])
                    Ppat_or
                    pattern (typing/parmatch.ml[2015,68301+2]..[2015,68301+31])
                      Ppat_or
                      pattern (typing/parmatch.ml[2015,68301+2]..[2015,68301+15])
                        Ppat_construct "Tpat_tuple" (typing/parmatch.ml[2015,68301+2]..[2015,68301+12])
                        Some
                          []
                          pattern (typing/parmatch.ml[2015,68301+13]..[2015,68301+15])
                            Ppat_var "ps" (typing/parmatch.ml[2015,68301+13]..[2015,68301+15])
                      pattern (typing/parmatch.ml[2015,68301+18]..[2015,68301+31])
                        Ppat_construct "Tpat_array" (typing/parmatch.ml[2015,68301+18]..[2015,68301+28])
                        Some
                          []
                          pattern (typing/parmatch.ml[2015,68301+29]..[2015,68301+31])
                            Ppat_var "ps" (typing/parmatch.ml[2015,68301+29]..[2015,68301+31])
                    pattern (typing/parmatch.ml[2016,68333+2]..[2016,68333+56])
                      Ppat_construct "Tpat_construct" (typing/parmatch.ml[2016,68333+2]..[2016,68333+16])
                      Some
                        []
                        pattern (typing/parmatch.ml[2016,68333+17]..[2016,68333+56])
                          Ppat_tuple
                          [
                            pattern (typing/parmatch.ml[2016,68333+18]..[2016,68333+19])
                              Ppat_any
                            pattern (typing/parmatch.ml[2016,68333+21]..[2016,68333+48])
                              Ppat_record Closed
                              [
                                "cstr_tag" (typing/parmatch.ml[2016,68333+22]..[2016,68333+30])
                                  pattern (typing/parmatch.ml[2016,68333+31]..[2016,68333+47])
                                    Ppat_construct "Cstr_extension" (typing/parmatch.ml[2016,68333+31]..[2016,68333+45])
                                    Some
                                      []
                                      pattern (typing/parmatch.ml[2016,68333+46]..[2016,68333+47])
                                        Ppat_any
                              ]
                            pattern (typing/parmatch.ml[2016,68333+50]..[2016,68333+52])
                              Ppat_var "ps" (typing/parmatch.ml[2016,68333+50]..[2016,68333+52])
                            pattern (typing/parmatch.ml[2016,68333+54]..[2016,68333+55])
                              Ppat_any
                          ]
                  expression (typing/parmatch.ml[2017,68392+4]..[2017,68392+46])
                    Pexp_apply
                    expression (typing/parmatch.ml[2017,68392+4]..[2017,68392+18])
                      Pexp_ident "List.fold_left" (typing/parmatch.ml[2017,68392+4]..[2017,68392+18])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[2017,68392+19]..[2017,68392+41])
                          Pexp_ident "collect_paths_from_pat" (typing/parmatch.ml[2017,68392+19]..[2017,68392+41])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[2017,68392+42]..[2017,68392+43])
                          Pexp_ident "r" (typing/parmatch.ml[2017,68392+42]..[2017,68392+43])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[2017,68392+44]..[2017,68392+46])
                          Pexp_ident "ps" (typing/parmatch.ml[2017,68392+44]..[2017,68392+46])
                    ]
                <case>
                  pattern (typing/parmatch.ml[2018,68439+2]..[2018,68439+21])
                    Ppat_construct "Tpat_record" (typing/parmatch.ml[2018,68439+2]..[2018,68439+13])
                    Some
                      []
                      pattern (typing/parmatch.ml[2018,68439+14]..[2018,68439+21])
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[2018,68439+15]..[2018,68439+18])
                            Ppat_var "lps" (typing/parmatch.ml[2018,68439+15]..[2018,68439+18])
                          pattern (typing/parmatch.ml[2018,68439+19]..[2018,68439+20])
                            Ppat_any
                        ]
                  expression (typing/parmatch.ml[2019,68464+4]..[2021,68537+11])
                    Pexp_apply
                    expression (typing/parmatch.ml[2019,68464+4]..[2019,68464+18])
                      Pexp_ident "List.fold_left" (typing/parmatch.ml[2019,68464+4]..[2019,68464+18])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[2020,68483+6]..[2020,68483+53])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/parmatch.ml[2020,68483+11]..[2020,68483+12])
                            Ppat_var "r" (typing/parmatch.ml[2020,68483+11]..[2020,68483+12])
                          expression (typing/parmatch.ml[2020,68483+13]..[2020,68483+52]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/parmatch.ml[2020,68483+13]..[2020,68483+22])
                              Ppat_tuple
                              [
                                pattern (typing/parmatch.ml[2020,68483+14]..[2020,68483+15])
                                  Ppat_any
                                pattern (typing/parmatch.ml[2020,68483+17]..[2020,68483+18])
                                  Ppat_any
                                pattern (typing/parmatch.ml[2020,68483+20]..[2020,68483+21])
                                  Ppat_var "p" (typing/parmatch.ml[2020,68483+20]..[2020,68483+21])
                              ]
                            expression (typing/parmatch.ml[2020,68483+26]..[2020,68483+52])
                              Pexp_apply
                              expression (typing/parmatch.ml[2020,68483+26]..[2020,68483+48])
                                Pexp_ident "collect_paths_from_pat" (typing/parmatch.ml[2020,68483+26]..[2020,68483+48])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[2020,68483+49]..[2020,68483+50])
                                    Pexp_ident "r" (typing/parmatch.ml[2020,68483+49]..[2020,68483+50])
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[2020,68483+51]..[2020,68483+52])
                                    Pexp_ident "p" (typing/parmatch.ml[2020,68483+51]..[2020,68483+52])
                              ]
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[2021,68537+6]..[2021,68537+7])
                          Pexp_ident "r" (typing/parmatch.ml[2021,68537+6]..[2021,68537+7])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[2021,68537+8]..[2021,68537+11])
                          Pexp_ident "lps" (typing/parmatch.ml[2021,68537+8]..[2021,68537+11])
                    ]
                <case>
                  pattern (typing/parmatch.ml[2022,68549+2]..[2022,68549+50])
                    Ppat_or
                    pattern (typing/parmatch.ml[2022,68549+2]..[2022,68549+29])
                      Ppat_construct "Tpat_variant" (typing/parmatch.ml[2022,68549+2]..[2022,68549+14])
                      Some
                        []
                        pattern (typing/parmatch.ml[2022,68549+15]..[2022,68549+29])
                          Ppat_tuple
                          [
                            pattern (typing/parmatch.ml[2022,68549+16]..[2022,68549+17])
                              Ppat_any
                            pattern (typing/parmatch.ml[2022,68549+19]..[2022,68549+25])
                              Ppat_construct "Some" (typing/parmatch.ml[2022,68549+19]..[2022,68549+23])
                              Some
                                []
                                pattern (typing/parmatch.ml[2022,68549+24]..[2022,68549+25])
                                  Ppat_var "p" (typing/parmatch.ml[2022,68549+24]..[2022,68549+25])
                            pattern (typing/parmatch.ml[2022,68549+27]..[2022,68549+28])
                              Ppat_any
                          ]
                    pattern (typing/parmatch.ml[2022,68549+32]..[2022,68549+50])
                      Ppat_construct "Tpat_alias" (typing/parmatch.ml[2022,68549+32]..[2022,68549+42])
                      Some
                        []
                        pattern (typing/parmatch.ml[2022,68549+43]..[2022,68549+50])
                          Ppat_tuple
                          [
                            pattern (typing/parmatch.ml[2022,68549+44]..[2022,68549+45])
                              Ppat_var "p" (typing/parmatch.ml[2022,68549+44]..[2022,68549+45])
                            pattern (typing/parmatch.ml[2022,68549+46]..[2022,68549+47])
                              Ppat_any
                            pattern (typing/parmatch.ml[2022,68549+48]..[2022,68549+49])
                              Ppat_any
                          ]
                  expression (typing/parmatch.ml[2022,68549+54]..[2022,68549+80])
                    Pexp_apply
                    expression (typing/parmatch.ml[2022,68549+54]..[2022,68549+76])
                      Pexp_ident "collect_paths_from_pat" (typing/parmatch.ml[2022,68549+54]..[2022,68549+76])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[2022,68549+77]..[2022,68549+78])
                          Pexp_ident "r" (typing/parmatch.ml[2022,68549+77]..[2022,68549+78])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[2022,68549+79]..[2022,68549+80])
                          Pexp_ident "p" (typing/parmatch.ml[2022,68549+79]..[2022,68549+80])
                    ]
                <case>
                  pattern (typing/parmatch.ml[2023,68630+2]..[2023,68630+19])
                    Ppat_construct "Tpat_or" (typing/parmatch.ml[2023,68630+2]..[2023,68630+9])
                    Some
                      []
                      pattern (typing/parmatch.ml[2023,68630+10]..[2023,68630+19])
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[2023,68630+11]..[2023,68630+13])
                            Ppat_var "p1" (typing/parmatch.ml[2023,68630+11]..[2023,68630+13])
                          pattern (typing/parmatch.ml[2023,68630+14]..[2023,68630+16])
                            Ppat_var "p2" (typing/parmatch.ml[2023,68630+14]..[2023,68630+16])
                          pattern (typing/parmatch.ml[2023,68630+17]..[2023,68630+18])
                            Ppat_any
                        ]
                  expression (typing/parmatch.ml[2024,68653+4]..[2024,68653+59])
                    Pexp_apply
                    expression (typing/parmatch.ml[2024,68653+4]..[2024,68653+26])
                      Pexp_ident "collect_paths_from_pat" (typing/parmatch.ml[2024,68653+4]..[2024,68653+26])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[2024,68653+27]..[2024,68653+56])
                          Pexp_apply
                          expression (typing/parmatch.ml[2024,68653+28]..[2024,68653+50])
                            Pexp_ident "collect_paths_from_pat" (typing/parmatch.ml[2024,68653+28]..[2024,68653+50])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[2024,68653+51]..[2024,68653+52])
                                Pexp_ident "r" (typing/parmatch.ml[2024,68653+51]..[2024,68653+52])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[2024,68653+53]..[2024,68653+55])
                                Pexp_ident "p1" (typing/parmatch.ml[2024,68653+53]..[2024,68653+55])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[2024,68653+57]..[2024,68653+59])
                          Pexp_ident "p2" (typing/parmatch.ml[2024,68653+57]..[2024,68653+59])
                    ]
                <case>
                  pattern (typing/parmatch.ml[2025,68713+2]..[2025,68713+13])
                    Ppat_construct "Tpat_lazy" (typing/parmatch.ml[2025,68713+2]..[2025,68713+11])
                    Some
                      []
                      pattern (typing/parmatch.ml[2025,68713+12]..[2025,68713+13])
                        Ppat_var "p" (typing/parmatch.ml[2025,68713+12]..[2025,68713+13])
                  expression (typing/parmatch.ml[2027,68734+4]..[2027,68734+30])
                    Pexp_apply
                    expression (typing/parmatch.ml[2027,68734+4]..[2027,68734+26])
                      Pexp_ident "collect_paths_from_pat" (typing/parmatch.ml[2027,68734+4]..[2027,68734+26])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[2027,68734+27]..[2027,68734+28])
                          Pexp_ident "r" (typing/parmatch.ml[2027,68734+27]..[2027,68734+28])
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[2027,68734+29]..[2027,68734+30])
                          Pexp_ident "p" (typing/parmatch.ml[2027,68734+29]..[2027,68734+30])
                    ]
              ]
    ]
  structure_item (typing/parmatch.ml[2037,68940+0]..[2056,69488+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[2037,68940+4]..[2037,68940+20])
          Ppat_var "do_check_fragile" (typing/parmatch.ml[2037,68940+4]..[2037,68940+20])
        expression (typing/parmatch.ml[2037,68940+21]..[2056,69488+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[2037,68940+21]..[2037,68940+24])
            Ppat_var "loc" (typing/parmatch.ml[2037,68940+21]..[2037,68940+24])
          expression (typing/parmatch.ml[2037,68940+25]..[2056,69488+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[2037,68940+25]..[2037,68940+30])
              Ppat_var "casel" (typing/parmatch.ml[2037,68940+25]..[2037,68940+30])
            expression (typing/parmatch.ml[2037,68940+31]..[2056,69488+14]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[2037,68940+31]..[2037,68940+34])
                Ppat_var "pss" (typing/parmatch.ml[2037,68940+31]..[2037,68940+34])
              expression (typing/parmatch.ml[2038,68977+2]..[2056,69488+14])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/parmatch.ml[2038,68977+6]..[2038,68977+10])
                      Ppat_var "exts" (typing/parmatch.ml[2038,68977+6]..[2038,68977+10])
                    expression (typing/parmatch.ml[2039,68990+4]..[2041,69061+14])
                      Pexp_apply
                      expression (typing/parmatch.ml[2039,68990+4]..[2039,68990+18])
                        Pexp_ident "List.fold_left" (typing/parmatch.ml[2039,68990+4]..[2039,68990+18])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[2040,69009+6]..[2040,69009+51])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/parmatch.ml[2040,69009+11]..[2040,69009+12])
                              Ppat_var "r" (typing/parmatch.ml[2040,69009+11]..[2040,69009+12])
                            expression (typing/parmatch.ml[2040,69009+13]..[2040,69009+50]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/parmatch.ml[2040,69009+13]..[2040,69009+14])
                                Ppat_var "c" (typing/parmatch.ml[2040,69009+13]..[2040,69009+14])
                              expression (typing/parmatch.ml[2040,69009+18]..[2040,69009+50])
                                Pexp_apply
                                expression (typing/parmatch.ml[2040,69009+18]..[2040,69009+40])
                                  Pexp_ident "collect_paths_from_pat" (typing/parmatch.ml[2040,69009+18]..[2040,69009+40])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[2040,69009+41]..[2040,69009+42])
                                      Pexp_ident "r" (typing/parmatch.ml[2040,69009+41]..[2040,69009+42])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[2040,69009+43]..[2040,69009+50])
                                      Pexp_field
                                      expression (typing/parmatch.ml[2040,69009+43]..[2040,69009+44])
                                        Pexp_ident "c" (typing/parmatch.ml[2040,69009+43]..[2040,69009+44])
                                      "c_lhs" (typing/parmatch.ml[2040,69009+45]..[2040,69009+50])
                                ]
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[2041,69061+6]..[2041,69061+8])
                            Pexp_construct "[]" (typing/parmatch.ml[2041,69061+6]..[2041,69061+8])
                            None
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[2041,69061+9]..[2041,69061+14])
                            Pexp_ident "casel" (typing/parmatch.ml[2041,69061+9]..[2041,69061+14])
                      ]
                ]
                expression (typing/parmatch.ml[2042,69079+2]..[2056,69488+14])
                  Pexp_match
                  expression (typing/parmatch.ml[2042,69079+8]..[2042,69079+12])
                    Pexp_ident "exts" (typing/parmatch.ml[2042,69079+8]..[2042,69079+12])
                  [
                    <case>
                      pattern (typing/parmatch.ml[2043,69097+4]..[2043,69097+6])
                        Ppat_construct "[]" (typing/parmatch.ml[2043,69097+4]..[2043,69097+6])
                        None
                      expression (typing/parmatch.ml[2043,69097+10]..[2043,69097+12])
                        Pexp_construct "()" (typing/parmatch.ml[2043,69097+10]..[2043,69097+12])
                        None
                    <case>
                      pattern (typing/parmatch.ml[2044,69110+4]..[2044,69110+5])
                        Ppat_any
                      expression (typing/parmatch.ml[2044,69110+9]..[2056,69488+14])
                        Pexp_match
                        expression (typing/parmatch.ml[2044,69110+15]..[2044,69110+18])
                          Pexp_ident "pss" (typing/parmatch.ml[2044,69110+15]..[2044,69110+18])
                        [
                          <case>
                            pattern (typing/parmatch.ml[2045,69134+6]..[2045,69134+8])
                              Ppat_construct "[]" (typing/parmatch.ml[2045,69134+6]..[2045,69134+8])
                              None
                            expression (typing/parmatch.ml[2045,69134+12]..[2045,69134+14])
                              Pexp_construct "()" (typing/parmatch.ml[2045,69134+12]..[2045,69134+14])
                              None
                          <case>
                            pattern (typing/parmatch.ml[2046,69149+6]..[2046,69149+11])
                              Ppat_construct "::" (typing/parmatch.ml[2046,69149+8]..[2046,69149+10])
                              Some
                                []
                                pattern (typing/parmatch.ml[2046,69149+6]..[2046,69149+11]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (typing/parmatch.ml[2046,69149+6]..[2046,69149+8])
                                      Ppat_var "ps" (typing/parmatch.ml[2046,69149+6]..[2046,69149+8])
                                    pattern (typing/parmatch.ml[2046,69149+10]..[2046,69149+11])
                                      Ppat_any
                                  ]
                            expression (typing/parmatch.ml[2047,69164+8]..[2056,69488+14])
                              Pexp_apply
                              expression (typing/parmatch.ml[2047,69164+8]..[2047,69164+17])
                                Pexp_ident "List.iter" (typing/parmatch.ml[2047,69164+8]..[2047,69164+17])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[2048,69182+10]..[2055,69456+31])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/parmatch.ml[2048,69182+15]..[2048,69182+18])
                                      Ppat_var "ext" (typing/parmatch.ml[2048,69182+15]..[2048,69182+18])
                                    expression (typing/parmatch.ml[2049,69204+12]..[2055,69456+30])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/parmatch.ml[2049,69204+16]..[2049,69204+25])
                                            Ppat_var "witnesses" (typing/parmatch.ml[2049,69204+16]..[2049,69204+25])
                                          expression (typing/parmatch.ml[2049,69204+28]..[2049,69204+67])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[2049,69204+28]..[2049,69204+35])
                                              Pexp_ident "exhaust" (typing/parmatch.ml[2049,69204+28]..[2049,69204+35])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2049,69204+36]..[2049,69204+46])
                                                  Pexp_construct "Some" (typing/parmatch.ml[2049,69204+37]..[2049,69204+41])
                                                  Some
                                                    expression (typing/parmatch.ml[2049,69204+42]..[2049,69204+45])
                                                      Pexp_ident "ext" (typing/parmatch.ml[2049,69204+42]..[2049,69204+45])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2049,69204+47]..[2049,69204+50])
                                                  Pexp_ident "pss" (typing/parmatch.ml[2049,69204+47]..[2049,69204+50])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2049,69204+51]..[2049,69204+67])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[2049,69204+52]..[2049,69204+63])
                                                    Pexp_ident "List.length" (typing/parmatch.ml[2049,69204+52]..[2049,69204+63])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2049,69204+64]..[2049,69204+66])
                                                        Pexp_ident "ps" (typing/parmatch.ml[2049,69204+64]..[2049,69204+66])
                                                  ]
                                            ]
                                      ]
                                      expression (typing/parmatch.ml[2050,69275+12]..[2055,69456+30])
                                        Pexp_match
                                        expression (typing/parmatch.ml[2050,69275+18]..[2050,69275+30])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[2050,69275+18]..[2050,69275+27])
                                            Pexp_ident "witnesses" (typing/parmatch.ml[2050,69275+18]..[2050,69275+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[2050,69275+28]..[2050,69275+30])
                                                Pexp_construct "()" (typing/parmatch.ml[2050,69275+28]..[2050,69275+30])
                                                None
                                          ]
                                        [
                                          <case>
                                            pattern (typing/parmatch.ml[2051,69311+14]..[2051,69311+21])
                                              Ppat_construct "Seq.Nil" (typing/parmatch.ml[2051,69311+14]..[2051,69311+21])
                                              None
                                            expression (typing/parmatch.ml[2052,69336+16]..[2054,69397+58])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[2052,69336+16]..[2052,69336+38])
                                                Pexp_ident "Location.prerr_warning" (typing/parmatch.ml[2052,69336+16]..[2052,69336+38])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[2053,69375+18]..[2053,69375+21])
                                                    Pexp_ident "loc" (typing/parmatch.ml[2053,69375+18]..[2053,69375+21])
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[2054,69397+18]..[2054,69397+58])
                                                    Pexp_construct "Warnings.Fragile_match" (typing/parmatch.ml[2054,69397+19]..[2054,69397+41])
                                                    Some
                                                      expression (typing/parmatch.ml[2054,69397+42]..[2054,69397+57])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[2054,69397+43]..[2054,69397+52])
                                                          Pexp_ident "Path.name" (typing/parmatch.ml[2054,69397+43]..[2054,69397+52])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[2054,69397+53]..[2054,69397+56])
                                                              Pexp_ident "ext" (typing/parmatch.ml[2054,69397+53]..[2054,69397+56])
                                                        ]
                                              ]
                                          <case>
                                            pattern (typing/parmatch.ml[2055,69456+14]..[2055,69456+24])
                                              Ppat_construct "Seq.Cons" (typing/parmatch.ml[2055,69456+14]..[2055,69456+22])
                                              Some
                                                []
                                                pattern (typing/parmatch.ml[2055,69456+23]..[2055,69456+24])
                                                  Ppat_any
                                            expression (typing/parmatch.ml[2055,69456+28]..[2055,69456+30])
                                              Pexp_construct "()" (typing/parmatch.ml[2055,69456+28]..[2055,69456+30])
                                              None
                                        ]
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[2056,69488+10]..[2056,69488+14])
                                    Pexp_ident "exts" (typing/parmatch.ml[2056,69488+10]..[2056,69488+14])
                              ]
                        ]
                  ]
    ]
  structure_item (typing/parmatch.ml[2062,69610+0]..[2130,72627+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[2062,69610+4]..[2062,69610+16])
          Ppat_var "check_unused" (typing/parmatch.ml[2062,69610+4]..[2062,69610+16])
        expression (typing/parmatch.ml[2062,69610+17]..[2130,72627+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[2062,69610+17]..[2062,69610+21])
            Ppat_var "pred" (typing/parmatch.ml[2062,69610+17]..[2062,69610+21])
          expression (typing/parmatch.ml[2062,69610+22]..[2130,72627+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[2062,69610+22]..[2062,69610+27])
              Ppat_var "casel" (typing/parmatch.ml[2062,69610+22]..[2062,69610+27])
            expression (typing/parmatch.ml[2063,69640+2]..[2130,72627+19])
              Pexp_ifthenelse
              expression (typing/parmatch.ml[2063,69640+5]..[2064,69688+69])
                Pexp_apply
                expression (typing/parmatch.ml[2064,69688+2]..[2064,69688+4])
                  Pexp_ident "||" (typing/parmatch.ml[2064,69688+2]..[2064,69688+4])
                [
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[2063,69640+5]..[2063,69640+47])
                      Pexp_apply
                      expression (typing/parmatch.ml[2063,69640+5]..[2063,69640+23])
                        Pexp_ident "Warnings.is_active" (typing/parmatch.ml[2063,69640+5]..[2063,69640+23])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[2063,69640+24]..[2063,69640+47])
                            Pexp_construct "Warnings.Redundant_case" (typing/parmatch.ml[2063,69640+24]..[2063,69640+47])
                            None
                      ]
                  <arg>
                  Nolabel
                    expression (typing/parmatch.ml[2064,69688+5]..[2064,69688+69])
                      Pexp_apply
                      expression (typing/parmatch.ml[2064,69688+5]..[2064,69688+16])
                        Pexp_ident "List.exists" (typing/parmatch.ml[2064,69688+5]..[2064,69688+16])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[2064,69688+17]..[2064,69688+63])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/parmatch.ml[2064,69688+22]..[2064,69688+23])
                              Ppat_var "c" (typing/parmatch.ml[2064,69688+22]..[2064,69688+23])
                            expression (typing/parmatch.ml[2064,69688+27]..[2064,69688+62])
                              Pexp_apply
                              expression (typing/parmatch.ml[2064,69688+44]..[2064,69688+45])
                                Pexp_ident "=" (typing/parmatch.ml[2064,69688+44]..[2064,69688+45])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[2064,69688+27]..[2064,69688+43])
                                    Pexp_field
                                    expression (typing/parmatch.ml[2064,69688+27]..[2064,69688+34])
                                      Pexp_field
                                      expression (typing/parmatch.ml[2064,69688+27]..[2064,69688+28])
                                        Pexp_ident "c" (typing/parmatch.ml[2064,69688+27]..[2064,69688+28])
                                      "c_rhs" (typing/parmatch.ml[2064,69688+29]..[2064,69688+34])
                                    "exp_desc" (typing/parmatch.ml[2064,69688+35]..[2064,69688+43])
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[2064,69688+46]..[2064,69688+62])
                                    Pexp_construct "Texp_unreachable" (typing/parmatch.ml[2064,69688+46]..[2064,69688+62])
                                    None
                              ]
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[2064,69688+64]..[2064,69688+69])
                            Pexp_ident "casel" (typing/parmatch.ml[2064,69688+64]..[2064,69688+69])
                      ]
                ]
              expression (typing/parmatch.ml[2065,69763+4]..[2130,72627+19])
                Pexp_let Rec
                [
                  <def>
                    pattern (typing/parmatch.ml[2065,69763+12]..[2065,69763+18])
                      Ppat_var "do_rec" (typing/parmatch.ml[2065,69763+12]..[2065,69763+18])
                    expression (typing/parmatch.ml[2065,69763+19]..[2128,72588+34]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/parmatch.ml[2065,69763+19]..[2065,69763+23])
                        Ppat_var "pref" (typing/parmatch.ml[2065,69763+19]..[2065,69763+23])
                      expression (typing/parmatch.ml[2065,69763+26]..[2128,72588+34])
                        Pexp_function
                        [
                          <case>
                            pattern (typing/parmatch.ml[2066,69798+8]..[2066,69798+10])
                              Ppat_construct "[]" (typing/parmatch.ml[2066,69798+8]..[2066,69798+10])
                              None
                            expression (typing/parmatch.ml[2066,69798+14]..[2066,69798+16])
                              Pexp_construct "()" (typing/parmatch.ml[2066,69798+14]..[2066,69798+16])
                              None
                          <case>
                            pattern (typing/parmatch.ml[2067,69815+8]..[2067,69815+40])
                              Ppat_construct "::" (typing/parmatch.ml[2067,69815+34]..[2067,69815+36])
                              Some
                                []
                                pattern (typing/parmatch.ml[2067,69815+8]..[2067,69815+40]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (typing/parmatch.ml[2067,69815+8]..[2067,69815+33])
                                      Ppat_record Closed
                                      [
                                        "c_lhs" (typing/parmatch.ml[2067,69815+9]..[2067,69815+14])
                                          pattern (typing/parmatch.ml[2067,69815+15]..[2067,69815+16])
                                            Ppat_var "q" (typing/parmatch.ml[2067,69815+15]..[2067,69815+16])
                                        "c_guard" (typing/parmatch.ml[2067,69815+18]..[2067,69815+25]) ghost
                                          pattern (typing/parmatch.ml[2067,69815+18]..[2067,69815+25])
                                            Ppat_var "c_guard" (typing/parmatch.ml[2067,69815+18]..[2067,69815+25])
                                        "c_rhs" (typing/parmatch.ml[2067,69815+27]..[2067,69815+32]) ghost
                                          pattern (typing/parmatch.ml[2067,69815+27]..[2067,69815+32])
                                            Ppat_var "c_rhs" (typing/parmatch.ml[2067,69815+27]..[2067,69815+32])
                                      ]
                                    pattern (typing/parmatch.ml[2067,69815+37]..[2067,69815+40])
                                      Ppat_var "rem" (typing/parmatch.ml[2067,69815+37]..[2067,69815+40])
                                  ]
                            expression (typing/parmatch.ml[2068,69859+10]..[2128,72588+34])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/parmatch.ml[2068,69859+14]..[2068,69859+16])
                                    Ppat_var "qs" (typing/parmatch.ml[2068,69859+14]..[2068,69859+16])
                                  expression (typing/parmatch.ml[2068,69859+19]..[2068,69859+22])
                                    Pexp_construct "::" (typing/parmatch.ml[2068,69859+20]..[2068,69859+22]) ghost
                                    Some
                                      expression (typing/parmatch.ml[2068,69859+20]..[2068,69859+22]) ghost
                                        Pexp_tuple
                                        [
                                          expression (typing/parmatch.ml[2068,69859+20]..[2068,69859+21])
                                            Pexp_ident "q" (typing/parmatch.ml[2068,69859+20]..[2068,69859+21])
                                          expression (typing/parmatch.ml[2068,69859+21]..[2068,69859+22]) ghost
                                            Pexp_construct "[]" (typing/parmatch.ml[2068,69859+21]..[2068,69859+22]) ghost
                                            None
                                        ]
                              ]
                              expression (typing/parmatch.ml[2069,69885+12]..[2128,72588+34])
                                Pexp_sequence
                                expression (typing/parmatch.ml[2069,69885+12]..[2123,72492+15])
                                  Pexp_try
                                  expression (typing/parmatch.ml[2070,69907+14]..[2121,72414+26])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/parmatch.ml[2070,69907+18]..[2070,69907+21])
                                          Ppat_var "pss" (typing/parmatch.ml[2070,69907+18]..[2070,69907+21])
                                        expression (typing/parmatch.ml[2073,70064+16]..[2075,70138+35])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[2075,70138+16]..[2075,70138+18])
                                            Pexp_ident "|>" (typing/parmatch.ml[2075,70138+16]..[2075,70138+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[2073,70064+16]..[2074,70094+43])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[2074,70094+16]..[2074,70094+18])
                                                  Pexp_ident "|>" (typing/parmatch.ml[2074,70094+16]..[2074,70094+18])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[2073,70064+16]..[2073,70064+29])
                                                      Pexp_apply
                                                      expression (typing/parmatch.ml[2073,70064+16]..[2073,70064+24])
                                                        Pexp_ident "List.rev" (typing/parmatch.ml[2073,70064+16]..[2073,70064+24])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[2073,70064+25]..[2073,70064+29])
                                                            Pexp_ident "pref" (typing/parmatch.ml[2073,70064+25]..[2073,70064+29])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[2074,70094+19]..[2074,70094+43])
                                                      Pexp_apply
                                                      expression (typing/parmatch.ml[2074,70094+19]..[2074,70094+30])
                                                        Pexp_ident "List.filter" (typing/parmatch.ml[2074,70094+19]..[2074,70094+30])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[2074,70094+31]..[2074,70094+43])
                                                            Pexp_apply
                                                            expression (typing/parmatch.ml[2074,70094+32]..[2074,70094+39])
                                                              Pexp_ident "compats" (typing/parmatch.ml[2074,70094+32]..[2074,70094+39])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[2074,70094+40]..[2074,70094+42])
                                                                  Pexp_ident "qs" (typing/parmatch.ml[2074,70094+40]..[2074,70094+42])
                                                            ]
                                                      ]
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[2075,70138+19]..[2075,70138+35])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[2075,70138+19]..[2075,70138+27])
                                                  Pexp_ident "get_mins" (typing/parmatch.ml[2075,70138+19]..[2075,70138+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[2075,70138+28]..[2075,70138+35])
                                                      Pexp_ident "le_pats" (typing/parmatch.ml[2075,70138+28]..[2075,70138+35])
                                                ]
                                          ]
                                    ]
                                    expression (typing/parmatch.ml[2077,70254+14]..[2121,72414+26])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/parmatch.ml[2077,70254+18]..[2077,70254+19])
                                            Ppat_var "r" (typing/parmatch.ml[2077,70254+18]..[2077,70254+19])
                                          expression (typing/parmatch.ml[2077,70254+22]..[2077,70254+70])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[2077,70254+22]..[2077,70254+40])
                                              Pexp_ident "every_satisfiables" (typing/parmatch.ml[2077,70254+22]..[2077,70254+40])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2077,70254+41]..[2077,70254+56])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[2077,70254+42]..[2077,70254+51])
                                                    Pexp_ident "make_rows" (typing/parmatch.ml[2077,70254+42]..[2077,70254+51])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2077,70254+52]..[2077,70254+55])
                                                        Pexp_ident "pss" (typing/parmatch.ml[2077,70254+52]..[2077,70254+55])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2077,70254+57]..[2077,70254+70])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[2077,70254+58]..[2077,70254+66])
                                                    Pexp_ident "make_row" (typing/parmatch.ml[2077,70254+58]..[2077,70254+66])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2077,70254+67]..[2077,70254+69])
                                                        Pexp_ident "qs" (typing/parmatch.ml[2077,70254+67]..[2077,70254+69])
                                                  ]
                                            ]
                                      ]
                                      expression (typing/parmatch.ml[2078,70328+14]..[2121,72414+26])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/parmatch.ml[2078,70328+18]..[2078,70328+24])
                                              Ppat_var "refute" (typing/parmatch.ml[2078,70328+18]..[2078,70328+24])
                                            expression (typing/parmatch.ml[2078,70328+27]..[2078,70328+62])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[2078,70328+43]..[2078,70328+44])
                                                Pexp_ident "=" (typing/parmatch.ml[2078,70328+43]..[2078,70328+44])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[2078,70328+28]..[2078,70328+42])
                                                    Pexp_field
                                                    expression (typing/parmatch.ml[2078,70328+28]..[2078,70328+33])
                                                      Pexp_ident "c_rhs" (typing/parmatch.ml[2078,70328+28]..[2078,70328+33])
                                                    "exp_desc" (typing/parmatch.ml[2078,70328+34]..[2078,70328+42])
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[2078,70328+45]..[2078,70328+61])
                                                    Pexp_construct "Texp_unreachable" (typing/parmatch.ml[2078,70328+45]..[2078,70328+61])
                                                    None
                                              ]
                                        ]
                                        expression (typing/parmatch.ml[2080,70448+14]..[2121,72414+26])
                                          Pexp_ifthenelse
                                          expression (typing/parmatch.ml[2080,70448+17]..[2080,70448+37])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[2080,70448+28]..[2080,70448+30])
                                              Pexp_ident "&&" (typing/parmatch.ml[2080,70448+28]..[2080,70448+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2080,70448+17]..[2080,70448+27])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[2080,70448+19]..[2080,70448+20])
                                                    Pexp_ident "=" (typing/parmatch.ml[2080,70448+19]..[2080,70448+20])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2080,70448+17]..[2080,70448+18])
                                                        Pexp_ident "r" (typing/parmatch.ml[2080,70448+17]..[2080,70448+18])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2080,70448+21]..[2080,70448+27])
                                                        Pexp_construct "Unused" (typing/parmatch.ml[2080,70448+21]..[2080,70448+27])
                                                        None
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2080,70448+31]..[2080,70448+37])
                                                  Pexp_ident "refute" (typing/parmatch.ml[2080,70448+31]..[2080,70448+37])
                                            ]
                                          expression (typing/parmatch.ml[2080,70448+43]..[2080,70448+45])
                                            Pexp_construct "()" (typing/parmatch.ml[2080,70448+43]..[2080,70448+45])
                                            None
                                          Some
                                            expression (typing/parmatch.ml[2081,70499+14]..[2121,72414+26])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/parmatch.ml[2081,70499+18]..[2081,70499+19])
                                                    Ppat_var "r" (typing/parmatch.ml[2081,70499+18]..[2081,70499+19])
                                                  expression (typing/parmatch.ml[2092,71097+16]..[2109,72006+24])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/parmatch.ml[2092,71097+20]..[2092,71097+24])
                                                          Ppat_var "skip" (typing/parmatch.ml[2092,71097+20]..[2092,71097+24])
                                                        expression (typing/parmatch.ml[2093,71124+18]..[2094,71185+77])
                                                          Pexp_apply
                                                          expression (typing/parmatch.ml[2093,71124+29]..[2093,71124+31])
                                                            Pexp_ident "||" (typing/parmatch.ml[2093,71124+29]..[2093,71124+31])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/parmatch.ml[2093,71124+18]..[2093,71124+28])
                                                                Pexp_apply
                                                                expression (typing/parmatch.ml[2093,71124+20]..[2093,71124+21])
                                                                  Pexp_ident "=" (typing/parmatch.ml[2093,71124+20]..[2093,71124+21])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/parmatch.ml[2093,71124+18]..[2093,71124+19])
                                                                      Pexp_ident "r" (typing/parmatch.ml[2093,71124+18]..[2093,71124+19])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/parmatch.ml[2093,71124+22]..[2093,71124+28])
                                                                      Pexp_construct "Unused" (typing/parmatch.ml[2093,71124+22]..[2093,71124+28])
                                                                      None
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/parmatch.ml[2093,71124+32]..[2094,71185+77])
                                                                Pexp_apply
                                                                expression (typing/parmatch.ml[2093,71124+58]..[2093,71124+60])
                                                                  Pexp_ident "||" (typing/parmatch.ml[2093,71124+58]..[2093,71124+60])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/parmatch.ml[2093,71124+32]..[2093,71124+57])
                                                                      Pexp_apply
                                                                      expression (typing/parmatch.ml[2093,71124+44]..[2093,71124+46])
Pexp_ident "&&" (typing/parmatch.ml[2093,71124+44]..[2093,71124+46])
                                                                      [
<arg>
Nolabel
  expression (typing/parmatch.ml[2093,71124+33]..[2093,71124+43])
    Pexp_apply
    expression (typing/parmatch.ml[2093,71124+33]..[2093,71124+36])
      Pexp_ident "not" (typing/parmatch.ml[2093,71124+33]..[2093,71124+36])
    [
      <arg>
      Nolabel
        expression (typing/parmatch.ml[2093,71124+37]..[2093,71124+43])
          Pexp_ident "refute" (typing/parmatch.ml[2093,71124+37]..[2093,71124+43])
    ]
<arg>
Nolabel
  expression (typing/parmatch.ml[2093,71124+47]..[2093,71124+56])
    Pexp_apply
    expression (typing/parmatch.ml[2093,71124+52]..[2093,71124+53])
      Pexp_ident "=" (typing/parmatch.ml[2093,71124+52]..[2093,71124+53])
    [
      <arg>
      Nolabel
        expression (typing/parmatch.ml[2093,71124+47]..[2093,71124+51])
          Pexp_ident "pref" (typing/parmatch.ml[2093,71124+47]..[2093,71124+51])
      <arg>
      Nolabel
        expression (typing/parmatch.ml[2093,71124+54]..[2093,71124+56])
          Pexp_construct "[]" (typing/parmatch.ml[2093,71124+54]..[2093,71124+56])
          None
    ]
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/parmatch.ml[2094,71185+18]..[2094,71185+77])
                                                                      Pexp_apply
                                                                      expression (typing/parmatch.ml[2094,71185+18]..[2094,71185+21])
Pexp_ident "not" (typing/parmatch.ml[2094,71185+18]..[2094,71185+21])
                                                                      [
<arg>
Nolabel
  expression (typing/parmatch.ml[2094,71185+21]..[2094,71185+77])
    Pexp_apply
    expression (typing/parmatch.ml[2094,71185+29]..[2094,71185+31])
      Pexp_ident "||" (typing/parmatch.ml[2094,71185+29]..[2094,71185+31])
    [
      <arg>
      Nolabel
        expression (typing/parmatch.ml[2094,71185+22]..[2094,71185+28])
          Pexp_ident "refute" (typing/parmatch.ml[2094,71185+22]..[2094,71185+28])
      <arg>
      Nolabel
        expression (typing/parmatch.ml[2094,71185+32]..[2094,71185+76])
          Pexp_apply
          expression (typing/parmatch.ml[2094,71185+32]..[2094,71185+50])
            Pexp_ident "Warnings.is_active" (typing/parmatch.ml[2094,71185+32]..[2094,71185+50])
          [
            <arg>
            Nolabel
              expression (typing/parmatch.ml[2094,71185+51]..[2094,71185+76])
                Pexp_construct "Warnings.Unreachable_case" (typing/parmatch.ml[2094,71185+51]..[2094,71185+76])
                None
          ]
    ]
                                                                      ]
                                                                ]
                                                          ]
                                                    ]
                                                    expression (typing/parmatch.ml[2095,71266+16]..[2109,72006+24])
                                                      Pexp_ifthenelse
                                                      expression (typing/parmatch.ml[2095,71266+19]..[2095,71266+23])
                                                        Pexp_ident "skip" (typing/parmatch.ml[2095,71266+19]..[2095,71266+23])
                                                      expression (typing/parmatch.ml[2095,71266+29]..[2095,71266+30])
                                                        Pexp_ident "r" (typing/parmatch.ml[2095,71266+29]..[2095,71266+30])
                                                      Some
                                                        expression (typing/parmatch.ml[2097,71353+16]..[2109,72006+24])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (typing/parmatch.ml[2097,71353+20]..[2097,71353+23])
                                                                Ppat_var "sfs" (typing/parmatch.ml[2097,71353+20]..[2097,71353+23])
                                                              expression (typing/parmatch.ml[2097,71353+26]..[2097,71353+56])
                                                                Pexp_apply
                                                                expression (typing/parmatch.ml[2097,71353+26]..[2097,71353+49])
                                                                  Pexp_ident "list_satisfying_vectors" (typing/parmatch.ml[2097,71353+26]..[2097,71353+49])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/parmatch.ml[2097,71353+50]..[2097,71353+53])
                                                                      Pexp_ident "pss" (typing/parmatch.ml[2097,71353+50]..[2097,71353+53])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (typing/parmatch.ml[2097,71353+54]..[2097,71353+56])
                                                                      Pexp_ident "qs" (typing/parmatch.ml[2097,71353+54]..[2097,71353+56])
                                                                ]
                                                          ]
                                                          expression (typing/parmatch.ml[2098,71413+16]..[2109,72006+24])
                                                            Pexp_ifthenelse
                                                            expression (typing/parmatch.ml[2098,71413+19]..[2098,71413+27])
                                                              Pexp_apply
                                                              expression (typing/parmatch.ml[2098,71413+23]..[2098,71413+24])
                                                                Pexp_ident "=" (typing/parmatch.ml[2098,71413+23]..[2098,71413+24])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/parmatch.ml[2098,71413+19]..[2098,71413+22])
                                                                    Pexp_ident "sfs" (typing/parmatch.ml[2098,71413+19]..[2098,71413+22])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/parmatch.ml[2098,71413+25]..[2098,71413+27])
                                                                    Pexp_construct "[]" (typing/parmatch.ml[2098,71413+25]..[2098,71413+27])
                                                                    None
                                                              ]
                                                            expression (typing/parmatch.ml[2098,71413+33]..[2098,71413+39])
                                                              Pexp_construct "Unused" (typing/parmatch.ml[2098,71413+33]..[2098,71413+39])
                                                              None
                                                            Some
                                                              expression (typing/parmatch.ml[2099,71458+16]..[2109,72006+24])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (typing/parmatch.ml[2099,71458+20]..[2099,71458+23])
                                                                      Ppat_var "sfs" (typing/parmatch.ml[2099,71458+20]..[2099,71458+23])
                                                                    expression (typing/parmatch.ml[2100,71484+18]..[2100,71484+70])
                                                                      Pexp_apply
                                                                      expression (typing/parmatch.ml[2100,71484+18]..[2100,71484+26])
Pexp_ident "List.map" (typing/parmatch.ml[2100,71484+18]..[2100,71484+26])
                                                                      [
<arg>
Nolabel
  expression (typing/parmatch.ml[2100,71484+27]..[2100,71484+66])
    Pexp_function
    [
      <case>
        pattern (typing/parmatch.ml[2100,71484+37]..[2100,71484+40])
          Ppat_construct "::" (typing/parmatch.ml[2100,71484+38]..[2100,71484+40]) ghost
          Some
            []
            pattern (typing/parmatch.ml[2100,71484+38]..[2100,71484+40]) ghost
              Ppat_tuple
              [
                pattern (typing/parmatch.ml[2100,71484+38]..[2100,71484+39])
                  Ppat_var "u" (typing/parmatch.ml[2100,71484+38]..[2100,71484+39])
                pattern (typing/parmatch.ml[2100,71484+39]..[2100,71484+40]) ghost
                  Ppat_construct "[]" (typing/parmatch.ml[2100,71484+39]..[2100,71484+40]) ghost
                  None
              ]
        expression (typing/parmatch.ml[2100,71484+44]..[2100,71484+45])
          Pexp_ident "u" (typing/parmatch.ml[2100,71484+44]..[2100,71484+45])
      <case>
        pattern (typing/parmatch.ml[2100,71484+48]..[2100,71484+49])
          Ppat_any
        expression (typing/parmatch.ml[2100,71484+53]..[2100,71484+65])
          Pexp_assert
          expression (typing/parmatch.ml[2100,71484+60]..[2100,71484+65])
            Pexp_construct "false" (typing/parmatch.ml[2100,71484+60]..[2100,71484+65])
            None
    ]
<arg>
Nolabel
  expression (typing/parmatch.ml[2100,71484+67]..[2100,71484+70])
    Pexp_ident "sfs" (typing/parmatch.ml[2100,71484+67]..[2100,71484+70])
                                                                      ]
                                                                ]
                                                                expression (typing/parmatch.ml[2101,71558+16]..[2109,72006+24])
                                                                  Pexp_let Nonrec
                                                                  [
                                                                    <def>
                                                                      pattern (typing/parmatch.ml[2101,71558+20]..[2101,71558+21])
Ppat_var "u" (typing/parmatch.ml[2101,71558+20]..[2101,71558+21])
                                                                      expression (typing/parmatch.ml[2101,71558+24]..[2101,71558+38])
Pexp_apply
expression (typing/parmatch.ml[2101,71558+24]..[2101,71558+34])
  Pexp_ident "orify_many" (typing/parmatch.ml[2101,71558+24]..[2101,71558+34])
[
  <arg>
  Nolabel
    expression (typing/parmatch.ml[2101,71558+35]..[2101,71558+38])
      Pexp_ident "sfs" (typing/parmatch.ml[2101,71558+35]..[2101,71558+38])
]
                                                                  ]
                                                                  expression (typing/parmatch.ml[2103,71656+16]..[2109,72006+24])
                                                                    Pexp_let Nonrec
                                                                    [
                                                                      <def>
pattern (typing/parmatch.ml[2103,71656+20]..[2103,71656+44])
  Ppat_tuple
  [
    pattern (typing/parmatch.ml[2103,71656+21]..[2103,71656+28])
      Ppat_var "pattern" (typing/parmatch.ml[2103,71656+21]..[2103,71656+28])
    pattern (typing/parmatch.ml[2103,71656+29]..[2103,71656+36])
      Ppat_var "constrs" (typing/parmatch.ml[2103,71656+29]..[2103,71656+36])
    pattern (typing/parmatch.ml[2103,71656+37]..[2103,71656+43])
      Ppat_var "labels" (typing/parmatch.ml[2103,71656+37]..[2103,71656+43])
  ]
expression (typing/parmatch.ml[2103,71656+47]..[2103,71656+58])
  Pexp_apply
  expression (typing/parmatch.ml[2103,71656+47]..[2103,71656+56])
    Pexp_ident "Conv.conv" (typing/parmatch.ml[2103,71656+47]..[2103,71656+56])
  [
    <arg>
    Nolabel
      expression (typing/parmatch.ml[2103,71656+57]..[2103,71656+58])
        Pexp_ident "u" (typing/parmatch.ml[2103,71656+57]..[2103,71656+58])
  ]
                                                                    ]
                                                                    expression (typing/parmatch.ml[2104,71718+16]..[2109,72006+24])
                                                                      Pexp_let Nonrec
                                                                      [
<def>
  pattern (typing/parmatch.ml[2104,71718+20]..[2104,71718+27])
    Ppat_var "pattern" (typing/parmatch.ml[2104,71718+20]..[2104,71718+27])
  expression (typing/parmatch.ml[2104,71718+30]..[2104,71718+75])
    Pexp_record
    [
      "Parsetree.ppat_loc" (typing/parmatch.ml[2104,71718+44]..[2104,71718+62])
        expression (typing/parmatch.ml[2104,71718+65]..[2104,71718+74])
          Pexp_field
          expression (typing/parmatch.ml[2104,71718+65]..[2104,71718+66])
            Pexp_ident "q" (typing/parmatch.ml[2104,71718+65]..[2104,71718+66])
          "pat_loc" (typing/parmatch.ml[2104,71718+67]..[2104,71718+74])
    ]
    Some
      expression (typing/parmatch.ml[2104,71718+31]..[2104,71718+38])
        Pexp_ident "pattern" (typing/parmatch.ml[2104,71718+31]..[2104,71718+38])
                                                                      ]
                                                                      expression (typing/parmatch.ml[2105,71797+16]..[2109,72006+24])
Pexp_match
expression (typing/parmatch.ml[2105,71797+22]..[2105,71797+56])
  Pexp_apply
  expression (typing/parmatch.ml[2105,71797+22]..[2105,71797+26])
    Pexp_ident "pred" (typing/parmatch.ml[2105,71797+22]..[2105,71797+26])
  [
    <arg>
    Nolabel
      expression (typing/parmatch.ml[2105,71797+27]..[2105,71797+33])
        Pexp_ident "refute" (typing/parmatch.ml[2105,71797+27]..[2105,71797+33])
    <arg>
    Nolabel
      expression (typing/parmatch.ml[2105,71797+34]..[2105,71797+41])
        Pexp_ident "constrs" (typing/parmatch.ml[2105,71797+34]..[2105,71797+41])
    <arg>
    Nolabel
      expression (typing/parmatch.ml[2105,71797+42]..[2105,71797+48])
        Pexp_ident "labels" (typing/parmatch.ml[2105,71797+42]..[2105,71797+48])
    <arg>
    Nolabel
      expression (typing/parmatch.ml[2105,71797+49]..[2105,71797+56])
        Pexp_ident "pattern" (typing/parmatch.ml[2105,71797+49]..[2105,71797+56])
  ]
[
  <case>
    pattern (typing/parmatch.ml[2106,71859+18]..[2106,71859+22])
      Ppat_construct "None" (typing/parmatch.ml[2106,71859+18]..[2106,71859+22])
      None
    <when>
      expression (typing/parmatch.ml[2106,71859+28]..[2106,71859+38])
        Pexp_apply
        expression (typing/parmatch.ml[2106,71859+28]..[2106,71859+31])
          Pexp_ident "not" (typing/parmatch.ml[2106,71859+28]..[2106,71859+31])
        [
          <arg>
          Nolabel
            expression (typing/parmatch.ml[2106,71859+32]..[2106,71859+38])
              Pexp_ident "refute" (typing/parmatch.ml[2106,71859+32]..[2106,71859+38])
        ]
    expression (typing/parmatch.ml[2107,71901+20]..[2108,71981+24])
      Pexp_sequence
      expression (typing/parmatch.ml[2107,71901+20]..[2107,71901+78])
        Pexp_apply
        expression (typing/parmatch.ml[2107,71901+20]..[2107,71901+42])
          Pexp_ident "Location.prerr_warning" (typing/parmatch.ml[2107,71901+20]..[2107,71901+42])
        [
          <arg>
          Nolabel
            expression (typing/parmatch.ml[2107,71901+43]..[2107,71901+52])
              Pexp_field
              expression (typing/parmatch.ml[2107,71901+43]..[2107,71901+44])
                Pexp_ident "q" (typing/parmatch.ml[2107,71901+43]..[2107,71901+44])
              "pat_loc" (typing/parmatch.ml[2107,71901+45]..[2107,71901+52])
          <arg>
          Nolabel
            expression (typing/parmatch.ml[2107,71901+53]..[2107,71901+78])
              Pexp_construct "Warnings.Unreachable_case" (typing/parmatch.ml[2107,71901+53]..[2107,71901+78])
              None
        ]
      expression (typing/parmatch.ml[2108,71981+20]..[2108,71981+24])
        Pexp_construct "Used" (typing/parmatch.ml[2108,71981+20]..[2108,71981+24])
        None
  <case>
    pattern (typing/parmatch.ml[2109,72006+18]..[2109,72006+19])
      Ppat_any
    expression (typing/parmatch.ml[2109,72006+23]..[2109,72006+24])
      Pexp_ident "r" (typing/parmatch.ml[2109,72006+23]..[2109,72006+24])
]
                                              ]
                                              expression (typing/parmatch.ml[2111,72048+14]..[2121,72414+26])
                                                Pexp_match
                                                expression (typing/parmatch.ml[2111,72048+20]..[2111,72048+21])
                                                  Pexp_ident "r" (typing/parmatch.ml[2111,72048+20]..[2111,72048+21])
                                                [
                                                  <case>
                                                    pattern (typing/parmatch.ml[2112,72075+16]..[2112,72075+22])
                                                      Ppat_construct "Unused" (typing/parmatch.ml[2112,72075+16]..[2112,72075+22])
                                                      None
                                                    expression (typing/parmatch.ml[2113,72101+18]..[2114,72142+53])
                                                      Pexp_apply
                                                      expression (typing/parmatch.ml[2113,72101+18]..[2113,72101+40])
                                                        Pexp_ident "Location.prerr_warning" (typing/parmatch.ml[2113,72101+18]..[2113,72101+40])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[2114,72142+20]..[2114,72142+29])
                                                            Pexp_field
                                                            expression (typing/parmatch.ml[2114,72142+20]..[2114,72142+21])
                                                              Pexp_ident "q" (typing/parmatch.ml[2114,72142+20]..[2114,72142+21])
                                                            "pat_loc" (typing/parmatch.ml[2114,72142+22]..[2114,72142+29])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[2114,72142+30]..[2114,72142+53])
                                                            Pexp_construct "Warnings.Redundant_case" (typing/parmatch.ml[2114,72142+30]..[2114,72142+53])
                                                            None
                                                      ]
                                                  <case>
                                                    pattern (typing/parmatch.ml[2115,72196+16]..[2115,72196+27])
                                                      Ppat_construct "Upartial" (typing/parmatch.ml[2115,72196+16]..[2115,72196+24])
                                                      Some
                                                        []
                                                        pattern (typing/parmatch.ml[2115,72196+25]..[2115,72196+27])
                                                          Ppat_var "ps" (typing/parmatch.ml[2115,72196+25]..[2115,72196+27])
                                                    expression (typing/parmatch.ml[2116,72227+18]..[2120,72391+22])
                                                      Pexp_apply
                                                      expression (typing/parmatch.ml[2116,72227+18]..[2116,72227+27])
                                                        Pexp_ident "List.iter" (typing/parmatch.ml[2116,72227+18]..[2116,72227+27])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[2117,72255+20]..[2119,72330+60])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (typing/parmatch.ml[2117,72255+25]..[2117,72255+26])
                                                              Ppat_var "p" (typing/parmatch.ml[2117,72255+25]..[2117,72255+26])
                                                            expression (typing/parmatch.ml[2118,72285+22]..[2119,72330+59])
                                                              Pexp_apply
                                                              expression (typing/parmatch.ml[2118,72285+22]..[2118,72285+44])
                                                                Pexp_ident "Location.prerr_warning" (typing/parmatch.ml[2118,72285+22]..[2118,72285+44])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/parmatch.ml[2119,72330+24]..[2119,72330+33])
                                                                    Pexp_field
                                                                    expression (typing/parmatch.ml[2119,72330+24]..[2119,72330+25])
                                                                      Pexp_ident "p" (typing/parmatch.ml[2119,72330+24]..[2119,72330+25])
                                                                    "pat_loc" (typing/parmatch.ml[2119,72330+26]..[2119,72330+33])
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/parmatch.ml[2119,72330+34]..[2119,72330+59])
                                                                    Pexp_construct "Warnings.Redundant_subpat" (typing/parmatch.ml[2119,72330+34]..[2119,72330+59])
                                                                    None
                                                              ]
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[2120,72391+20]..[2120,72391+22])
                                                            Pexp_ident "ps" (typing/parmatch.ml[2120,72391+20]..[2120,72391+22])
                                                      ]
                                                  <case>
                                                    pattern (typing/parmatch.ml[2121,72414+16]..[2121,72414+20])
                                                      Ppat_construct "Used" (typing/parmatch.ml[2121,72414+16]..[2121,72414+20])
                                                      None
                                                    expression (typing/parmatch.ml[2121,72414+24]..[2121,72414+26])
                                                      Pexp_construct "()" (typing/parmatch.ml[2121,72414+24]..[2121,72414+26])
                                                      None
                                                ]
                                  [
                                    <case>
                                      pattern (typing/parmatch.ml[2122,72441+17]..[2122,72441+34])
                                        Ppat_or
                                        pattern (typing/parmatch.ml[2122,72441+17]..[2122,72441+22])
                                          Ppat_construct "Empty" (typing/parmatch.ml[2122,72441+17]..[2122,72441+22])
                                          None
                                        pattern (typing/parmatch.ml[2122,72441+25]..[2122,72441+34])
                                          Ppat_construct "Not_found" (typing/parmatch.ml[2122,72441+25]..[2122,72441+34])
                                          None
                                      expression (typing/parmatch.ml[2122,72441+38]..[2122,72441+50])
                                        Pexp_assert
                                        expression (typing/parmatch.ml[2122,72441+45]..[2122,72441+50])
                                          Pexp_construct "false" (typing/parmatch.ml[2122,72441+45]..[2122,72441+50])
                                          None
                                  ]
                                expression (typing/parmatch.ml[2125,72511+10]..[2128,72588+34])
                                  Pexp_ifthenelse
                                  expression (typing/parmatch.ml[2125,72511+13]..[2125,72511+28])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[2125,72511+21]..[2125,72511+23])
                                      Pexp_ident "<>" (typing/parmatch.ml[2125,72511+21]..[2125,72511+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[2125,72511+13]..[2125,72511+20])
                                          Pexp_ident "c_guard" (typing/parmatch.ml[2125,72511+13]..[2125,72511+20])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[2125,72511+24]..[2125,72511+28])
                                          Pexp_construct "None" (typing/parmatch.ml[2125,72511+24]..[2125,72511+28])
                                          None
                                    ]
                                  expression (typing/parmatch.ml[2126,72545+12]..[2126,72545+27])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[2126,72545+12]..[2126,72545+18])
                                      Pexp_ident "do_rec" (typing/parmatch.ml[2126,72545+12]..[2126,72545+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[2126,72545+19]..[2126,72545+23])
                                          Pexp_ident "pref" (typing/parmatch.ml[2126,72545+19]..[2126,72545+23])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[2126,72545+24]..[2126,72545+27])
                                          Pexp_ident "rem" (typing/parmatch.ml[2126,72545+24]..[2126,72545+27])
                                    ]
                                  Some
                                    expression (typing/parmatch.ml[2128,72588+12]..[2128,72588+34])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[2128,72588+12]..[2128,72588+18])
                                        Pexp_ident "do_rec" (typing/parmatch.ml[2128,72588+12]..[2128,72588+18])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[2128,72588+19]..[2128,72588+30])
                                            Pexp_construct "::" (typing/parmatch.ml[2128,72588+23]..[2128,72588+25])
                                            Some
                                              expression (typing/parmatch.ml[2128,72588+20]..[2128,72588+29]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (typing/parmatch.ml[2128,72588+20]..[2128,72588+23])
                                                    Pexp_construct "::" (typing/parmatch.ml[2128,72588+21]..[2128,72588+23]) ghost
                                                    Some
                                                      expression (typing/parmatch.ml[2128,72588+21]..[2128,72588+23]) ghost
                                                        Pexp_tuple
                                                        [
                                                          expression (typing/parmatch.ml[2128,72588+21]..[2128,72588+22])
                                                            Pexp_ident "q" (typing/parmatch.ml[2128,72588+21]..[2128,72588+22])
                                                          expression (typing/parmatch.ml[2128,72588+22]..[2128,72588+23]) ghost
                                                            Pexp_construct "[]" (typing/parmatch.ml[2128,72588+22]..[2128,72588+23]) ghost
                                                            None
                                                        ]
                                                  expression (typing/parmatch.ml[2128,72588+25]..[2128,72588+29])
                                                    Pexp_ident "pref" (typing/parmatch.ml[2128,72588+25]..[2128,72588+29])
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[2128,72588+31]..[2128,72588+34])
                                            Pexp_ident "rem" (typing/parmatch.ml[2128,72588+31]..[2128,72588+34])
                                      ]
                        ]
                ]
                expression (typing/parmatch.ml[2130,72627+4]..[2130,72627+19])
                  Pexp_apply
                  expression (typing/parmatch.ml[2130,72627+4]..[2130,72627+10])
                    Pexp_ident "do_rec" (typing/parmatch.ml[2130,72627+4]..[2130,72627+10])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2130,72627+11]..[2130,72627+13])
                        Pexp_construct "[]" (typing/parmatch.ml[2130,72627+11]..[2130,72627+13])
                        None
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2130,72627+14]..[2130,72627+19])
                        Pexp_ident "casel" (typing/parmatch.ml[2130,72627+14]..[2130,72627+19])
                  ]
              None
    ]
  structure_item (typing/parmatch.ml[2136,72757+0]..[2136,72757+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[2136,72757+4]..[2136,72757+15])
          Ppat_var "irrefutable" (typing/parmatch.ml[2136,72757+4]..[2136,72757+15])
        expression (typing/parmatch.ml[2136,72757+16]..[2136,72757+38]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[2136,72757+16]..[2136,72757+19])
            Ppat_var "pat" (typing/parmatch.ml[2136,72757+16]..[2136,72757+19])
          expression (typing/parmatch.ml[2136,72757+22]..[2136,72757+38])
            Pexp_apply
            expression (typing/parmatch.ml[2136,72757+22]..[2136,72757+28])
              Pexp_ident "le_pat" (typing/parmatch.ml[2136,72757+22]..[2136,72757+28])
            [
              <arg>
              Nolabel
                expression (typing/parmatch.ml[2136,72757+29]..[2136,72757+32])
                  Pexp_ident "pat" (typing/parmatch.ml[2136,72757+29]..[2136,72757+32])
              <arg>
              Nolabel
                expression (typing/parmatch.ml[2136,72757+33]..[2136,72757+38])
                  Pexp_ident "omega" (typing/parmatch.ml[2136,72757+33]..[2136,72757+38])
            ]
    ]
  structure_item (typing/parmatch.ml[2138,72797+0]..[2166,73747+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[2138,72797+4]..[2138,72797+12])
          Ppat_var "inactive" (typing/parmatch.ml[2138,72797+4]..[2138,72797+12])
        expression (typing/parmatch.ml[2138,72797+13]..[2166,73747+5]) ghost
          Pexp_fun
          Labelled "partial"
          None
          pattern (typing/parmatch.ml[2138,72797+14]..[2138,72797+21])
            Ppat_var "partial" (typing/parmatch.ml[2138,72797+14]..[2138,72797+21])
          expression (typing/parmatch.ml[2138,72797+22]..[2166,73747+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[2138,72797+22]..[2138,72797+25])
              Ppat_var "pat" (typing/parmatch.ml[2138,72797+22]..[2138,72797+25])
            expression (typing/parmatch.ml[2139,72825+2]..[2166,73747+5])
              Pexp_match
              expression (typing/parmatch.ml[2139,72825+8]..[2139,72825+15])
                Pexp_ident "partial" (typing/parmatch.ml[2139,72825+8]..[2139,72825+15])
              [
                <case>
                  pattern (typing/parmatch.ml[2140,72846+4]..[2140,72846+11])
                    Ppat_construct "Partial" (typing/parmatch.ml[2140,72846+4]..[2140,72846+11])
                    None
                  expression (typing/parmatch.ml[2140,72846+15]..[2140,72846+20])
                    Pexp_construct "false" (typing/parmatch.ml[2140,72846+15]..[2140,72846+20])
                    None
                <case>
                  pattern (typing/parmatch.ml[2141,72867+4]..[2141,72867+9])
                    Ppat_construct "Total" (typing/parmatch.ml[2141,72867+4]..[2141,72867+9])
                    None
                  expression (typing/parmatch.ml[2141,72867+13]..[2166,73747+5])
                    Pexp_let Rec
                    [
                      <def>
                        pattern (typing/parmatch.ml[2142,72886+14]..[2142,72886+18])
                          Ppat_var "loop" (typing/parmatch.ml[2142,72886+14]..[2142,72886+18])
                        expression (typing/parmatch.ml[2142,72886+19]..[2163,73694+28]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/parmatch.ml[2142,72886+19]..[2142,72886+22])
                            Ppat_var "pat" (typing/parmatch.ml[2142,72886+19]..[2142,72886+22])
                          expression (typing/parmatch.ml[2143,72911+8]..[2163,73694+28])
                            Pexp_match
                            expression (typing/parmatch.ml[2143,72911+14]..[2143,72911+26])
                              Pexp_field
                              expression (typing/parmatch.ml[2143,72911+14]..[2143,72911+17])
                                Pexp_ident "pat" (typing/parmatch.ml[2143,72911+14]..[2143,72911+17])
                              "pat_desc" (typing/parmatch.ml[2143,72911+18]..[2143,72911+26])
                            [
                              <case>
                                pattern (typing/parmatch.ml[2144,72943+10]..[2144,72943+36])
                                  Ppat_or
                                  pattern (typing/parmatch.ml[2144,72943+10]..[2144,72943+21])
                                    Ppat_construct "Tpat_lazy" (typing/parmatch.ml[2144,72943+10]..[2144,72943+19])
                                    Some
                                      []
                                      pattern (typing/parmatch.ml[2144,72943+20]..[2144,72943+21])
                                        Ppat_any
                                  pattern (typing/parmatch.ml[2144,72943+24]..[2144,72943+36])
                                    Ppat_construct "Tpat_array" (typing/parmatch.ml[2144,72943+24]..[2144,72943+34])
                                    Some
                                      []
                                      pattern (typing/parmatch.ml[2144,72943+35]..[2144,72943+36])
                                        Ppat_any
                                expression (typing/parmatch.ml[2145,72983+10]..[2145,72983+15])
                                  Pexp_construct "false" (typing/parmatch.ml[2145,72983+10]..[2145,72983+15])
                                  None
                              <case>
                                pattern (typing/parmatch.ml[2146,72999+10]..[2146,72999+59])
                                  Ppat_or
                                  pattern (typing/parmatch.ml[2146,72999+10]..[2146,72999+31])
                                    Ppat_or
                                    pattern (typing/parmatch.ml[2146,72999+10]..[2146,72999+18])
                                      Ppat_construct "Tpat_any" (typing/parmatch.ml[2146,72999+10]..[2146,72999+18])
                                      None
                                    pattern (typing/parmatch.ml[2146,72999+21]..[2146,72999+31])
                                      Ppat_construct "Tpat_var" (typing/parmatch.ml[2146,72999+21]..[2146,72999+29])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[2146,72999+30]..[2146,72999+31])
                                          Ppat_any
                                  pattern (typing/parmatch.ml[2146,72999+34]..[2146,72999+59])
                                    Ppat_construct "Tpat_variant" (typing/parmatch.ml[2146,72999+34]..[2146,72999+46])
                                    Some
                                      []
                                      pattern (typing/parmatch.ml[2146,72999+47]..[2146,72999+59])
                                        Ppat_tuple
                                        [
                                          pattern (typing/parmatch.ml[2146,72999+48]..[2146,72999+49])
                                            Ppat_any
                                          pattern (typing/parmatch.ml[2146,72999+51]..[2146,72999+55])
                                            Ppat_construct "None" (typing/parmatch.ml[2146,72999+51]..[2146,72999+55])
                                            None
                                          pattern (typing/parmatch.ml[2146,72999+57]..[2146,72999+58])
                                            Ppat_any
                                        ]
                                expression (typing/parmatch.ml[2147,73062+12]..[2147,73062+16])
                                  Pexp_construct "true" (typing/parmatch.ml[2147,73062+12]..[2147,73062+16])
                                  None
                              <case>
                                pattern (typing/parmatch.ml[2148,73079+10]..[2148,73079+25])
                                  Ppat_construct "Tpat_constant" (typing/parmatch.ml[2148,73079+10]..[2148,73079+23])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[2148,73079+24]..[2148,73079+25])
                                      Ppat_var "c" (typing/parmatch.ml[2148,73079+24]..[2148,73079+25])
                                expression (typing/parmatch.ml[2148,73079+29]..[2153,73319+13])
                                  Pexp_match
                                  expression (typing/parmatch.ml[2149,73114+18]..[2149,73114+19])
                                    Pexp_ident "c" (typing/parmatch.ml[2149,73114+18]..[2149,73114+19])
                                  [
                                    <case>
                                      pattern (typing/parmatch.ml[2150,73139+14]..[2150,73139+28])
                                        Ppat_construct "Const_string" (typing/parmatch.ml[2150,73139+14]..[2150,73139+26])
                                        Some
                                          []
                                          pattern (typing/parmatch.ml[2150,73139+27]..[2150,73139+28])
                                            Ppat_any
                                      expression (typing/parmatch.ml[2150,73139+32]..[2150,73139+50])
                                        Pexp_ident "Config.safe_string" (typing/parmatch.ml[2150,73139+32]..[2150,73139+50])
                                    <case>
                                      pattern (typing/parmatch.ml[2151,73190+14]..[2152,73247+63])
                                        Ppat_or
                                        pattern (typing/parmatch.ml[2151,73190+14]..[2152,73247+43])
                                          Ppat_or
                                          pattern (typing/parmatch.ml[2151,73190+14]..[2152,73247+27])
                                            Ppat_or
                                            pattern (typing/parmatch.ml[2151,73190+14]..[2151,73190+56])
                                              Ppat_or
                                              pattern (typing/parmatch.ml[2151,73190+14]..[2151,73190+40])
                                                Ppat_or
                                                pattern (typing/parmatch.ml[2151,73190+14]..[2151,73190+25])
                                                  Ppat_construct "Const_int" (typing/parmatch.ml[2151,73190+14]..[2151,73190+23])
                                                  Some
                                                    []
                                                    pattern (typing/parmatch.ml[2151,73190+24]..[2151,73190+25])
                                                      Ppat_any
                                                pattern (typing/parmatch.ml[2151,73190+28]..[2151,73190+40])
                                                  Ppat_construct "Const_char" (typing/parmatch.ml[2151,73190+28]..[2151,73190+38])
                                                  Some
                                                    []
                                                    pattern (typing/parmatch.ml[2151,73190+39]..[2151,73190+40])
                                                      Ppat_any
                                              pattern (typing/parmatch.ml[2151,73190+43]..[2151,73190+56])
                                                Ppat_construct "Const_float" (typing/parmatch.ml[2151,73190+43]..[2151,73190+54])
                                                Some
                                                  []
                                                  pattern (typing/parmatch.ml[2151,73190+55]..[2151,73190+56])
                                                    Ppat_any
                                            pattern (typing/parmatch.ml[2152,73247+14]..[2152,73247+27])
                                              Ppat_construct "Const_int32" (typing/parmatch.ml[2152,73247+14]..[2152,73247+25])
                                              Some
                                                []
                                                pattern (typing/parmatch.ml[2152,73247+26]..[2152,73247+27])
                                                  Ppat_any
                                          pattern (typing/parmatch.ml[2152,73247+30]..[2152,73247+43])
                                            Ppat_construct "Const_int64" (typing/parmatch.ml[2152,73247+30]..[2152,73247+41])
                                            Some
                                              []
                                              pattern (typing/parmatch.ml[2152,73247+42]..[2152,73247+43])
                                                Ppat_any
                                        pattern (typing/parmatch.ml[2152,73247+46]..[2152,73247+63])
                                          Ppat_construct "Const_nativeint" (typing/parmatch.ml[2152,73247+46]..[2152,73247+61])
                                          Some
                                            []
                                            pattern (typing/parmatch.ml[2152,73247+62]..[2152,73247+63])
                                              Ppat_any
                                      expression (typing/parmatch.ml[2152,73247+67]..[2152,73247+71])
                                        Pexp_construct "true" (typing/parmatch.ml[2152,73247+67]..[2152,73247+71])
                                        None
                                  ]
                              <case>
                                pattern (typing/parmatch.ml[2154,73333+10]..[2154,73333+54])
                                  Ppat_or
                                  pattern (typing/parmatch.ml[2154,73333+10]..[2154,73333+23])
                                    Ppat_construct "Tpat_tuple" (typing/parmatch.ml[2154,73333+10]..[2154,73333+20])
                                    Some
                                      []
                                      pattern (typing/parmatch.ml[2154,73333+21]..[2154,73333+23])
                                        Ppat_var "ps" (typing/parmatch.ml[2154,73333+21]..[2154,73333+23])
                                  pattern (typing/parmatch.ml[2154,73333+26]..[2154,73333+54])
                                    Ppat_construct "Tpat_construct" (typing/parmatch.ml[2154,73333+26]..[2154,73333+40])
                                    Some
                                      []
                                      pattern (typing/parmatch.ml[2154,73333+41]..[2154,73333+54])
                                        Ppat_tuple
                                        [
                                          pattern (typing/parmatch.ml[2154,73333+42]..[2154,73333+43])
                                            Ppat_any
                                          pattern (typing/parmatch.ml[2154,73333+45]..[2154,73333+46])
                                            Ppat_any
                                          pattern (typing/parmatch.ml[2154,73333+48]..[2154,73333+50])
                                            Ppat_var "ps" (typing/parmatch.ml[2154,73333+48]..[2154,73333+50])
                                          pattern (typing/parmatch.ml[2154,73333+52]..[2154,73333+53])
                                            Ppat_any
                                        ]
                                expression (typing/parmatch.ml[2155,73391+12]..[2155,73391+45])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[2155,73391+12]..[2155,73391+24])
                                    Pexp_ident "List.for_all" (typing/parmatch.ml[2155,73391+12]..[2155,73391+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[2155,73391+25]..[2155,73391+42])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/parmatch.ml[2155,73391+30]..[2155,73391+31])
                                          Ppat_var "p" (typing/parmatch.ml[2155,73391+30]..[2155,73391+31])
                                        expression (typing/parmatch.ml[2155,73391+35]..[2155,73391+41])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[2155,73391+35]..[2155,73391+39])
                                            Pexp_ident "loop" (typing/parmatch.ml[2155,73391+35]..[2155,73391+39])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[2155,73391+40]..[2155,73391+41])
                                                Pexp_ident "p" (typing/parmatch.ml[2155,73391+40]..[2155,73391+41])
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[2155,73391+43]..[2155,73391+45])
                                        Pexp_ident "ps" (typing/parmatch.ml[2155,73391+43]..[2155,73391+45])
                                  ]
                              <case>
                                pattern (typing/parmatch.ml[2156,73437+10]..[2156,73437+58])
                                  Ppat_or
                                  pattern (typing/parmatch.ml[2156,73437+10]..[2156,73437+28])
                                    Ppat_construct "Tpat_alias" (typing/parmatch.ml[2156,73437+10]..[2156,73437+20])
                                    Some
                                      []
                                      pattern (typing/parmatch.ml[2156,73437+21]..[2156,73437+28])
                                        Ppat_tuple
                                        [
                                          pattern (typing/parmatch.ml[2156,73437+22]..[2156,73437+23])
                                            Ppat_var "p" (typing/parmatch.ml[2156,73437+22]..[2156,73437+23])
                                          pattern (typing/parmatch.ml[2156,73437+24]..[2156,73437+25])
                                            Ppat_any
                                          pattern (typing/parmatch.ml[2156,73437+26]..[2156,73437+27])
                                            Ppat_any
                                        ]
                                  pattern (typing/parmatch.ml[2156,73437+31]..[2156,73437+58])
                                    Ppat_construct "Tpat_variant" (typing/parmatch.ml[2156,73437+31]..[2156,73437+43])
                                    Some
                                      []
                                      pattern (typing/parmatch.ml[2156,73437+44]..[2156,73437+58])
                                        Ppat_tuple
                                        [
                                          pattern (typing/parmatch.ml[2156,73437+45]..[2156,73437+46])
                                            Ppat_any
                                          pattern (typing/parmatch.ml[2156,73437+48]..[2156,73437+54])
                                            Ppat_construct "Some" (typing/parmatch.ml[2156,73437+48]..[2156,73437+52])
                                            Some
                                              []
                                              pattern (typing/parmatch.ml[2156,73437+53]..[2156,73437+54])
                                                Ppat_var "p" (typing/parmatch.ml[2156,73437+53]..[2156,73437+54])
                                          pattern (typing/parmatch.ml[2156,73437+56]..[2156,73437+57])
                                            Ppat_any
                                        ]
                                expression (typing/parmatch.ml[2157,73499+12]..[2157,73499+18])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[2157,73499+12]..[2157,73499+16])
                                    Pexp_ident "loop" (typing/parmatch.ml[2157,73499+12]..[2157,73499+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[2157,73499+17]..[2157,73499+18])
                                        Pexp_ident "p" (typing/parmatch.ml[2157,73499+17]..[2157,73499+18])
                                  ]
                              <case>
                                pattern (typing/parmatch.ml[2158,73518+10]..[2158,73518+30])
                                  Ppat_construct "Tpat_record" (typing/parmatch.ml[2158,73518+10]..[2158,73518+21])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[2158,73518+22]..[2158,73518+30])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[2158,73518+23]..[2158,73518+27])
                                          Ppat_var "ldps" (typing/parmatch.ml[2158,73518+23]..[2158,73518+27])
                                        pattern (typing/parmatch.ml[2158,73518+28]..[2158,73518+29])
                                          Ppat_any
                                      ]
                                expression (typing/parmatch.ml[2159,73552+12]..[2161,73646+18])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[2159,73552+12]..[2159,73552+24])
                                    Pexp_ident "List.for_all" (typing/parmatch.ml[2159,73552+12]..[2159,73552+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[2160,73577+14]..[2160,73577+68])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (typing/parmatch.ml[2160,73577+19]..[2160,73577+30])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[2160,73577+20]..[2160,73577+21])
                                              Ppat_any
                                            pattern (typing/parmatch.ml[2160,73577+23]..[2160,73577+26])
                                              Ppat_var "lbl" (typing/parmatch.ml[2160,73577+23]..[2160,73577+26])
                                            pattern (typing/parmatch.ml[2160,73577+28]..[2160,73577+29])
                                              Ppat_var "p" (typing/parmatch.ml[2160,73577+28]..[2160,73577+29])
                                          ]
                                        expression (typing/parmatch.ml[2160,73577+34]..[2160,73577+67])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[2160,73577+58]..[2160,73577+60])
                                            Pexp_ident "&&" (typing/parmatch.ml[2160,73577+58]..[2160,73577+60])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[2160,73577+34]..[2160,73577+57])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[2160,73577+46]..[2160,73577+47])
                                                  Pexp_ident "=" (typing/parmatch.ml[2160,73577+46]..[2160,73577+47])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[2160,73577+34]..[2160,73577+45])
                                                      Pexp_field
                                                      expression (typing/parmatch.ml[2160,73577+34]..[2160,73577+37])
                                                        Pexp_ident "lbl" (typing/parmatch.ml[2160,73577+34]..[2160,73577+37])
                                                      "lbl_mut" (typing/parmatch.ml[2160,73577+38]..[2160,73577+45])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[2160,73577+48]..[2160,73577+57])
                                                      Pexp_construct "Immutable" (typing/parmatch.ml[2160,73577+48]..[2160,73577+57])
                                                      None
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[2160,73577+61]..[2160,73577+67])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[2160,73577+61]..[2160,73577+65])
                                                  Pexp_ident "loop" (typing/parmatch.ml[2160,73577+61]..[2160,73577+65])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[2160,73577+66]..[2160,73577+67])
                                                      Pexp_ident "p" (typing/parmatch.ml[2160,73577+66]..[2160,73577+67])
                                                ]
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[2161,73646+14]..[2161,73646+18])
                                        Pexp_ident "ldps" (typing/parmatch.ml[2161,73646+14]..[2161,73646+18])
                                  ]
                              <case>
                                pattern (typing/parmatch.ml[2162,73665+10]..[2162,73665+25])
                                  Ppat_construct "Tpat_or" (typing/parmatch.ml[2162,73665+10]..[2162,73665+17])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[2162,73665+18]..[2162,73665+25])
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[2162,73665+19]..[2162,73665+20])
                                          Ppat_var "p" (typing/parmatch.ml[2162,73665+19]..[2162,73665+20])
                                        pattern (typing/parmatch.ml[2162,73665+21]..[2162,73665+22])
                                          Ppat_var "q" (typing/parmatch.ml[2162,73665+21]..[2162,73665+22])
                                        pattern (typing/parmatch.ml[2162,73665+23]..[2162,73665+24])
                                          Ppat_any
                                      ]
                                expression (typing/parmatch.ml[2163,73694+12]..[2163,73694+28])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[2163,73694+19]..[2163,73694+21])
                                    Pexp_ident "&&" (typing/parmatch.ml[2163,73694+19]..[2163,73694+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[2163,73694+12]..[2163,73694+18])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[2163,73694+12]..[2163,73694+16])
                                          Pexp_ident "loop" (typing/parmatch.ml[2163,73694+12]..[2163,73694+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[2163,73694+17]..[2163,73694+18])
                                              Pexp_ident "p" (typing/parmatch.ml[2163,73694+17]..[2163,73694+18])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[2163,73694+22]..[2163,73694+28])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[2163,73694+22]..[2163,73694+26])
                                          Pexp_ident "loop" (typing/parmatch.ml[2163,73694+22]..[2163,73694+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[2163,73694+27]..[2163,73694+28])
                                              Pexp_ident "q" (typing/parmatch.ml[2163,73694+27]..[2163,73694+28])
                                        ]
                                  ]
                            ]
                    ]
                    expression (typing/parmatch.ml[2165,73732+6]..[2165,73732+14])
                      Pexp_apply
                      expression (typing/parmatch.ml[2165,73732+6]..[2165,73732+10])
                        Pexp_ident "loop" (typing/parmatch.ml[2165,73732+6]..[2165,73732+10])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[2165,73732+11]..[2165,73732+14])
                            Pexp_ident "pat" (typing/parmatch.ml[2165,73732+11]..[2165,73732+14])
                      ]
              ]
    ]
  structure_item (typing/parmatch.ml[2183,73955+0]..[2192,74245+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[2183,73955+4]..[2183,73955+17])
          Ppat_var "check_partial" (typing/parmatch.ml[2183,73955+4]..[2183,73955+17])
        expression (typing/parmatch.ml[2183,73955+18]..[2192,74245+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[2183,73955+18]..[2183,73955+22])
            Ppat_var "pred" (typing/parmatch.ml[2183,73955+18]..[2183,73955+22])
          expression (typing/parmatch.ml[2183,73955+23]..[2192,74245+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[2183,73955+23]..[2183,73955+26])
              Ppat_var "loc" (typing/parmatch.ml[2183,73955+23]..[2183,73955+26])
            expression (typing/parmatch.ml[2183,73955+27]..[2192,74245+7]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[2183,73955+27]..[2183,73955+32])
                Ppat_var "casel" (typing/parmatch.ml[2183,73955+27]..[2183,73955+32])
              expression (typing/parmatch.ml[2184,73990+2]..[2192,74245+7])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/parmatch.ml[2184,73990+6]..[2184,73990+9])
                      Ppat_var "pss" (typing/parmatch.ml[2184,73990+6]..[2184,73990+9])
                    expression (typing/parmatch.ml[2184,73990+12]..[2184,73990+32])
                      Pexp_apply
                      expression (typing/parmatch.ml[2184,73990+12]..[2184,73990+26])
                        Pexp_ident "initial_matrix" (typing/parmatch.ml[2184,73990+12]..[2184,73990+26])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[2184,73990+27]..[2184,73990+32])
                            Pexp_ident "casel" (typing/parmatch.ml[2184,73990+27]..[2184,73990+32])
                      ]
                ]
                expression (typing/parmatch.ml[2185,74026+2]..[2192,74245+7])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/parmatch.ml[2185,74026+6]..[2185,74026+9])
                        Ppat_var "pss" (typing/parmatch.ml[2185,74026+6]..[2185,74026+9])
                      expression (typing/parmatch.ml[2185,74026+12]..[2185,74026+32])
                        Pexp_apply
                        expression (typing/parmatch.ml[2185,74026+12]..[2185,74026+20])
                          Pexp_ident "get_mins" (typing/parmatch.ml[2185,74026+12]..[2185,74026+20])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2185,74026+21]..[2185,74026+28])
                              Pexp_ident "le_pats" (typing/parmatch.ml[2185,74026+21]..[2185,74026+28])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2185,74026+29]..[2185,74026+32])
                              Pexp_ident "pss" (typing/parmatch.ml[2185,74026+29]..[2185,74026+32])
                        ]
                  ]
                  expression (typing/parmatch.ml[2186,74062+2]..[2192,74245+7])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[2186,74062+6]..[2186,74062+11])
                          Ppat_var "total" (typing/parmatch.ml[2186,74062+6]..[2186,74062+11])
                        expression (typing/parmatch.ml[2186,74062+14]..[2186,74062+50])
                          Pexp_apply
                          expression (typing/parmatch.ml[2186,74062+14]..[2186,74062+30])
                            Pexp_ident "do_check_partial" (typing/parmatch.ml[2186,74062+14]..[2186,74062+30])
                          [
                            <arg>
                            Labelled "pred"
                              expression (typing/parmatch.ml[2186,74062+32]..[2186,74062+36])
                                Pexp_ident "pred" (typing/parmatch.ml[2186,74062+32]..[2186,74062+36])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[2186,74062+37]..[2186,74062+40])
                                Pexp_ident "loc" (typing/parmatch.ml[2186,74062+37]..[2186,74062+40])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[2186,74062+41]..[2186,74062+46])
                                Pexp_ident "casel" (typing/parmatch.ml[2186,74062+41]..[2186,74062+46])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[2186,74062+47]..[2186,74062+50])
                                Pexp_ident "pss" (typing/parmatch.ml[2186,74062+47]..[2186,74062+50])
                          ]
                    ]
                    expression (typing/parmatch.ml[2187,74116+2]..[2192,74245+7])
                      Pexp_sequence
                      expression (typing/parmatch.ml[2187,74116+2]..[2191,74237+5])
                        Pexp_ifthenelse
                        expression (typing/parmatch.ml[2188,74121+4]..[2188,74121+67])
                          Pexp_apply
                          expression (typing/parmatch.ml[2188,74121+18]..[2188,74121+20])
                            Pexp_ident "&&" (typing/parmatch.ml[2188,74121+18]..[2188,74121+20])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[2188,74121+4]..[2188,74121+17])
                                Pexp_apply
                                expression (typing/parmatch.ml[2188,74121+10]..[2188,74121+11])
                                  Pexp_ident "=" (typing/parmatch.ml[2188,74121+10]..[2188,74121+11])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[2188,74121+4]..[2188,74121+9])
                                      Pexp_ident "total" (typing/parmatch.ml[2188,74121+4]..[2188,74121+9])
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[2188,74121+12]..[2188,74121+17])
                                      Pexp_construct "Total" (typing/parmatch.ml[2188,74121+12]..[2188,74121+17])
                                      None
                                ]
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[2188,74121+21]..[2188,74121+67])
                                Pexp_apply
                                expression (typing/parmatch.ml[2188,74121+21]..[2188,74121+39])
                                  Pexp_ident "Warnings.is_active" (typing/parmatch.ml[2188,74121+21]..[2188,74121+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[2188,74121+40]..[2188,74121+67])
                                      Pexp_construct "Warnings.Fragile_match" (typing/parmatch.ml[2188,74121+41]..[2188,74121+63])
                                      Some
                                        expression (typing/parmatch.ml[2188,74121+64]..[2188,74121+66])
                                          Pexp_constant PConst_string("",(typing/parmatch.ml[2188,74121+65]..[2188,74121+65]),None)
                                ]
                          ]
                        expression (typing/parmatch.ml[2189,74189+7]..[2191,74237+5])
                          Pexp_apply
                          expression (typing/parmatch.ml[2190,74202+4]..[2190,74202+20])
                            Pexp_ident "do_check_fragile" (typing/parmatch.ml[2190,74202+4]..[2190,74202+20])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[2190,74202+21]..[2190,74202+24])
                                Pexp_ident "loc" (typing/parmatch.ml[2190,74202+21]..[2190,74202+24])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[2190,74202+25]..[2190,74202+30])
                                Pexp_ident "casel" (typing/parmatch.ml[2190,74202+25]..[2190,74202+30])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[2190,74202+31]..[2190,74202+34])
                                Pexp_ident "pss" (typing/parmatch.ml[2190,74202+31]..[2190,74202+34])
                          ]
                        None
                      expression (typing/parmatch.ml[2192,74245+2]..[2192,74245+7])
                        Pexp_ident "total" (typing/parmatch.ml[2192,74245+2]..[2192,74245+7])
    ]
  structure_item (typing/parmatch.ml[2240,76271+0]..[2240,76271+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[2240,76271+4]..[2240,76271+16])
          Ppat_var "pattern_vars" (typing/parmatch.ml[2240,76271+4]..[2240,76271+16])
        expression (typing/parmatch.ml[2240,76271+17]..[2240,76271+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[2240,76271+17]..[2240,76271+18])
            Ppat_var "p" (typing/parmatch.ml[2240,76271+17]..[2240,76271+18])
          expression (typing/parmatch.ml[2240,76271+21]..[2240,76271+69])
            Pexp_apply
            expression (typing/parmatch.ml[2240,76271+21]..[2240,76271+38])
              Pexp_ident "Ident.Set.of_list" (typing/parmatch.ml[2240,76271+21]..[2240,76271+38])
            [
              <arg>
              Nolabel
                expression (typing/parmatch.ml[2240,76271+39]..[2240,76271+69])
                  Pexp_apply
                  expression (typing/parmatch.ml[2240,76271+40]..[2240,76271+66])
                    Pexp_ident "Typedtree.pat_bound_idents" (typing/parmatch.ml[2240,76271+40]..[2240,76271+66])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2240,76271+67]..[2240,76271+68])
                        Pexp_ident "p" (typing/parmatch.ml[2240,76271+67]..[2240,76271+68])
                  ]
            ]
    ]
  structure_item (typing/parmatch.ml[2270,77537+0]..[2270,77537+67])
    Pstr_type Rec
    [
      type_declaration "amb_row" (typing/parmatch.ml[2270,77537+5]..[2270,77537+12]) (typing/parmatch.ml[2270,77537+0]..[2270,77537+67])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/parmatch.ml[2270,77537+17]..[2270,77537+37])
                Immutable
                "row" (typing/parmatch.ml[2270,77537+17]..[2270,77537+20])                core_type (typing/parmatch.ml[2270,77537+23]..[2270,77537+35])
                  Ptyp_constr "list" (typing/parmatch.ml[2270,77537+31]..[2270,77537+35])
                  [
                    core_type (typing/parmatch.ml[2270,77537+23]..[2270,77537+30])
                      Ptyp_constr "pattern" (typing/parmatch.ml[2270,77537+23]..[2270,77537+30])
                      []
                  ]
              (typing/parmatch.ml[2270,77537+38]..[2270,77537+65])
                Immutable
                "varsets" (typing/parmatch.ml[2270,77537+38]..[2270,77537+45])                core_type (typing/parmatch.ml[2270,77537+48]..[2270,77537+64])
                  Ptyp_constr "list" (typing/parmatch.ml[2270,77537+60]..[2270,77537+64])
                  [
                    core_type (typing/parmatch.ml[2270,77537+48]..[2270,77537+59])
                      Ptyp_constr "Ident.Set.t" (typing/parmatch.ml[2270,77537+48]..[2270,77537+59])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/parmatch.ml[2272,77606+0]..[2285,78277+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[2272,77606+4]..[2272,77606+25])
          Ppat_var "simplify_head_amb_pat" (typing/parmatch.ml[2272,77606+4]..[2272,77606+25])
        expression (typing/parmatch.ml[2272,77606+26]..[2285,78277+46]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[2272,77606+26]..[2272,77606+46])
            Ppat_var "head_bound_variables" (typing/parmatch.ml[2272,77606+26]..[2272,77606+46])
          expression (typing/parmatch.ml[2272,77606+47]..[2285,78277+46]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[2272,77606+47]..[2272,77606+54])
              Ppat_var "varsets" (typing/parmatch.ml[2272,77606+47]..[2272,77606+54])
            expression (typing/parmatch.ml[2272,77606+55]..[2285,78277+46]) ghost
              Pexp_fun
              Labelled "add_column"
              None
              pattern (typing/parmatch.ml[2272,77606+56]..[2272,77606+66])
                Ppat_var "add_column" (typing/parmatch.ml[2272,77606+56]..[2272,77606+66])
              expression (typing/parmatch.ml[2272,77606+67]..[2285,78277+46]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/parmatch.ml[2272,77606+67]..[2272,77606+68])
                  Ppat_var "p" (typing/parmatch.ml[2272,77606+67]..[2272,77606+68])
                expression (typing/parmatch.ml[2272,77606+69]..[2285,78277+46]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (typing/parmatch.ml[2272,77606+69]..[2272,77606+71])
                    Ppat_var "ps" (typing/parmatch.ml[2272,77606+69]..[2272,77606+71])
                  expression (typing/parmatch.ml[2272,77606+72]..[2285,78277+46]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/parmatch.ml[2272,77606+72]..[2272,77606+73])
                      Ppat_var "k" (typing/parmatch.ml[2272,77606+72]..[2272,77606+73])
                    expression (typing/parmatch.ml[2273,77682+2]..[2285,78277+46])
                      Pexp_let Rec
                      [
                        <def>
                          pattern (typing/parmatch.ml[2273,77682+10]..[2273,77682+15])
                            Ppat_var "simpl" (typing/parmatch.ml[2273,77682+10]..[2273,77682+15])
                          expression (typing/parmatch.ml[2273,77682+16]..[2284,78210+66]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/parmatch.ml[2273,77682+16]..[2273,77682+36])
                              Ppat_var "head_bound_variables" (typing/parmatch.ml[2273,77682+16]..[2273,77682+36])
                            expression (typing/parmatch.ml[2273,77682+37]..[2284,78210+66]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/parmatch.ml[2273,77682+37]..[2273,77682+44])
                                Ppat_var "varsets" (typing/parmatch.ml[2273,77682+37]..[2273,77682+44])
                              expression (typing/parmatch.ml[2273,77682+45]..[2284,78210+66]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/parmatch.ml[2273,77682+45]..[2273,77682+46])
                                  Ppat_var "p" (typing/parmatch.ml[2273,77682+45]..[2273,77682+46])
                                expression (typing/parmatch.ml[2273,77682+47]..[2284,78210+66]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/parmatch.ml[2273,77682+47]..[2273,77682+49])
                                    Ppat_var "ps" (typing/parmatch.ml[2273,77682+47]..[2273,77682+49])
                                  expression (typing/parmatch.ml[2273,77682+50]..[2284,78210+66]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/parmatch.ml[2273,77682+50]..[2273,77682+51])
                                      Ppat_var "k" (typing/parmatch.ml[2273,77682+50]..[2273,77682+51])
                                    expression (typing/parmatch.ml[2274,77736+4]..[2284,78210+66])
                                      Pexp_match
                                      expression (typing/parmatch.ml[2274,77736+10]..[2274,77736+44])
                                        Pexp_field
                                        expression (typing/parmatch.ml[2274,77736+10]..[2274,77736+35])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[2274,77736+11]..[2274,77736+32])
                                            Pexp_ident "Patterns.General.view" (typing/parmatch.ml[2274,77736+11]..[2274,77736+32])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[2274,77736+33]..[2274,77736+34])
                                                Pexp_ident "p" (typing/parmatch.ml[2274,77736+33]..[2274,77736+34])
                                          ]
                                        "pat_desc" (typing/parmatch.ml[2274,77736+36]..[2274,77736+44])
                                      [
                                        <case>
                                          pattern (typing/parmatch.ml[2275,77786+6]..[2275,77786+20])
                                            Ppat_variant "Alias"
                                            Some
                                              pattern (typing/parmatch.ml[2275,77786+13]..[2275,77786+20])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/parmatch.ml[2275,77786+14]..[2275,77786+15])
                                                    Ppat_var "p" (typing/parmatch.ml[2275,77786+14]..[2275,77786+15])
                                                  pattern (typing/parmatch.ml[2275,77786+16]..[2275,77786+17])
                                                    Ppat_var "x" (typing/parmatch.ml[2275,77786+16]..[2275,77786+17])
                                                  pattern (typing/parmatch.ml[2275,77786+18]..[2275,77786+19])
                                                    Ppat_any
                                                ]
                                          expression (typing/parmatch.ml[2276,77810+6]..[2276,77810+65])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[2276,77810+6]..[2276,77810+11])
                                              Pexp_ident "simpl" (typing/parmatch.ml[2276,77810+6]..[2276,77810+11])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2276,77810+12]..[2276,77810+50])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[2276,77810+13]..[2276,77810+26])
                                                    Pexp_ident "Ident.Set.add" (typing/parmatch.ml[2276,77810+13]..[2276,77810+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2276,77810+27]..[2276,77810+28])
                                                        Pexp_ident "x" (typing/parmatch.ml[2276,77810+27]..[2276,77810+28])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2276,77810+29]..[2276,77810+49])
                                                        Pexp_ident "head_bound_variables" (typing/parmatch.ml[2276,77810+29]..[2276,77810+49])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2276,77810+51]..[2276,77810+58])
                                                  Pexp_ident "varsets" (typing/parmatch.ml[2276,77810+51]..[2276,77810+58])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2276,77810+59]..[2276,77810+60])
                                                  Pexp_ident "p" (typing/parmatch.ml[2276,77810+59]..[2276,77810+60])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2276,77810+61]..[2276,77810+63])
                                                  Pexp_ident "ps" (typing/parmatch.ml[2276,77810+61]..[2276,77810+63])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2276,77810+64]..[2276,77810+65])
                                                  Pexp_ident "k" (typing/parmatch.ml[2276,77810+64]..[2276,77810+65])
                                            ]
                                        <case>
                                          pattern (typing/parmatch.ml[2277,77876+6]..[2277,77876+17])
                                            Ppat_variant "Var"
                                            Some
                                              pattern (typing/parmatch.ml[2277,77876+11]..[2277,77876+17])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/parmatch.ml[2277,77876+12]..[2277,77876+13])
                                                    Ppat_var "x" (typing/parmatch.ml[2277,77876+12]..[2277,77876+13])
                                                  pattern (typing/parmatch.ml[2277,77876+15]..[2277,77876+16])
                                                    Ppat_any
                                                ]
                                          expression (typing/parmatch.ml[2278,77897+6]..[2278,77897+78])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[2278,77897+6]..[2278,77897+11])
                                              Pexp_ident "simpl" (typing/parmatch.ml[2278,77897+6]..[2278,77897+11])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2278,77897+12]..[2278,77897+50])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[2278,77897+13]..[2278,77897+26])
                                                    Pexp_ident "Ident.Set.add" (typing/parmatch.ml[2278,77897+13]..[2278,77897+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2278,77897+27]..[2278,77897+28])
                                                        Pexp_ident "x" (typing/parmatch.ml[2278,77897+27]..[2278,77897+28])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2278,77897+29]..[2278,77897+49])
                                                        Pexp_ident "head_bound_variables" (typing/parmatch.ml[2278,77897+29]..[2278,77897+49])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2278,77897+51]..[2278,77897+58])
                                                  Pexp_ident "varsets" (typing/parmatch.ml[2278,77897+51]..[2278,77897+58])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2278,77897+59]..[2278,77897+73])
                                                  Pexp_ident "Patterns.omega" (typing/parmatch.ml[2278,77897+59]..[2278,77897+73])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2278,77897+74]..[2278,77897+76])
                                                  Pexp_ident "ps" (typing/parmatch.ml[2278,77897+74]..[2278,77897+76])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2278,77897+77]..[2278,77897+78])
                                                  Pexp_ident "k" (typing/parmatch.ml[2278,77897+77]..[2278,77897+78])
                                            ]
                                        <case>
                                          pattern (typing/parmatch.ml[2279,77976+6]..[2279,77976+19])
                                            Ppat_variant "Or"
                                            Some
                                              pattern (typing/parmatch.ml[2279,77976+10]..[2279,77976+19])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/parmatch.ml[2279,77976+11]..[2279,77976+13])
                                                    Ppat_var "p1" (typing/parmatch.ml[2279,77976+11]..[2279,77976+13])
                                                  pattern (typing/parmatch.ml[2279,77976+14]..[2279,77976+16])
                                                    Ppat_var "p2" (typing/parmatch.ml[2279,77976+14]..[2279,77976+16])
                                                  pattern (typing/parmatch.ml[2279,77976+17]..[2279,77976+18])
                                                    Ppat_any
                                                ]
                                          expression (typing/parmatch.ml[2280,77999+6]..[2281,78046+52])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[2280,77999+6]..[2280,77999+11])
                                              Pexp_ident "simpl" (typing/parmatch.ml[2280,77999+6]..[2280,77999+11])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2280,77999+12]..[2280,77999+32])
                                                  Pexp_ident "head_bound_variables" (typing/parmatch.ml[2280,77999+12]..[2280,77999+32])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2280,77999+33]..[2280,77999+40])
                                                  Pexp_ident "varsets" (typing/parmatch.ml[2280,77999+33]..[2280,77999+40])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2280,77999+41]..[2280,77999+43])
                                                  Pexp_ident "p1" (typing/parmatch.ml[2280,77999+41]..[2280,77999+43])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2280,77999+44]..[2280,77999+46])
                                                  Pexp_ident "ps" (typing/parmatch.ml[2280,77999+44]..[2280,77999+46])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2281,78046+8]..[2281,78046+52])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[2281,78046+9]..[2281,78046+14])
                                                    Pexp_ident "simpl" (typing/parmatch.ml[2281,78046+9]..[2281,78046+14])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2281,78046+15]..[2281,78046+35])
                                                        Pexp_ident "head_bound_variables" (typing/parmatch.ml[2281,78046+15]..[2281,78046+35])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2281,78046+36]..[2281,78046+43])
                                                        Pexp_ident "varsets" (typing/parmatch.ml[2281,78046+36]..[2281,78046+43])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2281,78046+44]..[2281,78046+46])
                                                        Pexp_ident "p2" (typing/parmatch.ml[2281,78046+44]..[2281,78046+46])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2281,78046+47]..[2281,78046+49])
                                                        Pexp_ident "ps" (typing/parmatch.ml[2281,78046+47]..[2281,78046+49])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2281,78046+50]..[2281,78046+51])
                                                        Pexp_ident "k" (typing/parmatch.ml[2281,78046+50]..[2281,78046+51])
                                                  ]
                                            ]
                                        <case>
                                          pattern (typing/parmatch.ml[2282,78099+6]..[2282,78099+35])
                                            Ppat_alias "view" (typing/parmatch.ml[2282,78099+31]..[2282,78099+35])
                                            pattern (typing/parmatch.ml[2282,78099+6]..[2282,78099+27])
                                              Ppat_type
                                              "Patterns.Simple.view" (typing/parmatch.ml[2282,78099+7]..[2282,78099+27])
                                          expression (typing/parmatch.ml[2283,78138+6]..[2284,78210+66])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[2283,78138+6]..[2283,78138+16])
                                              Pexp_ident "add_column" (typing/parmatch.ml[2283,78138+6]..[2283,78138+16])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2283,78138+17]..[2283,78138+71])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[2283,78138+18]..[2283,78138+43])
                                                    Pexp_ident "Patterns.Head.deconstruct" (typing/parmatch.ml[2283,78138+18]..[2283,78138+43])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2283,78138+44]..[2283,78138+70])
                                                        Pexp_record
                                                        [
                                                          "pat_desc" (typing/parmatch.ml[2283,78138+53]..[2283,78138+61])
                                                            expression (typing/parmatch.ml[2283,78138+64]..[2283,78138+68])
                                                              Pexp_ident "view" (typing/parmatch.ml[2283,78138+64]..[2283,78138+68])
                                                        ]
                                                        Some
                                                          expression (typing/parmatch.ml[2283,78138+46]..[2283,78138+47])
                                                            Pexp_ident "p" (typing/parmatch.ml[2283,78138+46]..[2283,78138+47])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2284,78210+8]..[2284,78210+64])
                                                  Pexp_record
                                                  [
                                                    "row" (typing/parmatch.ml[2284,78210+10]..[2284,78210+13])
                                                      expression (typing/parmatch.ml[2284,78210+16]..[2284,78210+18])
                                                        Pexp_ident "ps" (typing/parmatch.ml[2284,78210+16]..[2284,78210+18])
                                                    "varsets" (typing/parmatch.ml[2284,78210+20]..[2284,78210+27])
                                                      expression (typing/parmatch.ml[2284,78210+30]..[2284,78210+61])
                                                        Pexp_construct "::" (typing/parmatch.ml[2284,78210+51]..[2284,78210+53])
                                                        Some
                                                          expression (typing/parmatch.ml[2284,78210+30]..[2284,78210+61]) ghost
                                                            Pexp_tuple
                                                            [
                                                              expression (typing/parmatch.ml[2284,78210+30]..[2284,78210+50])
                                                                Pexp_ident "head_bound_variables" (typing/parmatch.ml[2284,78210+30]..[2284,78210+50])
                                                              expression (typing/parmatch.ml[2284,78210+54]..[2284,78210+61])
                                                                Pexp_ident "varsets" (typing/parmatch.ml[2284,78210+54]..[2284,78210+61])
                                                            ]
                                                  ]
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2284,78210+65]..[2284,78210+66])
                                                  Pexp_ident "k" (typing/parmatch.ml[2284,78210+65]..[2284,78210+66])
                                            ]
                                      ]
                      ]
                      expression (typing/parmatch.ml[2285,78277+5]..[2285,78277+46])
                        Pexp_apply
                        expression (typing/parmatch.ml[2285,78277+5]..[2285,78277+10])
                          Pexp_ident "simpl" (typing/parmatch.ml[2285,78277+5]..[2285,78277+10])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2285,78277+11]..[2285,78277+31])
                              Pexp_ident "head_bound_variables" (typing/parmatch.ml[2285,78277+11]..[2285,78277+31])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2285,78277+32]..[2285,78277+39])
                              Pexp_ident "varsets" (typing/parmatch.ml[2285,78277+32]..[2285,78277+39])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2285,78277+40]..[2285,78277+41])
                              Pexp_ident "p" (typing/parmatch.ml[2285,78277+40]..[2285,78277+41])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2285,78277+42]..[2285,78277+44])
                              Pexp_ident "ps" (typing/parmatch.ml[2285,78277+42]..[2285,78277+44])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2285,78277+45]..[2285,78277+46])
                              Pexp_ident "k" (typing/parmatch.ml[2285,78277+45]..[2285,78277+46])
                        ]
    ]
  structure_item (typing/parmatch.ml[2310,79313+0]..[2310,79313+54])
    Pstr_type Rec
    [
      type_declaration "signed" (typing/parmatch.ml[2310,79313+14]..[2310,79313+20]) (typing/parmatch.ml[2310,79313+0]..[2310,79313+54])
        ptype_params =
          [
            core_type (typing/parmatch.ml[2310,79313+6]..[2310,79313+8])
              Ptyp_var a
            core_type (typing/parmatch.ml[2310,79313+10]..[2310,79313+12])
              Ptyp_var b
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/parmatch.ml[2310,79313+23]..[2310,79313+37])
                "Positive" (typing/parmatch.ml[2310,79313+23]..[2310,79313+31])
                [
                  core_type (typing/parmatch.ml[2310,79313+35]..[2310,79313+37])
                    Ptyp_var a
                ]
                None
              (typing/parmatch.ml[2310,79313+38]..[2310,79313+54])
                "Negative" (typing/parmatch.ml[2310,79313+40]..[2310,79313+48])
                [
                  core_type (typing/parmatch.ml[2310,79313+52]..[2310,79313+54])
                    Ptyp_var b
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/parmatch.ml[2312,79369+0]..[2323,79819+53])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[2312,79369+8]..[2312,79369+30])
          Ppat_var "simplify_first_amb_col" (typing/parmatch.ml[2312,79369+8]..[2312,79369+30])
        expression (typing/parmatch.ml[2312,79369+33]..[2323,79819+53])
          Pexp_function
          [
            <case>
              pattern (typing/parmatch.ml[2313,79411+4]..[2313,79411+6])
                Ppat_construct "[]" (typing/parmatch.ml[2313,79411+4]..[2313,79411+6])
                None
              expression (typing/parmatch.ml[2313,79411+10]..[2313,79411+12])
                Pexp_construct "[]" (typing/parmatch.ml[2313,79411+10]..[2313,79411+12])
                None
            <case>
              pattern (typing/parmatch.ml[2314,79424+4]..[2314,79424+49])
                Ppat_construct "::" (typing/parmatch.ml[2314,79424+45]..[2314,79424+47])
                Some
                  []
                  pattern (typing/parmatch.ml[2314,79424+4]..[2314,79424+49]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[2314,79424+4]..[2314,79424+44])
                        Ppat_or
                        pattern (typing/parmatch.ml[2314,79424+5]..[2314,79424+16])
                          Ppat_construct "Negative" (typing/parmatch.ml[2314,79424+5]..[2314,79424+13])
                          Some
                            []
                            pattern (typing/parmatch.ml[2314,79424+14]..[2314,79424+16])
                              Ppat_construct "[]" (typing/parmatch.ml[2314,79424+14]..[2314,79424+16])
                              None
                        pattern (typing/parmatch.ml[2314,79424+19]..[2314,79424+43])
                          Ppat_construct "Positive" (typing/parmatch.ml[2314,79424+19]..[2314,79424+27])
                          Some
                            []
                            pattern (typing/parmatch.ml[2314,79424+28]..[2314,79424+43])
                              Ppat_record Open
                              [
                                "row" (typing/parmatch.ml[2314,79424+30]..[2314,79424+33])
                                  pattern (typing/parmatch.ml[2314,79424+36]..[2314,79424+38])
                                    Ppat_construct "[]" (typing/parmatch.ml[2314,79424+36]..[2314,79424+38])
                                    None
                              ]
                      pattern (typing/parmatch.ml[2314,79424+48]..[2314,79424+49])
                        Ppat_any
                    ]
              expression (typing/parmatch.ml[2314,79424+54]..[2314,79424+66])
                Pexp_assert
                expression (typing/parmatch.ml[2314,79424+61]..[2314,79424+66])
                  Pexp_construct "false" (typing/parmatch.ml[2314,79424+61]..[2314,79424+66])
                  None
            <case>
              pattern (typing/parmatch.ml[2315,79491+4]..[2315,79491+29])
                Ppat_construct "::" (typing/parmatch.ml[2315,79491+23]..[2315,79491+25])
                Some
                  []
                  pattern (typing/parmatch.ml[2315,79491+4]..[2315,79491+29]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[2315,79491+4]..[2315,79491+22])
                        Ppat_construct "Negative" (typing/parmatch.ml[2315,79491+4]..[2315,79491+12])
                        Some
                          []
                          pattern (typing/parmatch.ml[2315,79491+13]..[2315,79491+22])
                            Ppat_construct "::" (typing/parmatch.ml[2315,79491+16]..[2315,79491+18])
                            Some
                              []
                              pattern (typing/parmatch.ml[2315,79491+14]..[2315,79491+21]) ghost
                                Ppat_tuple
                                [
                                  pattern (typing/parmatch.ml[2315,79491+14]..[2315,79491+15])
                                    Ppat_var "n" (typing/parmatch.ml[2315,79491+14]..[2315,79491+15])
                                  pattern (typing/parmatch.ml[2315,79491+19]..[2315,79491+21])
                                    Ppat_var "ns" (typing/parmatch.ml[2315,79491+19]..[2315,79491+21])
                                ]
                      pattern (typing/parmatch.ml[2315,79491+26]..[2315,79491+29])
                        Ppat_var "rem" (typing/parmatch.ml[2315,79491+26]..[2315,79491+29])
                    ]
              expression (typing/parmatch.ml[2316,79524+6]..[2318,79603+53])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/parmatch.ml[2316,79524+10]..[2316,79524+20])
                      Ppat_var "add_column" (typing/parmatch.ml[2316,79524+10]..[2316,79524+20])
                    expression (typing/parmatch.ml[2316,79524+21]..[2316,79524+51]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/parmatch.ml[2316,79524+21]..[2316,79524+22])
                        Ppat_var "n" (typing/parmatch.ml[2316,79524+21]..[2316,79524+22])
                      expression (typing/parmatch.ml[2316,79524+23]..[2316,79524+51]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/parmatch.ml[2316,79524+23]..[2316,79524+25])
                          Ppat_var "ns" (typing/parmatch.ml[2316,79524+23]..[2316,79524+25])
                        expression (typing/parmatch.ml[2316,79524+26]..[2316,79524+51]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/parmatch.ml[2316,79524+26]..[2316,79524+27])
                            Ppat_var "k" (typing/parmatch.ml[2316,79524+26]..[2316,79524+27])
                          expression (typing/parmatch.ml[2316,79524+30]..[2316,79524+51])
                            Pexp_construct "::" (typing/parmatch.ml[2316,79524+47]..[2316,79524+49])
                            Some
                              expression (typing/parmatch.ml[2316,79524+30]..[2316,79524+51]) ghost
                                Pexp_tuple
                                [
                                  expression (typing/parmatch.ml[2316,79524+30]..[2316,79524+46])
                                    Pexp_tuple
                                    [
                                      expression (typing/parmatch.ml[2316,79524+31]..[2316,79524+32])
                                        Pexp_ident "n" (typing/parmatch.ml[2316,79524+31]..[2316,79524+32])
                                      expression (typing/parmatch.ml[2316,79524+34]..[2316,79524+45])
                                        Pexp_construct "Negative" (typing/parmatch.ml[2316,79524+34]..[2316,79524+42])
                                        Some
                                          expression (typing/parmatch.ml[2316,79524+43]..[2316,79524+45])
                                            Pexp_ident "ns" (typing/parmatch.ml[2316,79524+43]..[2316,79524+45])
                                    ]
                                  expression (typing/parmatch.ml[2316,79524+50]..[2316,79524+51])
                                    Pexp_ident "k" (typing/parmatch.ml[2316,79524+50]..[2316,79524+51])
                                ]
                ]
                expression (typing/parmatch.ml[2317,79579+6]..[2318,79603+53])
                  Pexp_apply
                  expression (typing/parmatch.ml[2317,79579+6]..[2317,79579+23])
                    Pexp_ident "simplify_head_pat" (typing/parmatch.ml[2317,79579+6]..[2317,79579+23])
                  [
                    <arg>
                    Labelled "add_column"
                      expression (typing/parmatch.ml[2318,79603+9]..[2318,79603+19])
                        Pexp_ident "add_column" (typing/parmatch.ml[2318,79603+9]..[2318,79603+19])
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2318,79603+20]..[2318,79603+21])
                        Pexp_ident "n" (typing/parmatch.ml[2318,79603+20]..[2318,79603+21])
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2318,79603+22]..[2318,79603+24])
                        Pexp_ident "ns" (typing/parmatch.ml[2318,79603+22]..[2318,79603+24])
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2318,79603+25]..[2318,79603+53])
                        Pexp_apply
                        expression (typing/parmatch.ml[2318,79603+26]..[2318,79603+48])
                          Pexp_ident "simplify_first_amb_col" (typing/parmatch.ml[2318,79603+26]..[2318,79603+48])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2318,79603+49]..[2318,79603+52])
                              Pexp_ident "rem" (typing/parmatch.ml[2318,79603+49]..[2318,79603+52])
                        ]
                  ]
            <case>
              pattern (typing/parmatch.ml[2319,79657+4]..[2319,79657+43])
                Ppat_construct "::" (typing/parmatch.ml[2319,79657+38]..[2319,79657+40])
                Some
                  []
                  pattern (typing/parmatch.ml[2319,79657+4]..[2319,79657+43]) ghost
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[2319,79657+4]..[2319,79657+38])
                        Ppat_construct "Positive" (typing/parmatch.ml[2319,79657+4]..[2319,79657+12])
                        Some
                          []
                          pattern (typing/parmatch.ml[2319,79657+13]..[2319,79657+38])
                            Ppat_record Closed
                            [
                              "row" (typing/parmatch.ml[2319,79657+15]..[2319,79657+18])
                                pattern (typing/parmatch.ml[2319,79657+21]..[2319,79657+26])
                                  Ppat_construct "::" (typing/parmatch.ml[2319,79657+22]..[2319,79657+24])
                                  Some
                                    []
                                    pattern (typing/parmatch.ml[2319,79657+21]..[2319,79657+26]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (typing/parmatch.ml[2319,79657+21]..[2319,79657+22])
                                          Ppat_var "p" (typing/parmatch.ml[2319,79657+21]..[2319,79657+22])
                                        pattern (typing/parmatch.ml[2319,79657+24]..[2319,79657+26])
                                          Ppat_var "ps" (typing/parmatch.ml[2319,79657+24]..[2319,79657+26])
                                      ]
                              "varsets" (typing/parmatch.ml[2319,79657+28]..[2319,79657+35]) ghost
                                pattern (typing/parmatch.ml[2319,79657+28]..[2319,79657+35])
                                  Ppat_var "varsets" (typing/parmatch.ml[2319,79657+28]..[2319,79657+35])
                            ]
                      pattern (typing/parmatch.ml[2319,79657+40]..[2319,79657+43])
                        Ppat_var "rem" (typing/parmatch.ml[2319,79657+40]..[2319,79657+43])
                    ]
              expression (typing/parmatch.ml[2320,79704+6]..[2323,79819+53])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (typing/parmatch.ml[2320,79704+10]..[2320,79704+20])
                      Ppat_var "add_column" (typing/parmatch.ml[2320,79704+10]..[2320,79704+20])
                    expression (typing/parmatch.ml[2320,79704+21]..[2320,79704+51]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/parmatch.ml[2320,79704+21]..[2320,79704+22])
                        Ppat_var "p" (typing/parmatch.ml[2320,79704+21]..[2320,79704+22])
                      expression (typing/parmatch.ml[2320,79704+23]..[2320,79704+51]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/parmatch.ml[2320,79704+23]..[2320,79704+25])
                          Ppat_var "ps" (typing/parmatch.ml[2320,79704+23]..[2320,79704+25])
                        expression (typing/parmatch.ml[2320,79704+26]..[2320,79704+51]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/parmatch.ml[2320,79704+26]..[2320,79704+27])
                            Ppat_var "k" (typing/parmatch.ml[2320,79704+26]..[2320,79704+27])
                          expression (typing/parmatch.ml[2320,79704+30]..[2320,79704+51])
                            Pexp_construct "::" (typing/parmatch.ml[2320,79704+47]..[2320,79704+49])
                            Some
                              expression (typing/parmatch.ml[2320,79704+30]..[2320,79704+51]) ghost
                                Pexp_tuple
                                [
                                  expression (typing/parmatch.ml[2320,79704+30]..[2320,79704+46])
                                    Pexp_tuple
                                    [
                                      expression (typing/parmatch.ml[2320,79704+31]..[2320,79704+32])
                                        Pexp_ident "p" (typing/parmatch.ml[2320,79704+31]..[2320,79704+32])
                                      expression (typing/parmatch.ml[2320,79704+34]..[2320,79704+45])
                                        Pexp_construct "Positive" (typing/parmatch.ml[2320,79704+34]..[2320,79704+42])
                                        Some
                                          expression (typing/parmatch.ml[2320,79704+43]..[2320,79704+45])
                                            Pexp_ident "ps" (typing/parmatch.ml[2320,79704+43]..[2320,79704+45])
                                    ]
                                  expression (typing/parmatch.ml[2320,79704+50]..[2320,79704+51])
                                    Pexp_ident "k" (typing/parmatch.ml[2320,79704+50]..[2320,79704+51])
                                ]
                ]
                expression (typing/parmatch.ml[2321,79759+6]..[2323,79819+53])
                  Pexp_apply
                  expression (typing/parmatch.ml[2321,79759+6]..[2321,79759+27])
                    Pexp_ident "simplify_head_amb_pat" (typing/parmatch.ml[2321,79759+6]..[2321,79759+27])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2322,79787+8]..[2322,79787+23])
                        Pexp_ident "Ident.Set.empty" (typing/parmatch.ml[2322,79787+8]..[2322,79787+23])
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2322,79787+24]..[2322,79787+31])
                        Pexp_ident "varsets" (typing/parmatch.ml[2322,79787+24]..[2322,79787+31])
                    <arg>
                    Labelled "add_column"
                      expression (typing/parmatch.ml[2323,79819+9]..[2323,79819+19])
                        Pexp_ident "add_column" (typing/parmatch.ml[2323,79819+9]..[2323,79819+19])
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2323,79819+20]..[2323,79819+21])
                        Pexp_ident "p" (typing/parmatch.ml[2323,79819+20]..[2323,79819+21])
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2323,79819+22]..[2323,79819+24])
                        Pexp_ident "ps" (typing/parmatch.ml[2323,79819+22]..[2323,79819+24])
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2323,79819+25]..[2323,79819+53])
                        Pexp_apply
                        expression (typing/parmatch.ml[2323,79819+26]..[2323,79819+48])
                          Pexp_ident "simplify_first_amb_col" (typing/parmatch.ml[2323,79819+26]..[2323,79819+48])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2323,79819+49]..[2323,79819+52])
                              Pexp_ident "rem" (typing/parmatch.ml[2323,79819+49]..[2323,79819+52])
                        ]
                  ]
          ]
    ]
  structure_item (typing/parmatch.ml[2327,79905+0]..[2329,79932+23])
    Pstr_type Rec
    [
      type_declaration "stable_vars" (typing/parmatch.ml[2327,79905+5]..[2327,79905+16]) (typing/parmatch.ml[2327,79905+0]..[2329,79932+23])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (typing/parmatch.ml[2328,79924+2]..[2328,79924+7])
                "All" (typing/parmatch.ml[2328,79924+4]..[2328,79924+7])
                []
                None
              (typing/parmatch.ml[2329,79932+2]..[2329,79932+23])
                "Vars" (typing/parmatch.ml[2329,79932+4]..[2329,79932+8])
                [
                  core_type (typing/parmatch.ml[2329,79932+12]..[2329,79932+23])
                    Ptyp_constr "Ident.Set.t" (typing/parmatch.ml[2329,79932+12]..[2329,79932+23])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/parmatch.ml[2331,79957+0]..[2333,80032+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[2331,79957+4]..[2331,79957+16])
          Ppat_var "stable_inter" (typing/parmatch.ml[2331,79957+4]..[2331,79957+16])
        expression (typing/parmatch.ml[2331,79957+17]..[2333,80032+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[2331,79957+17]..[2331,79957+20])
            Ppat_var "sv1" (typing/parmatch.ml[2331,79957+17]..[2331,79957+20])
          expression (typing/parmatch.ml[2331,79957+21]..[2333,80032+52]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[2331,79957+21]..[2331,79957+24])
              Ppat_var "sv2" (typing/parmatch.ml[2331,79957+21]..[2331,79957+24])
            expression (typing/parmatch.ml[2331,79957+27]..[2333,80032+52])
              Pexp_match
              expression (typing/parmatch.ml[2331,79957+33]..[2331,79957+41])
                Pexp_tuple
                [
                  expression (typing/parmatch.ml[2331,79957+33]..[2331,79957+36])
                    Pexp_ident "sv1" (typing/parmatch.ml[2331,79957+33]..[2331,79957+36])
                  expression (typing/parmatch.ml[2331,79957+38]..[2331,79957+41])
                    Pexp_ident "sv2" (typing/parmatch.ml[2331,79957+38]..[2331,79957+41])
                ]
              [
                <case>
                  pattern (typing/parmatch.ml[2332,80004+4]..[2332,80004+21])
                    Ppat_or
                    pattern (typing/parmatch.ml[2332,80004+4]..[2332,80004+11])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[2332,80004+4]..[2332,80004+7])
                          Ppat_construct "All" (typing/parmatch.ml[2332,80004+4]..[2332,80004+7])
                          None
                        pattern (typing/parmatch.ml[2332,80004+9]..[2332,80004+11])
                          Ppat_var "sv" (typing/parmatch.ml[2332,80004+9]..[2332,80004+11])
                      ]
                    pattern (typing/parmatch.ml[2332,80004+14]..[2332,80004+21])
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[2332,80004+14]..[2332,80004+16])
                          Ppat_var "sv" (typing/parmatch.ml[2332,80004+14]..[2332,80004+16])
                        pattern (typing/parmatch.ml[2332,80004+18]..[2332,80004+21])
                          Ppat_construct "All" (typing/parmatch.ml[2332,80004+18]..[2332,80004+21])
                          None
                      ]
                  expression (typing/parmatch.ml[2332,80004+25]..[2332,80004+27])
                    Pexp_ident "sv" (typing/parmatch.ml[2332,80004+25]..[2332,80004+27])
                <case>
                  pattern (typing/parmatch.ml[2333,80032+4]..[2333,80032+20])
                    Ppat_tuple
                    [
                      pattern (typing/parmatch.ml[2333,80032+4]..[2333,80032+11])
                        Ppat_construct "Vars" (typing/parmatch.ml[2333,80032+4]..[2333,80032+8])
                        Some
                          []
                          pattern (typing/parmatch.ml[2333,80032+9]..[2333,80032+11])
                            Ppat_var "s1" (typing/parmatch.ml[2333,80032+9]..[2333,80032+11])
                      pattern (typing/parmatch.ml[2333,80032+13]..[2333,80032+20])
                        Ppat_construct "Vars" (typing/parmatch.ml[2333,80032+13]..[2333,80032+17])
                        Some
                          []
                          pattern (typing/parmatch.ml[2333,80032+18]..[2333,80032+20])
                            Ppat_var "s2" (typing/parmatch.ml[2333,80032+18]..[2333,80032+20])
                    ]
                  expression (typing/parmatch.ml[2333,80032+24]..[2333,80032+52])
                    Pexp_construct "Vars" (typing/parmatch.ml[2333,80032+24]..[2333,80032+28])
                    Some
                      expression (typing/parmatch.ml[2333,80032+29]..[2333,80032+52])
                        Pexp_apply
                        expression (typing/parmatch.ml[2333,80032+30]..[2333,80032+45])
                          Pexp_ident "Ident.Set.inter" (typing/parmatch.ml[2333,80032+30]..[2333,80032+45])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2333,80032+46]..[2333,80032+48])
                              Pexp_ident "s1" (typing/parmatch.ml[2333,80032+46]..[2333,80032+48])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2333,80032+49]..[2333,80032+51])
                              Pexp_ident "s2" (typing/parmatch.ml[2333,80032+49]..[2333,80032+51])
                        ]
              ]
    ]
  structure_item (typing/parmatch.ml[2335,80086+0]..[2337,80139+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[2335,80086+4]..[2335,80086+10])
          Ppat_var "reduce" (typing/parmatch.ml[2335,80086+4]..[2335,80086+10])
        expression (typing/parmatch.ml[2335,80086+11]..[2337,80139+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[2335,80086+11]..[2335,80086+12])
            Ppat_var "f" (typing/parmatch.ml[2335,80086+11]..[2335,80086+12])
          expression (typing/parmatch.ml[2335,80086+15]..[2337,80139+32])
            Pexp_function
            [
              <case>
                pattern (typing/parmatch.ml[2336,80110+2]..[2336,80110+4])
                  Ppat_construct "[]" (typing/parmatch.ml[2336,80110+2]..[2336,80110+4])
                  None
                expression (typing/parmatch.ml[2336,80110+8]..[2336,80110+28])
                  Pexp_apply
                  expression (typing/parmatch.ml[2336,80110+8]..[2336,80110+19])
                    Pexp_ident "invalid_arg" (typing/parmatch.ml[2336,80110+8]..[2336,80110+19])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2336,80110+20]..[2336,80110+28])
                        Pexp_constant PConst_string("reduce",(typing/parmatch.ml[2336,80110+21]..[2336,80110+27]),None)
                  ]
              <case>
                pattern (typing/parmatch.ml[2337,80139+2]..[2337,80139+7])
                  Ppat_construct "::" (typing/parmatch.ml[2337,80139+3]..[2337,80139+5])
                  Some
                    []
                    pattern (typing/parmatch.ml[2337,80139+2]..[2337,80139+7]) ghost
                      Ppat_tuple
                      [
                        pattern (typing/parmatch.ml[2337,80139+2]..[2337,80139+3])
                          Ppat_var "x" (typing/parmatch.ml[2337,80139+2]..[2337,80139+3])
                        pattern (typing/parmatch.ml[2337,80139+5]..[2337,80139+7])
                          Ppat_var "xs" (typing/parmatch.ml[2337,80139+5]..[2337,80139+7])
                      ]
                expression (typing/parmatch.ml[2337,80139+11]..[2337,80139+32])
                  Pexp_apply
                  expression (typing/parmatch.ml[2337,80139+11]..[2337,80139+25])
                    Pexp_ident "List.fold_left" (typing/parmatch.ml[2337,80139+11]..[2337,80139+25])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2337,80139+26]..[2337,80139+27])
                        Pexp_ident "f" (typing/parmatch.ml[2337,80139+26]..[2337,80139+27])
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2337,80139+28]..[2337,80139+29])
                        Pexp_ident "x" (typing/parmatch.ml[2337,80139+28]..[2337,80139+29])
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2337,80139+30]..[2337,80139+32])
                        Pexp_ident "xs" (typing/parmatch.ml[2337,80139+30]..[2337,80139+32])
                  ]
            ]
    ]
  structure_item (typing/parmatch.ml[2339,80173+0]..[2396,82677+9])
    Pstr_value Rec
    [
      <def>
        pattern (typing/parmatch.ml[2339,80173+8]..[2339,80173+26])
          Ppat_var "matrix_stable_vars" (typing/parmatch.ml[2339,80173+8]..[2339,80173+26])
        expression (typing/parmatch.ml[2339,80173+27]..[2396,82677+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[2339,80173+27]..[2339,80173+28])
            Ppat_var "m" (typing/parmatch.ml[2339,80173+27]..[2339,80173+28])
          expression (typing/parmatch.ml[2339,80173+31]..[2396,82677+9])
            Pexp_match
            expression (typing/parmatch.ml[2339,80173+37]..[2339,80173+38])
              Pexp_ident "m" (typing/parmatch.ml[2339,80173+37]..[2339,80173+38])
            [
              <case>
                pattern (typing/parmatch.ml[2340,80217+4]..[2340,80217+6])
                  Ppat_construct "[]" (typing/parmatch.ml[2340,80217+4]..[2340,80217+6])
                  None
                expression (typing/parmatch.ml[2340,80217+10]..[2340,80217+13])
                  Pexp_construct "All" (typing/parmatch.ml[2340,80217+10]..[2340,80217+13])
                  None
              <case>
                pattern (typing/parmatch.ml[2341,80231+4]..[2341,80231+63])
                  Ppat_alias "empty_rows" (typing/parmatch.ml[2341,80231+53]..[2341,80231+63])
                  pattern (typing/parmatch.ml[2341,80231+4]..[2341,80231+49])
                    Ppat_construct "::" (typing/parmatch.ml[2341,80231+44]..[2341,80231+46])
                    Some
                      []
                      pattern (typing/parmatch.ml[2341,80231+5]..[2341,80231+48]) ghost
                        Ppat_tuple
                        [
                          pattern (typing/parmatch.ml[2341,80231+5]..[2341,80231+43])
                            Ppat_or
                            pattern (typing/parmatch.ml[2341,80231+6]..[2341,80231+28])
                              Ppat_construct "Positive" (typing/parmatch.ml[2341,80231+6]..[2341,80231+14])
                              Some
                                []
                                pattern (typing/parmatch.ml[2341,80231+15]..[2341,80231+28])
                                  Ppat_record Open
                                  [
                                    "row" (typing/parmatch.ml[2341,80231+16]..[2341,80231+19])
                                      pattern (typing/parmatch.ml[2341,80231+22]..[2341,80231+24])
                                        Ppat_construct "[]" (typing/parmatch.ml[2341,80231+22]..[2341,80231+24])
                                        None
                                  ]
                            pattern (typing/parmatch.ml[2341,80231+31]..[2341,80231+42])
                              Ppat_construct "Negative" (typing/parmatch.ml[2341,80231+31]..[2341,80231+39])
                              Some
                                []
                                pattern (typing/parmatch.ml[2341,80231+40]..[2341,80231+42])
                                  Ppat_construct "[]" (typing/parmatch.ml[2341,80231+40]..[2341,80231+42])
                                  None
                          pattern (typing/parmatch.ml[2341,80231+47]..[2341,80231+48])
                            Ppat_any
                        ]
                expression (typing/parmatch.ml[2342,80298+6]..[2361,81126+9])
                  Pexp_letexception
                  extension_constructor (typing/parmatch.ml[2342,80298+20]..[2342,80298+38])
                    pext_name = "Negative_empty_row"
                    pext_kind =
                      Pext_decl
                        []
                        None
                  expression (typing/parmatch.ml[2344,80419+6]..[2361,81126+9])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[2344,80419+10]..[2344,80419+21])
                          Ppat_var "get_varsets" (typing/parmatch.ml[2344,80419+10]..[2344,80419+21])
                        expression (typing/parmatch.ml[2344,80419+24]..[2352,80715+21])
                          Pexp_function
                          [
                            <case>
                              pattern (typing/parmatch.ml[2345,80452+10]..[2345,80452+20])
                                Ppat_construct "Negative" (typing/parmatch.ml[2345,80452+10]..[2345,80452+18])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[2345,80452+19]..[2345,80452+20])
                                    Ppat_var "n" (typing/parmatch.ml[2345,80452+19]..[2345,80452+20])
                              expression (typing/parmatch.ml[2348,80592+12]..[2349,80621+36])
                                Pexp_sequence
                                expression (typing/parmatch.ml[2348,80592+12]..[2348,80592+27])
                                  Pexp_assert
                                  expression (typing/parmatch.ml[2348,80592+19]..[2348,80592+27])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[2348,80592+22]..[2348,80592+23])
                                      Pexp_ident "=" (typing/parmatch.ml[2348,80592+22]..[2348,80592+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[2348,80592+20]..[2348,80592+21])
                                          Pexp_ident "n" (typing/parmatch.ml[2348,80592+20]..[2348,80592+21])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[2348,80592+24]..[2348,80592+26])
                                          Pexp_construct "[]" (typing/parmatch.ml[2348,80592+24]..[2348,80592+26])
                                          None
                                    ]
                                expression (typing/parmatch.ml[2349,80621+12]..[2349,80621+36])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[2349,80621+12]..[2349,80621+17])
                                    Pexp_ident "raise" (typing/parmatch.ml[2349,80621+12]..[2349,80621+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[2349,80621+18]..[2349,80621+36])
                                        Pexp_construct "Negative_empty_row" (typing/parmatch.ml[2349,80621+18]..[2349,80621+36])
                                        None
                                  ]
                            <case>
                              pattern (typing/parmatch.ml[2350,80658+10]..[2350,80658+20])
                                Ppat_construct "Positive" (typing/parmatch.ml[2350,80658+10]..[2350,80658+18])
                                Some
                                  []
                                  pattern (typing/parmatch.ml[2350,80658+19]..[2350,80658+20])
                                    Ppat_var "p" (typing/parmatch.ml[2350,80658+19]..[2350,80658+20])
                              expression (typing/parmatch.ml[2351,80682+12]..[2352,80715+21])
                                Pexp_sequence
                                expression (typing/parmatch.ml[2351,80682+12]..[2351,80682+31])
                                  Pexp_assert
                                  expression (typing/parmatch.ml[2351,80682+19]..[2351,80682+31])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[2351,80682+26]..[2351,80682+27])
                                      Pexp_ident "=" (typing/parmatch.ml[2351,80682+26]..[2351,80682+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[2351,80682+20]..[2351,80682+25])
                                          Pexp_field
                                          expression (typing/parmatch.ml[2351,80682+20]..[2351,80682+21])
                                            Pexp_ident "p" (typing/parmatch.ml[2351,80682+20]..[2351,80682+21])
                                          "row" (typing/parmatch.ml[2351,80682+22]..[2351,80682+25])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[2351,80682+28]..[2351,80682+30])
                                          Pexp_construct "[]" (typing/parmatch.ml[2351,80682+28]..[2351,80682+30])
                                          None
                                    ]
                                expression (typing/parmatch.ml[2352,80715+12]..[2352,80715+21])
                                  Pexp_field
                                  expression (typing/parmatch.ml[2352,80715+12]..[2352,80715+13])
                                    Pexp_ident "p" (typing/parmatch.ml[2352,80715+12]..[2352,80715+13])
                                  "varsets" (typing/parmatch.ml[2352,80715+14]..[2352,80715+21])
                          ]
                    ]
                    expression (typing/parmatch.ml[2353,80740+6]..[2361,81126+9])
                      Pexp_match
                      expression (typing/parmatch.ml[2353,80740+18]..[2353,80740+49])
                        Pexp_apply
                        expression (typing/parmatch.ml[2353,80740+18]..[2353,80740+26])
                          Pexp_ident "List.map" (typing/parmatch.ml[2353,80740+18]..[2353,80740+26])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2353,80740+27]..[2353,80740+38])
                              Pexp_ident "get_varsets" (typing/parmatch.ml[2353,80740+27]..[2353,80740+38])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2353,80740+39]..[2353,80740+49])
                              Pexp_ident "empty_rows" (typing/parmatch.ml[2353,80740+39]..[2353,80740+49])
                        ]
                      [
                        <case>
                          pattern (typing/parmatch.ml[2354,80795+8]..[2354,80795+36])
                            Ppat_exception
                            pattern (typing/parmatch.ml[2354,80795+18]..[2354,80795+36])
                              Ppat_construct "Negative_empty_row" (typing/parmatch.ml[2354,80795+18]..[2354,80795+36])
                              None
                          expression (typing/parmatch.ml[2354,80795+40]..[2354,80795+43])
                            Pexp_construct "All" (typing/parmatch.ml[2354,80795+40]..[2354,80795+43])
                            None
                        <case>
                          pattern (typing/parmatch.ml[2355,80839+8]..[2355,80839+20])
                            Ppat_var "rows_varsets" (typing/parmatch.ml[2355,80839+8]..[2355,80839+20])
                          expression (typing/parmatch.ml[2356,80863+10]..[2360,81046+79])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (typing/parmatch.ml[2356,80863+14]..[2356,80863+32])
                                  Ppat_var "stables_in_varsets" (typing/parmatch.ml[2356,80863+14]..[2356,80863+32])
                                expression (typing/parmatch.ml[2357,80898+12]..[2357,80898+59])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[2357,80898+12]..[2357,80898+18])
                                    Pexp_ident "reduce" (typing/parmatch.ml[2357,80898+12]..[2357,80898+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[2357,80898+19]..[2357,80898+46])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[2357,80898+20]..[2357,80898+29])
                                          Pexp_ident "List.map2" (typing/parmatch.ml[2357,80898+20]..[2357,80898+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[2357,80898+30]..[2357,80898+45])
                                              Pexp_ident "Ident.Set.inter" (typing/parmatch.ml[2357,80898+30]..[2357,80898+45])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[2357,80898+47]..[2357,80898+59])
                                        Pexp_ident "rows_varsets" (typing/parmatch.ml[2357,80898+47]..[2357,80898+59])
                                  ]
                            ]
                            expression (typing/parmatch.ml[2359,81031+10]..[2360,81046+79])
                              Pexp_construct "Vars" (typing/parmatch.ml[2359,81031+10]..[2359,81031+14])
                              Some
                                expression (typing/parmatch.ml[2360,81046+12]..[2360,81046+79])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[2360,81046+13]..[2360,81046+27])
                                    Pexp_ident "List.fold_left" (typing/parmatch.ml[2360,81046+13]..[2360,81046+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[2360,81046+28]..[2360,81046+43])
                                        Pexp_ident "Ident.Set.union" (typing/parmatch.ml[2360,81046+28]..[2360,81046+43])
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[2360,81046+44]..[2360,81046+59])
                                        Pexp_ident "Ident.Set.empty" (typing/parmatch.ml[2360,81046+44]..[2360,81046+59])
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[2360,81046+60]..[2360,81046+78])
                                        Pexp_ident "stables_in_varsets" (typing/parmatch.ml[2360,81046+60]..[2360,81046+78])
                                  ]
                      ]
              <case>
                pattern (typing/parmatch.ml[2362,81136+4]..[2362,81136+5])
                  Ppat_var "m" (typing/parmatch.ml[2362,81136+4]..[2362,81136+5])
                expression (typing/parmatch.ml[2363,81145+6]..[2396,82677+9])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/parmatch.ml[2363,81145+10]..[2363,81145+21])
                        Ppat_var "is_negative" (typing/parmatch.ml[2363,81145+10]..[2363,81145+21])
                      expression (typing/parmatch.ml[2363,81145+24]..[2365,81207+29])
                        Pexp_function
                        [
                          <case>
                            pattern (typing/parmatch.ml[2364,81178+10]..[2364,81178+20])
                              Ppat_construct "Negative" (typing/parmatch.ml[2364,81178+10]..[2364,81178+18])
                              Some
                                []
                                pattern (typing/parmatch.ml[2364,81178+19]..[2364,81178+20])
                                  Ppat_any
                            expression (typing/parmatch.ml[2364,81178+24]..[2364,81178+28])
                              Pexp_construct "true" (typing/parmatch.ml[2364,81178+24]..[2364,81178+28])
                              None
                          <case>
                            pattern (typing/parmatch.ml[2365,81207+10]..[2365,81207+20])
                              Ppat_construct "Positive" (typing/parmatch.ml[2365,81207+10]..[2365,81207+18])
                              Some
                                []
                                pattern (typing/parmatch.ml[2365,81207+19]..[2365,81207+20])
                                  Ppat_any
                            expression (typing/parmatch.ml[2365,81207+24]..[2365,81207+29])
                              Pexp_construct "false" (typing/parmatch.ml[2365,81207+24]..[2365,81207+29])
                              None
                        ]
                  ]
                  expression (typing/parmatch.ml[2366,81240+6]..[2396,82677+9])
                    Pexp_ifthenelse
                    expression (typing/parmatch.ml[2366,81240+9]..[2366,81240+35])
                      Pexp_apply
                      expression (typing/parmatch.ml[2366,81240+9]..[2366,81240+21])
                        Pexp_ident "List.for_all" (typing/parmatch.ml[2366,81240+9]..[2366,81240+21])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[2366,81240+22]..[2366,81240+33])
                            Pexp_ident "is_negative" (typing/parmatch.ml[2366,81240+22]..[2366,81240+33])
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[2366,81240+34]..[2366,81240+35])
                            Pexp_ident "m" (typing/parmatch.ml[2366,81240+34]..[2366,81240+35])
                      ]
                    expression (typing/parmatch.ml[2371,81531+8]..[2371,81531+11])
                      Pexp_construct "All" (typing/parmatch.ml[2371,81531+8]..[2371,81531+11])
                      None
                    Some
                      expression (typing/parmatch.ml[2372,81543+11]..[2396,82677+9])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (typing/parmatch.ml[2373,81560+12]..[2373,81560+13])
                              Ppat_var "m" (typing/parmatch.ml[2373,81560+12]..[2373,81560+13])
                            expression (typing/parmatch.ml[2373,81560+16]..[2373,81560+40])
                              Pexp_apply
                              expression (typing/parmatch.ml[2373,81560+16]..[2373,81560+38])
                                Pexp_ident "simplify_first_amb_col" (typing/parmatch.ml[2373,81560+16]..[2373,81560+38])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[2373,81560+39]..[2373,81560+40])
                                    Pexp_ident "m" (typing/parmatch.ml[2373,81560+39]..[2373,81560+40])
                              ]
                        ]
                        expression (typing/parmatch.ml[2374,81604+8]..[2395,82665+11])
                          Pexp_ifthenelse
                          expression (typing/parmatch.ml[2374,81604+11]..[2374,81604+46])
                            Pexp_apply
                            expression (typing/parmatch.ml[2374,81604+11]..[2374,81604+14])
                              Pexp_ident "not" (typing/parmatch.ml[2374,81604+11]..[2374,81604+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/parmatch.ml[2374,81604+15]..[2374,81604+46])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[2374,81604+16]..[2374,81604+28])
                                    Pexp_ident "all_coherent" (typing/parmatch.ml[2374,81604+16]..[2374,81604+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[2374,81604+29]..[2374,81604+45])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[2374,81604+30]..[2374,81604+42])
                                          Pexp_ident "first_column" (typing/parmatch.ml[2374,81604+30]..[2374,81604+42])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[2374,81604+43]..[2374,81604+44])
                                              Pexp_ident "m" (typing/parmatch.ml[2374,81604+43]..[2374,81604+44])
                                        ]
                                  ]
                            ]
                          expression (typing/parmatch.ml[2375,81656+10]..[2375,81656+13])
                            Pexp_construct "All" (typing/parmatch.ml[2375,81656+10]..[2375,81656+13])
                            None
                          Some
                            expression (typing/parmatch.ml[2376,81670+13]..[2395,82665+11])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (typing/parmatch.ml[2381,81939+14]..[2381,81939+25])
                                    Ppat_var "submatrices" (typing/parmatch.ml[2381,81939+14]..[2381,81939+25])
                                  expression (typing/parmatch.ml[2382,81967+12]..[2391,82425+39])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (typing/parmatch.ml[2382,81967+16]..[2382,81967+26])
                                          Ppat_var "extend_row" (typing/parmatch.ml[2382,81967+16]..[2382,81967+26])
                                        expression (typing/parmatch.ml[2382,81967+27]..[2384,82066+71]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/parmatch.ml[2382,81967+27]..[2382,81967+34])
                                            Ppat_var "columns" (typing/parmatch.ml[2382,81967+27]..[2382,81967+34])
                                          expression (typing/parmatch.ml[2382,81967+37]..[2384,82066+71])
                                            Pexp_function
                                            [
                                              <case>
                                                pattern (typing/parmatch.ml[2383,82013+16]..[2383,82013+26])
                                                  Ppat_construct "Negative" (typing/parmatch.ml[2383,82013+16]..[2383,82013+24])
                                                  Some
                                                    []
                                                    pattern (typing/parmatch.ml[2383,82013+25]..[2383,82013+26])
                                                      Ppat_var "r" (typing/parmatch.ml[2383,82013+25]..[2383,82013+26])
                                                expression (typing/parmatch.ml[2383,82013+30]..[2383,82013+52])
                                                  Pexp_construct "Negative" (typing/parmatch.ml[2383,82013+30]..[2383,82013+38])
                                                  Some
                                                    expression (typing/parmatch.ml[2383,82013+39]..[2383,82013+52])
                                                      Pexp_apply
                                                      expression (typing/parmatch.ml[2383,82013+48]..[2383,82013+49])
                                                        Pexp_ident "@" (typing/parmatch.ml[2383,82013+48]..[2383,82013+49])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[2383,82013+40]..[2383,82013+47])
                                                            Pexp_ident "columns" (typing/parmatch.ml[2383,82013+40]..[2383,82013+47])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[2383,82013+50]..[2383,82013+51])
                                                            Pexp_ident "r" (typing/parmatch.ml[2383,82013+50]..[2383,82013+51])
                                                      ]
                                              <case>
                                                pattern (typing/parmatch.ml[2384,82066+16]..[2384,82066+26])
                                                  Ppat_construct "Positive" (typing/parmatch.ml[2384,82066+16]..[2384,82066+24])
                                                  Some
                                                    []
                                                    pattern (typing/parmatch.ml[2384,82066+25]..[2384,82066+26])
                                                      Ppat_var "r" (typing/parmatch.ml[2384,82066+25]..[2384,82066+26])
                                                expression (typing/parmatch.ml[2384,82066+30]..[2384,82066+71])
                                                  Pexp_construct "Positive" (typing/parmatch.ml[2384,82066+30]..[2384,82066+38])
                                                  Some
                                                    expression (typing/parmatch.ml[2384,82066+39]..[2384,82066+71])
                                                      Pexp_record
                                                      [
                                                        "row" (typing/parmatch.ml[2384,82066+48]..[2384,82066+51])
                                                          expression (typing/parmatch.ml[2384,82066+54]..[2384,82066+69])
                                                            Pexp_apply
                                                            expression (typing/parmatch.ml[2384,82066+62]..[2384,82066+63])
                                                              Pexp_ident "@" (typing/parmatch.ml[2384,82066+62]..[2384,82066+63])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[2384,82066+54]..[2384,82066+61])
                                                                  Pexp_ident "columns" (typing/parmatch.ml[2384,82066+54]..[2384,82066+61])
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[2384,82066+64]..[2384,82066+69])
                                                                  Pexp_field
                                                                  expression (typing/parmatch.ml[2384,82066+64]..[2384,82066+65])
                                                                    Pexp_ident "r" (typing/parmatch.ml[2384,82066+64]..[2384,82066+65])
                                                                  "row" (typing/parmatch.ml[2384,82066+66]..[2384,82066+69])
                                                            ]
                                                      ]
                                                      Some
                                                        expression (typing/parmatch.ml[2384,82066+41]..[2384,82066+42])
                                                          Pexp_ident "r" (typing/parmatch.ml[2384,82066+41]..[2384,82066+42])
                                            ]
                                    ]
                                    expression (typing/parmatch.ml[2385,82141+12]..[2391,82425+39])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (typing/parmatch.ml[2385,82141+16]..[2385,82141+18])
                                            Ppat_var "q0" (typing/parmatch.ml[2385,82141+16]..[2385,82141+18])
                                          expression (typing/parmatch.ml[2385,82141+21]..[2385,82141+54])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[2385,82141+21]..[2385,82141+30])
                                              Pexp_ident "discr_pat" (typing/parmatch.ml[2385,82141+21]..[2385,82141+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2385,82141+31]..[2385,82141+52])
                                                  Pexp_ident "Patterns.Simple.omega" (typing/parmatch.ml[2385,82141+31]..[2385,82141+52])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2385,82141+53]..[2385,82141+54])
                                                  Pexp_ident "m" (typing/parmatch.ml[2385,82141+53]..[2385,82141+54])
                                            ]
                                      ]
                                      expression (typing/parmatch.ml[2386,82199+12]..[2391,82425+39])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (typing/parmatch.ml[2386,82199+16]..[2386,82199+36])
                                              Ppat_record Closed
                                              [
                                                "default" (typing/parmatch.ml[2386,82199+18]..[2386,82199+25]) ghost
                                                  pattern (typing/parmatch.ml[2386,82199+18]..[2386,82199+25])
                                                    Ppat_var "default" (typing/parmatch.ml[2386,82199+18]..[2386,82199+25])
                                                "constrs" (typing/parmatch.ml[2386,82199+27]..[2386,82199+34]) ghost
                                                  pattern (typing/parmatch.ml[2386,82199+27]..[2386,82199+34])
                                                    Ppat_var "constrs" (typing/parmatch.ml[2386,82199+27]..[2386,82199+34])
                                              ]
                                            expression (typing/parmatch.ml[2387,82238+14]..[2387,82238+60])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[2387,82238+14]..[2387,82238+43])
                                                Pexp_ident "build_specialized_submatrices" (typing/parmatch.ml[2387,82238+14]..[2387,82238+43])
                                              [
                                                <arg>
                                                Labelled "extend_row"
                                                  expression (typing/parmatch.ml[2387,82238+45]..[2387,82238+55])
                                                    Pexp_ident "extend_row" (typing/parmatch.ml[2387,82238+45]..[2387,82238+55])
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[2387,82238+56]..[2387,82238+58])
                                                    Pexp_ident "q0" (typing/parmatch.ml[2387,82238+56]..[2387,82238+58])
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[2387,82238+59]..[2387,82238+60])
                                                    Pexp_ident "m" (typing/parmatch.ml[2387,82238+59]..[2387,82238+60])
                                              ]
                                        ]
                                        expression (typing/parmatch.ml[2388,82302+12]..[2391,82425+39])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (typing/parmatch.ml[2388,82302+16]..[2388,82302+27])
                                                Ppat_var "non_default" (typing/parmatch.ml[2388,82302+16]..[2388,82302+27])
                                              expression (typing/parmatch.ml[2388,82302+30]..[2388,82302+50])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[2388,82302+30]..[2388,82302+38])
                                                  Pexp_ident "List.map" (typing/parmatch.ml[2388,82302+30]..[2388,82302+38])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[2388,82302+39]..[2388,82302+42])
                                                      Pexp_ident "snd" (typing/parmatch.ml[2388,82302+39]..[2388,82302+42])
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[2388,82302+43]..[2388,82302+50])
                                                      Pexp_ident "constrs" (typing/parmatch.ml[2388,82302+43]..[2388,82302+50])
                                                ]
                                          ]
                                          expression (typing/parmatch.ml[2389,82356+12]..[2391,82425+39])
                                            Pexp_ifthenelse
                                            expression (typing/parmatch.ml[2389,82356+15]..[2389,82356+39])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[2389,82356+15]..[2389,82356+25])
                                                Pexp_ident "full_match" (typing/parmatch.ml[2389,82356+15]..[2389,82356+25])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[2389,82356+26]..[2389,82356+31])
                                                    Pexp_construct "false" (typing/parmatch.ml[2389,82356+26]..[2389,82356+31])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[2389,82356+32]..[2389,82356+39])
                                                    Pexp_ident "constrs" (typing/parmatch.ml[2389,82356+32]..[2389,82356+39])
                                              ]
                                            expression (typing/parmatch.ml[2390,82396+17]..[2390,82396+28])
                                              Pexp_ident "non_default" (typing/parmatch.ml[2390,82396+17]..[2390,82396+28])
                                            Some
                                              expression (typing/parmatch.ml[2391,82425+17]..[2391,82425+39])
                                                Pexp_construct "::" (typing/parmatch.ml[2391,82425+25]..[2391,82425+27])
                                                Some
                                                  expression (typing/parmatch.ml[2391,82425+17]..[2391,82425+39]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (typing/parmatch.ml[2391,82425+17]..[2391,82425+24])
                                                        Pexp_ident "default" (typing/parmatch.ml[2391,82425+17]..[2391,82425+24])
                                                      expression (typing/parmatch.ml[2391,82425+28]..[2391,82425+39])
                                                        Pexp_ident "non_default" (typing/parmatch.ml[2391,82425+28]..[2391,82425+39])
                                                    ]
                              ]
                              expression (typing/parmatch.ml[2393,82536+10]..[2394,82609+55])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (typing/parmatch.ml[2393,82536+14]..[2393,82536+27])
                                      Ppat_var "submat_stable" (typing/parmatch.ml[2393,82536+14]..[2393,82536+27])
                                    expression (typing/parmatch.ml[2393,82536+30]..[2393,82536+69])
                                      Pexp_apply
                                      expression (typing/parmatch.ml[2393,82536+30]..[2393,82536+38])
                                        Pexp_ident "List.map" (typing/parmatch.ml[2393,82536+30]..[2393,82536+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[2393,82536+39]..[2393,82536+57])
                                            Pexp_ident "matrix_stable_vars" (typing/parmatch.ml[2393,82536+39]..[2393,82536+57])
                                        <arg>
                                        Nolabel
                                          expression (typing/parmatch.ml[2393,82536+58]..[2393,82536+69])
                                            Pexp_ident "submatrices" (typing/parmatch.ml[2393,82536+58]..[2393,82536+69])
                                      ]
                                ]
                                expression (typing/parmatch.ml[2394,82609+10]..[2394,82609+55])
                                  Pexp_apply
                                  expression (typing/parmatch.ml[2394,82609+10]..[2394,82609+24])
                                    Pexp_ident "List.fold_left" (typing/parmatch.ml[2394,82609+10]..[2394,82609+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[2394,82609+25]..[2394,82609+37])
                                        Pexp_ident "stable_inter" (typing/parmatch.ml[2394,82609+25]..[2394,82609+37])
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[2394,82609+38]..[2394,82609+41])
                                        Pexp_construct "All" (typing/parmatch.ml[2394,82609+38]..[2394,82609+41])
                                        None
                                    <arg>
                                    Nolabel
                                      expression (typing/parmatch.ml[2394,82609+42]..[2394,82609+55])
                                        Pexp_ident "submat_stable" (typing/parmatch.ml[2394,82609+42]..[2394,82609+55])
                                  ]
            ]
    ]
  structure_item (typing/parmatch.ml[2398,82688+0]..[2401,82789+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[2398,82688+4]..[2398,82688+23])
          Ppat_var "pattern_stable_vars" (typing/parmatch.ml[2398,82688+4]..[2398,82688+23])
        expression (typing/parmatch.ml[2398,82688+24]..[2401,82789+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[2398,82688+24]..[2398,82688+26])
            Ppat_var "ns" (typing/parmatch.ml[2398,82688+24]..[2398,82688+26])
          expression (typing/parmatch.ml[2398,82688+27]..[2401,82789+47]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/parmatch.ml[2398,82688+27]..[2398,82688+28])
              Ppat_var "p" (typing/parmatch.ml[2398,82688+27]..[2398,82688+28])
            expression (typing/parmatch.ml[2399,82719+2]..[2401,82789+47])
              Pexp_apply
              expression (typing/parmatch.ml[2399,82719+2]..[2399,82719+20])
                Pexp_ident "matrix_stable_vars" (typing/parmatch.ml[2399,82719+2]..[2399,82719+20])
              [
                <arg>
                Nolabel
                  expression (typing/parmatch.ml[2400,82740+4]..[2401,82789+47])
                    Pexp_apply
                    expression (typing/parmatch.ml[2400,82740+5]..[2400,82740+19])
                      Pexp_ident "List.fold_left" (typing/parmatch.ml[2400,82740+5]..[2400,82740+19])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[2400,82740+20]..[2400,82740+48])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/parmatch.ml[2400,82740+25]..[2400,82740+26])
                            Ppat_var "m" (typing/parmatch.ml[2400,82740+25]..[2400,82740+26])
                          expression (typing/parmatch.ml[2400,82740+27]..[2400,82740+47]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/parmatch.ml[2400,82740+27]..[2400,82740+28])
                              Ppat_var "n" (typing/parmatch.ml[2400,82740+27]..[2400,82740+28])
                            expression (typing/parmatch.ml[2400,82740+32]..[2400,82740+47])
                              Pexp_construct "::" (typing/parmatch.ml[2400,82740+43]..[2400,82740+45])
                              Some
                                expression (typing/parmatch.ml[2400,82740+32]..[2400,82740+47]) ghost
                                  Pexp_tuple
                                  [
                                    expression (typing/parmatch.ml[2400,82740+32]..[2400,82740+42])
                                      Pexp_construct "Negative" (typing/parmatch.ml[2400,82740+32]..[2400,82740+40])
                                      Some
                                        expression (typing/parmatch.ml[2400,82740+41]..[2400,82740+42])
                                          Pexp_ident "n" (typing/parmatch.ml[2400,82740+41]..[2400,82740+42])
                                    expression (typing/parmatch.ml[2400,82740+46]..[2400,82740+47])
                                      Pexp_ident "m" (typing/parmatch.ml[2400,82740+46]..[2400,82740+47])
                                  ]
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[2401,82789+7]..[2401,82789+43])
                          Pexp_construct "::" (typing/parmatch.ml[2401,82789+8]..[2401,82789+43]) ghost
                          Some
                            expression (typing/parmatch.ml[2401,82789+8]..[2401,82789+43]) ghost
                              Pexp_tuple
                              [
                                expression (typing/parmatch.ml[2401,82789+8]..[2401,82789+42])
                                  Pexp_construct "Positive" (typing/parmatch.ml[2401,82789+8]..[2401,82789+16])
                                  Some
                                    expression (typing/parmatch.ml[2401,82789+17]..[2401,82789+42])
                                      Pexp_record
                                      [
                                        "varsets" (typing/parmatch.ml[2401,82789+18]..[2401,82789+25])
                                          expression (typing/parmatch.ml[2401,82789+28]..[2401,82789+30])
                                            Pexp_construct "[]" (typing/parmatch.ml[2401,82789+28]..[2401,82789+30])
                                            None
                                        "row" (typing/parmatch.ml[2401,82789+32]..[2401,82789+35])
                                          expression (typing/parmatch.ml[2401,82789+38]..[2401,82789+41])
                                            Pexp_construct "::" (typing/parmatch.ml[2401,82789+39]..[2401,82789+41]) ghost
                                            Some
                                              expression (typing/parmatch.ml[2401,82789+39]..[2401,82789+41]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (typing/parmatch.ml[2401,82789+39]..[2401,82789+40])
                                                    Pexp_ident "p" (typing/parmatch.ml[2401,82789+39]..[2401,82789+40])
                                                  expression (typing/parmatch.ml[2401,82789+40]..[2401,82789+41]) ghost
                                                    Pexp_construct "[]" (typing/parmatch.ml[2401,82789+40]..[2401,82789+41]) ghost
                                                    None
                                                ]
                                      ]
                                      None
                                expression (typing/parmatch.ml[2401,82789+42]..[2401,82789+43]) ghost
                                  Pexp_construct "[]" (typing/parmatch.ml[2401,82789+42]..[2401,82789+43]) ghost
                                  None
                              ]
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[2401,82789+44]..[2401,82789+46])
                          Pexp_ident "ns" (typing/parmatch.ml[2401,82789+44]..[2401,82789+46])
                    ]
              ]
    ]
  structure_item (typing/parmatch.ml[2421,83376+0]..[2454,84575+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[2421,83376+4]..[2421,83376+18])
          Ppat_var "all_rhs_idents" (typing/parmatch.ml[2421,83376+4]..[2421,83376+18])
        expression (typing/parmatch.ml[2421,83376+19]..[2454,84575+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/parmatch.ml[2421,83376+19]..[2421,83376+22])
            Ppat_var "exp" (typing/parmatch.ml[2421,83376+19]..[2421,83376+22])
          expression (typing/parmatch.ml[2422,83401+2]..[2454,84575+6])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/parmatch.ml[2422,83401+6]..[2422,83401+9])
                  Ppat_var "ids" (typing/parmatch.ml[2422,83401+6]..[2422,83401+9])
                expression (typing/parmatch.ml[2422,83401+12]..[2422,83401+31])
                  Pexp_apply
                  expression (typing/parmatch.ml[2422,83401+12]..[2422,83401+15])
                    Pexp_ident "ref" (typing/parmatch.ml[2422,83401+12]..[2422,83401+15])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2422,83401+16]..[2422,83401+31])
                        Pexp_ident "Ident.Set.empty" (typing/parmatch.ml[2422,83401+16]..[2422,83401+31])
                  ]
            ]
            expression (typing/parmatch.ml[2425,83532+2]..[2454,84575+6])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/parmatch.ml[2425,83532+6]..[2425,83532+15])
                    Ppat_var "is_unpack" (typing/parmatch.ml[2425,83532+6]..[2425,83532+15])
                  expression (typing/parmatch.ml[2425,83532+16]..[2428,83638+26]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/parmatch.ml[2425,83532+16]..[2425,83532+19])
                      Ppat_var "exp" (typing/parmatch.ml[2425,83532+16]..[2425,83532+19])
                    expression (typing/parmatch.ml[2426,83554+6]..[2428,83638+26])
                      Pexp_apply
                      expression (typing/parmatch.ml[2426,83554+6]..[2426,83554+17])
                        Pexp_ident "List.exists" (typing/parmatch.ml[2426,83554+6]..[2426,83554+17])
                      [
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[2427,83572+8]..[2427,83572+65])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/parmatch.ml[2427,83572+13]..[2427,83572+17])
                              Ppat_var "attr" (typing/parmatch.ml[2427,83572+13]..[2427,83572+17])
                            expression (typing/parmatch.ml[2427,83572+21]..[2427,83572+64])
                              Pexp_apply
                              expression (typing/parmatch.ml[2427,83572+50]..[2427,83572+51])
                                Pexp_ident "=" (typing/parmatch.ml[2427,83572+50]..[2427,83572+51])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[2427,83572+21]..[2427,83572+49])
                                    Pexp_field
                                    expression (typing/parmatch.ml[2427,83572+21]..[2427,83572+45])
                                      Pexp_field
                                      expression (typing/parmatch.ml[2427,83572+21]..[2427,83572+25])
                                        Pexp_ident "attr" (typing/parmatch.ml[2427,83572+21]..[2427,83572+25])
                                      "Parsetree.attr_name" (typing/parmatch.ml[2427,83572+26]..[2427,83572+45])
                                    "txt" (typing/parmatch.ml[2427,83572+46]..[2427,83572+49])
                                <arg>
                                Nolabel
                                  expression (typing/parmatch.ml[2427,83572+52]..[2427,83572+64])
                                    Pexp_constant PConst_string("#modulepat",(typing/parmatch.ml[2427,83572+53]..[2427,83572+63]),None)
                              ]
                        <arg>
                        Nolabel
                          expression (typing/parmatch.ml[2428,83638+8]..[2428,83638+26])
                            Pexp_field
                            expression (typing/parmatch.ml[2428,83638+8]..[2428,83638+11])
                              Pexp_ident "exp" (typing/parmatch.ml[2428,83638+8]..[2428,83638+11])
                            "exp_attributes" (typing/parmatch.ml[2428,83638+12]..[2428,83638+26])
                      ]
              ]
              expression (typing/parmatch.ml[2429,83668+2]..[2454,84575+6])
                Pexp_open Fresh
                module_expr (typing/parmatch.ml[2429,83668+11]..[2429,83668+24])
                  Pmod_ident "Tast_iterator" (typing/parmatch.ml[2429,83668+11]..[2429,83668+24])
                expression (typing/parmatch.ml[2430,83696+2]..[2454,84575+6])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/parmatch.ml[2430,83696+6]..[2430,83696+15])
                        Ppat_var "expr_iter" (typing/parmatch.ml[2430,83696+6]..[2430,83696+15])
                      expression (typing/parmatch.ml[2430,83696+16]..[2450,84457+7]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/parmatch.ml[2430,83696+16]..[2430,83696+20])
                          Ppat_var "iter" (typing/parmatch.ml[2430,83696+16]..[2430,83696+20])
                        expression (typing/parmatch.ml[2430,83696+21]..[2450,84457+7]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/parmatch.ml[2430,83696+21]..[2430,83696+24])
                            Ppat_var "exp" (typing/parmatch.ml[2430,83696+21]..[2430,83696+24])
                          expression (typing/parmatch.ml[2431,83723+4]..[2450,84457+7])
                            Pexp_sequence
                            expression (typing/parmatch.ml[2431,83723+4]..[2435,83931+58])
                              Pexp_match
                              expression (typing/parmatch.ml[2431,83723+11]..[2431,83723+23])
                                Pexp_field
                                expression (typing/parmatch.ml[2431,83723+11]..[2431,83723+14])
                                  Pexp_ident "exp" (typing/parmatch.ml[2431,83723+11]..[2431,83723+14])
                                "exp_desc" (typing/parmatch.ml[2431,83723+15]..[2431,83723+23])
                              [
                                <case>
                                  pattern (typing/parmatch.ml[2432,83752+8]..[2432,83752+39])
                                    Ppat_construct "Texp_ident" (typing/parmatch.ml[2432,83752+8]..[2432,83752+18])
                                    Some
                                      []
                                      pattern (typing/parmatch.ml[2432,83752+19]..[2432,83752+39])
                                        Ppat_tuple
                                        [
                                          pattern (typing/parmatch.ml[2432,83752+20]..[2432,83752+24])
                                            Ppat_var "path" (typing/parmatch.ml[2432,83752+20]..[2432,83752+24])
                                          pattern (typing/parmatch.ml[2432,83752+26]..[2432,83752+30])
                                            Ppat_var "_lid" (typing/parmatch.ml[2432,83752+26]..[2432,83752+30])
                                          pattern (typing/parmatch.ml[2432,83752+32]..[2432,83752+38])
                                            Ppat_var "_descr" (typing/parmatch.ml[2432,83752+32]..[2432,83752+38])
                                        ]
                                  expression (typing/parmatch.ml[2433,83795+8]..[2433,83795+76])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[2433,83795+8]..[2433,83795+17])
                                      Pexp_ident "List.iter" (typing/parmatch.ml[2433,83795+8]..[2433,83795+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[2433,83795+18]..[2433,83795+58])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (typing/parmatch.ml[2433,83795+23]..[2433,83795+25])
                                            Ppat_var "id" (typing/parmatch.ml[2433,83795+23]..[2433,83795+25])
                                          expression (typing/parmatch.ml[2433,83795+29]..[2433,83795+57])
                                            Pexp_apply
                                            expression (typing/parmatch.ml[2433,83795+33]..[2433,83795+35])
                                              Pexp_ident ":=" (typing/parmatch.ml[2433,83795+33]..[2433,83795+35])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2433,83795+29]..[2433,83795+32])
                                                  Pexp_ident "ids" (typing/parmatch.ml[2433,83795+29]..[2433,83795+32])
                                              <arg>
                                              Nolabel
                                                expression (typing/parmatch.ml[2433,83795+36]..[2433,83795+57])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[2433,83795+36]..[2433,83795+49])
                                                    Pexp_ident "Ident.Set.add" (typing/parmatch.ml[2433,83795+36]..[2433,83795+49])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2433,83795+50]..[2433,83795+52])
                                                        Pexp_ident "id" (typing/parmatch.ml[2433,83795+50]..[2433,83795+52])
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2433,83795+53]..[2433,83795+57])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[2433,83795+53]..[2433,83795+54])
                                                          Pexp_ident "!" (typing/parmatch.ml[2433,83795+53]..[2433,83795+54])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[2433,83795+54]..[2433,83795+57])
                                                              Pexp_ident "ids" (typing/parmatch.ml[2433,83795+54]..[2433,83795+57])
                                                        ]
                                                  ]
                                            ]
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[2433,83795+59]..[2433,83795+76])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[2433,83795+60]..[2433,83795+70])
                                            Pexp_ident "Path.heads" (typing/parmatch.ml[2433,83795+60]..[2433,83795+70])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[2433,83795+71]..[2433,83795+75])
                                                Pexp_ident "path" (typing/parmatch.ml[2433,83795+71]..[2433,83795+75])
                                          ]
                                    ]
                                <case>
                                  pattern (typing/parmatch.ml[2435,83931+8]..[2435,83931+9])
                                    Ppat_any
                                  expression (typing/parmatch.ml[2435,83931+13]..[2435,83931+57])
                                    Pexp_apply
                                    expression (typing/parmatch.ml[2435,83931+13]..[2435,83931+48])
                                      Pexp_field
                                      expression (typing/parmatch.ml[2435,83931+13]..[2435,83931+43])
                                        Pexp_ident "Tast_iterator.default_iterator" (typing/parmatch.ml[2435,83931+13]..[2435,83931+43])
                                      "expr" (typing/parmatch.ml[2435,83931+44]..[2435,83931+48])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[2435,83931+49]..[2435,83931+53])
                                          Pexp_ident "iter" (typing/parmatch.ml[2435,83931+49]..[2435,83931+53])
                                      <arg>
                                      Nolabel
                                        expression (typing/parmatch.ml[2435,83931+54]..[2435,83931+57])
                                          Pexp_ident "exp" (typing/parmatch.ml[2435,83931+54]..[2435,83931+57])
                                    ]
                              ]
                            expression (typing/parmatch.ml[2437,83992+4]..[2450,84457+7])
                              Pexp_ifthenelse
                              expression (typing/parmatch.ml[2437,83992+7]..[2437,83992+20])
                                Pexp_apply
                                expression (typing/parmatch.ml[2437,83992+7]..[2437,83992+16])
                                  Pexp_ident "is_unpack" (typing/parmatch.ml[2437,83992+7]..[2437,83992+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/parmatch.ml[2437,83992+17]..[2437,83992+20])
                                      Pexp_ident "exp" (typing/parmatch.ml[2437,83992+17]..[2437,83992+20])
                                ]
                              expression (typing/parmatch.ml[2437,83992+26]..[2450,84457+7])
                                Pexp_match
                                expression (typing/parmatch.ml[2437,83992+38]..[2437,83992+50])
                                  Pexp_field
                                  expression (typing/parmatch.ml[2437,83992+38]..[2437,83992+41])
                                    Pexp_ident "exp" (typing/parmatch.ml[2437,83992+38]..[2437,83992+41])
                                  "exp_desc" (typing/parmatch.ml[2437,83992+42]..[2437,83992+50])
                                [
                                  <case>
                                    pattern (typing/parmatch.ml[2438,84048+6]..[2442,84185+11])
                                      Ppat_construct "Texp_letmodule" (typing/parmatch.ml[2438,84048+6]..[2438,84048+20])
                                      Some
                                        []
                                        pattern (typing/parmatch.ml[2439,84069+8]..[2442,84185+11])
                                          Ppat_tuple
                                          [
                                            pattern (typing/parmatch.ml[2439,84069+9]..[2439,84069+15])
                                              Ppat_var "id_mod" (typing/parmatch.ml[2439,84069+9]..[2439,84069+15])
                                            pattern (typing/parmatch.ml[2439,84069+16]..[2439,84069+17])
                                              Ppat_any
                                            pattern (typing/parmatch.ml[2439,84069+18]..[2439,84069+19])
                                              Ppat_any
                                            pattern (typing/parmatch.ml[2440,84090+9]..[2441,84110+73])
                                              Ppat_record Closed
                                              [
                                                "mod_desc" (typing/parmatch.ml[2440,84090+10]..[2440,84090+18])
                                                  pattern (typing/parmatch.ml[2441,84110+10]..[2441,84110+72])
                                                    Ppat_construct "Tmod_unpack" (typing/parmatch.ml[2441,84110+10]..[2441,84110+21])
                                                    Some
                                                      []
                                                      pattern (typing/parmatch.ml[2441,84110+22]..[2441,84110+72])
                                                        Ppat_tuple
                                                        [
                                                          pattern (typing/parmatch.ml[2441,84110+23]..[2441,84110+69])
                                                            Ppat_record Closed
                                                            [
                                                              "exp_desc" (typing/parmatch.ml[2441,84110+24]..[2441,84110+32])
                                                                pattern (typing/parmatch.ml[2441,84110+33]..[2441,84110+68])
                                                                  Ppat_construct "Texp_ident" (typing/parmatch.ml[2441,84110+33]..[2441,84110+43])
                                                                  Some
                                                                    []
                                                                    pattern (typing/parmatch.ml[2441,84110+44]..[2441,84110+68])
                                                                      Ppat_tuple
                                                                      [
pattern (typing/parmatch.ml[2441,84110+45]..[2441,84110+63])
  Ppat_construct "Path.Pident" (typing/parmatch.ml[2441,84110+45]..[2441,84110+56])
  Some
    []
    pattern (typing/parmatch.ml[2441,84110+57]..[2441,84110+63])
      Ppat_var "id_exp" (typing/parmatch.ml[2441,84110+57]..[2441,84110+63])
pattern (typing/parmatch.ml[2441,84110+64]..[2441,84110+65])
  Ppat_any
pattern (typing/parmatch.ml[2441,84110+66]..[2441,84110+67])
  Ppat_any
                                                                      ]
                                                            ]
                                                          pattern (typing/parmatch.ml[2441,84110+70]..[2441,84110+71])
                                                            Ppat_any
                                                        ]
                                              ]
                                            pattern (typing/parmatch.ml[2442,84185+9]..[2442,84185+10])
                                              Ppat_any
                                          ]
                                    expression (typing/parmatch.ml[2443,84200+11]..[2448,84418+14])
                                      Pexp_sequence
                                      expression (typing/parmatch.ml[2443,84200+11]..[2443,84200+45])
                                        Pexp_assert
                                        expression (typing/parmatch.ml[2443,84200+18]..[2443,84200+45])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[2443,84200+19]..[2443,84200+32])
                                            Pexp_ident "Ident.Set.mem" (typing/parmatch.ml[2443,84200+19]..[2443,84200+32])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[2443,84200+33]..[2443,84200+39])
                                                Pexp_ident "id_exp" (typing/parmatch.ml[2443,84200+33]..[2443,84200+39])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[2443,84200+40]..[2443,84200+44])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[2443,84200+40]..[2443,84200+41])
                                                  Pexp_ident "!" (typing/parmatch.ml[2443,84200+40]..[2443,84200+41])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[2443,84200+41]..[2443,84200+44])
                                                      Pexp_ident "ids" (typing/parmatch.ml[2443,84200+41]..[2443,84200+44])
                                                ]
                                          ]
                                      expression (typing/parmatch.ml[2444,84248+11]..[2448,84418+14])
                                        Pexp_match
                                        expression (typing/parmatch.ml[2444,84248+23]..[2444,84248+29])
                                          Pexp_ident "id_mod" (typing/parmatch.ml[2444,84248+23]..[2444,84248+29])
                                        [
                                          <case>
                                            pattern (typing/parmatch.ml[2445,84283+13]..[2445,84283+24])
                                              Ppat_construct "Some" (typing/parmatch.ml[2445,84283+13]..[2445,84283+17])
                                              Some
                                                []
                                                pattern (typing/parmatch.ml[2445,84283+18]..[2445,84283+24])
                                                  Ppat_var "id_mod" (typing/parmatch.ml[2445,84283+18]..[2445,84283+24])
                                            <when>
                                              expression (typing/parmatch.ml[2445,84283+30]..[2445,84283+61])
                                                Pexp_apply
                                                expression (typing/parmatch.ml[2445,84283+30]..[2445,84283+33])
                                                  Pexp_ident "not" (typing/parmatch.ml[2445,84283+30]..[2445,84283+33])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (typing/parmatch.ml[2445,84283+34]..[2445,84283+61])
                                                      Pexp_apply
                                                      expression (typing/parmatch.ml[2445,84283+35]..[2445,84283+48])
                                                        Pexp_ident "Ident.Set.mem" (typing/parmatch.ml[2445,84283+35]..[2445,84283+48])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[2445,84283+49]..[2445,84283+55])
                                                            Pexp_ident "id_mod" (typing/parmatch.ml[2445,84283+49]..[2445,84283+55])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[2445,84283+56]..[2445,84283+60])
                                                            Pexp_apply
                                                            expression (typing/parmatch.ml[2445,84283+56]..[2445,84283+57])
                                                              Pexp_ident "!" (typing/parmatch.ml[2445,84283+56]..[2445,84283+57])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (typing/parmatch.ml[2445,84283+57]..[2445,84283+60])
                                                                  Pexp_ident "ids" (typing/parmatch.ml[2445,84283+57]..[2445,84283+60])
                                                            ]
                                                      ]
                                                ]
                                            expression (typing/parmatch.ml[2446,84348+13]..[2446,84348+48])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[2446,84348+17]..[2446,84348+19])
                                                Pexp_ident ":=" (typing/parmatch.ml[2446,84348+17]..[2446,84348+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[2446,84348+13]..[2446,84348+16])
                                                    Pexp_ident "ids" (typing/parmatch.ml[2446,84348+13]..[2446,84348+16])
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[2446,84348+20]..[2446,84348+48])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[2446,84348+20]..[2446,84348+36])
                                                      Pexp_ident "Ident.Set.remove" (typing/parmatch.ml[2446,84348+20]..[2446,84348+36])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[2446,84348+37]..[2446,84348+43])
                                                          Pexp_ident "id_exp" (typing/parmatch.ml[2446,84348+37]..[2446,84348+43])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[2446,84348+44]..[2446,84348+48])
                                                          Pexp_apply
                                                          expression (typing/parmatch.ml[2446,84348+44]..[2446,84348+45])
                                                            Pexp_ident "!" (typing/parmatch.ml[2446,84348+44]..[2446,84348+45])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (typing/parmatch.ml[2446,84348+45]..[2446,84348+48])
                                                                Pexp_ident "ids" (typing/parmatch.ml[2446,84348+45]..[2446,84348+48])
                                                          ]
                                                    ]
                                              ]
                                          <case>
                                            pattern (typing/parmatch.ml[2447,84397+13]..[2447,84397+14])
                                              Ppat_any
                                            expression (typing/parmatch.ml[2447,84397+18]..[2447,84397+20])
                                              Pexp_construct "()" (typing/parmatch.ml[2447,84397+18]..[2447,84397+20])
                                              None
                                        ]
                                  <case>
                                    pattern (typing/parmatch.ml[2449,84433+6]..[2449,84433+7])
                                      Ppat_any
                                    expression (typing/parmatch.ml[2449,84433+11]..[2449,84433+23])
                                      Pexp_assert
                                      expression (typing/parmatch.ml[2449,84433+18]..[2449,84433+23])
                                        Pexp_construct "false" (typing/parmatch.ml[2449,84433+18]..[2449,84433+23])
                                        None
                                ]
                              None
                  ]
                  expression (typing/parmatch.ml[2452,84470+2]..[2454,84575+6])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (typing/parmatch.ml[2452,84470+6]..[2452,84470+14])
                          Ppat_var "iterator" (typing/parmatch.ml[2452,84470+6]..[2452,84470+14])
                        expression (typing/parmatch.ml[2452,84470+17]..[2452,84470+71])
                          Pexp_record
                          [
                            "expr" (typing/parmatch.ml[2452,84470+54]..[2452,84470+58])
                              expression (typing/parmatch.ml[2452,84470+61]..[2452,84470+70])
                                Pexp_ident "expr_iter" (typing/parmatch.ml[2452,84470+61]..[2452,84470+70])
                          ]
                          Some
                            expression (typing/parmatch.ml[2452,84470+18]..[2452,84470+48])
                              Pexp_ident "Tast_iterator.default_iterator" (typing/parmatch.ml[2452,84470+18]..[2452,84470+48])
                    ]
                    expression (typing/parmatch.ml[2453,84545+2]..[2454,84575+6])
                      Pexp_sequence
                      expression (typing/parmatch.ml[2453,84545+2]..[2453,84545+28])
                        Pexp_apply
                        expression (typing/parmatch.ml[2453,84545+2]..[2453,84545+15])
                          Pexp_field
                          expression (typing/parmatch.ml[2453,84545+2]..[2453,84545+10])
                            Pexp_ident "iterator" (typing/parmatch.ml[2453,84545+2]..[2453,84545+10])
                          "expr" (typing/parmatch.ml[2453,84545+11]..[2453,84545+15])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2453,84545+16]..[2453,84545+24])
                              Pexp_ident "iterator" (typing/parmatch.ml[2453,84545+16]..[2453,84545+24])
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2453,84545+25]..[2453,84545+28])
                              Pexp_ident "exp" (typing/parmatch.ml[2453,84545+25]..[2453,84545+28])
                        ]
                      expression (typing/parmatch.ml[2454,84575+2]..[2454,84575+6])
                        Pexp_apply
                        expression (typing/parmatch.ml[2454,84575+2]..[2454,84575+3])
                          Pexp_ident "!" (typing/parmatch.ml[2454,84575+2]..[2454,84575+3])
                        [
                          <arg>
                          Nolabel
                            expression (typing/parmatch.ml[2454,84575+3]..[2454,84575+6])
                              Pexp_ident "ids" (typing/parmatch.ml[2454,84575+3]..[2454,84575+6])
                        ]
    ]
  structure_item (typing/parmatch.ml[2456,84583+0]..[2480,85553+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/parmatch.ml[2456,84583+4]..[2456,84583+28])
          Ppat_var "check_ambiguous_bindings" (typing/parmatch.ml[2456,84583+4]..[2456,84583+28])
        expression (typing/parmatch.ml[2457,84614+2]..[2480,85553+49])
          Pexp_open Fresh
          module_expr (typing/parmatch.ml[2457,84614+11]..[2457,84614+19])
            Pmod_ident "Warnings" (typing/parmatch.ml[2457,84614+11]..[2457,84614+19])
          expression (typing/parmatch.ml[2458,84637+2]..[2480,85553+49])
            Pexp_let Nonrec
            [
              <def>
                pattern (typing/parmatch.ml[2458,84637+6]..[2458,84637+11])
                  Ppat_var "warn0" (typing/parmatch.ml[2458,84637+6]..[2458,84637+11])
                expression (typing/parmatch.ml[2458,84637+14]..[2458,84637+47])
                  Pexp_construct "Ambiguous_var_in_pattern_guard" (typing/parmatch.ml[2458,84637+14]..[2458,84637+44])
                  Some
                    expression (typing/parmatch.ml[2458,84637+45]..[2458,84637+47])
                      Pexp_construct "[]" (typing/parmatch.ml[2458,84637+45]..[2458,84637+47])
                      None
            ]
            expression (typing/parmatch.ml[2459,84688+2]..[2480,85553+49])
              Pexp_fun
              Nolabel
              None
              pattern (typing/parmatch.ml[2459,84688+6]..[2459,84688+11])
                Ppat_var "cases" (typing/parmatch.ml[2459,84688+6]..[2459,84688+11])
              expression (typing/parmatch.ml[2460,84703+4]..[2480,85553+49])
                Pexp_ifthenelse
                expression (typing/parmatch.ml[2460,84703+7]..[2460,84703+22])
                  Pexp_apply
                  expression (typing/parmatch.ml[2460,84703+7]..[2460,84703+16])
                    Pexp_ident "is_active" (typing/parmatch.ml[2460,84703+7]..[2460,84703+16])
                  [
                    <arg>
                    Nolabel
                      expression (typing/parmatch.ml[2460,84703+17]..[2460,84703+22])
                        Pexp_ident "warn0" (typing/parmatch.ml[2460,84703+17]..[2460,84703+22])
                  ]
                expression (typing/parmatch.ml[2461,84731+6]..[2480,85553+49])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (typing/parmatch.ml[2461,84731+10]..[2461,84731+20])
                        Ppat_var "check_case" (typing/parmatch.ml[2461,84731+10]..[2461,84731+20])
                      expression (typing/parmatch.ml[2461,84731+21]..[2478,85529+14]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/parmatch.ml[2461,84731+21]..[2461,84731+23])
                          Ppat_var "ns" (typing/parmatch.ml[2461,84731+21]..[2461,84731+23])
                        expression (typing/parmatch.ml[2461,84731+24]..[2478,85529+14]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/parmatch.ml[2461,84731+24]..[2461,84731+28])
                            Ppat_var "case" (typing/parmatch.ml[2461,84731+24]..[2461,84731+28])
                          expression (typing/parmatch.ml[2461,84731+31]..[2478,85529+14])
                            Pexp_match
                            expression (typing/parmatch.ml[2461,84731+37]..[2461,84731+41])
                              Pexp_ident "case" (typing/parmatch.ml[2461,84731+37]..[2461,84731+41])
                            [
                              <case>
                                pattern (typing/parmatch.ml[2462,84778+10]..[2462,84778+40])
                                  Ppat_record Open
                                  [
                                    "c_lhs" (typing/parmatch.ml[2462,84778+12]..[2462,84778+17])
                                      pattern (typing/parmatch.ml[2462,84778+20]..[2462,84778+21])
                                        Ppat_var "p" (typing/parmatch.ml[2462,84778+20]..[2462,84778+21])
                                    "c_guard" (typing/parmatch.ml[2462,84778+23]..[2462,84778+30])
                                      pattern (typing/parmatch.ml[2462,84778+31]..[2462,84778+35])
                                        Ppat_construct "None" (typing/parmatch.ml[2462,84778+31]..[2462,84778+35])
                                        None
                                  ]
                                expression (typing/parmatch.ml[2462,84778+44]..[2462,84778+51])
                                  Pexp_construct "::" (typing/parmatch.ml[2462,84778+47]..[2462,84778+49])
                                  Some
                                    expression (typing/parmatch.ml[2462,84778+44]..[2462,84778+51]) ghost
                                      Pexp_tuple
                                      [
                                        expression (typing/parmatch.ml[2462,84778+44]..[2462,84778+47])
                                          Pexp_construct "::" (typing/parmatch.ml[2462,84778+45]..[2462,84778+47]) ghost
                                          Some
                                            expression (typing/parmatch.ml[2462,84778+45]..[2462,84778+47]) ghost
                                              Pexp_tuple
                                              [
                                                expression (typing/parmatch.ml[2462,84778+45]..[2462,84778+46])
                                                  Pexp_ident "p" (typing/parmatch.ml[2462,84778+45]..[2462,84778+46])
                                                expression (typing/parmatch.ml[2462,84778+46]..[2462,84778+47]) ghost
                                                  Pexp_construct "[]" (typing/parmatch.ml[2462,84778+46]..[2462,84778+47]) ghost
                                                  None
                                              ]
                                        expression (typing/parmatch.ml[2462,84778+49]..[2462,84778+51])
                                          Pexp_ident "ns" (typing/parmatch.ml[2462,84778+49]..[2462,84778+51])
                                      ]
                              <case>
                                pattern (typing/parmatch.ml[2463,84830+10]..[2463,84830+39])
                                  Ppat_record Open
                                  [
                                    "c_lhs" (typing/parmatch.ml[2463,84830+12]..[2463,84830+17])
                                      pattern (typing/parmatch.ml[2463,84830+18]..[2463,84830+19])
                                        Ppat_var "p" (typing/parmatch.ml[2463,84830+18]..[2463,84830+19])
                                    "c_guard" (typing/parmatch.ml[2463,84830+21]..[2463,84830+28])
                                      pattern (typing/parmatch.ml[2463,84830+29]..[2463,84830+35])
                                        Ppat_construct "Some" (typing/parmatch.ml[2463,84830+29]..[2463,84830+33])
                                        Some
                                          []
                                          pattern (typing/parmatch.ml[2463,84830+34]..[2463,84830+35])
                                            Ppat_var "g" (typing/parmatch.ml[2463,84830+34]..[2463,84830+35])
                                  ]
                                expression (typing/parmatch.ml[2464,84873+12]..[2478,85529+14])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (typing/parmatch.ml[2464,84873+16]..[2464,84873+19])
                                        Ppat_var "all" (typing/parmatch.ml[2464,84873+16]..[2464,84873+19])
                                      expression (typing/parmatch.ml[2465,84895+14]..[2465,84895+65])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[2465,84895+14]..[2465,84895+29])
                                          Pexp_ident "Ident.Set.inter" (typing/parmatch.ml[2465,84895+14]..[2465,84895+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[2465,84895+30]..[2465,84895+46])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[2465,84895+31]..[2465,84895+43])
                                                Pexp_ident "pattern_vars" (typing/parmatch.ml[2465,84895+31]..[2465,84895+43])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[2465,84895+44]..[2465,84895+45])
                                                    Pexp_ident "p" (typing/parmatch.ml[2465,84895+44]..[2465,84895+45])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[2465,84895+47]..[2465,84895+65])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[2465,84895+48]..[2465,84895+62])
                                                Pexp_ident "all_rhs_idents" (typing/parmatch.ml[2465,84895+48]..[2465,84895+62])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[2465,84895+63]..[2465,84895+64])
                                                    Pexp_ident "g" (typing/parmatch.ml[2465,84895+63]..[2465,84895+64])
                                              ]
                                        ]
                                  ]
                                  expression (typing/parmatch.ml[2466,84964+12]..[2478,85529+14])
                                    Pexp_sequence
                                    expression (typing/parmatch.ml[2466,84964+12]..[2477,85512+15])
                                      Pexp_ifthenelse
                                      expression (typing/parmatch.ml[2466,84964+15]..[2466,84964+43])
                                        Pexp_apply
                                        expression (typing/parmatch.ml[2466,84964+15]..[2466,84964+18])
                                          Pexp_ident "not" (typing/parmatch.ml[2466,84964+15]..[2466,84964+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/parmatch.ml[2466,84964+19]..[2466,84964+43])
                                              Pexp_apply
                                              expression (typing/parmatch.ml[2466,84964+20]..[2466,84964+38])
                                                Pexp_ident "Ident.Set.is_empty" (typing/parmatch.ml[2466,84964+20]..[2466,84964+38])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (typing/parmatch.ml[2466,84964+39]..[2466,84964+42])
                                                    Pexp_ident "all" (typing/parmatch.ml[2466,84964+39]..[2466,84964+42])
                                              ]
                                        ]
                                      expression (typing/parmatch.ml[2466,84964+49]..[2477,85512+15])
                                        Pexp_match
                                        expression (typing/parmatch.ml[2467,85019+20]..[2467,85019+44])
                                          Pexp_apply
                                          expression (typing/parmatch.ml[2467,85019+20]..[2467,85019+39])
                                            Pexp_ident "pattern_stable_vars" (typing/parmatch.ml[2467,85019+20]..[2467,85019+39])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[2467,85019+40]..[2467,85019+42])
                                                Pexp_ident "ns" (typing/parmatch.ml[2467,85019+40]..[2467,85019+42])
                                            <arg>
                                            Nolabel
                                              expression (typing/parmatch.ml[2467,85019+43]..[2467,85019+44])
                                                Pexp_ident "p" (typing/parmatch.ml[2467,85019+43]..[2467,85019+44])
                                          ]
                                        [
                                          <case>
                                            pattern (typing/parmatch.ml[2468,85069+16]..[2468,85069+19])
                                              Ppat_construct "All" (typing/parmatch.ml[2468,85069+16]..[2468,85069+19])
                                              None
                                            expression (typing/parmatch.ml[2468,85069+23]..[2468,85069+25])
                                              Pexp_construct "()" (typing/parmatch.ml[2468,85069+23]..[2468,85069+25])
                                              None
                                          <case>
                                            pattern (typing/parmatch.ml[2469,85095+16]..[2469,85095+27])
                                              Ppat_construct "Vars" (typing/parmatch.ml[2469,85095+16]..[2469,85095+20])
                                              Some
                                                []
                                                pattern (typing/parmatch.ml[2469,85095+21]..[2469,85095+27])
                                                  Ppat_var "stable" (typing/parmatch.ml[2469,85095+21]..[2469,85095+27])
                                            expression (typing/parmatch.ml[2470,85126+18]..[2476,85490+21])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (typing/parmatch.ml[2470,85126+22]..[2470,85126+31])
                                                    Ppat_var "ambiguous" (typing/parmatch.ml[2470,85126+22]..[2470,85126+31])
                                                  expression (typing/parmatch.ml[2470,85126+34]..[2470,85126+59])
                                                    Pexp_apply
                                                    expression (typing/parmatch.ml[2470,85126+34]..[2470,85126+48])
                                                      Pexp_ident "Ident.Set.diff" (typing/parmatch.ml[2470,85126+34]..[2470,85126+48])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[2470,85126+49]..[2470,85126+52])
                                                          Pexp_ident "all" (typing/parmatch.ml[2470,85126+49]..[2470,85126+52])
                                                      <arg>
                                                      Nolabel
                                                        expression (typing/parmatch.ml[2470,85126+53]..[2470,85126+59])
                                                          Pexp_ident "stable" (typing/parmatch.ml[2470,85126+53]..[2470,85126+59])
                                                    ]
                                              ]
                                              expression (typing/parmatch.ml[2471,85189+18]..[2476,85490+21])
                                                Pexp_ifthenelse
                                                expression (typing/parmatch.ml[2471,85189+21]..[2471,85189+55])
                                                  Pexp_apply
                                                  expression (typing/parmatch.ml[2471,85189+21]..[2471,85189+24])
                                                    Pexp_ident "not" (typing/parmatch.ml[2471,85189+21]..[2471,85189+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (typing/parmatch.ml[2471,85189+25]..[2471,85189+55])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[2471,85189+26]..[2471,85189+44])
                                                          Pexp_ident "Ident.Set.is_empty" (typing/parmatch.ml[2471,85189+26]..[2471,85189+44])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[2471,85189+45]..[2471,85189+54])
                                                              Pexp_ident "ambiguous" (typing/parmatch.ml[2471,85189+45]..[2471,85189+54])
                                                        ]
                                                  ]
                                                expression (typing/parmatch.ml[2471,85189+61]..[2476,85490+21])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (typing/parmatch.ml[2472,85256+24]..[2472,85256+27])
                                                        Ppat_var "pps" (typing/parmatch.ml[2472,85256+24]..[2472,85256+27])
                                                      expression (typing/parmatch.ml[2473,85286+22]..[2473,85286+73])
                                                        Pexp_apply
                                                        expression (typing/parmatch.ml[2473,85286+51]..[2473,85286+53])
                                                          Pexp_ident "|>" (typing/parmatch.ml[2473,85286+51]..[2473,85286+53])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[2473,85286+22]..[2473,85286+50])
                                                              Pexp_apply
                                                              expression (typing/parmatch.ml[2473,85286+22]..[2473,85286+40])
                                                                Pexp_ident "Ident.Set.elements" (typing/parmatch.ml[2473,85286+22]..[2473,85286+40])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/parmatch.ml[2473,85286+41]..[2473,85286+50])
                                                                    Pexp_ident "ambiguous" (typing/parmatch.ml[2473,85286+41]..[2473,85286+50])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (typing/parmatch.ml[2473,85286+54]..[2473,85286+73])
                                                              Pexp_apply
                                                              expression (typing/parmatch.ml[2473,85286+54]..[2473,85286+62])
                                                                Pexp_ident "List.map" (typing/parmatch.ml[2473,85286+54]..[2473,85286+62])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (typing/parmatch.ml[2473,85286+63]..[2473,85286+73])
                                                                    Pexp_ident "Ident.name" (typing/parmatch.ml[2473,85286+63]..[2473,85286+73])
                                                              ]
                                                        ]
                                                  ]
                                                  expression (typing/parmatch.ml[2474,85363+20]..[2475,85432+57])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (typing/parmatch.ml[2474,85363+24]..[2474,85363+28])
                                                          Ppat_var "warn" (typing/parmatch.ml[2474,85363+24]..[2474,85363+28])
                                                        expression (typing/parmatch.ml[2474,85363+31]..[2474,85363+65])
                                                          Pexp_construct "Ambiguous_var_in_pattern_guard" (typing/parmatch.ml[2474,85363+31]..[2474,85363+61])
                                                          Some
                                                            expression (typing/parmatch.ml[2474,85363+62]..[2474,85363+65])
                                                              Pexp_ident "pps" (typing/parmatch.ml[2474,85363+62]..[2474,85363+65])
                                                    ]
                                                    expression (typing/parmatch.ml[2475,85432+20]..[2475,85432+57])
                                                      Pexp_apply
                                                      expression (typing/parmatch.ml[2475,85432+20]..[2475,85432+42])
                                                        Pexp_ident "Location.prerr_warning" (typing/parmatch.ml[2475,85432+20]..[2475,85432+42])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[2475,85432+43]..[2475,85432+52])
                                                            Pexp_field
                                                            expression (typing/parmatch.ml[2475,85432+43]..[2475,85432+44])
                                                              Pexp_ident "p" (typing/parmatch.ml[2475,85432+43]..[2475,85432+44])
                                                            "pat_loc" (typing/parmatch.ml[2475,85432+45]..[2475,85432+52])
                                                        <arg>
                                                        Nolabel
                                                          expression (typing/parmatch.ml[2475,85432+53]..[2475,85432+57])
                                                            Pexp_ident "warn" (typing/parmatch.ml[2475,85432+53]..[2475,85432+57])
                                                      ]
                                                None
                                        ]
                                      None
                                    expression (typing/parmatch.ml[2478,85529+12]..[2478,85529+14])
                                      Pexp_ident "ns" (typing/parmatch.ml[2478,85529+12]..[2478,85529+14])
                            ]
                  ]
                  expression (typing/parmatch.ml[2480,85553+6]..[2480,85553+49])
                    Pexp_apply
                    expression (typing/parmatch.ml[2480,85553+6]..[2480,85553+12])
                      Pexp_ident "ignore" (typing/parmatch.ml[2480,85553+6]..[2480,85553+12])
                    [
                      <arg>
                      Nolabel
                        expression (typing/parmatch.ml[2480,85553+13]..[2480,85553+49])
                          Pexp_apply
                          expression (typing/parmatch.ml[2480,85553+14]..[2480,85553+28])
                            Pexp_ident "List.fold_left" (typing/parmatch.ml[2480,85553+14]..[2480,85553+28])
                          [
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[2480,85553+29]..[2480,85553+39])
                                Pexp_ident "check_case" (typing/parmatch.ml[2480,85553+29]..[2480,85553+39])
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[2480,85553+40]..[2480,85553+42])
                                Pexp_construct "[]" (typing/parmatch.ml[2480,85553+40]..[2480,85553+42])
                                None
                            <arg>
                            Nolabel
                              expression (typing/parmatch.ml[2480,85553+43]..[2480,85553+48])
                                Pexp_ident "cases" (typing/parmatch.ml[2480,85553+43]..[2480,85553+48])
                          ]
                    ]
                None
    ]
]

