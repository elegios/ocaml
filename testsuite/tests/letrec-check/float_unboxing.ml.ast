[
  structure_item (testsuite/tests/letrec-check/float_unboxing.ml[12,381+0]..[12,381+29])
    Pstr_type Rec
    [
      type_declaration "t" (testsuite/tests/letrec-check/float_unboxing.ml[12,381+5]..[12,381+6]) (testsuite/tests/letrec-check/float_unboxing.ml[12,381+0]..[12,381+29])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (testsuite/tests/letrec-check/float_unboxing.ml[12,381+11]..[12,381+27])
                Mutable
                "f" (testsuite/tests/letrec-check/float_unboxing.ml[12,381+19]..[12,381+20])                core_type (testsuite/tests/letrec-check/float_unboxing.ml[12,381+22]..[12,381+27])
                  Ptyp_constr "float" (testsuite/tests/letrec-check/float_unboxing.ml[12,381+22]..[12,381+27])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (testsuite/tests/letrec-check/float_unboxing.ml[13,411+0]..[13,411+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (testsuite/tests/letrec-check/float_unboxing.ml[13,411+4]..[13,411+5])
          Ppat_var "g" (testsuite/tests/letrec-check/float_unboxing.ml[13,411+4]..[13,411+5])
        expression (testsuite/tests/letrec-check/float_unboxing.ml[13,411+8]..[13,411+19])
          Pexp_record
          [
            "f" (testsuite/tests/letrec-check/float_unboxing.ml[13,411+10]..[13,411+11])
              expression (testsuite/tests/letrec-check/float_unboxing.ml[13,411+14]..[13,411+17])
                Pexp_constant PConst_float (0.0,None)
          ]
          None
    ]
  structure_item (testsuite/tests/letrec-check/float_unboxing.ml[14,431+0]..[14,431+38])
    Pstr_value Rec
    [
      <def>
        pattern (testsuite/tests/letrec-check/float_unboxing.ml[14,431+8]..[14,431+9])
          Ppat_var "x" (testsuite/tests/letrec-check/float_unboxing.ml[14,431+8]..[14,431+9])
        expression (testsuite/tests/letrec-check/float_unboxing.ml[14,431+12]..[14,431+26])
          Pexp_sequence
          expression (testsuite/tests/letrec-check/float_unboxing.ml[14,431+13]..[14,431+21])
            Pexp_setfield
            expression (testsuite/tests/letrec-check/float_unboxing.ml[14,431+13]..[14,431+14])
              Pexp_ident "g" (testsuite/tests/letrec-check/float_unboxing.ml[14,431+13]..[14,431+14])
            "f" (testsuite/tests/letrec-check/float_unboxing.ml[14,431+15]..[14,431+16])
            expression (testsuite/tests/letrec-check/float_unboxing.ml[14,431+20]..[14,431+21])
              Pexp_ident "y" (testsuite/tests/letrec-check/float_unboxing.ml[14,431+20]..[14,431+21])
          expression (testsuite/tests/letrec-check/float_unboxing.ml[14,431+23]..[14,431+25])
            Pexp_construct "()" (testsuite/tests/letrec-check/float_unboxing.ml[14,431+23]..[14,431+25])
            None
      <def>
        pattern (testsuite/tests/letrec-check/float_unboxing.ml[14,431+31]..[14,431+32])
          Ppat_var "y" (testsuite/tests/letrec-check/float_unboxing.ml[14,431+31]..[14,431+32])
        expression (testsuite/tests/letrec-check/float_unboxing.ml[14,431+35]..[14,431+38])
          Pexp_constant PConst_float (2.0,None)
    ]
  structure_item (testsuite/tests/letrec-check/float_unboxing.ml[15,472+0]..[22,717+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/float_unboxing.ml[15,472+9]..[22,717+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/float_unboxing.ml[15,472+9]..[22,717+2])
          Pexp_constant PConst_string ("\ntype t = { mutable f : float; }\nval g : t = {f = 0.}\nLine 3, characters 12-26:\n3 | let rec x = (g.f <- y; ()) and y = 2.0;;\n                ^^^^^^^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/float_unboxing.ml[15,472+11]..[22,717+0]),Some "")
    ]
  structure_item (testsuite/tests/letrec-check/float_unboxing.ml[26,803+0]..[30,901+3])
    Pstr_class
    [
      class_declaration (testsuite/tests/letrec-check/float_unboxing.ml[26,803+0]..[30,901+3])
        pci_virt = Concrete
        pci_params =
          []
        pci_name = "c" (testsuite/tests/letrec-check/float_unboxing.ml[26,803+6]..[26,803+7])
        pci_expr =
          class_expr (testsuite/tests/letrec-check/float_unboxing.ml[26,803+10]..[30,901+3])
            Pcl_structure
            class_structure
              pattern (testsuite/tests/letrec-check/float_unboxing.ml[26,803+16]..[26,803+16]) ghost
                Ppat_any
              [
                class_field (testsuite/tests/letrec-check/float_unboxing.ml[27,820+2]..[27,820+21])
                  Pcf_val Mutable
                    "f" (testsuite/tests/letrec-check/float_unboxing.ml[27,820+14]..[27,820+15])
                    Concrete Fresh
                    expression (testsuite/tests/letrec-check/float_unboxing.ml[27,820+18]..[27,820+21])
                      Pexp_constant PConst_float (0.0,None)
                class_field (testsuite/tests/letrec-check/float_unboxing.ml[28,842+2]..[29,855+45])
                  Pcf_method Public
                    "m" (testsuite/tests/letrec-check/float_unboxing.ml[28,842+9]..[28,842+10])
                    Concrete Fresh
                    expression (testsuite/tests/letrec-check/float_unboxing.ml[29,855+4]..[29,855+45]) ghost
                      Pexp_poly
                      expression (testsuite/tests/letrec-check/float_unboxing.ml[29,855+4]..[29,855+45])
                        Pexp_let Rec
                        [
                          <def>
                            pattern (testsuite/tests/letrec-check/float_unboxing.ml[29,855+12]..[29,855+13])
                              Ppat_var "x" (testsuite/tests/letrec-check/float_unboxing.ml[29,855+12]..[29,855+13])
                            expression (testsuite/tests/letrec-check/float_unboxing.ml[29,855+16]..[29,855+28])
                              Pexp_sequence
                              expression (testsuite/tests/letrec-check/float_unboxing.ml[29,855+17]..[29,855+23])
                                Pexp_setinstvar "f" (testsuite/tests/letrec-check/float_unboxing.ml[29,855+17]..[29,855+18])
                                expression (testsuite/tests/letrec-check/float_unboxing.ml[29,855+22]..[29,855+23])
                                  Pexp_ident "y" (testsuite/tests/letrec-check/float_unboxing.ml[29,855+22]..[29,855+23])
                              expression (testsuite/tests/letrec-check/float_unboxing.ml[29,855+25]..[29,855+27])
                                Pexp_construct "()" (testsuite/tests/letrec-check/float_unboxing.ml[29,855+25]..[29,855+27])
                                None
                          <def>
                            pattern (testsuite/tests/letrec-check/float_unboxing.ml[29,855+33]..[29,855+34])
                              Ppat_var "y" (testsuite/tests/letrec-check/float_unboxing.ml[29,855+33]..[29,855+34])
                            expression (testsuite/tests/letrec-check/float_unboxing.ml[29,855+37]..[29,855+40])
                              Pexp_constant PConst_float (2.0,None)
                        ]
                        expression (testsuite/tests/letrec-check/float_unboxing.ml[29,855+44]..[29,855+45])
                          Pexp_ident "f" (testsuite/tests/letrec-check/float_unboxing.ml[29,855+44]..[29,855+45])
                      None
              ]
    ]
  structure_item (testsuite/tests/letrec-check/float_unboxing.ml[31,907+0]..[31,907+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (testsuite/tests/letrec-check/float_unboxing.ml[31,907+4]..[31,907+5])
          Ppat_any
        expression (testsuite/tests/letrec-check/float_unboxing.ml[31,907+8]..[31,907+29])
          Pexp_apply
          expression (testsuite/tests/letrec-check/float_unboxing.ml[31,907+8]..[31,907+19])
            Pexp_ident "print_float" (testsuite/tests/letrec-check/float_unboxing.ml[31,907+8]..[31,907+19])
          [
            <arg>
            Nolabel
              expression (testsuite/tests/letrec-check/float_unboxing.ml[31,907+20]..[31,907+29])
                Pexp_send "m"
                expression (testsuite/tests/letrec-check/float_unboxing.ml[31,907+20]..[31,907+27])
                  Pexp_new "c" (testsuite/tests/letrec-check/float_unboxing.ml[31,907+25]..[31,907+26])
          ]
    ]
  structure_item (testsuite/tests/letrec-check/float_unboxing.ml[32,939+0]..[37,1138+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/letrec-check/float_unboxing.ml[32,939+9]..[37,1138+2])
        Pstr_eval
        expression (testsuite/tests/letrec-check/float_unboxing.ml[32,939+9]..[37,1138+2])
          Pexp_constant PConst_string ("\nLine 4, characters 16-28:\n4 |     let rec x = (f <- y; ()) and y = 2.0 in f\n                    ^^^^^^^^^^^^\nError: This kind of expression is not allowed as right-hand side of `let rec'\n",(testsuite/tests/letrec-check/float_unboxing.ml[32,939+11]..[37,1138+0]),Some "")
    ]
]

