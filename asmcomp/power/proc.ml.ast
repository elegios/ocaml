[
  structure_item (asmcomp/power/proc.ml[18,1114+0]..[18,1114+9])
    Pstr_open Fresh
    module_expr (asmcomp/power/proc.ml[18,1114+5]..[18,1114+9])
      Pmod_ident "Misc" (asmcomp/power/proc.ml[18,1114+5]..[18,1114+9])
  structure_item (asmcomp/power/proc.ml[19,1124+0]..[19,1124+8])
    Pstr_open Fresh
    module_expr (asmcomp/power/proc.ml[19,1124+5]..[19,1124+8])
      Pmod_ident "Cmm" (asmcomp/power/proc.ml[19,1124+5]..[19,1124+8])
  structure_item (asmcomp/power/proc.ml[20,1133+0]..[20,1133+8])
    Pstr_open Fresh
    module_expr (asmcomp/power/proc.ml[20,1133+5]..[20,1133+8])
      Pmod_ident "Reg" (asmcomp/power/proc.ml[20,1133+5]..[20,1133+8])
  structure_item (asmcomp/power/proc.ml[21,1142+0]..[21,1142+9])
    Pstr_open Fresh
    module_expr (asmcomp/power/proc.ml[21,1142+5]..[21,1142+9])
      Pmod_ident "Arch" (asmcomp/power/proc.ml[21,1142+5]..[21,1142+9])
  structure_item (asmcomp/power/proc.ml[22,1152+0]..[22,1152+9])
    Pstr_open Fresh
    module_expr (asmcomp/power/proc.ml[22,1152+5]..[22,1152+9])
      Pmod_ident "Mach" (asmcomp/power/proc.ml[22,1152+5]..[22,1152+9])
  structure_item (asmcomp/power/proc.ml[26,1192+0]..[26,1192+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[26,1192+4]..[26,1192+18])
          Ppat_var "word_addressed" (asmcomp/power/proc.ml[26,1192+4]..[26,1192+18])
        expression (asmcomp/power/proc.ml[26,1192+21]..[26,1192+26])
          Pexp_construct "false" (asmcomp/power/proc.ml[26,1192+21]..[26,1192+26])
          None
    ]
  structure_item (asmcomp/power/proc.ml[47,1959+0]..[50,2115+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[47,1959+4]..[47,1959+16])
          Ppat_var "int_reg_name" (asmcomp/power/proc.ml[47,1959+4]..[47,1959+16])
        expression (asmcomp/power/proc.ml[48,1978+2]..[50,2115+48])
          Pexp_array
          [
            expression (asmcomp/power/proc.ml[48,1978+5]..[48,1978+8])
              Pexp_constant PConst_string("3",(asmcomp/power/proc.ml[48,1978+6]..[48,1978+7]),None)
            expression (asmcomp/power/proc.ml[48,1978+10]..[48,1978+13])
              Pexp_constant PConst_string("4",(asmcomp/power/proc.ml[48,1978+11]..[48,1978+12]),None)
            expression (asmcomp/power/proc.ml[48,1978+15]..[48,1978+18])
              Pexp_constant PConst_string("5",(asmcomp/power/proc.ml[48,1978+16]..[48,1978+17]),None)
            expression (asmcomp/power/proc.ml[48,1978+20]..[48,1978+23])
              Pexp_constant PConst_string("6",(asmcomp/power/proc.ml[48,1978+21]..[48,1978+22]),None)
            expression (asmcomp/power/proc.ml[48,1978+25]..[48,1978+28])
              Pexp_constant PConst_string("7",(asmcomp/power/proc.ml[48,1978+26]..[48,1978+27]),None)
            expression (asmcomp/power/proc.ml[48,1978+30]..[48,1978+33])
              Pexp_constant PConst_string("8",(asmcomp/power/proc.ml[48,1978+31]..[48,1978+32]),None)
            expression (asmcomp/power/proc.ml[48,1978+35]..[48,1978+38])
              Pexp_constant PConst_string("9",(asmcomp/power/proc.ml[48,1978+36]..[48,1978+37]),None)
            expression (asmcomp/power/proc.ml[48,1978+40]..[48,1978+44])
              Pexp_constant PConst_string("10",(asmcomp/power/proc.ml[48,1978+41]..[48,1978+43]),None)
            expression (asmcomp/power/proc.ml[49,2046+5]..[49,2046+9])
              Pexp_constant PConst_string("14",(asmcomp/power/proc.ml[49,2046+6]..[49,2046+8]),None)
            expression (asmcomp/power/proc.ml[49,2046+11]..[49,2046+15])
              Pexp_constant PConst_string("15",(asmcomp/power/proc.ml[49,2046+12]..[49,2046+14]),None)
            expression (asmcomp/power/proc.ml[49,2046+17]..[49,2046+21])
              Pexp_constant PConst_string("16",(asmcomp/power/proc.ml[49,2046+18]..[49,2046+20]),None)
            expression (asmcomp/power/proc.ml[49,2046+23]..[49,2046+27])
              Pexp_constant PConst_string("17",(asmcomp/power/proc.ml[49,2046+24]..[49,2046+26]),None)
            expression (asmcomp/power/proc.ml[49,2046+29]..[49,2046+33])
              Pexp_constant PConst_string("18",(asmcomp/power/proc.ml[49,2046+30]..[49,2046+32]),None)
            expression (asmcomp/power/proc.ml[49,2046+35]..[49,2046+39])
              Pexp_constant PConst_string("19",(asmcomp/power/proc.ml[49,2046+36]..[49,2046+38]),None)
            expression (asmcomp/power/proc.ml[49,2046+41]..[49,2046+45])
              Pexp_constant PConst_string("20",(asmcomp/power/proc.ml[49,2046+42]..[49,2046+44]),None)
            expression (asmcomp/power/proc.ml[49,2046+47]..[49,2046+51])
              Pexp_constant PConst_string("21",(asmcomp/power/proc.ml[49,2046+48]..[49,2046+50]),None)
            expression (asmcomp/power/proc.ml[50,2115+5]..[50,2115+9])
              Pexp_constant PConst_string("22",(asmcomp/power/proc.ml[50,2115+6]..[50,2115+8]),None)
            expression (asmcomp/power/proc.ml[50,2115+11]..[50,2115+15])
              Pexp_constant PConst_string("23",(asmcomp/power/proc.ml[50,2115+12]..[50,2115+14]),None)
            expression (asmcomp/power/proc.ml[50,2115+17]..[50,2115+21])
              Pexp_constant PConst_string("24",(asmcomp/power/proc.ml[50,2115+18]..[50,2115+20]),None)
            expression (asmcomp/power/proc.ml[50,2115+23]..[50,2115+27])
              Pexp_constant PConst_string("25",(asmcomp/power/proc.ml[50,2115+24]..[50,2115+26]),None)
            expression (asmcomp/power/proc.ml[50,2115+29]..[50,2115+33])
              Pexp_constant PConst_string("26",(asmcomp/power/proc.ml[50,2115+30]..[50,2115+32]),None)
            expression (asmcomp/power/proc.ml[50,2115+35]..[50,2115+39])
              Pexp_constant PConst_string("27",(asmcomp/power/proc.ml[50,2115+36]..[50,2115+38]),None)
            expression (asmcomp/power/proc.ml[50,2115+41]..[50,2115+45])
              Pexp_constant PConst_string("28",(asmcomp/power/proc.ml[50,2115+42]..[50,2115+44]),None)
          ]
    ]
  structure_item (asmcomp/power/proc.ml[52,2186+0]..[56,2357+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[52,2186+4]..[52,2186+18])
          Ppat_var "float_reg_name" (asmcomp/power/proc.ml[52,2186+4]..[52,2186+18])
        expression (asmcomp/power/proc.ml[53,2207+2]..[56,2357+48])
          Pexp_array
          [
            expression (asmcomp/power/proc.ml[53,2207+5]..[53,2207+8])
              Pexp_constant PConst_string("1",(asmcomp/power/proc.ml[53,2207+6]..[53,2207+7]),None)
            expression (asmcomp/power/proc.ml[53,2207+10]..[53,2207+13])
              Pexp_constant PConst_string("2",(asmcomp/power/proc.ml[53,2207+11]..[53,2207+12]),None)
            expression (asmcomp/power/proc.ml[53,2207+15]..[53,2207+18])
              Pexp_constant PConst_string("3",(asmcomp/power/proc.ml[53,2207+16]..[53,2207+17]),None)
            expression (asmcomp/power/proc.ml[53,2207+20]..[53,2207+23])
              Pexp_constant PConst_string("4",(asmcomp/power/proc.ml[53,2207+21]..[53,2207+22]),None)
            expression (asmcomp/power/proc.ml[53,2207+25]..[53,2207+28])
              Pexp_constant PConst_string("5",(asmcomp/power/proc.ml[53,2207+26]..[53,2207+27]),None)
            expression (asmcomp/power/proc.ml[53,2207+30]..[53,2207+33])
              Pexp_constant PConst_string("6",(asmcomp/power/proc.ml[53,2207+31]..[53,2207+32]),None)
            expression (asmcomp/power/proc.ml[53,2207+35]..[53,2207+38])
              Pexp_constant PConst_string("7",(asmcomp/power/proc.ml[53,2207+36]..[53,2207+37]),None)
            expression (asmcomp/power/proc.ml[53,2207+40]..[53,2207+43])
              Pexp_constant PConst_string("8",(asmcomp/power/proc.ml[53,2207+41]..[53,2207+42]),None)
            expression (asmcomp/power/proc.ml[54,2252+5]..[54,2252+8])
              Pexp_constant PConst_string("9",(asmcomp/power/proc.ml[54,2252+6]..[54,2252+7]),None)
            expression (asmcomp/power/proc.ml[54,2252+10]..[54,2252+14])
              Pexp_constant PConst_string("10",(asmcomp/power/proc.ml[54,2252+11]..[54,2252+13]),None)
            expression (asmcomp/power/proc.ml[54,2252+16]..[54,2252+20])
              Pexp_constant PConst_string("11",(asmcomp/power/proc.ml[54,2252+17]..[54,2252+19]),None)
            expression (asmcomp/power/proc.ml[54,2252+22]..[54,2252+26])
              Pexp_constant PConst_string("12",(asmcomp/power/proc.ml[54,2252+23]..[54,2252+25]),None)
            expression (asmcomp/power/proc.ml[54,2252+28]..[54,2252+32])
              Pexp_constant PConst_string("13",(asmcomp/power/proc.ml[54,2252+29]..[54,2252+31]),None)
            expression (asmcomp/power/proc.ml[54,2252+34]..[54,2252+38])
              Pexp_constant PConst_string("14",(asmcomp/power/proc.ml[54,2252+35]..[54,2252+37]),None)
            expression (asmcomp/power/proc.ml[54,2252+40]..[54,2252+44])
              Pexp_constant PConst_string("15",(asmcomp/power/proc.ml[54,2252+41]..[54,2252+43]),None)
            expression (asmcomp/power/proc.ml[54,2252+46]..[54,2252+50])
              Pexp_constant PConst_string("16",(asmcomp/power/proc.ml[54,2252+47]..[54,2252+49]),None)
            expression (asmcomp/power/proc.ml[55,2304+5]..[55,2304+9])
              Pexp_constant PConst_string("17",(asmcomp/power/proc.ml[55,2304+6]..[55,2304+8]),None)
            expression (asmcomp/power/proc.ml[55,2304+11]..[55,2304+15])
              Pexp_constant PConst_string("18",(asmcomp/power/proc.ml[55,2304+12]..[55,2304+14]),None)
            expression (asmcomp/power/proc.ml[55,2304+17]..[55,2304+21])
              Pexp_constant PConst_string("19",(asmcomp/power/proc.ml[55,2304+18]..[55,2304+20]),None)
            expression (asmcomp/power/proc.ml[55,2304+23]..[55,2304+27])
              Pexp_constant PConst_string("20",(asmcomp/power/proc.ml[55,2304+24]..[55,2304+26]),None)
            expression (asmcomp/power/proc.ml[55,2304+29]..[55,2304+33])
              Pexp_constant PConst_string("21",(asmcomp/power/proc.ml[55,2304+30]..[55,2304+32]),None)
            expression (asmcomp/power/proc.ml[55,2304+35]..[55,2304+39])
              Pexp_constant PConst_string("22",(asmcomp/power/proc.ml[55,2304+36]..[55,2304+38]),None)
            expression (asmcomp/power/proc.ml[55,2304+41]..[55,2304+45])
              Pexp_constant PConst_string("23",(asmcomp/power/proc.ml[55,2304+42]..[55,2304+44]),None)
            expression (asmcomp/power/proc.ml[55,2304+47]..[55,2304+51])
              Pexp_constant PConst_string("24",(asmcomp/power/proc.ml[55,2304+48]..[55,2304+50]),None)
            expression (asmcomp/power/proc.ml[56,2357+5]..[56,2357+9])
              Pexp_constant PConst_string("25",(asmcomp/power/proc.ml[56,2357+6]..[56,2357+8]),None)
            expression (asmcomp/power/proc.ml[56,2357+11]..[56,2357+15])
              Pexp_constant PConst_string("26",(asmcomp/power/proc.ml[56,2357+12]..[56,2357+14]),None)
            expression (asmcomp/power/proc.ml[56,2357+17]..[56,2357+21])
              Pexp_constant PConst_string("27",(asmcomp/power/proc.ml[56,2357+18]..[56,2357+20]),None)
            expression (asmcomp/power/proc.ml[56,2357+23]..[56,2357+27])
              Pexp_constant PConst_string("28",(asmcomp/power/proc.ml[56,2357+24]..[56,2357+26]),None)
            expression (asmcomp/power/proc.ml[56,2357+29]..[56,2357+33])
              Pexp_constant PConst_string("29",(asmcomp/power/proc.ml[56,2357+30]..[56,2357+32]),None)
            expression (asmcomp/power/proc.ml[56,2357+35]..[56,2357+39])
              Pexp_constant PConst_string("30",(asmcomp/power/proc.ml[56,2357+36]..[56,2357+38]),None)
            expression (asmcomp/power/proc.ml[56,2357+41]..[56,2357+45])
              Pexp_constant PConst_string("31",(asmcomp/power/proc.ml[56,2357+42]..[56,2357+44]),None)
          ]
    ]
  structure_item (asmcomp/power/proc.ml[58,2407+0]..[58,2407+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[58,2407+4]..[58,2407+24])
          Ppat_var "num_register_classes" (asmcomp/power/proc.ml[58,2407+4]..[58,2407+24])
        expression (asmcomp/power/proc.ml[58,2407+27]..[58,2407+28])
          Pexp_constant PConst_int (2,None)
    ]
  structure_item (asmcomp/power/proc.ml[60,2437+0]..[63,2505+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[60,2437+4]..[60,2437+18])
          Ppat_var "register_class" (asmcomp/power/proc.ml[60,2437+4]..[60,2437+18])
        expression (asmcomp/power/proc.ml[60,2437+19]..[63,2505+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[60,2437+19]..[60,2437+20])
            Ppat_var "r" (asmcomp/power/proc.ml[60,2437+19]..[60,2437+20])
          expression (asmcomp/power/proc.ml[61,2460+2]..[63,2505+14])
            Pexp_match
            expression (asmcomp/power/proc.ml[61,2460+8]..[61,2460+13])
              Pexp_field
              expression (asmcomp/power/proc.ml[61,2460+8]..[61,2460+9])
                Pexp_ident "r" (asmcomp/power/proc.ml[61,2460+8]..[61,2460+9])
              "typ" (asmcomp/power/proc.ml[61,2460+10]..[61,2460+13])
            [
              <case>
                pattern (asmcomp/power/proc.ml[62,2479+4]..[62,2479+20])
                  Ppat_or
                  pattern (asmcomp/power/proc.ml[62,2479+4]..[62,2479+13])
                    Ppat_or
                    pattern (asmcomp/power/proc.ml[62,2479+4]..[62,2479+7])
                      Ppat_construct "Val" (asmcomp/power/proc.ml[62,2479+4]..[62,2479+7])
                      None
                    pattern (asmcomp/power/proc.ml[62,2479+10]..[62,2479+13])
                      Ppat_construct "Int" (asmcomp/power/proc.ml[62,2479+10]..[62,2479+13])
                      None
                  pattern (asmcomp/power/proc.ml[62,2479+16]..[62,2479+20])
                    Ppat_construct "Addr" (asmcomp/power/proc.ml[62,2479+16]..[62,2479+20])
                    None
                expression (asmcomp/power/proc.ml[62,2479+24]..[62,2479+25])
                  Pexp_constant PConst_int (0,None)
              <case>
                pattern (asmcomp/power/proc.ml[63,2505+4]..[63,2505+9])
                  Ppat_construct "Float" (asmcomp/power/proc.ml[63,2505+4]..[63,2505+9])
                  None
                expression (asmcomp/power/proc.ml[63,2505+13]..[63,2505+14])
                  Pexp_constant PConst_int (1,None)
            ]
    ]
  structure_item (asmcomp/power/proc.ml[65,2521+0]..[65,2521+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[65,2521+4]..[65,2521+27])
          Ppat_var "num_available_registers" (asmcomp/power/proc.ml[65,2521+4]..[65,2521+27])
        expression (asmcomp/power/proc.ml[65,2521+30]..[65,2521+42])
          Pexp_array
          [
            expression (asmcomp/power/proc.ml[65,2521+33]..[65,2521+35])
              Pexp_constant PConst_int (23,None)
            expression (asmcomp/power/proc.ml[65,2521+37]..[65,2521+39])
              Pexp_constant PConst_int (31,None)
          ]
    ]
  structure_item (asmcomp/power/proc.ml[67,2565+0]..[67,2565+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[67,2565+4]..[67,2565+28])
          Ppat_var "first_available_register" (asmcomp/power/proc.ml[67,2565+4]..[67,2565+28])
        expression (asmcomp/power/proc.ml[67,2565+31]..[67,2565+43])
          Pexp_array
          [
            expression (asmcomp/power/proc.ml[67,2565+34]..[67,2565+35])
              Pexp_constant PConst_int (0,None)
            expression (asmcomp/power/proc.ml[67,2565+37]..[67,2565+40])
              Pexp_constant PConst_int (100,None)
          ]
    ]
  structure_item (asmcomp/power/proc.ml[69,2610+0]..[70,2632+64])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[69,2610+4]..[69,2610+17])
          Ppat_var "register_name" (asmcomp/power/proc.ml[69,2610+4]..[69,2610+17])
        expression (asmcomp/power/proc.ml[69,2610+18]..[70,2632+64]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[69,2610+18]..[69,2610+19])
            Ppat_var "r" (asmcomp/power/proc.ml[69,2610+18]..[69,2610+19])
          expression (asmcomp/power/proc.ml[70,2632+2]..[70,2632+64])
            Pexp_ifthenelse
            expression (asmcomp/power/proc.ml[70,2632+5]..[70,2632+12])
              Pexp_apply
              expression (asmcomp/power/proc.ml[70,2632+7]..[70,2632+8])
                Pexp_ident "<" (asmcomp/power/proc.ml[70,2632+7]..[70,2632+8])
              [
                <arg>
                Nolabel
                  expression (asmcomp/power/proc.ml[70,2632+5]..[70,2632+6])
                    Pexp_ident "r" (asmcomp/power/proc.ml[70,2632+5]..[70,2632+6])
                <arg>
                Nolabel
                  expression (asmcomp/power/proc.ml[70,2632+9]..[70,2632+12])
                    Pexp_constant PConst_int (100,None)
              ]
            expression (asmcomp/power/proc.ml[70,2632+18]..[70,2632+34])
              Pexp_apply
              expression (asmcomp/power/proc.ml[70,2632+18]..[70,2632+34]) ghost
                Pexp_ident "Array.get" (asmcomp/power/proc.ml[70,2632+18]..[70,2632+34]) ghost
              [
                <arg>
                Nolabel
                  expression (asmcomp/power/proc.ml[70,2632+18]..[70,2632+30])
                    Pexp_ident "int_reg_name" (asmcomp/power/proc.ml[70,2632+18]..[70,2632+30])
                <arg>
                Nolabel
                  expression (asmcomp/power/proc.ml[70,2632+32]..[70,2632+33])
                    Pexp_ident "r" (asmcomp/power/proc.ml[70,2632+32]..[70,2632+33])
              ]
            Some
              expression (asmcomp/power/proc.ml[70,2632+40]..[70,2632+64])
                Pexp_apply
                expression (asmcomp/power/proc.ml[70,2632+40]..[70,2632+64]) ghost
                  Pexp_ident "Array.get" (asmcomp/power/proc.ml[70,2632+40]..[70,2632+64]) ghost
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/power/proc.ml[70,2632+40]..[70,2632+54])
                      Pexp_ident "float_reg_name" (asmcomp/power/proc.ml[70,2632+40]..[70,2632+54])
                  <arg>
                  Nolabel
                    expression (asmcomp/power/proc.ml[70,2632+56]..[70,2632+63])
                      Pexp_apply
                      expression (asmcomp/power/proc.ml[70,2632+58]..[70,2632+59])
                        Pexp_ident "-" (asmcomp/power/proc.ml[70,2632+58]..[70,2632+59])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/power/proc.ml[70,2632+56]..[70,2632+57])
                            Pexp_ident "r" (asmcomp/power/proc.ml[70,2632+56]..[70,2632+57])
                        <arg>
                        Nolabel
                          expression (asmcomp/power/proc.ml[70,2632+60]..[70,2632+63])
                            Pexp_constant PConst_int (100,None)
                      ]
                ]
    ]
  structure_item (asmcomp/power/proc.ml[72,2698+0]..[72,2698+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[72,2698+4]..[72,2698+20])
          Ppat_var "rotate_registers" (asmcomp/power/proc.ml[72,2698+4]..[72,2698+20])
        expression (asmcomp/power/proc.ml[72,2698+23]..[72,2698+27])
          Pexp_construct "true" (asmcomp/power/proc.ml[72,2698+23]..[72,2698+27])
          None
    ]
  structure_item (asmcomp/power/proc.ml[76,2787+0]..[78,2843+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[76,2787+4]..[76,2787+16])
          Ppat_var "hard_int_reg" (asmcomp/power/proc.ml[76,2787+4]..[76,2787+16])
        expression (asmcomp/power/proc.ml[77,2806+2]..[78,2843+65])
          Pexp_let Nonrec
          [
            <def>
              pattern (asmcomp/power/proc.ml[77,2806+6]..[77,2806+7])
                Ppat_var "v" (asmcomp/power/proc.ml[77,2806+6]..[77,2806+7])
              expression (asmcomp/power/proc.ml[77,2806+10]..[77,2806+33])
                Pexp_apply
                expression (asmcomp/power/proc.ml[77,2806+10]..[77,2806+20])
                  Pexp_ident "Array.make" (asmcomp/power/proc.ml[77,2806+10]..[77,2806+20])
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/power/proc.ml[77,2806+21]..[77,2806+23])
                      Pexp_constant PConst_int (23,None)
                  <arg>
                  Nolabel
                    expression (asmcomp/power/proc.ml[77,2806+24]..[77,2806+33])
                      Pexp_ident "Reg.dummy" (asmcomp/power/proc.ml[77,2806+24]..[77,2806+33])
                ]
          ]
          expression (asmcomp/power/proc.ml[78,2843+2]..[78,2843+65])
            Pexp_sequence
            expression (asmcomp/power/proc.ml[78,2843+2]..[78,2843+62])
              Pexp_for Up
              pattern (asmcomp/power/proc.ml[78,2843+6]..[78,2843+7])
                Ppat_var "i" (asmcomp/power/proc.ml[78,2843+6]..[78,2843+7])
              expression (asmcomp/power/proc.ml[78,2843+10]..[78,2843+11])
                Pexp_constant PConst_int (0,None)
              expression (asmcomp/power/proc.ml[78,2843+15]..[78,2843+17])
                Pexp_constant PConst_int (21,None)
              expression (asmcomp/power/proc.ml[78,2843+21]..[78,2843+57])
                Pexp_apply
                expression (asmcomp/power/proc.ml[78,2843+21]..[78,2843+57]) ghost
                  Pexp_ident "Array.set" (asmcomp/power/proc.ml[78,2843+21]..[78,2843+57]) ghost
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/power/proc.ml[78,2843+21]..[78,2843+22])
                      Pexp_ident "v" (asmcomp/power/proc.ml[78,2843+21]..[78,2843+22])
                  <arg>
                  Nolabel
                    expression (asmcomp/power/proc.ml[78,2843+24]..[78,2843+25])
                      Pexp_ident "i" (asmcomp/power/proc.ml[78,2843+24]..[78,2843+25])
                  <arg>
                  Nolabel
                    expression (asmcomp/power/proc.ml[78,2843+30]..[78,2843+57])
                      Pexp_apply
                      expression (asmcomp/power/proc.ml[78,2843+30]..[78,2843+45])
                        Pexp_ident "Reg.at_location" (asmcomp/power/proc.ml[78,2843+30]..[78,2843+45])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/power/proc.ml[78,2843+46]..[78,2843+49])
                            Pexp_construct "Int" (asmcomp/power/proc.ml[78,2843+46]..[78,2843+49])
                            None
                        <arg>
                        Nolabel
                          expression (asmcomp/power/proc.ml[78,2843+50]..[78,2843+57])
                            Pexp_construct "Reg" (asmcomp/power/proc.ml[78,2843+51]..[78,2843+54])
                            Some
                              expression (asmcomp/power/proc.ml[78,2843+55]..[78,2843+56])
                                Pexp_ident "i" (asmcomp/power/proc.ml[78,2843+55]..[78,2843+56])
                      ]
                ]
            expression (asmcomp/power/proc.ml[78,2843+64]..[78,2843+65])
              Pexp_ident "v" (asmcomp/power/proc.ml[78,2843+64]..[78,2843+65])
    ]
  structure_item (asmcomp/power/proc.ml[80,2910+0]..[82,2968+74])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[80,2910+4]..[80,2910+18])
          Ppat_var "hard_float_reg" (asmcomp/power/proc.ml[80,2910+4]..[80,2910+18])
        expression (asmcomp/power/proc.ml[81,2931+2]..[82,2968+74])
          Pexp_let Nonrec
          [
            <def>
              pattern (asmcomp/power/proc.ml[81,2931+6]..[81,2931+7])
                Ppat_var "v" (asmcomp/power/proc.ml[81,2931+6]..[81,2931+7])
              expression (asmcomp/power/proc.ml[81,2931+10]..[81,2931+33])
                Pexp_apply
                expression (asmcomp/power/proc.ml[81,2931+10]..[81,2931+20])
                  Pexp_ident "Array.make" (asmcomp/power/proc.ml[81,2931+10]..[81,2931+20])
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/power/proc.ml[81,2931+21]..[81,2931+23])
                      Pexp_constant PConst_int (31,None)
                  <arg>
                  Nolabel
                    expression (asmcomp/power/proc.ml[81,2931+24]..[81,2931+33])
                      Pexp_ident "Reg.dummy" (asmcomp/power/proc.ml[81,2931+24]..[81,2931+33])
                ]
          ]
          expression (asmcomp/power/proc.ml[82,2968+2]..[82,2968+74])
            Pexp_sequence
            expression (asmcomp/power/proc.ml[82,2968+2]..[82,2968+71])
              Pexp_for Up
              pattern (asmcomp/power/proc.ml[82,2968+6]..[82,2968+7])
                Ppat_var "i" (asmcomp/power/proc.ml[82,2968+6]..[82,2968+7])
              expression (asmcomp/power/proc.ml[82,2968+10]..[82,2968+11])
                Pexp_constant PConst_int (0,None)
              expression (asmcomp/power/proc.ml[82,2968+15]..[82,2968+17])
                Pexp_constant PConst_int (30,None)
              expression (asmcomp/power/proc.ml[82,2968+21]..[82,2968+66])
                Pexp_apply
                expression (asmcomp/power/proc.ml[82,2968+21]..[82,2968+66]) ghost
                  Pexp_ident "Array.set" (asmcomp/power/proc.ml[82,2968+21]..[82,2968+66]) ghost
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/power/proc.ml[82,2968+21]..[82,2968+22])
                      Pexp_ident "v" (asmcomp/power/proc.ml[82,2968+21]..[82,2968+22])
                  <arg>
                  Nolabel
                    expression (asmcomp/power/proc.ml[82,2968+24]..[82,2968+25])
                      Pexp_ident "i" (asmcomp/power/proc.ml[82,2968+24]..[82,2968+25])
                  <arg>
                  Nolabel
                    expression (asmcomp/power/proc.ml[82,2968+30]..[82,2968+66])
                      Pexp_apply
                      expression (asmcomp/power/proc.ml[82,2968+30]..[82,2968+45])
                        Pexp_ident "Reg.at_location" (asmcomp/power/proc.ml[82,2968+30]..[82,2968+45])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/power/proc.ml[82,2968+46]..[82,2968+51])
                            Pexp_construct "Float" (asmcomp/power/proc.ml[82,2968+46]..[82,2968+51])
                            None
                        <arg>
                        Nolabel
                          expression (asmcomp/power/proc.ml[82,2968+52]..[82,2968+66])
                            Pexp_construct "Reg" (asmcomp/power/proc.ml[82,2968+53]..[82,2968+56])
                            Some
                              expression (asmcomp/power/proc.ml[82,2968+56]..[82,2968+65])
                                Pexp_apply
                                expression (asmcomp/power/proc.ml[82,2968+61]..[82,2968+62])
                                  Pexp_ident "+" (asmcomp/power/proc.ml[82,2968+61]..[82,2968+62])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[82,2968+57]..[82,2968+60])
                                      Pexp_constant PConst_int (100,None)
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[82,2968+63]..[82,2968+64])
                                      Pexp_ident "i" (asmcomp/power/proc.ml[82,2968+63]..[82,2968+64])
                                ]
                      ]
                ]
            expression (asmcomp/power/proc.ml[82,2968+73]..[82,2968+74])
              Pexp_ident "v" (asmcomp/power/proc.ml[82,2968+73]..[82,2968+74])
    ]
  structure_item (asmcomp/power/proc.ml[84,3044+0]..[85,3064+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[84,3044+4]..[84,3044+17])
          Ppat_var "all_phys_regs" (asmcomp/power/proc.ml[84,3044+4]..[84,3044+17])
        expression (asmcomp/power/proc.ml[85,3064+2]..[85,3064+42])
          Pexp_apply
          expression (asmcomp/power/proc.ml[85,3064+2]..[85,3064+14])
            Pexp_ident "Array.append" (asmcomp/power/proc.ml[85,3064+2]..[85,3064+14])
          [
            <arg>
            Nolabel
              expression (asmcomp/power/proc.ml[85,3064+15]..[85,3064+27])
                Pexp_ident "hard_int_reg" (asmcomp/power/proc.ml[85,3064+15]..[85,3064+27])
            <arg>
            Nolabel
              expression (asmcomp/power/proc.ml[85,3064+28]..[85,3064+42])
                Pexp_ident "hard_float_reg" (asmcomp/power/proc.ml[85,3064+28]..[85,3064+42])
          ]
    ]
  structure_item (asmcomp/power/proc.ml[87,3108+0]..[88,3125+64])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[87,3108+4]..[87,3108+12])
          Ppat_var "phys_reg" (asmcomp/power/proc.ml[87,3108+4]..[87,3108+12])
        expression (asmcomp/power/proc.ml[87,3108+13]..[88,3125+64]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[87,3108+13]..[87,3108+14])
            Ppat_var "n" (asmcomp/power/proc.ml[87,3108+13]..[87,3108+14])
          expression (asmcomp/power/proc.ml[88,3125+2]..[88,3125+64])
            Pexp_ifthenelse
            expression (asmcomp/power/proc.ml[88,3125+5]..[88,3125+12])
              Pexp_apply
              expression (asmcomp/power/proc.ml[88,3125+7]..[88,3125+8])
                Pexp_ident "<" (asmcomp/power/proc.ml[88,3125+7]..[88,3125+8])
              [
                <arg>
                Nolabel
                  expression (asmcomp/power/proc.ml[88,3125+5]..[88,3125+6])
                    Pexp_ident "n" (asmcomp/power/proc.ml[88,3125+5]..[88,3125+6])
                <arg>
                Nolabel
                  expression (asmcomp/power/proc.ml[88,3125+9]..[88,3125+12])
                    Pexp_constant PConst_int (100,None)
              ]
            expression (asmcomp/power/proc.ml[88,3125+18]..[88,3125+34])
              Pexp_apply
              expression (asmcomp/power/proc.ml[88,3125+18]..[88,3125+34]) ghost
                Pexp_ident "Array.get" (asmcomp/power/proc.ml[88,3125+18]..[88,3125+34]) ghost
              [
                <arg>
                Nolabel
                  expression (asmcomp/power/proc.ml[88,3125+18]..[88,3125+30])
                    Pexp_ident "hard_int_reg" (asmcomp/power/proc.ml[88,3125+18]..[88,3125+30])
                <arg>
                Nolabel
                  expression (asmcomp/power/proc.ml[88,3125+32]..[88,3125+33])
                    Pexp_ident "n" (asmcomp/power/proc.ml[88,3125+32]..[88,3125+33])
              ]
            Some
              expression (asmcomp/power/proc.ml[88,3125+40]..[88,3125+64])
                Pexp_apply
                expression (asmcomp/power/proc.ml[88,3125+40]..[88,3125+64]) ghost
                  Pexp_ident "Array.get" (asmcomp/power/proc.ml[88,3125+40]..[88,3125+64]) ghost
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/power/proc.ml[88,3125+40]..[88,3125+54])
                      Pexp_ident "hard_float_reg" (asmcomp/power/proc.ml[88,3125+40]..[88,3125+54])
                  <arg>
                  Nolabel
                    expression (asmcomp/power/proc.ml[88,3125+56]..[88,3125+63])
                      Pexp_apply
                      expression (asmcomp/power/proc.ml[88,3125+58]..[88,3125+59])
                        Pexp_ident "-" (asmcomp/power/proc.ml[88,3125+58]..[88,3125+59])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/power/proc.ml[88,3125+56]..[88,3125+57])
                            Pexp_ident "n" (asmcomp/power/proc.ml[88,3125+56]..[88,3125+57])
                        <arg>
                        Nolabel
                          expression (asmcomp/power/proc.ml[88,3125+60]..[88,3125+63])
                            Pexp_constant PConst_int (100,None)
                      ]
                ]
    ]
  structure_item (asmcomp/power/proc.ml[90,3191+0]..[91,3216+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[90,3191+4]..[90,3191+14])
          Ppat_var "stack_slot" (asmcomp/power/proc.ml[90,3191+4]..[90,3191+14])
        expression (asmcomp/power/proc.ml[90,3191+15]..[91,3216+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[90,3191+15]..[90,3191+19])
            Ppat_var "slot" (asmcomp/power/proc.ml[90,3191+15]..[90,3191+19])
          expression (asmcomp/power/proc.ml[90,3191+20]..[91,3216+33]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/power/proc.ml[90,3191+20]..[90,3191+22])
              Ppat_var "ty" (asmcomp/power/proc.ml[90,3191+20]..[90,3191+22])
            expression (asmcomp/power/proc.ml[91,3216+2]..[91,3216+33])
              Pexp_apply
              expression (asmcomp/power/proc.ml[91,3216+2]..[91,3216+17])
                Pexp_ident "Reg.at_location" (asmcomp/power/proc.ml[91,3216+2]..[91,3216+17])
              [
                <arg>
                Nolabel
                  expression (asmcomp/power/proc.ml[91,3216+18]..[91,3216+20])
                    Pexp_ident "ty" (asmcomp/power/proc.ml[91,3216+18]..[91,3216+20])
                <arg>
                Nolabel
                  expression (asmcomp/power/proc.ml[91,3216+21]..[91,3216+33])
                    Pexp_construct "Stack" (asmcomp/power/proc.ml[91,3216+22]..[91,3216+27])
                    Some
                      expression (asmcomp/power/proc.ml[91,3216+28]..[91,3216+32])
                        Pexp_ident "slot" (asmcomp/power/proc.ml[91,3216+28]..[91,3216+32])
              ]
    ]
  structure_item (asmcomp/power/proc.ml[95,3278+0]..[104,3561+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[95,3278+4]..[95,3278+11])
          Ppat_var "loc_int" (asmcomp/power/proc.ml[95,3278+4]..[95,3278+11])
        expression (asmcomp/power/proc.ml[95,3278+12]..[104,3561+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[95,3278+12]..[95,3278+20])
            Ppat_var "last_int" (asmcomp/power/proc.ml[95,3278+12]..[95,3278+20])
          expression (asmcomp/power/proc.ml[95,3278+21]..[104,3561+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/power/proc.ml[95,3278+21]..[95,3278+31])
              Ppat_var "make_stack" (asmcomp/power/proc.ml[95,3278+21]..[95,3278+31])
            expression (asmcomp/power/proc.ml[95,3278+32]..[104,3561+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (asmcomp/power/proc.ml[95,3278+32]..[95,3278+45])
                Ppat_var "reg_use_stack" (asmcomp/power/proc.ml[95,3278+32]..[95,3278+45])
              expression (asmcomp/power/proc.ml[95,3278+46]..[104,3561+5]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (asmcomp/power/proc.ml[95,3278+46]..[95,3278+49])
                  Ppat_var "int" (asmcomp/power/proc.ml[95,3278+46]..[95,3278+49])
                expression (asmcomp/power/proc.ml[95,3278+50]..[104,3561+5]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (asmcomp/power/proc.ml[95,3278+50]..[95,3278+53])
                    Ppat_var "ofs" (asmcomp/power/proc.ml[95,3278+50]..[95,3278+53])
                  expression (asmcomp/power/proc.ml[96,3334+2]..[104,3561+5])
                    Pexp_ifthenelse
                    expression (asmcomp/power/proc.ml[96,3334+5]..[96,3334+21])
                      Pexp_apply
                      expression (asmcomp/power/proc.ml[96,3334+10]..[96,3334+12])
                        Pexp_ident "<=" (asmcomp/power/proc.ml[96,3334+10]..[96,3334+12])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/power/proc.ml[96,3334+5]..[96,3334+9])
                            Pexp_apply
                            expression (asmcomp/power/proc.ml[96,3334+5]..[96,3334+6])
                              Pexp_ident "!" (asmcomp/power/proc.ml[96,3334+5]..[96,3334+6])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/power/proc.ml[96,3334+6]..[96,3334+9])
                                  Pexp_ident "int" (asmcomp/power/proc.ml[96,3334+6]..[96,3334+9])
                            ]
                        <arg>
                        Nolabel
                          expression (asmcomp/power/proc.ml[96,3334+13]..[96,3334+21])
                            Pexp_ident "last_int" (asmcomp/power/proc.ml[96,3334+13]..[96,3334+21])
                      ]
                    expression (asmcomp/power/proc.ml[96,3334+27]..[101,3466+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (asmcomp/power/proc.ml[97,3367+8]..[97,3367+9])
                            Ppat_var "l" (asmcomp/power/proc.ml[97,3367+8]..[97,3367+9])
                          expression (asmcomp/power/proc.ml[97,3367+12]..[97,3367+25])
                            Pexp_apply
                            expression (asmcomp/power/proc.ml[97,3367+12]..[97,3367+20])
                              Pexp_ident "phys_reg" (asmcomp/power/proc.ml[97,3367+12]..[97,3367+20])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/power/proc.ml[97,3367+21]..[97,3367+25])
                                  Pexp_apply
                                  expression (asmcomp/power/proc.ml[97,3367+21]..[97,3367+22])
                                    Pexp_ident "!" (asmcomp/power/proc.ml[97,3367+21]..[97,3367+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[97,3367+22]..[97,3367+25])
                                        Pexp_ident "int" (asmcomp/power/proc.ml[97,3367+22]..[97,3367+25])
                                  ]
                            ]
                      ]
                      expression (asmcomp/power/proc.ml[98,3396+4]..[100,3460+5])
                        Pexp_sequence
                        expression (asmcomp/power/proc.ml[98,3396+4]..[98,3396+12])
                          Pexp_apply
                          expression (asmcomp/power/proc.ml[98,3396+4]..[98,3396+8])
                            Pexp_ident "incr" (asmcomp/power/proc.ml[98,3396+4]..[98,3396+8])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/power/proc.ml[98,3396+9]..[98,3396+12])
                                Pexp_ident "int" (asmcomp/power/proc.ml[98,3396+9]..[98,3396+12])
                          ]
                        expression (asmcomp/power/proc.ml[99,3410+4]..[100,3460+5])
                          Pexp_sequence
                          expression (asmcomp/power/proc.ml[99,3410+4]..[99,3410+48])
                            Pexp_ifthenelse
                            expression (asmcomp/power/proc.ml[99,3410+7]..[99,3410+20])
                              Pexp_ident "reg_use_stack" (asmcomp/power/proc.ml[99,3410+7]..[99,3410+20])
                            expression (asmcomp/power/proc.ml[99,3410+26]..[99,3410+48])
                              Pexp_apply
                              expression (asmcomp/power/proc.ml[99,3410+30]..[99,3410+32])
                                Pexp_ident ":=" (asmcomp/power/proc.ml[99,3410+30]..[99,3410+32])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/power/proc.ml[99,3410+26]..[99,3410+29])
                                    Pexp_ident "ofs" (asmcomp/power/proc.ml[99,3410+26]..[99,3410+29])
                                <arg>
                                Nolabel
                                  expression (asmcomp/power/proc.ml[99,3410+33]..[99,3410+48])
                                    Pexp_apply
                                    expression (asmcomp/power/proc.ml[99,3410+38]..[99,3410+39])
                                      Pexp_ident "+" (asmcomp/power/proc.ml[99,3410+38]..[99,3410+39])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/proc.ml[99,3410+33]..[99,3410+37])
                                          Pexp_apply
                                          expression (asmcomp/power/proc.ml[99,3410+33]..[99,3410+34])
                                            Pexp_ident "!" (asmcomp/power/proc.ml[99,3410+33]..[99,3410+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/power/proc.ml[99,3410+34]..[99,3410+37])
                                                Pexp_ident "ofs" (asmcomp/power/proc.ml[99,3410+34]..[99,3410+37])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/proc.ml[99,3410+40]..[99,3410+48])
                                          Pexp_ident "size_int" (asmcomp/power/proc.ml[99,3410+40]..[99,3410+48])
                                    ]
                              ]
                            None
                          expression (asmcomp/power/proc.ml[100,3460+4]..[100,3460+5])
                            Pexp_ident "l" (asmcomp/power/proc.ml[100,3460+4]..[100,3460+5])
                    Some
                      expression (asmcomp/power/proc.ml[101,3466+11]..[104,3561+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (asmcomp/power/proc.ml[102,3483+8]..[102,3483+9])
                              Ppat_var "l" (asmcomp/power/proc.ml[102,3483+8]..[102,3483+9])
                            expression (asmcomp/power/proc.ml[102,3483+12]..[102,3483+44])
                              Pexp_apply
                              expression (asmcomp/power/proc.ml[102,3483+12]..[102,3483+22])
                                Pexp_ident "stack_slot" (asmcomp/power/proc.ml[102,3483+12]..[102,3483+22])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/power/proc.ml[102,3483+23]..[102,3483+40])
                                    Pexp_apply
                                    expression (asmcomp/power/proc.ml[102,3483+24]..[102,3483+34])
                                      Pexp_ident "make_stack" (asmcomp/power/proc.ml[102,3483+24]..[102,3483+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/proc.ml[102,3483+35]..[102,3483+39])
                                          Pexp_apply
                                          expression (asmcomp/power/proc.ml[102,3483+35]..[102,3483+36])
                                            Pexp_ident "!" (asmcomp/power/proc.ml[102,3483+35]..[102,3483+36])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/power/proc.ml[102,3483+36]..[102,3483+39])
                                                Pexp_ident "ofs" (asmcomp/power/proc.ml[102,3483+36]..[102,3483+39])
                                          ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (asmcomp/power/proc.ml[102,3483+41]..[102,3483+44])
                                    Pexp_construct "Int" (asmcomp/power/proc.ml[102,3483+41]..[102,3483+44])
                                    None
                              ]
                        ]
                        expression (asmcomp/power/proc.ml[103,3531+4]..[103,3531+29])
                          Pexp_sequence
                          expression (asmcomp/power/proc.ml[103,3531+4]..[103,3531+26])
                            Pexp_apply
                            expression (asmcomp/power/proc.ml[103,3531+8]..[103,3531+10])
                              Pexp_ident ":=" (asmcomp/power/proc.ml[103,3531+8]..[103,3531+10])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/power/proc.ml[103,3531+4]..[103,3531+7])
                                  Pexp_ident "ofs" (asmcomp/power/proc.ml[103,3531+4]..[103,3531+7])
                              <arg>
                              Nolabel
                                expression (asmcomp/power/proc.ml[103,3531+11]..[103,3531+26])
                                  Pexp_apply
                                  expression (asmcomp/power/proc.ml[103,3531+16]..[103,3531+17])
                                    Pexp_ident "+" (asmcomp/power/proc.ml[103,3531+16]..[103,3531+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[103,3531+11]..[103,3531+15])
                                        Pexp_apply
                                        expression (asmcomp/power/proc.ml[103,3531+11]..[103,3531+12])
                                          Pexp_ident "!" (asmcomp/power/proc.ml[103,3531+11]..[103,3531+12])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/proc.ml[103,3531+12]..[103,3531+15])
                                              Pexp_ident "ofs" (asmcomp/power/proc.ml[103,3531+12]..[103,3531+15])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[103,3531+18]..[103,3531+26])
                                        Pexp_ident "size_int" (asmcomp/power/proc.ml[103,3531+18]..[103,3531+26])
                                  ]
                            ]
                          expression (asmcomp/power/proc.ml[103,3531+28]..[103,3531+29])
                            Pexp_ident "l" (asmcomp/power/proc.ml[103,3531+28]..[103,3531+29])
    ]
  structure_item (asmcomp/power/proc.ml[106,3568+0]..[119,4058+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[106,3568+4]..[106,3568+13])
          Ppat_var "loc_float" (asmcomp/power/proc.ml[106,3568+4]..[106,3568+13])
        expression (asmcomp/power/proc.ml[106,3568+14]..[119,4058+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[106,3568+14]..[106,3568+24])
            Ppat_var "last_float" (asmcomp/power/proc.ml[106,3568+14]..[106,3568+24])
          expression (asmcomp/power/proc.ml[106,3568+25]..[119,4058+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/power/proc.ml[106,3568+25]..[106,3568+35])
              Ppat_var "make_stack" (asmcomp/power/proc.ml[106,3568+25]..[106,3568+35])
            expression (asmcomp/power/proc.ml[106,3568+36]..[119,4058+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (asmcomp/power/proc.ml[106,3568+36]..[106,3568+49])
                Ppat_var "reg_use_stack" (asmcomp/power/proc.ml[106,3568+36]..[106,3568+49])
              expression (asmcomp/power/proc.ml[106,3568+50]..[119,4058+5]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (asmcomp/power/proc.ml[106,3568+50]..[106,3568+53])
                  Ppat_var "int" (asmcomp/power/proc.ml[106,3568+50]..[106,3568+53])
                expression (asmcomp/power/proc.ml[106,3568+54]..[119,4058+5]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (asmcomp/power/proc.ml[106,3568+54]..[106,3568+59])
                    Ppat_var "float" (asmcomp/power/proc.ml[106,3568+54]..[106,3568+59])
                  expression (asmcomp/power/proc.ml[106,3568+60]..[119,4058+5]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (asmcomp/power/proc.ml[106,3568+60]..[106,3568+63])
                      Ppat_var "ofs" (asmcomp/power/proc.ml[106,3568+60]..[106,3568+63])
                    expression (asmcomp/power/proc.ml[107,3634+2]..[119,4058+5])
                      Pexp_ifthenelse
                      expression (asmcomp/power/proc.ml[107,3634+5]..[107,3634+25])
                        Pexp_apply
                        expression (asmcomp/power/proc.ml[107,3634+12]..[107,3634+14])
                          Pexp_ident "<=" (asmcomp/power/proc.ml[107,3634+12]..[107,3634+14])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[107,3634+5]..[107,3634+11])
                              Pexp_apply
                              expression (asmcomp/power/proc.ml[107,3634+5]..[107,3634+6])
                                Pexp_ident "!" (asmcomp/power/proc.ml[107,3634+5]..[107,3634+6])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/power/proc.ml[107,3634+6]..[107,3634+11])
                                    Pexp_ident "float" (asmcomp/power/proc.ml[107,3634+6]..[107,3634+11])
                              ]
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[107,3634+15]..[107,3634+25])
                              Pexp_ident "last_float" (asmcomp/power/proc.ml[107,3634+15]..[107,3634+25])
                        ]
                      expression (asmcomp/power/proc.ml[107,3634+31]..[115,3920+5])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (asmcomp/power/proc.ml[108,3671+8]..[108,3671+9])
                              Ppat_var "l" (asmcomp/power/proc.ml[108,3671+8]..[108,3671+9])
                            expression (asmcomp/power/proc.ml[108,3671+12]..[108,3671+27])
                              Pexp_apply
                              expression (asmcomp/power/proc.ml[108,3671+12]..[108,3671+20])
                                Pexp_ident "phys_reg" (asmcomp/power/proc.ml[108,3671+12]..[108,3671+20])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/power/proc.ml[108,3671+21]..[108,3671+27])
                                    Pexp_apply
                                    expression (asmcomp/power/proc.ml[108,3671+21]..[108,3671+22])
                                      Pexp_ident "!" (asmcomp/power/proc.ml[108,3671+21]..[108,3671+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/proc.ml[108,3671+22]..[108,3671+27])
                                          Pexp_ident "float" (asmcomp/power/proc.ml[108,3671+22]..[108,3671+27])
                                    ]
                              ]
                        ]
                        expression (asmcomp/power/proc.ml[109,3702+4]..[114,3914+5])
                          Pexp_sequence
                          expression (asmcomp/power/proc.ml[109,3702+4]..[109,3702+14])
                            Pexp_apply
                            expression (asmcomp/power/proc.ml[109,3702+4]..[109,3702+8])
                              Pexp_ident "incr" (asmcomp/power/proc.ml[109,3702+4]..[109,3702+8])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/power/proc.ml[109,3702+9]..[109,3702+14])
                                  Pexp_ident "float" (asmcomp/power/proc.ml[109,3702+9]..[109,3702+14])
                            ]
                          expression (asmcomp/power/proc.ml[112,3827+4]..[114,3914+5])
                            Pexp_sequence
                            expression (asmcomp/power/proc.ml[112,3827+4]..[112,3827+33])
                              Pexp_ifthenelse
                              expression (asmcomp/power/proc.ml[112,3827+7]..[112,3827+19])
                                Pexp_apply
                                expression (asmcomp/power/proc.ml[112,3827+16]..[112,3827+17])
                                  Pexp_ident "=" (asmcomp/power/proc.ml[112,3827+16]..[112,3827+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[112,3827+7]..[112,3827+15])
                                      Pexp_ident "size_int" (asmcomp/power/proc.ml[112,3827+7]..[112,3827+15])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[112,3827+18]..[112,3827+19])
                                      Pexp_constant PConst_int (8,None)
                                ]
                              expression (asmcomp/power/proc.ml[112,3827+25]..[112,3827+33])
                                Pexp_apply
                                expression (asmcomp/power/proc.ml[112,3827+25]..[112,3827+29])
                                  Pexp_ident "incr" (asmcomp/power/proc.ml[112,3827+25]..[112,3827+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[112,3827+30]..[112,3827+33])
                                      Pexp_ident "int" (asmcomp/power/proc.ml[112,3827+30]..[112,3827+33])
                                ]
                              None
                            expression (asmcomp/power/proc.ml[113,3862+4]..[114,3914+5])
                              Pexp_sequence
                              expression (asmcomp/power/proc.ml[113,3862+4]..[113,3862+50])
                                Pexp_ifthenelse
                                expression (asmcomp/power/proc.ml[113,3862+7]..[113,3862+20])
                                  Pexp_ident "reg_use_stack" (asmcomp/power/proc.ml[113,3862+7]..[113,3862+20])
                                expression (asmcomp/power/proc.ml[113,3862+26]..[113,3862+50])
                                  Pexp_apply
                                  expression (asmcomp/power/proc.ml[113,3862+30]..[113,3862+32])
                                    Pexp_ident ":=" (asmcomp/power/proc.ml[113,3862+30]..[113,3862+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[113,3862+26]..[113,3862+29])
                                        Pexp_ident "ofs" (asmcomp/power/proc.ml[113,3862+26]..[113,3862+29])
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[113,3862+33]..[113,3862+50])
                                        Pexp_apply
                                        expression (asmcomp/power/proc.ml[113,3862+38]..[113,3862+39])
                                          Pexp_ident "+" (asmcomp/power/proc.ml[113,3862+38]..[113,3862+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/proc.ml[113,3862+33]..[113,3862+37])
                                              Pexp_apply
                                              expression (asmcomp/power/proc.ml[113,3862+33]..[113,3862+34])
                                                Pexp_ident "!" (asmcomp/power/proc.ml[113,3862+33]..[113,3862+34])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/power/proc.ml[113,3862+34]..[113,3862+37])
                                                    Pexp_ident "ofs" (asmcomp/power/proc.ml[113,3862+34]..[113,3862+37])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/proc.ml[113,3862+40]..[113,3862+50])
                                              Pexp_ident "size_float" (asmcomp/power/proc.ml[113,3862+40]..[113,3862+50])
                                        ]
                                  ]
                                None
                              expression (asmcomp/power/proc.ml[114,3914+4]..[114,3914+5])
                                Pexp_ident "l" (asmcomp/power/proc.ml[114,3914+4]..[114,3914+5])
                      Some
                        expression (asmcomp/power/proc.ml[115,3920+11]..[119,4058+5])
                          Pexp_sequence
                          expression (asmcomp/power/proc.ml[116,3937+4]..[116,3937+37])
                            Pexp_apply
                            expression (asmcomp/power/proc.ml[116,3937+8]..[116,3937+10])
                              Pexp_ident ":=" (asmcomp/power/proc.ml[116,3937+8]..[116,3937+10])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/power/proc.ml[116,3937+4]..[116,3937+7])
                                  Pexp_ident "ofs" (asmcomp/power/proc.ml[116,3937+4]..[116,3937+7])
                              <arg>
                              Nolabel
                                expression (asmcomp/power/proc.ml[116,3937+11]..[116,3937+37])
                                  Pexp_apply
                                  expression (asmcomp/power/proc.ml[116,3937+11]..[116,3937+21])
                                    Pexp_ident "Misc.align" (asmcomp/power/proc.ml[116,3937+11]..[116,3937+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[116,3937+22]..[116,3937+26])
                                        Pexp_apply
                                        expression (asmcomp/power/proc.ml[116,3937+22]..[116,3937+23])
                                          Pexp_ident "!" (asmcomp/power/proc.ml[116,3937+22]..[116,3937+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/proc.ml[116,3937+23]..[116,3937+26])
                                              Pexp_ident "ofs" (asmcomp/power/proc.ml[116,3937+23]..[116,3937+26])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[116,3937+27]..[116,3937+37])
                                        Pexp_ident "size_float" (asmcomp/power/proc.ml[116,3937+27]..[116,3937+37])
                                  ]
                            ]
                          expression (asmcomp/power/proc.ml[117,3976+4]..[118,4026+31])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (asmcomp/power/proc.ml[117,3976+8]..[117,3976+9])
                                  Ppat_var "l" (asmcomp/power/proc.ml[117,3976+8]..[117,3976+9])
                                expression (asmcomp/power/proc.ml[117,3976+12]..[117,3976+46])
                                  Pexp_apply
                                  expression (asmcomp/power/proc.ml[117,3976+12]..[117,3976+22])
                                    Pexp_ident "stack_slot" (asmcomp/power/proc.ml[117,3976+12]..[117,3976+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[117,3976+23]..[117,3976+40])
                                        Pexp_apply
                                        expression (asmcomp/power/proc.ml[117,3976+24]..[117,3976+34])
                                          Pexp_ident "make_stack" (asmcomp/power/proc.ml[117,3976+24]..[117,3976+34])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/proc.ml[117,3976+35]..[117,3976+39])
                                              Pexp_apply
                                              expression (asmcomp/power/proc.ml[117,3976+35]..[117,3976+36])
                                                Pexp_ident "!" (asmcomp/power/proc.ml[117,3976+35]..[117,3976+36])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/power/proc.ml[117,3976+36]..[117,3976+39])
                                                    Pexp_ident "ofs" (asmcomp/power/proc.ml[117,3976+36]..[117,3976+39])
                                              ]
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[117,3976+41]..[117,3976+46])
                                        Pexp_construct "Float" (asmcomp/power/proc.ml[117,3976+41]..[117,3976+46])
                                        None
                                  ]
                            ]
                            expression (asmcomp/power/proc.ml[118,4026+4]..[118,4026+31])
                              Pexp_sequence
                              expression (asmcomp/power/proc.ml[118,4026+4]..[118,4026+28])
                                Pexp_apply
                                expression (asmcomp/power/proc.ml[118,4026+8]..[118,4026+10])
                                  Pexp_ident ":=" (asmcomp/power/proc.ml[118,4026+8]..[118,4026+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[118,4026+4]..[118,4026+7])
                                      Pexp_ident "ofs" (asmcomp/power/proc.ml[118,4026+4]..[118,4026+7])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[118,4026+11]..[118,4026+28])
                                      Pexp_apply
                                      expression (asmcomp/power/proc.ml[118,4026+16]..[118,4026+17])
                                        Pexp_ident "+" (asmcomp/power/proc.ml[118,4026+16]..[118,4026+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/proc.ml[118,4026+11]..[118,4026+15])
                                            Pexp_apply
                                            expression (asmcomp/power/proc.ml[118,4026+11]..[118,4026+12])
                                              Pexp_ident "!" (asmcomp/power/proc.ml[118,4026+11]..[118,4026+12])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (asmcomp/power/proc.ml[118,4026+12]..[118,4026+15])
                                                  Pexp_ident "ofs" (asmcomp/power/proc.ml[118,4026+12]..[118,4026+15])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/proc.ml[118,4026+18]..[118,4026+28])
                                            Pexp_ident "size_float" (asmcomp/power/proc.ml[118,4026+18]..[118,4026+28])
                                      ]
                                ]
                              expression (asmcomp/power/proc.ml[118,4026+30]..[118,4026+31])
                                Pexp_ident "l" (asmcomp/power/proc.ml[118,4026+30]..[118,4026+31])
    ]
  structure_item (asmcomp/power/proc.ml[121,4065+0]..[137,4753+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[121,4065+4]..[121,4065+16])
          Ppat_var "loc_int_pair" (asmcomp/power/proc.ml[121,4065+4]..[121,4065+16])
        expression (asmcomp/power/proc.ml[121,4065+17]..[137,4753+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[121,4065+17]..[121,4065+25])
            Ppat_var "last_int" (asmcomp/power/proc.ml[121,4065+17]..[121,4065+25])
          expression (asmcomp/power/proc.ml[121,4065+26]..[137,4753+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/power/proc.ml[121,4065+26]..[121,4065+36])
              Ppat_var "make_stack" (asmcomp/power/proc.ml[121,4065+26]..[121,4065+36])
            expression (asmcomp/power/proc.ml[121,4065+37]..[137,4753+5]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (asmcomp/power/proc.ml[121,4065+37]..[121,4065+40])
                Ppat_var "int" (asmcomp/power/proc.ml[121,4065+37]..[121,4065+40])
              expression (asmcomp/power/proc.ml[121,4065+41]..[137,4753+5]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (asmcomp/power/proc.ml[121,4065+41]..[121,4065+44])
                  Ppat_var "ofs" (asmcomp/power/proc.ml[121,4065+41]..[121,4065+44])
                expression (asmcomp/power/proc.ml[125,4324+2]..[137,4753+5])
                  Pexp_sequence
                  expression (asmcomp/power/proc.ml[125,4324+2]..[125,4324+26])
                    Pexp_apply
                    expression (asmcomp/power/proc.ml[125,4324+6]..[125,4324+8])
                      Pexp_ident ":=" (asmcomp/power/proc.ml[125,4324+6]..[125,4324+8])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/power/proc.ml[125,4324+2]..[125,4324+5])
                          Pexp_ident "int" (asmcomp/power/proc.ml[125,4324+2]..[125,4324+5])
                      <arg>
                      Nolabel
                        expression (asmcomp/power/proc.ml[125,4324+9]..[125,4324+26])
                          Pexp_apply
                          expression (asmcomp/power/proc.ml[125,4324+9]..[125,4324+19])
                            Pexp_ident "Misc.align" (asmcomp/power/proc.ml[125,4324+9]..[125,4324+19])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/power/proc.ml[125,4324+20]..[125,4324+24])
                                Pexp_apply
                                expression (asmcomp/power/proc.ml[125,4324+20]..[125,4324+21])
                                  Pexp_ident "!" (asmcomp/power/proc.ml[125,4324+20]..[125,4324+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[125,4324+21]..[125,4324+24])
                                      Pexp_ident "int" (asmcomp/power/proc.ml[125,4324+21]..[125,4324+24])
                                ]
                            <arg>
                            Nolabel
                              expression (asmcomp/power/proc.ml[125,4324+25]..[125,4324+26])
                                Pexp_constant PConst_int (2,None)
                          ]
                    ]
                  expression (asmcomp/power/proc.ml[126,4352+2]..[137,4753+5])
                    Pexp_ifthenelse
                    expression (asmcomp/power/proc.ml[126,4352+5]..[126,4352+25])
                      Pexp_apply
                      expression (asmcomp/power/proc.ml[126,4352+10]..[126,4352+12])
                        Pexp_ident "<=" (asmcomp/power/proc.ml[126,4352+10]..[126,4352+12])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/power/proc.ml[126,4352+5]..[126,4352+9])
                            Pexp_apply
                            expression (asmcomp/power/proc.ml[126,4352+5]..[126,4352+6])
                              Pexp_ident "!" (asmcomp/power/proc.ml[126,4352+5]..[126,4352+6])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/power/proc.ml[126,4352+6]..[126,4352+9])
                                  Pexp_ident "int" (asmcomp/power/proc.ml[126,4352+6]..[126,4352+9])
                            ]
                        <arg>
                        Nolabel
                          expression (asmcomp/power/proc.ml[126,4352+13]..[126,4352+25])
                            Pexp_apply
                            expression (asmcomp/power/proc.ml[126,4352+22]..[126,4352+23])
                              Pexp_ident "-" (asmcomp/power/proc.ml[126,4352+22]..[126,4352+23])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/power/proc.ml[126,4352+13]..[126,4352+21])
                                  Pexp_ident "last_int" (asmcomp/power/proc.ml[126,4352+13]..[126,4352+21])
                              <arg>
                              Nolabel
                                expression (asmcomp/power/proc.ml[126,4352+24]..[126,4352+25])
                                  Pexp_constant PConst_int (1,None)
                            ]
                      ]
                    expression (asmcomp/power/proc.ml[126,4352+31]..[131,4521+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (asmcomp/power/proc.ml[127,4389+8]..[127,4389+17])
                            Ppat_var "reg_lower" (asmcomp/power/proc.ml[127,4389+8]..[127,4389+17])
                          expression (asmcomp/power/proc.ml[127,4389+20]..[127,4389+33])
                            Pexp_apply
                            expression (asmcomp/power/proc.ml[127,4389+20]..[127,4389+28])
                              Pexp_ident "phys_reg" (asmcomp/power/proc.ml[127,4389+20]..[127,4389+28])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/power/proc.ml[127,4389+29]..[127,4389+33])
                                  Pexp_apply
                                  expression (asmcomp/power/proc.ml[127,4389+29]..[127,4389+30])
                                    Pexp_ident "!" (asmcomp/power/proc.ml[127,4389+29]..[127,4389+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[127,4389+30]..[127,4389+33])
                                        Pexp_ident "int" (asmcomp/power/proc.ml[127,4389+30]..[127,4389+33])
                                  ]
                            ]
                      ]
                      expression (asmcomp/power/proc.ml[128,4426+4]..[130,4490+30])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (asmcomp/power/proc.ml[128,4426+8]..[128,4426+17])
                              Ppat_var "reg_upper" (asmcomp/power/proc.ml[128,4426+8]..[128,4426+17])
                            expression (asmcomp/power/proc.ml[128,4426+20]..[128,4426+39])
                              Pexp_apply
                              expression (asmcomp/power/proc.ml[128,4426+20]..[128,4426+28])
                                Pexp_ident "phys_reg" (asmcomp/power/proc.ml[128,4426+20]..[128,4426+28])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/power/proc.ml[128,4426+29]..[128,4426+39])
                                    Pexp_apply
                                    expression (asmcomp/power/proc.ml[128,4426+32]..[128,4426+33])
                                      Pexp_ident "+" (asmcomp/power/proc.ml[128,4426+32]..[128,4426+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/proc.ml[128,4426+30]..[128,4426+31])
                                          Pexp_constant PConst_int (1,None)
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/proc.ml[128,4426+34]..[128,4426+38])
                                          Pexp_apply
                                          expression (asmcomp/power/proc.ml[128,4426+34]..[128,4426+35])
                                            Pexp_ident "!" (asmcomp/power/proc.ml[128,4426+34]..[128,4426+35])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/power/proc.ml[128,4426+35]..[128,4426+38])
                                                Pexp_ident "int" (asmcomp/power/proc.ml[128,4426+35]..[128,4426+38])
                                          ]
                                    ]
                              ]
                        ]
                        expression (asmcomp/power/proc.ml[129,4469+4]..[130,4490+30])
                          Pexp_sequence
                          expression (asmcomp/power/proc.ml[129,4469+4]..[129,4469+19])
                            Pexp_apply
                            expression (asmcomp/power/proc.ml[129,4469+8]..[129,4469+10])
                              Pexp_ident ":=" (asmcomp/power/proc.ml[129,4469+8]..[129,4469+10])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/power/proc.ml[129,4469+4]..[129,4469+7])
                                  Pexp_ident "int" (asmcomp/power/proc.ml[129,4469+4]..[129,4469+7])
                              <arg>
                              Nolabel
                                expression (asmcomp/power/proc.ml[129,4469+11]..[129,4469+19])
                                  Pexp_apply
                                  expression (asmcomp/power/proc.ml[129,4469+16]..[129,4469+17])
                                    Pexp_ident "+" (asmcomp/power/proc.ml[129,4469+16]..[129,4469+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[129,4469+11]..[129,4469+15])
                                        Pexp_apply
                                        expression (asmcomp/power/proc.ml[129,4469+11]..[129,4469+12])
                                          Pexp_ident "!" (asmcomp/power/proc.ml[129,4469+11]..[129,4469+12])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/proc.ml[129,4469+12]..[129,4469+15])
                                              Pexp_ident "int" (asmcomp/power/proc.ml[129,4469+12]..[129,4469+15])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[129,4469+18]..[129,4469+19])
                                        Pexp_constant PConst_int (2,None)
                                  ]
                            ]
                          expression (asmcomp/power/proc.ml[130,4490+4]..[130,4490+30])
                            Pexp_array
                            [
                              expression (asmcomp/power/proc.ml[130,4490+7]..[130,4490+16])
                                Pexp_ident "reg_lower" (asmcomp/power/proc.ml[130,4490+7]..[130,4490+16])
                              expression (asmcomp/power/proc.ml[130,4490+18]..[130,4490+27])
                                Pexp_ident "reg_upper" (asmcomp/power/proc.ml[130,4490+18]..[130,4490+27])
                            ]
                    Some
                      expression (asmcomp/power/proc.ml[131,4521+11]..[137,4753+5])
                        Pexp_sequence
                        expression (asmcomp/power/proc.ml[132,4538+4]..[132,4538+28])
                          Pexp_apply
                          expression (asmcomp/power/proc.ml[132,4538+8]..[132,4538+10])
                            Pexp_ident ":=" (asmcomp/power/proc.ml[132,4538+8]..[132,4538+10])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/power/proc.ml[132,4538+4]..[132,4538+7])
                                Pexp_ident "ofs" (asmcomp/power/proc.ml[132,4538+4]..[132,4538+7])
                            <arg>
                            Nolabel
                              expression (asmcomp/power/proc.ml[132,4538+11]..[132,4538+28])
                                Pexp_apply
                                expression (asmcomp/power/proc.ml[132,4538+11]..[132,4538+21])
                                  Pexp_ident "Misc.align" (asmcomp/power/proc.ml[132,4538+11]..[132,4538+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[132,4538+22]..[132,4538+26])
                                      Pexp_apply
                                      expression (asmcomp/power/proc.ml[132,4538+22]..[132,4538+23])
                                        Pexp_ident "!" (asmcomp/power/proc.ml[132,4538+22]..[132,4538+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/proc.ml[132,4538+23]..[132,4538+26])
                                            Pexp_ident "ofs" (asmcomp/power/proc.ml[132,4538+23]..[132,4538+26])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[132,4538+27]..[132,4538+28])
                                      Pexp_constant PConst_int (8,None)
                                ]
                          ]
                        expression (asmcomp/power/proc.ml[133,4568+4]..[136,4718+34])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (asmcomp/power/proc.ml[133,4568+8]..[133,4568+19])
                                Ppat_var "stack_lower" (asmcomp/power/proc.ml[133,4568+8]..[133,4568+19])
                              expression (asmcomp/power/proc.ml[133,4568+22]..[133,4568+54])
                                Pexp_apply
                                expression (asmcomp/power/proc.ml[133,4568+22]..[133,4568+32])
                                  Pexp_ident "stack_slot" (asmcomp/power/proc.ml[133,4568+22]..[133,4568+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[133,4568+33]..[133,4568+50])
                                      Pexp_apply
                                      expression (asmcomp/power/proc.ml[133,4568+34]..[133,4568+44])
                                        Pexp_ident "make_stack" (asmcomp/power/proc.ml[133,4568+34]..[133,4568+44])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/proc.ml[133,4568+45]..[133,4568+49])
                                            Pexp_apply
                                            expression (asmcomp/power/proc.ml[133,4568+45]..[133,4568+46])
                                              Pexp_ident "!" (asmcomp/power/proc.ml[133,4568+45]..[133,4568+46])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (asmcomp/power/proc.ml[133,4568+46]..[133,4568+49])
                                                  Pexp_ident "ofs" (asmcomp/power/proc.ml[133,4568+46]..[133,4568+49])
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[133,4568+51]..[133,4568+54])
                                      Pexp_construct "Int" (asmcomp/power/proc.ml[133,4568+51]..[133,4568+54])
                                      None
                                ]
                          ]
                          expression (asmcomp/power/proc.ml[134,4626+4]..[136,4718+34])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (asmcomp/power/proc.ml[134,4626+8]..[134,4626+19])
                                  Ppat_var "stack_upper" (asmcomp/power/proc.ml[134,4626+8]..[134,4626+19])
                                expression (asmcomp/power/proc.ml[134,4626+22]..[134,4626+67])
                                  Pexp_apply
                                  expression (asmcomp/power/proc.ml[134,4626+22]..[134,4626+32])
                                    Pexp_ident "stack_slot" (asmcomp/power/proc.ml[134,4626+22]..[134,4626+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[134,4626+33]..[134,4626+63])
                                        Pexp_apply
                                        expression (asmcomp/power/proc.ml[134,4626+34]..[134,4626+44])
                                          Pexp_ident "make_stack" (asmcomp/power/proc.ml[134,4626+34]..[134,4626+44])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/proc.ml[134,4626+45]..[134,4626+62])
                                              Pexp_apply
                                              expression (asmcomp/power/proc.ml[134,4626+55]..[134,4626+56])
                                                Pexp_ident "+" (asmcomp/power/proc.ml[134,4626+55]..[134,4626+56])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/power/proc.ml[134,4626+46]..[134,4626+54])
                                                    Pexp_ident "size_int" (asmcomp/power/proc.ml[134,4626+46]..[134,4626+54])
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/power/proc.ml[134,4626+57]..[134,4626+61])
                                                    Pexp_apply
                                                    expression (asmcomp/power/proc.ml[134,4626+57]..[134,4626+58])
                                                      Pexp_ident "!" (asmcomp/power/proc.ml[134,4626+57]..[134,4626+58])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (asmcomp/power/proc.ml[134,4626+58]..[134,4626+61])
                                                          Pexp_ident "ofs" (asmcomp/power/proc.ml[134,4626+58]..[134,4626+61])
                                                    ]
                                              ]
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[134,4626+64]..[134,4626+67])
                                        Pexp_construct "Int" (asmcomp/power/proc.ml[134,4626+64]..[134,4626+67])
                                        None
                                  ]
                            ]
                            expression (asmcomp/power/proc.ml[135,4697+4]..[136,4718+34])
                              Pexp_sequence
                              expression (asmcomp/power/proc.ml[135,4697+4]..[135,4697+19])
                                Pexp_apply
                                expression (asmcomp/power/proc.ml[135,4697+8]..[135,4697+10])
                                  Pexp_ident ":=" (asmcomp/power/proc.ml[135,4697+8]..[135,4697+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[135,4697+4]..[135,4697+7])
                                      Pexp_ident "ofs" (asmcomp/power/proc.ml[135,4697+4]..[135,4697+7])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[135,4697+11]..[135,4697+19])
                                      Pexp_apply
                                      expression (asmcomp/power/proc.ml[135,4697+16]..[135,4697+17])
                                        Pexp_ident "+" (asmcomp/power/proc.ml[135,4697+16]..[135,4697+17])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/proc.ml[135,4697+11]..[135,4697+15])
                                            Pexp_apply
                                            expression (asmcomp/power/proc.ml[135,4697+11]..[135,4697+12])
                                              Pexp_ident "!" (asmcomp/power/proc.ml[135,4697+11]..[135,4697+12])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (asmcomp/power/proc.ml[135,4697+12]..[135,4697+15])
                                                  Pexp_ident "ofs" (asmcomp/power/proc.ml[135,4697+12]..[135,4697+15])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/proc.ml[135,4697+18]..[135,4697+19])
                                            Pexp_constant PConst_int (8,None)
                                      ]
                                ]
                              expression (asmcomp/power/proc.ml[136,4718+4]..[136,4718+34])
                                Pexp_array
                                [
                                  expression (asmcomp/power/proc.ml[136,4718+7]..[136,4718+18])
                                    Pexp_ident "stack_lower" (asmcomp/power/proc.ml[136,4718+7]..[136,4718+18])
                                  expression (asmcomp/power/proc.ml[136,4718+20]..[136,4718+31])
                                    Pexp_ident "stack_upper" (asmcomp/power/proc.ml[136,4718+20]..[136,4718+31])
                                ]
    ]
  structure_item (asmcomp/power/proc.ml[139,4760+0]..[152,5230+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[139,4760+4]..[139,4760+23])
          Ppat_var "calling_conventions" (asmcomp/power/proc.ml[139,4760+4]..[139,4760+23])
        expression (asmcomp/power/proc.ml[139,4760+24]..[152,5230+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[139,4760+24]..[139,4760+33])
            Ppat_var "first_int" (asmcomp/power/proc.ml[139,4760+24]..[139,4760+33])
          expression (asmcomp/power/proc.ml[139,4760+34]..[152,5230+27]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/power/proc.ml[139,4760+34]..[139,4760+42])
              Ppat_var "last_int" (asmcomp/power/proc.ml[139,4760+34]..[139,4760+42])
            expression (asmcomp/power/proc.ml[139,4760+43]..[152,5230+27]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (asmcomp/power/proc.ml[139,4760+43]..[139,4760+54])
                Ppat_var "first_float" (asmcomp/power/proc.ml[139,4760+43]..[139,4760+54])
              expression (asmcomp/power/proc.ml[139,4760+55]..[152,5230+27]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (asmcomp/power/proc.ml[139,4760+55]..[139,4760+65])
                  Ppat_var "last_float" (asmcomp/power/proc.ml[139,4760+55]..[139,4760+65])
                expression (asmcomp/power/proc.ml[139,4760+66]..[152,5230+27]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (asmcomp/power/proc.ml[139,4760+66]..[139,4760+76])
                    Ppat_var "make_stack" (asmcomp/power/proc.ml[139,4760+66]..[139,4760+76])
                  expression (asmcomp/power/proc.ml[140,4837+6]..[152,5230+27]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (asmcomp/power/proc.ml[140,4837+6]..[140,4837+9])
                      Ppat_var "arg" (asmcomp/power/proc.ml[140,4837+6]..[140,4837+9])
                    expression (asmcomp/power/proc.ml[141,4849+2]..[152,5230+27])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (asmcomp/power/proc.ml[141,4849+6]..[141,4849+9])
                            Ppat_var "loc" (asmcomp/power/proc.ml[141,4849+6]..[141,4849+9])
                          expression (asmcomp/power/proc.ml[141,4849+12]..[141,4849+51])
                            Pexp_apply
                            expression (asmcomp/power/proc.ml[141,4849+12]..[141,4849+22])
                              Pexp_ident "Array.make" (asmcomp/power/proc.ml[141,4849+12]..[141,4849+22])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/power/proc.ml[141,4849+23]..[141,4849+41])
                                  Pexp_apply
                                  expression (asmcomp/power/proc.ml[141,4849+24]..[141,4849+36])
                                    Pexp_ident "Array.length" (asmcomp/power/proc.ml[141,4849+24]..[141,4849+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[141,4849+37]..[141,4849+40])
                                        Pexp_ident "arg" (asmcomp/power/proc.ml[141,4849+37]..[141,4849+40])
                                  ]
                              <arg>
                              Nolabel
                                expression (asmcomp/power/proc.ml[141,4849+42]..[141,4849+51])
                                  Pexp_ident "Reg.dummy" (asmcomp/power/proc.ml[141,4849+42]..[141,4849+51])
                            ]
                      ]
                      expression (asmcomp/power/proc.ml[142,4904+2]..[152,5230+27])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (asmcomp/power/proc.ml[142,4904+6]..[142,4904+9])
                              Ppat_var "int" (asmcomp/power/proc.ml[142,4904+6]..[142,4904+9])
                            expression (asmcomp/power/proc.ml[142,4904+12]..[142,4904+25])
                              Pexp_apply
                              expression (asmcomp/power/proc.ml[142,4904+12]..[142,4904+15])
                                Pexp_ident "ref" (asmcomp/power/proc.ml[142,4904+12]..[142,4904+15])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/power/proc.ml[142,4904+16]..[142,4904+25])
                                    Pexp_ident "first_int" (asmcomp/power/proc.ml[142,4904+16]..[142,4904+25])
                              ]
                        ]
                        expression (asmcomp/power/proc.ml[143,4933+2]..[152,5230+27])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (asmcomp/power/proc.ml[143,4933+6]..[143,4933+11])
                                Ppat_var "float" (asmcomp/power/proc.ml[143,4933+6]..[143,4933+11])
                              expression (asmcomp/power/proc.ml[143,4933+14]..[143,4933+29])
                                Pexp_apply
                                expression (asmcomp/power/proc.ml[143,4933+14]..[143,4933+17])
                                  Pexp_ident "ref" (asmcomp/power/proc.ml[143,4933+14]..[143,4933+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[143,4933+18]..[143,4933+29])
                                      Pexp_ident "first_float" (asmcomp/power/proc.ml[143,4933+18]..[143,4933+29])
                                ]
                          ]
                          expression (asmcomp/power/proc.ml[144,4966+2]..[152,5230+27])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (asmcomp/power/proc.ml[144,4966+6]..[144,4966+9])
                                  Ppat_var "ofs" (asmcomp/power/proc.ml[144,4966+6]..[144,4966+9])
                                expression (asmcomp/power/proc.ml[144,4966+12]..[144,4966+17])
                                  Pexp_apply
                                  expression (asmcomp/power/proc.ml[144,4966+12]..[144,4966+15])
                                    Pexp_ident "ref" (asmcomp/power/proc.ml[144,4966+12]..[144,4966+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[144,4966+16]..[144,4966+17])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                            ]
                            expression (asmcomp/power/proc.ml[145,4987+2]..[152,5230+27])
                              Pexp_sequence
                              expression (asmcomp/power/proc.ml[145,4987+2]..[151,5222+6])
                                Pexp_for Up
                                pattern (asmcomp/power/proc.ml[145,4987+6]..[145,4987+7])
                                  Ppat_var "i" (asmcomp/power/proc.ml[145,4987+6]..[145,4987+7])
                                expression (asmcomp/power/proc.ml[145,4987+10]..[145,4987+11])
                                  Pexp_constant PConst_int (0,None)
                                expression (asmcomp/power/proc.ml[145,4987+15]..[145,4987+35])
                                  Pexp_apply
                                  expression (asmcomp/power/proc.ml[145,4987+32]..[145,4987+33])
                                    Pexp_ident "-" (asmcomp/power/proc.ml[145,4987+32]..[145,4987+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[145,4987+15]..[145,4987+31])
                                        Pexp_apply
                                        expression (asmcomp/power/proc.ml[145,4987+15]..[145,4987+27])
                                          Pexp_ident "Array.length" (asmcomp/power/proc.ml[145,4987+15]..[145,4987+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/proc.ml[145,4987+28]..[145,4987+31])
                                              Pexp_ident "arg" (asmcomp/power/proc.ml[145,4987+28]..[145,4987+31])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[145,4987+34]..[145,4987+35])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                                expression (asmcomp/power/proc.ml[146,5026+4]..[150,5151+70])
                                  Pexp_match
                                  expression (asmcomp/power/proc.ml[146,5026+10]..[146,5026+17])
                                    Pexp_apply
                                    expression (asmcomp/power/proc.ml[146,5026+10]..[146,5026+17]) ghost
                                      Pexp_ident "Array.get" (asmcomp/power/proc.ml[146,5026+10]..[146,5026+17]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/proc.ml[146,5026+10]..[146,5026+13])
                                          Pexp_ident "arg" (asmcomp/power/proc.ml[146,5026+10]..[146,5026+13])
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/proc.ml[146,5026+15]..[146,5026+16])
                                          Pexp_ident "i" (asmcomp/power/proc.ml[146,5026+15]..[146,5026+16])
                                    ]
                                  [
                                    <case>
                                      pattern (asmcomp/power/proc.ml[147,5049+6]..[147,5049+22])
                                        Ppat_or
                                        pattern (asmcomp/power/proc.ml[147,5049+6]..[147,5049+15])
                                          Ppat_or
                                          pattern (asmcomp/power/proc.ml[147,5049+6]..[147,5049+9])
                                            Ppat_construct "Val" (asmcomp/power/proc.ml[147,5049+6]..[147,5049+9])
                                            None
                                          pattern (asmcomp/power/proc.ml[147,5049+12]..[147,5049+15])
                                            Ppat_construct "Int" (asmcomp/power/proc.ml[147,5049+12]..[147,5049+15])
                                            None
                                        pattern (asmcomp/power/proc.ml[147,5049+18]..[147,5049+22])
                                          Ppat_construct "Addr" (asmcomp/power/proc.ml[147,5049+18]..[147,5049+22])
                                          None
                                      expression (asmcomp/power/proc.ml[148,5075+8]..[148,5075+60])
                                        Pexp_apply
                                        expression (asmcomp/power/proc.ml[148,5075+8]..[148,5075+60]) ghost
                                          Pexp_ident "Array.set" (asmcomp/power/proc.ml[148,5075+8]..[148,5075+60]) ghost
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/proc.ml[148,5075+8]..[148,5075+11])
                                              Pexp_ident "loc" (asmcomp/power/proc.ml[148,5075+8]..[148,5075+11])
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/proc.ml[148,5075+13]..[148,5075+14])
                                              Pexp_ident "i" (asmcomp/power/proc.ml[148,5075+13]..[148,5075+14])
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/proc.ml[148,5075+19]..[148,5075+60])
                                              Pexp_apply
                                              expression (asmcomp/power/proc.ml[148,5075+19]..[148,5075+26])
                                                Pexp_ident "loc_int" (asmcomp/power/proc.ml[148,5075+19]..[148,5075+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/power/proc.ml[148,5075+27]..[148,5075+35])
                                                    Pexp_ident "last_int" (asmcomp/power/proc.ml[148,5075+27]..[148,5075+35])
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/power/proc.ml[148,5075+36]..[148,5075+46])
                                                    Pexp_ident "make_stack" (asmcomp/power/proc.ml[148,5075+36]..[148,5075+46])
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/power/proc.ml[148,5075+47]..[148,5075+52])
                                                    Pexp_construct "false" (asmcomp/power/proc.ml[148,5075+47]..[148,5075+52])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/power/proc.ml[148,5075+53]..[148,5075+56])
                                                    Pexp_ident "int" (asmcomp/power/proc.ml[148,5075+53]..[148,5075+56])
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/power/proc.ml[148,5075+57]..[148,5075+60])
                                                    Pexp_ident "ofs" (asmcomp/power/proc.ml[148,5075+57]..[148,5075+60])
                                              ]
                                        ]
                                    <case>
                                      pattern (asmcomp/power/proc.ml[149,5136+6]..[149,5136+11])
                                        Ppat_construct "Float" (asmcomp/power/proc.ml[149,5136+6]..[149,5136+11])
                                        None
                                      expression (asmcomp/power/proc.ml[150,5151+8]..[150,5151+70])
                                        Pexp_apply
                                        expression (asmcomp/power/proc.ml[150,5151+8]..[150,5151+70]) ghost
                                          Pexp_ident "Array.set" (asmcomp/power/proc.ml[150,5151+8]..[150,5151+70]) ghost
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/proc.ml[150,5151+8]..[150,5151+11])
                                              Pexp_ident "loc" (asmcomp/power/proc.ml[150,5151+8]..[150,5151+11])
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/proc.ml[150,5151+13]..[150,5151+14])
                                              Pexp_ident "i" (asmcomp/power/proc.ml[150,5151+13]..[150,5151+14])
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/proc.ml[150,5151+19]..[150,5151+70])
                                              Pexp_apply
                                              expression (asmcomp/power/proc.ml[150,5151+19]..[150,5151+28])
                                                Pexp_ident "loc_float" (asmcomp/power/proc.ml[150,5151+19]..[150,5151+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/power/proc.ml[150,5151+29]..[150,5151+39])
                                                    Pexp_ident "last_float" (asmcomp/power/proc.ml[150,5151+29]..[150,5151+39])
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/power/proc.ml[150,5151+40]..[150,5151+50])
                                                    Pexp_ident "make_stack" (asmcomp/power/proc.ml[150,5151+40]..[150,5151+50])
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/power/proc.ml[150,5151+51]..[150,5151+56])
                                                    Pexp_construct "false" (asmcomp/power/proc.ml[150,5151+51]..[150,5151+56])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/power/proc.ml[150,5151+57]..[150,5151+60])
                                                    Pexp_ident "int" (asmcomp/power/proc.ml[150,5151+57]..[150,5151+60])
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/power/proc.ml[150,5151+61]..[150,5151+66])
                                                    Pexp_ident "float" (asmcomp/power/proc.ml[150,5151+61]..[150,5151+66])
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/power/proc.ml[150,5151+67]..[150,5151+70])
                                                    Pexp_ident "ofs" (asmcomp/power/proc.ml[150,5151+67]..[150,5151+70])
                                              ]
                                        ]
                                  ]
                              expression (asmcomp/power/proc.ml[152,5230+2]..[152,5230+27])
                                Pexp_tuple
                                [
                                  expression (asmcomp/power/proc.ml[152,5230+3]..[152,5230+6])
                                    Pexp_ident "loc" (asmcomp/power/proc.ml[152,5230+3]..[152,5230+6])
                                  expression (asmcomp/power/proc.ml[152,5230+8]..[152,5230+26])
                                    Pexp_apply
                                    expression (asmcomp/power/proc.ml[152,5230+8]..[152,5230+18])
                                      Pexp_ident "Misc.align" (asmcomp/power/proc.ml[152,5230+8]..[152,5230+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/proc.ml[152,5230+19]..[152,5230+23])
                                          Pexp_apply
                                          expression (asmcomp/power/proc.ml[152,5230+19]..[152,5230+20])
                                            Pexp_ident "!" (asmcomp/power/proc.ml[152,5230+19]..[152,5230+20])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/power/proc.ml[152,5230+20]..[152,5230+23])
                                                Pexp_ident "ofs" (asmcomp/power/proc.ml[152,5230+20]..[152,5230+23])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/proc.ml[152,5230+24]..[152,5230+26])
                                          Pexp_constant PConst_int (16,None)
                                    ]
                                ]
    ]
  structure_item (asmcomp/power/proc.ml[154,5288+0]..[154,5288+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[154,5288+4]..[154,5288+12])
          Ppat_var "incoming" (asmcomp/power/proc.ml[154,5288+4]..[154,5288+12])
        expression (asmcomp/power/proc.ml[154,5288+13]..[154,5288+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[154,5288+13]..[154,5288+16])
            Ppat_var "ofs" (asmcomp/power/proc.ml[154,5288+13]..[154,5288+16])
          expression (asmcomp/power/proc.ml[154,5288+19]..[154,5288+31])
            Pexp_construct "Incoming" (asmcomp/power/proc.ml[154,5288+19]..[154,5288+27])
            Some
              expression (asmcomp/power/proc.ml[154,5288+28]..[154,5288+31])
                Pexp_ident "ofs" (asmcomp/power/proc.ml[154,5288+28]..[154,5288+31])
    ]
  structure_item (asmcomp/power/proc.ml[155,5320+0]..[155,5320+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[155,5320+4]..[155,5320+12])
          Ppat_var "outgoing" (asmcomp/power/proc.ml[155,5320+4]..[155,5320+12])
        expression (asmcomp/power/proc.ml[155,5320+13]..[155,5320+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[155,5320+13]..[155,5320+16])
            Ppat_var "ofs" (asmcomp/power/proc.ml[155,5320+13]..[155,5320+16])
          expression (asmcomp/power/proc.ml[155,5320+19]..[155,5320+31])
            Pexp_construct "Outgoing" (asmcomp/power/proc.ml[155,5320+19]..[155,5320+27])
            Some
              expression (asmcomp/power/proc.ml[155,5320+28]..[155,5320+31])
                Pexp_ident "ofs" (asmcomp/power/proc.ml[155,5320+28]..[155,5320+31])
    ]
  structure_item (asmcomp/power/proc.ml[156,5352+0]..[156,5352+68])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[156,5352+4]..[156,5352+17])
          Ppat_var "not_supported" (asmcomp/power/proc.ml[156,5352+4]..[156,5352+17])
        expression (asmcomp/power/proc.ml[156,5352+18]..[156,5352+68]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[156,5352+18]..[156,5352+22])
            Ppat_var "_ofs" (asmcomp/power/proc.ml[156,5352+18]..[156,5352+22])
          expression (asmcomp/power/proc.ml[156,5352+25]..[156,5352+68])
            Pexp_apply
            expression (asmcomp/power/proc.ml[156,5352+25]..[156,5352+36])
              Pexp_ident "fatal_error" (asmcomp/power/proc.ml[156,5352+25]..[156,5352+36])
            [
              <arg>
              Nolabel
                expression (asmcomp/power/proc.ml[156,5352+37]..[156,5352+68])
                  Pexp_constant PConst_string("Proc.loc_results: cannot call",(asmcomp/power/proc.ml[156,5352+38]..[156,5352+67]),None)
            ]
    ]
  structure_item (asmcomp/power/proc.ml[158,5422+0]..[158,5422+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[158,5422+4]..[158,5422+31])
          Ppat_var "max_arguments_for_tailcalls" (asmcomp/power/proc.ml[158,5422+4]..[158,5422+31])
        expression (asmcomp/power/proc.ml[158,5422+34]..[158,5422+36])
          Pexp_constant PConst_int (16,None)
    ]
  structure_item (asmcomp/power/proc.ml[160,5460+0]..[161,5484+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[160,5460+4]..[160,5460+17])
          Ppat_var "loc_arguments" (asmcomp/power/proc.ml[160,5460+4]..[160,5460+17])
        expression (asmcomp/power/proc.ml[160,5460+18]..[161,5484+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[160,5460+18]..[160,5460+21])
            Ppat_var "arg" (asmcomp/power/proc.ml[160,5460+18]..[160,5460+21])
          expression (asmcomp/power/proc.ml[161,5484+4]..[161,5484+49])
            Pexp_apply
            expression (asmcomp/power/proc.ml[161,5484+4]..[161,5484+23])
              Pexp_ident "calling_conventions" (asmcomp/power/proc.ml[161,5484+4]..[161,5484+23])
            [
              <arg>
              Nolabel
                expression (asmcomp/power/proc.ml[161,5484+24]..[161,5484+25])
                  Pexp_constant PConst_int (0,None)
              <arg>
              Nolabel
                expression (asmcomp/power/proc.ml[161,5484+26]..[161,5484+28])
                  Pexp_constant PConst_int (15,None)
              <arg>
              Nolabel
                expression (asmcomp/power/proc.ml[161,5484+29]..[161,5484+32])
                  Pexp_constant PConst_int (100,None)
              <arg>
              Nolabel
                expression (asmcomp/power/proc.ml[161,5484+33]..[161,5484+36])
                  Pexp_constant PConst_int (112,None)
              <arg>
              Nolabel
                expression (asmcomp/power/proc.ml[161,5484+37]..[161,5484+45])
                  Pexp_ident "outgoing" (asmcomp/power/proc.ml[161,5484+37]..[161,5484+45])
              <arg>
              Nolabel
                expression (asmcomp/power/proc.ml[161,5484+46]..[161,5484+49])
                  Pexp_ident "arg" (asmcomp/power/proc.ml[161,5484+46]..[161,5484+49])
            ]
    ]
  structure_item (asmcomp/power/proc.ml[163,5535+0]..[165,5626+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[163,5535+4]..[163,5535+18])
          Ppat_var "loc_parameters" (asmcomp/power/proc.ml[163,5535+4]..[163,5535+18])
        expression (asmcomp/power/proc.ml[163,5535+19]..[165,5626+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[163,5535+19]..[163,5535+22])
            Ppat_var "arg" (asmcomp/power/proc.ml[163,5535+19]..[163,5535+22])
          expression (asmcomp/power/proc.ml[164,5560+2]..[165,5626+8])
            Pexp_let Nonrec
            [
              <def>
                pattern (asmcomp/power/proc.ml[164,5560+6]..[164,5560+17])
                  Ppat_tuple
                  [
                    pattern (asmcomp/power/proc.ml[164,5560+7]..[164,5560+10])
                      Ppat_var "loc" (asmcomp/power/proc.ml[164,5560+7]..[164,5560+10])
                    pattern (asmcomp/power/proc.ml[164,5560+12]..[164,5560+16])
                      Ppat_var "_ofs" (asmcomp/power/proc.ml[164,5560+12]..[164,5560+16])
                  ]
                expression (asmcomp/power/proc.ml[164,5560+20]..[164,5560+65])
                  Pexp_apply
                  expression (asmcomp/power/proc.ml[164,5560+20]..[164,5560+39])
                    Pexp_ident "calling_conventions" (asmcomp/power/proc.ml[164,5560+20]..[164,5560+39])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[164,5560+40]..[164,5560+41])
                        Pexp_constant PConst_int (0,None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[164,5560+42]..[164,5560+44])
                        Pexp_constant PConst_int (15,None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[164,5560+45]..[164,5560+48])
                        Pexp_constant PConst_int (100,None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[164,5560+49]..[164,5560+52])
                        Pexp_constant PConst_int (112,None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[164,5560+53]..[164,5560+61])
                        Pexp_ident "incoming" (asmcomp/power/proc.ml[164,5560+53]..[164,5560+61])
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[164,5560+62]..[164,5560+65])
                        Pexp_ident "arg" (asmcomp/power/proc.ml[164,5560+62]..[164,5560+65])
                  ]
            ]
            expression (asmcomp/power/proc.ml[165,5626+5]..[165,5626+8])
              Pexp_ident "loc" (asmcomp/power/proc.ml[165,5626+5]..[165,5626+8])
    ]
  structure_item (asmcomp/power/proc.ml[167,5636+0]..[169,5729+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[167,5636+4]..[167,5636+15])
          Ppat_var "loc_results" (asmcomp/power/proc.ml[167,5636+4]..[167,5636+15])
        expression (asmcomp/power/proc.ml[167,5636+16]..[169,5729+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[167,5636+16]..[167,5636+19])
            Ppat_var "res" (asmcomp/power/proc.ml[167,5636+16]..[167,5636+19])
          expression (asmcomp/power/proc.ml[168,5658+2]..[169,5729+8])
            Pexp_let Nonrec
            [
              <def>
                pattern (asmcomp/power/proc.ml[168,5658+6]..[168,5658+17])
                  Ppat_tuple
                  [
                    pattern (asmcomp/power/proc.ml[168,5658+7]..[168,5658+10])
                      Ppat_var "loc" (asmcomp/power/proc.ml[168,5658+7]..[168,5658+10])
                    pattern (asmcomp/power/proc.ml[168,5658+12]..[168,5658+16])
                      Ppat_var "_ofs" (asmcomp/power/proc.ml[168,5658+12]..[168,5658+16])
                  ]
                expression (asmcomp/power/proc.ml[168,5658+20]..[168,5658+70])
                  Pexp_apply
                  expression (asmcomp/power/proc.ml[168,5658+20]..[168,5658+39])
                    Pexp_ident "calling_conventions" (asmcomp/power/proc.ml[168,5658+20]..[168,5658+39])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[168,5658+40]..[168,5658+41])
                        Pexp_constant PConst_int (0,None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[168,5658+42]..[168,5658+44])
                        Pexp_constant PConst_int (15,None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[168,5658+45]..[168,5658+48])
                        Pexp_constant PConst_int (100,None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[168,5658+49]..[168,5658+52])
                        Pexp_constant PConst_int (112,None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[168,5658+53]..[168,5658+66])
                        Pexp_ident "not_supported" (asmcomp/power/proc.ml[168,5658+53]..[168,5658+66])
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[168,5658+67]..[168,5658+70])
                        Pexp_ident "res" (asmcomp/power/proc.ml[168,5658+67]..[168,5658+70])
                  ]
            ]
            expression (asmcomp/power/proc.ml[169,5729+5]..[169,5729+8])
              Pexp_ident "loc" (asmcomp/power/proc.ml[169,5729+5]..[169,5729+8])
    ]
  structure_item (asmcomp/power/proc.ml[197,6957+0]..[221,7806+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[197,6957+4]..[197,6957+32])
          Ppat_var "external_calling_conventions" (asmcomp/power/proc.ml[197,6957+4]..[197,6957+32])
        expression (asmcomp/power/proc.ml[198,6990+4]..[221,7806+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[198,6990+4]..[198,6990+13])
            Ppat_var "first_int" (asmcomp/power/proc.ml[198,6990+4]..[198,6990+13])
          expression (asmcomp/power/proc.ml[198,6990+14]..[221,7806+27]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/power/proc.ml[198,6990+14]..[198,6990+22])
              Ppat_var "last_int" (asmcomp/power/proc.ml[198,6990+14]..[198,6990+22])
            expression (asmcomp/power/proc.ml[198,6990+23]..[221,7806+27]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (asmcomp/power/proc.ml[198,6990+23]..[198,6990+34])
                Ppat_var "first_float" (asmcomp/power/proc.ml[198,6990+23]..[198,6990+34])
              expression (asmcomp/power/proc.ml[198,6990+35]..[221,7806+27]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (asmcomp/power/proc.ml[198,6990+35]..[198,6990+45])
                  Ppat_var "last_float" (asmcomp/power/proc.ml[198,6990+35]..[198,6990+45])
                expression (asmcomp/power/proc.ml[199,7036+4]..[221,7806+27]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (asmcomp/power/proc.ml[199,7036+4]..[199,7036+14])
                    Ppat_var "make_stack" (asmcomp/power/proc.ml[199,7036+4]..[199,7036+14])
                  expression (asmcomp/power/proc.ml[199,7036+15]..[221,7806+27]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (asmcomp/power/proc.ml[199,7036+15]..[199,7036+24])
                      Ppat_var "stack_ofs" (asmcomp/power/proc.ml[199,7036+15]..[199,7036+24])
                    expression (asmcomp/power/proc.ml[199,7036+25]..[221,7806+27]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (asmcomp/power/proc.ml[199,7036+25]..[199,7036+38])
                        Ppat_var "reg_use_stack" (asmcomp/power/proc.ml[199,7036+25]..[199,7036+38])
                      expression (asmcomp/power/proc.ml[199,7036+39]..[221,7806+27]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (asmcomp/power/proc.ml[199,7036+39]..[199,7036+46])
                          Ppat_var "ty_args" (asmcomp/power/proc.ml[199,7036+39]..[199,7036+46])
                        expression (asmcomp/power/proc.ml[200,7085+2]..[221,7806+27])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (asmcomp/power/proc.ml[200,7085+6]..[200,7085+9])
                                Ppat_var "loc" (asmcomp/power/proc.ml[200,7085+6]..[200,7085+9])
                              expression (asmcomp/power/proc.ml[200,7085+12]..[200,7085+60])
                                Pexp_apply
                                expression (asmcomp/power/proc.ml[200,7085+12]..[200,7085+22])
                                  Pexp_ident "Array.make" (asmcomp/power/proc.ml[200,7085+12]..[200,7085+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[200,7085+23]..[200,7085+44])
                                      Pexp_apply
                                      expression (asmcomp/power/proc.ml[200,7085+24]..[200,7085+35])
                                        Pexp_ident "List.length" (asmcomp/power/proc.ml[200,7085+24]..[200,7085+35])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/proc.ml[200,7085+36]..[200,7085+43])
                                            Pexp_ident "ty_args" (asmcomp/power/proc.ml[200,7085+36]..[200,7085+43])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[200,7085+45]..[200,7085+60])
                                      Pexp_array
                                      [
                                        expression (asmcomp/power/proc.ml[200,7085+48]..[200,7085+57])
                                          Pexp_ident "Reg.dummy" (asmcomp/power/proc.ml[200,7085+48]..[200,7085+57])
                                      ]
                                ]
                          ]
                          expression (asmcomp/power/proc.ml[201,7149+2]..[221,7806+27])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (asmcomp/power/proc.ml[201,7149+6]..[201,7149+9])
                                  Ppat_var "int" (asmcomp/power/proc.ml[201,7149+6]..[201,7149+9])
                                expression (asmcomp/power/proc.ml[201,7149+12]..[201,7149+25])
                                  Pexp_apply
                                  expression (asmcomp/power/proc.ml[201,7149+12]..[201,7149+15])
                                    Pexp_ident "ref" (asmcomp/power/proc.ml[201,7149+12]..[201,7149+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/power/proc.ml[201,7149+16]..[201,7149+25])
                                        Pexp_ident "first_int" (asmcomp/power/proc.ml[201,7149+16]..[201,7149+25])
                                  ]
                            ]
                            expression (asmcomp/power/proc.ml[202,7178+2]..[221,7806+27])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (asmcomp/power/proc.ml[202,7178+6]..[202,7178+11])
                                    Ppat_var "float" (asmcomp/power/proc.ml[202,7178+6]..[202,7178+11])
                                  expression (asmcomp/power/proc.ml[202,7178+14]..[202,7178+29])
                                    Pexp_apply
                                    expression (asmcomp/power/proc.ml[202,7178+14]..[202,7178+17])
                                      Pexp_ident "ref" (asmcomp/power/proc.ml[202,7178+14]..[202,7178+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/proc.ml[202,7178+18]..[202,7178+29])
                                          Pexp_ident "first_float" (asmcomp/power/proc.ml[202,7178+18]..[202,7178+29])
                                    ]
                              ]
                              expression (asmcomp/power/proc.ml[203,7211+2]..[221,7806+27])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (asmcomp/power/proc.ml[203,7211+6]..[203,7211+9])
                                      Ppat_var "ofs" (asmcomp/power/proc.ml[203,7211+6]..[203,7211+9])
                                    expression (asmcomp/power/proc.ml[203,7211+12]..[203,7211+25])
                                      Pexp_apply
                                      expression (asmcomp/power/proc.ml[203,7211+12]..[203,7211+15])
                                        Pexp_ident "ref" (asmcomp/power/proc.ml[203,7211+12]..[203,7211+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/proc.ml[203,7211+16]..[203,7211+25])
                                            Pexp_ident "stack_ofs" (asmcomp/power/proc.ml[203,7211+16]..[203,7211+25])
                                      ]
                                ]
                                expression (asmcomp/power/proc.ml[204,7240+2]..[221,7806+27])
                                  Pexp_sequence
                                  expression (asmcomp/power/proc.ml[204,7240+2]..[220,7793+11])
                                    Pexp_apply
                                    expression (asmcomp/power/proc.ml[204,7240+2]..[204,7240+12])
                                      Pexp_ident "List.iteri" (asmcomp/power/proc.ml[204,7240+2]..[204,7240+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/proc.ml[205,7253+4]..[219,7716+76])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (asmcomp/power/proc.ml[205,7253+9]..[205,7253+10])
                                            Ppat_var "i" (asmcomp/power/proc.ml[205,7253+9]..[205,7253+10])
                                          expression (asmcomp/power/proc.ml[205,7253+11]..[219,7716+75]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (asmcomp/power/proc.ml[205,7253+11]..[205,7253+17])
                                              Ppat_var "ty_arg" (asmcomp/power/proc.ml[205,7253+11]..[205,7253+17])
                                            expression (asmcomp/power/proc.ml[206,7274+6]..[219,7716+75])
                                              Pexp_match
                                              expression (asmcomp/power/proc.ml[206,7274+12]..[206,7274+18])
                                                Pexp_ident "ty_arg" (asmcomp/power/proc.ml[206,7274+12]..[206,7274+18])
                                              [
                                                <case>
                                                  pattern (asmcomp/power/proc.ml[207,7298+8]..[207,7298+21])
                                                    Ppat_or
                                                    pattern (asmcomp/power/proc.ml[207,7298+8]..[207,7298+12])
                                                      Ppat_construct "XInt" (asmcomp/power/proc.ml[207,7298+8]..[207,7298+12])
                                                      None
                                                    pattern (asmcomp/power/proc.ml[207,7298+15]..[207,7298+21])
                                                      Ppat_construct "XInt32" (asmcomp/power/proc.ml[207,7298+15]..[207,7298+21])
                                                      None
                                                  expression (asmcomp/power/proc.ml[208,7323+8]..[209,7342+65])
                                                    Pexp_apply
                                                    expression (asmcomp/power/proc.ml[208,7323+8]..[209,7342+65]) ghost
                                                      Pexp_ident "Array.set" (asmcomp/power/proc.ml[208,7323+8]..[209,7342+65]) ghost
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (asmcomp/power/proc.ml[208,7323+8]..[208,7323+11])
                                                          Pexp_ident "loc" (asmcomp/power/proc.ml[208,7323+8]..[208,7323+11])
                                                      <arg>
                                                      Nolabel
                                                        expression (asmcomp/power/proc.ml[208,7323+13]..[208,7323+14])
                                                          Pexp_ident "i" (asmcomp/power/proc.ml[208,7323+13]..[208,7323+14])
                                                      <arg>
                                                      Nolabel
                                                        expression (asmcomp/power/proc.ml[209,7342+10]..[209,7342+65])
                                                          Pexp_array
                                                          [
                                                            expression (asmcomp/power/proc.ml[209,7342+13]..[209,7342+62])
                                                              Pexp_apply
                                                              expression (asmcomp/power/proc.ml[209,7342+13]..[209,7342+20])
                                                                Pexp_ident "loc_int" (asmcomp/power/proc.ml[209,7342+13]..[209,7342+20])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/power/proc.ml[209,7342+21]..[209,7342+29])
                                                                    Pexp_ident "last_int" (asmcomp/power/proc.ml[209,7342+21]..[209,7342+29])
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/power/proc.ml[209,7342+30]..[209,7342+40])
                                                                    Pexp_ident "make_stack" (asmcomp/power/proc.ml[209,7342+30]..[209,7342+40])
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/power/proc.ml[209,7342+41]..[209,7342+54])
                                                                    Pexp_ident "reg_use_stack" (asmcomp/power/proc.ml[209,7342+41]..[209,7342+54])
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/power/proc.ml[209,7342+55]..[209,7342+58])
                                                                    Pexp_ident "int" (asmcomp/power/proc.ml[209,7342+55]..[209,7342+58])
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/power/proc.ml[209,7342+59]..[209,7342+62])
                                                                    Pexp_ident "ofs" (asmcomp/power/proc.ml[209,7342+59]..[209,7342+62])
                                                              ]
                                                          ]
                                                    ]
                                                <case>
                                                  pattern (asmcomp/power/proc.ml[210,7408+8]..[210,7408+14])
                                                    Ppat_construct "XInt64" (asmcomp/power/proc.ml[210,7408+8]..[210,7408+14])
                                                    None
                                                  expression (asmcomp/power/proc.ml[211,7426+10]..[216,7609+69])
                                                    Pexp_ifthenelse
                                                    expression (asmcomp/power/proc.ml[211,7426+13]..[211,7426+25])
                                                      Pexp_apply
                                                      expression (asmcomp/power/proc.ml[211,7426+22]..[211,7426+23])
                                                        Pexp_ident "=" (asmcomp/power/proc.ml[211,7426+22]..[211,7426+23])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (asmcomp/power/proc.ml[211,7426+13]..[211,7426+21])
                                                            Pexp_ident "size_int" (asmcomp/power/proc.ml[211,7426+13]..[211,7426+21])
                                                        <arg>
                                                        Nolabel
                                                          expression (asmcomp/power/proc.ml[211,7426+24]..[211,7426+25])
                                                            Pexp_constant PConst_int (4,None)
                                                      ]
                                                    expression (asmcomp/power/proc.ml[211,7426+31]..[214,7567+13])
                                                      Pexp_sequence
                                                      expression (asmcomp/power/proc.ml[212,7463+12]..[212,7463+38])
                                                        Pexp_assert
                                                        expression (asmcomp/power/proc.ml[212,7463+19]..[212,7463+38])
                                                          Pexp_apply
                                                          expression (asmcomp/power/proc.ml[212,7463+20]..[212,7463+23])
                                                            Pexp_ident "not" (asmcomp/power/proc.ml[212,7463+20]..[212,7463+23])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (asmcomp/power/proc.ml[212,7463+24]..[212,7463+37])
                                                                Pexp_ident "reg_use_stack" (asmcomp/power/proc.ml[212,7463+24]..[212,7463+37])
                                                          ]
                                                      expression (asmcomp/power/proc.ml[213,7503+12]..[213,7503+63])
                                                        Pexp_apply
                                                        expression (asmcomp/power/proc.ml[213,7503+12]..[213,7503+63]) ghost
                                                          Pexp_ident "Array.set" (asmcomp/power/proc.ml[213,7503+12]..[213,7503+63]) ghost
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (asmcomp/power/proc.ml[213,7503+12]..[213,7503+15])
                                                              Pexp_ident "loc" (asmcomp/power/proc.ml[213,7503+12]..[213,7503+15])
                                                          <arg>
                                                          Nolabel
                                                            expression (asmcomp/power/proc.ml[213,7503+17]..[213,7503+18])
                                                              Pexp_ident "i" (asmcomp/power/proc.ml[213,7503+17]..[213,7503+18])
                                                          <arg>
                                                          Nolabel
                                                            expression (asmcomp/power/proc.ml[213,7503+23]..[213,7503+63])
                                                              Pexp_apply
                                                              expression (asmcomp/power/proc.ml[213,7503+23]..[213,7503+35])
                                                                Pexp_ident "loc_int_pair" (asmcomp/power/proc.ml[213,7503+23]..[213,7503+35])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/power/proc.ml[213,7503+36]..[213,7503+44])
                                                                    Pexp_ident "last_int" (asmcomp/power/proc.ml[213,7503+36]..[213,7503+44])
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/power/proc.ml[213,7503+45]..[213,7503+55])
                                                                    Pexp_ident "make_stack" (asmcomp/power/proc.ml[213,7503+45]..[213,7503+55])
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/power/proc.ml[213,7503+56]..[213,7503+59])
                                                                    Pexp_ident "int" (asmcomp/power/proc.ml[213,7503+56]..[213,7503+59])
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/power/proc.ml[213,7503+60]..[213,7503+63])
                                                                    Pexp_ident "ofs" (asmcomp/power/proc.ml[213,7503+60]..[213,7503+63])
                                                              ]
                                                        ]
                                                    Some
                                                      expression (asmcomp/power/proc.ml[215,7586+12]..[216,7609+69])
                                                        Pexp_apply
                                                        expression (asmcomp/power/proc.ml[215,7586+12]..[216,7609+69]) ghost
                                                          Pexp_ident "Array.set" (asmcomp/power/proc.ml[215,7586+12]..[216,7609+69]) ghost
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (asmcomp/power/proc.ml[215,7586+12]..[215,7586+15])
                                                              Pexp_ident "loc" (asmcomp/power/proc.ml[215,7586+12]..[215,7586+15])
                                                          <arg>
                                                          Nolabel
                                                            expression (asmcomp/power/proc.ml[215,7586+17]..[215,7586+18])
                                                              Pexp_ident "i" (asmcomp/power/proc.ml[215,7586+17]..[215,7586+18])
                                                          <arg>
                                                          Nolabel
                                                            expression (asmcomp/power/proc.ml[216,7609+14]..[216,7609+69])
                                                              Pexp_array
                                                              [
                                                                expression (asmcomp/power/proc.ml[216,7609+17]..[216,7609+66])
                                                                  Pexp_apply
                                                                  expression (asmcomp/power/proc.ml[216,7609+17]..[216,7609+24])
                                                                    Pexp_ident "loc_int" (asmcomp/power/proc.ml[216,7609+17]..[216,7609+24])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (asmcomp/power/proc.ml[216,7609+25]..[216,7609+33])
Pexp_ident "last_int" (asmcomp/power/proc.ml[216,7609+25]..[216,7609+33])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (asmcomp/power/proc.ml[216,7609+34]..[216,7609+44])
Pexp_ident "make_stack" (asmcomp/power/proc.ml[216,7609+34]..[216,7609+44])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (asmcomp/power/proc.ml[216,7609+45]..[216,7609+58])
Pexp_ident "reg_use_stack" (asmcomp/power/proc.ml[216,7609+45]..[216,7609+58])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (asmcomp/power/proc.ml[216,7609+59]..[216,7609+62])
Pexp_ident "int" (asmcomp/power/proc.ml[216,7609+59]..[216,7609+62])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (asmcomp/power/proc.ml[216,7609+63]..[216,7609+66])
Pexp_ident "ofs" (asmcomp/power/proc.ml[216,7609+63]..[216,7609+66])
                                                                  ]
                                                              ]
                                                        ]
                                                <case>
                                                  pattern (asmcomp/power/proc.ml[217,7679+8]..[217,7679+14])
                                                    Ppat_construct "XFloat" (asmcomp/power/proc.ml[217,7679+8]..[217,7679+14])
                                                    None
                                                  expression (asmcomp/power/proc.ml[218,7697+8]..[219,7716+75])
                                                    Pexp_apply
                                                    expression (asmcomp/power/proc.ml[218,7697+8]..[219,7716+75]) ghost
                                                      Pexp_ident "Array.set" (asmcomp/power/proc.ml[218,7697+8]..[219,7716+75]) ghost
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (asmcomp/power/proc.ml[218,7697+8]..[218,7697+11])
                                                          Pexp_ident "loc" (asmcomp/power/proc.ml[218,7697+8]..[218,7697+11])
                                                      <arg>
                                                      Nolabel
                                                        expression (asmcomp/power/proc.ml[218,7697+13]..[218,7697+14])
                                                          Pexp_ident "i" (asmcomp/power/proc.ml[218,7697+13]..[218,7697+14])
                                                      <arg>
                                                      Nolabel
                                                        expression (asmcomp/power/proc.ml[219,7716+10]..[219,7716+75])
                                                          Pexp_array
                                                          [
                                                            expression (asmcomp/power/proc.ml[219,7716+13]..[219,7716+72])
                                                              Pexp_apply
                                                              expression (asmcomp/power/proc.ml[219,7716+13]..[219,7716+22])
                                                                Pexp_ident "loc_float" (asmcomp/power/proc.ml[219,7716+13]..[219,7716+22])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/power/proc.ml[219,7716+23]..[219,7716+33])
                                                                    Pexp_ident "last_float" (asmcomp/power/proc.ml[219,7716+23]..[219,7716+33])
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/power/proc.ml[219,7716+34]..[219,7716+44])
                                                                    Pexp_ident "make_stack" (asmcomp/power/proc.ml[219,7716+34]..[219,7716+44])
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/power/proc.ml[219,7716+45]..[219,7716+58])
                                                                    Pexp_ident "reg_use_stack" (asmcomp/power/proc.ml[219,7716+45]..[219,7716+58])
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/power/proc.ml[219,7716+59]..[219,7716+62])
                                                                    Pexp_ident "int" (asmcomp/power/proc.ml[219,7716+59]..[219,7716+62])
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/power/proc.ml[219,7716+63]..[219,7716+68])
                                                                    Pexp_ident "float" (asmcomp/power/proc.ml[219,7716+63]..[219,7716+68])
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/power/proc.ml[219,7716+69]..[219,7716+72])
                                                                    Pexp_ident "ofs" (asmcomp/power/proc.ml[219,7716+69]..[219,7716+72])
                                                              ]
                                                          ]
                                                    ]
                                              ]
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/proc.ml[220,7793+4]..[220,7793+11])
                                          Pexp_ident "ty_args" (asmcomp/power/proc.ml[220,7793+4]..[220,7793+11])
                                    ]
                                  expression (asmcomp/power/proc.ml[221,7806+2]..[221,7806+27])
                                    Pexp_tuple
                                    [
                                      expression (asmcomp/power/proc.ml[221,7806+3]..[221,7806+6])
                                        Pexp_ident "loc" (asmcomp/power/proc.ml[221,7806+3]..[221,7806+6])
                                      expression (asmcomp/power/proc.ml[221,7806+8]..[221,7806+26])
                                        Pexp_apply
                                        expression (asmcomp/power/proc.ml[221,7806+8]..[221,7806+18])
                                          Pexp_ident "Misc.align" (asmcomp/power/proc.ml[221,7806+8]..[221,7806+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/proc.ml[221,7806+19]..[221,7806+23])
                                              Pexp_apply
                                              expression (asmcomp/power/proc.ml[221,7806+19]..[221,7806+20])
                                                Pexp_ident "!" (asmcomp/power/proc.ml[221,7806+19]..[221,7806+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/power/proc.ml[221,7806+20]..[221,7806+23])
                                                    Pexp_ident "ofs" (asmcomp/power/proc.ml[221,7806+20]..[221,7806+23])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/power/proc.ml[221,7806+24]..[221,7806+26])
                                              Pexp_constant PConst_int (16,None)
                                        ]
                                    ]
    ]
  structure_item (asmcomp/power/proc.ml[223,7863+0]..[242,8483+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[223,7863+4]..[223,7863+26])
          Ppat_var "loc_external_arguments" (asmcomp/power/proc.ml[223,7863+4]..[223,7863+26])
        expression (asmcomp/power/proc.ml[223,7863+27]..[242,8483+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[223,7863+27]..[223,7863+34])
            Ppat_var "ty_args" (asmcomp/power/proc.ml[223,7863+27]..[223,7863+34])
          expression (asmcomp/power/proc.ml[224,7900+2]..[242,8483+19])
            Pexp_match
            expression (asmcomp/power/proc.ml[224,7900+8]..[224,7900+11])
              Pexp_ident "abi" (asmcomp/power/proc.ml[224,7900+8]..[224,7900+11])
            [
              <case>
                pattern (asmcomp/power/proc.ml[225,7917+4]..[225,7917+9])
                  Ppat_construct "ELF32" (asmcomp/power/proc.ml[225,7917+4]..[225,7917+9])
                  None
                expression (asmcomp/power/proc.ml[226,7930+6]..[226,7930+71])
                  Pexp_apply
                  expression (asmcomp/power/proc.ml[226,7930+6]..[226,7930+34])
                    Pexp_ident "external_calling_conventions" (asmcomp/power/proc.ml[226,7930+6]..[226,7930+34])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[226,7930+35]..[226,7930+36])
                        Pexp_constant PConst_int (0,None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[226,7930+37]..[226,7930+38])
                        Pexp_constant PConst_int (7,None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[226,7930+39]..[226,7930+42])
                        Pexp_constant PConst_int (100,None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[226,7930+43]..[226,7930+46])
                        Pexp_constant PConst_int (107,None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[226,7930+47]..[226,7930+55])
                        Pexp_ident "outgoing" (asmcomp/power/proc.ml[226,7930+47]..[226,7930+55])
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[226,7930+56]..[226,7930+57])
                        Pexp_constant PConst_int (8,None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[226,7930+58]..[226,7930+63])
                        Pexp_construct "false" (asmcomp/power/proc.ml[226,7930+58]..[226,7930+63])
                        None
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[226,7930+64]..[226,7930+71])
                        Pexp_ident "ty_args" (asmcomp/power/proc.ml[226,7930+64]..[226,7930+71])
                  ]
              <case>
                pattern (asmcomp/power/proc.ml[227,8002+4]..[227,8002+11])
                  Ppat_construct "ELF64v1" (asmcomp/power/proc.ml[227,8002+4]..[227,8002+11])
                  None
                expression (asmcomp/power/proc.ml[228,8017+6]..[230,8116+23])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (asmcomp/power/proc.ml[228,8017+10]..[228,8017+20])
                        Ppat_tuple
                        [
                          pattern (asmcomp/power/proc.ml[228,8017+11]..[228,8017+14])
                            Ppat_var "loc" (asmcomp/power/proc.ml[228,8017+11]..[228,8017+14])
                          pattern (asmcomp/power/proc.ml[228,8017+16]..[228,8017+19])
                            Ppat_var "ofs" (asmcomp/power/proc.ml[228,8017+16]..[228,8017+19])
                        ]
                      expression (asmcomp/power/proc.ml[229,8040+8]..[229,8040+72])
                        Pexp_apply
                        expression (asmcomp/power/proc.ml[229,8040+8]..[229,8040+36])
                          Pexp_ident "external_calling_conventions" (asmcomp/power/proc.ml[229,8040+8]..[229,8040+36])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[229,8040+37]..[229,8040+38])
                              Pexp_constant PConst_int (0,None)
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[229,8040+39]..[229,8040+40])
                              Pexp_constant PConst_int (7,None)
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[229,8040+41]..[229,8040+44])
                              Pexp_constant PConst_int (100,None)
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[229,8040+45]..[229,8040+48])
                              Pexp_constant PConst_int (112,None)
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[229,8040+49]..[229,8040+57])
                              Pexp_ident "outgoing" (asmcomp/power/proc.ml[229,8040+49]..[229,8040+57])
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[229,8040+58]..[229,8040+59])
                              Pexp_constant PConst_int (0,None)
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[229,8040+60]..[229,8040+64])
                              Pexp_construct "true" (asmcomp/power/proc.ml[229,8040+60]..[229,8040+64])
                              None
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[229,8040+65]..[229,8040+72])
                              Pexp_ident "ty_args" (asmcomp/power/proc.ml[229,8040+65]..[229,8040+72])
                        ]
                  ]
                  expression (asmcomp/power/proc.ml[230,8116+6]..[230,8116+23])
                    Pexp_tuple
                    [
                      expression (asmcomp/power/proc.ml[230,8116+7]..[230,8116+10])
                        Pexp_ident "loc" (asmcomp/power/proc.ml[230,8116+7]..[230,8116+10])
                      expression (asmcomp/power/proc.ml[230,8116+12]..[230,8116+22])
                        Pexp_apply
                        expression (asmcomp/power/proc.ml[230,8116+12]..[230,8116+15])
                          Pexp_ident "max" (asmcomp/power/proc.ml[230,8116+12]..[230,8116+15])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[230,8116+16]..[230,8116+19])
                              Pexp_ident "ofs" (asmcomp/power/proc.ml[230,8116+16]..[230,8116+19])
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[230,8116+20]..[230,8116+22])
                              Pexp_constant PConst_int (64,None)
                        ]
                    ]
              <case>
                pattern (asmcomp/power/proc.ml[231,8140+4]..[231,8140+11])
                  Ppat_construct "ELF64v2" (asmcomp/power/proc.ml[231,8140+4]..[231,8140+11])
                  None
                expression (asmcomp/power/proc.ml[232,8155+6]..[242,8483+19])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (asmcomp/power/proc.ml[232,8155+10]..[232,8155+20])
                        Ppat_tuple
                        [
                          pattern (asmcomp/power/proc.ml[232,8155+11]..[232,8155+14])
                            Ppat_var "loc" (asmcomp/power/proc.ml[232,8155+11]..[232,8155+14])
                          pattern (asmcomp/power/proc.ml[232,8155+16]..[232,8155+19])
                            Ppat_var "ofs" (asmcomp/power/proc.ml[232,8155+16]..[232,8155+19])
                        ]
                      expression (asmcomp/power/proc.ml[233,8178+8]..[233,8178+72])
                        Pexp_apply
                        expression (asmcomp/power/proc.ml[233,8178+8]..[233,8178+36])
                          Pexp_ident "external_calling_conventions" (asmcomp/power/proc.ml[233,8178+8]..[233,8178+36])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[233,8178+37]..[233,8178+38])
                              Pexp_constant PConst_int (0,None)
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[233,8178+39]..[233,8178+40])
                              Pexp_constant PConst_int (7,None)
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[233,8178+41]..[233,8178+44])
                              Pexp_constant PConst_int (100,None)
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[233,8178+45]..[233,8178+48])
                              Pexp_constant PConst_int (112,None)
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[233,8178+49]..[233,8178+57])
                              Pexp_ident "outgoing" (asmcomp/power/proc.ml[233,8178+49]..[233,8178+57])
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[233,8178+58]..[233,8178+59])
                              Pexp_constant PConst_int (0,None)
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[233,8178+60]..[233,8178+64])
                              Pexp_construct "true" (asmcomp/power/proc.ml[233,8178+60]..[233,8178+64])
                              None
                          <arg>
                          Nolabel
                            expression (asmcomp/power/proc.ml[233,8178+65]..[233,8178+72])
                              Pexp_ident "ty_args" (asmcomp/power/proc.ml[233,8178+65]..[233,8178+72])
                        ]
                  ]
                  expression (asmcomp/power/proc.ml[234,8254+6]..[242,8483+19])
                    Pexp_ifthenelse
                    expression (asmcomp/power/proc.ml[234,8254+9]..[240,8440+20])
                      Pexp_apply
                      expression (asmcomp/power/proc.ml[234,8254+9]..[234,8254+24])
                        Pexp_ident "Array.fold_left" (asmcomp/power/proc.ml[234,8254+9]..[234,8254+24])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/power/proc.ml[235,8279+11]..[239,8414+25])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (asmcomp/power/proc.ml[235,8279+16]..[235,8279+19])
                              Ppat_var "stk" (asmcomp/power/proc.ml[235,8279+16]..[235,8279+19])
                            expression (asmcomp/power/proc.ml[235,8279+20]..[239,8414+24]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (asmcomp/power/proc.ml[235,8279+20]..[235,8279+21])
                                Ppat_var "r" (asmcomp/power/proc.ml[235,8279+20]..[235,8279+21])
                              expression (asmcomp/power/proc.ml[236,8304+14]..[239,8414+24])
                                Pexp_sequence
                                expression (asmcomp/power/proc.ml[236,8304+14]..[236,8304+41])
                                  Pexp_assert
                                  expression (asmcomp/power/proc.ml[236,8304+21]..[236,8304+41])
                                    Pexp_apply
                                    expression (asmcomp/power/proc.ml[236,8304+37]..[236,8304+38])
                                      Pexp_ident "=" (asmcomp/power/proc.ml[236,8304+37]..[236,8304+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/proc.ml[236,8304+22]..[236,8304+36])
                                          Pexp_apply
                                          expression (asmcomp/power/proc.ml[236,8304+22]..[236,8304+34])
                                            Pexp_ident "Array.length" (asmcomp/power/proc.ml[236,8304+22]..[236,8304+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/power/proc.ml[236,8304+35]..[236,8304+36])
                                                Pexp_ident "r" (asmcomp/power/proc.ml[236,8304+35]..[236,8304+36])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/power/proc.ml[236,8304+39]..[236,8304+40])
                                          Pexp_constant PConst_int (1,None)
                                    ]
                                expression (asmcomp/power/proc.ml[237,8347+14]..[239,8414+24])
                                  Pexp_match
                                  expression (asmcomp/power/proc.ml[237,8347+20]..[237,8347+29])
                                    Pexp_field
                                    expression (asmcomp/power/proc.ml[237,8347+20]..[237,8347+25])
                                      Pexp_apply
                                      expression (asmcomp/power/proc.ml[237,8347+20]..[237,8347+25]) ghost
                                        Pexp_ident "Array.get" (asmcomp/power/proc.ml[237,8347+20]..[237,8347+25]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/proc.ml[237,8347+20]..[237,8347+21])
                                            Pexp_ident "r" (asmcomp/power/proc.ml[237,8347+20]..[237,8347+21])
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/proc.ml[237,8347+23]..[237,8347+24])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                    "loc" (asmcomp/power/proc.ml[237,8347+26]..[237,8347+29])
                                  [
                                    <case>
                                      pattern (asmcomp/power/proc.ml[238,8382+16]..[238,8382+23])
                                        Ppat_construct "Stack" (asmcomp/power/proc.ml[238,8382+16]..[238,8382+21])
                                        Some
                                          []
                                          pattern (asmcomp/power/proc.ml[238,8382+22]..[238,8382+23])
                                            Ppat_any
                                      expression (asmcomp/power/proc.ml[238,8382+27]..[238,8382+31])
                                        Pexp_construct "true" (asmcomp/power/proc.ml[238,8382+27]..[238,8382+31])
                                        None
                                    <case>
                                      pattern (asmcomp/power/proc.ml[239,8414+16]..[239,8414+17])
                                        Ppat_any
                                      expression (asmcomp/power/proc.ml[239,8414+21]..[239,8414+24])
                                        Pexp_ident "stk" (asmcomp/power/proc.ml[239,8414+21]..[239,8414+24])
                                  ]
                        <arg>
                        Nolabel
                          expression (asmcomp/power/proc.ml[240,8440+11]..[240,8440+16])
                            Pexp_construct "false" (asmcomp/power/proc.ml[240,8440+11]..[240,8440+16])
                            None
                        <arg>
                        Nolabel
                          expression (asmcomp/power/proc.ml[240,8440+17]..[240,8440+20])
                            Pexp_ident "loc" (asmcomp/power/proc.ml[240,8440+17]..[240,8440+20])
                      ]
                    expression (asmcomp/power/proc.ml[241,8461+11]..[241,8461+21])
                      Pexp_tuple
                      [
                        expression (asmcomp/power/proc.ml[241,8461+12]..[241,8461+15])
                          Pexp_ident "loc" (asmcomp/power/proc.ml[241,8461+12]..[241,8461+15])
                        expression (asmcomp/power/proc.ml[241,8461+17]..[241,8461+20])
                          Pexp_ident "ofs" (asmcomp/power/proc.ml[241,8461+17]..[241,8461+20])
                      ]
                    Some
                      expression (asmcomp/power/proc.ml[242,8483+11]..[242,8483+19])
                        Pexp_tuple
                        [
                          expression (asmcomp/power/proc.ml[242,8483+12]..[242,8483+15])
                            Pexp_ident "loc" (asmcomp/power/proc.ml[242,8483+12]..[242,8483+15])
                          expression (asmcomp/power/proc.ml[242,8483+17]..[242,8483+18])
                            Pexp_constant PConst_int (0,None)
                        ]
            ]
    ]
  structure_item (asmcomp/power/proc.ml[246,8542+0]..[248,8643+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[246,8542+4]..[246,8542+24])
          Ppat_var "loc_external_results" (asmcomp/power/proc.ml[246,8542+4]..[246,8542+24])
        expression (asmcomp/power/proc.ml[246,8542+25]..[248,8643+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[246,8542+25]..[246,8542+28])
            Ppat_var "res" (asmcomp/power/proc.ml[246,8542+25]..[246,8542+28])
          expression (asmcomp/power/proc.ml[247,8573+2]..[248,8643+8])
            Pexp_let Nonrec
            [
              <def>
                pattern (asmcomp/power/proc.ml[247,8573+6]..[247,8573+17])
                  Ppat_tuple
                  [
                    pattern (asmcomp/power/proc.ml[247,8573+7]..[247,8573+10])
                      Ppat_var "loc" (asmcomp/power/proc.ml[247,8573+7]..[247,8573+10])
                    pattern (asmcomp/power/proc.ml[247,8573+12]..[247,8573+16])
                      Ppat_var "_ofs" (asmcomp/power/proc.ml[247,8573+12]..[247,8573+16])
                  ]
                expression (asmcomp/power/proc.ml[247,8573+20]..[247,8573+69])
                  Pexp_apply
                  expression (asmcomp/power/proc.ml[247,8573+20]..[247,8573+39])
                    Pexp_ident "calling_conventions" (asmcomp/power/proc.ml[247,8573+20]..[247,8573+39])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[247,8573+40]..[247,8573+41])
                        Pexp_constant PConst_int (0,None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[247,8573+42]..[247,8573+43])
                        Pexp_constant PConst_int (1,None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[247,8573+44]..[247,8573+47])
                        Pexp_constant PConst_int (100,None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[247,8573+48]..[247,8573+51])
                        Pexp_constant PConst_int (100,None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[247,8573+52]..[247,8573+65])
                        Pexp_ident "not_supported" (asmcomp/power/proc.ml[247,8573+52]..[247,8573+65])
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[247,8573+66]..[247,8573+69])
                        Pexp_ident "res" (asmcomp/power/proc.ml[247,8573+66]..[247,8573+69])
                  ]
            ]
            expression (asmcomp/power/proc.ml[248,8643+5]..[248,8643+8])
              Pexp_ident "loc" (asmcomp/power/proc.ml[248,8643+5]..[248,8643+8])
    ]
  structure_item (asmcomp/power/proc.ml[252,8684+0]..[252,8684+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[252,8684+4]..[252,8684+18])
          Ppat_var "loc_exn_bucket" (asmcomp/power/proc.ml[252,8684+4]..[252,8684+18])
        expression (asmcomp/power/proc.ml[252,8684+21]..[252,8684+31])
          Pexp_apply
          expression (asmcomp/power/proc.ml[252,8684+21]..[252,8684+29])
            Pexp_ident "phys_reg" (asmcomp/power/proc.ml[252,8684+21]..[252,8684+29])
          [
            <arg>
            Nolabel
              expression (asmcomp/power/proc.ml[252,8684+30]..[252,8684+31])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (asmcomp/power/proc.ml[270,9314+0]..[274,9438+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[270,9314+4]..[270,9314+25])
          Ppat_var "int_dwarf_reg_numbers" (asmcomp/power/proc.ml[270,9314+4]..[270,9314+25])
        expression (asmcomp/power/proc.ml[271,9342+2]..[274,9438+4])
          Pexp_array
          [
            expression (asmcomp/power/proc.ml[271,9342+5]..[271,9342+6])
              Pexp_constant PConst_int (3,None)
            expression (asmcomp/power/proc.ml[271,9342+8]..[271,9342+9])
              Pexp_constant PConst_int (4,None)
            expression (asmcomp/power/proc.ml[271,9342+11]..[271,9342+12])
              Pexp_constant PConst_int (5,None)
            expression (asmcomp/power/proc.ml[271,9342+14]..[271,9342+15])
              Pexp_constant PConst_int (6,None)
            expression (asmcomp/power/proc.ml[271,9342+17]..[271,9342+18])
              Pexp_constant PConst_int (7,None)
            expression (asmcomp/power/proc.ml[271,9342+20]..[271,9342+21])
              Pexp_constant PConst_int (8,None)
            expression (asmcomp/power/proc.ml[271,9342+23]..[271,9342+24])
              Pexp_constant PConst_int (9,None)
            expression (asmcomp/power/proc.ml[271,9342+26]..[271,9342+28])
              Pexp_constant PConst_int (10,None)
            expression (asmcomp/power/proc.ml[272,9372+5]..[272,9372+7])
              Pexp_constant PConst_int (14,None)
            expression (asmcomp/power/proc.ml[272,9372+9]..[272,9372+11])
              Pexp_constant PConst_int (15,None)
            expression (asmcomp/power/proc.ml[272,9372+13]..[272,9372+15])
              Pexp_constant PConst_int (16,None)
            expression (asmcomp/power/proc.ml[272,9372+17]..[272,9372+19])
              Pexp_constant PConst_int (17,None)
            expression (asmcomp/power/proc.ml[272,9372+21]..[272,9372+23])
              Pexp_constant PConst_int (18,None)
            expression (asmcomp/power/proc.ml[272,9372+25]..[272,9372+27])
              Pexp_constant PConst_int (19,None)
            expression (asmcomp/power/proc.ml[272,9372+29]..[272,9372+31])
              Pexp_constant PConst_int (20,None)
            expression (asmcomp/power/proc.ml[272,9372+33]..[272,9372+35])
              Pexp_constant PConst_int (21,None)
            expression (asmcomp/power/proc.ml[273,9409+5]..[273,9409+7])
              Pexp_constant PConst_int (22,None)
            expression (asmcomp/power/proc.ml[273,9409+9]..[273,9409+11])
              Pexp_constant PConst_int (23,None)
            expression (asmcomp/power/proc.ml[273,9409+13]..[273,9409+15])
              Pexp_constant PConst_int (24,None)
            expression (asmcomp/power/proc.ml[273,9409+17]..[273,9409+19])
              Pexp_constant PConst_int (25,None)
            expression (asmcomp/power/proc.ml[273,9409+21]..[273,9409+23])
              Pexp_constant PConst_int (26,None)
            expression (asmcomp/power/proc.ml[273,9409+25]..[273,9409+27])
              Pexp_constant PConst_int (27,None)
          ]
    ]
  structure_item (asmcomp/power/proc.ml[276,9444+0]..[281,9618+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[276,9444+4]..[276,9444+27])
          Ppat_var "float_dwarf_reg_numbers" (asmcomp/power/proc.ml[276,9444+4]..[276,9444+27])
        expression (asmcomp/power/proc.ml[277,9474+2]..[281,9618+4])
          Pexp_array
          [
            expression (asmcomp/power/proc.ml[277,9474+5]..[277,9474+7])
              Pexp_constant PConst_int (33,None)
            expression (asmcomp/power/proc.ml[277,9474+9]..[277,9474+11])
              Pexp_constant PConst_int (34,None)
            expression (asmcomp/power/proc.ml[277,9474+13]..[277,9474+15])
              Pexp_constant PConst_int (35,None)
            expression (asmcomp/power/proc.ml[277,9474+17]..[277,9474+19])
              Pexp_constant PConst_int (36,None)
            expression (asmcomp/power/proc.ml[277,9474+21]..[277,9474+23])
              Pexp_constant PConst_int (37,None)
            expression (asmcomp/power/proc.ml[277,9474+25]..[277,9474+27])
              Pexp_constant PConst_int (38,None)
            expression (asmcomp/power/proc.ml[277,9474+29]..[277,9474+31])
              Pexp_constant PConst_int (39,None)
            expression (asmcomp/power/proc.ml[278,9507+5]..[278,9507+7])
              Pexp_constant PConst_int (40,None)
            expression (asmcomp/power/proc.ml[278,9507+9]..[278,9507+11])
              Pexp_constant PConst_int (41,None)
            expression (asmcomp/power/proc.ml[278,9507+13]..[278,9507+15])
              Pexp_constant PConst_int (42,None)
            expression (asmcomp/power/proc.ml[278,9507+17]..[278,9507+19])
              Pexp_constant PConst_int (43,None)
            expression (asmcomp/power/proc.ml[278,9507+21]..[278,9507+23])
              Pexp_constant PConst_int (44,None)
            expression (asmcomp/power/proc.ml[278,9507+25]..[278,9507+27])
              Pexp_constant PConst_int (45,None)
            expression (asmcomp/power/proc.ml[278,9507+29]..[278,9507+31])
              Pexp_constant PConst_int (46,None)
            expression (asmcomp/power/proc.ml[278,9507+33]..[278,9507+35])
              Pexp_constant PConst_int (47,None)
            expression (asmcomp/power/proc.ml[279,9544+5]..[279,9544+7])
              Pexp_constant PConst_int (48,None)
            expression (asmcomp/power/proc.ml[279,9544+9]..[279,9544+11])
              Pexp_constant PConst_int (49,None)
            expression (asmcomp/power/proc.ml[279,9544+13]..[279,9544+15])
              Pexp_constant PConst_int (50,None)
            expression (asmcomp/power/proc.ml[279,9544+17]..[279,9544+19])
              Pexp_constant PConst_int (51,None)
            expression (asmcomp/power/proc.ml[279,9544+21]..[279,9544+23])
              Pexp_constant PConst_int (52,None)
            expression (asmcomp/power/proc.ml[279,9544+25]..[279,9544+27])
              Pexp_constant PConst_int (53,None)
            expression (asmcomp/power/proc.ml[279,9544+29]..[279,9544+31])
              Pexp_constant PConst_int (54,None)
            expression (asmcomp/power/proc.ml[279,9544+33]..[279,9544+35])
              Pexp_constant PConst_int (55,None)
            expression (asmcomp/power/proc.ml[280,9581+5]..[280,9581+7])
              Pexp_constant PConst_int (56,None)
            expression (asmcomp/power/proc.ml[280,9581+9]..[280,9581+11])
              Pexp_constant PConst_int (57,None)
            expression (asmcomp/power/proc.ml[280,9581+13]..[280,9581+15])
              Pexp_constant PConst_int (58,None)
            expression (asmcomp/power/proc.ml[280,9581+17]..[280,9581+19])
              Pexp_constant PConst_int (59,None)
            expression (asmcomp/power/proc.ml[280,9581+21]..[280,9581+23])
              Pexp_constant PConst_int (60,None)
            expression (asmcomp/power/proc.ml[280,9581+25]..[280,9581+27])
              Pexp_constant PConst_int (61,None)
            expression (asmcomp/power/proc.ml[280,9581+29]..[280,9581+31])
              Pexp_constant PConst_int (62,None)
            expression (asmcomp/power/proc.ml[280,9581+33]..[280,9581+35])
              Pexp_constant PConst_int (63,None)
          ]
    ]
  structure_item (asmcomp/power/proc.ml[283,9624+0]..[287,9751+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[283,9624+4]..[283,9624+26])
          Ppat_var "dwarf_register_numbers" (asmcomp/power/proc.ml[283,9624+4]..[283,9624+26])
        expression (asmcomp/power/proc.ml[283,9624+27]..[287,9751+60]) ghost
          Pexp_fun
          Labelled "reg_class"
          None
          pattern (asmcomp/power/proc.ml[283,9624+28]..[283,9624+37])
            Ppat_var "reg_class" (asmcomp/power/proc.ml[283,9624+28]..[283,9624+37])
          expression (asmcomp/power/proc.ml[284,9664+2]..[287,9751+60])
            Pexp_match
            expression (asmcomp/power/proc.ml[284,9664+8]..[284,9664+17])
              Pexp_ident "reg_class" (asmcomp/power/proc.ml[284,9664+8]..[284,9664+17])
            [
              <case>
                pattern (asmcomp/power/proc.ml[285,9687+4]..[285,9687+5])
                  Ppat_constant PConst_int (0,None)
                expression (asmcomp/power/proc.ml[285,9687+9]..[285,9687+30])
                  Pexp_ident "int_dwarf_reg_numbers" (asmcomp/power/proc.ml[285,9687+9]..[285,9687+30])
              <case>
                pattern (asmcomp/power/proc.ml[286,9718+4]..[286,9718+5])
                  Ppat_constant PConst_int (1,None)
                expression (asmcomp/power/proc.ml[286,9718+9]..[286,9718+32])
                  Pexp_ident "float_dwarf_reg_numbers" (asmcomp/power/proc.ml[286,9718+9]..[286,9718+32])
              <case>
                pattern (asmcomp/power/proc.ml[287,9751+4]..[287,9751+5])
                  Ppat_any
                expression (asmcomp/power/proc.ml[287,9751+9]..[287,9751+60])
                  Pexp_apply
                  expression (asmcomp/power/proc.ml[287,9751+9]..[287,9751+26])
                    Pexp_ident "Misc.fatal_errorf" (asmcomp/power/proc.ml[287,9751+9]..[287,9751+26])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[287,9751+27]..[287,9751+50])
                        Pexp_constant PConst_string("Bad register class %d",(asmcomp/power/proc.ml[287,9751+28]..[287,9751+49]),None)
                    <arg>
                    Nolabel
                      expression (asmcomp/power/proc.ml[287,9751+51]..[287,9751+60])
                        Pexp_ident "reg_class" (asmcomp/power/proc.ml[287,9751+51]..[287,9751+60])
                  ]
            ]
    ]
  structure_item (asmcomp/power/proc.ml[289,9813+0]..[289,9813+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[289,9813+4]..[289,9813+35])
          Ppat_var "stack_ptr_dwarf_register_number" (asmcomp/power/proc.ml[289,9813+4]..[289,9813+35])
        expression (asmcomp/power/proc.ml[289,9813+38]..[289,9813+39])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (asmcomp/power/proc.ml[293,9886+0]..[293,9886+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[293,9886+4]..[293,9886+21])
          Ppat_var "regs_are_volatile" (asmcomp/power/proc.ml[293,9886+4]..[293,9886+21])
        expression (asmcomp/power/proc.ml[293,9886+22]..[293,9886+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[293,9886+22]..[293,9886+25])
            Ppat_var "_rs" (asmcomp/power/proc.ml[293,9886+22]..[293,9886+25])
          expression (asmcomp/power/proc.ml[293,9886+28]..[293,9886+33])
            Pexp_construct "false" (asmcomp/power/proc.ml[293,9886+28]..[293,9886+33])
            None
    ]
  structure_item (asmcomp/power/proc.ml[297,9962+0]..[300,10051+70])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[297,9962+4]..[297,9962+23])
          Ppat_var "destroyed_at_c_call" (asmcomp/power/proc.ml[297,9962+4]..[297,9962+23])
        expression (asmcomp/power/proc.ml[298,9988+2]..[300,10051+70])
          Pexp_apply
          expression (asmcomp/power/proc.ml[298,9988+2]..[298,9988+15])
            Pexp_ident "Array.of_list" (asmcomp/power/proc.ml[298,9988+2]..[298,9988+15])
          [
            <arg>
            Nolabel
              expression (asmcomp/power/proc.ml[298,9988+15]..[300,10051+70])
                Pexp_apply
                expression (asmcomp/power/proc.ml[298,9988+16]..[298,9988+24])
                  Pexp_ident "List.map" (asmcomp/power/proc.ml[298,9988+16]..[298,9988+24])
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/power/proc.ml[298,9988+25]..[298,9988+33])
                      Pexp_ident "phys_reg" (asmcomp/power/proc.ml[298,9988+25]..[298,9988+33])
                  <arg>
                  Nolabel
                    expression (asmcomp/power/proc.ml[299,10022+4]..[300,10051+69])
                      Pexp_construct "::" (asmcomp/power/proc.ml[299,10022+5]..[300,10051+69]) ghost
                      Some
                        expression (asmcomp/power/proc.ml[299,10022+5]..[300,10051+69]) ghost
                          Pexp_tuple
                          [
                            expression (asmcomp/power/proc.ml[299,10022+5]..[299,10022+6])
                              Pexp_constant PConst_int (0,None)
                            expression (asmcomp/power/proc.ml[299,10022+8]..[300,10051+69]) ghost
                              Pexp_construct "::" (asmcomp/power/proc.ml[299,10022+8]..[300,10051+69]) ghost
                              Some
                                expression (asmcomp/power/proc.ml[299,10022+8]..[300,10051+69]) ghost
                                  Pexp_tuple
                                  [
                                    expression (asmcomp/power/proc.ml[299,10022+8]..[299,10022+9])
                                      Pexp_constant PConst_int (1,None)
                                    expression (asmcomp/power/proc.ml[299,10022+11]..[300,10051+69]) ghost
                                      Pexp_construct "::" (asmcomp/power/proc.ml[299,10022+11]..[300,10051+69]) ghost
                                      Some
                                        expression (asmcomp/power/proc.ml[299,10022+11]..[300,10051+69]) ghost
                                          Pexp_tuple
                                          [
                                            expression (asmcomp/power/proc.ml[299,10022+11]..[299,10022+12])
                                              Pexp_constant PConst_int (2,None)
                                            expression (asmcomp/power/proc.ml[299,10022+14]..[300,10051+69]) ghost
                                              Pexp_construct "::" (asmcomp/power/proc.ml[299,10022+14]..[300,10051+69]) ghost
                                              Some
                                                expression (asmcomp/power/proc.ml[299,10022+14]..[300,10051+69]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (asmcomp/power/proc.ml[299,10022+14]..[299,10022+15])
                                                      Pexp_constant PConst_int (3,None)
                                                    expression (asmcomp/power/proc.ml[299,10022+17]..[300,10051+69]) ghost
                                                      Pexp_construct "::" (asmcomp/power/proc.ml[299,10022+17]..[300,10051+69]) ghost
                                                      Some
                                                        expression (asmcomp/power/proc.ml[299,10022+17]..[300,10051+69]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (asmcomp/power/proc.ml[299,10022+17]..[299,10022+18])
                                                              Pexp_constant PConst_int (4,None)
                                                            expression (asmcomp/power/proc.ml[299,10022+20]..[300,10051+69]) ghost
                                                              Pexp_construct "::" (asmcomp/power/proc.ml[299,10022+20]..[300,10051+69]) ghost
                                                              Some
                                                                expression (asmcomp/power/proc.ml[299,10022+20]..[300,10051+69]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (asmcomp/power/proc.ml[299,10022+20]..[299,10022+21])
                                                                      Pexp_constant PConst_int (5,None)
                                                                    expression (asmcomp/power/proc.ml[299,10022+23]..[300,10051+69]) ghost
                                                                      Pexp_construct "::" (asmcomp/power/proc.ml[299,10022+23]..[300,10051+69]) ghost
                                                                      Some
expression (asmcomp/power/proc.ml[299,10022+23]..[300,10051+69]) ghost
  Pexp_tuple
  [
    expression (asmcomp/power/proc.ml[299,10022+23]..[299,10022+24])
      Pexp_constant PConst_int (6,None)
    expression (asmcomp/power/proc.ml[299,10022+26]..[300,10051+69]) ghost
      Pexp_construct "::" (asmcomp/power/proc.ml[299,10022+26]..[300,10051+69]) ghost
      Some
        expression (asmcomp/power/proc.ml[299,10022+26]..[300,10051+69]) ghost
          Pexp_tuple
          [
            expression (asmcomp/power/proc.ml[299,10022+26]..[299,10022+27])
              Pexp_constant PConst_int (7,None)
            expression (asmcomp/power/proc.ml[300,10051+5]..[300,10051+69]) ghost
              Pexp_construct "::" (asmcomp/power/proc.ml[300,10051+5]..[300,10051+69]) ghost
              Some
                expression (asmcomp/power/proc.ml[300,10051+5]..[300,10051+69]) ghost
                  Pexp_tuple
                  [
                    expression (asmcomp/power/proc.ml[300,10051+5]..[300,10051+8])
                      Pexp_constant PConst_int (100,None)
                    expression (asmcomp/power/proc.ml[300,10051+10]..[300,10051+69]) ghost
                      Pexp_construct "::" (asmcomp/power/proc.ml[300,10051+10]..[300,10051+69]) ghost
                      Some
                        expression (asmcomp/power/proc.ml[300,10051+10]..[300,10051+69]) ghost
                          Pexp_tuple
                          [
                            expression (asmcomp/power/proc.ml[300,10051+10]..[300,10051+13])
                              Pexp_constant PConst_int (101,None)
                            expression (asmcomp/power/proc.ml[300,10051+15]..[300,10051+69]) ghost
                              Pexp_construct "::" (asmcomp/power/proc.ml[300,10051+15]..[300,10051+69]) ghost
                              Some
                                expression (asmcomp/power/proc.ml[300,10051+15]..[300,10051+69]) ghost
                                  Pexp_tuple
                                  [
                                    expression (asmcomp/power/proc.ml[300,10051+15]..[300,10051+18])
                                      Pexp_constant PConst_int (102,None)
                                    expression (asmcomp/power/proc.ml[300,10051+20]..[300,10051+69]) ghost
                                      Pexp_construct "::" (asmcomp/power/proc.ml[300,10051+20]..[300,10051+69]) ghost
                                      Some
                                        expression (asmcomp/power/proc.ml[300,10051+20]..[300,10051+69]) ghost
                                          Pexp_tuple
                                          [
                                            expression (asmcomp/power/proc.ml[300,10051+20]..[300,10051+23])
                                              Pexp_constant PConst_int (103,None)
                                            expression (asmcomp/power/proc.ml[300,10051+25]..[300,10051+69]) ghost
                                              Pexp_construct "::" (asmcomp/power/proc.ml[300,10051+25]..[300,10051+69]) ghost
                                              Some
                                                expression (asmcomp/power/proc.ml[300,10051+25]..[300,10051+69]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (asmcomp/power/proc.ml[300,10051+25]..[300,10051+28])
                                                      Pexp_constant PConst_int (104,None)
                                                    expression (asmcomp/power/proc.ml[300,10051+30]..[300,10051+69]) ghost
                                                      Pexp_construct "::" (asmcomp/power/proc.ml[300,10051+30]..[300,10051+69]) ghost
                                                      Some
                                                        expression (asmcomp/power/proc.ml[300,10051+30]..[300,10051+69]) ghost
                                                          Pexp_tuple
                                                          [
                                                            expression (asmcomp/power/proc.ml[300,10051+30]..[300,10051+33])
                                                              Pexp_constant PConst_int (105,None)
                                                            expression (asmcomp/power/proc.ml[300,10051+35]..[300,10051+69]) ghost
                                                              Pexp_construct "::" (asmcomp/power/proc.ml[300,10051+35]..[300,10051+69]) ghost
                                                              Some
                                                                expression (asmcomp/power/proc.ml[300,10051+35]..[300,10051+69]) ghost
                                                                  Pexp_tuple
                                                                  [
                                                                    expression (asmcomp/power/proc.ml[300,10051+35]..[300,10051+38])
                                                                      Pexp_constant PConst_int (106,None)
                                                                    expression (asmcomp/power/proc.ml[300,10051+40]..[300,10051+69]) ghost
                                                                      Pexp_construct "::" (asmcomp/power/proc.ml[300,10051+40]..[300,10051+69]) ghost
                                                                      Some
expression (asmcomp/power/proc.ml[300,10051+40]..[300,10051+69]) ghost
  Pexp_tuple
  [
    expression (asmcomp/power/proc.ml[300,10051+40]..[300,10051+43])
      Pexp_constant PConst_int (107,None)
    expression (asmcomp/power/proc.ml[300,10051+45]..[300,10051+69]) ghost
      Pexp_construct "::" (asmcomp/power/proc.ml[300,10051+45]..[300,10051+69]) ghost
      Some
        expression (asmcomp/power/proc.ml[300,10051+45]..[300,10051+69]) ghost
          Pexp_tuple
          [
            expression (asmcomp/power/proc.ml[300,10051+45]..[300,10051+48])
              Pexp_constant PConst_int (108,None)
            expression (asmcomp/power/proc.ml[300,10051+50]..[300,10051+69]) ghost
              Pexp_construct "::" (asmcomp/power/proc.ml[300,10051+50]..[300,10051+69]) ghost
              Some
                expression (asmcomp/power/proc.ml[300,10051+50]..[300,10051+69]) ghost
                  Pexp_tuple
                  [
                    expression (asmcomp/power/proc.ml[300,10051+50]..[300,10051+53])
                      Pexp_constant PConst_int (109,None)
                    expression (asmcomp/power/proc.ml[300,10051+55]..[300,10051+69]) ghost
                      Pexp_construct "::" (asmcomp/power/proc.ml[300,10051+55]..[300,10051+69]) ghost
                      Some
                        expression (asmcomp/power/proc.ml[300,10051+55]..[300,10051+69]) ghost
                          Pexp_tuple
                          [
                            expression (asmcomp/power/proc.ml[300,10051+55]..[300,10051+58])
                              Pexp_constant PConst_int (110,None)
                            expression (asmcomp/power/proc.ml[300,10051+60]..[300,10051+69]) ghost
                              Pexp_construct "::" (asmcomp/power/proc.ml[300,10051+60]..[300,10051+69]) ghost
                              Some
                                expression (asmcomp/power/proc.ml[300,10051+60]..[300,10051+69]) ghost
                                  Pexp_tuple
                                  [
                                    expression (asmcomp/power/proc.ml[300,10051+60]..[300,10051+63])
                                      Pexp_constant PConst_int (111,None)
                                    expression (asmcomp/power/proc.ml[300,10051+65]..[300,10051+69]) ghost
                                      Pexp_construct "::" (asmcomp/power/proc.ml[300,10051+65]..[300,10051+69]) ghost
                                      Some
                                        expression (asmcomp/power/proc.ml[300,10051+65]..[300,10051+69]) ghost
                                          Pexp_tuple
                                          [
                                            expression (asmcomp/power/proc.ml[300,10051+65]..[300,10051+68])
                                              Pexp_constant PConst_int (112,None)
                                            expression (asmcomp/power/proc.ml[300,10051+68]..[300,10051+69]) ghost
                                              Pexp_construct "[]" (asmcomp/power/proc.ml[300,10051+68]..[300,10051+69]) ghost
                                              None
                                          ]
                                  ]
                          ]
                  ]
          ]
  ]
                                                                  ]
                                                          ]
                                                  ]
                                          ]
                                  ]
                          ]
                  ]
          ]
  ]
                                                                  ]
                                                          ]
                                                  ]
                                          ]
                                  ]
                          ]
                ]
          ]
    ]
  structure_item (asmcomp/power/proc.ml[302,10123+0]..[306,10303+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[302,10123+4]..[302,10123+21])
          Ppat_var "destroyed_at_oper" (asmcomp/power/proc.ml[302,10123+4]..[302,10123+21])
        expression (asmcomp/power/proc.ml[302,10123+24]..[306,10303+13])
          Pexp_function
          [
            <case>
              pattern (asmcomp/power/proc.ml[303,10156+4]..[303,10156+63])
                Ppat_construct "Iop" (asmcomp/power/proc.ml[303,10156+4]..[303,10156+7])
                Some
                  []
                  pattern (asmcomp/power/proc.ml[303,10156+7]..[303,10156+63])
                    Ppat_or
                    pattern (asmcomp/power/proc.ml[303,10156+8]..[303,10156+31])
                      Ppat_or
                      pattern (asmcomp/power/proc.ml[303,10156+8]..[303,10156+17])
                        Ppat_construct "Icall_ind" (asmcomp/power/proc.ml[303,10156+8]..[303,10156+17])
                        None
                      pattern (asmcomp/power/proc.ml[303,10156+20]..[303,10156+31])
                        Ppat_construct "Icall_imm" (asmcomp/power/proc.ml[303,10156+20]..[303,10156+29])
                        Some
                          []
                          pattern (asmcomp/power/proc.ml[303,10156+30]..[303,10156+31])
                            Ppat_any
                    pattern (asmcomp/power/proc.ml[303,10156+34]..[303,10156+62])
                      Ppat_construct "Iextcall" (asmcomp/power/proc.ml[303,10156+34]..[303,10156+42])
                      Some
                        []
                        pattern (asmcomp/power/proc.ml[303,10156+43]..[303,10156+62])
                          Ppat_record Open
                          [
                            "alloc" (asmcomp/power/proc.ml[303,10156+45]..[303,10156+50])
                              pattern (asmcomp/power/proc.ml[303,10156+53]..[303,10156+57])
                                Ppat_construct "true" (asmcomp/power/proc.ml[303,10156+53]..[303,10156+57])
                                None
                          ]
              expression (asmcomp/power/proc.ml[304,10223+4]..[304,10223+17])
                Pexp_ident "all_phys_regs" (asmcomp/power/proc.ml[304,10223+4]..[304,10223+17])
            <case>
              pattern (asmcomp/power/proc.ml[305,10241+4]..[305,10241+38])
                Ppat_construct "Iop" (asmcomp/power/proc.ml[305,10241+4]..[305,10241+7])
                Some
                  []
                  pattern (asmcomp/power/proc.ml[305,10241+7]..[305,10241+38])
                    Ppat_construct "Iextcall" (asmcomp/power/proc.ml[305,10241+8]..[305,10241+16])
                    Some
                      []
                      pattern (asmcomp/power/proc.ml[305,10241+17]..[305,10241+37])
                        Ppat_record Open
                        [
                          "alloc" (asmcomp/power/proc.ml[305,10241+19]..[305,10241+24])
                            pattern (asmcomp/power/proc.ml[305,10241+27]..[305,10241+32])
                              Ppat_construct "false" (asmcomp/power/proc.ml[305,10241+27]..[305,10241+32])
                              None
                        ]
              expression (asmcomp/power/proc.ml[305,10241+42]..[305,10241+61])
                Pexp_ident "destroyed_at_c_call" (asmcomp/power/proc.ml[305,10241+42]..[305,10241+61])
            <case>
              pattern (asmcomp/power/proc.ml[306,10303+4]..[306,10303+5])
                Ppat_any
              expression (asmcomp/power/proc.ml[306,10303+9]..[306,10303+13])
                Pexp_array
                []
          ]
    ]
  structure_item (asmcomp/power/proc.ml[308,10318+0]..[308,10318+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[308,10318+4]..[308,10318+22])
          Ppat_var "destroyed_at_raise" (asmcomp/power/proc.ml[308,10318+4]..[308,10318+22])
        expression (asmcomp/power/proc.ml[308,10318+25]..[308,10318+38])
          Pexp_ident "all_phys_regs" (asmcomp/power/proc.ml[308,10318+25]..[308,10318+38])
    ]
  structure_item (asmcomp/power/proc.ml[310,10358+0]..[310,10358+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[310,10358+4]..[310,10358+30])
          Ppat_var "destroyed_at_reloadretaddr" (asmcomp/power/proc.ml[310,10358+4]..[310,10358+30])
        expression (asmcomp/power/proc.ml[310,10358+33]..[310,10358+50])
          Pexp_array
          [
            expression (asmcomp/power/proc.ml[310,10358+36]..[310,10358+47])
              Pexp_apply
              expression (asmcomp/power/proc.ml[310,10358+36]..[310,10358+44])
                Pexp_ident "phys_reg" (asmcomp/power/proc.ml[310,10358+36]..[310,10358+44])
              [
                <arg>
                Nolabel
                  expression (asmcomp/power/proc.ml[310,10358+45]..[310,10358+47])
                    Pexp_constant PConst_int (11,None)
              ]
          ]
    ]
  structure_item (asmcomp/power/proc.ml[314,10443+0]..[316,10502+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[314,10443+4]..[314,10443+26])
          Ppat_var "safe_register_pressure" (asmcomp/power/proc.ml[314,10443+4]..[314,10443+26])
        expression (asmcomp/power/proc.ml[314,10443+29]..[316,10502+11])
          Pexp_function
          [
            <case>
              pattern (asmcomp/power/proc.ml[315,10481+4]..[315,10481+14])
                Ppat_construct "Iextcall" (asmcomp/power/proc.ml[315,10481+4]..[315,10481+12])
                Some
                  []
                  pattern (asmcomp/power/proc.ml[315,10481+13]..[315,10481+14])
                    Ppat_any
              expression (asmcomp/power/proc.ml[315,10481+18]..[315,10481+20])
                Pexp_constant PConst_int (14,None)
            <case>
              pattern (asmcomp/power/proc.ml[316,10502+4]..[316,10502+5])
                Ppat_any
              expression (asmcomp/power/proc.ml[316,10502+9]..[316,10502+11])
                Pexp_constant PConst_int (23,None)
          ]
    ]
  structure_item (asmcomp/power/proc.ml[318,10515+0]..[320,10583+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[318,10515+4]..[318,10515+25])
          Ppat_var "max_register_pressure" (asmcomp/power/proc.ml[318,10515+4]..[318,10515+25])
        expression (asmcomp/power/proc.ml[318,10515+28]..[320,10583+21])
          Pexp_function
          [
            <case>
              pattern (asmcomp/power/proc.ml[319,10552+4]..[319,10552+14])
                Ppat_construct "Iextcall" (asmcomp/power/proc.ml[319,10552+4]..[319,10552+12])
                Some
                  []
                  pattern (asmcomp/power/proc.ml[319,10552+13]..[319,10552+14])
                    Ppat_any
              expression (asmcomp/power/proc.ml[319,10552+18]..[319,10552+30])
                Pexp_array
                [
                  expression (asmcomp/power/proc.ml[319,10552+21]..[319,10552+23])
                    Pexp_constant PConst_int (14,None)
                  expression (asmcomp/power/proc.ml[319,10552+25]..[319,10552+27])
                    Pexp_constant PConst_int (18,None)
                ]
            <case>
              pattern (asmcomp/power/proc.ml[320,10583+4]..[320,10583+5])
                Ppat_any
              expression (asmcomp/power/proc.ml[320,10583+9]..[320,10583+21])
                Pexp_array
                [
                  expression (asmcomp/power/proc.ml[320,10583+12]..[320,10583+14])
                    Pexp_constant PConst_int (23,None)
                  expression (asmcomp/power/proc.ml[320,10583+16]..[320,10583+18])
                    Pexp_constant PConst_int (30,None)
                ]
          ]
    ]
  structure_item (asmcomp/power/proc.ml[325,10679+0]..[328,10754+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[325,10679+4]..[325,10679+33])
          Ppat_var "reserved_stack_space_required" (asmcomp/power/proc.ml[325,10679+4]..[325,10679+33])
        expression (asmcomp/power/proc.ml[325,10679+34]..[328,10754+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[325,10679+34]..[325,10679+36])
            Ppat_construct "()" (asmcomp/power/proc.ml[325,10679+34]..[325,10679+36])
            None
          expression (asmcomp/power/proc.ml[326,10718+2]..[328,10754+29])
            Pexp_match
            expression (asmcomp/power/proc.ml[326,10718+8]..[326,10718+11])
              Pexp_ident "abi" (asmcomp/power/proc.ml[326,10718+8]..[326,10718+11])
            [
              <case>
                pattern (asmcomp/power/proc.ml[327,10735+4]..[327,10735+9])
                  Ppat_construct "ELF32" (asmcomp/power/proc.ml[327,10735+4]..[327,10735+9])
                  None
                expression (asmcomp/power/proc.ml[327,10735+13]..[327,10735+18])
                  Pexp_construct "false" (asmcomp/power/proc.ml[327,10735+13]..[327,10735+18])
                  None
              <case>
                pattern (asmcomp/power/proc.ml[328,10754+4]..[328,10754+21])
                  Ppat_or
                  pattern (asmcomp/power/proc.ml[328,10754+4]..[328,10754+11])
                    Ppat_construct "ELF64v1" (asmcomp/power/proc.ml[328,10754+4]..[328,10754+11])
                    None
                  pattern (asmcomp/power/proc.ml[328,10754+14]..[328,10754+21])
                    Ppat_construct "ELF64v2" (asmcomp/power/proc.ml[328,10754+14]..[328,10754+21])
                    None
                expression (asmcomp/power/proc.ml[328,10754+25]..[328,10754+29])
                  Pexp_construct "true" (asmcomp/power/proc.ml[328,10754+25]..[328,10754+29])
                  None
            ]
    ]
  structure_item (asmcomp/power/proc.ml[330,10785+0]..[339,11014+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[330,10785+4]..[330,10785+18])
          Ppat_var "frame_required" (asmcomp/power/proc.ml[330,10785+4]..[330,10785+18])
        expression (asmcomp/power/proc.ml[330,10785+19]..[339,11014+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[330,10785+19]..[330,10785+21])
            Ppat_var "fd" (asmcomp/power/proc.ml[330,10785+19]..[330,10785+21])
          expression (asmcomp/power/proc.ml[331,10809+2]..[339,11014+42])
            Pexp_let Nonrec
            [
              <def>
                pattern (asmcomp/power/proc.ml[331,10809+6]..[331,10809+14])
                  Ppat_var "is_elf32" (asmcomp/power/proc.ml[331,10809+6]..[331,10809+14])
                expression (asmcomp/power/proc.ml[332,10826+4]..[334,10865+32])
                  Pexp_match
                  expression (asmcomp/power/proc.ml[332,10826+10]..[332,10826+13])
                    Pexp_ident "abi" (asmcomp/power/proc.ml[332,10826+10]..[332,10826+13])
                  [
                    <case>
                      pattern (asmcomp/power/proc.ml[333,10845+6]..[333,10845+11])
                        Ppat_construct "ELF32" (asmcomp/power/proc.ml[333,10845+6]..[333,10845+11])
                        None
                      expression (asmcomp/power/proc.ml[333,10845+15]..[333,10845+19])
                        Pexp_construct "true" (asmcomp/power/proc.ml[333,10845+15]..[333,10845+19])
                        None
                    <case>
                      pattern (asmcomp/power/proc.ml[334,10865+6]..[334,10865+23])
                        Ppat_or
                        pattern (asmcomp/power/proc.ml[334,10865+6]..[334,10865+13])
                          Ppat_construct "ELF64v1" (asmcomp/power/proc.ml[334,10865+6]..[334,10865+13])
                          None
                        pattern (asmcomp/power/proc.ml[334,10865+16]..[334,10865+23])
                          Ppat_construct "ELF64v2" (asmcomp/power/proc.ml[334,10865+16]..[334,10865+23])
                          None
                      expression (asmcomp/power/proc.ml[334,10865+27]..[334,10865+32])
                        Pexp_construct "false" (asmcomp/power/proc.ml[334,10865+27]..[334,10865+32])
                        None
                  ]
            ]
            expression (asmcomp/power/proc.ml[336,10903+2]..[339,11014+42])
              Pexp_apply
              expression (asmcomp/power/proc.ml[337,10938+4]..[337,10938+6])
                Pexp_ident "||" (asmcomp/power/proc.ml[337,10938+4]..[337,10938+6])
              [
                <arg>
                Nolabel
                  expression (asmcomp/power/proc.ml[336,10903+2]..[336,10903+34])
                    Pexp_apply
                    expression (asmcomp/power/proc.ml[336,10903+2]..[336,10903+31])
                      Pexp_ident "reserved_stack_space_required" (asmcomp/power/proc.ml[336,10903+2]..[336,10903+31])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/power/proc.ml[336,10903+32]..[336,10903+34])
                          Pexp_construct "()" (asmcomp/power/proc.ml[336,10903+32]..[336,10903+34])
                          None
                    ]
                <arg>
                Nolabel
                  expression (asmcomp/power/proc.ml[337,10938+7]..[339,11014+42])
                    Pexp_apply
                    expression (asmcomp/power/proc.ml[338,10976+4]..[338,10976+6])
                      Pexp_ident "||" (asmcomp/power/proc.ml[338,10976+4]..[338,10976+6])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/power/proc.ml[337,10938+7]..[337,10938+37])
                          Pexp_apply
                          expression (asmcomp/power/proc.ml[337,10938+34]..[337,10938+35])
                            Pexp_ident ">" (asmcomp/power/proc.ml[337,10938+34]..[337,10938+35])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/power/proc.ml[337,10938+7]..[337,10938+33])
                                Pexp_apply
                                expression (asmcomp/power/proc.ml[337,10938+7]..[337,10938+33]) ghost
                                  Pexp_ident "Array.get" (asmcomp/power/proc.ml[337,10938+7]..[337,10938+33]) ghost
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[337,10938+7]..[337,10938+29])
                                      Pexp_field
                                      expression (asmcomp/power/proc.ml[337,10938+7]..[337,10938+9])
                                        Pexp_ident "fd" (asmcomp/power/proc.ml[337,10938+7]..[337,10938+9])
                                      "fun_num_stack_slots" (asmcomp/power/proc.ml[337,10938+10]..[337,10938+29])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[337,10938+31]..[337,10938+32])
                                      Pexp_constant PConst_int (0,None)
                                ]
                            <arg>
                            Nolabel
                              expression (asmcomp/power/proc.ml[337,10938+36]..[337,10938+37])
                                Pexp_constant PConst_int (0,None)
                          ]
                      <arg>
                      Nolabel
                        expression (asmcomp/power/proc.ml[338,10976+7]..[339,11014+42])
                          Pexp_apply
                          expression (asmcomp/power/proc.ml[339,11014+4]..[339,11014+6])
                            Pexp_ident "||" (asmcomp/power/proc.ml[339,11014+4]..[339,11014+6])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/power/proc.ml[338,10976+7]..[338,10976+37])
                                Pexp_apply
                                expression (asmcomp/power/proc.ml[338,10976+34]..[338,10976+35])
                                  Pexp_ident ">" (asmcomp/power/proc.ml[338,10976+34]..[338,10976+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[338,10976+7]..[338,10976+33])
                                      Pexp_apply
                                      expression (asmcomp/power/proc.ml[338,10976+7]..[338,10976+33]) ghost
                                        Pexp_ident "Array.get" (asmcomp/power/proc.ml[338,10976+7]..[338,10976+33]) ghost
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/proc.ml[338,10976+7]..[338,10976+29])
                                            Pexp_field
                                            expression (asmcomp/power/proc.ml[338,10976+7]..[338,10976+9])
                                              Pexp_ident "fd" (asmcomp/power/proc.ml[338,10976+7]..[338,10976+9])
                                            "fun_num_stack_slots" (asmcomp/power/proc.ml[338,10976+10]..[338,10976+29])
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/proc.ml[338,10976+31]..[338,10976+32])
                                            Pexp_constant PConst_int (1,None)
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[338,10976+36]..[338,10976+37])
                                      Pexp_constant PConst_int (0,None)
                                ]
                            <arg>
                            Nolabel
                              expression (asmcomp/power/proc.ml[339,11014+7]..[339,11014+42])
                                Pexp_apply
                                expression (asmcomp/power/proc.ml[339,11014+30]..[339,11014+32])
                                  Pexp_ident "&&" (asmcomp/power/proc.ml[339,11014+30]..[339,11014+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[339,11014+8]..[339,11014+29])
                                      Pexp_field
                                      expression (asmcomp/power/proc.ml[339,11014+8]..[339,11014+10])
                                        Pexp_ident "fd" (asmcomp/power/proc.ml[339,11014+8]..[339,11014+10])
                                      "fun_contains_calls" (asmcomp/power/proc.ml[339,11014+11]..[339,11014+29])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[339,11014+33]..[339,11014+41])
                                      Pexp_ident "is_elf32" (asmcomp/power/proc.ml[339,11014+33]..[339,11014+41])
                                ]
                          ]
                    ]
              ]
    ]
  structure_item (asmcomp/power/proc.ml[341,11058+0]..[342,11085+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[341,11058+4]..[341,11058+21])
          Ppat_var "prologue_required" (asmcomp/power/proc.ml[341,11058+4]..[341,11058+21])
        expression (asmcomp/power/proc.ml[341,11058+22]..[342,11085+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[341,11058+22]..[341,11058+24])
            Ppat_var "fd" (asmcomp/power/proc.ml[341,11058+22]..[341,11058+24])
          expression (asmcomp/power/proc.ml[342,11085+2]..[342,11085+19])
            Pexp_apply
            expression (asmcomp/power/proc.ml[342,11085+2]..[342,11085+16])
              Pexp_ident "frame_required" (asmcomp/power/proc.ml[342,11085+2]..[342,11085+16])
            [
              <arg>
              Nolabel
                expression (asmcomp/power/proc.ml[342,11085+17]..[342,11085+19])
                  Pexp_ident "fd" (asmcomp/power/proc.ml[342,11085+17]..[342,11085+19])
            ]
    ]
  structure_item (asmcomp/power/proc.ml[346,11135+0]..[349,11278+79])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[346,11135+4]..[346,11135+17])
          Ppat_var "assemble_file" (asmcomp/power/proc.ml[346,11135+4]..[346,11135+17])
        expression (asmcomp/power/proc.ml[346,11135+18]..[349,11278+79]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[346,11135+18]..[346,11135+24])
            Ppat_var "infile" (asmcomp/power/proc.ml[346,11135+18]..[346,11135+24])
          expression (asmcomp/power/proc.ml[346,11135+25]..[349,11278+79]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/power/proc.ml[346,11135+25]..[346,11135+32])
              Ppat_var "outfile" (asmcomp/power/proc.ml[346,11135+25]..[346,11135+32])
            expression (asmcomp/power/proc.ml[347,11170+2]..[349,11278+79])
              Pexp_apply
              expression (asmcomp/power/proc.ml[347,11170+2]..[347,11170+15])
                Pexp_ident "Ccomp.command" (asmcomp/power/proc.ml[347,11170+2]..[347,11170+15])
              [
                <arg>
                Nolabel
                  expression (asmcomp/power/proc.ml[347,11170+16]..[349,11278+79])
                    Pexp_apply
                    expression (asmcomp/power/proc.ml[347,11170+28]..[347,11170+29])
                      Pexp_ident "^" (asmcomp/power/proc.ml[347,11170+28]..[347,11170+29])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/power/proc.ml[347,11170+17]..[347,11170+27])
                          Pexp_ident "Config.asm" (asmcomp/power/proc.ml[347,11170+17]..[347,11170+27])
                      <arg>
                      Nolabel
                        expression (asmcomp/power/proc.ml[347,11170+30]..[349,11278+78])
                          Pexp_apply
                          expression (asmcomp/power/proc.ml[347,11170+34]..[347,11170+35])
                            Pexp_ident "^" (asmcomp/power/proc.ml[347,11170+34]..[347,11170+35])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/power/proc.ml[347,11170+30]..[347,11170+33])
                                Pexp_constant PConst_string(" ",(asmcomp/power/proc.ml[347,11170+31]..[347,11170+32]),None)
                            <arg>
                            Nolabel
                              expression (asmcomp/power/proc.ml[348,11206+17]..[349,11278+78])
                                Pexp_apply
                                expression (asmcomp/power/proc.ml[348,11206+70]..[348,11206+71])
                                  Pexp_ident "^" (asmcomp/power/proc.ml[348,11206+70]..[348,11206+71])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[348,11206+17]..[348,11206+69])
                                      Pexp_apply
                                      expression (asmcomp/power/proc.ml[348,11206+18]..[348,11206+31])
                                        Pexp_ident "String.concat" (asmcomp/power/proc.ml[348,11206+18]..[348,11206+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/proc.ml[348,11206+32]..[348,11206+35])
                                            Pexp_constant PConst_string(" ",(asmcomp/power/proc.ml[348,11206+33]..[348,11206+34]),None)
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/proc.ml[348,11206+36]..[348,11206+68])
                                            Pexp_apply
                                            expression (asmcomp/power/proc.ml[348,11206+37]..[348,11206+64])
                                              Pexp_ident "Misc.debug_prefix_map_flags" (asmcomp/power/proc.ml[348,11206+37]..[348,11206+64])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (asmcomp/power/proc.ml[348,11206+65]..[348,11206+67])
                                                  Pexp_construct "()" (asmcomp/power/proc.ml[348,11206+65]..[348,11206+67])
                                                  None
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/power/proc.ml[349,11278+17]..[349,11278+78])
                                      Pexp_apply
                                      expression (asmcomp/power/proc.ml[349,11278+24]..[349,11278+25])
                                        Pexp_ident "^" (asmcomp/power/proc.ml[349,11278+24]..[349,11278+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/proc.ml[349,11278+17]..[349,11278+23])
                                            Pexp_constant PConst_string(" -o ",(asmcomp/power/proc.ml[349,11278+18]..[349,11278+22]),None)
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/power/proc.ml[349,11278+26]..[349,11278+78])
                                            Pexp_apply
                                            expression (asmcomp/power/proc.ml[349,11278+49]..[349,11278+50])
                                              Pexp_ident "^" (asmcomp/power/proc.ml[349,11278+49]..[349,11278+50])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (asmcomp/power/proc.ml[349,11278+26]..[349,11278+48])
                                                  Pexp_apply
                                                  expression (asmcomp/power/proc.ml[349,11278+26]..[349,11278+40])
                                                    Pexp_ident "Filename.quote" (asmcomp/power/proc.ml[349,11278+26]..[349,11278+40])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (asmcomp/power/proc.ml[349,11278+41]..[349,11278+48])
                                                        Pexp_ident "outfile" (asmcomp/power/proc.ml[349,11278+41]..[349,11278+48])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (asmcomp/power/proc.ml[349,11278+51]..[349,11278+78])
                                                  Pexp_apply
                                                  expression (asmcomp/power/proc.ml[349,11278+55]..[349,11278+56])
                                                    Pexp_ident "^" (asmcomp/power/proc.ml[349,11278+55]..[349,11278+56])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (asmcomp/power/proc.ml[349,11278+51]..[349,11278+54])
                                                        Pexp_constant PConst_string(" ",(asmcomp/power/proc.ml[349,11278+52]..[349,11278+53]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (asmcomp/power/proc.ml[349,11278+57]..[349,11278+78])
                                                        Pexp_apply
                                                        expression (asmcomp/power/proc.ml[349,11278+57]..[349,11278+71])
                                                          Pexp_ident "Filename.quote" (asmcomp/power/proc.ml[349,11278+57]..[349,11278+71])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (asmcomp/power/proc.ml[349,11278+72]..[349,11278+78])
                                                              Pexp_ident "infile" (asmcomp/power/proc.ml[349,11278+72]..[349,11278+78])
                                                        ]
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                    ]
              ]
    ]
  structure_item (asmcomp/power/proc.ml[351,11359+0]..[351,11359+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/power/proc.ml[351,11359+4]..[351,11359+8])
          Ppat_var "init" (asmcomp/power/proc.ml[351,11359+4]..[351,11359+8])
        expression (asmcomp/power/proc.ml[351,11359+9]..[351,11359+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/power/proc.ml[351,11359+9]..[351,11359+11])
            Ppat_construct "()" (asmcomp/power/proc.ml[351,11359+9]..[351,11359+11])
            None
          expression (asmcomp/power/proc.ml[351,11359+14]..[351,11359+16])
            Pexp_construct "()" (asmcomp/power/proc.ml[351,11359+14]..[351,11359+16])
            None
    ]
]

