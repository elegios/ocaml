[
  structure_item (toplevel/native/topmain.ml[16,1079+0]..[16,1079+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/native/topmain.ml[16,1079+4]..[16,1079+19])
          Ppat_var "preload_objects" (toplevel/native/topmain.ml[16,1079+4]..[16,1079+19])
        expression (toplevel/native/topmain.ml[16,1079+22]..[16,1079+28])
          Pexp_apply
          expression (toplevel/native/topmain.ml[16,1079+22]..[16,1079+25])
            Pexp_ident "ref" (toplevel/native/topmain.ml[16,1079+22]..[16,1079+25])
          [
            <arg>
            Nolabel
              expression (toplevel/native/topmain.ml[16,1079+26]..[16,1079+28])
                Pexp_construct "[]" (toplevel/native/topmain.ml[16,1079+26]..[16,1079+28])
                None
          ]
    ]
  structure_item (toplevel/native/topmain.ml[19,1159+0]..[19,1159+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/native/topmain.ml[19,1159+4]..[19,1159+25])
          Ppat_var "first_nonexpanded_pos" (toplevel/native/topmain.ml[19,1159+4]..[19,1159+25])
        expression (toplevel/native/topmain.ml[19,1159+28]..[19,1159+33])
          Pexp_apply
          expression (toplevel/native/topmain.ml[19,1159+28]..[19,1159+31])
            Pexp_ident "ref" (toplevel/native/topmain.ml[19,1159+28]..[19,1159+31])
          [
            <arg>
            Nolabel
              expression (toplevel/native/topmain.ml[19,1159+32]..[19,1159+33])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (toplevel/native/topmain.ml[21,1194+0]..[21,1194+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/native/topmain.ml[21,1194+4]..[21,1194+11])
          Ppat_var "current" (toplevel/native/topmain.ml[21,1194+4]..[21,1194+11])
        expression (toplevel/native/topmain.ml[21,1194+14]..[21,1194+32])
          Pexp_apply
          expression (toplevel/native/topmain.ml[21,1194+14]..[21,1194+17])
            Pexp_ident "ref" (toplevel/native/topmain.ml[21,1194+14]..[21,1194+17])
          [
            <arg>
            Nolabel
              expression (toplevel/native/topmain.ml[21,1194+18]..[21,1194+32])
                Pexp_apply
                expression (toplevel/native/topmain.ml[21,1194+19]..[21,1194+20])
                  Pexp_ident "!" (toplevel/native/topmain.ml[21,1194+19]..[21,1194+20])
                [
                  <arg>
                  Nolabel
                    expression (toplevel/native/topmain.ml[21,1194+20]..[21,1194+31])
                      Pexp_ident "Arg.current" (toplevel/native/topmain.ml[21,1194+20]..[21,1194+31])
                ]
          ]
    ]
  structure_item (toplevel/native/topmain.ml[23,1228+0]..[23,1228+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/native/topmain.ml[23,1228+4]..[23,1228+8])
          Ppat_var "argv" (toplevel/native/topmain.ml[23,1228+4]..[23,1228+8])
        expression (toplevel/native/topmain.ml[23,1228+11]..[23,1228+23])
          Pexp_apply
          expression (toplevel/native/topmain.ml[23,1228+11]..[23,1228+14])
            Pexp_ident "ref" (toplevel/native/topmain.ml[23,1228+11]..[23,1228+14])
          [
            <arg>
            Nolabel
              expression (toplevel/native/topmain.ml[23,1228+15]..[23,1228+23])
                Pexp_ident "Sys.argv" (toplevel/native/topmain.ml[23,1228+15]..[23,1228+23])
          ]
    ]
  structure_item (toplevel/native/topmain.ml[26,1309+0]..[26,1309+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/native/topmain.ml[26,1309+4]..[26,1309+15])
          Ppat_var "is_expanded" (toplevel/native/topmain.ml[26,1309+4]..[26,1309+15])
        expression (toplevel/native/topmain.ml[26,1309+16]..[26,1309+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/native/topmain.ml[26,1309+16]..[26,1309+19])
            Ppat_var "pos" (toplevel/native/topmain.ml[26,1309+16]..[26,1309+19])
          expression (toplevel/native/topmain.ml[26,1309+22]..[26,1309+50])
            Pexp_apply
            expression (toplevel/native/topmain.ml[26,1309+26]..[26,1309+27])
              Pexp_ident "<" (toplevel/native/topmain.ml[26,1309+26]..[26,1309+27])
            [
              <arg>
              Nolabel
                expression (toplevel/native/topmain.ml[26,1309+22]..[26,1309+25])
                  Pexp_ident "pos" (toplevel/native/topmain.ml[26,1309+22]..[26,1309+25])
              <arg>
              Nolabel
                expression (toplevel/native/topmain.ml[26,1309+28]..[26,1309+50])
                  Pexp_apply
                  expression (toplevel/native/topmain.ml[26,1309+28]..[26,1309+29])
                    Pexp_ident "!" (toplevel/native/topmain.ml[26,1309+28]..[26,1309+29])
                  [
                    <arg>
                    Nolabel
                      expression (toplevel/native/topmain.ml[26,1309+29]..[26,1309+50])
                        Pexp_ident "first_nonexpanded_pos" (toplevel/native/topmain.ml[26,1309+29]..[26,1309+50])
                  ]
            ]
    ]
  structure_item (toplevel/native/topmain.ml[28,1361+0]..[34,1552+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/native/topmain.ml[28,1361+4]..[28,1361+19])
          Ppat_var "expand_position" (toplevel/native/topmain.ml[28,1361+4]..[28,1361+19])
        expression (toplevel/native/topmain.ml[28,1361+20]..[34,1552+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/native/topmain.ml[28,1361+20]..[28,1361+23])
            Ppat_var "pos" (toplevel/native/topmain.ml[28,1361+20]..[28,1361+23])
          expression (toplevel/native/topmain.ml[28,1361+24]..[34,1552+42]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (toplevel/native/topmain.ml[28,1361+24]..[28,1361+27])
              Ppat_var "len" (toplevel/native/topmain.ml[28,1361+24]..[28,1361+27])
            expression (toplevel/native/topmain.ml[29,1391+2]..[34,1552+42])
              Pexp_ifthenelse
              expression (toplevel/native/topmain.ml[29,1391+5]..[29,1391+33])
                Pexp_apply
                expression (toplevel/native/topmain.ml[29,1391+9]..[29,1391+10])
                  Pexp_ident "<" (toplevel/native/topmain.ml[29,1391+9]..[29,1391+10])
                [
                  <arg>
                  Nolabel
                    expression (toplevel/native/topmain.ml[29,1391+5]..[29,1391+8])
                      Pexp_ident "pos" (toplevel/native/topmain.ml[29,1391+5]..[29,1391+8])
                  <arg>
                  Nolabel
                    expression (toplevel/native/topmain.ml[29,1391+11]..[29,1391+33])
                      Pexp_apply
                      expression (toplevel/native/topmain.ml[29,1391+11]..[29,1391+12])
                        Pexp_ident "!" (toplevel/native/topmain.ml[29,1391+11]..[29,1391+12])
                      [
                        <arg>
                        Nolabel
                          expression (toplevel/native/topmain.ml[29,1391+12]..[29,1391+33])
                            Pexp_ident "first_nonexpanded_pos" (toplevel/native/topmain.ml[29,1391+12]..[29,1391+33])
                      ]
                ]
              expression (toplevel/native/topmain.ml[31,1459+4]..[31,1459+57])
                Pexp_apply
                expression (toplevel/native/topmain.ml[31,1459+26]..[31,1459+28])
                  Pexp_ident ":=" (toplevel/native/topmain.ml[31,1459+26]..[31,1459+28])
                [
                  <arg>
                  Nolabel
                    expression (toplevel/native/topmain.ml[31,1459+4]..[31,1459+25])
                      Pexp_ident "first_nonexpanded_pos" (toplevel/native/topmain.ml[31,1459+4]..[31,1459+25])
                  <arg>
                  Nolabel
                    expression (toplevel/native/topmain.ml[31,1459+29]..[31,1459+57])
                      Pexp_apply
                      expression (toplevel/native/topmain.ml[31,1459+52]..[31,1459+53])
                        Pexp_ident "+" (toplevel/native/topmain.ml[31,1459+52]..[31,1459+53])
                      [
                        <arg>
                        Nolabel
                          expression (toplevel/native/topmain.ml[31,1459+29]..[31,1459+51])
                            Pexp_apply
                            expression (toplevel/native/topmain.ml[31,1459+29]..[31,1459+30])
                              Pexp_ident "!" (toplevel/native/topmain.ml[31,1459+29]..[31,1459+30])
                            [
                              <arg>
                              Nolabel
                                expression (toplevel/native/topmain.ml[31,1459+30]..[31,1459+51])
                                  Pexp_ident "first_nonexpanded_pos" (toplevel/native/topmain.ml[31,1459+30]..[31,1459+51])
                            ]
                        <arg>
                        Nolabel
                          expression (toplevel/native/topmain.ml[31,1459+54]..[31,1459+57])
                            Pexp_ident "len" (toplevel/native/topmain.ml[31,1459+54]..[31,1459+57])
                      ]
                ]
              Some
                expression (toplevel/native/topmain.ml[34,1552+4]..[34,1552+42])
                  Pexp_apply
                  expression (toplevel/native/topmain.ml[34,1552+26]..[34,1552+28])
                    Pexp_ident ":=" (toplevel/native/topmain.ml[34,1552+26]..[34,1552+28])
                  [
                    <arg>
                    Nolabel
                      expression (toplevel/native/topmain.ml[34,1552+4]..[34,1552+25])
                        Pexp_ident "first_nonexpanded_pos" (toplevel/native/topmain.ml[34,1552+4]..[34,1552+25])
                    <arg>
                    Nolabel
                      expression (toplevel/native/topmain.ml[34,1552+29]..[34,1552+42])
                        Pexp_apply
                        expression (toplevel/native/topmain.ml[34,1552+39]..[34,1552+40])
                          Pexp_ident "+" (toplevel/native/topmain.ml[34,1552+39]..[34,1552+40])
                        [
                          <arg>
                          Nolabel
                            expression (toplevel/native/topmain.ml[34,1552+29]..[34,1552+38])
                              Pexp_apply
                              expression (toplevel/native/topmain.ml[34,1552+33]..[34,1552+34])
                                Pexp_ident "+" (toplevel/native/topmain.ml[34,1552+33]..[34,1552+34])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/native/topmain.ml[34,1552+29]..[34,1552+32])
                                    Pexp_ident "pos" (toplevel/native/topmain.ml[34,1552+29]..[34,1552+32])
                                <arg>
                                Nolabel
                                  expression (toplevel/native/topmain.ml[34,1552+35]..[34,1552+38])
                                    Pexp_ident "len" (toplevel/native/topmain.ml[34,1552+35]..[34,1552+38])
                              ]
                          <arg>
                          Nolabel
                            expression (toplevel/native/topmain.ml[34,1552+41]..[34,1552+42])
                              Pexp_constant PConst_int (2,None)
                        ]
                  ]
    ]
  structure_item (toplevel/native/topmain.ml[37,1597+0]..[49,1945+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/native/topmain.ml[37,1597+4]..[37,1597+11])
          Ppat_var "prepare" (toplevel/native/topmain.ml[37,1597+4]..[37,1597+11])
        expression (toplevel/native/topmain.ml[37,1597+12]..[49,1945+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/native/topmain.ml[37,1597+12]..[37,1597+15])
            Ppat_var "ppf" (toplevel/native/topmain.ml[37,1597+12]..[37,1597+15])
          expression (toplevel/native/topmain.ml[38,1615+2]..[49,1945+11])
            Pexp_sequence
            expression (toplevel/native/topmain.ml[38,1615+2]..[38,1615+24])
              Pexp_apply
              expression (toplevel/native/topmain.ml[38,1615+2]..[38,1615+21])
                Pexp_ident "Topcommon.set_paths" (toplevel/native/topmain.ml[38,1615+2]..[38,1615+21])
              [
                <arg>
                Nolabel
                  expression (toplevel/native/topmain.ml[38,1615+22]..[38,1615+24])
                    Pexp_construct "()" (toplevel/native/topmain.ml[38,1615+22]..[38,1615+24])
                    None
              ]
            expression (toplevel/native/topmain.ml[39,1641+2]..[49,1945+11])
              Pexp_try
              expression (toplevel/native/topmain.ml[40,1647+4]..[44,1788+7])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (toplevel/native/topmain.ml[40,1647+8]..[40,1647+11])
                      Ppat_var "res" (toplevel/native/topmain.ml[40,1647+8]..[40,1647+11])
                    expression (toplevel/native/topmain.ml[41,1661+6]..[41,1661+76])
                      Pexp_apply
                      expression (toplevel/native/topmain.ml[41,1661+6]..[41,1661+18])
                        Pexp_ident "List.for_all" (toplevel/native/topmain.ml[41,1661+6]..[41,1661+18])
                      [
                        <arg>
                        Nolabel
                          expression (toplevel/native/topmain.ml[41,1661+19]..[41,1661+48])
                            Pexp_apply
                            expression (toplevel/native/topmain.ml[41,1661+20]..[41,1661+37])
                              Pexp_ident "Topeval.load_file" (toplevel/native/topmain.ml[41,1661+20]..[41,1661+37])
                            [
                              <arg>
                              Nolabel
                                expression (toplevel/native/topmain.ml[41,1661+38]..[41,1661+43])
                                  Pexp_construct "false" (toplevel/native/topmain.ml[41,1661+38]..[41,1661+43])
                                  None
                              <arg>
                              Nolabel
                                expression (toplevel/native/topmain.ml[41,1661+44]..[41,1661+47])
                                  Pexp_ident "ppf" (toplevel/native/topmain.ml[41,1661+44]..[41,1661+47])
                            ]
                        <arg>
                        Nolabel
                          expression (toplevel/native/topmain.ml[41,1661+49]..[41,1661+76])
                            Pexp_apply
                            expression (toplevel/native/topmain.ml[41,1661+50]..[41,1661+58])
                              Pexp_ident "List.rev" (toplevel/native/topmain.ml[41,1661+50]..[41,1661+58])
                            [
                              <arg>
                              Nolabel
                                expression (toplevel/native/topmain.ml[41,1661+59]..[41,1661+75])
                                  Pexp_apply
                                  expression (toplevel/native/topmain.ml[41,1661+59]..[41,1661+60])
                                    Pexp_ident "!" (toplevel/native/topmain.ml[41,1661+59]..[41,1661+60])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (toplevel/native/topmain.ml[41,1661+60]..[41,1661+75])
                                        Pexp_ident "preload_objects" (toplevel/native/topmain.ml[41,1661+60]..[41,1661+75])
                                  ]
                            ]
                      ]
                ]
                expression (toplevel/native/topmain.ml[43,1745+4]..[44,1788+7])
                  Pexp_sequence
                  expression (toplevel/native/topmain.ml[43,1745+4]..[43,1745+41])
                    Pexp_apply
                    expression (toplevel/native/topmain.ml[43,1745+4]..[43,1745+23])
                      Pexp_ident "Topcommon.run_hooks" (toplevel/native/topmain.ml[43,1745+4]..[43,1745+23])
                    [
                      <arg>
                      Nolabel
                        expression (toplevel/native/topmain.ml[43,1745+24]..[43,1745+41])
                          Pexp_construct "Topcommon.Startup" (toplevel/native/topmain.ml[43,1745+24]..[43,1745+41])
                          None
                    ]
                  expression (toplevel/native/topmain.ml[44,1788+4]..[44,1788+7])
                    Pexp_ident "res" (toplevel/native/topmain.ml[44,1788+4]..[44,1788+7])
              [
                <case>
                  pattern (toplevel/native/topmain.ml[45,1796+7]..[45,1796+8])
                    Ppat_var "x" (toplevel/native/topmain.ml[45,1796+7]..[45,1796+8])
                  expression (toplevel/native/topmain.ml[46,1808+4]..[49,1945+11])
                    Pexp_try
                    expression (toplevel/native/topmain.ml[46,1808+8]..[46,1808+46])
                      Pexp_sequence
                      expression (toplevel/native/topmain.ml[46,1808+8]..[46,1808+39])
                        Pexp_apply
                        expression (toplevel/native/topmain.ml[46,1808+8]..[46,1808+33])
                          Pexp_ident "Location.report_exception" (toplevel/native/topmain.ml[46,1808+8]..[46,1808+33])
                        [
                          <arg>
                          Nolabel
                            expression (toplevel/native/topmain.ml[46,1808+34]..[46,1808+37])
                              Pexp_ident "ppf" (toplevel/native/topmain.ml[46,1808+34]..[46,1808+37])
                          <arg>
                          Nolabel
                            expression (toplevel/native/topmain.ml[46,1808+38]..[46,1808+39])
                              Pexp_ident "x" (toplevel/native/topmain.ml[46,1808+38]..[46,1808+39])
                        ]
                      expression (toplevel/native/topmain.ml[46,1808+41]..[46,1808+46])
                        Pexp_construct "false" (toplevel/native/topmain.ml[46,1808+41]..[46,1808+46])
                        None
                    [
                      <case>
                        pattern (toplevel/native/topmain.ml[47,1855+9]..[47,1855+10])
                          Ppat_var "x" (toplevel/native/topmain.ml[47,1855+9]..[47,1855+10])
                        expression (toplevel/native/topmain.ml[48,1869+6]..[49,1945+11])
                          Pexp_sequence
                          expression (toplevel/native/topmain.ml[48,1869+6]..[48,1869+74])
                            Pexp_apply
                            expression (toplevel/native/topmain.ml[48,1869+6]..[48,1869+20])
                              Pexp_ident "Format.fprintf" (toplevel/native/topmain.ml[48,1869+6]..[48,1869+20])
                            [
                              <arg>
                              Nolabel
                                expression (toplevel/native/topmain.ml[48,1869+21]..[48,1869+24])
                                  Pexp_ident "ppf" (toplevel/native/topmain.ml[48,1869+21]..[48,1869+24])
                              <arg>
                              Nolabel
                                expression (toplevel/native/topmain.ml[48,1869+25]..[48,1869+51])
                                  Pexp_constant PConst_string("Uncaught exception: %s\n",(toplevel/native/topmain.ml[48,1869+26]..[48,1869+50]),None)
                              <arg>
                              Nolabel
                                expression (toplevel/native/topmain.ml[48,1869+52]..[48,1869+74])
                                  Pexp_apply
                                  expression (toplevel/native/topmain.ml[48,1869+53]..[48,1869+71])
                                    Pexp_ident "Printexc.to_string" (toplevel/native/topmain.ml[48,1869+53]..[48,1869+71])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (toplevel/native/topmain.ml[48,1869+72]..[48,1869+73])
                                        Pexp_ident "x" (toplevel/native/topmain.ml[48,1869+72]..[48,1869+73])
                                  ]
                            ]
                          expression (toplevel/native/topmain.ml[49,1945+6]..[49,1945+11])
                            Pexp_construct "false" (toplevel/native/topmain.ml[49,1945+6]..[49,1945+11])
                            None
                    ]
              ]
    ]
  structure_item (toplevel/native/topmain.ml[51,1958+0]..[75,3076+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/native/topmain.ml[51,1958+4]..[51,1958+18])
          Ppat_var "input_argument" (toplevel/native/topmain.ml[51,1958+4]..[51,1958+18])
        expression (toplevel/native/topmain.ml[51,1958+19]..[75,3076+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/native/topmain.ml[51,1958+19]..[51,1958+23])
            Ppat_var "name" (toplevel/native/topmain.ml[51,1958+19]..[51,1958+23])
          expression (toplevel/native/topmain.ml[52,1984+2]..[75,3076+7])
            Pexp_let Nonrec
            [
              <def>
                pattern (toplevel/native/topmain.ml[52,1984+6]..[52,1984+14])
                  Ppat_var "filename" (toplevel/native/topmain.ml[52,1984+6]..[52,1984+14])
                expression (toplevel/native/topmain.ml[52,1984+17]..[52,1984+47])
                  Pexp_apply
                  expression (toplevel/native/topmain.ml[52,1984+17]..[52,1984+42])
                    Pexp_ident "Toploop.filename_of_input" (toplevel/native/topmain.ml[52,1984+17]..[52,1984+42])
                  [
                    <arg>
                    Nolabel
                      expression (toplevel/native/topmain.ml[52,1984+43]..[52,1984+47])
                        Pexp_ident "name" (toplevel/native/topmain.ml[52,1984+43]..[52,1984+47])
                  ]
            ]
            expression (toplevel/native/topmain.ml[53,2035+2]..[75,3076+7])
              Pexp_let Nonrec
              [
                <def>
                  pattern (toplevel/native/topmain.ml[53,2035+6]..[53,2035+9])
                    Ppat_var "ppf" (toplevel/native/topmain.ml[53,2035+6]..[53,2035+9])
                  expression (toplevel/native/topmain.ml[53,2035+12]..[53,2035+32])
                    Pexp_ident "Format.err_formatter" (toplevel/native/topmain.ml[53,2035+12]..[53,2035+32])
              ]
              expression (toplevel/native/topmain.ml[54,2071+2]..[75,3076+7])
                Pexp_ifthenelse
                expression (toplevel/native/topmain.ml[54,2071+5]..[56,2160+45])
                  Pexp_apply
                  expression (toplevel/native/topmain.ml[55,2115+4]..[55,2115+6])
                    Pexp_ident "||" (toplevel/native/topmain.ml[55,2115+4]..[55,2115+6])
                  [
                    <arg>
                    Nolabel
                      expression (toplevel/native/topmain.ml[54,2071+5]..[54,2071+43])
                        Pexp_apply
                        expression (toplevel/native/topmain.ml[54,2071+5]..[54,2071+26])
                          Pexp_ident "Filename.check_suffix" (toplevel/native/topmain.ml[54,2071+5]..[54,2071+26])
                        [
                          <arg>
                          Nolabel
                            expression (toplevel/native/topmain.ml[54,2071+27]..[54,2071+35])
                              Pexp_ident "filename" (toplevel/native/topmain.ml[54,2071+27]..[54,2071+35])
                          <arg>
                          Nolabel
                            expression (toplevel/native/topmain.ml[54,2071+36]..[54,2071+43])
                              Pexp_constant PConst_string(".cmxs",(toplevel/native/topmain.ml[54,2071+37]..[54,2071+42]),None)
                        ]
                    <arg>
                    Nolabel
                      expression (toplevel/native/topmain.ml[55,2115+7]..[56,2160+45])
                        Pexp_apply
                        expression (toplevel/native/topmain.ml[56,2160+4]..[56,2160+6])
                          Pexp_ident "||" (toplevel/native/topmain.ml[56,2160+4]..[56,2160+6])
                        [
                          <arg>
                          Nolabel
                            expression (toplevel/native/topmain.ml[55,2115+7]..[55,2115+44])
                              Pexp_apply
                              expression (toplevel/native/topmain.ml[55,2115+7]..[55,2115+28])
                                Pexp_ident "Filename.check_suffix" (toplevel/native/topmain.ml[55,2115+7]..[55,2115+28])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/native/topmain.ml[55,2115+29]..[55,2115+37])
                                    Pexp_ident "filename" (toplevel/native/topmain.ml[55,2115+29]..[55,2115+37])
                                <arg>
                                Nolabel
                                  expression (toplevel/native/topmain.ml[55,2115+38]..[55,2115+44])
                                    Pexp_constant PConst_string(".cmx",(toplevel/native/topmain.ml[55,2115+39]..[55,2115+43]),None)
                              ]
                          <arg>
                          Nolabel
                            expression (toplevel/native/topmain.ml[56,2160+7]..[56,2160+45])
                              Pexp_apply
                              expression (toplevel/native/topmain.ml[56,2160+7]..[56,2160+28])
                                Pexp_ident "Filename.check_suffix" (toplevel/native/topmain.ml[56,2160+7]..[56,2160+28])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/native/topmain.ml[56,2160+29]..[56,2160+37])
                                    Pexp_ident "filename" (toplevel/native/topmain.ml[56,2160+29]..[56,2160+37])
                                <arg>
                                Nolabel
                                  expression (toplevel/native/topmain.ml[56,2160+38]..[56,2160+45])
                                    Pexp_constant PConst_string(".cmxa",(toplevel/native/topmain.ml[56,2160+39]..[56,2160+44]),None)
                              ]
                        ]
                  ]
                expression (toplevel/native/topmain.ml[57,2206+7]..[57,2206+54])
                  Pexp_apply
                  expression (toplevel/native/topmain.ml[57,2206+23]..[57,2206+25])
                    Pexp_ident ":=" (toplevel/native/topmain.ml[57,2206+23]..[57,2206+25])
                  [
                    <arg>
                    Nolabel
                      expression (toplevel/native/topmain.ml[57,2206+7]..[57,2206+22])
                        Pexp_ident "preload_objects" (toplevel/native/topmain.ml[57,2206+7]..[57,2206+22])
                    <arg>
                    Nolabel
                      expression (toplevel/native/topmain.ml[57,2206+26]..[57,2206+54])
                        Pexp_construct "::" (toplevel/native/topmain.ml[57,2206+35]..[57,2206+37])
                        Some
                          expression (toplevel/native/topmain.ml[57,2206+26]..[57,2206+54]) ghost
                            Pexp_tuple
                            [
                              expression (toplevel/native/topmain.ml[57,2206+26]..[57,2206+34])
                                Pexp_ident "filename" (toplevel/native/topmain.ml[57,2206+26]..[57,2206+34])
                              expression (toplevel/native/topmain.ml[57,2206+38]..[57,2206+54])
                                Pexp_apply
                                expression (toplevel/native/topmain.ml[57,2206+38]..[57,2206+39])
                                  Pexp_ident "!" (toplevel/native/topmain.ml[57,2206+38]..[57,2206+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (toplevel/native/topmain.ml[57,2206+39]..[57,2206+54])
                                      Pexp_ident "preload_objects" (toplevel/native/topmain.ml[57,2206+39]..[57,2206+54])
                                ]
                            ]
                  ]
                Some
                  expression (toplevel/native/topmain.ml[58,2261+7]..[75,3076+7])
                    Pexp_ifthenelse
                    expression (toplevel/native/topmain.ml[58,2261+10]..[58,2261+30])
                      Pexp_apply
                      expression (toplevel/native/topmain.ml[58,2261+10]..[58,2261+21])
                        Pexp_ident "is_expanded" (toplevel/native/topmain.ml[58,2261+10]..[58,2261+21])
                      [
                        <arg>
                        Nolabel
                          expression (toplevel/native/topmain.ml[58,2261+22]..[58,2261+30])
                            Pexp_apply
                            expression (toplevel/native/topmain.ml[58,2261+22]..[58,2261+23])
                              Pexp_ident "!" (toplevel/native/topmain.ml[58,2261+22]..[58,2261+23])
                            [
                              <arg>
                              Nolabel
                                expression (toplevel/native/topmain.ml[58,2261+23]..[58,2261+30])
                                  Pexp_ident "current" (toplevel/native/topmain.ml[58,2261+23]..[58,2261+30])
                            ]
                      ]
                    expression (toplevel/native/topmain.ml[58,2261+36]..[67,2744+5])
                      Pexp_sequence
                      expression (toplevel/native/topmain.ml[63,2494+4]..[65,2651+52])
                        Pexp_apply
                        expression (toplevel/native/topmain.ml[63,2494+4]..[63,2494+18])
                          Pexp_ident "Printf.eprintf" (toplevel/native/topmain.ml[63,2494+4]..[63,2494+18])
                        [
                          <arg>
                          Nolabel
                            expression (toplevel/native/topmain.ml[63,2494+19]..[65,2651+43])
                              Pexp_constant PConst_string("For implementation reasons, the toplevel does not support having script files (here %S) inside expanded arguments passed through the -args{,0} command-line option.\n",(toplevel/native/topmain.ml[63,2494+20]..[65,2651+42]),None)
                          <arg>
                          Nolabel
                            expression (toplevel/native/topmain.ml[65,2651+44]..[65,2651+52])
                              Pexp_ident "filename" (toplevel/native/topmain.ml[65,2651+44]..[65,2651+52])
                        ]
                      expression (toplevel/native/topmain.ml[66,2705+4]..[66,2705+38])
                        Pexp_apply
                        expression (toplevel/native/topmain.ml[66,2705+4]..[66,2705+9])
                          Pexp_ident "raise" (toplevel/native/topmain.ml[66,2705+4]..[66,2705+9])
                        [
                          <arg>
                          Nolabel
                            expression (toplevel/native/topmain.ml[66,2705+10]..[66,2705+38])
                              Pexp_construct "Compenv.Exit_with_status" (toplevel/native/topmain.ml[66,2705+11]..[66,2705+35])
                              Some
                                expression (toplevel/native/topmain.ml[66,2705+36]..[66,2705+37])
                                  Pexp_constant PConst_int (2,None)
                        ]
                    Some
                      expression (toplevel/native/topmain.ml[67,2744+11]..[75,3076+7])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (toplevel/native/topmain.ml[68,2761+8]..[68,2761+15])
                              Ppat_var "newargs" (toplevel/native/topmain.ml[68,2761+8]..[68,2761+15])
                            expression (toplevel/native/topmain.ml[68,2761+18]..[69,2808+65])
                              Pexp_apply
                              expression (toplevel/native/topmain.ml[68,2761+18]..[68,2761+27])
                                Pexp_ident "Array.sub" (toplevel/native/topmain.ml[68,2761+18]..[68,2761+27])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/native/topmain.ml[68,2761+28]..[68,2761+33])
                                    Pexp_apply
                                    expression (toplevel/native/topmain.ml[68,2761+28]..[68,2761+29])
                                      Pexp_ident "!" (toplevel/native/topmain.ml[68,2761+28]..[68,2761+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (toplevel/native/topmain.ml[68,2761+29]..[68,2761+33])
                                          Pexp_ident "argv" (toplevel/native/topmain.ml[68,2761+29]..[68,2761+33])
                                    ]
                                <arg>
                                Nolabel
                                  expression (toplevel/native/topmain.ml[68,2761+34]..[68,2761+46])
                                    Pexp_apply
                                    expression (toplevel/native/topmain.ml[68,2761+34]..[68,2761+35])
                                      Pexp_ident "!" (toplevel/native/topmain.ml[68,2761+34]..[68,2761+35])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (toplevel/native/topmain.ml[68,2761+35]..[68,2761+46])
                                          Pexp_ident "Arg.current" (toplevel/native/topmain.ml[68,2761+35]..[68,2761+46])
                                    ]
                                <arg>
                                Nolabel
                                  expression (toplevel/native/topmain.ml[69,2808+30]..[69,2808+65])
                                    Pexp_apply
                                    expression (toplevel/native/topmain.ml[69,2808+50]..[69,2808+51])
                                      Pexp_ident "-" (toplevel/native/topmain.ml[69,2808+50]..[69,2808+51])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (toplevel/native/topmain.ml[69,2808+31]..[69,2808+49])
                                          Pexp_apply
                                          expression (toplevel/native/topmain.ml[69,2808+31]..[69,2808+43])
                                            Pexp_ident "Array.length" (toplevel/native/topmain.ml[69,2808+31]..[69,2808+43])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (toplevel/native/topmain.ml[69,2808+44]..[69,2808+49])
                                                Pexp_apply
                                                expression (toplevel/native/topmain.ml[69,2808+44]..[69,2808+45])
                                                  Pexp_ident "!" (toplevel/native/topmain.ml[69,2808+44]..[69,2808+45])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (toplevel/native/topmain.ml[69,2808+45]..[69,2808+49])
                                                      Pexp_ident "argv" (toplevel/native/topmain.ml[69,2808+45]..[69,2808+49])
                                                ]
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (toplevel/native/topmain.ml[69,2808+52]..[69,2808+64])
                                          Pexp_apply
                                          expression (toplevel/native/topmain.ml[69,2808+52]..[69,2808+53])
                                            Pexp_ident "!" (toplevel/native/topmain.ml[69,2808+52]..[69,2808+53])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (toplevel/native/topmain.ml[69,2808+53]..[69,2808+64])
                                                Pexp_ident "Arg.current" (toplevel/native/topmain.ml[69,2808+53]..[69,2808+64])
                                          ]
                                    ]
                              ]
                        ]
                        expression (toplevel/native/topmain.ml[71,2883+6]..[74,3030+45])
                          Pexp_sequence
                          expression (toplevel/native/topmain.ml[71,2883+6]..[71,2883+39])
                            Pexp_apply
                            expression (toplevel/native/topmain.ml[71,2883+6]..[71,2883+36])
                              Pexp_ident "Compmisc.read_clflags_from_env" (toplevel/native/topmain.ml[71,2883+6]..[71,2883+36])
                            [
                              <arg>
                              Nolabel
                                expression (toplevel/native/topmain.ml[71,2883+37]..[71,2883+39])
                                  Pexp_construct "()" (toplevel/native/topmain.ml[71,2883+37]..[71,2883+39])
                                  None
                            ]
                          expression (toplevel/native/topmain.ml[72,2924+6]..[74,3030+45])
                            Pexp_ifthenelse
                            expression (toplevel/native/topmain.ml[72,2924+9]..[72,2924+59])
                              Pexp_apply
                              expression (toplevel/native/topmain.ml[72,2924+21]..[72,2924+23])
                                Pexp_ident "&&" (toplevel/native/topmain.ml[72,2924+21]..[72,2924+23])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/native/topmain.ml[72,2924+9]..[72,2924+20])
                                    Pexp_apply
                                    expression (toplevel/native/topmain.ml[72,2924+9]..[72,2924+16])
                                      Pexp_ident "prepare" (toplevel/native/topmain.ml[72,2924+9]..[72,2924+16])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (toplevel/native/topmain.ml[72,2924+17]..[72,2924+20])
                                          Pexp_ident "ppf" (toplevel/native/topmain.ml[72,2924+17]..[72,2924+20])
                                    ]
                                <arg>
                                Nolabel
                                  expression (toplevel/native/topmain.ml[72,2924+24]..[72,2924+59])
                                    Pexp_apply
                                    expression (toplevel/native/topmain.ml[72,2924+24]..[72,2924+42])
                                      Pexp_ident "Toploop.run_script" (toplevel/native/topmain.ml[72,2924+24]..[72,2924+42])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (toplevel/native/topmain.ml[72,2924+43]..[72,2924+46])
                                          Pexp_ident "ppf" (toplevel/native/topmain.ml[72,2924+43]..[72,2924+46])
                                      <arg>
                                      Nolabel
                                        expression (toplevel/native/topmain.ml[72,2924+47]..[72,2924+51])
                                          Pexp_ident "name" (toplevel/native/topmain.ml[72,2924+47]..[72,2924+51])
                                      <arg>
                                      Nolabel
                                        expression (toplevel/native/topmain.ml[72,2924+52]..[72,2924+59])
                                          Pexp_ident "newargs" (toplevel/native/topmain.ml[72,2924+52]..[72,2924+59])
                                    ]
                              ]
                            expression (toplevel/native/topmain.ml[73,2984+11]..[73,2984+45])
                              Pexp_apply
                              expression (toplevel/native/topmain.ml[73,2984+11]..[73,2984+16])
                                Pexp_ident "raise" (toplevel/native/topmain.ml[73,2984+11]..[73,2984+16])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/native/topmain.ml[73,2984+17]..[73,2984+45])
                                    Pexp_construct "Compenv.Exit_with_status" (toplevel/native/topmain.ml[73,2984+18]..[73,2984+42])
                                    Some
                                      expression (toplevel/native/topmain.ml[73,2984+43]..[73,2984+44])
                                        Pexp_constant PConst_int (0,None)
                              ]
                            Some
                              expression (toplevel/native/topmain.ml[74,3030+11]..[74,3030+45])
                                Pexp_apply
                                expression (toplevel/native/topmain.ml[74,3030+11]..[74,3030+16])
                                  Pexp_ident "raise" (toplevel/native/topmain.ml[74,3030+11]..[74,3030+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (toplevel/native/topmain.ml[74,3030+17]..[74,3030+45])
                                      Pexp_construct "Compenv.Exit_with_status" (toplevel/native/topmain.ml[74,3030+18]..[74,3030+42])
                                      Some
                                        expression (toplevel/native/topmain.ml[74,3030+43]..[74,3030+44])
                                          Pexp_constant PConst_int (2,None)
                                ]
    ]
  structure_item (toplevel/native/topmain.ml[77,3085+0]..[77,3085+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/native/topmain.ml[77,3085+4]..[77,3085+17])
          Ppat_var "file_argument" (toplevel/native/topmain.ml[77,3085+4]..[77,3085+17])
        expression (toplevel/native/topmain.ml[77,3085+18]..[77,3085+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/native/topmain.ml[77,3085+18]..[77,3085+19])
            Ppat_var "x" (toplevel/native/topmain.ml[77,3085+18]..[77,3085+19])
          expression (toplevel/native/topmain.ml[77,3085+22]..[77,3085+53])
            Pexp_apply
            expression (toplevel/native/topmain.ml[77,3085+22]..[77,3085+36])
              Pexp_ident "input_argument" (toplevel/native/topmain.ml[77,3085+22]..[77,3085+36])
            [
              <arg>
              Nolabel
                expression (toplevel/native/topmain.ml[77,3085+37]..[77,3085+53])
                  Pexp_construct "Toploop.File" (toplevel/native/topmain.ml[77,3085+38]..[77,3085+50])
                  Some
                    expression (toplevel/native/topmain.ml[77,3085+51]..[77,3085+52])
                      Pexp_ident "x" (toplevel/native/topmain.ml[77,3085+51]..[77,3085+52])
            ]
    ]
  structure_item (toplevel/native/topmain.ml[79,3140+0]..[83,3251+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/native/topmain.ml[79,3140+4]..[79,3140+15])
          Ppat_var "wrap_expand" (toplevel/native/topmain.ml[79,3140+4]..[79,3140+15])
        expression (toplevel/native/topmain.ml[79,3140+16]..[83,3251+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/native/topmain.ml[79,3140+16]..[79,3140+17])
            Ppat_var "f" (toplevel/native/topmain.ml[79,3140+16]..[79,3140+17])
          expression (toplevel/native/topmain.ml[79,3140+18]..[83,3251+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (toplevel/native/topmain.ml[79,3140+18]..[79,3140+19])
              Ppat_var "s" (toplevel/native/topmain.ml[79,3140+18]..[79,3140+19])
            expression (toplevel/native/topmain.ml[80,3162+2]..[83,3251+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (toplevel/native/topmain.ml[80,3162+6]..[80,3162+11])
                    Ppat_var "start" (toplevel/native/topmain.ml[80,3162+6]..[80,3162+11])
                  expression (toplevel/native/topmain.ml[80,3162+14]..[80,3162+22])
                    Pexp_apply
                    expression (toplevel/native/topmain.ml[80,3162+14]..[80,3162+15])
                      Pexp_ident "!" (toplevel/native/topmain.ml[80,3162+14]..[80,3162+15])
                    [
                      <arg>
                      Nolabel
                        expression (toplevel/native/topmain.ml[80,3162+15]..[80,3162+22])
                          Pexp_ident "current" (toplevel/native/topmain.ml[80,3162+15]..[80,3162+22])
                    ]
              ]
              expression (toplevel/native/topmain.ml[81,3188+2]..[83,3251+5])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (toplevel/native/topmain.ml[81,3188+6]..[81,3188+9])
                      Ppat_var "arr" (toplevel/native/topmain.ml[81,3188+6]..[81,3188+9])
                    expression (toplevel/native/topmain.ml[81,3188+12]..[81,3188+15])
                      Pexp_apply
                      expression (toplevel/native/topmain.ml[81,3188+12]..[81,3188+13])
                        Pexp_ident "f" (toplevel/native/topmain.ml[81,3188+12]..[81,3188+13])
                      [
                        <arg>
                        Nolabel
                          expression (toplevel/native/topmain.ml[81,3188+14]..[81,3188+15])
                            Pexp_ident "s" (toplevel/native/topmain.ml[81,3188+14]..[81,3188+15])
                      ]
                ]
                expression (toplevel/native/topmain.ml[82,3207+2]..[83,3251+5])
                  Pexp_sequence
                  expression (toplevel/native/topmain.ml[82,3207+2]..[82,3207+42])
                    Pexp_apply
                    expression (toplevel/native/topmain.ml[82,3207+2]..[82,3207+17])
                      Pexp_ident "expand_position" (toplevel/native/topmain.ml[82,3207+2]..[82,3207+17])
                    [
                      <arg>
                      Nolabel
                        expression (toplevel/native/topmain.ml[82,3207+18]..[82,3207+23])
                          Pexp_ident "start" (toplevel/native/topmain.ml[82,3207+18]..[82,3207+23])
                      <arg>
                      Nolabel
                        expression (toplevel/native/topmain.ml[82,3207+24]..[82,3207+42])
                          Pexp_apply
                          expression (toplevel/native/topmain.ml[82,3207+25]..[82,3207+37])
                            Pexp_ident "Array.length" (toplevel/native/topmain.ml[82,3207+25]..[82,3207+37])
                          [
                            <arg>
                            Nolabel
                              expression (toplevel/native/topmain.ml[82,3207+38]..[82,3207+41])
                                Pexp_ident "arr" (toplevel/native/topmain.ml[82,3207+38]..[82,3207+41])
                          ]
                    ]
                  expression (toplevel/native/topmain.ml[83,3251+2]..[83,3251+5])
                    Pexp_ident "arr" (toplevel/native/topmain.ml[83,3251+2]..[83,3251+5])
    ]
  structure_item (toplevel/native/topmain.ml[85,3258+0]..[93,3578+4])
    Pstr_module
    "Options" (toplevel/native/topmain.ml[85,3258+7]..[85,3258+14])
      module_expr (toplevel/native/topmain.ml[85,3258+17]..[93,3578+4])
        Pmod_apply
        module_expr (toplevel/native/topmain.ml[85,3258+17]..[85,3258+46])
          Pmod_ident "Main_args.Make_opttop_options" (toplevel/native/topmain.ml[85,3258+17]..[85,3258+46])
        module_expr (toplevel/native/topmain.ml[85,3258+48]..[93,3578+3])
          Pmod_structure
          [
            structure_item (toplevel/native/topmain.ml[86,3313+4]..[86,3313+40])
              Pstr_include              module_expr (toplevel/native/topmain.ml[86,3313+12]..[86,3313+40])
                Pmod_ident "Main_args.Default.Opttopmain" (toplevel/native/topmain.ml[86,3313+12]..[86,3313+40])
            structure_item (toplevel/native/topmain.ml[87,3354+4]..[87,3354+48])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/native/topmain.ml[87,3354+8]..[87,3354+14])
                    Ppat_var "_stdin" (toplevel/native/topmain.ml[87,3354+8]..[87,3354+14])
                  expression (toplevel/native/topmain.ml[87,3354+15]..[87,3354+48]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (toplevel/native/topmain.ml[87,3354+15]..[87,3354+17])
                      Ppat_construct "()" (toplevel/native/topmain.ml[87,3354+15]..[87,3354+17])
                      None
                    expression (toplevel/native/topmain.ml[87,3354+20]..[87,3354+48])
                      Pexp_apply
                      expression (toplevel/native/topmain.ml[87,3354+20]..[87,3354+34])
                        Pexp_ident "input_argument" (toplevel/native/topmain.ml[87,3354+20]..[87,3354+34])
                      [
                        <arg>
                        Nolabel
                          expression (toplevel/native/topmain.ml[87,3354+35]..[87,3354+48])
                            Pexp_construct "Toploop.Stdin" (toplevel/native/topmain.ml[87,3354+35]..[87,3354+48])
                            None
                      ]
              ]
            structure_item (toplevel/native/topmain.ml[88,3403+4]..[88,3403+40])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/native/topmain.ml[88,3403+8]..[88,3403+13])
                    Ppat_var "_args" (toplevel/native/topmain.ml[88,3403+8]..[88,3403+13])
                  expression (toplevel/native/topmain.ml[88,3403+16]..[88,3403+40])
                    Pexp_apply
                    expression (toplevel/native/topmain.ml[88,3403+16]..[88,3403+27])
                      Pexp_ident "wrap_expand" (toplevel/native/topmain.ml[88,3403+16]..[88,3403+27])
                    [
                      <arg>
                      Nolabel
                        expression (toplevel/native/topmain.ml[88,3403+28]..[88,3403+40])
                          Pexp_ident "Arg.read_arg" (toplevel/native/topmain.ml[88,3403+28]..[88,3403+40])
                    ]
              ]
            structure_item (toplevel/native/topmain.ml[89,3444+4]..[89,3444+42])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/native/topmain.ml[89,3444+8]..[89,3444+14])
                    Ppat_var "_args0" (toplevel/native/topmain.ml[89,3444+8]..[89,3444+14])
                  expression (toplevel/native/topmain.ml[89,3444+17]..[89,3444+42])
                    Pexp_apply
                    expression (toplevel/native/topmain.ml[89,3444+17]..[89,3444+28])
                      Pexp_ident "wrap_expand" (toplevel/native/topmain.ml[89,3444+17]..[89,3444+28])
                    [
                      <arg>
                      Nolabel
                        expression (toplevel/native/topmain.ml[89,3444+29]..[89,3444+42])
                          Pexp_ident "Arg.read_arg0" (toplevel/native/topmain.ml[89,3444+29]..[89,3444+42])
                    ]
              ]
            structure_item (toplevel/native/topmain.ml[90,3487+4]..[90,3487+37])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/native/topmain.ml[90,3487+8]..[90,3487+17])
                    Ppat_var "anonymous" (toplevel/native/topmain.ml[90,3487+8]..[90,3487+17])
                  expression (toplevel/native/topmain.ml[90,3487+18]..[90,3487+37]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (toplevel/native/topmain.ml[90,3487+18]..[90,3487+19])
                      Ppat_var "s" (toplevel/native/topmain.ml[90,3487+18]..[90,3487+19])
                    expression (toplevel/native/topmain.ml[90,3487+22]..[90,3487+37])
                      Pexp_apply
                      expression (toplevel/native/topmain.ml[90,3487+22]..[90,3487+35])
                        Pexp_ident "file_argument" (toplevel/native/topmain.ml[90,3487+22]..[90,3487+35])
                      [
                        <arg>
                        Nolabel
                          expression (toplevel/native/topmain.ml[90,3487+36]..[90,3487+37])
                            Pexp_ident "s" (toplevel/native/topmain.ml[90,3487+36]..[90,3487+37])
                      ]
              ]
            structure_item (toplevel/native/topmain.ml[91,3525+4]..[91,3525+51])
              Pstr_value Nonrec
              [
                <def>
                  pattern (toplevel/native/topmain.ml[91,3525+8]..[91,3525+13])
                    Ppat_var "_eval" (toplevel/native/topmain.ml[91,3525+8]..[91,3525+13])
                  expression (toplevel/native/topmain.ml[91,3525+14]..[91,3525+51]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (toplevel/native/topmain.ml[91,3525+14]..[91,3525+15])
                      Ppat_var "s" (toplevel/native/topmain.ml[91,3525+14]..[91,3525+15])
                    expression (toplevel/native/topmain.ml[91,3525+18]..[91,3525+51])
                      Pexp_apply
                      expression (toplevel/native/topmain.ml[91,3525+18]..[91,3525+32])
                        Pexp_ident "input_argument" (toplevel/native/topmain.ml[91,3525+18]..[91,3525+32])
                      [
                        <arg>
                        Nolabel
                          expression (toplevel/native/topmain.ml[91,3525+33]..[91,3525+51])
                            Pexp_construct "Toploop.String" (toplevel/native/topmain.ml[91,3525+34]..[91,3525+48])
                            Some
                              expression (toplevel/native/topmain.ml[91,3525+49]..[91,3525+50])
                                Pexp_ident "s" (toplevel/native/topmain.ml[91,3525+49]..[91,3525+50])
                      ]
              ]
          ]
  structure_item (toplevel/native/topmain.ml[95,3586+0]..[101,3740+75])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/native/topmain.ml[95,3586+4]..[95,3586+6])
          Ppat_construct "()" (toplevel/native/topmain.ml[95,3586+4]..[95,3586+6])
          None
        expression (toplevel/native/topmain.ml[96,3595+2]..[101,3740+75])
          Pexp_let Nonrec
          [
            <def>
              pattern (toplevel/native/topmain.ml[96,3595+6]..[96,3595+17])
                Ppat_var "extra_paths" (toplevel/native/topmain.ml[96,3595+6]..[96,3595+17])
              expression (toplevel/native/topmain.ml[97,3615+4]..[99,3697+37])
                Pexp_match
                expression (toplevel/native/topmain.ml[97,3615+10]..[97,3615+44])
                  Pexp_apply
                  expression (toplevel/native/topmain.ml[97,3615+10]..[97,3615+20])
                    Pexp_ident "Sys.getenv" (toplevel/native/topmain.ml[97,3615+10]..[97,3615+20])
                  [
                    <arg>
                    Nolabel
                      expression (toplevel/native/topmain.ml[97,3615+21]..[97,3615+44])
                        Pexp_constant PConst_string("OCAMLTOP_INCLUDE_PATH",(toplevel/native/topmain.ml[97,3615+22]..[97,3615+43]),None)
                  ]
                [
                  <case>
                    pattern (toplevel/native/topmain.ml[98,3665+6]..[98,3665+25])
                      Ppat_exception
                      pattern (toplevel/native/topmain.ml[98,3665+16]..[98,3665+25])
                        Ppat_construct "Not_found" (toplevel/native/topmain.ml[98,3665+16]..[98,3665+25])
                        None
                    expression (toplevel/native/topmain.ml[98,3665+29]..[98,3665+31])
                      Pexp_construct "[]" (toplevel/native/topmain.ml[98,3665+29]..[98,3665+31])
                      None
                  <case>
                    pattern (toplevel/native/topmain.ml[99,3697+6]..[99,3697+7])
                      Ppat_var "s" (toplevel/native/topmain.ml[99,3697+6]..[99,3697+7])
                    expression (toplevel/native/topmain.ml[99,3697+11]..[99,3697+37])
                      Pexp_apply
                      expression (toplevel/native/topmain.ml[99,3697+11]..[99,3697+35])
                        Pexp_ident "Misc.split_path_contents" (toplevel/native/topmain.ml[99,3697+11]..[99,3697+35])
                      [
                        <arg>
                        Nolabel
                          expression (toplevel/native/topmain.ml[99,3697+36]..[99,3697+37])
                            Pexp_ident "s" (toplevel/native/topmain.ml[99,3697+36]..[99,3697+37])
                      ]
                ]
          ]
          expression (toplevel/native/topmain.ml[101,3740+2]..[101,3740+75])
            Pexp_apply
            expression (toplevel/native/topmain.ml[101,3740+23]..[101,3740+25])
              Pexp_ident ":=" (toplevel/native/topmain.ml[101,3740+23]..[101,3740+25])
            [
              <arg>
              Nolabel
                expression (toplevel/native/topmain.ml[101,3740+2]..[101,3740+22])
                  Pexp_ident "Clflags.include_dirs" (toplevel/native/topmain.ml[101,3740+2]..[101,3740+22])
              <arg>
              Nolabel
                expression (toplevel/native/topmain.ml[101,3740+26]..[101,3740+75])
                  Pexp_apply
                  expression (toplevel/native/topmain.ml[101,3740+26]..[101,3740+41])
                    Pexp_ident "List.rev_append" (toplevel/native/topmain.ml[101,3740+26]..[101,3740+41])
                  [
                    <arg>
                    Nolabel
                      expression (toplevel/native/topmain.ml[101,3740+42]..[101,3740+53])
                        Pexp_ident "extra_paths" (toplevel/native/topmain.ml[101,3740+42]..[101,3740+53])
                    <arg>
                    Nolabel
                      expression (toplevel/native/topmain.ml[101,3740+54]..[101,3740+75])
                        Pexp_apply
                        expression (toplevel/native/topmain.ml[101,3740+54]..[101,3740+55])
                          Pexp_ident "!" (toplevel/native/topmain.ml[101,3740+54]..[101,3740+55])
                        [
                          <arg>
                          Nolabel
                            expression (toplevel/native/topmain.ml[101,3740+55]..[101,3740+75])
                              Pexp_ident "Clflags.include_dirs" (toplevel/native/topmain.ml[101,3740+55]..[101,3740+75])
                        ]
                  ]
            ]
    ]
  structure_item (toplevel/native/topmain.ml[103,3817+0]..[113,4215+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/native/topmain.ml[103,3817+4]..[103,3817+8])
          Ppat_var "main" (toplevel/native/topmain.ml[103,3817+4]..[103,3817+8])
        expression (toplevel/native/topmain.ml[103,3817+9]..[113,4215+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/native/topmain.ml[103,3817+9]..[103,3817+11])
            Ppat_construct "()" (toplevel/native/topmain.ml[103,3817+9]..[103,3817+11])
            None
          expression (toplevel/native/topmain.ml[104,3831+2]..[113,4215+35])
            Pexp_let Nonrec
            [
              <def>
                pattern (toplevel/native/topmain.ml[104,3831+6]..[104,3831+9])
                  Ppat_var "ppf" (toplevel/native/topmain.ml[104,3831+6]..[104,3831+9])
                expression (toplevel/native/topmain.ml[104,3831+12]..[104,3831+32])
                  Pexp_ident "Format.err_formatter" (toplevel/native/topmain.ml[104,3831+12]..[104,3831+32])
            ]
            expression (toplevel/native/topmain.ml[105,3867+2]..[113,4215+35])
              Pexp_sequence
              expression (toplevel/native/topmain.ml[105,3867+2]..[105,3867+29])
                Pexp_apply
                expression (toplevel/native/topmain.ml[105,3867+22]..[105,3867+24])
                  Pexp_ident ":=" (toplevel/native/topmain.ml[105,3867+22]..[105,3867+24])
                [
                  <arg>
                  Nolabel
                    expression (toplevel/native/topmain.ml[105,3867+2]..[105,3867+21])
                      Pexp_ident "Clflags.native_code" (toplevel/native/topmain.ml[105,3867+2]..[105,3867+21])
                  <arg>
                  Nolabel
                    expression (toplevel/native/topmain.ml[105,3867+25]..[105,3867+29])
                      Pexp_construct "true" (toplevel/native/topmain.ml[105,3867+25]..[105,3867+29])
                      None
                ]
              expression (toplevel/native/topmain.ml[106,3898+2]..[113,4215+35])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (toplevel/native/topmain.ml[106,3898+6]..[106,3898+13])
                      Ppat_var "program" (toplevel/native/topmain.ml[106,3898+6]..[106,3898+13])
                    expression (toplevel/native/topmain.ml[106,3898+16]..[106,3898+26])
                      Pexp_constant PConst_string("ocamlnat",(toplevel/native/topmain.ml[106,3898+17]..[106,3898+25]),None)
                ]
                expression (toplevel/native/topmain.ml[107,3928+2]..[113,4215+35])
                  Pexp_sequence
                  expression (toplevel/native/topmain.ml[107,3928+2]..[107,3928+33])
                    Pexp_apply
                    expression (toplevel/native/topmain.ml[107,3928+2]..[107,3928+17])
                      Pexp_ident "Compenv.readenv" (toplevel/native/topmain.ml[107,3928+2]..[107,3928+17])
                    [
                      <arg>
                      Nolabel
                        expression (toplevel/native/topmain.ml[107,3928+18]..[107,3928+21])
                          Pexp_ident "ppf" (toplevel/native/topmain.ml[107,3928+18]..[107,3928+21])
                      <arg>
                      Nolabel
                        expression (toplevel/native/topmain.ml[107,3928+22]..[107,3928+33])
                          Pexp_construct "Before_args" (toplevel/native/topmain.ml[107,3928+22]..[107,3928+33])
                          None
                    ]
                  expression (toplevel/native/topmain.ml[108,3963+2]..[113,4215+35])
                    Pexp_sequence
                    expression (toplevel/native/topmain.ml[108,3963+2]..[108,3963+44])
                      Pexp_apply
                      expression (toplevel/native/topmain.ml[108,3963+2]..[108,3963+23])
                        Pexp_ident "Clflags.add_arguments" (toplevel/native/topmain.ml[108,3963+2]..[108,3963+23])
                      [
                        <arg>
                        Nolabel
                          expression (toplevel/native/topmain.ml[108,3963+24]..[108,3963+31])
                            Pexp_ident "__LOC__" (toplevel/native/topmain.ml[108,3963+24]..[108,3963+31])
                        <arg>
                        Nolabel
                          expression (toplevel/native/topmain.ml[108,3963+32]..[108,3963+44])
                            Pexp_ident "Options.list" (toplevel/native/topmain.ml[108,3963+32]..[108,3963+44])
                      ]
                    expression (toplevel/native/topmain.ml[109,4009+2]..[113,4215+35])
                      Pexp_sequence
                      expression (toplevel/native/topmain.ml[109,4009+2]..[109,4009+61])
                        Pexp_apply
                        expression (toplevel/native/topmain.ml[109,4009+2]..[109,4009+25])
                          Pexp_ident "Compenv.parse_arguments" (toplevel/native/topmain.ml[109,4009+2]..[109,4009+25])
                        [
                          <arg>
                          Labelled "current"
                            expression (toplevel/native/topmain.ml[109,4009+27]..[109,4009+34])
                              Pexp_ident "current" (toplevel/native/topmain.ml[109,4009+27]..[109,4009+34])
                          <arg>
                          Nolabel
                            expression (toplevel/native/topmain.ml[109,4009+35]..[109,4009+39])
                              Pexp_ident "argv" (toplevel/native/topmain.ml[109,4009+35]..[109,4009+39])
                          <arg>
                          Nolabel
                            expression (toplevel/native/topmain.ml[109,4009+40]..[109,4009+53])
                              Pexp_ident "file_argument" (toplevel/native/topmain.ml[109,4009+40]..[109,4009+53])
                          <arg>
                          Nolabel
                            expression (toplevel/native/topmain.ml[109,4009+54]..[109,4009+61])
                              Pexp_ident "program" (toplevel/native/topmain.ml[109,4009+54]..[109,4009+61])
                        ]
                      expression (toplevel/native/topmain.ml[110,4072+2]..[113,4215+35])
                        Pexp_sequence
                        expression (toplevel/native/topmain.ml[110,4072+2]..[110,4072+35])
                          Pexp_apply
                          expression (toplevel/native/topmain.ml[110,4072+2]..[110,4072+32])
                            Pexp_ident "Compmisc.read_clflags_from_env" (toplevel/native/topmain.ml[110,4072+2]..[110,4072+32])
                          [
                            <arg>
                            Nolabel
                              expression (toplevel/native/topmain.ml[110,4072+33]..[110,4072+35])
                                Pexp_construct "()" (toplevel/native/topmain.ml[110,4072+33]..[110,4072+35])
                                None
                          ]
                        expression (toplevel/native/topmain.ml[111,4109+2]..[113,4215+35])
                          Pexp_sequence
                          expression (toplevel/native/topmain.ml[111,4109+2]..[111,4109+79])
                            Pexp_ifthenelse
                            expression (toplevel/native/topmain.ml[111,4109+5]..[111,4109+39])
                              Pexp_apply
                              expression (toplevel/native/topmain.ml[111,4109+5]..[111,4109+8])
                                Pexp_ident "not" (toplevel/native/topmain.ml[111,4109+5]..[111,4109+8])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/native/topmain.ml[111,4109+9]..[111,4109+39])
                                    Pexp_apply
                                    expression (toplevel/native/topmain.ml[111,4109+10]..[111,4109+17])
                                      Pexp_ident "prepare" (toplevel/native/topmain.ml[111,4109+10]..[111,4109+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (toplevel/native/topmain.ml[111,4109+18]..[111,4109+38])
                                          Pexp_ident "Format.err_formatter" (toplevel/native/topmain.ml[111,4109+18]..[111,4109+38])
                                    ]
                              ]
                            expression (toplevel/native/topmain.ml[111,4109+45]..[111,4109+79])
                              Pexp_apply
                              expression (toplevel/native/topmain.ml[111,4109+45]..[111,4109+50])
                                Pexp_ident "raise" (toplevel/native/topmain.ml[111,4109+45]..[111,4109+50])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/native/topmain.ml[111,4109+51]..[111,4109+79])
                                    Pexp_construct "Compenv.Exit_with_status" (toplevel/native/topmain.ml[111,4109+52]..[111,4109+76])
                                    Some
                                      expression (toplevel/native/topmain.ml[111,4109+77]..[111,4109+78])
                                        Pexp_constant PConst_int (2,None)
                              ]
                            None
                          expression (toplevel/native/topmain.ml[112,4190+2]..[113,4215+35])
                            Pexp_sequence
                            expression (toplevel/native/topmain.ml[112,4190+2]..[112,4190+23])
                              Pexp_apply
                              expression (toplevel/native/topmain.ml[112,4190+2]..[112,4190+20])
                                Pexp_ident "Compmisc.init_path" (toplevel/native/topmain.ml[112,4190+2]..[112,4190+20])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/native/topmain.ml[112,4190+21]..[112,4190+23])
                                    Pexp_construct "()" (toplevel/native/topmain.ml[112,4190+21]..[112,4190+23])
                                    None
                              ]
                            expression (toplevel/native/topmain.ml[113,4215+2]..[113,4215+35])
                              Pexp_apply
                              expression (toplevel/native/topmain.ml[113,4215+2]..[113,4215+14])
                                Pexp_ident "Toploop.loop" (toplevel/native/topmain.ml[113,4215+2]..[113,4215+14])
                              [
                                <arg>
                                Nolabel
                                  expression (toplevel/native/topmain.ml[113,4215+15]..[113,4215+35])
                                    Pexp_ident "Format.std_formatter" (toplevel/native/topmain.ml[113,4215+15]..[113,4215+35])
                              ]
    ]
  structure_item (toplevel/native/topmain.ml[115,4252+0]..[118,4333+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (toplevel/native/topmain.ml[115,4252+4]..[115,4252+8])
          Ppat_var "main" (toplevel/native/topmain.ml[115,4252+4]..[115,4252+8])
        expression (toplevel/native/topmain.ml[115,4252+9]..[118,4333+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (toplevel/native/topmain.ml[115,4252+9]..[115,4252+11])
            Ppat_construct "()" (toplevel/native/topmain.ml[115,4252+9]..[115,4252+11])
            None
          expression (toplevel/native/topmain.ml[116,4266+2]..[118,4333+11])
            Pexp_match
            expression (toplevel/native/topmain.ml[116,4266+8]..[116,4266+15])
              Pexp_apply
              expression (toplevel/native/topmain.ml[116,4266+8]..[116,4266+12])
                Pexp_ident "main" (toplevel/native/topmain.ml[116,4266+8]..[116,4266+12])
              [
                <arg>
                Nolabel
                  expression (toplevel/native/topmain.ml[116,4266+13]..[116,4266+15])
                    Pexp_construct "()" (toplevel/native/topmain.ml[116,4266+13]..[116,4266+15])
                    None
              ]
            [
              <case>
                pattern (toplevel/native/topmain.ml[117,4287+4]..[117,4287+40])
                  Ppat_exception
                  pattern (toplevel/native/topmain.ml[117,4287+14]..[117,4287+40])
                    Ppat_construct "Compenv.Exit_with_status" (toplevel/native/topmain.ml[117,4287+14]..[117,4287+38])
                    Some
                      []
                      pattern (toplevel/native/topmain.ml[117,4287+39]..[117,4287+40])
                        Ppat_var "n" (toplevel/native/topmain.ml[117,4287+39]..[117,4287+40])
                expression (toplevel/native/topmain.ml[117,4287+44]..[117,4287+45])
                  Pexp_ident "n" (toplevel/native/topmain.ml[117,4287+44]..[117,4287+45])
              <case>
                pattern (toplevel/native/topmain.ml[118,4333+4]..[118,4333+6])
                  Ppat_construct "()" (toplevel/native/topmain.ml[118,4333+4]..[118,4333+6])
                  None
                expression (toplevel/native/topmain.ml[118,4333+10]..[118,4333+11])
                  Pexp_constant PConst_int (0,None)
            ]
    ]
]

