[
  structure_item (utils/build_path_prefix_map.ml[16,1079+0]..[16,1079+18])
    Pstr_type Rec
    [
      type_declaration "path" (utils/build_path_prefix_map.ml[16,1079+5]..[16,1079+9]) (utils/build_path_prefix_map.ml[16,1079+0]..[16,1079+18])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (utils/build_path_prefix_map.ml[16,1079+12]..[16,1079+18])
              Ptyp_constr "string" (utils/build_path_prefix_map.ml[16,1079+12]..[16,1079+18])
              []
    ]
  structure_item (utils/build_path_prefix_map.ml[17,1098+0]..[17,1098+25])
    Pstr_type Rec
    [
      type_declaration "path_prefix" (utils/build_path_prefix_map.ml[17,1098+5]..[17,1098+16]) (utils/build_path_prefix_map.ml[17,1098+0]..[17,1098+25])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (utils/build_path_prefix_map.ml[17,1098+19]..[17,1098+25])
              Ptyp_constr "string" (utils/build_path_prefix_map.ml[17,1098+19]..[17,1098+25])
              []
    ]
  structure_item (utils/build_path_prefix_map.ml[18,1124+0]..[18,1124+27])
    Pstr_type Rec
    [
      type_declaration "error_message" (utils/build_path_prefix_map.ml[18,1124+5]..[18,1124+18]) (utils/build_path_prefix_map.ml[18,1124+0]..[18,1124+27])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (utils/build_path_prefix_map.ml[18,1124+21]..[18,1124+27])
              Ptyp_constr "string" (utils/build_path_prefix_map.ml[18,1124+21]..[18,1124+27])
              []
    ]
  structure_item (utils/build_path_prefix_map.ml[20,1153+0]..[20,1153+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/build_path_prefix_map.ml[20,1153+4]..[20,1153+10])
          Ppat_var "errorf" (utils/build_path_prefix_map.ml[20,1153+4]..[20,1153+10])
        expression (utils/build_path_prefix_map.ml[20,1153+11]..[20,1153+58]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/build_path_prefix_map.ml[20,1153+11]..[20,1153+14])
            Ppat_var "fmt" (utils/build_path_prefix_map.ml[20,1153+11]..[20,1153+14])
          expression (utils/build_path_prefix_map.ml[20,1153+17]..[20,1153+58])
            Pexp_apply
            expression (utils/build_path_prefix_map.ml[20,1153+17]..[20,1153+31])
              Pexp_ident "Printf.kprintf" (utils/build_path_prefix_map.ml[20,1153+17]..[20,1153+31])
            [
              <arg>
              Nolabel
                expression (utils/build_path_prefix_map.ml[20,1153+32]..[20,1153+54])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/build_path_prefix_map.ml[20,1153+37]..[20,1153+40])
                    Ppat_var "err" (utils/build_path_prefix_map.ml[20,1153+37]..[20,1153+40])
                  expression (utils/build_path_prefix_map.ml[20,1153+44]..[20,1153+53])
                    Pexp_construct "Error" (utils/build_path_prefix_map.ml[20,1153+44]..[20,1153+49])
                    Some
                      expression (utils/build_path_prefix_map.ml[20,1153+50]..[20,1153+53])
                        Pexp_ident "err" (utils/build_path_prefix_map.ml[20,1153+50]..[20,1153+53])
              <arg>
              Nolabel
                expression (utils/build_path_prefix_map.ml[20,1153+55]..[20,1153+58])
                  Pexp_ident "fmt" (utils/build_path_prefix_map.ml[20,1153+55]..[20,1153+58])
            ]
    ]
  structure_item (utils/build_path_prefix_map.ml[22,1213+0]..[31,1500+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/build_path_prefix_map.ml[22,1213+4]..[22,1213+17])
          Ppat_var "encode_prefix" (utils/build_path_prefix_map.ml[22,1213+4]..[22,1213+17])
        expression (utils/build_path_prefix_map.ml[22,1213+18]..[31,1500+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/build_path_prefix_map.ml[22,1213+18]..[22,1213+21])
            Ppat_var "str" (utils/build_path_prefix_map.ml[22,1213+18]..[22,1213+21])
          expression (utils/build_path_prefix_map.ml[23,1237+2]..[31,1500+21])
            Pexp_let Nonrec
            [
              <def>
                pattern (utils/build_path_prefix_map.ml[23,1237+6]..[23,1237+9])
                  Ppat_var "buf" (utils/build_path_prefix_map.ml[23,1237+6]..[23,1237+9])
                expression (utils/build_path_prefix_map.ml[23,1237+12]..[23,1237+45])
                  Pexp_apply
                  expression (utils/build_path_prefix_map.ml[23,1237+12]..[23,1237+25])
                    Pexp_ident "Buffer.create" (utils/build_path_prefix_map.ml[23,1237+12]..[23,1237+25])
                  [
                    <arg>
                    Nolabel
                      expression (utils/build_path_prefix_map.ml[23,1237+26]..[23,1237+45])
                        Pexp_apply
                        expression (utils/build_path_prefix_map.ml[23,1237+27]..[23,1237+40])
                          Pexp_ident "String.length" (utils/build_path_prefix_map.ml[23,1237+27]..[23,1237+40])
                        [
                          <arg>
                          Nolabel
                            expression (utils/build_path_prefix_map.ml[23,1237+41]..[23,1237+44])
                              Pexp_ident "str" (utils/build_path_prefix_map.ml[23,1237+41]..[23,1237+44])
                        ]
                  ]
            ]
            expression (utils/build_path_prefix_map.ml[24,1286+2]..[31,1500+21])
              Pexp_let Nonrec
              [
                <def>
                  pattern (utils/build_path_prefix_map.ml[24,1286+6]..[24,1286+15])
                    Ppat_var "push_char" (utils/build_path_prefix_map.ml[24,1286+6]..[24,1286+15])
                  expression (utils/build_path_prefix_map.ml[24,1286+18]..[28,1433+32])
                    Pexp_function
                    [
                      <case>
                        pattern (utils/build_path_prefix_map.ml[25,1313+6]..[25,1313+9])
                          Ppat_constant PConst_char 25
                        expression (utils/build_path_prefix_map.ml[25,1313+13]..[25,1313+39])
                          Pexp_apply
                          expression (utils/build_path_prefix_map.ml[25,1313+13]..[25,1313+30])
                            Pexp_ident "Buffer.add_string" (utils/build_path_prefix_map.ml[25,1313+13]..[25,1313+30])
                          [
                            <arg>
                            Nolabel
                              expression (utils/build_path_prefix_map.ml[25,1313+31]..[25,1313+34])
                                Pexp_ident "buf" (utils/build_path_prefix_map.ml[25,1313+31]..[25,1313+34])
                            <arg>
                            Nolabel
                              expression (utils/build_path_prefix_map.ml[25,1313+35]..[25,1313+39])
                                Pexp_constant PConst_string("%#",(utils/build_path_prefix_map.ml[25,1313+36]..[25,1313+38]),None)
                          ]
                      <case>
                        pattern (utils/build_path_prefix_map.ml[26,1353+6]..[26,1353+9])
                          Ppat_constant PConst_char 3d
                        expression (utils/build_path_prefix_map.ml[26,1353+13]..[26,1353+39])
                          Pexp_apply
                          expression (utils/build_path_prefix_map.ml[26,1353+13]..[26,1353+30])
                            Pexp_ident "Buffer.add_string" (utils/build_path_prefix_map.ml[26,1353+13]..[26,1353+30])
                          [
                            <arg>
                            Nolabel
                              expression (utils/build_path_prefix_map.ml[26,1353+31]..[26,1353+34])
                                Pexp_ident "buf" (utils/build_path_prefix_map.ml[26,1353+31]..[26,1353+34])
                            <arg>
                            Nolabel
                              expression (utils/build_path_prefix_map.ml[26,1353+35]..[26,1353+39])
                                Pexp_constant PConst_string("%+",(utils/build_path_prefix_map.ml[26,1353+36]..[26,1353+38]),None)
                          ]
                      <case>
                        pattern (utils/build_path_prefix_map.ml[27,1393+6]..[27,1393+9])
                          Ppat_constant PConst_char 3a
                        expression (utils/build_path_prefix_map.ml[27,1393+13]..[27,1393+39])
                          Pexp_apply
                          expression (utils/build_path_prefix_map.ml[27,1393+13]..[27,1393+30])
                            Pexp_ident "Buffer.add_string" (utils/build_path_prefix_map.ml[27,1393+13]..[27,1393+30])
                          [
                            <arg>
                            Nolabel
                              expression (utils/build_path_prefix_map.ml[27,1393+31]..[27,1393+34])
                                Pexp_ident "buf" (utils/build_path_prefix_map.ml[27,1393+31]..[27,1393+34])
                            <arg>
                            Nolabel
                              expression (utils/build_path_prefix_map.ml[27,1393+35]..[27,1393+39])
                                Pexp_constant PConst_string("%.",(utils/build_path_prefix_map.ml[27,1393+36]..[27,1393+38]),None)
                          ]
                      <case>
                        pattern (utils/build_path_prefix_map.ml[28,1433+6]..[28,1433+7])
                          Ppat_var "c" (utils/build_path_prefix_map.ml[28,1433+6]..[28,1433+7])
                        expression (utils/build_path_prefix_map.ml[28,1433+11]..[28,1433+32])
                          Pexp_apply
                          expression (utils/build_path_prefix_map.ml[28,1433+11]..[28,1433+26])
                            Pexp_ident "Buffer.add_char" (utils/build_path_prefix_map.ml[28,1433+11]..[28,1433+26])
                          [
                            <arg>
                            Nolabel
                              expression (utils/build_path_prefix_map.ml[28,1433+27]..[28,1433+30])
                                Pexp_ident "buf" (utils/build_path_prefix_map.ml[28,1433+27]..[28,1433+30])
                            <arg>
                            Nolabel
                              expression (utils/build_path_prefix_map.ml[28,1433+31]..[28,1433+32])
                                Pexp_ident "c" (utils/build_path_prefix_map.ml[28,1433+31]..[28,1433+32])
                          ]
                    ]
              ]
              expression (utils/build_path_prefix_map.ml[30,1471+2]..[31,1500+21])
                Pexp_sequence
                expression (utils/build_path_prefix_map.ml[30,1471+2]..[30,1471+27])
                  Pexp_apply
                  expression (utils/build_path_prefix_map.ml[30,1471+2]..[30,1471+13])
                    Pexp_ident "String.iter" (utils/build_path_prefix_map.ml[30,1471+2]..[30,1471+13])
                  [
                    <arg>
                    Nolabel
                      expression (utils/build_path_prefix_map.ml[30,1471+14]..[30,1471+23])
                        Pexp_ident "push_char" (utils/build_path_prefix_map.ml[30,1471+14]..[30,1471+23])
                    <arg>
                    Nolabel
                      expression (utils/build_path_prefix_map.ml[30,1471+24]..[30,1471+27])
                        Pexp_ident "str" (utils/build_path_prefix_map.ml[30,1471+24]..[30,1471+27])
                  ]
                expression (utils/build_path_prefix_map.ml[31,1500+2]..[31,1500+21])
                  Pexp_apply
                  expression (utils/build_path_prefix_map.ml[31,1500+2]..[31,1500+17])
                    Pexp_ident "Buffer.contents" (utils/build_path_prefix_map.ml[31,1500+2]..[31,1500+17])
                  [
                    <arg>
                    Nolabel
                      expression (utils/build_path_prefix_map.ml[31,1500+18]..[31,1500+21])
                        Pexp_ident "buf" (utils/build_path_prefix_map.ml[31,1500+18]..[31,1500+21])
                  ]
    ]
  structure_item (utils/build_path_prefix_map.ml[33,1523+0]..[54,2248+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/build_path_prefix_map.ml[33,1523+4]..[33,1523+17])
          Ppat_var "decode_prefix" (utils/build_path_prefix_map.ml[33,1523+4]..[33,1523+17])
        expression (utils/build_path_prefix_map.ml[33,1523+18]..[54,2248+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/build_path_prefix_map.ml[33,1523+18]..[33,1523+21])
            Ppat_var "str" (utils/build_path_prefix_map.ml[33,1523+18]..[33,1523+21])
          expression (utils/build_path_prefix_map.ml[34,1547+2]..[54,2248+11])
            Pexp_let Nonrec
            [
              <def>
                pattern (utils/build_path_prefix_map.ml[34,1547+6]..[34,1547+9])
                  Ppat_var "buf" (utils/build_path_prefix_map.ml[34,1547+6]..[34,1547+9])
                expression (utils/build_path_prefix_map.ml[34,1547+12]..[34,1547+45])
                  Pexp_apply
                  expression (utils/build_path_prefix_map.ml[34,1547+12]..[34,1547+25])
                    Pexp_ident "Buffer.create" (utils/build_path_prefix_map.ml[34,1547+12]..[34,1547+25])
                  [
                    <arg>
                    Nolabel
                      expression (utils/build_path_prefix_map.ml[34,1547+26]..[34,1547+45])
                        Pexp_apply
                        expression (utils/build_path_prefix_map.ml[34,1547+27]..[34,1547+40])
                          Pexp_ident "String.length" (utils/build_path_prefix_map.ml[34,1547+27]..[34,1547+40])
                        [
                          <arg>
                          Nolabel
                            expression (utils/build_path_prefix_map.ml[34,1547+41]..[34,1547+44])
                              Pexp_ident "str" (utils/build_path_prefix_map.ml[34,1547+41]..[34,1547+44])
                        ]
                  ]
            ]
            expression (utils/build_path_prefix_map.ml[35,1596+2]..[54,2248+11])
              Pexp_let Rec
              [
                <def>
                  pattern (utils/build_path_prefix_map.ml[35,1596+10]..[35,1596+14])
                    Ppat_var "loop" (utils/build_path_prefix_map.ml[35,1596+10]..[35,1596+14])
                  expression (utils/build_path_prefix_map.ml[35,1596+15]..[53,2227+20]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/build_path_prefix_map.ml[35,1596+15]..[35,1596+16])
                      Ppat_var "i" (utils/build_path_prefix_map.ml[35,1596+15]..[35,1596+16])
                    expression (utils/build_path_prefix_map.ml[36,1615+4]..[53,2227+20])
                      Pexp_ifthenelse
                      expression (utils/build_path_prefix_map.ml[36,1615+7]..[36,1615+29])
                        Pexp_apply
                        expression (utils/build_path_prefix_map.ml[36,1615+9]..[36,1615+11])
                          Pexp_ident ">=" (utils/build_path_prefix_map.ml[36,1615+9]..[36,1615+11])
                        [
                          <arg>
                          Nolabel
                            expression (utils/build_path_prefix_map.ml[36,1615+7]..[36,1615+8])
                              Pexp_ident "i" (utils/build_path_prefix_map.ml[36,1615+7]..[36,1615+8])
                          <arg>
                          Nolabel
                            expression (utils/build_path_prefix_map.ml[36,1615+12]..[36,1615+29])
                              Pexp_apply
                              expression (utils/build_path_prefix_map.ml[36,1615+12]..[36,1615+25])
                                Pexp_ident "String.length" (utils/build_path_prefix_map.ml[36,1615+12]..[36,1615+25])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/build_path_prefix_map.ml[36,1615+26]..[36,1615+29])
                                    Pexp_ident "str" (utils/build_path_prefix_map.ml[36,1615+26]..[36,1615+29])
                              ]
                        ]
                      expression (utils/build_path_prefix_map.ml[37,1645+9]..[37,1645+33])
                        Pexp_construct "Ok" (utils/build_path_prefix_map.ml[37,1645+9]..[37,1645+11])
                        Some
                          expression (utils/build_path_prefix_map.ml[37,1645+12]..[37,1645+33])
                            Pexp_apply
                            expression (utils/build_path_prefix_map.ml[37,1645+13]..[37,1645+28])
                              Pexp_ident "Buffer.contents" (utils/build_path_prefix_map.ml[37,1645+13]..[37,1645+28])
                            [
                              <arg>
                              Nolabel
                                expression (utils/build_path_prefix_map.ml[37,1645+29]..[37,1645+32])
                                  Pexp_ident "buf" (utils/build_path_prefix_map.ml[37,1645+29]..[37,1645+32])
                            ]
                      Some
                        expression (utils/build_path_prefix_map.ml[38,1679+9]..[53,2227+20])
                          Pexp_match
                          expression (utils/build_path_prefix_map.ml[38,1679+15]..[38,1679+22])
                            Pexp_apply
                            expression (utils/build_path_prefix_map.ml[38,1679+15]..[38,1679+22]) ghost
                              Pexp_ident "String.get" (utils/build_path_prefix_map.ml[38,1679+15]..[38,1679+22]) ghost
                            [
                              <arg>
                              Nolabel
                                expression (utils/build_path_prefix_map.ml[38,1679+15]..[38,1679+18])
                                  Pexp_ident "str" (utils/build_path_prefix_map.ml[38,1679+15]..[38,1679+18])
                              <arg>
                              Nolabel
                                expression (utils/build_path_prefix_map.ml[38,1679+20]..[38,1679+21])
                                  Pexp_ident "i" (utils/build_path_prefix_map.ml[38,1679+20]..[38,1679+21])
                            ]
                          [
                            <case>
                              pattern (utils/build_path_prefix_map.ml[39,1707+8]..[39,1707+24])
                                Ppat_alias "c" (utils/build_path_prefix_map.ml[39,1707+23]..[39,1707+24])
                                pattern (utils/build_path_prefix_map.ml[39,1707+8]..[39,1707+19])
                                  Ppat_or
                                  pattern (utils/build_path_prefix_map.ml[39,1707+9]..[39,1707+12])
                                    Ppat_constant PConst_char 3d
                                  pattern (utils/build_path_prefix_map.ml[39,1707+15]..[39,1707+18])
                                    Ppat_constant PConst_char 3a
                              expression (utils/build_path_prefix_map.ml[40,1735+8]..[40,1735+57])
                                Pexp_apply
                                expression (utils/build_path_prefix_map.ml[40,1735+8]..[40,1735+14])
                                  Pexp_ident "errorf" (utils/build_path_prefix_map.ml[40,1735+8]..[40,1735+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/build_path_prefix_map.ml[40,1735+15]..[40,1735+55])
                                      Pexp_constant PConst_string("invalid character '%c' in key or value",(utils/build_path_prefix_map.ml[40,1735+16]..[40,1735+54]),None)
                                  <arg>
                                  Nolabel
                                    expression (utils/build_path_prefix_map.ml[40,1735+56]..[40,1735+57])
                                      Pexp_ident "c" (utils/build_path_prefix_map.ml[40,1735+56]..[40,1735+57])
                                ]
                            <case>
                              pattern (utils/build_path_prefix_map.ml[41,1793+8]..[41,1793+11])
                                Ppat_constant PConst_char 25
                              expression (utils/build_path_prefix_map.ml[42,1808+8]..[50,2171+11])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (utils/build_path_prefix_map.ml[42,1808+12]..[42,1808+16])
                                      Ppat_var "push" (utils/build_path_prefix_map.ml[42,1808+12]..[42,1808+16])
                                    expression (utils/build_path_prefix_map.ml[42,1808+17]..[42,1808+56]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (utils/build_path_prefix_map.ml[42,1808+17]..[42,1808+18])
                                        Ppat_var "c" (utils/build_path_prefix_map.ml[42,1808+17]..[42,1808+18])
                                      expression (utils/build_path_prefix_map.ml[42,1808+21]..[42,1808+56])
                                        Pexp_sequence
                                        expression (utils/build_path_prefix_map.ml[42,1808+21]..[42,1808+42])
                                          Pexp_apply
                                          expression (utils/build_path_prefix_map.ml[42,1808+21]..[42,1808+36])
                                            Pexp_ident "Buffer.add_char" (utils/build_path_prefix_map.ml[42,1808+21]..[42,1808+36])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/build_path_prefix_map.ml[42,1808+37]..[42,1808+40])
                                                Pexp_ident "buf" (utils/build_path_prefix_map.ml[42,1808+37]..[42,1808+40])
                                            <arg>
                                            Nolabel
                                              expression (utils/build_path_prefix_map.ml[42,1808+41]..[42,1808+42])
                                                Pexp_ident "c" (utils/build_path_prefix_map.ml[42,1808+41]..[42,1808+42])
                                          ]
                                        expression (utils/build_path_prefix_map.ml[42,1808+44]..[42,1808+56])
                                          Pexp_apply
                                          expression (utils/build_path_prefix_map.ml[42,1808+44]..[42,1808+48])
                                            Pexp_ident "loop" (utils/build_path_prefix_map.ml[42,1808+44]..[42,1808+48])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/build_path_prefix_map.ml[42,1808+49]..[42,1808+56])
                                                Pexp_apply
                                                expression (utils/build_path_prefix_map.ml[42,1808+52]..[42,1808+53])
                                                  Pexp_ident "+" (utils/build_path_prefix_map.ml[42,1808+52]..[42,1808+53])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/build_path_prefix_map.ml[42,1808+50]..[42,1808+51])
                                                      Pexp_ident "i" (utils/build_path_prefix_map.ml[42,1808+50]..[42,1808+51])
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/build_path_prefix_map.ml[42,1808+54]..[42,1808+55])
                                                      Pexp_constant PConst_int (2,None)
                                                ]
                                          ]
                                ]
                                expression (utils/build_path_prefix_map.ml[43,1868+8]..[50,2171+11])
                                  Pexp_ifthenelse
                                  expression (utils/build_path_prefix_map.ml[43,1868+11]..[43,1868+36])
                                    Pexp_apply
                                    expression (utils/build_path_prefix_map.ml[43,1868+17]..[43,1868+18])
                                      Pexp_ident "=" (utils/build_path_prefix_map.ml[43,1868+17]..[43,1868+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/build_path_prefix_map.ml[43,1868+11]..[43,1868+16])
                                          Pexp_apply
                                          expression (utils/build_path_prefix_map.ml[43,1868+13]..[43,1868+14])
                                            Pexp_ident "+" (utils/build_path_prefix_map.ml[43,1868+13]..[43,1868+14])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/build_path_prefix_map.ml[43,1868+11]..[43,1868+12])
                                                Pexp_ident "i" (utils/build_path_prefix_map.ml[43,1868+11]..[43,1868+12])
                                            <arg>
                                            Nolabel
                                              expression (utils/build_path_prefix_map.ml[43,1868+15]..[43,1868+16])
                                                Pexp_constant PConst_int (1,None)
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (utils/build_path_prefix_map.ml[43,1868+19]..[43,1868+36])
                                          Pexp_apply
                                          expression (utils/build_path_prefix_map.ml[43,1868+19]..[43,1868+32])
                                            Pexp_ident "String.length" (utils/build_path_prefix_map.ml[43,1868+19]..[43,1868+32])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/build_path_prefix_map.ml[43,1868+33]..[43,1868+36])
                                                Pexp_ident "str" (utils/build_path_prefix_map.ml[43,1868+33]..[43,1868+36])
                                          ]
                                    ]
                                  expression (utils/build_path_prefix_map.ml[44,1910+10]..[44,1910+64])
                                    Pexp_apply
                                    expression (utils/build_path_prefix_map.ml[44,1910+10]..[44,1910+16])
                                      Pexp_ident "errorf" (utils/build_path_prefix_map.ml[44,1910+10]..[44,1910+16])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/build_path_prefix_map.ml[44,1910+17]..[44,1910+60])
                                          Pexp_constant PConst_string("invalid encoded string %S (trailing '%%')",(utils/build_path_prefix_map.ml[44,1910+18]..[44,1910+59]),None)
                                      <arg>
                                      Nolabel
                                        expression (utils/build_path_prefix_map.ml[44,1910+61]..[44,1910+64])
                                          Pexp_ident "str" (utils/build_path_prefix_map.ml[44,1910+61]..[44,1910+64])
                                    ]
                                  Some
                                    expression (utils/build_path_prefix_map.ml[45,1975+13]..[50,2171+11])
                                      Pexp_match
                                      expression (utils/build_path_prefix_map.ml[45,1975+25]..[45,1975+36])
                                        Pexp_apply
                                        expression (utils/build_path_prefix_map.ml[45,1975+25]..[45,1975+36]) ghost
                                          Pexp_ident "String.get" (utils/build_path_prefix_map.ml[45,1975+25]..[45,1975+36]) ghost
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/build_path_prefix_map.ml[45,1975+25]..[45,1975+28])
                                              Pexp_ident "str" (utils/build_path_prefix_map.ml[45,1975+25]..[45,1975+28])
                                          <arg>
                                          Nolabel
                                            expression (utils/build_path_prefix_map.ml[45,1975+30]..[45,1975+35])
                                              Pexp_apply
                                              expression (utils/build_path_prefix_map.ml[45,1975+32]..[45,1975+33])
                                                Pexp_ident "+" (utils/build_path_prefix_map.ml[45,1975+32]..[45,1975+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/build_path_prefix_map.ml[45,1975+30]..[45,1975+31])
                                                    Pexp_ident "i" (utils/build_path_prefix_map.ml[45,1975+30]..[45,1975+31])
                                                <arg>
                                                Nolabel
                                                  expression (utils/build_path_prefix_map.ml[45,1975+34]..[45,1975+35])
                                                    Pexp_constant PConst_int (1,None)
                                              ]
                                        ]
                                      [
                                        <case>
                                          pattern (utils/build_path_prefix_map.ml[46,2017+14]..[46,2017+17])
                                            Ppat_constant PConst_char 23
                                          expression (utils/build_path_prefix_map.ml[46,2017+21]..[46,2017+29])
                                            Pexp_apply
                                            expression (utils/build_path_prefix_map.ml[46,2017+21]..[46,2017+25])
                                              Pexp_ident "push" (utils/build_path_prefix_map.ml[46,2017+21]..[46,2017+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/build_path_prefix_map.ml[46,2017+26]..[46,2017+29])
                                                  Pexp_constant PConst_char 25
                                            ]
                                        <case>
                                          pattern (utils/build_path_prefix_map.ml[47,2047+14]..[47,2047+17])
                                            Ppat_constant PConst_char 2b
                                          expression (utils/build_path_prefix_map.ml[47,2047+21]..[47,2047+29])
                                            Pexp_apply
                                            expression (utils/build_path_prefix_map.ml[47,2047+21]..[47,2047+25])
                                              Pexp_ident "push" (utils/build_path_prefix_map.ml[47,2047+21]..[47,2047+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/build_path_prefix_map.ml[47,2047+26]..[47,2047+29])
                                                  Pexp_constant PConst_char 3d
                                            ]
                                        <case>
                                          pattern (utils/build_path_prefix_map.ml[48,2077+14]..[48,2077+17])
                                            Ppat_constant PConst_char 2e
                                          expression (utils/build_path_prefix_map.ml[48,2077+21]..[48,2077+29])
                                            Pexp_apply
                                            expression (utils/build_path_prefix_map.ml[48,2077+21]..[48,2077+25])
                                              Pexp_ident "push" (utils/build_path_prefix_map.ml[48,2077+21]..[48,2077+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/build_path_prefix_map.ml[48,2077+26]..[48,2077+29])
                                                  Pexp_constant PConst_char 3a
                                            ]
                                        <case>
                                          pattern (utils/build_path_prefix_map.ml[49,2107+14]..[49,2107+15])
                                            Ppat_var "c" (utils/build_path_prefix_map.ml[49,2107+14]..[49,2107+15])
                                          expression (utils/build_path_prefix_map.ml[49,2107+19]..[49,2107+63])
                                            Pexp_apply
                                            expression (utils/build_path_prefix_map.ml[49,2107+19]..[49,2107+25])
                                              Pexp_ident "errorf" (utils/build_path_prefix_map.ml[49,2107+19]..[49,2107+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/build_path_prefix_map.ml[49,2107+26]..[49,2107+61])
                                                  Pexp_constant PConst_string("invalid %%-escaped character '%c'",(utils/build_path_prefix_map.ml[49,2107+27]..[49,2107+60]),None)
                                              <arg>
                                              Nolabel
                                                expression (utils/build_path_prefix_map.ml[49,2107+62]..[49,2107+63])
                                                  Pexp_ident "c" (utils/build_path_prefix_map.ml[49,2107+62]..[49,2107+63])
                                            ]
                                      ]
                            <case>
                              pattern (utils/build_path_prefix_map.ml[51,2183+8]..[51,2183+9])
                                Ppat_var "c" (utils/build_path_prefix_map.ml[51,2183+8]..[51,2183+9])
                              expression (utils/build_path_prefix_map.ml[52,2196+8]..[53,2227+20])
                                Pexp_sequence
                                expression (utils/build_path_prefix_map.ml[52,2196+8]..[52,2196+29])
                                  Pexp_apply
                                  expression (utils/build_path_prefix_map.ml[52,2196+8]..[52,2196+23])
                                    Pexp_ident "Buffer.add_char" (utils/build_path_prefix_map.ml[52,2196+8]..[52,2196+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/build_path_prefix_map.ml[52,2196+24]..[52,2196+27])
                                        Pexp_ident "buf" (utils/build_path_prefix_map.ml[52,2196+24]..[52,2196+27])
                                    <arg>
                                    Nolabel
                                      expression (utils/build_path_prefix_map.ml[52,2196+28]..[52,2196+29])
                                        Pexp_ident "c" (utils/build_path_prefix_map.ml[52,2196+28]..[52,2196+29])
                                  ]
                                expression (utils/build_path_prefix_map.ml[53,2227+8]..[53,2227+20])
                                  Pexp_apply
                                  expression (utils/build_path_prefix_map.ml[53,2227+8]..[53,2227+12])
                                    Pexp_ident "loop" (utils/build_path_prefix_map.ml[53,2227+8]..[53,2227+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/build_path_prefix_map.ml[53,2227+13]..[53,2227+20])
                                        Pexp_apply
                                        expression (utils/build_path_prefix_map.ml[53,2227+16]..[53,2227+17])
                                          Pexp_ident "+" (utils/build_path_prefix_map.ml[53,2227+16]..[53,2227+17])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/build_path_prefix_map.ml[53,2227+14]..[53,2227+15])
                                              Pexp_ident "i" (utils/build_path_prefix_map.ml[53,2227+14]..[53,2227+15])
                                          <arg>
                                          Nolabel
                                            expression (utils/build_path_prefix_map.ml[53,2227+18]..[53,2227+19])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                  ]
                          ]
              ]
              expression (utils/build_path_prefix_map.ml[54,2248+5]..[54,2248+11])
                Pexp_apply
                expression (utils/build_path_prefix_map.ml[54,2248+5]..[54,2248+9])
                  Pexp_ident "loop" (utils/build_path_prefix_map.ml[54,2248+5]..[54,2248+9])
                [
                  <arg>
                  Nolabel
                    expression (utils/build_path_prefix_map.ml[54,2248+10]..[54,2248+11])
                      Pexp_constant PConst_int (0,None)
                ]
    ]
  structure_item (utils/build_path_prefix_map.ml[56,2261+0]..[56,2261+57])
    Pstr_type Rec
    [
      type_declaration "pair" (utils/build_path_prefix_map.ml[56,2261+5]..[56,2261+9]) (utils/build_path_prefix_map.ml[56,2261+0]..[56,2261+57])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (utils/build_path_prefix_map.ml[56,2261+14]..[56,2261+34])
                Immutable
                "target" (utils/build_path_prefix_map.ml[56,2261+14]..[56,2261+20])                core_type (utils/build_path_prefix_map.ml[56,2261+22]..[56,2261+33])
                  Ptyp_constr "path_prefix" (utils/build_path_prefix_map.ml[56,2261+22]..[56,2261+33])
                  []
              (utils/build_path_prefix_map.ml[56,2261+35]..[56,2261+55])
                Immutable
                "source" (utils/build_path_prefix_map.ml[56,2261+35]..[56,2261+41])                core_type (utils/build_path_prefix_map.ml[56,2261+44]..[56,2261+55])
                  Ptyp_constr "path_prefix" (utils/build_path_prefix_map.ml[56,2261+44]..[56,2261+55])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (utils/build_path_prefix_map.ml[58,2320+0]..[59,2357+64])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/build_path_prefix_map.ml[58,2320+4]..[58,2320+15])
          Ppat_var "encode_pair" (utils/build_path_prefix_map.ml[58,2320+4]..[58,2320+15])
        expression (utils/build_path_prefix_map.ml[58,2320+16]..[59,2357+64]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/build_path_prefix_map.ml[58,2320+16]..[58,2320+34])
            Ppat_record Closed
            [
              "target" (utils/build_path_prefix_map.ml[58,2320+18]..[58,2320+24]) ghost
                pattern (utils/build_path_prefix_map.ml[58,2320+18]..[58,2320+24])
                  Ppat_var "target" (utils/build_path_prefix_map.ml[58,2320+18]..[58,2320+24])
              "source" (utils/build_path_prefix_map.ml[58,2320+26]..[58,2320+32]) ghost
                pattern (utils/build_path_prefix_map.ml[58,2320+26]..[58,2320+32])
                  Ppat_var "source" (utils/build_path_prefix_map.ml[58,2320+26]..[58,2320+32])
            ]
          expression (utils/build_path_prefix_map.ml[59,2357+2]..[59,2357+64])
            Pexp_apply
            expression (utils/build_path_prefix_map.ml[59,2357+2]..[59,2357+15])
              Pexp_ident "String.concat" (utils/build_path_prefix_map.ml[59,2357+2]..[59,2357+15])
            [
              <arg>
              Nolabel
                expression (utils/build_path_prefix_map.ml[59,2357+16]..[59,2357+19])
                  Pexp_constant PConst_string("=",(utils/build_path_prefix_map.ml[59,2357+17]..[59,2357+18]),None)
              <arg>
              Nolabel
                expression (utils/build_path_prefix_map.ml[59,2357+20]..[59,2357+64])
                  Pexp_construct "::" (utils/build_path_prefix_map.ml[59,2357+21]..[59,2357+64]) ghost
                  Some
                    expression (utils/build_path_prefix_map.ml[59,2357+21]..[59,2357+64]) ghost
                      Pexp_tuple
                      [
                        expression (utils/build_path_prefix_map.ml[59,2357+21]..[59,2357+41])
                          Pexp_apply
                          expression (utils/build_path_prefix_map.ml[59,2357+21]..[59,2357+34])
                            Pexp_ident "encode_prefix" (utils/build_path_prefix_map.ml[59,2357+21]..[59,2357+34])
                          [
                            <arg>
                            Nolabel
                              expression (utils/build_path_prefix_map.ml[59,2357+35]..[59,2357+41])
                                Pexp_ident "target" (utils/build_path_prefix_map.ml[59,2357+35]..[59,2357+41])
                          ]
                        expression (utils/build_path_prefix_map.ml[59,2357+43]..[59,2357+64]) ghost
                          Pexp_construct "::" (utils/build_path_prefix_map.ml[59,2357+43]..[59,2357+64]) ghost
                          Some
                            expression (utils/build_path_prefix_map.ml[59,2357+43]..[59,2357+64]) ghost
                              Pexp_tuple
                              [
                                expression (utils/build_path_prefix_map.ml[59,2357+43]..[59,2357+63])
                                  Pexp_apply
                                  expression (utils/build_path_prefix_map.ml[59,2357+43]..[59,2357+56])
                                    Pexp_ident "encode_prefix" (utils/build_path_prefix_map.ml[59,2357+43]..[59,2357+56])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/build_path_prefix_map.ml[59,2357+57]..[59,2357+63])
                                        Pexp_ident "source" (utils/build_path_prefix_map.ml[59,2357+57]..[59,2357+63])
                                  ]
                                expression (utils/build_path_prefix_map.ml[59,2357+63]..[59,2357+64]) ghost
                                  Pexp_construct "[]" (utils/build_path_prefix_map.ml[59,2357+63]..[59,2357+64]) ghost
                                  None
                              ]
                      ]
            ]
    ]
  structure_item (utils/build_path_prefix_map.ml[61,2423+0]..[71,2866+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/build_path_prefix_map.ml[61,2423+4]..[61,2423+15])
          Ppat_var "decode_pair" (utils/build_path_prefix_map.ml[61,2423+4]..[61,2423+15])
        expression (utils/build_path_prefix_map.ml[61,2423+16]..[71,2866+58]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/build_path_prefix_map.ml[61,2423+16]..[61,2423+19])
            Ppat_var "str" (utils/build_path_prefix_map.ml[61,2423+16]..[61,2423+19])
          expression (utils/build_path_prefix_map.ml[62,2445+2]..[71,2866+58])
            Pexp_match
            expression (utils/build_path_prefix_map.ml[62,2445+8]..[62,2445+28])
              Pexp_apply
              expression (utils/build_path_prefix_map.ml[62,2445+8]..[62,2445+20])
                Pexp_ident "String.index" (utils/build_path_prefix_map.ml[62,2445+8]..[62,2445+20])
              [
                <arg>
                Nolabel
                  expression (utils/build_path_prefix_map.ml[62,2445+21]..[62,2445+24])
                    Pexp_ident "str" (utils/build_path_prefix_map.ml[62,2445+21]..[62,2445+24])
                <arg>
                Nolabel
                  expression (utils/build_path_prefix_map.ml[62,2445+25]..[62,2445+28])
                    Pexp_constant PConst_char 3d
              ]
            [
              <case>
                pattern (utils/build_path_prefix_map.ml[63,2479+4]..[63,2479+23])
                  Ppat_exception
                  pattern (utils/build_path_prefix_map.ml[63,2479+14]..[63,2479+23])
                    Ppat_construct "Not_found" (utils/build_path_prefix_map.ml[63,2479+14]..[63,2479+23])
                    None
                expression (utils/build_path_prefix_map.ml[64,2506+4]..[64,2506+60])
                  Pexp_apply
                  expression (utils/build_path_prefix_map.ml[64,2506+4]..[64,2506+10])
                    Pexp_ident "errorf" (utils/build_path_prefix_map.ml[64,2506+4]..[64,2506+10])
                  [
                    <arg>
                    Nolabel
                      expression (utils/build_path_prefix_map.ml[64,2506+11]..[64,2506+56])
                        Pexp_constant PConst_string("invalid key/value pair %S, no '=' separator",(utils/build_path_prefix_map.ml[64,2506+12]..[64,2506+55]),None)
                    <arg>
                    Nolabel
                      expression (utils/build_path_prefix_map.ml[64,2506+57]..[64,2506+60])
                        Pexp_ident "str" (utils/build_path_prefix_map.ml[64,2506+57]..[64,2506+60])
                  ]
              <case>
                pattern (utils/build_path_prefix_map.ml[65,2567+4]..[65,2567+13])
                  Ppat_var "equal_pos" (utils/build_path_prefix_map.ml[65,2567+4]..[65,2567+13])
                expression (utils/build_path_prefix_map.ml[66,2584+4]..[71,2866+58])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (utils/build_path_prefix_map.ml[66,2584+8]..[66,2584+22])
                        Ppat_var "encoded_target" (utils/build_path_prefix_map.ml[66,2584+8]..[66,2584+22])
                      expression (utils/build_path_prefix_map.ml[66,2584+25]..[66,2584+51])
                        Pexp_apply
                        expression (utils/build_path_prefix_map.ml[66,2584+25]..[66,2584+35])
                          Pexp_ident "String.sub" (utils/build_path_prefix_map.ml[66,2584+25]..[66,2584+35])
                        [
                          <arg>
                          Nolabel
                            expression (utils/build_path_prefix_map.ml[66,2584+36]..[66,2584+39])
                              Pexp_ident "str" (utils/build_path_prefix_map.ml[66,2584+36]..[66,2584+39])
                          <arg>
                          Nolabel
                            expression (utils/build_path_prefix_map.ml[66,2584+40]..[66,2584+41])
                              Pexp_constant PConst_int (0,None)
                          <arg>
                          Nolabel
                            expression (utils/build_path_prefix_map.ml[66,2584+42]..[66,2584+51])
                              Pexp_ident "equal_pos" (utils/build_path_prefix_map.ml[66,2584+42]..[66,2584+51])
                        ]
                  ]
                  expression (utils/build_path_prefix_map.ml[67,2639+4]..[71,2866+58])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (utils/build_path_prefix_map.ml[67,2639+8]..[67,2639+22])
                          Ppat_var "encoded_source" (utils/build_path_prefix_map.ml[67,2639+8]..[67,2639+22])
                        expression (utils/build_path_prefix_map.ml[68,2664+6]..[68,2664+72])
                          Pexp_apply
                          expression (utils/build_path_prefix_map.ml[68,2664+6]..[68,2664+16])
                            Pexp_ident "String.sub" (utils/build_path_prefix_map.ml[68,2664+6]..[68,2664+16])
                          [
                            <arg>
                            Nolabel
                              expression (utils/build_path_prefix_map.ml[68,2664+17]..[68,2664+20])
                                Pexp_ident "str" (utils/build_path_prefix_map.ml[68,2664+17]..[68,2664+20])
                            <arg>
                            Nolabel
                              expression (utils/build_path_prefix_map.ml[68,2664+21]..[68,2664+36])
                                Pexp_apply
                                expression (utils/build_path_prefix_map.ml[68,2664+32]..[68,2664+33])
                                  Pexp_ident "+" (utils/build_path_prefix_map.ml[68,2664+32]..[68,2664+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/build_path_prefix_map.ml[68,2664+22]..[68,2664+31])
                                      Pexp_ident "equal_pos" (utils/build_path_prefix_map.ml[68,2664+22]..[68,2664+31])
                                  <arg>
                                  Nolabel
                                    expression (utils/build_path_prefix_map.ml[68,2664+34]..[68,2664+35])
                                      Pexp_constant PConst_int (1,None)
                                ]
                            <arg>
                            Nolabel
                              expression (utils/build_path_prefix_map.ml[68,2664+37]..[68,2664+72])
                                Pexp_apply
                                expression (utils/build_path_prefix_map.ml[68,2664+68]..[68,2664+69])
                                  Pexp_ident "-" (utils/build_path_prefix_map.ml[68,2664+68]..[68,2664+69])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/build_path_prefix_map.ml[68,2664+38]..[68,2664+67])
                                      Pexp_apply
                                      expression (utils/build_path_prefix_map.ml[68,2664+56]..[68,2664+57])
                                        Pexp_ident "-" (utils/build_path_prefix_map.ml[68,2664+56]..[68,2664+57])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/build_path_prefix_map.ml[68,2664+38]..[68,2664+55])
                                            Pexp_apply
                                            expression (utils/build_path_prefix_map.ml[68,2664+38]..[68,2664+51])
                                              Pexp_ident "String.length" (utils/build_path_prefix_map.ml[68,2664+38]..[68,2664+51])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/build_path_prefix_map.ml[68,2664+52]..[68,2664+55])
                                                  Pexp_ident "str" (utils/build_path_prefix_map.ml[68,2664+52]..[68,2664+55])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (utils/build_path_prefix_map.ml[68,2664+58]..[68,2664+67])
                                            Pexp_ident "equal_pos" (utils/build_path_prefix_map.ml[68,2664+58]..[68,2664+67])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (utils/build_path_prefix_map.ml[68,2664+70]..[68,2664+71])
                                      Pexp_constant PConst_int (1,None)
                                ]
                          ]
                    ]
                    expression (utils/build_path_prefix_map.ml[69,2740+4]..[71,2866+58])
                      Pexp_match
                      expression (utils/build_path_prefix_map.ml[69,2740+10]..[69,2740+68])
                        Pexp_tuple
                        [
                          expression (utils/build_path_prefix_map.ml[69,2740+10]..[69,2740+38])
                            Pexp_apply
                            expression (utils/build_path_prefix_map.ml[69,2740+10]..[69,2740+23])
                              Pexp_ident "decode_prefix" (utils/build_path_prefix_map.ml[69,2740+10]..[69,2740+23])
                            [
                              <arg>
                              Nolabel
                                expression (utils/build_path_prefix_map.ml[69,2740+24]..[69,2740+38])
                                  Pexp_ident "encoded_target" (utils/build_path_prefix_map.ml[69,2740+24]..[69,2740+38])
                            ]
                          expression (utils/build_path_prefix_map.ml[69,2740+40]..[69,2740+68])
                            Pexp_apply
                            expression (utils/build_path_prefix_map.ml[69,2740+40]..[69,2740+53])
                              Pexp_ident "decode_prefix" (utils/build_path_prefix_map.ml[69,2740+40]..[69,2740+53])
                            [
                              <arg>
                              Nolabel
                                expression (utils/build_path_prefix_map.ml[69,2740+54]..[69,2740+68])
                                  Pexp_ident "encoded_source" (utils/build_path_prefix_map.ml[69,2740+54]..[69,2740+68])
                            ]
                        ]
                      [
                        <case>
                          pattern (utils/build_path_prefix_map.ml[70,2814+6]..[70,2814+26])
                            Ppat_tuple
                            [
                              pattern (utils/build_path_prefix_map.ml[70,2814+6]..[70,2814+15])
                                Ppat_construct "Ok" (utils/build_path_prefix_map.ml[70,2814+6]..[70,2814+8])
                                Some
                                  []
                                  pattern (utils/build_path_prefix_map.ml[70,2814+9]..[70,2814+15])
                                    Ppat_var "target" (utils/build_path_prefix_map.ml[70,2814+9]..[70,2814+15])
                              pattern (utils/build_path_prefix_map.ml[70,2814+17]..[70,2814+26])
                                Ppat_construct "Ok" (utils/build_path_prefix_map.ml[70,2814+17]..[70,2814+19])
                                Some
                                  []
                                  pattern (utils/build_path_prefix_map.ml[70,2814+20]..[70,2814+26])
                                    Ppat_var "source" (utils/build_path_prefix_map.ml[70,2814+20]..[70,2814+26])
                            ]
                          expression (utils/build_path_prefix_map.ml[70,2814+30]..[70,2814+51])
                            Pexp_construct "Ok" (utils/build_path_prefix_map.ml[70,2814+30]..[70,2814+32])
                            Some
                              expression (utils/build_path_prefix_map.ml[70,2814+33]..[70,2814+51])
                                Pexp_record
                                [
                                  "target" (utils/build_path_prefix_map.ml[70,2814+35]..[70,2814+41]) ghost
                                    expression (utils/build_path_prefix_map.ml[70,2814+35]..[70,2814+41])
                                      Pexp_ident "target" (utils/build_path_prefix_map.ml[70,2814+35]..[70,2814+41])
                                  "source" (utils/build_path_prefix_map.ml[70,2814+43]..[70,2814+49]) ghost
                                    expression (utils/build_path_prefix_map.ml[70,2814+43]..[70,2814+49])
                                      Pexp_ident "source" (utils/build_path_prefix_map.ml[70,2814+43]..[70,2814+49])
                                ]
                                None
                        <case>
                          pattern (utils/build_path_prefix_map.ml[71,2866+6]..[71,2866+51])
                            Ppat_or
                            pattern (utils/build_path_prefix_map.ml[71,2866+6]..[71,2866+27])
                              Ppat_tuple
                              [
                                pattern (utils/build_path_prefix_map.ml[71,2866+7]..[71,2866+23])
                                  Ppat_alias "err" (utils/build_path_prefix_map.ml[71,2866+19]..[71,2866+22])
                                  pattern (utils/build_path_prefix_map.ml[71,2866+8]..[71,2866+15])
                                    Ppat_construct "Error" (utils/build_path_prefix_map.ml[71,2866+8]..[71,2866+13])
                                    Some
                                      []
                                      pattern (utils/build_path_prefix_map.ml[71,2866+14]..[71,2866+15])
                                        Ppat_any
                                pattern (utils/build_path_prefix_map.ml[71,2866+25]..[71,2866+26])
                                  Ppat_any
                              ]
                            pattern (utils/build_path_prefix_map.ml[71,2866+30]..[71,2866+51])
                              Ppat_tuple
                              [
                                pattern (utils/build_path_prefix_map.ml[71,2866+31]..[71,2866+32])
                                  Ppat_any
                                pattern (utils/build_path_prefix_map.ml[71,2866+34]..[71,2866+50])
                                  Ppat_alias "err" (utils/build_path_prefix_map.ml[71,2866+46]..[71,2866+49])
                                  pattern (utils/build_path_prefix_map.ml[71,2866+35]..[71,2866+42])
                                    Ppat_construct "Error" (utils/build_path_prefix_map.ml[71,2866+35]..[71,2866+40])
                                    Some
                                      []
                                      pattern (utils/build_path_prefix_map.ml[71,2866+41]..[71,2866+42])
                                        Ppat_any
                              ]
                          expression (utils/build_path_prefix_map.ml[71,2866+55]..[71,2866+58])
                            Pexp_ident "err" (utils/build_path_prefix_map.ml[71,2866+55]..[71,2866+58])
                      ]
            ]
    ]
  structure_item (utils/build_path_prefix_map.ml[73,2926+0]..[73,2926+27])
    Pstr_type Rec
    [
      type_declaration "map" (utils/build_path_prefix_map.ml[73,2926+5]..[73,2926+8]) (utils/build_path_prefix_map.ml[73,2926+0]..[73,2926+27])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (utils/build_path_prefix_map.ml[73,2926+11]..[73,2926+27])
              Ptyp_constr "list" (utils/build_path_prefix_map.ml[73,2926+23]..[73,2926+27])
              [
                core_type (utils/build_path_prefix_map.ml[73,2926+11]..[73,2926+22])
                  Ptyp_constr "option" (utils/build_path_prefix_map.ml[73,2926+16]..[73,2926+22])
                  [
                    core_type (utils/build_path_prefix_map.ml[73,2926+11]..[73,2926+15])
                      Ptyp_constr "pair" (utils/build_path_prefix_map.ml[73,2926+11]..[73,2926+15])
                      []
                  ]
              ]
    ]
  structure_item (utils/build_path_prefix_map.ml[75,2955+0]..[81,3090+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/build_path_prefix_map.ml[75,2955+4]..[75,2955+14])
          Ppat_var "encode_map" (utils/build_path_prefix_map.ml[75,2955+4]..[75,2955+14])
        expression (utils/build_path_prefix_map.ml[75,2955+15]..[81,3090+22]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/build_path_prefix_map.ml[75,2955+15]..[75,2955+18])
            Ppat_var "map" (utils/build_path_prefix_map.ml[75,2955+15]..[75,2955+18])
          expression (utils/build_path_prefix_map.ml[76,2976+2]..[81,3090+22])
            Pexp_let Nonrec
            [
              <def>
                pattern (utils/build_path_prefix_map.ml[76,2976+6]..[76,2976+17])
                  Ppat_var "encode_elem" (utils/build_path_prefix_map.ml[76,2976+6]..[76,2976+17])
                expression (utils/build_path_prefix_map.ml[76,2976+20]..[78,3022+35])
                  Pexp_function
                  [
                    <case>
                      pattern (utils/build_path_prefix_map.ml[77,3005+6]..[77,3005+10])
                        Ppat_construct "None" (utils/build_path_prefix_map.ml[77,3005+6]..[77,3005+10])
                        None
                      expression (utils/build_path_prefix_map.ml[77,3005+14]..[77,3005+16])
                        Pexp_constant PConst_string("",(utils/build_path_prefix_map.ml[77,3005+15]..[77,3005+15]),None)
                    <case>
                      pattern (utils/build_path_prefix_map.ml[78,3022+6]..[78,3022+15])
                        Ppat_construct "Some" (utils/build_path_prefix_map.ml[78,3022+6]..[78,3022+10])
                        Some
                          []
                          pattern (utils/build_path_prefix_map.ml[78,3022+11]..[78,3022+15])
                            Ppat_var "pair" (utils/build_path_prefix_map.ml[78,3022+11]..[78,3022+15])
                      expression (utils/build_path_prefix_map.ml[78,3022+19]..[78,3022+35])
                        Pexp_apply
                        expression (utils/build_path_prefix_map.ml[78,3022+19]..[78,3022+30])
                          Pexp_ident "encode_pair" (utils/build_path_prefix_map.ml[78,3022+19]..[78,3022+30])
                        [
                          <arg>
                          Nolabel
                            expression (utils/build_path_prefix_map.ml[78,3022+31]..[78,3022+35])
                              Pexp_ident "pair" (utils/build_path_prefix_map.ml[78,3022+31]..[78,3022+35])
                        ]
                  ]
            ]
            expression (utils/build_path_prefix_map.ml[80,3063+2]..[81,3090+22])
              Pexp_apply
              expression (utils/build_path_prefix_map.ml[81,3090+2]..[81,3090+4])
                Pexp_ident "|>" (utils/build_path_prefix_map.ml[81,3090+2]..[81,3090+4])
              [
                <arg>
                Nolabel
                  expression (utils/build_path_prefix_map.ml[80,3063+2]..[80,3063+26])
                    Pexp_apply
                    expression (utils/build_path_prefix_map.ml[80,3063+2]..[80,3063+10])
                      Pexp_ident "List.map" (utils/build_path_prefix_map.ml[80,3063+2]..[80,3063+10])
                    [
                      <arg>
                      Nolabel
                        expression (utils/build_path_prefix_map.ml[80,3063+11]..[80,3063+22])
                          Pexp_ident "encode_elem" (utils/build_path_prefix_map.ml[80,3063+11]..[80,3063+22])
                      <arg>
                      Nolabel
                        expression (utils/build_path_prefix_map.ml[80,3063+23]..[80,3063+26])
                          Pexp_ident "map" (utils/build_path_prefix_map.ml[80,3063+23]..[80,3063+26])
                    ]
                <arg>
                Nolabel
                  expression (utils/build_path_prefix_map.ml[81,3090+5]..[81,3090+22])
                    Pexp_apply
                    expression (utils/build_path_prefix_map.ml[81,3090+5]..[81,3090+18])
                      Pexp_ident "String.concat" (utils/build_path_prefix_map.ml[81,3090+5]..[81,3090+18])
                    [
                      <arg>
                      Nolabel
                        expression (utils/build_path_prefix_map.ml[81,3090+19]..[81,3090+22])
                          Pexp_constant PConst_string(":",(utils/build_path_prefix_map.ml[81,3090+20]..[81,3090+21]),None)
                    ]
              ]
    ]
  structure_item (utils/build_path_prefix_map.ml[83,3114+0]..[96,3504+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/build_path_prefix_map.ml[83,3114+4]..[83,3114+14])
          Ppat_var "decode_map" (utils/build_path_prefix_map.ml[83,3114+4]..[83,3114+14])
        expression (utils/build_path_prefix_map.ml[83,3114+15]..[96,3504+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/build_path_prefix_map.ml[83,3114+15]..[83,3114+18])
            Ppat_var "str" (utils/build_path_prefix_map.ml[83,3114+15]..[83,3114+18])
          expression (utils/build_path_prefix_map.ml[84,3135+2]..[96,3504+17])
            Pexp_letexception
            extension_constructor (utils/build_path_prefix_map.ml[84,3135+16]..[84,3135+41])
              pext_name = "Shortcut"
              pext_kind =
                Pext_decl
                  [
                    core_type (utils/build_path_prefix_map.ml[84,3135+28]..[84,3135+41])
                      Ptyp_constr "error_message" (utils/build_path_prefix_map.ml[84,3135+28]..[84,3135+41])
                      []
                  ]
                  None
            expression (utils/build_path_prefix_map.ml[85,3180+2]..[96,3504+17])
              Pexp_let Nonrec
              [
                <def>
                  pattern (utils/build_path_prefix_map.ml[85,3180+6]..[85,3180+21])
                    Ppat_var "decode_or_empty" (utils/build_path_prefix_map.ml[85,3180+6]..[85,3180+21])
                  expression (utils/build_path_prefix_map.ml[85,3180+24]..[91,3357+9])
                    Pexp_function
                    [
                      <case>
                        pattern (utils/build_path_prefix_map.ml[86,3213+6]..[86,3213+8])
                          Ppat_constant PConst_string("",(utils/build_path_prefix_map.ml[86,3213+7]..[86,3213+7]),None)
                        expression (utils/build_path_prefix_map.ml[86,3213+12]..[86,3213+16])
                          Pexp_construct "None" (utils/build_path_prefix_map.ml[86,3213+12]..[86,3213+16])
                          None
                      <case>
                        pattern (utils/build_path_prefix_map.ml[87,3230+6]..[87,3230+10])
                          Ppat_var "pair" (utils/build_path_prefix_map.ml[87,3230+6]..[87,3230+10])
                        expression (utils/build_path_prefix_map.ml[88,3244+6]..[91,3357+9])
                          Pexp_match
                          expression (utils/build_path_prefix_map.ml[88,3244+18]..[88,3244+34])
                            Pexp_apply
                            expression (utils/build_path_prefix_map.ml[88,3244+18]..[88,3244+29])
                              Pexp_ident "decode_pair" (utils/build_path_prefix_map.ml[88,3244+18]..[88,3244+29])
                            [
                              <arg>
                              Nolabel
                                expression (utils/build_path_prefix_map.ml[88,3244+30]..[88,3244+34])
                                  Pexp_ident "pair" (utils/build_path_prefix_map.ml[88,3244+30]..[88,3244+34])
                            ]
                          [
                            <case>
                              pattern (utils/build_path_prefix_map.ml[89,3284+10]..[89,3284+16])
                                Ppat_construct "Ok" (utils/build_path_prefix_map.ml[89,3284+10]..[89,3284+12])
                                Some
                                  []
                                  pattern (utils/build_path_prefix_map.ml[89,3284+13]..[89,3284+16])
                                    Ppat_var "str" (utils/build_path_prefix_map.ml[89,3284+13]..[89,3284+16])
                              expression (utils/build_path_prefix_map.ml[89,3284+20]..[89,3284+28])
                                Pexp_construct "Some" (utils/build_path_prefix_map.ml[89,3284+20]..[89,3284+24])
                                Some
                                  expression (utils/build_path_prefix_map.ml[89,3284+25]..[89,3284+28])
                                    Pexp_ident "str" (utils/build_path_prefix_map.ml[89,3284+25]..[89,3284+28])
                            <case>
                              pattern (utils/build_path_prefix_map.ml[90,3313+10]..[90,3313+19])
                                Ppat_construct "Error" (utils/build_path_prefix_map.ml[90,3313+10]..[90,3313+15])
                                Some
                                  []
                                  pattern (utils/build_path_prefix_map.ml[90,3313+16]..[90,3313+19])
                                    Ppat_var "err" (utils/build_path_prefix_map.ml[90,3313+16]..[90,3313+19])
                              expression (utils/build_path_prefix_map.ml[90,3313+23]..[90,3313+43])
                                Pexp_apply
                                expression (utils/build_path_prefix_map.ml[90,3313+23]..[90,3313+28])
                                  Pexp_ident "raise" (utils/build_path_prefix_map.ml[90,3313+23]..[90,3313+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/build_path_prefix_map.ml[90,3313+29]..[90,3313+43])
                                      Pexp_construct "Shortcut" (utils/build_path_prefix_map.ml[90,3313+30]..[90,3313+38])
                                      Some
                                        expression (utils/build_path_prefix_map.ml[90,3313+39]..[90,3313+42])
                                          Pexp_ident "err" (utils/build_path_prefix_map.ml[90,3313+39]..[90,3313+42])
                                ]
                          ]
                    ]
              ]
              expression (utils/build_path_prefix_map.ml[93,3372+2]..[96,3504+17])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (utils/build_path_prefix_map.ml[93,3372+6]..[93,3372+11])
                      Ppat_var "pairs" (utils/build_path_prefix_map.ml[93,3372+6]..[93,3372+11])
                    expression (utils/build_path_prefix_map.ml[93,3372+14]..[93,3372+42])
                      Pexp_apply
                      expression (utils/build_path_prefix_map.ml[93,3372+14]..[93,3372+34])
                        Pexp_ident "String.split_on_char" (utils/build_path_prefix_map.ml[93,3372+14]..[93,3372+34])
                      [
                        <arg>
                        Nolabel
                          expression (utils/build_path_prefix_map.ml[93,3372+35]..[93,3372+38])
                            Pexp_constant PConst_char 3a
                        <arg>
                        Nolabel
                          expression (utils/build_path_prefix_map.ml[93,3372+39]..[93,3372+42])
                            Pexp_ident "str" (utils/build_path_prefix_map.ml[93,3372+39]..[93,3372+42])
                      ]
                ]
                expression (utils/build_path_prefix_map.ml[94,3418+2]..[96,3504+17])
                  Pexp_match
                  expression (utils/build_path_prefix_map.ml[94,3418+8]..[94,3418+38])
                    Pexp_apply
                    expression (utils/build_path_prefix_map.ml[94,3418+8]..[94,3418+16])
                      Pexp_ident "List.map" (utils/build_path_prefix_map.ml[94,3418+8]..[94,3418+16])
                    [
                      <arg>
                      Nolabel
                        expression (utils/build_path_prefix_map.ml[94,3418+17]..[94,3418+32])
                          Pexp_ident "decode_or_empty" (utils/build_path_prefix_map.ml[94,3418+17]..[94,3418+32])
                      <arg>
                      Nolabel
                        expression (utils/build_path_prefix_map.ml[94,3418+33]..[94,3418+38])
                          Pexp_ident "pairs" (utils/build_path_prefix_map.ml[94,3418+33]..[94,3418+38])
                    ]
                  [
                    <case>
                      pattern (utils/build_path_prefix_map.ml[95,3462+4]..[95,3462+28])
                        Ppat_exception
                        pattern (utils/build_path_prefix_map.ml[95,3462+14]..[95,3462+28])
                          Ppat_construct "Shortcut" (utils/build_path_prefix_map.ml[95,3462+15]..[95,3462+23])
                          Some
                            []
                            pattern (utils/build_path_prefix_map.ml[95,3462+24]..[95,3462+27])
                              Ppat_var "err" (utils/build_path_prefix_map.ml[95,3462+24]..[95,3462+27])
                      expression (utils/build_path_prefix_map.ml[95,3462+32]..[95,3462+41])
                        Pexp_construct "Error" (utils/build_path_prefix_map.ml[95,3462+32]..[95,3462+37])
                        Some
                          expression (utils/build_path_prefix_map.ml[95,3462+38]..[95,3462+41])
                            Pexp_ident "err" (utils/build_path_prefix_map.ml[95,3462+38]..[95,3462+41])
                    <case>
                      pattern (utils/build_path_prefix_map.ml[96,3504+4]..[96,3504+7])
                        Ppat_var "map" (utils/build_path_prefix_map.ml[96,3504+4]..[96,3504+7])
                      expression (utils/build_path_prefix_map.ml[96,3504+11]..[96,3504+17])
                        Pexp_construct "Ok" (utils/build_path_prefix_map.ml[96,3504+11]..[96,3504+13])
                        Some
                          expression (utils/build_path_prefix_map.ml[96,3504+14]..[96,3504+17])
                            Pexp_ident "map" (utils/build_path_prefix_map.ml[96,3504+14]..[96,3504+17])
                  ]
    ]
  structure_item (utils/build_path_prefix_map.ml[98,3523+0]..[114,4048+68])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/build_path_prefix_map.ml[98,3523+4]..[98,3523+15])
          Ppat_var "rewrite_opt" (utils/build_path_prefix_map.ml[98,3523+4]..[98,3523+15])
        expression (utils/build_path_prefix_map.ml[98,3523+16]..[114,4048+68]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/build_path_prefix_map.ml[98,3523+16]..[98,3523+26])
            Ppat_var "prefix_map" (utils/build_path_prefix_map.ml[98,3523+16]..[98,3523+26])
          expression (utils/build_path_prefix_map.ml[98,3523+27]..[114,4048+68]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/build_path_prefix_map.ml[98,3523+27]..[98,3523+31])
              Ppat_var "path" (utils/build_path_prefix_map.ml[98,3523+27]..[98,3523+31])
            expression (utils/build_path_prefix_map.ml[99,3557+2]..[114,4048+68])
              Pexp_let Nonrec
              [
                <def>
                  pattern (utils/build_path_prefix_map.ml[99,3557+6]..[99,3557+15])
                    Ppat_var "is_prefix" (utils/build_path_prefix_map.ml[99,3557+6]..[99,3557+15])
                  expression (utils/build_path_prefix_map.ml[99,3557+18]..[103,3690+71])
                    Pexp_function
                    [
                      <case>
                        pattern (utils/build_path_prefix_map.ml[100,3584+6]..[100,3584+10])
                          Ppat_construct "None" (utils/build_path_prefix_map.ml[100,3584+6]..[100,3584+10])
                          None
                        expression (utils/build_path_prefix_map.ml[100,3584+14]..[100,3584+19])
                          Pexp_construct "false" (utils/build_path_prefix_map.ml[100,3584+14]..[100,3584+19])
                          None
                      <case>
                        pattern (utils/build_path_prefix_map.ml[101,3604+6]..[101,3604+33])
                          Ppat_construct "Some" (utils/build_path_prefix_map.ml[101,3604+6]..[101,3604+10])
                          Some
                            []
                            pattern (utils/build_path_prefix_map.ml[101,3604+11]..[101,3604+33])
                              Ppat_record Closed
                              [
                                "target" (utils/build_path_prefix_map.ml[101,3604+13]..[101,3604+19])
                                  pattern (utils/build_path_prefix_map.ml[101,3604+22]..[101,3604+23])
                                    Ppat_any
                                "source" (utils/build_path_prefix_map.ml[101,3604+25]..[101,3604+31]) ghost
                                  pattern (utils/build_path_prefix_map.ml[101,3604+25]..[101,3604+31])
                                    Ppat_var "source" (utils/build_path_prefix_map.ml[101,3604+25]..[101,3604+31])
                              ]
                        expression (utils/build_path_prefix_map.ml[102,3641+6]..[103,3690+71])
                          Pexp_apply
                          expression (utils/build_path_prefix_map.ml[103,3690+6]..[103,3690+8])
                            Pexp_ident "&&" (utils/build_path_prefix_map.ml[103,3690+6]..[103,3690+8])
                          [
                            <arg>
                            Nolabel
                              expression (utils/build_path_prefix_map.ml[102,3641+6]..[102,3641+48])
                                Pexp_apply
                                expression (utils/build_path_prefix_map.ml[102,3641+27]..[102,3641+29])
                                  Pexp_ident "<=" (utils/build_path_prefix_map.ml[102,3641+27]..[102,3641+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/build_path_prefix_map.ml[102,3641+6]..[102,3641+26])
                                      Pexp_apply
                                      expression (utils/build_path_prefix_map.ml[102,3641+6]..[102,3641+19])
                                        Pexp_ident "String.length" (utils/build_path_prefix_map.ml[102,3641+6]..[102,3641+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/build_path_prefix_map.ml[102,3641+20]..[102,3641+26])
                                            Pexp_ident "source" (utils/build_path_prefix_map.ml[102,3641+20]..[102,3641+26])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (utils/build_path_prefix_map.ml[102,3641+30]..[102,3641+48])
                                      Pexp_apply
                                      expression (utils/build_path_prefix_map.ml[102,3641+30]..[102,3641+43])
                                        Pexp_ident "String.length" (utils/build_path_prefix_map.ml[102,3641+30]..[102,3641+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/build_path_prefix_map.ml[102,3641+44]..[102,3641+48])
                                            Pexp_ident "path" (utils/build_path_prefix_map.ml[102,3641+44]..[102,3641+48])
                                      ]
                                ]
                            <arg>
                            Nolabel
                              expression (utils/build_path_prefix_map.ml[103,3690+9]..[103,3690+71])
                                Pexp_apply
                                expression (utils/build_path_prefix_map.ml[103,3690+9]..[103,3690+21])
                                  Pexp_ident "String.equal" (utils/build_path_prefix_map.ml[103,3690+9]..[103,3690+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/build_path_prefix_map.ml[103,3690+22]..[103,3690+28])
                                      Pexp_ident "source" (utils/build_path_prefix_map.ml[103,3690+22]..[103,3690+28])
                                  <arg>
                                  Nolabel
                                    expression (utils/build_path_prefix_map.ml[103,3690+29]..[103,3690+71])
                                      Pexp_apply
                                      expression (utils/build_path_prefix_map.ml[103,3690+30]..[103,3690+40])
                                        Pexp_ident "String.sub" (utils/build_path_prefix_map.ml[103,3690+30]..[103,3690+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/build_path_prefix_map.ml[103,3690+41]..[103,3690+45])
                                            Pexp_ident "path" (utils/build_path_prefix_map.ml[103,3690+41]..[103,3690+45])
                                        <arg>
                                        Nolabel
                                          expression (utils/build_path_prefix_map.ml[103,3690+46]..[103,3690+47])
                                            Pexp_constant PConst_int (0,None)
                                        <arg>
                                        Nolabel
                                          expression (utils/build_path_prefix_map.ml[103,3690+48]..[103,3690+70])
                                            Pexp_apply
                                            expression (utils/build_path_prefix_map.ml[103,3690+49]..[103,3690+62])
                                              Pexp_ident "String.length" (utils/build_path_prefix_map.ml[103,3690+49]..[103,3690+62])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/build_path_prefix_map.ml[103,3690+63]..[103,3690+69])
                                                  Pexp_ident "source" (utils/build_path_prefix_map.ml[103,3690+63]..[103,3690+69])
                                            ]
                                      ]
                                ]
                          ]
                    ]
              ]
              expression (utils/build_path_prefix_map.ml[105,3767+2]..[114,4048+68])
                Pexp_match
                expression (utils/build_path_prefix_map.ml[106,3775+4]..[108,3872+27])
                  Pexp_apply
                  expression (utils/build_path_prefix_map.ml[106,3775+4]..[106,3775+13])
                    Pexp_ident "List.find" (utils/build_path_prefix_map.ml[106,3775+4]..[106,3775+13])
                  [
                    <arg>
                    Nolabel
                      expression (utils/build_path_prefix_map.ml[106,3775+14]..[106,3775+23])
                        Pexp_ident "is_prefix" (utils/build_path_prefix_map.ml[106,3775+14]..[106,3775+23])
                    <arg>
                    Nolabel
                      expression (utils/build_path_prefix_map.ml[108,3872+6]..[108,3872+27])
                        Pexp_apply
                        expression (utils/build_path_prefix_map.ml[108,3872+7]..[108,3872+15])
                          Pexp_ident "List.rev" (utils/build_path_prefix_map.ml[108,3872+7]..[108,3872+15])
                        [
                          <arg>
                          Nolabel
                            expression (utils/build_path_prefix_map.ml[108,3872+16]..[108,3872+26])
                              Pexp_ident "prefix_map" (utils/build_path_prefix_map.ml[108,3872+16]..[108,3872+26])
                        ]
                  ]
                [
                  <case>
                    pattern (utils/build_path_prefix_map.ml[110,3907+4]..[110,3907+23])
                      Ppat_exception
                      pattern (utils/build_path_prefix_map.ml[110,3907+14]..[110,3907+23])
                        Ppat_construct "Not_found" (utils/build_path_prefix_map.ml[110,3907+14]..[110,3907+23])
                        None
                    expression (utils/build_path_prefix_map.ml[110,3907+27]..[110,3907+31])
                      Pexp_construct "None" (utils/build_path_prefix_map.ml[110,3907+27]..[110,3907+31])
                      None
                  <case>
                    pattern (utils/build_path_prefix_map.ml[111,3939+4]..[111,3939+8])
                      Ppat_construct "None" (utils/build_path_prefix_map.ml[111,3939+4]..[111,3939+8])
                      None
                    expression (utils/build_path_prefix_map.ml[111,3939+12]..[111,3939+16])
                      Pexp_construct "None" (utils/build_path_prefix_map.ml[111,3939+12]..[111,3939+16])
                      None
                  <case>
                    pattern (utils/build_path_prefix_map.ml[112,3956+4]..[112,3956+27])
                      Ppat_construct "Some" (utils/build_path_prefix_map.ml[112,3956+4]..[112,3956+8])
                      Some
                        []
                        pattern (utils/build_path_prefix_map.ml[112,3956+9]..[112,3956+27])
                          Ppat_record Closed
                          [
                            "source" (utils/build_path_prefix_map.ml[112,3956+11]..[112,3956+17]) ghost
                              pattern (utils/build_path_prefix_map.ml[112,3956+11]..[112,3956+17])
                                Ppat_var "source" (utils/build_path_prefix_map.ml[112,3956+11]..[112,3956+17])
                            "target" (utils/build_path_prefix_map.ml[112,3956+19]..[112,3956+25]) ghost
                              pattern (utils/build_path_prefix_map.ml[112,3956+19]..[112,3956+25])
                                Ppat_var "target" (utils/build_path_prefix_map.ml[112,3956+19]..[112,3956+25])
                          ]
                    expression (utils/build_path_prefix_map.ml[113,3987+6]..[114,4048+68])
                      Pexp_construct "Some" (utils/build_path_prefix_map.ml[113,3987+6]..[113,3987+10])
                      Some
                        expression (utils/build_path_prefix_map.ml[113,3987+11]..[114,4048+68])
                          Pexp_apply
                          expression (utils/build_path_prefix_map.ml[113,3987+19]..[113,3987+20])
                            Pexp_ident "^" (utils/build_path_prefix_map.ml[113,3987+19]..[113,3987+20])
                          [
                            <arg>
                            Nolabel
                              expression (utils/build_path_prefix_map.ml[113,3987+12]..[113,3987+18])
                                Pexp_ident "target" (utils/build_path_prefix_map.ml[113,3987+12]..[113,3987+18])
                            <arg>
                            Nolabel
                              expression (utils/build_path_prefix_map.ml[113,3987+21]..[114,4048+67])
                                Pexp_apply
                                expression (utils/build_path_prefix_map.ml[113,3987+22]..[113,3987+32])
                                  Pexp_ident "String.sub" (utils/build_path_prefix_map.ml[113,3987+22]..[113,3987+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/build_path_prefix_map.ml[113,3987+33]..[113,3987+37])
                                      Pexp_ident "path" (utils/build_path_prefix_map.ml[113,3987+33]..[113,3987+37])
                                  <arg>
                                  Nolabel
                                    expression (utils/build_path_prefix_map.ml[113,3987+38]..[113,3987+60])
                                      Pexp_apply
                                      expression (utils/build_path_prefix_map.ml[113,3987+39]..[113,3987+52])
                                        Pexp_ident "String.length" (utils/build_path_prefix_map.ml[113,3987+39]..[113,3987+52])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/build_path_prefix_map.ml[113,3987+53]..[113,3987+59])
                                            Pexp_ident "source" (utils/build_path_prefix_map.ml[113,3987+53]..[113,3987+59])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (utils/build_path_prefix_map.ml[114,4048+23]..[114,4048+66])
                                      Pexp_apply
                                      expression (utils/build_path_prefix_map.ml[114,4048+43]..[114,4048+44])
                                        Pexp_ident "-" (utils/build_path_prefix_map.ml[114,4048+43]..[114,4048+44])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/build_path_prefix_map.ml[114,4048+24]..[114,4048+42])
                                            Pexp_apply
                                            expression (utils/build_path_prefix_map.ml[114,4048+24]..[114,4048+37])
                                              Pexp_ident "String.length" (utils/build_path_prefix_map.ml[114,4048+24]..[114,4048+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/build_path_prefix_map.ml[114,4048+38]..[114,4048+42])
                                                  Pexp_ident "path" (utils/build_path_prefix_map.ml[114,4048+38]..[114,4048+42])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (utils/build_path_prefix_map.ml[114,4048+45]..[114,4048+65])
                                            Pexp_apply
                                            expression (utils/build_path_prefix_map.ml[114,4048+45]..[114,4048+58])
                                              Pexp_ident "String.length" (utils/build_path_prefix_map.ml[114,4048+45]..[114,4048+58])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/build_path_prefix_map.ml[114,4048+59]..[114,4048+65])
                                                  Pexp_ident "source" (utils/build_path_prefix_map.ml[114,4048+59]..[114,4048+65])
                                            ]
                                      ]
                                ]
                          ]
                ]
    ]
  structure_item (utils/build_path_prefix_map.ml[116,4118+0]..[119,4206+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/build_path_prefix_map.ml[116,4118+4]..[116,4118+11])
          Ppat_var "rewrite" (utils/build_path_prefix_map.ml[116,4118+4]..[116,4118+11])
        expression (utils/build_path_prefix_map.ml[116,4118+12]..[119,4206+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/build_path_prefix_map.ml[116,4118+12]..[116,4118+22])
            Ppat_var "prefix_map" (utils/build_path_prefix_map.ml[116,4118+12]..[116,4118+22])
          expression (utils/build_path_prefix_map.ml[116,4118+23]..[119,4206+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/build_path_prefix_map.ml[116,4118+23]..[116,4118+27])
              Ppat_var "path" (utils/build_path_prefix_map.ml[116,4118+23]..[116,4118+27])
            expression (utils/build_path_prefix_map.ml[117,4148+2]..[119,4206+21])
              Pexp_match
              expression (utils/build_path_prefix_map.ml[117,4148+8]..[117,4148+35])
                Pexp_apply
                expression (utils/build_path_prefix_map.ml[117,4148+8]..[117,4148+19])
                  Pexp_ident "rewrite_opt" (utils/build_path_prefix_map.ml[117,4148+8]..[117,4148+19])
                [
                  <arg>
                  Nolabel
                    expression (utils/build_path_prefix_map.ml[117,4148+20]..[117,4148+30])
                      Pexp_ident "prefix_map" (utils/build_path_prefix_map.ml[117,4148+20]..[117,4148+30])
                  <arg>
                  Nolabel
                    expression (utils/build_path_prefix_map.ml[117,4148+31]..[117,4148+35])
                      Pexp_ident "path" (utils/build_path_prefix_map.ml[117,4148+31]..[117,4148+35])
                ]
              [
                <case>
                  pattern (utils/build_path_prefix_map.ml[118,4189+4]..[118,4189+8])
                    Ppat_construct "None" (utils/build_path_prefix_map.ml[118,4189+4]..[118,4189+8])
                    None
                  expression (utils/build_path_prefix_map.ml[118,4189+12]..[118,4189+16])
                    Pexp_ident "path" (utils/build_path_prefix_map.ml[118,4189+12]..[118,4189+16])
                <case>
                  pattern (utils/build_path_prefix_map.ml[119,4206+4]..[119,4206+13])
                    Ppat_construct "Some" (utils/build_path_prefix_map.ml[119,4206+4]..[119,4206+8])
                    Some
                      []
                      pattern (utils/build_path_prefix_map.ml[119,4206+9]..[119,4206+13])
                        Ppat_var "path" (utils/build_path_prefix_map.ml[119,4206+9]..[119,4206+13])
                  expression (utils/build_path_prefix_map.ml[119,4206+17]..[119,4206+21])
                    Pexp_ident "path" (utils/build_path_prefix_map.ml[119,4206+17]..[119,4206+21])
              ]
    ]
]

