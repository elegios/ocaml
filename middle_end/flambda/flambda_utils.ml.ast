[
  structure_item (middle_end/flambda/flambda_utils.ml[17,1156+0]..[17,1156+42])
    Pstr_attribute "ocaml.warning"
    [
      structure_item (middle_end/flambda/flambda_utils.ml[17,1156+18]..[17,1156+41])
        Pstr_eval
        expression (middle_end/flambda/flambda_utils.ml[17,1156+18]..[17,1156+41])
          Pexp_constant PConst_string("+a-4-9-30-40-41-42-66",(middle_end/flambda/flambda_utils.ml[17,1156+19]..[17,1156+40]),None)
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[18,1199+0]..[18,1199+37])
    Pstr_open Override
    module_expr (middle_end/flambda/flambda_utils.ml[18,1199+6]..[18,1199+37])
      Pmod_ident "Int_replace_polymorphic_compare" (middle_end/flambda/flambda_utils.ml[18,1199+6]..[18,1199+37])
  structure_item (middle_end/flambda/flambda_utils.ml[20,1238+0]..[26,1414+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[20,1238+4]..[20,1238+13])
          Ppat_var "name_expr" (middle_end/flambda/flambda_utils.ml[20,1238+4]..[20,1238+13])
        expression (middle_end/flambda/flambda_utils.ml[20,1238+14]..[26,1414+40]) ghost
          Pexp_fun
          Labelled "name"
          None
          pattern (middle_end/flambda/flambda_utils.ml[20,1238+15]..[20,1238+19])
            Ppat_var "name" (middle_end/flambda/flambda_utils.ml[20,1238+15]..[20,1238+19])
          expression (middle_end/flambda/flambda_utils.ml[20,1238+20]..[26,1414+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[20,1238+20]..[20,1238+43])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_utils.ml[20,1238+21]..[20,1238+26])
                Ppat_var "named" (middle_end/flambda/flambda_utils.ml[20,1238+21]..[20,1238+26])
              core_type (middle_end/flambda/flambda_utils.ml[20,1238+29]..[20,1238+42])
                Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_utils.ml[20,1238+29]..[20,1238+42])
                []
            expression (middle_end/flambda/flambda_utils.ml[20,1238+44]..[26,1414+40])
              Pexp_constraint
              expression (middle_end/flambda/flambda_utils.ml[21,1296+2]..[26,1414+40])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (middle_end/flambda/flambda_utils.ml[21,1296+6]..[21,1296+9])
                      Ppat_var "var" (middle_end/flambda/flambda_utils.ml[21,1296+6]..[21,1296+9])
                    expression (middle_end/flambda/flambda_utils.ml[22,1308+4]..[24,1398+10])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_utils.ml[22,1308+4]..[22,1308+19])
                        Pexp_ident "Variable.create" (middle_end/flambda/flambda_utils.ml[22,1308+4]..[22,1308+19])
                      [
                        <arg>
                        Labelled "current_compilation_unit"
                          expression (middle_end/flambda/flambda_utils.ml[23,1328+32]..[23,1328+69])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_utils.ml[23,1328+33]..[23,1328+65])
                              Pexp_ident "Compilation_unit.get_current_exn" (middle_end/flambda/flambda_utils.ml[23,1328+33]..[23,1328+65])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[23,1328+66]..[23,1328+68])
                                  Pexp_construct "()" (middle_end/flambda/flambda_utils.ml[23,1328+66]..[23,1328+68])
                                  None
                            ]
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[24,1398+6]..[24,1398+10])
                            Pexp_ident "name" (middle_end/flambda/flambda_utils.ml[24,1398+6]..[24,1398+10])
                      ]
                ]
                expression (middle_end/flambda/flambda_utils.ml[26,1414+2]..[26,1414+40])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[26,1414+2]..[26,1414+20])
                    Pexp_ident "Flambda.create_let" (middle_end/flambda/flambda_utils.ml[26,1414+2]..[26,1414+20])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[26,1414+21]..[26,1414+24])
                        Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[26,1414+21]..[26,1414+24])
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[26,1414+25]..[26,1414+30])
                        Pexp_ident "named" (middle_end/flambda/flambda_utils.ml[26,1414+25]..[26,1414+30])
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[26,1414+31]..[26,1414+40])
                        Pexp_construct "Var" (middle_end/flambda/flambda_utils.ml[26,1414+32]..[26,1414+35])
                        Some
                          expression (middle_end/flambda/flambda_utils.ml[26,1414+36]..[26,1414+39])
                            Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[26,1414+36]..[26,1414+39])
                  ]
              core_type (middle_end/flambda/flambda_utils.ml[20,1238+46]..[20,1238+55])
                Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_utils.ml[20,1238+46]..[20,1238+55])
                []
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[28,1456+0]..[34,1639+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[28,1456+4]..[28,1456+22])
          Ppat_var "name_expr_from_var" (middle_end/flambda/flambda_utils.ml[28,1456+4]..[28,1456+22])
        expression (middle_end/flambda/flambda_utils.ml[28,1456+23]..[34,1639+40]) ghost
          Pexp_fun
          Labelled "var"
          None
          pattern (middle_end/flambda/flambda_utils.ml[28,1456+24]..[28,1456+27])
            Ppat_var "var" (middle_end/flambda/flambda_utils.ml[28,1456+24]..[28,1456+27])
          expression (middle_end/flambda/flambda_utils.ml[28,1456+28]..[34,1639+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[28,1456+28]..[28,1456+51])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_utils.ml[28,1456+29]..[28,1456+34])
                Ppat_var "named" (middle_end/flambda/flambda_utils.ml[28,1456+29]..[28,1456+34])
              core_type (middle_end/flambda/flambda_utils.ml[28,1456+37]..[28,1456+50])
                Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_utils.ml[28,1456+37]..[28,1456+50])
                []
            expression (middle_end/flambda/flambda_utils.ml[28,1456+52]..[34,1639+40])
              Pexp_constraint
              expression (middle_end/flambda/flambda_utils.ml[29,1522+2]..[34,1639+40])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (middle_end/flambda/flambda_utils.ml[29,1522+6]..[29,1522+9])
                      Ppat_var "var" (middle_end/flambda/flambda_utils.ml[29,1522+6]..[29,1522+9])
                    expression (middle_end/flambda/flambda_utils.ml[30,1534+4]..[32,1624+9])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_utils.ml[30,1534+4]..[30,1534+19])
                        Pexp_ident "Variable.rename" (middle_end/flambda/flambda_utils.ml[30,1534+4]..[30,1534+19])
                      [
                        <arg>
                        Labelled "current_compilation_unit"
                          expression (middle_end/flambda/flambda_utils.ml[31,1554+32]..[31,1554+69])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_utils.ml[31,1554+33]..[31,1554+65])
                              Pexp_ident "Compilation_unit.get_current_exn" (middle_end/flambda/flambda_utils.ml[31,1554+33]..[31,1554+65])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[31,1554+66]..[31,1554+68])
                                  Pexp_construct "()" (middle_end/flambda/flambda_utils.ml[31,1554+66]..[31,1554+68])
                                  None
                            ]
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[32,1624+6]..[32,1624+9])
                            Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[32,1624+6]..[32,1624+9])
                      ]
                ]
                expression (middle_end/flambda/flambda_utils.ml[34,1639+2]..[34,1639+40])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[34,1639+2]..[34,1639+20])
                    Pexp_ident "Flambda.create_let" (middle_end/flambda/flambda_utils.ml[34,1639+2]..[34,1639+20])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[34,1639+21]..[34,1639+24])
                        Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[34,1639+21]..[34,1639+24])
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[34,1639+25]..[34,1639+30])
                        Pexp_ident "named" (middle_end/flambda/flambda_utils.ml[34,1639+25]..[34,1639+30])
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[34,1639+31]..[34,1639+40])
                        Pexp_construct "Var" (middle_end/flambda/flambda_utils.ml[34,1639+32]..[34,1639+35])
                        Some
                          expression (middle_end/flambda/flambda_utils.ml[34,1639+36]..[34,1639+39])
                            Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[34,1639+36]..[34,1639+39])
                  ]
              core_type (middle_end/flambda/flambda_utils.ml[28,1456+54]..[28,1456+63])
                Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_utils.ml[28,1456+54]..[28,1456+63])
                []
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[36,1681+0]..[37,1750+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[36,1681+4]..[36,1681+20])
          Ppat_var "find_declaration" (middle_end/flambda/flambda_utils.ml[36,1681+4]..[36,1681+20])
        expression (middle_end/flambda/flambda_utils.ml[36,1681+21]..[37,1750+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[36,1681+21]..[36,1681+23])
            Ppat_var "cf" (middle_end/flambda/flambda_utils.ml[36,1681+21]..[36,1681+23])
          expression (middle_end/flambda/flambda_utils.ml[36,1681+24]..[37,1750+47]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[36,1681+24]..[36,1681+66])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_utils.ml[36,1681+25]..[36,1681+33])
                Ppat_record Closed
                [
                  "funs" (middle_end/flambda/flambda_utils.ml[36,1681+27]..[36,1681+31]) ghost
                    pattern (middle_end/flambda/flambda_utils.ml[36,1681+27]..[36,1681+31])
                      Ppat_var "funs" (middle_end/flambda/flambda_utils.ml[36,1681+27]..[36,1681+31])
                ]
              core_type (middle_end/flambda/flambda_utils.ml[36,1681+36]..[36,1681+65])
                Ptyp_constr "Flambda.function_declarations" (middle_end/flambda/flambda_utils.ml[36,1681+36]..[36,1681+65])
                []
            expression (middle_end/flambda/flambda_utils.ml[37,1750+2]..[37,1750+47])
              Pexp_apply
              expression (middle_end/flambda/flambda_utils.ml[37,1750+2]..[37,1750+19])
                Pexp_ident "Variable.Map.find" (middle_end/flambda/flambda_utils.ml[37,1750+2]..[37,1750+19])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[37,1750+20]..[37,1750+42])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[37,1750+21]..[37,1750+38])
                      Pexp_ident "Closure_id.unwrap" (middle_end/flambda/flambda_utils.ml[37,1750+21]..[37,1750+38])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[37,1750+39]..[37,1750+41])
                          Pexp_ident "cf" (middle_end/flambda/flambda_utils.ml[37,1750+39]..[37,1750+41])
                    ]
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[37,1750+43]..[37,1750+47])
                    Pexp_ident "funs" (middle_end/flambda/flambda_utils.ml[37,1750+43]..[37,1750+47])
              ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[39,1799+0]..[43,1973+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[39,1799+4]..[39,1799+29])
          Ppat_var "find_declaration_variable" (middle_end/flambda/flambda_utils.ml[39,1799+4]..[39,1799+29])
        expression (middle_end/flambda/flambda_utils.ml[39,1799+30]..[43,1973+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[39,1799+30]..[39,1799+32])
            Ppat_var "cf" (middle_end/flambda/flambda_utils.ml[39,1799+30]..[39,1799+32])
          expression (middle_end/flambda/flambda_utils.ml[39,1799+33]..[43,1973+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[39,1799+33]..[39,1799+75])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_utils.ml[39,1799+34]..[39,1799+42])
                Ppat_record Closed
                [
                  "funs" (middle_end/flambda/flambda_utils.ml[39,1799+36]..[39,1799+40]) ghost
                    pattern (middle_end/flambda/flambda_utils.ml[39,1799+36]..[39,1799+40])
                      Ppat_var "funs" (middle_end/flambda/flambda_utils.ml[39,1799+36]..[39,1799+40])
                ]
              core_type (middle_end/flambda/flambda_utils.ml[39,1799+45]..[39,1799+74])
                Ptyp_constr "Flambda.function_declarations" (middle_end/flambda/flambda_utils.ml[39,1799+45]..[39,1799+74])
                []
            expression (middle_end/flambda/flambda_utils.ml[40,1877+2]..[43,1973+10])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/flambda_utils.ml[40,1877+6]..[40,1877+9])
                    Ppat_var "var" (middle_end/flambda/flambda_utils.ml[40,1877+6]..[40,1877+9])
                  expression (middle_end/flambda/flambda_utils.ml[40,1877+12]..[40,1877+32])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[40,1877+12]..[40,1877+29])
                      Pexp_ident "Closure_id.unwrap" (middle_end/flambda/flambda_utils.ml[40,1877+12]..[40,1877+29])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[40,1877+30]..[40,1877+32])
                          Pexp_ident "cf" (middle_end/flambda/flambda_utils.ml[40,1877+30]..[40,1877+32])
                    ]
              ]
              expression (middle_end/flambda/flambda_utils.ml[41,1913+2]..[43,1973+10])
                Pexp_ifthenelse
                expression (middle_end/flambda/flambda_utils.ml[41,1913+5]..[41,1913+36])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[41,1913+5]..[41,1913+8])
                    Pexp_ident "not" (middle_end/flambda/flambda_utils.ml[41,1913+5]..[41,1913+8])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[41,1913+9]..[41,1913+36])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_utils.ml[41,1913+10]..[41,1913+26])
                          Pexp_ident "Variable.Map.mem" (middle_end/flambda/flambda_utils.ml[41,1913+10]..[41,1913+26])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[41,1913+27]..[41,1913+30])
                              Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[41,1913+27]..[41,1913+30])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[41,1913+31]..[41,1913+35])
                              Pexp_ident "funs" (middle_end/flambda/flambda_utils.ml[41,1913+31]..[41,1913+35])
                        ]
                  ]
                expression (middle_end/flambda/flambda_utils.ml[42,1950+7]..[42,1950+22])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[42,1950+7]..[42,1950+12])
                    Pexp_ident "raise" (middle_end/flambda/flambda_utils.ml[42,1950+7]..[42,1950+12])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[42,1950+13]..[42,1950+22])
                        Pexp_construct "Not_found" (middle_end/flambda/flambda_utils.ml[42,1950+13]..[42,1950+22])
                        None
                  ]
                Some
                  expression (middle_end/flambda/flambda_utils.ml[43,1973+7]..[43,1973+10])
                    Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[43,1973+7]..[43,1973+10])
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[45,1985+0]..[49,2160+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[45,1985+4]..[45,1985+22])
          Ppat_var "find_free_variable" (middle_end/flambda/flambda_utils.ml[45,1985+4]..[45,1985+22])
        expression (middle_end/flambda/flambda_utils.ml[45,1985+23]..[49,2160+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[45,1985+23]..[45,1985+25])
            Ppat_var "cv" (middle_end/flambda/flambda_utils.ml[45,1985+23]..[45,1985+25])
          expression (middle_end/flambda/flambda_utils.ml[45,1985+26]..[49,2160+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[45,1985+26]..[45,1985+67])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_utils.ml[45,1985+27]..[45,1985+40])
                Ppat_record Closed
                [
                  "free_vars" (middle_end/flambda/flambda_utils.ml[45,1985+29]..[45,1985+38]) ghost
                    pattern (middle_end/flambda/flambda_utils.ml[45,1985+29]..[45,1985+38])
                      Ppat_var "free_vars" (middle_end/flambda/flambda_utils.ml[45,1985+29]..[45,1985+38])
                ]
              core_type (middle_end/flambda/flambda_utils.ml[45,1985+43]..[45,1985+66])
                Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/flambda_utils.ml[45,1985+43]..[45,1985+66])
                []
            expression (middle_end/flambda/flambda_utils.ml[46,2055+2]..[49,2160+9])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/flambda_utils.ml[46,2055+6]..[46,2055+34]) ghost
                    Ppat_constraint
                    pattern (middle_end/flambda/flambda_utils.ml[46,2055+6]..[46,2055+9])
                      Ppat_var "var" (middle_end/flambda/flambda_utils.ml[46,2055+6]..[46,2055+9])
                    core_type (middle_end/flambda/flambda_utils.ml[46,2055+12]..[46,2055+34]) ghost
                      Ptyp_poly
                      core_type (middle_end/flambda/flambda_utils.ml[46,2055+12]..[46,2055+34])
                        Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/flambda_utils.ml[46,2055+12]..[46,2055+34])
                        []
                  expression (middle_end/flambda/flambda_utils.ml[46,2055+6]..[47,2092+62])
                    Pexp_constraint
                    expression (middle_end/flambda/flambda_utils.ml[47,2092+4]..[47,2092+62])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_utils.ml[47,2092+4]..[47,2092+21])
                        Pexp_ident "Variable.Map.find" (middle_end/flambda/flambda_utils.ml[47,2092+4]..[47,2092+21])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[47,2092+22]..[47,2092+52])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_utils.ml[47,2092+23]..[47,2092+48])
                              Pexp_ident "Var_within_closure.unwrap" (middle_end/flambda/flambda_utils.ml[47,2092+23]..[47,2092+48])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[47,2092+49]..[47,2092+51])
                                  Pexp_ident "cv" (middle_end/flambda/flambda_utils.ml[47,2092+49]..[47,2092+51])
                            ]
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[47,2092+53]..[47,2092+62])
                            Pexp_ident "free_vars" (middle_end/flambda/flambda_utils.ml[47,2092+53]..[47,2092+62])
                      ]
                    core_type (middle_end/flambda/flambda_utils.ml[46,2055+12]..[46,2055+34])
                      Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/flambda_utils.ml[46,2055+12]..[46,2055+34])
                      []
              ]
              expression (middle_end/flambda/flambda_utils.ml[49,2160+2]..[49,2160+9])
                Pexp_field
                expression (middle_end/flambda/flambda_utils.ml[49,2160+2]..[49,2160+5])
                  Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[49,2160+2]..[49,2160+5])
                "var" (middle_end/flambda/flambda_utils.ml[49,2160+6]..[49,2160+9])
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[51,2171+0]..[51,2171+76])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[51,2171+4]..[51,2171+18])
          Ppat_var "function_arity" (middle_end/flambda/flambda_utils.ml[51,2171+4]..[51,2171+18])
        expression (middle_end/flambda/flambda_utils.ml[51,2171+19]..[51,2171+76]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[51,2171+19]..[51,2171+53])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[51,2171+20]..[51,2171+21])
              Ppat_var "f" (middle_end/flambda/flambda_utils.ml[51,2171+20]..[51,2171+21])
            core_type (middle_end/flambda/flambda_utils.ml[51,2171+24]..[51,2171+52])
              Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/flambda_utils.ml[51,2171+24]..[51,2171+52])
              []
          expression (middle_end/flambda/flambda_utils.ml[51,2171+56]..[51,2171+76])
            Pexp_apply
            expression (middle_end/flambda/flambda_utils.ml[51,2171+56]..[51,2171+67])
              Pexp_ident "List.length" (middle_end/flambda/flambda_utils.ml[51,2171+56]..[51,2171+67])
            [
              <arg>
              Nolabel
                expression (middle_end/flambda/flambda_utils.ml[51,2171+68]..[51,2171+76])
                  Pexp_field
                  expression (middle_end/flambda/flambda_utils.ml[51,2171+68]..[51,2171+69])
                    Pexp_ident "f" (middle_end/flambda/flambda_utils.ml[51,2171+68]..[51,2171+69])
                  "params" (middle_end/flambda/flambda_utils.ml[51,2171+70]..[51,2171+76])
            ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[53,2249+0]..[60,2547+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[53,2249+4]..[53,2249+34])
          Ppat_var "variables_bound_by_the_closure" (middle_end/flambda/flambda_utils.ml[53,2249+4]..[53,2249+34])
        expression (middle_end/flambda/flambda_utils.ml[53,2249+35]..[60,2547+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[53,2249+35]..[53,2249+37])
            Ppat_var "cf" (middle_end/flambda/flambda_utils.ml[53,2249+35]..[53,2249+37])
          expression (middle_end/flambda/flambda_utils.ml[54,2287+6]..[60,2547+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[54,2287+6]..[54,2287+45])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_utils.ml[54,2287+7]..[54,2287+12])
                Ppat_var "decls" (middle_end/flambda/flambda_utils.ml[54,2287+7]..[54,2287+12])
              core_type (middle_end/flambda/flambda_utils.ml[54,2287+15]..[54,2287+44])
                Ptyp_constr "Flambda.function_declarations" (middle_end/flambda/flambda_utils.ml[54,2287+15]..[54,2287+44])
                []
            expression (middle_end/flambda/flambda_utils.ml[55,2335+2]..[60,2547+13])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/flambda_utils.ml[55,2335+6]..[55,2335+10])
                    Ppat_var "func" (middle_end/flambda/flambda_utils.ml[55,2335+6]..[55,2335+10])
                  expression (middle_end/flambda/flambda_utils.ml[55,2335+13]..[55,2335+38])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[55,2335+13]..[55,2335+29])
                      Pexp_ident "find_declaration" (middle_end/flambda/flambda_utils.ml[55,2335+13]..[55,2335+29])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[55,2335+30]..[55,2335+32])
                          Pexp_ident "cf" (middle_end/flambda/flambda_utils.ml[55,2335+30]..[55,2335+32])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[55,2335+33]..[55,2335+38])
                          Pexp_ident "decls" (middle_end/flambda/flambda_utils.ml[55,2335+33]..[55,2335+38])
                    ]
              ]
              expression (middle_end/flambda/flambda_utils.ml[56,2377+2]..[60,2547+13])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (middle_end/flambda/flambda_utils.ml[56,2377+6]..[56,2377+12])
                      Ppat_var "params" (middle_end/flambda/flambda_utils.ml[56,2377+6]..[56,2377+12])
                    expression (middle_end/flambda/flambda_utils.ml[56,2377+15]..[56,2377+45])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_utils.ml[56,2377+15]..[56,2377+33])
                        Pexp_ident "Parameter.Set.vars" (middle_end/flambda/flambda_utils.ml[56,2377+15]..[56,2377+33])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[56,2377+34]..[56,2377+45])
                            Pexp_field
                            expression (middle_end/flambda/flambda_utils.ml[56,2377+34]..[56,2377+38])
                              Pexp_ident "func" (middle_end/flambda/flambda_utils.ml[56,2377+34]..[56,2377+38])
                            "params" (middle_end/flambda/flambda_utils.ml[56,2377+39]..[56,2377+45])
                      ]
                ]
                expression (middle_end/flambda/flambda_utils.ml[57,2426+2]..[60,2547+13])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/flambda/flambda_utils.ml[57,2426+6]..[57,2426+15])
                        Ppat_var "functions" (middle_end/flambda/flambda_utils.ml[57,2426+6]..[57,2426+15])
                      expression (middle_end/flambda/flambda_utils.ml[57,2426+18]..[57,2426+46])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_utils.ml[57,2426+18]..[57,2426+35])
                          Pexp_ident "Variable.Map.keys" (middle_end/flambda/flambda_utils.ml[57,2426+18]..[57,2426+35])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[57,2426+36]..[57,2426+46])
                              Pexp_field
                              expression (middle_end/flambda/flambda_utils.ml[57,2426+36]..[57,2426+41])
                                Pexp_ident "decls" (middle_end/flambda/flambda_utils.ml[57,2426+36]..[57,2426+41])
                              "funs" (middle_end/flambda/flambda_utils.ml[57,2426+42]..[57,2426+46])
                        ]
                  ]
                  expression (middle_end/flambda/flambda_utils.ml[58,2476+2]..[60,2547+13])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[58,2476+2]..[58,2476+19])
                      Pexp_ident "Variable.Set.diff" (middle_end/flambda/flambda_utils.ml[58,2476+2]..[58,2476+19])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[59,2496+4]..[59,2496+50])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[59,2496+5]..[59,2496+22])
                            Pexp_ident "Variable.Set.diff" (middle_end/flambda/flambda_utils.ml[59,2496+5]..[59,2496+22])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[59,2496+23]..[59,2496+42])
                                Pexp_field
                                expression (middle_end/flambda/flambda_utils.ml[59,2496+23]..[59,2496+27])
                                  Pexp_ident "func" (middle_end/flambda/flambda_utils.ml[59,2496+23]..[59,2496+27])
                                "free_variables" (middle_end/flambda/flambda_utils.ml[59,2496+28]..[59,2496+42])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[59,2496+43]..[59,2496+49])
                                Pexp_ident "params" (middle_end/flambda/flambda_utils.ml[59,2496+43]..[59,2496+49])
                          ]
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[60,2547+4]..[60,2547+13])
                          Pexp_ident "functions" (middle_end/flambda/flambda_utils.ml[60,2547+4]..[60,2547+13])
                    ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[62,2562+0]..[79,3136+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[62,2562+4]..[62,2562+32])
          Ppat_var "description_of_toplevel_node" (middle_end/flambda/flambda_utils.ml[62,2562+4]..[62,2562+32])
        expression (middle_end/flambda/flambda_utils.ml[62,2562+33]..[79,3136+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[62,2562+33]..[62,2562+51])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[62,2562+34]..[62,2562+38])
              Ppat_var "expr" (middle_end/flambda/flambda_utils.ml[62,2562+34]..[62,2562+38])
            core_type (middle_end/flambda/flambda_utils.ml[62,2562+41]..[62,2562+50])
              Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_utils.ml[62,2562+41]..[62,2562+50])
              []
          expression (middle_end/flambda/flambda_utils.ml[63,2616+2]..[79,3136+18])
            Pexp_match
            expression (middle_end/flambda/flambda_utils.ml[63,2616+8]..[63,2616+12])
              Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[63,2616+8]..[63,2616+12])
            [
              <case>
                pattern (middle_end/flambda/flambda_utils.ml[64,2634+4]..[64,2634+10])
                  Ppat_construct "Var" (middle_end/flambda/flambda_utils.ml[64,2634+4]..[64,2634+7])
                  Some
                    []
                    pattern (middle_end/flambda/flambda_utils.ml[64,2634+8]..[64,2634+10])
                      Ppat_var "id" (middle_end/flambda/flambda_utils.ml[64,2634+8]..[64,2634+10])
                expression (middle_end/flambda/flambda_utils.ml[64,2634+14]..[64,2634+56])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[64,2634+14]..[64,2634+29])
                    Pexp_ident "Format.asprintf" (middle_end/flambda/flambda_utils.ml[64,2634+14]..[64,2634+29])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[64,2634+30]..[64,2634+38])
                        Pexp_constant PConst_string("var %a",(middle_end/flambda/flambda_utils.ml[64,2634+31]..[64,2634+37]),None)
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[64,2634+39]..[64,2634+53])
                        Pexp_ident "Variable.print" (middle_end/flambda/flambda_utils.ml[64,2634+39]..[64,2634+53])
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[64,2634+54]..[64,2634+56])
                        Pexp_ident "id" (middle_end/flambda/flambda_utils.ml[64,2634+54]..[64,2634+56])
                  ]
              <case>
                pattern (middle_end/flambda/flambda_utils.ml[65,2691+4]..[65,2691+11])
                  Ppat_construct "Apply" (middle_end/flambda/flambda_utils.ml[65,2691+4]..[65,2691+9])
                  Some
                    []
                    pattern (middle_end/flambda/flambda_utils.ml[65,2691+10]..[65,2691+11])
                      Ppat_any
                expression (middle_end/flambda/flambda_utils.ml[65,2691+15]..[65,2691+22])
                  Pexp_constant PConst_string("apply",(middle_end/flambda/flambda_utils.ml[65,2691+16]..[65,2691+21]),None)
              <case>
                pattern (middle_end/flambda/flambda_utils.ml[66,2714+4]..[66,2714+12])
                  Ppat_construct "Assign" (middle_end/flambda/flambda_utils.ml[66,2714+4]..[66,2714+10])
                  Some
                    []
                    pattern (middle_end/flambda/flambda_utils.ml[66,2714+11]..[66,2714+12])
                      Ppat_any
                expression (middle_end/flambda/flambda_utils.ml[66,2714+16]..[66,2714+24])
                  Pexp_constant PConst_string("assign",(middle_end/flambda/flambda_utils.ml[66,2714+17]..[66,2714+23]),None)
              <case>
                pattern (middle_end/flambda/flambda_utils.ml[67,2739+4]..[67,2739+10])
                  Ppat_construct "Send" (middle_end/flambda/flambda_utils.ml[67,2739+4]..[67,2739+8])
                  Some
                    []
                    pattern (middle_end/flambda/flambda_utils.ml[67,2739+9]..[67,2739+10])
                      Ppat_any
                expression (middle_end/flambda/flambda_utils.ml[67,2739+14]..[67,2739+20])
                  Pexp_constant PConst_string("send",(middle_end/flambda/flambda_utils.ml[67,2739+15]..[67,2739+19]),None)
              <case>
                pattern (middle_end/flambda/flambda_utils.ml[68,2760+4]..[68,2760+22])
                  Ppat_construct "Proved_unreachable" (middle_end/flambda/flambda_utils.ml[68,2760+4]..[68,2760+22])
                  None
                expression (middle_end/flambda/flambda_utils.ml[68,2760+26]..[68,2760+39])
                  Pexp_constant PConst_string("unreachable",(middle_end/flambda/flambda_utils.ml[68,2760+27]..[68,2760+38]),None)
              <case>
                pattern (middle_end/flambda/flambda_utils.ml[69,2800+4]..[69,2800+18])
                  Ppat_construct "Let" (middle_end/flambda/flambda_utils.ml[69,2800+4]..[69,2800+7])
                  Some
                    []
                    pattern (middle_end/flambda/flambda_utils.ml[69,2800+8]..[69,2800+18])
                      Ppat_record Open
                      [
                        "var" (middle_end/flambda/flambda_utils.ml[69,2800+10]..[69,2800+13]) ghost
                          pattern (middle_end/flambda/flambda_utils.ml[69,2800+10]..[69,2800+13])
                            Ppat_var "var" (middle_end/flambda/flambda_utils.ml[69,2800+10]..[69,2800+13])
                      ]
                expression (middle_end/flambda/flambda_utils.ml[69,2800+22]..[69,2800+65])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[69,2800+22]..[69,2800+37])
                    Pexp_ident "Format.asprintf" (middle_end/flambda/flambda_utils.ml[69,2800+22]..[69,2800+37])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[69,2800+38]..[69,2800+46])
                        Pexp_constant PConst_string("let %a",(middle_end/flambda/flambda_utils.ml[69,2800+39]..[69,2800+45]),None)
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[69,2800+47]..[69,2800+61])
                        Pexp_ident "Variable.print" (middle_end/flambda/flambda_utils.ml[69,2800+47]..[69,2800+61])
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[69,2800+62]..[69,2800+65])
                        Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[69,2800+62]..[69,2800+65])
                  ]
              <case>
                pattern (middle_end/flambda/flambda_utils.ml[70,2866+4]..[70,2866+17])
                  Ppat_construct "Let_mutable" (middle_end/flambda/flambda_utils.ml[70,2866+4]..[70,2866+15])
                  Some
                    []
                    pattern (middle_end/flambda/flambda_utils.ml[70,2866+16]..[70,2866+17])
                      Ppat_any
                expression (middle_end/flambda/flambda_utils.ml[70,2866+21]..[70,2866+34])
                  Pexp_constant PConst_string("let_mutable",(middle_end/flambda/flambda_utils.ml[70,2866+22]..[70,2866+33]),None)
              <case>
                pattern (middle_end/flambda/flambda_utils.ml[71,2901+4]..[71,2901+13])
                  Ppat_construct "Let_rec" (middle_end/flambda/flambda_utils.ml[71,2901+4]..[71,2901+11])
                  Some
                    []
                    pattern (middle_end/flambda/flambda_utils.ml[71,2901+12]..[71,2901+13])
                      Ppat_any
                expression (middle_end/flambda/flambda_utils.ml[71,2901+17]..[71,2901+25])
                  Pexp_constant PConst_string("letrec",(middle_end/flambda/flambda_utils.ml[71,2901+18]..[71,2901+24]),None)
              <case>
                pattern (middle_end/flambda/flambda_utils.ml[72,2927+4]..[72,2927+18])
                  Ppat_construct "If_then_else" (middle_end/flambda/flambda_utils.ml[72,2927+4]..[72,2927+16])
                  Some
                    []
                    pattern (middle_end/flambda/flambda_utils.ml[72,2927+17]..[72,2927+18])
                      Ppat_any
                expression (middle_end/flambda/flambda_utils.ml[72,2927+22]..[72,2927+26])
                  Pexp_constant PConst_string("if",(middle_end/flambda/flambda_utils.ml[72,2927+23]..[72,2927+25]),None)
              <case>
                pattern (middle_end/flambda/flambda_utils.ml[73,2954+4]..[73,2954+12])
                  Ppat_construct "Switch" (middle_end/flambda/flambda_utils.ml[73,2954+4]..[73,2954+10])
                  Some
                    []
                    pattern (middle_end/flambda/flambda_utils.ml[73,2954+11]..[73,2954+12])
                      Ppat_any
                expression (middle_end/flambda/flambda_utils.ml[73,2954+16]..[73,2954+24])
                  Pexp_constant PConst_string("switch",(middle_end/flambda/flambda_utils.ml[73,2954+17]..[73,2954+23]),None)
              <case>
                pattern (middle_end/flambda/flambda_utils.ml[74,2979+4]..[74,2979+19])
                  Ppat_construct "String_switch" (middle_end/flambda/flambda_utils.ml[74,2979+4]..[74,2979+17])
                  Some
                    []
                    pattern (middle_end/flambda/flambda_utils.ml[74,2979+18]..[74,2979+19])
                      Ppat_any
                expression (middle_end/flambda/flambda_utils.ml[74,2979+23]..[74,2979+37])
                  Pexp_constant PConst_string("stringswitch",(middle_end/flambda/flambda_utils.ml[74,2979+24]..[74,2979+36]),None)
              <case>
                pattern (middle_end/flambda/flambda_utils.ml[75,3017+4]..[75,3017+19])
                  Ppat_construct "Static_raise" (middle_end/flambda/flambda_utils.ml[75,3017+4]..[75,3017+16])
                  Some
                    []
                    pattern (middle_end/flambda/flambda_utils.ml[75,3017+18]..[75,3017+19])
                      Ppat_any
                expression (middle_end/flambda/flambda_utils.ml[75,3017+23]..[75,3017+36])
                  Pexp_constant PConst_string("staticraise",(middle_end/flambda/flambda_utils.ml[75,3017+24]..[75,3017+35]),None)
              <case>
                pattern (middle_end/flambda/flambda_utils.ml[76,3054+4]..[76,3054+19])
                  Ppat_construct "Static_catch" (middle_end/flambda/flambda_utils.ml[76,3054+4]..[76,3054+16])
                  Some
                    []
                    pattern (middle_end/flambda/flambda_utils.ml[76,3054+18]..[76,3054+19])
                      Ppat_any
                expression (middle_end/flambda/flambda_utils.ml[76,3054+23]..[76,3054+30])
                  Pexp_constant PConst_string("catch",(middle_end/flambda/flambda_utils.ml[76,3054+24]..[76,3054+29]),None)
              <case>
                pattern (middle_end/flambda/flambda_utils.ml[77,3085+4]..[77,3085+14])
                  Ppat_construct "Try_with" (middle_end/flambda/flambda_utils.ml[77,3085+4]..[77,3085+12])
                  Some
                    []
                    pattern (middle_end/flambda/flambda_utils.ml[77,3085+13]..[77,3085+14])
                      Ppat_any
                expression (middle_end/flambda/flambda_utils.ml[77,3085+18]..[77,3085+27])
                  Pexp_constant PConst_string("trywith",(middle_end/flambda/flambda_utils.ml[77,3085+19]..[77,3085+26]),None)
              <case>
                pattern (middle_end/flambda/flambda_utils.ml[78,3113+4]..[78,3113+11])
                  Ppat_construct "While" (middle_end/flambda/flambda_utils.ml[78,3113+4]..[78,3113+9])
                  Some
                    []
                    pattern (middle_end/flambda/flambda_utils.ml[78,3113+10]..[78,3113+11])
                      Ppat_any
                expression (middle_end/flambda/flambda_utils.ml[78,3113+15]..[78,3113+22])
                  Pexp_constant PConst_string("while",(middle_end/flambda/flambda_utils.ml[78,3113+16]..[78,3113+21]),None)
              <case>
                pattern (middle_end/flambda/flambda_utils.ml[79,3136+4]..[79,3136+9])
                  Ppat_construct "For" (middle_end/flambda/flambda_utils.ml[79,3136+4]..[79,3136+7])
                  Some
                    []
                    pattern (middle_end/flambda/flambda_utils.ml[79,3136+8]..[79,3136+9])
                      Ppat_any
                expression (middle_end/flambda/flambda_utils.ml[79,3136+13]..[79,3136+18])
                  Pexp_constant PConst_string("for",(middle_end/flambda/flambda_utils.ml[79,3136+14]..[79,3136+17]),None)
            ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[81,3156+0]..[87,3323+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[81,3156+4]..[81,3156+24])
          Ppat_var "equal_direction_flag" (middle_end/flambda/flambda_utils.ml[81,3156+4]..[81,3156+24])
        expression (middle_end/flambda/flambda_utils.ml[82,3181+6]..[87,3323+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[82,3181+6]..[82,3181+35])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[82,3181+7]..[82,3181+8])
              Ppat_var "x" (middle_end/flambda/flambda_utils.ml[82,3181+7]..[82,3181+8])
            core_type (middle_end/flambda/flambda_utils.ml[82,3181+11]..[82,3181+34])
              Ptyp_constr "Asttypes.direction_flag" (middle_end/flambda/flambda_utils.ml[82,3181+11]..[82,3181+34])
              []
          expression (middle_end/flambda/flambda_utils.ml[83,3217+6]..[87,3323+31]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[83,3217+6]..[83,3217+35])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_utils.ml[83,3217+7]..[83,3217+8])
                Ppat_var "y" (middle_end/flambda/flambda_utils.ml[83,3217+7]..[83,3217+8])
              core_type (middle_end/flambda/flambda_utils.ml[83,3217+11]..[83,3217+34])
                Ptyp_constr "Asttypes.direction_flag" (middle_end/flambda/flambda_utils.ml[83,3217+11]..[83,3217+34])
                []
            expression (middle_end/flambda/flambda_utils.ml[84,3255+2]..[87,3323+31])
              Pexp_match
              expression (middle_end/flambda/flambda_utils.ml[84,3255+8]..[84,3255+12])
                Pexp_tuple
                [
                  expression (middle_end/flambda/flambda_utils.ml[84,3255+8]..[84,3255+9])
                    Pexp_ident "x" (middle_end/flambda/flambda_utils.ml[84,3255+8]..[84,3255+9])
                  expression (middle_end/flambda/flambda_utils.ml[84,3255+11]..[84,3255+12])
                    Pexp_ident "y" (middle_end/flambda/flambda_utils.ml[84,3255+11]..[84,3255+12])
                ]
              [
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[85,3273+4]..[85,3273+14])
                    Ppat_tuple
                    [
                      pattern (middle_end/flambda/flambda_utils.ml[85,3273+4]..[85,3273+8])
                        Ppat_construct "Upto" (middle_end/flambda/flambda_utils.ml[85,3273+4]..[85,3273+8])
                        None
                      pattern (middle_end/flambda/flambda_utils.ml[85,3273+10]..[85,3273+14])
                        Ppat_construct "Upto" (middle_end/flambda/flambda_utils.ml[85,3273+10]..[85,3273+14])
                        None
                    ]
                  expression (middle_end/flambda/flambda_utils.ml[85,3273+18]..[85,3273+22])
                    Pexp_construct "true" (middle_end/flambda/flambda_utils.ml[85,3273+18]..[85,3273+22])
                    None
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[86,3296+4]..[86,3296+18])
                    Ppat_tuple
                    [
                      pattern (middle_end/flambda/flambda_utils.ml[86,3296+4]..[86,3296+10])
                        Ppat_construct "Downto" (middle_end/flambda/flambda_utils.ml[86,3296+4]..[86,3296+10])
                        None
                      pattern (middle_end/flambda/flambda_utils.ml[86,3296+12]..[86,3296+18])
                        Ppat_construct "Downto" (middle_end/flambda/flambda_utils.ml[86,3296+12]..[86,3296+18])
                        None
                    ]
                  expression (middle_end/flambda/flambda_utils.ml[86,3296+22]..[86,3296+26])
                    Pexp_construct "true" (middle_end/flambda/flambda_utils.ml[86,3296+22]..[86,3296+26])
                    None
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[87,3323+4]..[87,3323+22])
                    Ppat_tuple
                    [
                      pattern (middle_end/flambda/flambda_utils.ml[87,3323+4]..[87,3323+19])
                        Ppat_or
                        pattern (middle_end/flambda/flambda_utils.ml[87,3323+5]..[87,3323+9])
                          Ppat_construct "Upto" (middle_end/flambda/flambda_utils.ml[87,3323+5]..[87,3323+9])
                          None
                        pattern (middle_end/flambda/flambda_utils.ml[87,3323+12]..[87,3323+18])
                          Ppat_construct "Downto" (middle_end/flambda/flambda_utils.ml[87,3323+12]..[87,3323+18])
                          None
                      pattern (middle_end/flambda/flambda_utils.ml[87,3323+21]..[87,3323+22])
                        Ppat_any
                    ]
                  expression (middle_end/flambda/flambda_utils.ml[87,3323+26]..[87,3323+31])
                    Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[87,3323+26]..[87,3323+31])
                    None
              ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[89,3356+0]..[233,10135+54])
    Pstr_value Rec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[89,3356+8]..[89,3356+12])
          Ppat_var "same" (middle_end/flambda/flambda_utils.ml[89,3356+8]..[89,3356+12])
        expression (middle_end/flambda/flambda_utils.ml[89,3356+13]..[165,7031+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[89,3356+13]..[89,3356+29])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[89,3356+14]..[89,3356+16])
              Ppat_var "l1" (middle_end/flambda/flambda_utils.ml[89,3356+14]..[89,3356+16])
            core_type (middle_end/flambda/flambda_utils.ml[89,3356+19]..[89,3356+28])
              Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_utils.ml[89,3356+19]..[89,3356+28])
              []
          expression (middle_end/flambda/flambda_utils.ml[89,3356+30]..[165,7031+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[89,3356+30]..[89,3356+46])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_utils.ml[89,3356+31]..[89,3356+33])
                Ppat_var "l2" (middle_end/flambda/flambda_utils.ml[89,3356+31]..[89,3356+33])
              core_type (middle_end/flambda/flambda_utils.ml[89,3356+36]..[89,3356+45])
                Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_utils.ml[89,3356+36]..[89,3356+45])
                []
            expression (middle_end/flambda/flambda_utils.ml[90,3405+2]..[165,7031+50])
              Pexp_apply
              expression (middle_end/flambda/flambda_utils.ml[90,3405+11]..[90,3405+13])
                Pexp_ident "||" (middle_end/flambda/flambda_utils.ml[90,3405+11]..[90,3405+13])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[90,3405+2]..[90,3405+10])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[90,3405+5]..[90,3405+7])
                      Pexp_ident "==" (middle_end/flambda/flambda_utils.ml[90,3405+5]..[90,3405+7])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[90,3405+2]..[90,3405+4])
                          Pexp_ident "l1" (middle_end/flambda/flambda_utils.ml[90,3405+2]..[90,3405+4])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[90,3405+8]..[90,3405+10])
                          Pexp_ident "l2" (middle_end/flambda/flambda_utils.ml[90,3405+8]..[90,3405+10])
                    ]
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[92,3536+2]..[165,7031+50])
                    Pexp_match
                    expression (middle_end/flambda/flambda_utils.ml[92,3536+8]..[92,3536+16])
                      Pexp_tuple
                      [
                        expression (middle_end/flambda/flambda_utils.ml[92,3536+9]..[92,3536+11])
                          Pexp_ident "l1" (middle_end/flambda/flambda_utils.ml[92,3536+9]..[92,3536+11])
                        expression (middle_end/flambda/flambda_utils.ml[92,3536+13]..[92,3536+15])
                          Pexp_ident "l2" (middle_end/flambda/flambda_utils.ml[92,3536+13]..[92,3536+15])
                      ]
                    [
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[93,3558+4]..[93,3558+19])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_utils.ml[93,3558+4]..[93,3558+10])
                              Ppat_construct "Var" (middle_end/flambda/flambda_utils.ml[93,3558+4]..[93,3558+7])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[93,3558+8]..[93,3558+10])
                                  Ppat_var "v1" (middle_end/flambda/flambda_utils.ml[93,3558+8]..[93,3558+10])
                            pattern (middle_end/flambda/flambda_utils.ml[93,3558+13]..[93,3558+19])
                              Ppat_construct "Var" (middle_end/flambda/flambda_utils.ml[93,3558+13]..[93,3558+16])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[93,3558+17]..[93,3558+19])
                                  Ppat_var "v2" (middle_end/flambda/flambda_utils.ml[93,3558+17]..[93,3558+19])
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[93,3558+24]..[93,3558+44])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[93,3558+24]..[93,3558+38])
                            Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[93,3558+24]..[93,3558+38])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[93,3558+39]..[93,3558+41])
                                Pexp_ident "v1" (middle_end/flambda/flambda_utils.ml[93,3558+39]..[93,3558+41])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[93,3558+42]..[93,3558+44])
                                Pexp_ident "v2" (middle_end/flambda/flambda_utils.ml[93,3558+42]..[93,3558+44])
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[94,3603+4]..[94,3603+23])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[94,3603+4]..[94,3603+12])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[94,3603+4]..[94,3603+9])
                                Ppat_construct "Var" (middle_end/flambda/flambda_utils.ml[94,3603+4]..[94,3603+7])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[94,3603+8]..[94,3603+9])
                                    Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[94,3603+11]..[94,3603+12])
                                Ppat_any
                            ]
                          pattern (middle_end/flambda/flambda_utils.ml[94,3603+15]..[94,3603+23])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[94,3603+15]..[94,3603+16])
                                Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[94,3603+18]..[94,3603+23])
                                Ppat_construct "Var" (middle_end/flambda/flambda_utils.ml[94,3603+18]..[94,3603+21])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[94,3603+22]..[94,3603+23])
                                    Ppat_any
                            ]
                        expression (middle_end/flambda/flambda_utils.ml[94,3603+27]..[94,3603+32])
                          Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[94,3603+27]..[94,3603+32])
                          None
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[95,3636+4]..[95,3636+23])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_utils.ml[95,3636+4]..[95,3636+12])
                              Ppat_construct "Apply" (middle_end/flambda/flambda_utils.ml[95,3636+4]..[95,3636+9])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[95,3636+10]..[95,3636+12])
                                  Ppat_var "a1" (middle_end/flambda/flambda_utils.ml[95,3636+10]..[95,3636+12])
                            pattern (middle_end/flambda/flambda_utils.ml[95,3636+15]..[95,3636+23])
                              Ppat_construct "Apply" (middle_end/flambda/flambda_utils.ml[95,3636+15]..[95,3636+20])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[95,3636+21]..[95,3636+23])
                                  Ppat_var "a2" (middle_end/flambda/flambda_utils.ml[95,3636+21]..[95,3636+23])
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[96,3664+4]..[98,3748+62])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[97,3708+6]..[97,3708+8])
                            Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[97,3708+6]..[97,3708+8])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[96,3664+4]..[96,3664+43])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[96,3664+4]..[96,3664+27])
                                  Pexp_ident "Flambda.equal_call_kind" (middle_end/flambda/flambda_utils.ml[96,3664+4]..[96,3664+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[96,3664+28]..[96,3664+35])
                                      Pexp_field
                                      expression (middle_end/flambda/flambda_utils.ml[96,3664+28]..[96,3664+30])
                                        Pexp_ident "a1" (middle_end/flambda/flambda_utils.ml[96,3664+28]..[96,3664+30])
                                      "kind" (middle_end/flambda/flambda_utils.ml[96,3664+31]..[96,3664+35])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[96,3664+36]..[96,3664+43])
                                      Pexp_field
                                      expression (middle_end/flambda/flambda_utils.ml[96,3664+36]..[96,3664+38])
                                        Pexp_ident "a2" (middle_end/flambda/flambda_utils.ml[96,3664+36]..[96,3664+38])
                                      "kind" (middle_end/flambda/flambda_utils.ml[96,3664+39]..[96,3664+43])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[97,3708+9]..[98,3748+62])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[98,3748+6]..[98,3748+8])
                                  Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[98,3748+6]..[98,3748+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[97,3708+9]..[97,3708+39])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[97,3708+9]..[97,3708+23])
                                        Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[97,3708+9]..[97,3708+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[97,3708+24]..[97,3708+31])
                                            Pexp_field
                                            expression (middle_end/flambda/flambda_utils.ml[97,3708+24]..[97,3708+26])
                                              Pexp_ident "a1" (middle_end/flambda/flambda_utils.ml[97,3708+24]..[97,3708+26])
                                            "func" (middle_end/flambda/flambda_utils.ml[97,3708+27]..[97,3708+31])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[97,3708+32]..[97,3708+39])
                                            Pexp_field
                                            expression (middle_end/flambda/flambda_utils.ml[97,3708+32]..[97,3708+34])
                                              Pexp_ident "a2" (middle_end/flambda/flambda_utils.ml[97,3708+32]..[97,3708+34])
                                            "func" (middle_end/flambda/flambda_utils.ml[97,3708+35]..[97,3708+39])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[98,3748+9]..[98,3748+62])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[98,3748+9]..[98,3748+31])
                                        Pexp_ident "Misc.Stdlib.List.equal" (middle_end/flambda/flambda_utils.ml[98,3748+9]..[98,3748+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[98,3748+32]..[98,3748+46])
                                            Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[98,3748+32]..[98,3748+46])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[98,3748+47]..[98,3748+54])
                                            Pexp_field
                                            expression (middle_end/flambda/flambda_utils.ml[98,3748+47]..[98,3748+49])
                                              Pexp_ident "a1" (middle_end/flambda/flambda_utils.ml[98,3748+47]..[98,3748+49])
                                            "args" (middle_end/flambda/flambda_utils.ml[98,3748+50]..[98,3748+54])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[98,3748+55]..[98,3748+62])
                                            Pexp_field
                                            expression (middle_end/flambda/flambda_utils.ml[98,3748+55]..[98,3748+57])
                                              Pexp_ident "a2" (middle_end/flambda/flambda_utils.ml[98,3748+55]..[98,3748+57])
                                            "args" (middle_end/flambda/flambda_utils.ml[98,3748+58]..[98,3748+62])
                                      ]
                                ]
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[99,3811+4]..[99,3811+27])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[99,3811+4]..[99,3811+14])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[99,3811+4]..[99,3811+11])
                                Ppat_construct "Apply" (middle_end/flambda/flambda_utils.ml[99,3811+4]..[99,3811+9])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[99,3811+10]..[99,3811+11])
                                    Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[99,3811+13]..[99,3811+14])
                                Ppat_any
                            ]
                          pattern (middle_end/flambda/flambda_utils.ml[99,3811+17]..[99,3811+27])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[99,3811+17]..[99,3811+18])
                                Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[99,3811+20]..[99,3811+27])
                                Ppat_construct "Apply" (middle_end/flambda/flambda_utils.ml[99,3811+20]..[99,3811+25])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[99,3811+26]..[99,3811+27])
                                    Ppat_any
                            ]
                        expression (middle_end/flambda/flambda_utils.ml[99,3811+31]..[99,3811+36])
                          Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[99,3811+31]..[99,3811+36])
                          None
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[100,3848+4]..[101,3921+73])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_utils.ml[100,3848+4]..[100,3848+71])
                              Ppat_construct "Let" (middle_end/flambda/flambda_utils.ml[100,3848+4]..[100,3848+7])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[100,3848+8]..[100,3848+71])
                                  Ppat_record Open
                                  [
                                    "var" (middle_end/flambda/flambda_utils.ml[100,3848+10]..[100,3848+13])
                                      pattern (middle_end/flambda/flambda_utils.ml[100,3848+16]..[100,3848+20])
                                        Ppat_var "var1" (middle_end/flambda/flambda_utils.ml[100,3848+16]..[100,3848+20])
                                    "defining_expr" (middle_end/flambda/flambda_utils.ml[100,3848+22]..[100,3848+35])
                                      pattern (middle_end/flambda/flambda_utils.ml[100,3848+38]..[100,3848+52])
                                        Ppat_var "defining_expr1" (middle_end/flambda/flambda_utils.ml[100,3848+38]..[100,3848+52])
                                    "body" (middle_end/flambda/flambda_utils.ml[100,3848+54]..[100,3848+58])
                                      pattern (middle_end/flambda/flambda_utils.ml[100,3848+61]..[100,3848+66])
                                        Ppat_var "body1" (middle_end/flambda/flambda_utils.ml[100,3848+61]..[100,3848+66])
                                  ]
                            pattern (middle_end/flambda/flambda_utils.ml[101,3921+6]..[101,3921+73])
                              Ppat_construct "Let" (middle_end/flambda/flambda_utils.ml[101,3921+6]..[101,3921+9])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[101,3921+10]..[101,3921+73])
                                  Ppat_record Open
                                  [
                                    "var" (middle_end/flambda/flambda_utils.ml[101,3921+12]..[101,3921+15])
                                      pattern (middle_end/flambda/flambda_utils.ml[101,3921+18]..[101,3921+22])
                                        Ppat_var "var2" (middle_end/flambda/flambda_utils.ml[101,3921+18]..[101,3921+22])
                                    "defining_expr" (middle_end/flambda/flambda_utils.ml[101,3921+24]..[101,3921+37])
                                      pattern (middle_end/flambda/flambda_utils.ml[101,3921+40]..[101,3921+54])
                                        Ppat_var "defining_expr2" (middle_end/flambda/flambda_utils.ml[101,3921+40]..[101,3921+54])
                                    "body" (middle_end/flambda/flambda_utils.ml[101,3921+56]..[101,3921+60])
                                      pattern (middle_end/flambda/flambda_utils.ml[101,3921+63]..[101,3921+68])
                                        Ppat_var "body2" (middle_end/flambda/flambda_utils.ml[101,3921+63]..[101,3921+68])
                                  ]
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[102,3998+4]..[103,4071+25])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[102,3998+29]..[102,3998+31])
                            Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[102,3998+29]..[102,3998+31])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[102,3998+4]..[102,3998+28])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[102,3998+4]..[102,3998+18])
                                  Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[102,3998+4]..[102,3998+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[102,3998+19]..[102,3998+23])
                                      Pexp_ident "var1" (middle_end/flambda/flambda_utils.ml[102,3998+19]..[102,3998+23])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[102,3998+24]..[102,3998+28])
                                      Pexp_ident "var2" (middle_end/flambda/flambda_utils.ml[102,3998+24]..[102,3998+28])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[102,3998+32]..[103,4071+25])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[103,4071+6]..[103,4071+8])
                                  Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[103,4071+6]..[103,4071+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[102,3998+32]..[102,3998+72])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[102,3998+32]..[102,3998+42])
                                        Pexp_ident "same_named" (middle_end/flambda/flambda_utils.ml[102,3998+32]..[102,3998+42])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[102,3998+43]..[102,3998+57])
                                            Pexp_ident "defining_expr1" (middle_end/flambda/flambda_utils.ml[102,3998+43]..[102,3998+57])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[102,3998+58]..[102,3998+72])
                                            Pexp_ident "defining_expr2" (middle_end/flambda/flambda_utils.ml[102,3998+58]..[102,3998+72])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[103,4071+9]..[103,4071+25])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[103,4071+9]..[103,4071+13])
                                        Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[103,4071+9]..[103,4071+13])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[103,4071+14]..[103,4071+19])
                                            Pexp_ident "body1" (middle_end/flambda/flambda_utils.ml[103,4071+14]..[103,4071+19])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[103,4071+20]..[103,4071+25])
                                            Pexp_ident "body2" (middle_end/flambda/flambda_utils.ml[103,4071+20]..[103,4071+25])
                                      ]
                                ]
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[104,4097+4]..[104,4097+23])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[104,4097+4]..[104,4097+12])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[104,4097+4]..[104,4097+9])
                                Ppat_construct "Let" (middle_end/flambda/flambda_utils.ml[104,4097+4]..[104,4097+7])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[104,4097+8]..[104,4097+9])
                                    Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[104,4097+11]..[104,4097+12])
                                Ppat_any
                            ]
                          pattern (middle_end/flambda/flambda_utils.ml[104,4097+15]..[104,4097+23])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[104,4097+15]..[104,4097+16])
                                Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[104,4097+18]..[104,4097+23])
                                Ppat_construct "Let" (middle_end/flambda/flambda_utils.ml[104,4097+18]..[104,4097+21])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[104,4097+22]..[104,4097+23])
                                    Ppat_any
                            ]
                        expression (middle_end/flambda/flambda_utils.ml[104,4097+27]..[104,4097+32])
                          Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[104,4097+27]..[104,4097+32])
                          None
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[105,4130+4]..[106,4211+79])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_utils.ml[105,4130+4]..[105,4130+79])
                              Ppat_construct "Let_mutable" (middle_end/flambda/flambda_utils.ml[105,4130+4]..[105,4130+15])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[105,4130+16]..[105,4130+79])
                                  Ppat_record Closed
                                  [
                                    "var" (middle_end/flambda/flambda_utils.ml[105,4130+17]..[105,4130+20])
                                      pattern (middle_end/flambda/flambda_utils.ml[105,4130+23]..[105,4130+26])
                                        Ppat_var "mv1" (middle_end/flambda/flambda_utils.ml[105,4130+23]..[105,4130+26])
                                    "initial_value" (middle_end/flambda/flambda_utils.ml[105,4130+28]..[105,4130+41])
                                      pattern (middle_end/flambda/flambda_utils.ml[105,4130+44]..[105,4130+46])
                                        Ppat_var "v1" (middle_end/flambda/flambda_utils.ml[105,4130+44]..[105,4130+46])
                                    "contents_kind" (middle_end/flambda/flambda_utils.ml[105,4130+48]..[105,4130+61])
                                      pattern (middle_end/flambda/flambda_utils.ml[105,4130+64]..[105,4130+67])
                                        Ppat_var "ck1" (middle_end/flambda/flambda_utils.ml[105,4130+64]..[105,4130+67])
                                    "body" (middle_end/flambda/flambda_utils.ml[105,4130+69]..[105,4130+73])
                                      pattern (middle_end/flambda/flambda_utils.ml[105,4130+76]..[105,4130+78])
                                        Ppat_var "b1" (middle_end/flambda/flambda_utils.ml[105,4130+76]..[105,4130+78])
                                  ]
                            pattern (middle_end/flambda/flambda_utils.ml[106,4211+4]..[106,4211+79])
                              Ppat_construct "Let_mutable" (middle_end/flambda/flambda_utils.ml[106,4211+4]..[106,4211+15])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[106,4211+16]..[106,4211+79])
                                  Ppat_record Closed
                                  [
                                    "var" (middle_end/flambda/flambda_utils.ml[106,4211+17]..[106,4211+20])
                                      pattern (middle_end/flambda/flambda_utils.ml[106,4211+23]..[106,4211+26])
                                        Ppat_var "mv2" (middle_end/flambda/flambda_utils.ml[106,4211+23]..[106,4211+26])
                                    "initial_value" (middle_end/flambda/flambda_utils.ml[106,4211+28]..[106,4211+41])
                                      pattern (middle_end/flambda/flambda_utils.ml[106,4211+44]..[106,4211+46])
                                        Ppat_var "v2" (middle_end/flambda/flambda_utils.ml[106,4211+44]..[106,4211+46])
                                    "contents_kind" (middle_end/flambda/flambda_utils.ml[106,4211+48]..[106,4211+61])
                                      pattern (middle_end/flambda/flambda_utils.ml[106,4211+64]..[106,4211+67])
                                        Ppat_var "ck2" (middle_end/flambda/flambda_utils.ml[106,4211+64]..[106,4211+67])
                                    "body" (middle_end/flambda/flambda_utils.ml[106,4211+69]..[106,4211+73])
                                      pattern (middle_end/flambda/flambda_utils.ml[106,4211+76]..[106,4211+78])
                                        Ppat_var "b2" (middle_end/flambda/flambda_utils.ml[106,4211+76]..[106,4211+78])
                                  ]
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[108,4298+4]..[111,4404+19])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[109,4333+6]..[109,4333+8])
                            Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[109,4333+6]..[109,4333+8])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[108,4298+4]..[108,4298+34])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[108,4298+4]..[108,4298+26])
                                  Pexp_ident "Mutable_variable.equal" (middle_end/flambda/flambda_utils.ml[108,4298+4]..[108,4298+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[108,4298+27]..[108,4298+30])
                                      Pexp_ident "mv1" (middle_end/flambda/flambda_utils.ml[108,4298+27]..[108,4298+30])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[108,4298+31]..[108,4298+34])
                                      Pexp_ident "mv2" (middle_end/flambda/flambda_utils.ml[108,4298+31]..[108,4298+34])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[109,4333+9]..[111,4404+19])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[110,4363+6]..[110,4363+8])
                                  Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[110,4363+6]..[110,4363+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[109,4333+9]..[109,4333+29])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[109,4333+9]..[109,4333+23])
                                        Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[109,4333+9]..[109,4333+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[109,4333+24]..[109,4333+26])
                                            Pexp_ident "v1" (middle_end/flambda/flambda_utils.ml[109,4333+24]..[109,4333+26])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[109,4333+27]..[109,4333+29])
                                            Pexp_ident "v2" (middle_end/flambda/flambda_utils.ml[109,4333+27]..[109,4333+29])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[110,4363+9]..[111,4404+19])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[111,4404+6]..[111,4404+8])
                                        Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[111,4404+6]..[111,4404+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[110,4363+9]..[110,4363+40])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[110,4363+9]..[110,4363+32])
                                              Pexp_ident "Lambda.equal_value_kind" (middle_end/flambda/flambda_utils.ml[110,4363+9]..[110,4363+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[110,4363+33]..[110,4363+36])
                                                  Pexp_ident "ck1" (middle_end/flambda/flambda_utils.ml[110,4363+33]..[110,4363+36])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[110,4363+37]..[110,4363+40])
                                                  Pexp_ident "ck2" (middle_end/flambda/flambda_utils.ml[110,4363+37]..[110,4363+40])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[111,4404+9]..[111,4404+19])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[111,4404+9]..[111,4404+13])
                                              Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[111,4404+9]..[111,4404+13])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[111,4404+14]..[111,4404+16])
                                                  Pexp_ident "b1" (middle_end/flambda/flambda_utils.ml[111,4404+14]..[111,4404+16])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[111,4404+17]..[111,4404+19])
                                                  Pexp_ident "b2" (middle_end/flambda/flambda_utils.ml[111,4404+17]..[111,4404+19])
                                            ]
                                      ]
                                ]
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[112,4424+4]..[112,4424+39])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[112,4424+4]..[112,4424+20])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[112,4424+4]..[112,4424+17])
                                Ppat_construct "Let_mutable" (middle_end/flambda/flambda_utils.ml[112,4424+4]..[112,4424+15])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[112,4424+16]..[112,4424+17])
                                    Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[112,4424+19]..[112,4424+20])
                                Ppat_any
                            ]
                          pattern (middle_end/flambda/flambda_utils.ml[112,4424+23]..[112,4424+39])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[112,4424+23]..[112,4424+24])
                                Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[112,4424+26]..[112,4424+39])
                                Ppat_construct "Let_mutable" (middle_end/flambda/flambda_utils.ml[112,4424+26]..[112,4424+37])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[112,4424+38]..[112,4424+39])
                                    Ppat_any
                            ]
                        expression (middle_end/flambda/flambda_utils.ml[112,4424+43]..[112,4424+48])
                          Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[112,4424+43]..[112,4424+48])
                          None
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[113,4473+4]..[113,4473+40])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_utils.ml[113,4473+4]..[113,4473+21])
                              Ppat_construct "Let_rec" (middle_end/flambda/flambda_utils.ml[113,4473+4]..[113,4473+11])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[113,4473+12]..[113,4473+21])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[113,4473+13]..[113,4473+16])
                                      Ppat_var "bl1" (middle_end/flambda/flambda_utils.ml[113,4473+13]..[113,4473+16])
                                    pattern (middle_end/flambda/flambda_utils.ml[113,4473+18]..[113,4473+20])
                                      Ppat_var "a1" (middle_end/flambda/flambda_utils.ml[113,4473+18]..[113,4473+20])
                                  ]
                            pattern (middle_end/flambda/flambda_utils.ml[113,4473+23]..[113,4473+40])
                              Ppat_construct "Let_rec" (middle_end/flambda/flambda_utils.ml[113,4473+23]..[113,4473+30])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[113,4473+31]..[113,4473+40])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[113,4473+32]..[113,4473+35])
                                      Ppat_var "bl2" (middle_end/flambda/flambda_utils.ml[113,4473+32]..[113,4473+35])
                                    pattern (middle_end/flambda/flambda_utils.ml[113,4473+37]..[113,4473+39])
                                      Ppat_var "a2" (middle_end/flambda/flambda_utils.ml[113,4473+37]..[113,4473+39])
                                  ]
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[114,4517+4]..[114,4517+60])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[114,4517+47]..[114,4517+49])
                            Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[114,4517+47]..[114,4517+49])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[114,4517+4]..[114,4517+46])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[114,4517+4]..[114,4517+26])
                                  Pexp_ident "Misc.Stdlib.List.equal" (middle_end/flambda/flambda_utils.ml[114,4517+4]..[114,4517+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[114,4517+27]..[114,4517+38])
                                      Pexp_ident "samebinding" (middle_end/flambda/flambda_utils.ml[114,4517+27]..[114,4517+38])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[114,4517+39]..[114,4517+42])
                                      Pexp_ident "bl1" (middle_end/flambda/flambda_utils.ml[114,4517+39]..[114,4517+42])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[114,4517+43]..[114,4517+46])
                                      Pexp_ident "bl2" (middle_end/flambda/flambda_utils.ml[114,4517+43]..[114,4517+46])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[114,4517+50]..[114,4517+60])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[114,4517+50]..[114,4517+54])
                                  Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[114,4517+50]..[114,4517+54])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[114,4517+55]..[114,4517+57])
                                      Pexp_ident "a1" (middle_end/flambda/flambda_utils.ml[114,4517+55]..[114,4517+57])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[114,4517+58]..[114,4517+60])
                                      Pexp_ident "a2" (middle_end/flambda/flambda_utils.ml[114,4517+58]..[114,4517+60])
                                ]
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[115,4578+4]..[115,4578+31])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[115,4578+4]..[115,4578+16])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[115,4578+4]..[115,4578+13])
                                Ppat_construct "Let_rec" (middle_end/flambda/flambda_utils.ml[115,4578+4]..[115,4578+11])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[115,4578+12]..[115,4578+13])
                                    Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[115,4578+15]..[115,4578+16])
                                Ppat_any
                            ]
                          pattern (middle_end/flambda/flambda_utils.ml[115,4578+19]..[115,4578+31])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[115,4578+19]..[115,4578+20])
                                Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[115,4578+22]..[115,4578+31])
                                Ppat_construct "Let_rec" (middle_end/flambda/flambda_utils.ml[115,4578+22]..[115,4578+29])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[115,4578+30]..[115,4578+31])
                                    Ppat_any
                            ]
                        expression (middle_end/flambda/flambda_utils.ml[115,4578+35]..[115,4578+40])
                          Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[115,4578+35]..[115,4578+40])
                          None
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[116,4619+4]..[116,4619+36])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_utils.ml[116,4619+4]..[116,4619+19])
                              Ppat_construct "Switch" (middle_end/flambda/flambda_utils.ml[116,4619+4]..[116,4619+10])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[116,4619+11]..[116,4619+19])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[116,4619+12]..[116,4619+14])
                                      Ppat_var "a1" (middle_end/flambda/flambda_utils.ml[116,4619+12]..[116,4619+14])
                                    pattern (middle_end/flambda/flambda_utils.ml[116,4619+16]..[116,4619+18])
                                      Ppat_var "s1" (middle_end/flambda/flambda_utils.ml[116,4619+16]..[116,4619+18])
                                  ]
                            pattern (middle_end/flambda/flambda_utils.ml[116,4619+21]..[116,4619+36])
                              Ppat_construct "Switch" (middle_end/flambda/flambda_utils.ml[116,4619+21]..[116,4619+27])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[116,4619+28]..[116,4619+36])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[116,4619+29]..[116,4619+31])
                                      Ppat_var "a2" (middle_end/flambda/flambda_utils.ml[116,4619+29]..[116,4619+31])
                                    pattern (middle_end/flambda/flambda_utils.ml[116,4619+33]..[116,4619+35])
                                      Ppat_var "s2" (middle_end/flambda/flambda_utils.ml[116,4619+33]..[116,4619+35])
                                  ]
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[117,4659+4]..[117,4659+44])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[117,4659+25]..[117,4659+27])
                            Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[117,4659+25]..[117,4659+27])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[117,4659+4]..[117,4659+24])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[117,4659+4]..[117,4659+18])
                                  Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[117,4659+4]..[117,4659+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[117,4659+19]..[117,4659+21])
                                      Pexp_ident "a1" (middle_end/flambda/flambda_utils.ml[117,4659+19]..[117,4659+21])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[117,4659+22]..[117,4659+24])
                                      Pexp_ident "a2" (middle_end/flambda/flambda_utils.ml[117,4659+22]..[117,4659+24])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[117,4659+28]..[117,4659+44])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[117,4659+28]..[117,4659+38])
                                  Pexp_ident "sameswitch" (middle_end/flambda/flambda_utils.ml[117,4659+28]..[117,4659+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[117,4659+39]..[117,4659+41])
                                      Pexp_ident "s1" (middle_end/flambda/flambda_utils.ml[117,4659+39]..[117,4659+41])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[117,4659+42]..[117,4659+44])
                                      Pexp_ident "s2" (middle_end/flambda/flambda_utils.ml[117,4659+42]..[117,4659+44])
                                ]
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[118,4704+4]..[118,4704+29])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[118,4704+4]..[118,4704+15])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[118,4704+4]..[118,4704+12])
                                Ppat_construct "Switch" (middle_end/flambda/flambda_utils.ml[118,4704+4]..[118,4704+10])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[118,4704+11]..[118,4704+12])
                                    Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[118,4704+14]..[118,4704+15])
                                Ppat_any
                            ]
                          pattern (middle_end/flambda/flambda_utils.ml[118,4704+18]..[118,4704+29])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[118,4704+18]..[118,4704+19])
                                Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[118,4704+21]..[118,4704+29])
                                Ppat_construct "Switch" (middle_end/flambda/flambda_utils.ml[118,4704+21]..[118,4704+27])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[118,4704+28]..[118,4704+29])
                                    Ppat_any
                            ]
                        expression (middle_end/flambda/flambda_utils.ml[118,4704+33]..[118,4704+38])
                          Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[118,4704+33]..[118,4704+38])
                          None
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[119,4743+4]..[119,4743+58])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_utils.ml[119,4743+4]..[119,4743+30])
                              Ppat_construct "String_switch" (middle_end/flambda/flambda_utils.ml[119,4743+4]..[119,4743+17])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[119,4743+18]..[119,4743+30])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[119,4743+19]..[119,4743+21])
                                      Ppat_var "a1" (middle_end/flambda/flambda_utils.ml[119,4743+19]..[119,4743+21])
                                    pattern (middle_end/flambda/flambda_utils.ml[119,4743+23]..[119,4743+25])
                                      Ppat_var "s1" (middle_end/flambda/flambda_utils.ml[119,4743+23]..[119,4743+25])
                                    pattern (middle_end/flambda/flambda_utils.ml[119,4743+27]..[119,4743+29])
                                      Ppat_var "d1" (middle_end/flambda/flambda_utils.ml[119,4743+27]..[119,4743+29])
                                  ]
                            pattern (middle_end/flambda/flambda_utils.ml[119,4743+32]..[119,4743+58])
                              Ppat_construct "String_switch" (middle_end/flambda/flambda_utils.ml[119,4743+32]..[119,4743+45])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[119,4743+46]..[119,4743+58])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[119,4743+47]..[119,4743+49])
                                      Ppat_var "a2" (middle_end/flambda/flambda_utils.ml[119,4743+47]..[119,4743+49])
                                    pattern (middle_end/flambda/flambda_utils.ml[119,4743+51]..[119,4743+53])
                                      Ppat_var "s2" (middle_end/flambda/flambda_utils.ml[119,4743+51]..[119,4743+53])
                                    pattern (middle_end/flambda/flambda_utils.ml[119,4743+55]..[119,4743+57])
                                      Ppat_var "d2" (middle_end/flambda/flambda_utils.ml[119,4743+55]..[119,4743+57])
                                  ]
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[120,4805+4]..[123,4936+32])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[121,4830+6]..[121,4830+8])
                            Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[121,4830+6]..[121,4830+8])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[120,4805+4]..[120,4805+24])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[120,4805+4]..[120,4805+18])
                                  Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[120,4805+4]..[120,4805+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[120,4805+19]..[120,4805+21])
                                      Pexp_ident "a1" (middle_end/flambda/flambda_utils.ml[120,4805+19]..[120,4805+21])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[120,4805+22]..[120,4805+24])
                                      Pexp_ident "a2" (middle_end/flambda/flambda_utils.ml[120,4805+22]..[120,4805+24])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[121,4830+9]..[123,4936+32])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[123,4936+6]..[123,4936+8])
                                  Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[123,4936+6]..[123,4936+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[121,4830+9]..[122,4862+73])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[121,4830+9]..[121,4830+31])
                                        Pexp_ident "Misc.Stdlib.List.equal" (middle_end/flambda/flambda_utils.ml[121,4830+9]..[121,4830+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[122,4862+8]..[122,4862+67])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/flambda/flambda_utils.ml[122,4862+13]..[122,4862+21])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[122,4862+14]..[122,4862+16])
                                                  Ppat_var "s1" (middle_end/flambda/flambda_utils.ml[122,4862+14]..[122,4862+16])
                                                pattern (middle_end/flambda/flambda_utils.ml[122,4862+18]..[122,4862+20])
                                                  Ppat_var "e1" (middle_end/flambda/flambda_utils.ml[122,4862+18]..[122,4862+20])
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[122,4862+22]..[122,4862+66]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/flambda/flambda_utils.ml[122,4862+22]..[122,4862+30])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/flambda/flambda_utils.ml[122,4862+23]..[122,4862+25])
                                                    Ppat_var "s2" (middle_end/flambda/flambda_utils.ml[122,4862+23]..[122,4862+25])
                                                  pattern (middle_end/flambda/flambda_utils.ml[122,4862+27]..[122,4862+29])
                                                    Ppat_var "e2" (middle_end/flambda/flambda_utils.ml[122,4862+27]..[122,4862+29])
                                                ]
                                              expression (middle_end/flambda/flambda_utils.ml[122,4862+34]..[122,4862+66])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_utils.ml[122,4862+53]..[122,4862+55])
                                                  Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[122,4862+53]..[122,4862+55])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[122,4862+34]..[122,4862+52])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_utils.ml[122,4862+34]..[122,4862+46])
                                                        Pexp_ident "String.equal" (middle_end/flambda/flambda_utils.ml[122,4862+34]..[122,4862+46])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_utils.ml[122,4862+47]..[122,4862+49])
                                                            Pexp_ident "s1" (middle_end/flambda/flambda_utils.ml[122,4862+47]..[122,4862+49])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_utils.ml[122,4862+50]..[122,4862+52])
                                                            Pexp_ident "s2" (middle_end/flambda/flambda_utils.ml[122,4862+50]..[122,4862+52])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[122,4862+56]..[122,4862+66])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_utils.ml[122,4862+56]..[122,4862+60])
                                                        Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[122,4862+56]..[122,4862+60])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_utils.ml[122,4862+61]..[122,4862+63])
                                                            Pexp_ident "e1" (middle_end/flambda/flambda_utils.ml[122,4862+61]..[122,4862+63])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_utils.ml[122,4862+64]..[122,4862+66])
                                                            Pexp_ident "e2" (middle_end/flambda/flambda_utils.ml[122,4862+64]..[122,4862+66])
                                                      ]
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[122,4862+68]..[122,4862+70])
                                            Pexp_ident "s1" (middle_end/flambda/flambda_utils.ml[122,4862+68]..[122,4862+70])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[122,4862+71]..[122,4862+73])
                                            Pexp_ident "s2" (middle_end/flambda/flambda_utils.ml[122,4862+71]..[122,4862+73])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[123,4936+9]..[123,4936+32])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[123,4936+9]..[123,4936+21])
                                        Pexp_ident "Option.equal" (middle_end/flambda/flambda_utils.ml[123,4936+9]..[123,4936+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[123,4936+22]..[123,4936+26])
                                            Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[123,4936+22]..[123,4936+26])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[123,4936+27]..[123,4936+29])
                                            Pexp_ident "d1" (middle_end/flambda/flambda_utils.ml[123,4936+27]..[123,4936+29])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[123,4936+30]..[123,4936+32])
                                            Pexp_ident "d2" (middle_end/flambda/flambda_utils.ml[123,4936+30]..[123,4936+32])
                                      ]
                                ]
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[124,4969+4]..[124,4969+43])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[124,4969+4]..[124,4969+22])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[124,4969+4]..[124,4969+19])
                                Ppat_construct "String_switch" (middle_end/flambda/flambda_utils.ml[124,4969+4]..[124,4969+17])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[124,4969+18]..[124,4969+19])
                                    Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[124,4969+21]..[124,4969+22])
                                Ppat_any
                            ]
                          pattern (middle_end/flambda/flambda_utils.ml[124,4969+25]..[124,4969+43])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[124,4969+25]..[124,4969+26])
                                Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[124,4969+28]..[124,4969+43])
                                Ppat_construct "String_switch" (middle_end/flambda/flambda_utils.ml[124,4969+28]..[124,4969+41])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[124,4969+42]..[124,4969+43])
                                    Ppat_any
                            ]
                        expression (middle_end/flambda/flambda_utils.ml[124,4969+47]..[124,4969+52])
                          Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[124,4969+47]..[124,4969+52])
                          None
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[125,5022+4]..[125,5022+48])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_utils.ml[125,5022+4]..[125,5022+25])
                              Ppat_construct "Static_raise" (middle_end/flambda/flambda_utils.ml[125,5022+4]..[125,5022+16])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[125,5022+17]..[125,5022+25])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[125,5022+18]..[125,5022+20])
                                      Ppat_var "e1" (middle_end/flambda/flambda_utils.ml[125,5022+18]..[125,5022+20])
                                    pattern (middle_end/flambda/flambda_utils.ml[125,5022+22]..[125,5022+24])
                                      Ppat_var "a1" (middle_end/flambda/flambda_utils.ml[125,5022+22]..[125,5022+24])
                                  ]
                            pattern (middle_end/flambda/flambda_utils.ml[125,5022+27]..[125,5022+48])
                              Ppat_construct "Static_raise" (middle_end/flambda/flambda_utils.ml[125,5022+27]..[125,5022+39])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[125,5022+40]..[125,5022+48])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[125,5022+41]..[125,5022+43])
                                      Ppat_var "e2" (middle_end/flambda/flambda_utils.ml[125,5022+41]..[125,5022+43])
                                    pattern (middle_end/flambda/flambda_utils.ml[125,5022+45]..[125,5022+47])
                                      Ppat_var "a2" (middle_end/flambda/flambda_utils.ml[125,5022+45]..[125,5022+47])
                                  ]
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[126,5074+4]..[126,5074+79])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[126,5074+33]..[126,5074+35])
                            Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[126,5074+33]..[126,5074+35])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[126,5074+4]..[126,5074+32])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[126,5074+4]..[126,5074+26])
                                  Pexp_ident "Static_exception.equal" (middle_end/flambda/flambda_utils.ml[126,5074+4]..[126,5074+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[126,5074+27]..[126,5074+29])
                                      Pexp_ident "e1" (middle_end/flambda/flambda_utils.ml[126,5074+27]..[126,5074+29])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[126,5074+30]..[126,5074+32])
                                      Pexp_ident "e2" (middle_end/flambda/flambda_utils.ml[126,5074+30]..[126,5074+32])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[126,5074+36]..[126,5074+79])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[126,5074+36]..[126,5074+58])
                                  Pexp_ident "Misc.Stdlib.List.equal" (middle_end/flambda/flambda_utils.ml[126,5074+36]..[126,5074+58])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[126,5074+59]..[126,5074+73])
                                      Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[126,5074+59]..[126,5074+73])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[126,5074+74]..[126,5074+76])
                                      Pexp_ident "a1" (middle_end/flambda/flambda_utils.ml[126,5074+74]..[126,5074+76])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[126,5074+77]..[126,5074+79])
                                      Pexp_ident "a2" (middle_end/flambda/flambda_utils.ml[126,5074+77]..[126,5074+79])
                                ]
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[127,5154+4]..[127,5154+41])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[127,5154+4]..[127,5154+21])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[127,5154+4]..[127,5154+18])
                                Ppat_construct "Static_raise" (middle_end/flambda/flambda_utils.ml[127,5154+4]..[127,5154+16])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[127,5154+17]..[127,5154+18])
                                    Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[127,5154+20]..[127,5154+21])
                                Ppat_any
                            ]
                          pattern (middle_end/flambda/flambda_utils.ml[127,5154+24]..[127,5154+41])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[127,5154+24]..[127,5154+25])
                                Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[127,5154+27]..[127,5154+41])
                                Ppat_construct "Static_raise" (middle_end/flambda/flambda_utils.ml[127,5154+27]..[127,5154+39])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[127,5154+40]..[127,5154+41])
                                    Ppat_any
                            ]
                        expression (middle_end/flambda/flambda_utils.ml[127,5154+45]..[127,5154+50])
                          Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[127,5154+45]..[127,5154+50])
                          None
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[128,5205+4]..[128,5205+64])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_utils.ml[128,5205+4]..[128,5205+33])
                              Ppat_construct "Static_catch" (middle_end/flambda/flambda_utils.ml[128,5205+4]..[128,5205+16])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[128,5205+17]..[128,5205+33])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[128,5205+18]..[128,5205+20])
                                      Ppat_var "s1" (middle_end/flambda/flambda_utils.ml[128,5205+18]..[128,5205+20])
                                    pattern (middle_end/flambda/flambda_utils.ml[128,5205+22]..[128,5205+24])
                                      Ppat_var "v1" (middle_end/flambda/flambda_utils.ml[128,5205+22]..[128,5205+24])
                                    pattern (middle_end/flambda/flambda_utils.ml[128,5205+26]..[128,5205+28])
                                      Ppat_var "a1" (middle_end/flambda/flambda_utils.ml[128,5205+26]..[128,5205+28])
                                    pattern (middle_end/flambda/flambda_utils.ml[128,5205+30]..[128,5205+32])
                                      Ppat_var "b1" (middle_end/flambda/flambda_utils.ml[128,5205+30]..[128,5205+32])
                                  ]
                            pattern (middle_end/flambda/flambda_utils.ml[128,5205+35]..[128,5205+64])
                              Ppat_construct "Static_catch" (middle_end/flambda/flambda_utils.ml[128,5205+35]..[128,5205+47])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[128,5205+48]..[128,5205+64])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[128,5205+49]..[128,5205+51])
                                      Ppat_var "s2" (middle_end/flambda/flambda_utils.ml[128,5205+49]..[128,5205+51])
                                    pattern (middle_end/flambda/flambda_utils.ml[128,5205+53]..[128,5205+55])
                                      Ppat_var "v2" (middle_end/flambda/flambda_utils.ml[128,5205+53]..[128,5205+55])
                                    pattern (middle_end/flambda/flambda_utils.ml[128,5205+57]..[128,5205+59])
                                      Ppat_var "a2" (middle_end/flambda/flambda_utils.ml[128,5205+57]..[128,5205+59])
                                    pattern (middle_end/flambda/flambda_utils.ml[128,5205+61]..[128,5205+63])
                                      Ppat_var "b2" (middle_end/flambda/flambda_utils.ml[128,5205+61]..[128,5205+63])
                                  ]
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[129,5273+4]..[132,5379+19])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[130,5306+6]..[130,5306+8])
                            Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[130,5306+6]..[130,5306+8])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[129,5273+4]..[129,5273+32])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[129,5273+4]..[129,5273+26])
                                  Pexp_ident "Static_exception.equal" (middle_end/flambda/flambda_utils.ml[129,5273+4]..[129,5273+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[129,5273+27]..[129,5273+29])
                                      Pexp_ident "s1" (middle_end/flambda/flambda_utils.ml[129,5273+27]..[129,5273+29])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[129,5273+30]..[129,5273+32])
                                      Pexp_ident "s2" (middle_end/flambda/flambda_utils.ml[129,5273+30]..[129,5273+32])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[130,5306+9]..[132,5379+19])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[131,5359+6]..[131,5359+8])
                                  Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[131,5359+6]..[131,5359+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[130,5306+9]..[130,5306+52])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[130,5306+9]..[130,5306+31])
                                        Pexp_ident "Misc.Stdlib.List.equal" (middle_end/flambda/flambda_utils.ml[130,5306+9]..[130,5306+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[130,5306+32]..[130,5306+46])
                                            Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[130,5306+32]..[130,5306+46])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[130,5306+47]..[130,5306+49])
                                            Pexp_ident "v1" (middle_end/flambda/flambda_utils.ml[130,5306+47]..[130,5306+49])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[130,5306+50]..[130,5306+52])
                                            Pexp_ident "v2" (middle_end/flambda/flambda_utils.ml[130,5306+50]..[130,5306+52])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[131,5359+9]..[132,5379+19])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[132,5379+6]..[132,5379+8])
                                        Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[132,5379+6]..[132,5379+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[131,5359+9]..[131,5359+19])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[131,5359+9]..[131,5359+13])
                                              Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[131,5359+9]..[131,5359+13])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[131,5359+14]..[131,5359+16])
                                                  Pexp_ident "a1" (middle_end/flambda/flambda_utils.ml[131,5359+14]..[131,5359+16])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[131,5359+17]..[131,5359+19])
                                                  Pexp_ident "a2" (middle_end/flambda/flambda_utils.ml[131,5359+17]..[131,5359+19])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[132,5379+9]..[132,5379+19])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[132,5379+9]..[132,5379+13])
                                              Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[132,5379+9]..[132,5379+13])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[132,5379+14]..[132,5379+16])
                                                  Pexp_ident "b1" (middle_end/flambda/flambda_utils.ml[132,5379+14]..[132,5379+16])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[132,5379+17]..[132,5379+19])
                                                  Pexp_ident "b2" (middle_end/flambda/flambda_utils.ml[132,5379+17]..[132,5379+19])
                                            ]
                                      ]
                                ]
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[133,5399+4]..[133,5399+41])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[133,5399+4]..[133,5399+21])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[133,5399+4]..[133,5399+18])
                                Ppat_construct "Static_catch" (middle_end/flambda/flambda_utils.ml[133,5399+4]..[133,5399+16])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[133,5399+17]..[133,5399+18])
                                    Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[133,5399+20]..[133,5399+21])
                                Ppat_any
                            ]
                          pattern (middle_end/flambda/flambda_utils.ml[133,5399+24]..[133,5399+41])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[133,5399+24]..[133,5399+25])
                                Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[133,5399+27]..[133,5399+41])
                                Ppat_construct "Static_catch" (middle_end/flambda/flambda_utils.ml[133,5399+27]..[133,5399+39])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[133,5399+40]..[133,5399+41])
                                    Ppat_any
                            ]
                        expression (middle_end/flambda/flambda_utils.ml[133,5399+45]..[133,5399+50])
                          Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[133,5399+45]..[133,5399+50])
                          None
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[134,5450+4]..[134,5450+48])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_utils.ml[134,5450+4]..[134,5450+25])
                              Ppat_construct "Try_with" (middle_end/flambda/flambda_utils.ml[134,5450+4]..[134,5450+12])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[134,5450+13]..[134,5450+25])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[134,5450+14]..[134,5450+16])
                                      Ppat_var "a1" (middle_end/flambda/flambda_utils.ml[134,5450+14]..[134,5450+16])
                                    pattern (middle_end/flambda/flambda_utils.ml[134,5450+18]..[134,5450+20])
                                      Ppat_var "v1" (middle_end/flambda/flambda_utils.ml[134,5450+18]..[134,5450+20])
                                    pattern (middle_end/flambda/flambda_utils.ml[134,5450+22]..[134,5450+24])
                                      Ppat_var "b1" (middle_end/flambda/flambda_utils.ml[134,5450+22]..[134,5450+24])
                                  ]
                            pattern (middle_end/flambda/flambda_utils.ml[134,5450+27]..[134,5450+48])
                              Ppat_construct "Try_with" (middle_end/flambda/flambda_utils.ml[134,5450+27]..[134,5450+35])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[134,5450+36]..[134,5450+48])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[134,5450+37]..[134,5450+39])
                                      Ppat_var "a2" (middle_end/flambda/flambda_utils.ml[134,5450+37]..[134,5450+39])
                                    pattern (middle_end/flambda/flambda_utils.ml[134,5450+41]..[134,5450+43])
                                      Ppat_var "v2" (middle_end/flambda/flambda_utils.ml[134,5450+41]..[134,5450+43])
                                    pattern (middle_end/flambda/flambda_utils.ml[134,5450+45]..[134,5450+47])
                                      Ppat_var "b2" (middle_end/flambda/flambda_utils.ml[134,5450+45]..[134,5450+47])
                                  ]
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[135,5502+4]..[135,5502+52])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[135,5502+15]..[135,5502+17])
                            Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[135,5502+15]..[135,5502+17])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[135,5502+4]..[135,5502+14])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[135,5502+4]..[135,5502+8])
                                  Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[135,5502+4]..[135,5502+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[135,5502+9]..[135,5502+11])
                                      Pexp_ident "a1" (middle_end/flambda/flambda_utils.ml[135,5502+9]..[135,5502+11])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[135,5502+12]..[135,5502+14])
                                      Pexp_ident "a2" (middle_end/flambda/flambda_utils.ml[135,5502+12]..[135,5502+14])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[135,5502+18]..[135,5502+52])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[135,5502+39]..[135,5502+41])
                                  Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[135,5502+39]..[135,5502+41])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[135,5502+18]..[135,5502+38])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[135,5502+18]..[135,5502+32])
                                        Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[135,5502+18]..[135,5502+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[135,5502+33]..[135,5502+35])
                                            Pexp_ident "v1" (middle_end/flambda/flambda_utils.ml[135,5502+33]..[135,5502+35])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[135,5502+36]..[135,5502+38])
                                            Pexp_ident "v2" (middle_end/flambda/flambda_utils.ml[135,5502+36]..[135,5502+38])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[135,5502+42]..[135,5502+52])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[135,5502+42]..[135,5502+46])
                                        Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[135,5502+42]..[135,5502+46])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[135,5502+47]..[135,5502+49])
                                            Pexp_ident "b1" (middle_end/flambda/flambda_utils.ml[135,5502+47]..[135,5502+49])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[135,5502+50]..[135,5502+52])
                                            Pexp_ident "b2" (middle_end/flambda/flambda_utils.ml[135,5502+50]..[135,5502+52])
                                      ]
                                ]
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[136,5555+4]..[136,5555+33])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[136,5555+4]..[136,5555+17])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[136,5555+4]..[136,5555+14])
                                Ppat_construct "Try_with" (middle_end/flambda/flambda_utils.ml[136,5555+4]..[136,5555+12])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[136,5555+13]..[136,5555+14])
                                    Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[136,5555+16]..[136,5555+17])
                                Ppat_any
                            ]
                          pattern (middle_end/flambda/flambda_utils.ml[136,5555+20]..[136,5555+33])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[136,5555+20]..[136,5555+21])
                                Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[136,5555+23]..[136,5555+33])
                                Ppat_construct "Try_with" (middle_end/flambda/flambda_utils.ml[136,5555+23]..[136,5555+31])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[136,5555+32]..[136,5555+33])
                                    Ppat_any
                            ]
                        expression (middle_end/flambda/flambda_utils.ml[136,5555+37]..[136,5555+42])
                          Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[136,5555+37]..[136,5555+42])
                          None
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[137,5598+4]..[137,5598+56])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_utils.ml[137,5598+4]..[137,5598+29])
                              Ppat_construct "If_then_else" (middle_end/flambda/flambda_utils.ml[137,5598+4]..[137,5598+16])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[137,5598+17]..[137,5598+29])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[137,5598+18]..[137,5598+20])
                                      Ppat_var "a1" (middle_end/flambda/flambda_utils.ml[137,5598+18]..[137,5598+20])
                                    pattern (middle_end/flambda/flambda_utils.ml[137,5598+22]..[137,5598+24])
                                      Ppat_var "b1" (middle_end/flambda/flambda_utils.ml[137,5598+22]..[137,5598+24])
                                    pattern (middle_end/flambda/flambda_utils.ml[137,5598+26]..[137,5598+28])
                                      Ppat_var "c1" (middle_end/flambda/flambda_utils.ml[137,5598+26]..[137,5598+28])
                                  ]
                            pattern (middle_end/flambda/flambda_utils.ml[137,5598+31]..[137,5598+56])
                              Ppat_construct "If_then_else" (middle_end/flambda/flambda_utils.ml[137,5598+31]..[137,5598+43])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[137,5598+44]..[137,5598+56])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[137,5598+45]..[137,5598+47])
                                      Ppat_var "a2" (middle_end/flambda/flambda_utils.ml[137,5598+45]..[137,5598+47])
                                    pattern (middle_end/flambda/flambda_utils.ml[137,5598+49]..[137,5598+51])
                                      Ppat_var "b2" (middle_end/flambda/flambda_utils.ml[137,5598+49]..[137,5598+51])
                                    pattern (middle_end/flambda/flambda_utils.ml[137,5598+53]..[137,5598+55])
                                      Ppat_var "c2" (middle_end/flambda/flambda_utils.ml[137,5598+53]..[137,5598+55])
                                  ]
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[138,5658+4]..[138,5658+52])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[138,5658+25]..[138,5658+27])
                            Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[138,5658+25]..[138,5658+27])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[138,5658+4]..[138,5658+24])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[138,5658+4]..[138,5658+18])
                                  Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[138,5658+4]..[138,5658+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[138,5658+19]..[138,5658+21])
                                      Pexp_ident "a1" (middle_end/flambda/flambda_utils.ml[138,5658+19]..[138,5658+21])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[138,5658+22]..[138,5658+24])
                                      Pexp_ident "a2" (middle_end/flambda/flambda_utils.ml[138,5658+22]..[138,5658+24])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[138,5658+28]..[138,5658+52])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[138,5658+39]..[138,5658+41])
                                  Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[138,5658+39]..[138,5658+41])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[138,5658+28]..[138,5658+38])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[138,5658+28]..[138,5658+32])
                                        Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[138,5658+28]..[138,5658+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[138,5658+33]..[138,5658+35])
                                            Pexp_ident "b1" (middle_end/flambda/flambda_utils.ml[138,5658+33]..[138,5658+35])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[138,5658+36]..[138,5658+38])
                                            Pexp_ident "b2" (middle_end/flambda/flambda_utils.ml[138,5658+36]..[138,5658+38])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[138,5658+42]..[138,5658+52])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[138,5658+42]..[138,5658+46])
                                        Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[138,5658+42]..[138,5658+46])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[138,5658+47]..[138,5658+49])
                                            Pexp_ident "c1" (middle_end/flambda/flambda_utils.ml[138,5658+47]..[138,5658+49])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[138,5658+50]..[138,5658+52])
                                            Pexp_ident "c2" (middle_end/flambda/flambda_utils.ml[138,5658+50]..[138,5658+52])
                                      ]
                                ]
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[139,5711+4]..[139,5711+41])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[139,5711+4]..[139,5711+21])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[139,5711+4]..[139,5711+18])
                                Ppat_construct "If_then_else" (middle_end/flambda/flambda_utils.ml[139,5711+4]..[139,5711+16])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[139,5711+17]..[139,5711+18])
                                    Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[139,5711+20]..[139,5711+21])
                                Ppat_any
                            ]
                          pattern (middle_end/flambda/flambda_utils.ml[139,5711+24]..[139,5711+41])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[139,5711+24]..[139,5711+25])
                                Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[139,5711+27]..[139,5711+41])
                                Ppat_construct "If_then_else" (middle_end/flambda/flambda_utils.ml[139,5711+27]..[139,5711+39])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[139,5711+40]..[139,5711+41])
                                    Ppat_any
                            ]
                        expression (middle_end/flambda/flambda_utils.ml[139,5711+45]..[139,5711+50])
                          Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[139,5711+45]..[139,5711+50])
                          None
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[140,5762+4]..[140,5762+34])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_utils.ml[140,5762+4]..[140,5762+18])
                              Ppat_construct "While" (middle_end/flambda/flambda_utils.ml[140,5762+4]..[140,5762+9])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[140,5762+10]..[140,5762+18])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[140,5762+11]..[140,5762+13])
                                      Ppat_var "a1" (middle_end/flambda/flambda_utils.ml[140,5762+11]..[140,5762+13])
                                    pattern (middle_end/flambda/flambda_utils.ml[140,5762+15]..[140,5762+17])
                                      Ppat_var "b1" (middle_end/flambda/flambda_utils.ml[140,5762+15]..[140,5762+17])
                                  ]
                            pattern (middle_end/flambda/flambda_utils.ml[140,5762+20]..[140,5762+34])
                              Ppat_construct "While" (middle_end/flambda/flambda_utils.ml[140,5762+20]..[140,5762+25])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[140,5762+26]..[140,5762+34])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[140,5762+27]..[140,5762+29])
                                      Ppat_var "a2" (middle_end/flambda/flambda_utils.ml[140,5762+27]..[140,5762+29])
                                    pattern (middle_end/flambda/flambda_utils.ml[140,5762+31]..[140,5762+33])
                                      Ppat_var "b2" (middle_end/flambda/flambda_utils.ml[140,5762+31]..[140,5762+33])
                                  ]
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[141,5800+4]..[141,5800+28])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[141,5800+15]..[141,5800+17])
                            Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[141,5800+15]..[141,5800+17])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[141,5800+4]..[141,5800+14])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[141,5800+4]..[141,5800+8])
                                  Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[141,5800+4]..[141,5800+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[141,5800+9]..[141,5800+11])
                                      Pexp_ident "a1" (middle_end/flambda/flambda_utils.ml[141,5800+9]..[141,5800+11])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[141,5800+12]..[141,5800+14])
                                      Pexp_ident "a2" (middle_end/flambda/flambda_utils.ml[141,5800+12]..[141,5800+14])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[141,5800+18]..[141,5800+28])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[141,5800+18]..[141,5800+22])
                                  Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[141,5800+18]..[141,5800+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[141,5800+23]..[141,5800+25])
                                      Pexp_ident "b1" (middle_end/flambda/flambda_utils.ml[141,5800+23]..[141,5800+25])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[141,5800+26]..[141,5800+28])
                                      Pexp_ident "b2" (middle_end/flambda/flambda_utils.ml[141,5800+26]..[141,5800+28])
                                ]
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[142,5829+4]..[142,5829+27])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[142,5829+4]..[142,5829+14])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[142,5829+4]..[142,5829+11])
                                Ppat_construct "While" (middle_end/flambda/flambda_utils.ml[142,5829+4]..[142,5829+9])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[142,5829+10]..[142,5829+11])
                                    Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[142,5829+13]..[142,5829+14])
                                Ppat_any
                            ]
                          pattern (middle_end/flambda/flambda_utils.ml[142,5829+17]..[142,5829+27])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[142,5829+17]..[142,5829+18])
                                Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[142,5829+20]..[142,5829+27])
                                Ppat_construct "While" (middle_end/flambda/flambda_utils.ml[142,5829+20]..[142,5829+25])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[142,5829+26]..[142,5829+27])
                                    Ppat_any
                            ]
                        expression (middle_end/flambda/flambda_utils.ml[142,5829+31]..[142,5829+36])
                          Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[142,5829+31]..[142,5829+36])
                          None
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[143,5866+4]..[146,6059+71])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_utils.ml[143,5866+4]..[144,5926+71])
                              Ppat_construct "For" (middle_end/flambda/flambda_utils.ml[143,5866+4]..[143,5866+7])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[143,5866+8]..[144,5926+71])
                                  Ppat_record Closed
                                  [
                                    "bound_var" (middle_end/flambda/flambda_utils.ml[143,5866+10]..[143,5866+19])
                                      pattern (middle_end/flambda/flambda_utils.ml[143,5866+22]..[143,5866+32])
                                        Ppat_var "bound_var1" (middle_end/flambda/flambda_utils.ml[143,5866+22]..[143,5866+32])
                                    "from_value" (middle_end/flambda/flambda_utils.ml[143,5866+34]..[143,5866+44])
                                      pattern (middle_end/flambda/flambda_utils.ml[143,5866+47]..[143,5866+58])
                                        Ppat_var "from_value1" (middle_end/flambda/flambda_utils.ml[143,5866+47]..[143,5866+58])
                                    "to_value" (middle_end/flambda/flambda_utils.ml[144,5926+10]..[144,5926+18])
                                      pattern (middle_end/flambda/flambda_utils.ml[144,5926+21]..[144,5926+30])
                                        Ppat_var "to_value1" (middle_end/flambda/flambda_utils.ml[144,5926+21]..[144,5926+30])
                                    "direction" (middle_end/flambda/flambda_utils.ml[144,5926+32]..[144,5926+41])
                                      pattern (middle_end/flambda/flambda_utils.ml[144,5926+44]..[144,5926+54])
                                        Ppat_var "direction1" (middle_end/flambda/flambda_utils.ml[144,5926+44]..[144,5926+54])
                                    "body" (middle_end/flambda/flambda_utils.ml[144,5926+56]..[144,5926+60])
                                      pattern (middle_end/flambda/flambda_utils.ml[144,5926+63]..[144,5926+68])
                                        Ppat_var "body1" (middle_end/flambda/flambda_utils.ml[144,5926+63]..[144,5926+68])
                                  ]
                            pattern (middle_end/flambda/flambda_utils.ml[145,5999+4]..[146,6059+71])
                              Ppat_construct "For" (middle_end/flambda/flambda_utils.ml[145,5999+4]..[145,5999+7])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[145,5999+8]..[146,6059+71])
                                  Ppat_record Closed
                                  [
                                    "bound_var" (middle_end/flambda/flambda_utils.ml[145,5999+10]..[145,5999+19])
                                      pattern (middle_end/flambda/flambda_utils.ml[145,5999+22]..[145,5999+32])
                                        Ppat_var "bound_var2" (middle_end/flambda/flambda_utils.ml[145,5999+22]..[145,5999+32])
                                    "from_value" (middle_end/flambda/flambda_utils.ml[145,5999+34]..[145,5999+44])
                                      pattern (middle_end/flambda/flambda_utils.ml[145,5999+47]..[145,5999+58])
                                        Ppat_var "from_value2" (middle_end/flambda/flambda_utils.ml[145,5999+47]..[145,5999+58])
                                    "to_value" (middle_end/flambda/flambda_utils.ml[146,6059+10]..[146,6059+18])
                                      pattern (middle_end/flambda/flambda_utils.ml[146,6059+21]..[146,6059+30])
                                        Ppat_var "to_value2" (middle_end/flambda/flambda_utils.ml[146,6059+21]..[146,6059+30])
                                    "direction" (middle_end/flambda/flambda_utils.ml[146,6059+32]..[146,6059+41])
                                      pattern (middle_end/flambda/flambda_utils.ml[146,6059+44]..[146,6059+54])
                                        Ppat_var "direction2" (middle_end/flambda/flambda_utils.ml[146,6059+44]..[146,6059+54])
                                    "body" (middle_end/flambda/flambda_utils.ml[146,6059+56]..[146,6059+60])
                                      pattern (middle_end/flambda/flambda_utils.ml[146,6059+63]..[146,6059+68])
                                        Ppat_var "body2" (middle_end/flambda/flambda_utils.ml[146,6059+63]..[146,6059+68])
                                  ]
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[147,6134+4]..[151,6319+25])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[148,6175+6]..[148,6175+8])
                            Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[148,6175+6]..[148,6175+8])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[147,6134+4]..[147,6134+40])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[147,6134+4]..[147,6134+18])
                                  Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[147,6134+4]..[147,6134+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[147,6134+19]..[147,6134+29])
                                      Pexp_ident "bound_var1" (middle_end/flambda/flambda_utils.ml[147,6134+19]..[147,6134+29])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[147,6134+30]..[147,6134+40])
                                      Pexp_ident "bound_var2" (middle_end/flambda/flambda_utils.ml[147,6134+30]..[147,6134+40])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[148,6175+9]..[151,6319+25])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[149,6223+6]..[149,6223+8])
                                  Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[149,6223+6]..[149,6223+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[148,6175+9]..[148,6175+47])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[148,6175+9]..[148,6175+23])
                                        Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[148,6175+9]..[148,6175+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[148,6175+24]..[148,6175+35])
                                            Pexp_ident "from_value1" (middle_end/flambda/flambda_utils.ml[148,6175+24]..[148,6175+35])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[148,6175+36]..[148,6175+47])
                                            Pexp_ident "from_value2" (middle_end/flambda/flambda_utils.ml[148,6175+36]..[148,6175+47])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[149,6223+9]..[151,6319+25])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[150,6267+6]..[150,6267+8])
                                        Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[150,6267+6]..[150,6267+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[149,6223+9]..[149,6223+43])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[149,6223+9]..[149,6223+23])
                                              Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[149,6223+9]..[149,6223+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[149,6223+24]..[149,6223+33])
                                                  Pexp_ident "to_value1" (middle_end/flambda/flambda_utils.ml[149,6223+24]..[149,6223+33])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[149,6223+34]..[149,6223+43])
                                                  Pexp_ident "to_value2" (middle_end/flambda/flambda_utils.ml[149,6223+34]..[149,6223+43])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[150,6267+9]..[151,6319+25])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[151,6319+6]..[151,6319+8])
                                              Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[151,6319+6]..[151,6319+8])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[150,6267+9]..[150,6267+51])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/flambda_utils.ml[150,6267+9]..[150,6267+29])
                                                    Pexp_ident "equal_direction_flag" (middle_end/flambda/flambda_utils.ml[150,6267+9]..[150,6267+29])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[150,6267+30]..[150,6267+40])
                                                        Pexp_ident "direction1" (middle_end/flambda/flambda_utils.ml[150,6267+30]..[150,6267+40])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[150,6267+41]..[150,6267+51])
                                                        Pexp_ident "direction2" (middle_end/flambda/flambda_utils.ml[150,6267+41]..[150,6267+51])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[151,6319+9]..[151,6319+25])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/flambda_utils.ml[151,6319+9]..[151,6319+13])
                                                    Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[151,6319+9]..[151,6319+13])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[151,6319+14]..[151,6319+19])
                                                        Pexp_ident "body1" (middle_end/flambda/flambda_utils.ml[151,6319+14]..[151,6319+19])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[151,6319+20]..[151,6319+25])
                                                        Pexp_ident "body2" (middle_end/flambda/flambda_utils.ml[151,6319+20]..[151,6319+25])
                                                  ]
                                            ]
                                      ]
                                ]
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[152,6345+4]..[152,6345+23])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[152,6345+4]..[152,6345+12])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[152,6345+4]..[152,6345+9])
                                Ppat_construct "For" (middle_end/flambda/flambda_utils.ml[152,6345+4]..[152,6345+7])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[152,6345+8]..[152,6345+9])
                                    Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[152,6345+11]..[152,6345+12])
                                Ppat_any
                            ]
                          pattern (middle_end/flambda/flambda_utils.ml[152,6345+15]..[152,6345+23])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[152,6345+15]..[152,6345+16])
                                Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[152,6345+18]..[152,6345+23])
                                Ppat_construct "For" (middle_end/flambda/flambda_utils.ml[152,6345+18]..[152,6345+21])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[152,6345+22]..[152,6345+23])
                                    Ppat_any
                            ]
                        expression (middle_end/flambda/flambda_utils.ml[152,6345+27]..[152,6345+32])
                          Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[152,6345+27]..[152,6345+32])
                          None
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[153,6378+4]..[154,6452+72])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_utils.ml[153,6378+4]..[153,6378+72])
                              Ppat_construct "Assign" (middle_end/flambda/flambda_utils.ml[153,6378+4]..[153,6378+10])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[153,6378+11]..[153,6378+72])
                                  Ppat_record Closed
                                  [
                                    "being_assigned" (middle_end/flambda/flambda_utils.ml[153,6378+13]..[153,6378+27])
                                      pattern (middle_end/flambda/flambda_utils.ml[153,6378+30]..[153,6378+45])
                                        Ppat_var "being_assigned1" (middle_end/flambda/flambda_utils.ml[153,6378+30]..[153,6378+45])
                                    "new_value" (middle_end/flambda/flambda_utils.ml[153,6378+47]..[153,6378+56])
                                      pattern (middle_end/flambda/flambda_utils.ml[153,6378+59]..[153,6378+69])
                                        Ppat_var "new_value1" (middle_end/flambda/flambda_utils.ml[153,6378+59]..[153,6378+69])
                                  ]
                            pattern (middle_end/flambda/flambda_utils.ml[154,6452+4]..[154,6452+72])
                              Ppat_construct "Assign" (middle_end/flambda/flambda_utils.ml[154,6452+4]..[154,6452+10])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[154,6452+11]..[154,6452+72])
                                  Ppat_record Closed
                                  [
                                    "being_assigned" (middle_end/flambda/flambda_utils.ml[154,6452+13]..[154,6452+27])
                                      pattern (middle_end/flambda/flambda_utils.ml[154,6452+30]..[154,6452+45])
                                        Ppat_var "being_assigned2" (middle_end/flambda/flambda_utils.ml[154,6452+30]..[154,6452+45])
                                    "new_value" (middle_end/flambda/flambda_utils.ml[154,6452+47]..[154,6452+56])
                                      pattern (middle_end/flambda/flambda_utils.ml[154,6452+59]..[154,6452+69])
                                        Ppat_var "new_value2" (middle_end/flambda/flambda_utils.ml[154,6452+59]..[154,6452+69])
                                  ]
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[155,6528+4]..[156,6587+45])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[156,6587+6]..[156,6587+8])
                            Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[156,6587+6]..[156,6587+8])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[155,6528+4]..[155,6528+58])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[155,6528+4]..[155,6528+26])
                                  Pexp_ident "Mutable_variable.equal" (middle_end/flambda/flambda_utils.ml[155,6528+4]..[155,6528+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[155,6528+27]..[155,6528+42])
                                      Pexp_ident "being_assigned1" (middle_end/flambda/flambda_utils.ml[155,6528+27]..[155,6528+42])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[155,6528+43]..[155,6528+58])
                                      Pexp_ident "being_assigned2" (middle_end/flambda/flambda_utils.ml[155,6528+43]..[155,6528+58])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[156,6587+9]..[156,6587+45])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[156,6587+9]..[156,6587+23])
                                  Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[156,6587+9]..[156,6587+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[156,6587+24]..[156,6587+34])
                                      Pexp_ident "new_value1" (middle_end/flambda/flambda_utils.ml[156,6587+24]..[156,6587+34])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[156,6587+35]..[156,6587+45])
                                      Pexp_ident "new_value2" (middle_end/flambda/flambda_utils.ml[156,6587+35]..[156,6587+45])
                                ]
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[157,6633+4]..[157,6633+29])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[157,6633+4]..[157,6633+15])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[157,6633+4]..[157,6633+12])
                                Ppat_construct "Assign" (middle_end/flambda/flambda_utils.ml[157,6633+4]..[157,6633+10])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[157,6633+11]..[157,6633+12])
                                    Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[157,6633+14]..[157,6633+15])
                                Ppat_any
                            ]
                          pattern (middle_end/flambda/flambda_utils.ml[157,6633+18]..[157,6633+29])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[157,6633+18]..[157,6633+19])
                                Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[157,6633+21]..[157,6633+29])
                                Ppat_construct "Assign" (middle_end/flambda/flambda_utils.ml[157,6633+21]..[157,6633+27])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[157,6633+28]..[157,6633+29])
                                    Ppat_any
                            ]
                        expression (middle_end/flambda/flambda_utils.ml[157,6633+33]..[157,6633+38])
                          Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[157,6633+33]..[157,6633+38])
                          None
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[158,6672+4]..[159,6749+75])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_utils.ml[158,6672+4]..[158,6672+75])
                              Ppat_construct "Send" (middle_end/flambda/flambda_utils.ml[158,6672+4]..[158,6672+8])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[158,6672+9]..[158,6672+75])
                                  Ppat_record Closed
                                  [
                                    "kind" (middle_end/flambda/flambda_utils.ml[158,6672+11]..[158,6672+15])
                                      pattern (middle_end/flambda/flambda_utils.ml[158,6672+18]..[158,6672+23])
                                        Ppat_var "kind1" (middle_end/flambda/flambda_utils.ml[158,6672+18]..[158,6672+23])
                                    "meth" (middle_end/flambda/flambda_utils.ml[158,6672+25]..[158,6672+29])
                                      pattern (middle_end/flambda/flambda_utils.ml[158,6672+32]..[158,6672+37])
                                        Ppat_var "meth1" (middle_end/flambda/flambda_utils.ml[158,6672+32]..[158,6672+37])
                                    "obj" (middle_end/flambda/flambda_utils.ml[158,6672+39]..[158,6672+42])
                                      pattern (middle_end/flambda/flambda_utils.ml[158,6672+45]..[158,6672+49])
                                        Ppat_var "obj1" (middle_end/flambda/flambda_utils.ml[158,6672+45]..[158,6672+49])
                                    "args" (middle_end/flambda/flambda_utils.ml[158,6672+51]..[158,6672+55])
                                      pattern (middle_end/flambda/flambda_utils.ml[158,6672+58]..[158,6672+63])
                                        Ppat_var "args1" (middle_end/flambda/flambda_utils.ml[158,6672+58]..[158,6672+63])
                                    "dbg" (middle_end/flambda/flambda_utils.ml[158,6672+65]..[158,6672+68])
                                      pattern (middle_end/flambda/flambda_utils.ml[158,6672+71]..[158,6672+72])
                                        Ppat_any
                                  ]
                            pattern (middle_end/flambda/flambda_utils.ml[159,6749+4]..[159,6749+75])
                              Ppat_construct "Send" (middle_end/flambda/flambda_utils.ml[159,6749+4]..[159,6749+8])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[159,6749+9]..[159,6749+75])
                                  Ppat_record Closed
                                  [
                                    "kind" (middle_end/flambda/flambda_utils.ml[159,6749+11]..[159,6749+15])
                                      pattern (middle_end/flambda/flambda_utils.ml[159,6749+18]..[159,6749+23])
                                        Ppat_var "kind2" (middle_end/flambda/flambda_utils.ml[159,6749+18]..[159,6749+23])
                                    "meth" (middle_end/flambda/flambda_utils.ml[159,6749+25]..[159,6749+29])
                                      pattern (middle_end/flambda/flambda_utils.ml[159,6749+32]..[159,6749+37])
                                        Ppat_var "meth2" (middle_end/flambda/flambda_utils.ml[159,6749+32]..[159,6749+37])
                                    "obj" (middle_end/flambda/flambda_utils.ml[159,6749+39]..[159,6749+42])
                                      pattern (middle_end/flambda/flambda_utils.ml[159,6749+45]..[159,6749+49])
                                        Ppat_var "obj2" (middle_end/flambda/flambda_utils.ml[159,6749+45]..[159,6749+49])
                                    "args" (middle_end/flambda/flambda_utils.ml[159,6749+51]..[159,6749+55])
                                      pattern (middle_end/flambda/flambda_utils.ml[159,6749+58]..[159,6749+63])
                                        Ppat_var "args2" (middle_end/flambda/flambda_utils.ml[159,6749+58]..[159,6749+63])
                                    "dbg" (middle_end/flambda/flambda_utils.ml[159,6749+65]..[159,6749+68])
                                      pattern (middle_end/flambda/flambda_utils.ml[159,6749+71]..[159,6749+72])
                                        Ppat_any
                                  ]
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[160,6828+4]..[163,6937+58])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[161,6867+6]..[161,6867+8])
                            Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[161,6867+6]..[161,6867+8])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[160,6828+4]..[160,6828+38])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[160,6828+4]..[160,6828+26])
                                  Pexp_ident "Lambda.equal_meth_kind" (middle_end/flambda/flambda_utils.ml[160,6828+4]..[160,6828+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[160,6828+27]..[160,6828+32])
                                      Pexp_ident "kind1" (middle_end/flambda/flambda_utils.ml[160,6828+27]..[160,6828+32])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[160,6828+33]..[160,6828+38])
                                      Pexp_ident "kind2" (middle_end/flambda/flambda_utils.ml[160,6828+33]..[160,6828+38])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[161,6867+9]..[163,6937+58])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[162,6903+6]..[162,6903+8])
                                  Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[162,6903+6]..[162,6903+8])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[161,6867+9]..[161,6867+35])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[161,6867+9]..[161,6867+23])
                                        Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[161,6867+9]..[161,6867+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[161,6867+24]..[161,6867+29])
                                            Pexp_ident "meth1" (middle_end/flambda/flambda_utils.ml[161,6867+24]..[161,6867+29])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[161,6867+30]..[161,6867+35])
                                            Pexp_ident "meth2" (middle_end/flambda/flambda_utils.ml[161,6867+30]..[161,6867+35])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[162,6903+9]..[163,6937+58])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[163,6937+6]..[163,6937+8])
                                        Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[163,6937+6]..[163,6937+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[162,6903+9]..[162,6903+33])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[162,6903+9]..[162,6903+23])
                                              Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[162,6903+9]..[162,6903+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[162,6903+24]..[162,6903+28])
                                                  Pexp_ident "obj1" (middle_end/flambda/flambda_utils.ml[162,6903+24]..[162,6903+28])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[162,6903+29]..[162,6903+33])
                                                  Pexp_ident "obj2" (middle_end/flambda/flambda_utils.ml[162,6903+29]..[162,6903+33])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[163,6937+9]..[163,6937+58])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[163,6937+9]..[163,6937+31])
                                              Pexp_ident "Misc.Stdlib.List.equal" (middle_end/flambda/flambda_utils.ml[163,6937+9]..[163,6937+31])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[163,6937+32]..[163,6937+46])
                                                  Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[163,6937+32]..[163,6937+46])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[163,6937+47]..[163,6937+52])
                                                  Pexp_ident "args1" (middle_end/flambda/flambda_utils.ml[163,6937+47]..[163,6937+52])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[163,6937+53]..[163,6937+58])
                                                  Pexp_ident "args2" (middle_end/flambda/flambda_utils.ml[163,6937+53]..[163,6937+58])
                                            ]
                                      ]
                                ]
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[164,6996+4]..[164,6996+25])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[164,6996+4]..[164,6996+13])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[164,6996+4]..[164,6996+10])
                                Ppat_construct "Send" (middle_end/flambda/flambda_utils.ml[164,6996+4]..[164,6996+8])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[164,6996+9]..[164,6996+10])
                                    Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[164,6996+12]..[164,6996+13])
                                Ppat_any
                            ]
                          pattern (middle_end/flambda/flambda_utils.ml[164,6996+16]..[164,6996+25])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[164,6996+16]..[164,6996+17])
                                Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[164,6996+19]..[164,6996+25])
                                Ppat_construct "Send" (middle_end/flambda/flambda_utils.ml[164,6996+19]..[164,6996+23])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[164,6996+24]..[164,6996+25])
                                    Ppat_any
                            ]
                        expression (middle_end/flambda/flambda_utils.ml[164,6996+29]..[164,6996+34])
                          Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[164,6996+29]..[164,6996+34])
                          None
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[165,7031+4]..[165,7031+42])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_utils.ml[165,7031+4]..[165,7031+22])
                              Ppat_construct "Proved_unreachable" (middle_end/flambda/flambda_utils.ml[165,7031+4]..[165,7031+22])
                              None
                            pattern (middle_end/flambda/flambda_utils.ml[165,7031+24]..[165,7031+42])
                              Ppat_construct "Proved_unreachable" (middle_end/flambda/flambda_utils.ml[165,7031+24]..[165,7031+42])
                              None
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[165,7031+46]..[165,7031+50])
                          Pexp_construct "true" (middle_end/flambda/flambda_utils.ml[165,7031+46]..[165,7031+50])
                          None
                    ]
              ]
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[167,7083+4]..[167,7083+14])
          Ppat_var "same_named" (middle_end/flambda/flambda_utils.ml[167,7083+4]..[167,7083+14])
        expression (middle_end/flambda/flambda_utils.ml[167,7083+15]..[198,8640+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[167,7083+15]..[167,7083+39])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[167,7083+16]..[167,7083+22])
              Ppat_var "named1" (middle_end/flambda/flambda_utils.ml[167,7083+16]..[167,7083+22])
            core_type (middle_end/flambda/flambda_utils.ml[167,7083+25]..[167,7083+38])
              Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_utils.ml[167,7083+25]..[167,7083+38])
              []
          expression (middle_end/flambda/flambda_utils.ml[167,7083+40]..[198,8640+34]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[167,7083+40]..[167,7083+64])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_utils.ml[167,7083+41]..[167,7083+47])
                Ppat_var "named2" (middle_end/flambda/flambda_utils.ml[167,7083+41]..[167,7083+47])
              core_type (middle_end/flambda/flambda_utils.ml[167,7083+50]..[167,7083+63])
                Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_utils.ml[167,7083+50]..[167,7083+63])
                []
            expression (middle_end/flambda/flambda_utils.ml[168,7150+2]..[198,8640+34])
              Pexp_match
              expression (middle_end/flambda/flambda_utils.ml[168,7150+8]..[168,7150+22])
                Pexp_tuple
                [
                  expression (middle_end/flambda/flambda_utils.ml[168,7150+8]..[168,7150+14])
                    Pexp_ident "named1" (middle_end/flambda/flambda_utils.ml[168,7150+8]..[168,7150+14])
                  expression (middle_end/flambda/flambda_utils.ml[168,7150+16]..[168,7150+22])
                    Pexp_ident "named2" (middle_end/flambda/flambda_utils.ml[168,7150+16]..[168,7150+22])
                ]
              [
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[169,7178+4]..[169,7178+25])
                    Ppat_tuple
                    [
                      pattern (middle_end/flambda/flambda_utils.ml[169,7178+4]..[169,7178+13])
                        Ppat_construct "Symbol" (middle_end/flambda/flambda_utils.ml[169,7178+4]..[169,7178+10])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[169,7178+11]..[169,7178+13])
                            Ppat_var "s1" (middle_end/flambda/flambda_utils.ml[169,7178+11]..[169,7178+13])
                      pattern (middle_end/flambda/flambda_utils.ml[169,7178+16]..[169,7178+25])
                        Ppat_construct "Symbol" (middle_end/flambda/flambda_utils.ml[169,7178+16]..[169,7178+22])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[169,7178+23]..[169,7178+25])
                            Ppat_var "s2" (middle_end/flambda/flambda_utils.ml[169,7178+23]..[169,7178+25])
                    ]
                  expression (middle_end/flambda/flambda_utils.ml[169,7178+30]..[169,7178+48])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[169,7178+30]..[169,7178+42])
                      Pexp_ident "Symbol.equal" (middle_end/flambda/flambda_utils.ml[169,7178+30]..[169,7178+42])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[169,7178+43]..[169,7178+45])
                          Pexp_ident "s1" (middle_end/flambda/flambda_utils.ml[169,7178+43]..[169,7178+45])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[169,7178+46]..[169,7178+48])
                          Pexp_ident "s2" (middle_end/flambda/flambda_utils.ml[169,7178+46]..[169,7178+48])
                    ]
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[170,7227+4]..[170,7227+29])
                    Ppat_or
                    pattern (middle_end/flambda/flambda_utils.ml[170,7227+4]..[170,7227+15])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[170,7227+4]..[170,7227+12])
                          Ppat_construct "Symbol" (middle_end/flambda/flambda_utils.ml[170,7227+4]..[170,7227+10])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[170,7227+11]..[170,7227+12])
                              Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[170,7227+14]..[170,7227+15])
                          Ppat_any
                      ]
                    pattern (middle_end/flambda/flambda_utils.ml[170,7227+18]..[170,7227+29])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[170,7227+18]..[170,7227+19])
                          Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[170,7227+21]..[170,7227+29])
                          Ppat_construct "Symbol" (middle_end/flambda/flambda_utils.ml[170,7227+21]..[170,7227+27])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[170,7227+28]..[170,7227+29])
                              Ppat_any
                      ]
                  expression (middle_end/flambda/flambda_utils.ml[170,7227+33]..[170,7227+38])
                    Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[170,7227+33]..[170,7227+38])
                    None
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[171,7266+4]..[171,7266+22])
                    Ppat_tuple
                    [
                      pattern (middle_end/flambda/flambda_utils.ml[171,7266+4]..[171,7266+12])
                        Ppat_construct "Const" (middle_end/flambda/flambda_utils.ml[171,7266+4]..[171,7266+9])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[171,7266+10]..[171,7266+12])
                            Ppat_var "c1" (middle_end/flambda/flambda_utils.ml[171,7266+10]..[171,7266+12])
                      pattern (middle_end/flambda/flambda_utils.ml[171,7266+14]..[171,7266+22])
                        Ppat_construct "Const" (middle_end/flambda/flambda_utils.ml[171,7266+14]..[171,7266+19])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[171,7266+20]..[171,7266+22])
                            Ppat_var "c2" (middle_end/flambda/flambda_utils.ml[171,7266+20]..[171,7266+22])
                    ]
                  expression (middle_end/flambda/flambda_utils.ml[171,7266+26]..[171,7266+57])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[171,7266+54]..[171,7266+55])
                      Pexp_ident "=" (middle_end/flambda/flambda_utils.ml[171,7266+54]..[171,7266+55])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[171,7266+26]..[171,7266+53])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[171,7266+26]..[171,7266+47])
                            Pexp_ident "Flambda.compare_const" (middle_end/flambda/flambda_utils.ml[171,7266+26]..[171,7266+47])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[171,7266+48]..[171,7266+50])
                                Pexp_ident "c1" (middle_end/flambda/flambda_utils.ml[171,7266+48]..[171,7266+50])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[171,7266+51]..[171,7266+53])
                                Pexp_ident "c2" (middle_end/flambda/flambda_utils.ml[171,7266+51]..[171,7266+53])
                          ]
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[171,7266+56]..[171,7266+57])
                          Pexp_constant PConst_int (0,None)
                    ]
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[172,7324+4]..[172,7324+27])
                    Ppat_or
                    pattern (middle_end/flambda/flambda_utils.ml[172,7324+4]..[172,7324+14])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[172,7324+4]..[172,7324+11])
                          Ppat_construct "Const" (middle_end/flambda/flambda_utils.ml[172,7324+4]..[172,7324+9])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[172,7324+10]..[172,7324+11])
                              Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[172,7324+13]..[172,7324+14])
                          Ppat_any
                      ]
                    pattern (middle_end/flambda/flambda_utils.ml[172,7324+17]..[172,7324+27])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[172,7324+17]..[172,7324+18])
                          Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[172,7324+20]..[172,7324+27])
                          Ppat_construct "Const" (middle_end/flambda/flambda_utils.ml[172,7324+20]..[172,7324+25])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[172,7324+26]..[172,7324+27])
                              Ppat_any
                      ]
                  expression (middle_end/flambda/flambda_utils.ml[172,7324+31]..[172,7324+36])
                    Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[172,7324+31]..[172,7324+36])
                    None
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[173,7361+4]..[173,7361+42])
                    Ppat_tuple
                    [
                      pattern (middle_end/flambda/flambda_utils.ml[173,7361+4]..[173,7361+22])
                        Ppat_construct "Allocated_const" (middle_end/flambda/flambda_utils.ml[173,7361+4]..[173,7361+19])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[173,7361+20]..[173,7361+22])
                            Ppat_var "c1" (middle_end/flambda/flambda_utils.ml[173,7361+20]..[173,7361+22])
                      pattern (middle_end/flambda/flambda_utils.ml[173,7361+24]..[173,7361+42])
                        Ppat_construct "Allocated_const" (middle_end/flambda/flambda_utils.ml[173,7361+24]..[173,7361+39])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[173,7361+40]..[173,7361+42])
                            Ppat_var "c2" (middle_end/flambda/flambda_utils.ml[173,7361+40]..[173,7361+42])
                    ]
                  expression (middle_end/flambda/flambda_utils.ml[174,7407+4]..[174,7407+37])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[174,7407+34]..[174,7407+35])
                      Pexp_ident "=" (middle_end/flambda/flambda_utils.ml[174,7407+34]..[174,7407+35])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[174,7407+4]..[174,7407+33])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[174,7407+4]..[174,7407+27])
                            Pexp_ident "Allocated_const.compare" (middle_end/flambda/flambda_utils.ml[174,7407+4]..[174,7407+27])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[174,7407+28]..[174,7407+30])
                                Pexp_ident "c1" (middle_end/flambda/flambda_utils.ml[174,7407+28]..[174,7407+30])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[174,7407+31]..[174,7407+33])
                                Pexp_ident "c2" (middle_end/flambda/flambda_utils.ml[174,7407+31]..[174,7407+33])
                          ]
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[174,7407+36]..[174,7407+37])
                          Pexp_constant PConst_int (0,None)
                    ]
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[175,7445+4]..[175,7445+47])
                    Ppat_or
                    pattern (middle_end/flambda/flambda_utils.ml[175,7445+4]..[175,7445+24])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[175,7445+4]..[175,7445+21])
                          Ppat_construct "Allocated_const" (middle_end/flambda/flambda_utils.ml[175,7445+4]..[175,7445+19])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[175,7445+20]..[175,7445+21])
                              Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[175,7445+23]..[175,7445+24])
                          Ppat_any
                      ]
                    pattern (middle_end/flambda/flambda_utils.ml[175,7445+27]..[175,7445+47])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[175,7445+27]..[175,7445+28])
                          Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[175,7445+30]..[175,7445+47])
                          Ppat_construct "Allocated_const" (middle_end/flambda/flambda_utils.ml[175,7445+30]..[175,7445+45])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[175,7445+46]..[175,7445+47])
                              Ppat_any
                      ]
                  expression (middle_end/flambda/flambda_utils.ml[175,7445+51]..[175,7445+56])
                    Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[175,7445+51]..[175,7445+56])
                    None
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[176,7502+4]..[176,7502+38])
                    Ppat_tuple
                    [
                      pattern (middle_end/flambda/flambda_utils.ml[176,7502+4]..[176,7502+20])
                        Ppat_construct "Read_mutable" (middle_end/flambda/flambda_utils.ml[176,7502+4]..[176,7502+16])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[176,7502+17]..[176,7502+20])
                            Ppat_var "mv1" (middle_end/flambda/flambda_utils.ml[176,7502+17]..[176,7502+20])
                      pattern (middle_end/flambda/flambda_utils.ml[176,7502+22]..[176,7502+38])
                        Ppat_construct "Read_mutable" (middle_end/flambda/flambda_utils.ml[176,7502+22]..[176,7502+34])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[176,7502+35]..[176,7502+38])
                            Ppat_var "mv2" (middle_end/flambda/flambda_utils.ml[176,7502+35]..[176,7502+38])
                    ]
                  expression (middle_end/flambda/flambda_utils.ml[176,7502+42]..[176,7502+72])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[176,7502+42]..[176,7502+64])
                      Pexp_ident "Mutable_variable.equal" (middle_end/flambda/flambda_utils.ml[176,7502+42]..[176,7502+64])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[176,7502+65]..[176,7502+68])
                          Pexp_ident "mv1" (middle_end/flambda/flambda_utils.ml[176,7502+65]..[176,7502+68])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[176,7502+69]..[176,7502+72])
                          Pexp_ident "mv2" (middle_end/flambda/flambda_utils.ml[176,7502+69]..[176,7502+72])
                    ]
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[177,7575+4]..[177,7575+41])
                    Ppat_or
                    pattern (middle_end/flambda/flambda_utils.ml[177,7575+4]..[177,7575+21])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[177,7575+4]..[177,7575+18])
                          Ppat_construct "Read_mutable" (middle_end/flambda/flambda_utils.ml[177,7575+4]..[177,7575+16])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[177,7575+17]..[177,7575+18])
                              Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[177,7575+20]..[177,7575+21])
                          Ppat_any
                      ]
                    pattern (middle_end/flambda/flambda_utils.ml[177,7575+24]..[177,7575+41])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[177,7575+24]..[177,7575+25])
                          Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[177,7575+27]..[177,7575+41])
                          Ppat_construct "Read_mutable" (middle_end/flambda/flambda_utils.ml[177,7575+27]..[177,7575+39])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[177,7575+40]..[177,7575+41])
                              Ppat_any
                      ]
                  expression (middle_end/flambda/flambda_utils.ml[177,7575+45]..[177,7575+50])
                    Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[177,7575+45]..[177,7575+50])
                    None
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[178,7626+4]..[178,7626+58])
                    Ppat_tuple
                    [
                      pattern (middle_end/flambda/flambda_utils.ml[178,7626+4]..[178,7626+30])
                        Ppat_construct "Read_symbol_field" (middle_end/flambda/flambda_utils.ml[178,7626+4]..[178,7626+21])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[178,7626+22]..[178,7626+30])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[178,7626+23]..[178,7626+25])
                                Ppat_var "s1" (middle_end/flambda/flambda_utils.ml[178,7626+23]..[178,7626+25])
                              pattern (middle_end/flambda/flambda_utils.ml[178,7626+27]..[178,7626+29])
                                Ppat_var "i1" (middle_end/flambda/flambda_utils.ml[178,7626+27]..[178,7626+29])
                            ]
                      pattern (middle_end/flambda/flambda_utils.ml[178,7626+32]..[178,7626+58])
                        Ppat_construct "Read_symbol_field" (middle_end/flambda/flambda_utils.ml[178,7626+32]..[178,7626+49])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[178,7626+50]..[178,7626+58])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[178,7626+51]..[178,7626+53])
                                Ppat_var "s2" (middle_end/flambda/flambda_utils.ml[178,7626+51]..[178,7626+53])
                              pattern (middle_end/flambda/flambda_utils.ml[178,7626+55]..[178,7626+57])
                                Ppat_var "i2" (middle_end/flambda/flambda_utils.ml[178,7626+55]..[178,7626+57])
                            ]
                    ]
                  expression (middle_end/flambda/flambda_utils.ml[179,7688+4]..[179,7688+33])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[179,7688+23]..[179,7688+25])
                      Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[179,7688+23]..[179,7688+25])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[179,7688+4]..[179,7688+22])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[179,7688+4]..[179,7688+16])
                            Pexp_ident "Symbol.equal" (middle_end/flambda/flambda_utils.ml[179,7688+4]..[179,7688+16])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[179,7688+17]..[179,7688+19])
                                Pexp_ident "s1" (middle_end/flambda/flambda_utils.ml[179,7688+17]..[179,7688+19])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[179,7688+20]..[179,7688+22])
                                Pexp_ident "s2" (middle_end/flambda/flambda_utils.ml[179,7688+20]..[179,7688+22])
                          ]
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[179,7688+26]..[179,7688+33])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[179,7688+29]..[179,7688+30])
                            Pexp_ident "=" (middle_end/flambda/flambda_utils.ml[179,7688+29]..[179,7688+30])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[179,7688+26]..[179,7688+28])
                                Pexp_ident "i1" (middle_end/flambda/flambda_utils.ml[179,7688+26]..[179,7688+28])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[179,7688+31]..[179,7688+33])
                                Pexp_ident "i2" (middle_end/flambda/flambda_utils.ml[179,7688+31]..[179,7688+33])
                          ]
                    ]
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[180,7722+4]..[180,7722+51])
                    Ppat_or
                    pattern (middle_end/flambda/flambda_utils.ml[180,7722+4]..[180,7722+26])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[180,7722+4]..[180,7722+23])
                          Ppat_construct "Read_symbol_field" (middle_end/flambda/flambda_utils.ml[180,7722+4]..[180,7722+21])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[180,7722+22]..[180,7722+23])
                              Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[180,7722+25]..[180,7722+26])
                          Ppat_any
                      ]
                    pattern (middle_end/flambda/flambda_utils.ml[180,7722+29]..[180,7722+51])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[180,7722+29]..[180,7722+30])
                          Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[180,7722+32]..[180,7722+51])
                          Ppat_construct "Read_symbol_field" (middle_end/flambda/flambda_utils.ml[180,7722+32]..[180,7722+49])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[180,7722+50]..[180,7722+51])
                              Ppat_any
                      ]
                  expression (middle_end/flambda/flambda_utils.ml[180,7722+55]..[180,7722+60])
                    Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[180,7722+55]..[180,7722+60])
                    None
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[181,7783+4]..[181,7783+42])
                    Ppat_tuple
                    [
                      pattern (middle_end/flambda/flambda_utils.ml[181,7783+4]..[181,7783+22])
                        Ppat_construct "Set_of_closures" (middle_end/flambda/flambda_utils.ml[181,7783+4]..[181,7783+19])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[181,7783+20]..[181,7783+22])
                            Ppat_var "s1" (middle_end/flambda/flambda_utils.ml[181,7783+20]..[181,7783+22])
                      pattern (middle_end/flambda/flambda_utils.ml[181,7783+24]..[181,7783+42])
                        Ppat_construct "Set_of_closures" (middle_end/flambda/flambda_utils.ml[181,7783+24]..[181,7783+39])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[181,7783+40]..[181,7783+42])
                            Ppat_var "s2" (middle_end/flambda/flambda_utils.ml[181,7783+40]..[181,7783+42])
                    ]
                  expression (middle_end/flambda/flambda_utils.ml[181,7783+46]..[181,7783+72])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[181,7783+46]..[181,7783+66])
                      Pexp_ident "same_set_of_closures" (middle_end/flambda/flambda_utils.ml[181,7783+46]..[181,7783+66])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[181,7783+67]..[181,7783+69])
                          Pexp_ident "s1" (middle_end/flambda/flambda_utils.ml[181,7783+67]..[181,7783+69])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[181,7783+70]..[181,7783+72])
                          Pexp_ident "s2" (middle_end/flambda/flambda_utils.ml[181,7783+70]..[181,7783+72])
                    ]
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[182,7856+4]..[182,7856+47])
                    Ppat_or
                    pattern (middle_end/flambda/flambda_utils.ml[182,7856+4]..[182,7856+24])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[182,7856+4]..[182,7856+21])
                          Ppat_construct "Set_of_closures" (middle_end/flambda/flambda_utils.ml[182,7856+4]..[182,7856+19])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[182,7856+20]..[182,7856+21])
                              Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[182,7856+23]..[182,7856+24])
                          Ppat_any
                      ]
                    pattern (middle_end/flambda/flambda_utils.ml[182,7856+27]..[182,7856+47])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[182,7856+27]..[182,7856+28])
                          Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[182,7856+30]..[182,7856+47])
                          Ppat_construct "Set_of_closures" (middle_end/flambda/flambda_utils.ml[182,7856+30]..[182,7856+45])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[182,7856+46]..[182,7856+47])
                              Ppat_any
                      ]
                  expression (middle_end/flambda/flambda_utils.ml[182,7856+51]..[182,7856+56])
                    Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[182,7856+51]..[182,7856+56])
                    None
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[183,7913+4]..[183,7913+42])
                    Ppat_tuple
                    [
                      pattern (middle_end/flambda/flambda_utils.ml[183,7913+4]..[183,7913+22])
                        Ppat_construct "Project_closure" (middle_end/flambda/flambda_utils.ml[183,7913+4]..[183,7913+19])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[183,7913+20]..[183,7913+22])
                            Ppat_var "f1" (middle_end/flambda/flambda_utils.ml[183,7913+20]..[183,7913+22])
                      pattern (middle_end/flambda/flambda_utils.ml[183,7913+24]..[183,7913+42])
                        Ppat_construct "Project_closure" (middle_end/flambda/flambda_utils.ml[183,7913+24]..[183,7913+39])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[183,7913+40]..[183,7913+42])
                            Ppat_var "f2" (middle_end/flambda/flambda_utils.ml[183,7913+40]..[183,7913+42])
                    ]
                  expression (middle_end/flambda/flambda_utils.ml[183,7913+46]..[183,7913+72])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[183,7913+46]..[183,7913+66])
                      Pexp_ident "same_project_closure" (middle_end/flambda/flambda_utils.ml[183,7913+46]..[183,7913+66])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[183,7913+67]..[183,7913+69])
                          Pexp_ident "f1" (middle_end/flambda/flambda_utils.ml[183,7913+67]..[183,7913+69])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[183,7913+70]..[183,7913+72])
                          Pexp_ident "f2" (middle_end/flambda/flambda_utils.ml[183,7913+70]..[183,7913+72])
                    ]
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[184,7986+4]..[184,7986+47])
                    Ppat_or
                    pattern (middle_end/flambda/flambda_utils.ml[184,7986+4]..[184,7986+24])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[184,7986+4]..[184,7986+21])
                          Ppat_construct "Project_closure" (middle_end/flambda/flambda_utils.ml[184,7986+4]..[184,7986+19])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[184,7986+20]..[184,7986+21])
                              Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[184,7986+23]..[184,7986+24])
                          Ppat_any
                      ]
                    pattern (middle_end/flambda/flambda_utils.ml[184,7986+27]..[184,7986+47])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[184,7986+27]..[184,7986+28])
                          Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[184,7986+30]..[184,7986+47])
                          Ppat_construct "Project_closure" (middle_end/flambda/flambda_utils.ml[184,7986+30]..[184,7986+45])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[184,7986+46]..[184,7986+47])
                              Ppat_any
                      ]
                  expression (middle_end/flambda/flambda_utils.ml[184,7986+51]..[184,7986+56])
                    Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[184,7986+51]..[184,7986+56])
                    None
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[185,8043+4]..[185,8043+34])
                    Ppat_tuple
                    [
                      pattern (middle_end/flambda/flambda_utils.ml[185,8043+4]..[185,8043+18])
                        Ppat_construct "Project_var" (middle_end/flambda/flambda_utils.ml[185,8043+4]..[185,8043+15])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[185,8043+16]..[185,8043+18])
                            Ppat_var "v1" (middle_end/flambda/flambda_utils.ml[185,8043+16]..[185,8043+18])
                      pattern (middle_end/flambda/flambda_utils.ml[185,8043+20]..[185,8043+34])
                        Ppat_construct "Project_var" (middle_end/flambda/flambda_utils.ml[185,8043+20]..[185,8043+31])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[185,8043+32]..[185,8043+34])
                            Ppat_var "v2" (middle_end/flambda/flambda_utils.ml[185,8043+32]..[185,8043+34])
                    ]
                  expression (middle_end/flambda/flambda_utils.ml[186,8081+4]..[188,8176+47])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[187,8122+6]..[187,8122+8])
                      Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[187,8122+6]..[187,8122+8])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[186,8081+4]..[186,8081+40])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[186,8081+4]..[186,8081+18])
                            Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[186,8081+4]..[186,8081+18])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[186,8081+19]..[186,8081+29])
                                Pexp_field
                                expression (middle_end/flambda/flambda_utils.ml[186,8081+19]..[186,8081+21])
                                  Pexp_ident "v1" (middle_end/flambda/flambda_utils.ml[186,8081+19]..[186,8081+21])
                                "closure" (middle_end/flambda/flambda_utils.ml[186,8081+22]..[186,8081+29])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[186,8081+30]..[186,8081+40])
                                Pexp_field
                                expression (middle_end/flambda/flambda_utils.ml[186,8081+30]..[186,8081+32])
                                  Pexp_ident "v2" (middle_end/flambda/flambda_utils.ml[186,8081+30]..[186,8081+32])
                                "closure" (middle_end/flambda/flambda_utils.ml[186,8081+33]..[186,8081+40])
                          ]
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[187,8122+9]..[188,8176+47])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[188,8176+6]..[188,8176+8])
                            Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[188,8176+6]..[188,8176+8])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[187,8122+9]..[187,8122+53])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[187,8122+9]..[187,8122+25])
                                  Pexp_ident "Closure_id.equal" (middle_end/flambda/flambda_utils.ml[187,8122+9]..[187,8122+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[187,8122+26]..[187,8122+39])
                                      Pexp_field
                                      expression (middle_end/flambda/flambda_utils.ml[187,8122+26]..[187,8122+28])
                                        Pexp_ident "v1" (middle_end/flambda/flambda_utils.ml[187,8122+26]..[187,8122+28])
                                      "closure_id" (middle_end/flambda/flambda_utils.ml[187,8122+29]..[187,8122+39])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[187,8122+40]..[187,8122+53])
                                      Pexp_field
                                      expression (middle_end/flambda/flambda_utils.ml[187,8122+40]..[187,8122+42])
                                        Pexp_ident "v2" (middle_end/flambda/flambda_utils.ml[187,8122+40]..[187,8122+42])
                                      "closure_id" (middle_end/flambda/flambda_utils.ml[187,8122+43]..[187,8122+53])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[188,8176+9]..[188,8176+47])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[188,8176+9]..[188,8176+33])
                                  Pexp_ident "Var_within_closure.equal" (middle_end/flambda/flambda_utils.ml[188,8176+9]..[188,8176+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[188,8176+34]..[188,8176+40])
                                      Pexp_field
                                      expression (middle_end/flambda/flambda_utils.ml[188,8176+34]..[188,8176+36])
                                        Pexp_ident "v1" (middle_end/flambda/flambda_utils.ml[188,8176+34]..[188,8176+36])
                                      "var" (middle_end/flambda/flambda_utils.ml[188,8176+37]..[188,8176+40])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[188,8176+41]..[188,8176+47])
                                      Pexp_field
                                      expression (middle_end/flambda/flambda_utils.ml[188,8176+41]..[188,8176+43])
                                        Pexp_ident "v2" (middle_end/flambda/flambda_utils.ml[188,8176+41]..[188,8176+43])
                                      "var" (middle_end/flambda/flambda_utils.ml[188,8176+44]..[188,8176+47])
                                ]
                          ]
                    ]
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[189,8224+4]..[189,8224+39])
                    Ppat_or
                    pattern (middle_end/flambda/flambda_utils.ml[189,8224+4]..[189,8224+20])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[189,8224+4]..[189,8224+17])
                          Ppat_construct "Project_var" (middle_end/flambda/flambda_utils.ml[189,8224+4]..[189,8224+15])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[189,8224+16]..[189,8224+17])
                              Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[189,8224+19]..[189,8224+20])
                          Ppat_any
                      ]
                    pattern (middle_end/flambda/flambda_utils.ml[189,8224+23]..[189,8224+39])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[189,8224+23]..[189,8224+24])
                          Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[189,8224+26]..[189,8224+39])
                          Ppat_construct "Project_var" (middle_end/flambda/flambda_utils.ml[189,8224+26]..[189,8224+37])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[189,8224+38]..[189,8224+39])
                              Ppat_any
                      ]
                  expression (middle_end/flambda/flambda_utils.ml[189,8224+43]..[189,8224+48])
                    Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[189,8224+43]..[189,8224+48])
                    None
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[190,8273+4]..[190,8273+66])
                    Ppat_tuple
                    [
                      pattern (middle_end/flambda/flambda_utils.ml[190,8273+4]..[190,8273+34])
                        Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[190,8273+4]..[190,8273+31])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[190,8273+32]..[190,8273+34])
                            Ppat_var "m1" (middle_end/flambda/flambda_utils.ml[190,8273+32]..[190,8273+34])
                      pattern (middle_end/flambda/flambda_utils.ml[190,8273+36]..[190,8273+66])
                        Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[190,8273+36]..[190,8273+63])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[190,8273+64]..[190,8273+66])
                            Ppat_var "m2" (middle_end/flambda/flambda_utils.ml[190,8273+64]..[190,8273+66])
                    ]
                  expression (middle_end/flambda/flambda_utils.ml[191,8343+4]..[191,8343+42])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[191,8343+4]..[191,8343+36])
                      Pexp_ident "same_move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[191,8343+4]..[191,8343+36])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[191,8343+37]..[191,8343+39])
                          Pexp_ident "m1" (middle_end/flambda/flambda_utils.ml[191,8343+37]..[191,8343+39])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[191,8343+40]..[191,8343+42])
                          Pexp_ident "m2" (middle_end/flambda/flambda_utils.ml[191,8343+40]..[191,8343+42])
                    ]
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[192,8386+4]..[192,8386+71])
                    Ppat_or
                    pattern (middle_end/flambda/flambda_utils.ml[192,8386+4]..[192,8386+36])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[192,8386+4]..[192,8386+33])
                          Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[192,8386+4]..[192,8386+31])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[192,8386+32]..[192,8386+33])
                              Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[192,8386+35]..[192,8386+36])
                          Ppat_any
                      ]
                    pattern (middle_end/flambda/flambda_utils.ml[192,8386+39]..[192,8386+71])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[192,8386+39]..[192,8386+40])
                          Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[192,8386+42]..[192,8386+71])
                          Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[192,8386+42]..[192,8386+69])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[192,8386+70]..[192,8386+71])
                              Ppat_any
                      ]
                  expression (middle_end/flambda/flambda_utils.ml[193,8461+4]..[193,8461+9])
                    Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[193,8461+4]..[193,8461+9])
                    None
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[194,8471+4]..[194,8471+40])
                    Ppat_tuple
                    [
                      pattern (middle_end/flambda/flambda_utils.ml[194,8471+4]..[194,8471+21])
                        Ppat_construct "Prim" (middle_end/flambda/flambda_utils.ml[194,8471+4]..[194,8471+8])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[194,8471+9]..[194,8471+21])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[194,8471+10]..[194,8471+12])
                                Ppat_var "p1" (middle_end/flambda/flambda_utils.ml[194,8471+10]..[194,8471+12])
                              pattern (middle_end/flambda/flambda_utils.ml[194,8471+14]..[194,8471+17])
                                Ppat_var "al1" (middle_end/flambda/flambda_utils.ml[194,8471+14]..[194,8471+17])
                              pattern (middle_end/flambda/flambda_utils.ml[194,8471+19]..[194,8471+20])
                                Ppat_any
                            ]
                      pattern (middle_end/flambda/flambda_utils.ml[194,8471+23]..[194,8471+40])
                        Ppat_construct "Prim" (middle_end/flambda/flambda_utils.ml[194,8471+23]..[194,8471+27])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[194,8471+28]..[194,8471+40])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[194,8471+29]..[194,8471+31])
                                Ppat_var "p2" (middle_end/flambda/flambda_utils.ml[194,8471+29]..[194,8471+31])
                              pattern (middle_end/flambda/flambda_utils.ml[194,8471+33]..[194,8471+36])
                                Ppat_var "al2" (middle_end/flambda/flambda_utils.ml[194,8471+33]..[194,8471+36])
                              pattern (middle_end/flambda/flambda_utils.ml[194,8471+38]..[194,8471+39])
                                Ppat_any
                            ]
                    ]
                  expression (middle_end/flambda/flambda_utils.ml[195,8515+4]..[196,8550+54])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[196,8550+6]..[196,8550+8])
                      Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[196,8550+6]..[196,8550+8])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[195,8515+4]..[195,8515+34])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[195,8515+4]..[195,8515+28])
                            Pexp_ident "Clambda_primitives.equal" (middle_end/flambda/flambda_utils.ml[195,8515+4]..[195,8515+28])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[195,8515+29]..[195,8515+31])
                                Pexp_ident "p1" (middle_end/flambda/flambda_utils.ml[195,8515+29]..[195,8515+31])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[195,8515+32]..[195,8515+34])
                                Pexp_ident "p2" (middle_end/flambda/flambda_utils.ml[195,8515+32]..[195,8515+34])
                          ]
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[196,8550+9]..[196,8550+54])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[196,8550+9]..[196,8550+31])
                            Pexp_ident "Misc.Stdlib.List.equal" (middle_end/flambda/flambda_utils.ml[196,8550+9]..[196,8550+31])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[196,8550+32]..[196,8550+46])
                                Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[196,8550+32]..[196,8550+46])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[196,8550+47]..[196,8550+50])
                                Pexp_ident "al1" (middle_end/flambda/flambda_utils.ml[196,8550+47]..[196,8550+50])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[196,8550+51]..[196,8550+54])
                                Pexp_ident "al2" (middle_end/flambda/flambda_utils.ml[196,8550+51]..[196,8550+54])
                          ]
                    ]
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[197,8605+4]..[197,8605+25])
                    Ppat_or
                    pattern (middle_end/flambda/flambda_utils.ml[197,8605+4]..[197,8605+13])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[197,8605+4]..[197,8605+10])
                          Ppat_construct "Prim" (middle_end/flambda/flambda_utils.ml[197,8605+4]..[197,8605+8])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[197,8605+9]..[197,8605+10])
                              Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[197,8605+12]..[197,8605+13])
                          Ppat_any
                      ]
                    pattern (middle_end/flambda/flambda_utils.ml[197,8605+16]..[197,8605+25])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[197,8605+16]..[197,8605+17])
                          Ppat_any
                        pattern (middle_end/flambda/flambda_utils.ml[197,8605+19]..[197,8605+25])
                          Ppat_construct "Prim" (middle_end/flambda/flambda_utils.ml[197,8605+19]..[197,8605+23])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[197,8605+24]..[197,8605+25])
                              Ppat_any
                      ]
                  expression (middle_end/flambda/flambda_utils.ml[197,8605+29]..[197,8605+34])
                    Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[197,8605+29]..[197,8605+34])
                    None
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[198,8640+4]..[198,8640+20])
                    Ppat_tuple
                    [
                      pattern (middle_end/flambda/flambda_utils.ml[198,8640+4]..[198,8640+11])
                        Ppat_construct "Expr" (middle_end/flambda/flambda_utils.ml[198,8640+4]..[198,8640+8])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[198,8640+9]..[198,8640+11])
                            Ppat_var "e1" (middle_end/flambda/flambda_utils.ml[198,8640+9]..[198,8640+11])
                      pattern (middle_end/flambda/flambda_utils.ml[198,8640+13]..[198,8640+20])
                        Ppat_construct "Expr" (middle_end/flambda/flambda_utils.ml[198,8640+13]..[198,8640+17])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[198,8640+18]..[198,8640+20])
                            Ppat_var "e2" (middle_end/flambda/flambda_utils.ml[198,8640+18]..[198,8640+20])
                    ]
                  expression (middle_end/flambda/flambda_utils.ml[198,8640+24]..[198,8640+34])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[198,8640+24]..[198,8640+28])
                      Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[198,8640+24]..[198,8640+28])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[198,8640+29]..[198,8640+31])
                          Pexp_ident "e1" (middle_end/flambda/flambda_utils.ml[198,8640+29]..[198,8640+31])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[198,8640+32]..[198,8640+34])
                          Pexp_ident "e2" (middle_end/flambda/flambda_utils.ml[198,8640+32]..[198,8640+34])
                    ]
              ]
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[200,8676+4]..[200,8676+15])
          Ppat_var "sameclosure" (middle_end/flambda/flambda_utils.ml[200,8676+4]..[200,8676+15])
        expression (middle_end/flambda/flambda_utils.ml[200,8676+16]..[203,8833+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[200,8676+16]..[200,8676+51])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[200,8676+17]..[200,8676+19])
              Ppat_var "c1" (middle_end/flambda/flambda_utils.ml[200,8676+17]..[200,8676+19])
            core_type (middle_end/flambda/flambda_utils.ml[200,8676+22]..[200,8676+50])
              Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/flambda_utils.ml[200,8676+22]..[200,8676+50])
              []
          expression (middle_end/flambda/flambda_utils.ml[201,8728+6]..[203,8833+27]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[201,8728+6]..[201,8728+41])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_utils.ml[201,8728+7]..[201,8728+9])
                Ppat_var "c2" (middle_end/flambda/flambda_utils.ml[201,8728+7]..[201,8728+9])
              core_type (middle_end/flambda/flambda_utils.ml[201,8728+12]..[201,8728+40])
                Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/flambda_utils.ml[201,8728+12]..[201,8728+40])
                []
            expression (middle_end/flambda/flambda_utils.ml[202,8772+2]..[203,8833+27])
              Pexp_apply
              expression (middle_end/flambda/flambda_utils.ml[203,8833+4]..[203,8833+6])
                Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[203,8833+4]..[203,8833+6])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[202,8772+2]..[202,8772+60])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[202,8772+2]..[202,8772+24])
                      Pexp_ident "Misc.Stdlib.List.equal" (middle_end/flambda/flambda_utils.ml[202,8772+2]..[202,8772+24])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[202,8772+25]..[202,8772+40])
                          Pexp_ident "Parameter.equal" (middle_end/flambda/flambda_utils.ml[202,8772+25]..[202,8772+40])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[202,8772+41]..[202,8772+50])
                          Pexp_field
                          expression (middle_end/flambda/flambda_utils.ml[202,8772+41]..[202,8772+43])
                            Pexp_ident "c1" (middle_end/flambda/flambda_utils.ml[202,8772+41]..[202,8772+43])
                          "params" (middle_end/flambda/flambda_utils.ml[202,8772+44]..[202,8772+50])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[202,8772+51]..[202,8772+60])
                          Pexp_field
                          expression (middle_end/flambda/flambda_utils.ml[202,8772+51]..[202,8772+53])
                            Pexp_ident "c2" (middle_end/flambda/flambda_utils.ml[202,8772+51]..[202,8772+53])
                          "params" (middle_end/flambda/flambda_utils.ml[202,8772+54]..[202,8772+60])
                    ]
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[203,8833+7]..[203,8833+27])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[203,8833+7]..[203,8833+11])
                      Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[203,8833+7]..[203,8833+11])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[203,8833+12]..[203,8833+19])
                          Pexp_field
                          expression (middle_end/flambda/flambda_utils.ml[203,8833+12]..[203,8833+14])
                            Pexp_ident "c1" (middle_end/flambda/flambda_utils.ml[203,8833+12]..[203,8833+14])
                          "body" (middle_end/flambda/flambda_utils.ml[203,8833+15]..[203,8833+19])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[203,8833+20]..[203,8833+27])
                          Pexp_field
                          expression (middle_end/flambda/flambda_utils.ml[203,8833+20]..[203,8833+22])
                            Pexp_ident "c2" (middle_end/flambda/flambda_utils.ml[203,8833+20]..[203,8833+22])
                          "body" (middle_end/flambda/flambda_utils.ml[203,8833+23]..[203,8833+27])
                    ]
              ]
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[205,8862+4]..[205,8862+24])
          Ppat_var "same_set_of_closures" (middle_end/flambda/flambda_utils.ml[205,8862+4]..[205,8862+24])
        expression (middle_end/flambda/flambda_utils.ml[205,8862+25]..[211,9200+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[205,8862+25]..[205,8862+55])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[205,8862+26]..[205,8862+28])
              Ppat_var "c1" (middle_end/flambda/flambda_utils.ml[205,8862+26]..[205,8862+28])
            core_type (middle_end/flambda/flambda_utils.ml[205,8862+31]..[205,8862+54])
              Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/flambda_utils.ml[205,8862+31]..[205,8862+54])
              []
          expression (middle_end/flambda/flambda_utils.ml[206,8918+6]..[211,9200+27]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[206,8918+6]..[206,8918+36])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_utils.ml[206,8918+7]..[206,8918+9])
                Ppat_var "c2" (middle_end/flambda/flambda_utils.ml[206,8918+7]..[206,8918+9])
              core_type (middle_end/flambda/flambda_utils.ml[206,8918+12]..[206,8918+35])
                Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/flambda_utils.ml[206,8918+12]..[206,8918+35])
                []
            expression (middle_end/flambda/flambda_utils.ml[207,8957+2]..[211,9200+27])
              Pexp_apply
              expression (middle_end/flambda/flambda_utils.ml[208,9036+4]..[208,9036+6])
                Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[208,9036+4]..[208,9036+6])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[207,8957+2]..[207,8957+78])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[207,8957+2]..[207,8957+20])
                      Pexp_ident "Variable.Map.equal" (middle_end/flambda/flambda_utils.ml[207,8957+2]..[207,8957+20])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[207,8957+21]..[207,8957+32])
                          Pexp_ident "sameclosure" (middle_end/flambda/flambda_utils.ml[207,8957+21]..[207,8957+32])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[207,8957+33]..[207,8957+55])
                          Pexp_field
                          expression (middle_end/flambda/flambda_utils.ml[207,8957+33]..[207,8957+50])
                            Pexp_field
                            expression (middle_end/flambda/flambda_utils.ml[207,8957+33]..[207,8957+35])
                              Pexp_ident "c1" (middle_end/flambda/flambda_utils.ml[207,8957+33]..[207,8957+35])
                            "function_decls" (middle_end/flambda/flambda_utils.ml[207,8957+36]..[207,8957+50])
                          "funs" (middle_end/flambda/flambda_utils.ml[207,8957+51]..[207,8957+55])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[207,8957+56]..[207,8957+78])
                          Pexp_field
                          expression (middle_end/flambda/flambda_utils.ml[207,8957+56]..[207,8957+73])
                            Pexp_field
                            expression (middle_end/flambda/flambda_utils.ml[207,8957+56]..[207,8957+58])
                              Pexp_ident "c2" (middle_end/flambda/flambda_utils.ml[207,8957+56]..[207,8957+58])
                            "function_decls" (middle_end/flambda/flambda_utils.ml[207,8957+59]..[207,8957+73])
                          "funs" (middle_end/flambda/flambda_utils.ml[207,8957+74]..[207,8957+78])
                    ]
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[208,9036+7]..[211,9200+27])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[210,9125+4]..[210,9125+6])
                      Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[210,9125+4]..[210,9125+6])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[208,9036+7]..[209,9091+33])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[208,9036+7]..[208,9036+25])
                            Pexp_ident "Variable.Map.equal" (middle_end/flambda/flambda_utils.ml[208,9036+7]..[208,9036+25])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[208,9036+26]..[208,9036+54])
                                Pexp_ident "Flambda.equal_specialised_to" (middle_end/flambda/flambda_utils.ml[208,9036+26]..[208,9036+54])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[209,9091+8]..[209,9091+20])
                                Pexp_field
                                expression (middle_end/flambda/flambda_utils.ml[209,9091+8]..[209,9091+10])
                                  Pexp_ident "c1" (middle_end/flambda/flambda_utils.ml[209,9091+8]..[209,9091+10])
                                "free_vars" (middle_end/flambda/flambda_utils.ml[209,9091+11]..[209,9091+20])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[209,9091+21]..[209,9091+33])
                                Pexp_field
                                expression (middle_end/flambda/flambda_utils.ml[209,9091+21]..[209,9091+23])
                                  Pexp_ident "c2" (middle_end/flambda/flambda_utils.ml[209,9091+21]..[209,9091+23])
                                "free_vars" (middle_end/flambda/flambda_utils.ml[209,9091+24]..[209,9091+33])
                          ]
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[210,9125+7]..[211,9200+27])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[210,9125+7]..[210,9125+25])
                            Pexp_ident "Variable.Map.equal" (middle_end/flambda/flambda_utils.ml[210,9125+7]..[210,9125+25])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[210,9125+26]..[210,9125+54])
                                Pexp_ident "Flambda.equal_specialised_to" (middle_end/flambda/flambda_utils.ml[210,9125+26]..[210,9125+54])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[210,9125+55]..[210,9125+74])
                                Pexp_field
                                expression (middle_end/flambda/flambda_utils.ml[210,9125+55]..[210,9125+57])
                                  Pexp_ident "c1" (middle_end/flambda/flambda_utils.ml[210,9125+55]..[210,9125+57])
                                "specialised_args" (middle_end/flambda/flambda_utils.ml[210,9125+58]..[210,9125+74])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[211,9200+8]..[211,9200+27])
                                Pexp_field
                                expression (middle_end/flambda/flambda_utils.ml[211,9200+8]..[211,9200+10])
                                  Pexp_ident "c2" (middle_end/flambda/flambda_utils.ml[211,9200+8]..[211,9200+10])
                                "specialised_args" (middle_end/flambda/flambda_utils.ml[211,9200+11]..[211,9200+27])
                          ]
                    ]
              ]
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[213,9229+4]..[213,9229+24])
          Ppat_var "same_project_closure" (middle_end/flambda/flambda_utils.ml[213,9229+4]..[213,9229+24])
        expression (middle_end/flambda/flambda_utils.ml[213,9229+25]..[216,9379+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[213,9229+25]..[213,9229+55])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[213,9229+26]..[213,9229+28])
              Ppat_var "s1" (middle_end/flambda/flambda_utils.ml[213,9229+26]..[213,9229+28])
            core_type (middle_end/flambda/flambda_utils.ml[213,9229+31]..[213,9229+54])
              Ptyp_constr "Flambda.project_closure" (middle_end/flambda/flambda_utils.ml[213,9229+31]..[213,9229+54])
              []
          expression (middle_end/flambda/flambda_utils.ml[214,9285+6]..[216,9379+51]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[214,9285+6]..[214,9285+36])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_utils.ml[214,9285+7]..[214,9285+9])
                Ppat_var "s2" (middle_end/flambda/flambda_utils.ml[214,9285+7]..[214,9285+9])
              core_type (middle_end/flambda/flambda_utils.ml[214,9285+12]..[214,9285+35])
                Ptyp_constr "Flambda.project_closure" (middle_end/flambda/flambda_utils.ml[214,9285+12]..[214,9285+35])
                []
            expression (middle_end/flambda/flambda_utils.ml[215,9324+2]..[216,9379+51])
              Pexp_apply
              expression (middle_end/flambda/flambda_utils.ml[216,9379+4]..[216,9379+6])
                Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[216,9379+4]..[216,9379+6])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[215,9324+2]..[215,9324+54])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[215,9324+2]..[215,9324+16])
                      Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[215,9324+2]..[215,9324+16])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[215,9324+17]..[215,9324+35])
                          Pexp_field
                          expression (middle_end/flambda/flambda_utils.ml[215,9324+17]..[215,9324+19])
                            Pexp_ident "s1" (middle_end/flambda/flambda_utils.ml[215,9324+17]..[215,9324+19])
                          "set_of_closures" (middle_end/flambda/flambda_utils.ml[215,9324+20]..[215,9324+35])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[215,9324+36]..[215,9324+54])
                          Pexp_field
                          expression (middle_end/flambda/flambda_utils.ml[215,9324+36]..[215,9324+38])
                            Pexp_ident "s2" (middle_end/flambda/flambda_utils.ml[215,9324+36]..[215,9324+38])
                          "set_of_closures" (middle_end/flambda/flambda_utils.ml[215,9324+39]..[215,9324+54])
                    ]
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[216,9379+7]..[216,9379+51])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[216,9379+7]..[216,9379+23])
                      Pexp_ident "Closure_id.equal" (middle_end/flambda/flambda_utils.ml[216,9379+7]..[216,9379+23])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[216,9379+24]..[216,9379+37])
                          Pexp_field
                          expression (middle_end/flambda/flambda_utils.ml[216,9379+24]..[216,9379+26])
                            Pexp_ident "s1" (middle_end/flambda/flambda_utils.ml[216,9379+24]..[216,9379+26])
                          "closure_id" (middle_end/flambda/flambda_utils.ml[216,9379+27]..[216,9379+37])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[216,9379+38]..[216,9379+51])
                          Pexp_field
                          expression (middle_end/flambda/flambda_utils.ml[216,9379+38]..[216,9379+40])
                            Pexp_ident "s2" (middle_end/flambda/flambda_utils.ml[216,9379+38]..[216,9379+40])
                          "closure_id" (middle_end/flambda/flambda_utils.ml[216,9379+41]..[216,9379+51])
                    ]
              ]
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[218,9432+4]..[218,9432+36])
          Ppat_var "same_move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[218,9432+4]..[218,9432+36])
        expression (middle_end/flambda/flambda_utils.ml[218,9432+37]..[222,9654+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[218,9432+37]..[218,9432+79])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[218,9432+38]..[218,9432+40])
              Ppat_var "m1" (middle_end/flambda/flambda_utils.ml[218,9432+38]..[218,9432+40])
            core_type (middle_end/flambda/flambda_utils.ml[218,9432+43]..[218,9432+78])
              Ptyp_constr "Flambda.move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[218,9432+43]..[218,9432+78])
              []
          expression (middle_end/flambda/flambda_utils.ml[219,9512+6]..[222,9654+45]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[219,9512+6]..[219,9512+48])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_utils.ml[219,9512+7]..[219,9512+9])
                Ppat_var "m2" (middle_end/flambda/flambda_utils.ml[219,9512+7]..[219,9512+9])
              core_type (middle_end/flambda/flambda_utils.ml[219,9512+12]..[219,9512+47])
                Ptyp_constr "Flambda.move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[219,9512+12]..[219,9512+47])
                []
            expression (middle_end/flambda/flambda_utils.ml[220,9563+2]..[222,9654+45])
              Pexp_apply
              expression (middle_end/flambda/flambda_utils.ml[221,9602+4]..[221,9602+6])
                Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[221,9602+4]..[221,9602+6])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[220,9563+2]..[220,9563+38])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[220,9563+2]..[220,9563+16])
                      Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[220,9563+2]..[220,9563+16])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[220,9563+17]..[220,9563+27])
                          Pexp_field
                          expression (middle_end/flambda/flambda_utils.ml[220,9563+17]..[220,9563+19])
                            Pexp_ident "m1" (middle_end/flambda/flambda_utils.ml[220,9563+17]..[220,9563+19])
                          "closure" (middle_end/flambda/flambda_utils.ml[220,9563+20]..[220,9563+27])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[220,9563+28]..[220,9563+38])
                          Pexp_field
                          expression (middle_end/flambda/flambda_utils.ml[220,9563+28]..[220,9563+30])
                            Pexp_ident "m2" (middle_end/flambda/flambda_utils.ml[220,9563+28]..[220,9563+30])
                          "closure" (middle_end/flambda/flambda_utils.ml[220,9563+31]..[220,9563+38])
                    ]
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[221,9602+7]..[222,9654+45])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[222,9654+4]..[222,9654+6])
                      Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[222,9654+4]..[222,9654+6])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[221,9602+7]..[221,9602+51])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[221,9602+7]..[221,9602+23])
                            Pexp_ident "Closure_id.equal" (middle_end/flambda/flambda_utils.ml[221,9602+7]..[221,9602+23])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[221,9602+24]..[221,9602+37])
                                Pexp_field
                                expression (middle_end/flambda/flambda_utils.ml[221,9602+24]..[221,9602+26])
                                  Pexp_ident "m1" (middle_end/flambda/flambda_utils.ml[221,9602+24]..[221,9602+26])
                                "start_from" (middle_end/flambda/flambda_utils.ml[221,9602+27]..[221,9602+37])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[221,9602+38]..[221,9602+51])
                                Pexp_field
                                expression (middle_end/flambda/flambda_utils.ml[221,9602+38]..[221,9602+40])
                                  Pexp_ident "m2" (middle_end/flambda/flambda_utils.ml[221,9602+38]..[221,9602+40])
                                "start_from" (middle_end/flambda/flambda_utils.ml[221,9602+41]..[221,9602+51])
                          ]
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[222,9654+7]..[222,9654+45])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[222,9654+7]..[222,9654+23])
                            Pexp_ident "Closure_id.equal" (middle_end/flambda/flambda_utils.ml[222,9654+7]..[222,9654+23])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[222,9654+24]..[222,9654+34])
                                Pexp_field
                                expression (middle_end/flambda/flambda_utils.ml[222,9654+24]..[222,9654+26])
                                  Pexp_ident "m1" (middle_end/flambda/flambda_utils.ml[222,9654+24]..[222,9654+26])
                                "move_to" (middle_end/flambda/flambda_utils.ml[222,9654+27]..[222,9654+34])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[222,9654+35]..[222,9654+45])
                                Pexp_field
                                expression (middle_end/flambda/flambda_utils.ml[222,9654+35]..[222,9654+37])
                                  Pexp_ident "m2" (middle_end/flambda/flambda_utils.ml[222,9654+35]..[222,9654+37])
                                "move_to" (middle_end/flambda/flambda_utils.ml[222,9654+38]..[222,9654+45])
                          ]
                    ]
              ]
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[224,9701+4]..[224,9701+15])
          Ppat_var "samebinding" (middle_end/flambda/flambda_utils.ml[224,9701+4]..[224,9701+15])
        expression (middle_end/flambda/flambda_utils.ml[224,9701+16]..[225,9737+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[224,9701+16]..[224,9701+24])
            Ppat_tuple
            [
              pattern (middle_end/flambda/flambda_utils.ml[224,9701+17]..[224,9701+19])
                Ppat_var "v1" (middle_end/flambda/flambda_utils.ml[224,9701+17]..[224,9701+19])
              pattern (middle_end/flambda/flambda_utils.ml[224,9701+21]..[224,9701+23])
                Ppat_var "n1" (middle_end/flambda/flambda_utils.ml[224,9701+21]..[224,9701+23])
            ]
          expression (middle_end/flambda/flambda_utils.ml[224,9701+25]..[225,9737+42]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[224,9701+25]..[224,9701+33])
              Ppat_tuple
              [
                pattern (middle_end/flambda/flambda_utils.ml[224,9701+26]..[224,9701+28])
                  Ppat_var "v2" (middle_end/flambda/flambda_utils.ml[224,9701+26]..[224,9701+28])
                pattern (middle_end/flambda/flambda_utils.ml[224,9701+30]..[224,9701+32])
                  Ppat_var "n2" (middle_end/flambda/flambda_utils.ml[224,9701+30]..[224,9701+32])
              ]
            expression (middle_end/flambda/flambda_utils.ml[225,9737+2]..[225,9737+42])
              Pexp_apply
              expression (middle_end/flambda/flambda_utils.ml[225,9737+23]..[225,9737+25])
                Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[225,9737+23]..[225,9737+25])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[225,9737+2]..[225,9737+22])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[225,9737+2]..[225,9737+16])
                      Pexp_ident "Variable.equal" (middle_end/flambda/flambda_utils.ml[225,9737+2]..[225,9737+16])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[225,9737+17]..[225,9737+19])
                          Pexp_ident "v1" (middle_end/flambda/flambda_utils.ml[225,9737+17]..[225,9737+19])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[225,9737+20]..[225,9737+22])
                          Pexp_ident "v2" (middle_end/flambda/flambda_utils.ml[225,9737+20]..[225,9737+22])
                    ]
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[225,9737+26]..[225,9737+42])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[225,9737+26]..[225,9737+36])
                      Pexp_ident "same_named" (middle_end/flambda/flambda_utils.ml[225,9737+26]..[225,9737+36])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[225,9737+37]..[225,9737+39])
                          Pexp_ident "n1" (middle_end/flambda/flambda_utils.ml[225,9737+37]..[225,9737+39])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[225,9737+40]..[225,9737+42])
                          Pexp_ident "n2" (middle_end/flambda/flambda_utils.ml[225,9737+40]..[225,9737+42])
                    ]
              ]
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[227,9781+4]..[227,9781+14])
          Ppat_var "sameswitch" (middle_end/flambda/flambda_utils.ml[227,9781+4]..[227,9781+14])
        expression (middle_end/flambda/flambda_utils.ml[227,9781+15]..[233,10135+54]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[227,9781+15]..[227,9781+37])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[227,9781+16]..[227,9781+19])
              Ppat_var "fs1" (middle_end/flambda/flambda_utils.ml[227,9781+16]..[227,9781+19])
            core_type (middle_end/flambda/flambda_utils.ml[227,9781+22]..[227,9781+36])
              Ptyp_constr "Flambda.switch" (middle_end/flambda/flambda_utils.ml[227,9781+22]..[227,9781+36])
              []
          expression (middle_end/flambda/flambda_utils.ml[227,9781+38]..[233,10135+54]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[227,9781+38]..[227,9781+60])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_utils.ml[227,9781+39]..[227,9781+42])
                Ppat_var "fs2" (middle_end/flambda/flambda_utils.ml[227,9781+39]..[227,9781+42])
              core_type (middle_end/flambda/flambda_utils.ml[227,9781+45]..[227,9781+59])
                Ptyp_constr "Flambda.switch" (middle_end/flambda/flambda_utils.ml[227,9781+45]..[227,9781+59])
                []
            expression (middle_end/flambda/flambda_utils.ml[228,9844+2]..[233,10135+54])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/flambda_utils.ml[228,9844+6]..[228,9844+14])
                    Ppat_var "samecase" (middle_end/flambda/flambda_utils.ml[228,9844+6]..[228,9844+14])
                  expression (middle_end/flambda/flambda_utils.ml[228,9844+15]..[228,9844+56]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_utils.ml[228,9844+15]..[228,9844+23])
                      Ppat_tuple
                      [
                        pattern (middle_end/flambda/flambda_utils.ml[228,9844+16]..[228,9844+18])
                          Ppat_var "n1" (middle_end/flambda/flambda_utils.ml[228,9844+16]..[228,9844+18])
                        pattern (middle_end/flambda/flambda_utils.ml[228,9844+20]..[228,9844+22])
                          Ppat_var "a1" (middle_end/flambda/flambda_utils.ml[228,9844+20]..[228,9844+22])
                      ]
                    expression (middle_end/flambda/flambda_utils.ml[228,9844+24]..[228,9844+56]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/flambda_utils.ml[228,9844+24]..[228,9844+32])
                        Ppat_tuple
                        [
                          pattern (middle_end/flambda/flambda_utils.ml[228,9844+25]..[228,9844+27])
                            Ppat_var "n2" (middle_end/flambda/flambda_utils.ml[228,9844+25]..[228,9844+27])
                          pattern (middle_end/flambda/flambda_utils.ml[228,9844+29]..[228,9844+31])
                            Ppat_var "a2" (middle_end/flambda/flambda_utils.ml[228,9844+29]..[228,9844+31])
                        ]
                      expression (middle_end/flambda/flambda_utils.ml[228,9844+35]..[228,9844+56])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_utils.ml[228,9844+43]..[228,9844+45])
                          Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[228,9844+43]..[228,9844+45])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[228,9844+35]..[228,9844+42])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_utils.ml[228,9844+38]..[228,9844+39])
                                Pexp_ident "=" (middle_end/flambda/flambda_utils.ml[228,9844+38]..[228,9844+39])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_utils.ml[228,9844+35]..[228,9844+37])
                                    Pexp_ident "n1" (middle_end/flambda/flambda_utils.ml[228,9844+35]..[228,9844+37])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_utils.ml[228,9844+40]..[228,9844+42])
                                    Pexp_ident "n2" (middle_end/flambda/flambda_utils.ml[228,9844+40]..[228,9844+42])
                              ]
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[228,9844+46]..[228,9844+56])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_utils.ml[228,9844+46]..[228,9844+50])
                                Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[228,9844+46]..[228,9844+50])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_utils.ml[228,9844+51]..[228,9844+53])
                                    Pexp_ident "a1" (middle_end/flambda/flambda_utils.ml[228,9844+51]..[228,9844+53])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_utils.ml[228,9844+54]..[228,9844+56])
                                    Pexp_ident "a2" (middle_end/flambda/flambda_utils.ml[228,9844+54]..[228,9844+56])
                              ]
                        ]
              ]
              expression (middle_end/flambda/flambda_utils.ml[229,9904+2]..[233,10135+54])
                Pexp_apply
                expression (middle_end/flambda/flambda_utils.ml[230,9956+4]..[230,9956+6])
                  Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[230,9956+4]..[230,9956+6])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_utils.ml[229,9904+2]..[229,9904+51])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_utils.ml[229,9904+2]..[229,9904+23])
                        Pexp_ident "Numbers.Int.Set.equal" (middle_end/flambda/flambda_utils.ml[229,9904+2]..[229,9904+23])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[229,9904+24]..[229,9904+37])
                            Pexp_field
                            expression (middle_end/flambda/flambda_utils.ml[229,9904+24]..[229,9904+27])
                              Pexp_ident "fs1" (middle_end/flambda/flambda_utils.ml[229,9904+24]..[229,9904+27])
                            "numconsts" (middle_end/flambda/flambda_utils.ml[229,9904+28]..[229,9904+37])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[229,9904+38]..[229,9904+51])
                            Pexp_field
                            expression (middle_end/flambda/flambda_utils.ml[229,9904+38]..[229,9904+41])
                              Pexp_ident "fs2" (middle_end/flambda/flambda_utils.ml[229,9904+38]..[229,9904+41])
                            "numconsts" (middle_end/flambda/flambda_utils.ml[229,9904+42]..[229,9904+51])
                      ]
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_utils.ml[230,9956+7]..[233,10135+54])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_utils.ml[231,10013+4]..[231,10013+6])
                        Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[231,10013+4]..[231,10013+6])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[230,9956+7]..[230,9956+56])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_utils.ml[230,9956+7]..[230,9956+28])
                              Pexp_ident "Numbers.Int.Set.equal" (middle_end/flambda/flambda_utils.ml[230,9956+7]..[230,9956+28])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[230,9956+29]..[230,9956+42])
                                  Pexp_field
                                  expression (middle_end/flambda/flambda_utils.ml[230,9956+29]..[230,9956+32])
                                    Pexp_ident "fs1" (middle_end/flambda/flambda_utils.ml[230,9956+29]..[230,9956+32])
                                  "numblocks" (middle_end/flambda/flambda_utils.ml[230,9956+33]..[230,9956+42])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[230,9956+43]..[230,9956+56])
                                  Pexp_field
                                  expression (middle_end/flambda/flambda_utils.ml[230,9956+43]..[230,9956+46])
                                    Pexp_ident "fs2" (middle_end/flambda/flambda_utils.ml[230,9956+43]..[230,9956+46])
                                  "numblocks" (middle_end/flambda/flambda_utils.ml[230,9956+47]..[230,9956+56])
                            ]
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[231,10013+7]..[233,10135+54])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_utils.ml[232,10074+4]..[232,10074+6])
                              Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[232,10074+4]..[232,10074+6])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[231,10013+7]..[231,10013+60])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_utils.ml[231,10013+7]..[231,10013+29])
                                    Pexp_ident "Misc.Stdlib.List.equal" (middle_end/flambda/flambda_utils.ml[231,10013+7]..[231,10013+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[231,10013+30]..[231,10013+38])
                                        Pexp_ident "samecase" (middle_end/flambda/flambda_utils.ml[231,10013+30]..[231,10013+38])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[231,10013+39]..[231,10013+49])
                                        Pexp_field
                                        expression (middle_end/flambda/flambda_utils.ml[231,10013+39]..[231,10013+42])
                                          Pexp_ident "fs1" (middle_end/flambda/flambda_utils.ml[231,10013+39]..[231,10013+42])
                                        "consts" (middle_end/flambda/flambda_utils.ml[231,10013+43]..[231,10013+49])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[231,10013+50]..[231,10013+60])
                                        Pexp_field
                                        expression (middle_end/flambda/flambda_utils.ml[231,10013+50]..[231,10013+53])
                                          Pexp_ident "fs2" (middle_end/flambda/flambda_utils.ml[231,10013+50]..[231,10013+53])
                                        "consts" (middle_end/flambda/flambda_utils.ml[231,10013+54]..[231,10013+60])
                                  ]
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[232,10074+7]..[233,10135+54])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_utils.ml[233,10135+4]..[233,10135+6])
                                    Pexp_ident "&&" (middle_end/flambda/flambda_utils.ml[233,10135+4]..[233,10135+6])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[232,10074+7]..[232,10074+60])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[232,10074+7]..[232,10074+29])
                                          Pexp_ident "Misc.Stdlib.List.equal" (middle_end/flambda/flambda_utils.ml[232,10074+7]..[232,10074+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[232,10074+30]..[232,10074+38])
                                              Pexp_ident "samecase" (middle_end/flambda/flambda_utils.ml[232,10074+30]..[232,10074+38])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[232,10074+39]..[232,10074+49])
                                              Pexp_field
                                              expression (middle_end/flambda/flambda_utils.ml[232,10074+39]..[232,10074+42])
                                                Pexp_ident "fs1" (middle_end/flambda/flambda_utils.ml[232,10074+39]..[232,10074+42])
                                              "blocks" (middle_end/flambda/flambda_utils.ml[232,10074+43]..[232,10074+49])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[232,10074+50]..[232,10074+60])
                                              Pexp_field
                                              expression (middle_end/flambda/flambda_utils.ml[232,10074+50]..[232,10074+53])
                                                Pexp_ident "fs2" (middle_end/flambda/flambda_utils.ml[232,10074+50]..[232,10074+53])
                                              "blocks" (middle_end/flambda/flambda_utils.ml[232,10074+54]..[232,10074+60])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[233,10135+7]..[233,10135+54])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[233,10135+7]..[233,10135+19])
                                          Pexp_ident "Option.equal" (middle_end/flambda/flambda_utils.ml[233,10135+7]..[233,10135+19])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[233,10135+20]..[233,10135+24])
                                              Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[233,10135+20]..[233,10135+24])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[233,10135+25]..[233,10135+39])
                                              Pexp_field
                                              expression (middle_end/flambda/flambda_utils.ml[233,10135+25]..[233,10135+28])
                                                Pexp_ident "fs1" (middle_end/flambda/flambda_utils.ml[233,10135+25]..[233,10135+28])
                                              "failaction" (middle_end/flambda/flambda_utils.ml[233,10135+29]..[233,10135+39])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[233,10135+40]..[233,10135+54])
                                              Pexp_field
                                              expression (middle_end/flambda/flambda_utils.ml[233,10135+40]..[233,10135+43])
                                                Pexp_ident "fs2" (middle_end/flambda/flambda_utils.ml[233,10135+40]..[233,10135+43])
                                              "failaction" (middle_end/flambda/flambda_utils.ml[233,10135+44]..[233,10135+54])
                                        ]
                                  ]
                            ]
                      ]
                ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[235,10191+0]..[235,10191+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[235,10191+4]..[235,10191+17])
          Ppat_var "can_be_merged" (middle_end/flambda/flambda_utils.ml[235,10191+4]..[235,10191+17])
        expression (middle_end/flambda/flambda_utils.ml[235,10191+20]..[235,10191+24])
          Pexp_ident "same" (middle_end/flambda/flambda_utils.ml[235,10191+20]..[235,10191+24])
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[238,10288+0]..[319,13387+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[238,10288+4]..[238,10288+25])
          Ppat_var "toplevel_substitution" (middle_end/flambda/flambda_utils.ml[238,10288+4]..[238,10288+25])
        expression (middle_end/flambda/flambda_utils.ml[238,10288+26]..[319,13387+56]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[238,10288+26]..[238,10288+28])
            Ppat_var "sb" (middle_end/flambda/flambda_utils.ml[238,10288+26]..[238,10288+28])
          expression (middle_end/flambda/flambda_utils.ml[238,10288+29]..[319,13387+56]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[238,10288+29]..[238,10288+33])
              Ppat_var "tree" (middle_end/flambda/flambda_utils.ml[238,10288+29]..[238,10288+33])
            expression (middle_end/flambda/flambda_utils.ml[239,10324+2]..[319,13387+56])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/flambda_utils.ml[239,10324+6]..[239,10324+9])
                    Ppat_var "sb'" (middle_end/flambda/flambda_utils.ml[239,10324+6]..[239,10324+9])
                  expression (middle_end/flambda/flambda_utils.ml[239,10324+12]..[239,10324+14])
                    Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[239,10324+12]..[239,10324+14])
              ]
              expression (middle_end/flambda/flambda_utils.ml[240,10342+2]..[319,13387+56])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (middle_end/flambda/flambda_utils.ml[240,10342+6]..[240,10342+8])
                      Ppat_var "sb" (middle_end/flambda/flambda_utils.ml[240,10342+6]..[240,10342+8])
                    expression (middle_end/flambda/flambda_utils.ml[240,10342+9]..[240,10342+59]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/flambda_utils.ml[240,10342+9]..[240,10342+10])
                        Ppat_var "v" (middle_end/flambda/flambda_utils.ml[240,10342+9]..[240,10342+10])
                      expression (middle_end/flambda/flambda_utils.ml[240,10342+13]..[240,10342+59])
                        Pexp_try
                        expression (middle_end/flambda/flambda_utils.ml[240,10342+17]..[240,10342+39])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[240,10342+17]..[240,10342+34])
                            Pexp_ident "Variable.Map.find" (middle_end/flambda/flambda_utils.ml[240,10342+17]..[240,10342+34])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[240,10342+35]..[240,10342+36])
                                Pexp_ident "v" (middle_end/flambda/flambda_utils.ml[240,10342+35]..[240,10342+36])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[240,10342+37]..[240,10342+39])
                                Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[240,10342+37]..[240,10342+39])
                          ]
                        [
                          <case>
                            pattern (middle_end/flambda/flambda_utils.ml[240,10342+45]..[240,10342+54])
                              Ppat_construct "Not_found" (middle_end/flambda/flambda_utils.ml[240,10342+45]..[240,10342+54])
                              None
                            expression (middle_end/flambda/flambda_utils.ml[240,10342+58]..[240,10342+59])
                              Pexp_ident "v" (middle_end/flambda/flambda_utils.ml[240,10342+58]..[240,10342+59])
                        ]
                ]
                expression (middle_end/flambda/flambda_utils.ml[241,10405+2]..[319,13387+56])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/flambda/flambda_utils.ml[241,10405+6]..[241,10405+9])
                        Ppat_var "aux" (middle_end/flambda/flambda_utils.ml[241,10405+6]..[241,10405+9])
                      expression (middle_end/flambda/flambda_utils.ml[241,10405+10]..[278,11820+52]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/flambda_utils.ml[241,10405+10]..[241,10405+28])
                          Ppat_constraint
                          pattern (middle_end/flambda/flambda_utils.ml[241,10405+11]..[241,10405+15])
                            Ppat_var "flam" (middle_end/flambda/flambda_utils.ml[241,10405+11]..[241,10405+15])
                          core_type (middle_end/flambda/flambda_utils.ml[241,10405+18]..[241,10405+27])
                            Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_utils.ml[241,10405+18]..[241,10405+27])
                            []
                        expression (middle_end/flambda/flambda_utils.ml[241,10405+29]..[278,11820+52])
                          Pexp_constraint
                          expression (middle_end/flambda/flambda_utils.ml[242,10448+4]..[278,11820+52])
                            Pexp_match
                            expression (middle_end/flambda/flambda_utils.ml[242,10448+10]..[242,10448+14])
                              Pexp_ident "flam" (middle_end/flambda/flambda_utils.ml[242,10448+10]..[242,10448+14])
                            [
                              <case>
                                pattern (middle_end/flambda/flambda_utils.ml[243,10468+6]..[243,10468+13])
                                  Ppat_construct "Var" (middle_end/flambda/flambda_utils.ml[243,10468+6]..[243,10468+9])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_utils.ml[243,10468+10]..[243,10468+13])
                                      Ppat_var "var" (middle_end/flambda/flambda_utils.ml[243,10468+10]..[243,10468+13])
                                expression (middle_end/flambda/flambda_utils.ml[244,10485+6]..[245,10511+13])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_utils.ml[244,10485+10]..[244,10485+13])
                                        Ppat_var "var" (middle_end/flambda/flambda_utils.ml[244,10485+10]..[244,10485+13])
                                      expression (middle_end/flambda/flambda_utils.ml[244,10485+16]..[244,10485+22])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[244,10485+16]..[244,10485+18])
                                          Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[244,10485+16]..[244,10485+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[244,10485+19]..[244,10485+22])
                                              Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[244,10485+19]..[244,10485+22])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_utils.ml[245,10511+6]..[245,10511+13])
                                    Pexp_construct "Var" (middle_end/flambda/flambda_utils.ml[245,10511+6]..[245,10511+9])
                                    Some
                                      expression (middle_end/flambda/flambda_utils.ml[245,10511+10]..[245,10511+13])
                                        Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[245,10511+10]..[245,10511+13])
                              <case>
                                pattern (middle_end/flambda/flambda_utils.ml[246,10525+6]..[246,10525+29])
                                  Ppat_construct "Let_mutable" (middle_end/flambda/flambda_utils.ml[246,10525+6]..[246,10525+17])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_utils.ml[246,10525+18]..[246,10525+29])
                                      Ppat_var "mutable_let" (middle_end/flambda/flambda_utils.ml[246,10525+18]..[246,10525+29])
                                expression (middle_end/flambda/flambda_utils.ml[247,10558+6]..[248,10616+52])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_utils.ml[247,10558+10]..[247,10558+23])
                                        Ppat_var "initial_value" (middle_end/flambda/flambda_utils.ml[247,10558+10]..[247,10558+23])
                                      expression (middle_end/flambda/flambda_utils.ml[247,10558+26]..[247,10558+54])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[247,10558+26]..[247,10558+28])
                                          Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[247,10558+26]..[247,10558+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[247,10558+29]..[247,10558+54])
                                              Pexp_field
                                              expression (middle_end/flambda/flambda_utils.ml[247,10558+29]..[247,10558+40])
                                                Pexp_ident "mutable_let" (middle_end/flambda/flambda_utils.ml[247,10558+29]..[247,10558+40])
                                              "initial_value" (middle_end/flambda/flambda_utils.ml[247,10558+41]..[247,10558+54])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_utils.ml[248,10616+6]..[248,10616+52])
                                    Pexp_construct "Let_mutable" (middle_end/flambda/flambda_utils.ml[248,10616+6]..[248,10616+17])
                                    Some
                                      expression (middle_end/flambda/flambda_utils.ml[248,10616+18]..[248,10616+52])
                                        Pexp_record
                                        [
                                          "initial_value" (middle_end/flambda/flambda_utils.ml[248,10616+37]..[248,10616+50]) ghost
                                            expression (middle_end/flambda/flambda_utils.ml[248,10616+37]..[248,10616+50])
                                              Pexp_ident "initial_value" (middle_end/flambda/flambda_utils.ml[248,10616+37]..[248,10616+50])
                                        ]
                                        Some
                                          expression (middle_end/flambda/flambda_utils.ml[248,10616+20]..[248,10616+31])
                                            Pexp_ident "mutable_let" (middle_end/flambda/flambda_utils.ml[248,10616+20]..[248,10616+31])
                              <case>
                                pattern (middle_end/flambda/flambda_utils.ml[249,10669+6]..[249,10669+43])
                                  Ppat_construct "Assign" (middle_end/flambda/flambda_utils.ml[249,10669+6]..[249,10669+12])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_utils.ml[249,10669+13]..[249,10669+43])
                                      Ppat_record Closed
                                      [
                                        "being_assigned" (middle_end/flambda/flambda_utils.ml[249,10669+15]..[249,10669+29]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[249,10669+15]..[249,10669+29])
                                            Ppat_var "being_assigned" (middle_end/flambda/flambda_utils.ml[249,10669+15]..[249,10669+29])
                                        "new_value" (middle_end/flambda/flambda_utils.ml[249,10669+31]..[249,10669+40]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[249,10669+31]..[249,10669+40])
                                            Ppat_var "new_value" (middle_end/flambda/flambda_utils.ml[249,10669+31]..[249,10669+40])
                                      ]
                                expression (middle_end/flambda/flambda_utils.ml[250,10716+6]..[251,10754+43])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_utils.ml[250,10716+10]..[250,10716+19])
                                        Ppat_var "new_value" (middle_end/flambda/flambda_utils.ml[250,10716+10]..[250,10716+19])
                                      expression (middle_end/flambda/flambda_utils.ml[250,10716+22]..[250,10716+34])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[250,10716+22]..[250,10716+24])
                                          Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[250,10716+22]..[250,10716+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[250,10716+25]..[250,10716+34])
                                              Pexp_ident "new_value" (middle_end/flambda/flambda_utils.ml[250,10716+25]..[250,10716+34])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_utils.ml[251,10754+6]..[251,10754+43])
                                    Pexp_construct "Assign" (middle_end/flambda/flambda_utils.ml[251,10754+6]..[251,10754+12])
                                    Some
                                      expression (middle_end/flambda/flambda_utils.ml[251,10754+13]..[251,10754+43])
                                        Pexp_record
                                        [
                                          "being_assigned" (middle_end/flambda/flambda_utils.ml[251,10754+15]..[251,10754+29]) ghost
                                            expression (middle_end/flambda/flambda_utils.ml[251,10754+15]..[251,10754+29])
                                              Pexp_ident "being_assigned" (middle_end/flambda/flambda_utils.ml[251,10754+15]..[251,10754+29])
                                          "new_value" (middle_end/flambda/flambda_utils.ml[251,10754+31]..[251,10754+40]) ghost
                                            expression (middle_end/flambda/flambda_utils.ml[251,10754+31]..[251,10754+40])
                                              Pexp_ident "new_value" (middle_end/flambda/flambda_utils.ml[251,10754+31]..[251,10754+40])
                                        ]
                                        None
                              <case>
                                pattern (middle_end/flambda/flambda_utils.ml[252,10798+6]..[252,10798+58])
                                  Ppat_construct "Apply" (middle_end/flambda/flambda_utils.ml[252,10798+6]..[252,10798+11])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_utils.ml[252,10798+12]..[252,10798+58])
                                      Ppat_record Closed
                                      [
                                        "func" (middle_end/flambda/flambda_utils.ml[252,10798+14]..[252,10798+18]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[252,10798+14]..[252,10798+18])
                                            Ppat_var "func" (middle_end/flambda/flambda_utils.ml[252,10798+14]..[252,10798+18])
                                        "args" (middle_end/flambda/flambda_utils.ml[252,10798+20]..[252,10798+24]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[252,10798+20]..[252,10798+24])
                                            Ppat_var "args" (middle_end/flambda/flambda_utils.ml[252,10798+20]..[252,10798+24])
                                        "kind" (middle_end/flambda/flambda_utils.ml[252,10798+26]..[252,10798+30]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[252,10798+26]..[252,10798+30])
                                            Ppat_var "kind" (middle_end/flambda/flambda_utils.ml[252,10798+26]..[252,10798+30])
                                        "dbg" (middle_end/flambda/flambda_utils.ml[252,10798+32]..[252,10798+35]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[252,10798+32]..[252,10798+35])
                                            Ppat_var "dbg" (middle_end/flambda/flambda_utils.ml[252,10798+32]..[252,10798+35])
                                        "inline" (middle_end/flambda/flambda_utils.ml[252,10798+37]..[252,10798+43]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[252,10798+37]..[252,10798+43])
                                            Ppat_var "inline" (middle_end/flambda/flambda_utils.ml[252,10798+37]..[252,10798+43])
                                        "specialise" (middle_end/flambda/flambda_utils.ml[252,10798+45]..[252,10798+55]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[252,10798+45]..[252,10798+55])
                                            Ppat_var "specialise" (middle_end/flambda/flambda_utils.ml[252,10798+45]..[252,10798+55])
                                      ]
                                expression (middle_end/flambda/flambda_utils.ml[253,10860+6]..[255,10925+58])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_utils.ml[253,10860+10]..[253,10860+14])
                                        Ppat_var "func" (middle_end/flambda/flambda_utils.ml[253,10860+10]..[253,10860+14])
                                      expression (middle_end/flambda/flambda_utils.ml[253,10860+17]..[253,10860+24])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[253,10860+17]..[253,10860+19])
                                          Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[253,10860+17]..[253,10860+19])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[253,10860+20]..[253,10860+24])
                                              Pexp_ident "func" (middle_end/flambda/flambda_utils.ml[253,10860+20]..[253,10860+24])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_utils.ml[254,10888+6]..[255,10925+58])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[254,10888+10]..[254,10888+14])
                                          Ppat_var "args" (middle_end/flambda/flambda_utils.ml[254,10888+10]..[254,10888+14])
                                        expression (middle_end/flambda/flambda_utils.ml[254,10888+17]..[254,10888+33])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[254,10888+17]..[254,10888+25])
                                            Pexp_ident "List.map" (middle_end/flambda/flambda_utils.ml[254,10888+17]..[254,10888+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[254,10888+26]..[254,10888+28])
                                                Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[254,10888+26]..[254,10888+28])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[254,10888+29]..[254,10888+33])
                                                Pexp_ident "args" (middle_end/flambda/flambda_utils.ml[254,10888+29]..[254,10888+33])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[255,10925+6]..[255,10925+58])
                                      Pexp_construct "Apply" (middle_end/flambda/flambda_utils.ml[255,10925+6]..[255,10925+11])
                                      Some
                                        expression (middle_end/flambda/flambda_utils.ml[255,10925+12]..[255,10925+58])
                                          Pexp_record
                                          [
                                            "func" (middle_end/flambda/flambda_utils.ml[255,10925+14]..[255,10925+18]) ghost
                                              expression (middle_end/flambda/flambda_utils.ml[255,10925+14]..[255,10925+18])
                                                Pexp_ident "func" (middle_end/flambda/flambda_utils.ml[255,10925+14]..[255,10925+18])
                                            "args" (middle_end/flambda/flambda_utils.ml[255,10925+20]..[255,10925+24]) ghost
                                              expression (middle_end/flambda/flambda_utils.ml[255,10925+20]..[255,10925+24])
                                                Pexp_ident "args" (middle_end/flambda/flambda_utils.ml[255,10925+20]..[255,10925+24])
                                            "kind" (middle_end/flambda/flambda_utils.ml[255,10925+26]..[255,10925+30]) ghost
                                              expression (middle_end/flambda/flambda_utils.ml[255,10925+26]..[255,10925+30])
                                                Pexp_ident "kind" (middle_end/flambda/flambda_utils.ml[255,10925+26]..[255,10925+30])
                                            "dbg" (middle_end/flambda/flambda_utils.ml[255,10925+32]..[255,10925+35]) ghost
                                              expression (middle_end/flambda/flambda_utils.ml[255,10925+32]..[255,10925+35])
                                                Pexp_ident "dbg" (middle_end/flambda/flambda_utils.ml[255,10925+32]..[255,10925+35])
                                            "inline" (middle_end/flambda/flambda_utils.ml[255,10925+37]..[255,10925+43]) ghost
                                              expression (middle_end/flambda/flambda_utils.ml[255,10925+37]..[255,10925+43])
                                                Pexp_ident "inline" (middle_end/flambda/flambda_utils.ml[255,10925+37]..[255,10925+43])
                                            "specialise" (middle_end/flambda/flambda_utils.ml[255,10925+45]..[255,10925+55]) ghost
                                              expression (middle_end/flambda/flambda_utils.ml[255,10925+45]..[255,10925+55])
                                                Pexp_ident "specialise" (middle_end/flambda/flambda_utils.ml[255,10925+45]..[255,10925+55])
                                          ]
                                          None
                              <case>
                                pattern (middle_end/flambda/flambda_utils.ml[256,10984+6]..[256,10984+33])
                                  Ppat_construct "If_then_else" (middle_end/flambda/flambda_utils.ml[256,10984+6]..[256,10984+18])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_utils.ml[256,10984+19]..[256,10984+33])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/flambda/flambda_utils.ml[256,10984+20]..[256,10984+24])
                                          Ppat_var "cond" (middle_end/flambda/flambda_utils.ml[256,10984+20]..[256,10984+24])
                                        pattern (middle_end/flambda/flambda_utils.ml[256,10984+26]..[256,10984+28])
                                          Ppat_var "e1" (middle_end/flambda/flambda_utils.ml[256,10984+26]..[256,10984+28])
                                        pattern (middle_end/flambda/flambda_utils.ml[256,10984+30]..[256,10984+32])
                                          Ppat_var "e2" (middle_end/flambda/flambda_utils.ml[256,10984+30]..[256,10984+32])
                                      ]
                                expression (middle_end/flambda/flambda_utils.ml[257,11021+6]..[258,11049+33])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_utils.ml[257,11021+10]..[257,11021+14])
                                        Ppat_var "cond" (middle_end/flambda/flambda_utils.ml[257,11021+10]..[257,11021+14])
                                      expression (middle_end/flambda/flambda_utils.ml[257,11021+17]..[257,11021+24])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[257,11021+17]..[257,11021+19])
                                          Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[257,11021+17]..[257,11021+19])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[257,11021+20]..[257,11021+24])
                                              Pexp_ident "cond" (middle_end/flambda/flambda_utils.ml[257,11021+20]..[257,11021+24])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_utils.ml[258,11049+6]..[258,11049+33])
                                    Pexp_construct "If_then_else" (middle_end/flambda/flambda_utils.ml[258,11049+6]..[258,11049+18])
                                    Some
                                      expression (middle_end/flambda/flambda_utils.ml[258,11049+19]..[258,11049+33])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/flambda/flambda_utils.ml[258,11049+20]..[258,11049+24])
                                            Pexp_ident "cond" (middle_end/flambda/flambda_utils.ml[258,11049+20]..[258,11049+24])
                                          expression (middle_end/flambda/flambda_utils.ml[258,11049+26]..[258,11049+28])
                                            Pexp_ident "e1" (middle_end/flambda/flambda_utils.ml[258,11049+26]..[258,11049+28])
                                          expression (middle_end/flambda/flambda_utils.ml[258,11049+30]..[258,11049+32])
                                            Pexp_ident "e2" (middle_end/flambda/flambda_utils.ml[258,11049+30]..[258,11049+32])
                                        ]
                              <case>
                                pattern (middle_end/flambda/flambda_utils.ml[259,11083+6]..[259,11083+23])
                                  Ppat_construct "Switch" (middle_end/flambda/flambda_utils.ml[259,11083+6]..[259,11083+12])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_utils.ml[259,11083+13]..[259,11083+23])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/flambda/flambda_utils.ml[259,11083+14]..[259,11083+18])
                                          Ppat_var "cond" (middle_end/flambda/flambda_utils.ml[259,11083+14]..[259,11083+18])
                                        pattern (middle_end/flambda/flambda_utils.ml[259,11083+20]..[259,11083+22])
                                          Ppat_var "sw" (middle_end/flambda/flambda_utils.ml[259,11083+20]..[259,11083+22])
                                      ]
                                expression (middle_end/flambda/flambda_utils.ml[260,11110+6]..[261,11138+23])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_utils.ml[260,11110+10]..[260,11110+14])
                                        Ppat_var "cond" (middle_end/flambda/flambda_utils.ml[260,11110+10]..[260,11110+14])
                                      expression (middle_end/flambda/flambda_utils.ml[260,11110+17]..[260,11110+24])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[260,11110+17]..[260,11110+19])
                                          Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[260,11110+17]..[260,11110+19])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[260,11110+20]..[260,11110+24])
                                              Pexp_ident "cond" (middle_end/flambda/flambda_utils.ml[260,11110+20]..[260,11110+24])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_utils.ml[261,11138+6]..[261,11138+23])
                                    Pexp_construct "Switch" (middle_end/flambda/flambda_utils.ml[261,11138+6]..[261,11138+12])
                                    Some
                                      expression (middle_end/flambda/flambda_utils.ml[261,11138+13]..[261,11138+23])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/flambda/flambda_utils.ml[261,11138+14]..[261,11138+18])
                                            Pexp_ident "cond" (middle_end/flambda/flambda_utils.ml[261,11138+14]..[261,11138+18])
                                          expression (middle_end/flambda/flambda_utils.ml[261,11138+20]..[261,11138+22])
                                            Pexp_ident "sw" (middle_end/flambda/flambda_utils.ml[261,11138+20]..[261,11138+22])
                                        ]
                              <case>
                                pattern (middle_end/flambda/flambda_utils.ml[262,11162+6]..[262,11162+41])
                                  Ppat_construct "String_switch" (middle_end/flambda/flambda_utils.ml[262,11162+6]..[262,11162+19])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_utils.ml[262,11162+20]..[262,11162+41])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/flambda/flambda_utils.ml[262,11162+21]..[262,11162+25])
                                          Ppat_var "cond" (middle_end/flambda/flambda_utils.ml[262,11162+21]..[262,11162+25])
                                        pattern (middle_end/flambda/flambda_utils.ml[262,11162+27]..[262,11162+35])
                                          Ppat_var "branches" (middle_end/flambda/flambda_utils.ml[262,11162+27]..[262,11162+35])
                                        pattern (middle_end/flambda/flambda_utils.ml[262,11162+37]..[262,11162+40])
                                          Ppat_var "def" (middle_end/flambda/flambda_utils.ml[262,11162+37]..[262,11162+40])
                                      ]
                                expression (middle_end/flambda/flambda_utils.ml[263,11207+6]..[264,11235+41])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_utils.ml[263,11207+10]..[263,11207+14])
                                        Ppat_var "cond" (middle_end/flambda/flambda_utils.ml[263,11207+10]..[263,11207+14])
                                      expression (middle_end/flambda/flambda_utils.ml[263,11207+17]..[263,11207+24])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[263,11207+17]..[263,11207+19])
                                          Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[263,11207+17]..[263,11207+19])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[263,11207+20]..[263,11207+24])
                                              Pexp_ident "cond" (middle_end/flambda/flambda_utils.ml[263,11207+20]..[263,11207+24])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_utils.ml[264,11235+6]..[264,11235+41])
                                    Pexp_construct "String_switch" (middle_end/flambda/flambda_utils.ml[264,11235+6]..[264,11235+19])
                                    Some
                                      expression (middle_end/flambda/flambda_utils.ml[264,11235+20]..[264,11235+41])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/flambda/flambda_utils.ml[264,11235+21]..[264,11235+25])
                                            Pexp_ident "cond" (middle_end/flambda/flambda_utils.ml[264,11235+21]..[264,11235+25])
                                          expression (middle_end/flambda/flambda_utils.ml[264,11235+27]..[264,11235+35])
                                            Pexp_ident "branches" (middle_end/flambda/flambda_utils.ml[264,11235+27]..[264,11235+35])
                                          expression (middle_end/flambda/flambda_utils.ml[264,11235+37]..[264,11235+40])
                                            Pexp_ident "def" (middle_end/flambda/flambda_utils.ml[264,11235+37]..[264,11235+40])
                                        ]
                              <case>
                                pattern (middle_end/flambda/flambda_utils.ml[265,11277+6]..[265,11277+41])
                                  Ppat_construct "Send" (middle_end/flambda/flambda_utils.ml[265,11277+6]..[265,11277+10])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_utils.ml[265,11277+11]..[265,11277+41])
                                      Ppat_record Closed
                                      [
                                        "kind" (middle_end/flambda/flambda_utils.ml[265,11277+13]..[265,11277+17]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[265,11277+13]..[265,11277+17])
                                            Ppat_var "kind" (middle_end/flambda/flambda_utils.ml[265,11277+13]..[265,11277+17])
                                        "meth" (middle_end/flambda/flambda_utils.ml[265,11277+19]..[265,11277+23]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[265,11277+19]..[265,11277+23])
                                            Ppat_var "meth" (middle_end/flambda/flambda_utils.ml[265,11277+19]..[265,11277+23])
                                        "obj" (middle_end/flambda/flambda_utils.ml[265,11277+25]..[265,11277+28]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[265,11277+25]..[265,11277+28])
                                            Ppat_var "obj" (middle_end/flambda/flambda_utils.ml[265,11277+25]..[265,11277+28])
                                        "args" (middle_end/flambda/flambda_utils.ml[265,11277+30]..[265,11277+34]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[265,11277+30]..[265,11277+34])
                                            Ppat_var "args" (middle_end/flambda/flambda_utils.ml[265,11277+30]..[265,11277+34])
                                        "dbg" (middle_end/flambda/flambda_utils.ml[265,11277+36]..[265,11277+39]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[265,11277+36]..[265,11277+39])
                                            Ppat_var "dbg" (middle_end/flambda/flambda_utils.ml[265,11277+36]..[265,11277+39])
                                      ]
                                expression (middle_end/flambda/flambda_utils.ml[266,11322+6]..[269,11413+41])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_utils.ml[266,11322+10]..[266,11322+14])
                                        Ppat_var "meth" (middle_end/flambda/flambda_utils.ml[266,11322+10]..[266,11322+14])
                                      expression (middle_end/flambda/flambda_utils.ml[266,11322+17]..[266,11322+24])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[266,11322+17]..[266,11322+19])
                                          Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[266,11322+17]..[266,11322+19])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[266,11322+20]..[266,11322+24])
                                              Pexp_ident "meth" (middle_end/flambda/flambda_utils.ml[266,11322+20]..[266,11322+24])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_utils.ml[267,11350+6]..[269,11413+41])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[267,11350+10]..[267,11350+13])
                                          Ppat_var "obj" (middle_end/flambda/flambda_utils.ml[267,11350+10]..[267,11350+13])
                                        expression (middle_end/flambda/flambda_utils.ml[267,11350+16]..[267,11350+22])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[267,11350+16]..[267,11350+18])
                                            Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[267,11350+16]..[267,11350+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[267,11350+19]..[267,11350+22])
                                                Pexp_ident "obj" (middle_end/flambda/flambda_utils.ml[267,11350+19]..[267,11350+22])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[268,11376+6]..[269,11413+41])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/flambda_utils.ml[268,11376+10]..[268,11376+14])
                                            Ppat_var "args" (middle_end/flambda/flambda_utils.ml[268,11376+10]..[268,11376+14])
                                          expression (middle_end/flambda/flambda_utils.ml[268,11376+17]..[268,11376+33])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[268,11376+17]..[268,11376+25])
                                              Pexp_ident "List.map" (middle_end/flambda/flambda_utils.ml[268,11376+17]..[268,11376+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[268,11376+26]..[268,11376+28])
                                                  Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[268,11376+26]..[268,11376+28])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[268,11376+29]..[268,11376+33])
                                                  Pexp_ident "args" (middle_end/flambda/flambda_utils.ml[268,11376+29]..[268,11376+33])
                                            ]
                                      ]
                                      expression (middle_end/flambda/flambda_utils.ml[269,11413+6]..[269,11413+41])
                                        Pexp_construct "Send" (middle_end/flambda/flambda_utils.ml[269,11413+6]..[269,11413+10])
                                        Some
                                          expression (middle_end/flambda/flambda_utils.ml[269,11413+11]..[269,11413+41])
                                            Pexp_record
                                            [
                                              "kind" (middle_end/flambda/flambda_utils.ml[269,11413+13]..[269,11413+17]) ghost
                                                expression (middle_end/flambda/flambda_utils.ml[269,11413+13]..[269,11413+17])
                                                  Pexp_ident "kind" (middle_end/flambda/flambda_utils.ml[269,11413+13]..[269,11413+17])
                                              "meth" (middle_end/flambda/flambda_utils.ml[269,11413+19]..[269,11413+23]) ghost
                                                expression (middle_end/flambda/flambda_utils.ml[269,11413+19]..[269,11413+23])
                                                  Pexp_ident "meth" (middle_end/flambda/flambda_utils.ml[269,11413+19]..[269,11413+23])
                                              "obj" (middle_end/flambda/flambda_utils.ml[269,11413+25]..[269,11413+28]) ghost
                                                expression (middle_end/flambda/flambda_utils.ml[269,11413+25]..[269,11413+28])
                                                  Pexp_ident "obj" (middle_end/flambda/flambda_utils.ml[269,11413+25]..[269,11413+28])
                                              "args" (middle_end/flambda/flambda_utils.ml[269,11413+30]..[269,11413+34]) ghost
                                                expression (middle_end/flambda/flambda_utils.ml[269,11413+30]..[269,11413+34])
                                                  Pexp_ident "args" (middle_end/flambda/flambda_utils.ml[269,11413+30]..[269,11413+34])
                                              "dbg" (middle_end/flambda/flambda_utils.ml[269,11413+36]..[269,11413+39]) ghost
                                                expression (middle_end/flambda/flambda_utils.ml[269,11413+36]..[269,11413+39])
                                                  Pexp_ident "dbg" (middle_end/flambda/flambda_utils.ml[269,11413+36]..[269,11413+39])
                                            ]
                                            None
                              <case>
                                pattern (middle_end/flambda/flambda_utils.ml[270,11455+6]..[270,11455+62])
                                  Ppat_construct "For" (middle_end/flambda/flambda_utils.ml[270,11455+6]..[270,11455+9])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_utils.ml[270,11455+10]..[270,11455+62])
                                      Ppat_record Closed
                                      [
                                        "bound_var" (middle_end/flambda/flambda_utils.ml[270,11455+12]..[270,11455+21]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[270,11455+12]..[270,11455+21])
                                            Ppat_var "bound_var" (middle_end/flambda/flambda_utils.ml[270,11455+12]..[270,11455+21])
                                        "from_value" (middle_end/flambda/flambda_utils.ml[270,11455+23]..[270,11455+33]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[270,11455+23]..[270,11455+33])
                                            Ppat_var "from_value" (middle_end/flambda/flambda_utils.ml[270,11455+23]..[270,11455+33])
                                        "to_value" (middle_end/flambda/flambda_utils.ml[270,11455+35]..[270,11455+43]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[270,11455+35]..[270,11455+43])
                                            Ppat_var "to_value" (middle_end/flambda/flambda_utils.ml[270,11455+35]..[270,11455+43])
                                        "direction" (middle_end/flambda/flambda_utils.ml[270,11455+45]..[270,11455+54]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[270,11455+45]..[270,11455+54])
                                            Ppat_var "direction" (middle_end/flambda/flambda_utils.ml[270,11455+45]..[270,11455+54])
                                        "body" (middle_end/flambda/flambda_utils.ml[270,11455+56]..[270,11455+60]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[270,11455+56]..[270,11455+60])
                                            Ppat_var "body" (middle_end/flambda/flambda_utils.ml[270,11455+56]..[270,11455+60])
                                      ]
                                expression (middle_end/flambda/flambda_utils.ml[271,11521+6]..[273,11597+62])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_utils.ml[271,11521+10]..[271,11521+20])
                                        Ppat_var "from_value" (middle_end/flambda/flambda_utils.ml[271,11521+10]..[271,11521+20])
                                      expression (middle_end/flambda/flambda_utils.ml[271,11521+23]..[271,11521+36])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[271,11521+23]..[271,11521+25])
                                          Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[271,11521+23]..[271,11521+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[271,11521+26]..[271,11521+36])
                                              Pexp_ident "from_value" (middle_end/flambda/flambda_utils.ml[271,11521+26]..[271,11521+36])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_utils.ml[272,11561+6]..[273,11597+62])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[272,11561+10]..[272,11561+18])
                                          Ppat_var "to_value" (middle_end/flambda/flambda_utils.ml[272,11561+10]..[272,11561+18])
                                        expression (middle_end/flambda/flambda_utils.ml[272,11561+21]..[272,11561+32])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[272,11561+21]..[272,11561+23])
                                            Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[272,11561+21]..[272,11561+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[272,11561+24]..[272,11561+32])
                                                Pexp_ident "to_value" (middle_end/flambda/flambda_utils.ml[272,11561+24]..[272,11561+32])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[273,11597+6]..[273,11597+62])
                                      Pexp_construct "For" (middle_end/flambda/flambda_utils.ml[273,11597+6]..[273,11597+9])
                                      Some
                                        expression (middle_end/flambda/flambda_utils.ml[273,11597+10]..[273,11597+62])
                                          Pexp_record
                                          [
                                            "bound_var" (middle_end/flambda/flambda_utils.ml[273,11597+12]..[273,11597+21]) ghost
                                              expression (middle_end/flambda/flambda_utils.ml[273,11597+12]..[273,11597+21])
                                                Pexp_ident "bound_var" (middle_end/flambda/flambda_utils.ml[273,11597+12]..[273,11597+21])
                                            "from_value" (middle_end/flambda/flambda_utils.ml[273,11597+23]..[273,11597+33]) ghost
                                              expression (middle_end/flambda/flambda_utils.ml[273,11597+23]..[273,11597+33])
                                                Pexp_ident "from_value" (middle_end/flambda/flambda_utils.ml[273,11597+23]..[273,11597+33])
                                            "to_value" (middle_end/flambda/flambda_utils.ml[273,11597+35]..[273,11597+43]) ghost
                                              expression (middle_end/flambda/flambda_utils.ml[273,11597+35]..[273,11597+43])
                                                Pexp_ident "to_value" (middle_end/flambda/flambda_utils.ml[273,11597+35]..[273,11597+43])
                                            "direction" (middle_end/flambda/flambda_utils.ml[273,11597+45]..[273,11597+54]) ghost
                                              expression (middle_end/flambda/flambda_utils.ml[273,11597+45]..[273,11597+54])
                                                Pexp_ident "direction" (middle_end/flambda/flambda_utils.ml[273,11597+45]..[273,11597+54])
                                            "body" (middle_end/flambda/flambda_utils.ml[273,11597+56]..[273,11597+60]) ghost
                                              expression (middle_end/flambda/flambda_utils.ml[273,11597+56]..[273,11597+60])
                                                Pexp_ident "body" (middle_end/flambda/flambda_utils.ml[273,11597+56]..[273,11597+60])
                                          ]
                                          None
                              <case>
                                pattern (middle_end/flambda/flambda_utils.ml[274,11660+6]..[274,11660+37])
                                  Ppat_construct "Static_raise" (middle_end/flambda/flambda_utils.ml[274,11660+6]..[274,11660+18])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_utils.ml[274,11660+19]..[274,11660+37])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/flambda/flambda_utils.ml[274,11660+20]..[274,11660+30])
                                          Ppat_var "static_exn" (middle_end/flambda/flambda_utils.ml[274,11660+20]..[274,11660+30])
                                        pattern (middle_end/flambda/flambda_utils.ml[274,11660+32]..[274,11660+36])
                                          Ppat_var "args" (middle_end/flambda/flambda_utils.ml[274,11660+32]..[274,11660+36])
                                      ]
                                expression (middle_end/flambda/flambda_utils.ml[275,11701+6]..[276,11738+37])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_utils.ml[275,11701+10]..[275,11701+14])
                                        Ppat_var "args" (middle_end/flambda/flambda_utils.ml[275,11701+10]..[275,11701+14])
                                      expression (middle_end/flambda/flambda_utils.ml[275,11701+17]..[275,11701+33])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[275,11701+17]..[275,11701+25])
                                          Pexp_ident "List.map" (middle_end/flambda/flambda_utils.ml[275,11701+17]..[275,11701+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[275,11701+26]..[275,11701+28])
                                              Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[275,11701+26]..[275,11701+28])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[275,11701+29]..[275,11701+33])
                                              Pexp_ident "args" (middle_end/flambda/flambda_utils.ml[275,11701+29]..[275,11701+33])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_utils.ml[276,11738+6]..[276,11738+37])
                                    Pexp_construct "Static_raise" (middle_end/flambda/flambda_utils.ml[276,11738+6]..[276,11738+18])
                                    Some
                                      expression (middle_end/flambda/flambda_utils.ml[276,11738+19]..[276,11738+37])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/flambda/flambda_utils.ml[276,11738+20]..[276,11738+30])
                                            Pexp_ident "static_exn" (middle_end/flambda/flambda_utils.ml[276,11738+20]..[276,11738+30])
                                          expression (middle_end/flambda/flambda_utils.ml[276,11738+32]..[276,11738+36])
                                            Pexp_ident "args" (middle_end/flambda/flambda_utils.ml[276,11738+32]..[276,11738+36])
                                        ]
                              <case>
                                pattern (middle_end/flambda/flambda_utils.ml[277,11776+6]..[278,11820+44])
                                  Ppat_or
                                  pattern (middle_end/flambda/flambda_utils.ml[277,11776+6]..[278,11820+23])
                                    Ppat_or
                                    pattern (middle_end/flambda/flambda_utils.ml[277,11776+6]..[278,11820+11])
                                      Ppat_or
                                      pattern (middle_end/flambda/flambda_utils.ml[277,11776+6]..[277,11776+43])
                                        Ppat_or
                                        pattern (middle_end/flambda/flambda_utils.ml[277,11776+6]..[277,11776+33])
                                          Ppat_or
                                          pattern (middle_end/flambda/flambda_utils.ml[277,11776+6]..[277,11776+20])
                                            Ppat_construct "Static_catch" (middle_end/flambda/flambda_utils.ml[277,11776+6]..[277,11776+18])
                                            Some
                                              []
                                              pattern (middle_end/flambda/flambda_utils.ml[277,11776+19]..[277,11776+20])
                                                Ppat_any
                                          pattern (middle_end/flambda/flambda_utils.ml[277,11776+23]..[277,11776+33])
                                            Ppat_construct "Try_with" (middle_end/flambda/flambda_utils.ml[277,11776+23]..[277,11776+31])
                                            Some
                                              []
                                              pattern (middle_end/flambda/flambda_utils.ml[277,11776+32]..[277,11776+33])
                                                Ppat_any
                                        pattern (middle_end/flambda/flambda_utils.ml[277,11776+36]..[277,11776+43])
                                          Ppat_construct "While" (middle_end/flambda/flambda_utils.ml[277,11776+36]..[277,11776+41])
                                          Some
                                            []
                                            pattern (middle_end/flambda/flambda_utils.ml[277,11776+42]..[277,11776+43])
                                              Ppat_any
                                      pattern (middle_end/flambda/flambda_utils.ml[278,11820+6]..[278,11820+11])
                                        Ppat_construct "Let" (middle_end/flambda/flambda_utils.ml[278,11820+6]..[278,11820+9])
                                        Some
                                          []
                                          pattern (middle_end/flambda/flambda_utils.ml[278,11820+10]..[278,11820+11])
                                            Ppat_any
                                    pattern (middle_end/flambda/flambda_utils.ml[278,11820+14]..[278,11820+23])
                                      Ppat_construct "Let_rec" (middle_end/flambda/flambda_utils.ml[278,11820+14]..[278,11820+21])
                                      Some
                                        []
                                        pattern (middle_end/flambda/flambda_utils.ml[278,11820+22]..[278,11820+23])
                                          Ppat_any
                                  pattern (middle_end/flambda/flambda_utils.ml[278,11820+26]..[278,11820+44])
                                    Ppat_construct "Proved_unreachable" (middle_end/flambda/flambda_utils.ml[278,11820+26]..[278,11820+44])
                                    None
                                expression (middle_end/flambda/flambda_utils.ml[278,11820+48]..[278,11820+52])
                                  Pexp_ident "flam" (middle_end/flambda/flambda_utils.ml[278,11820+48]..[278,11820+52])
                            ]
                          core_type (middle_end/flambda/flambda_utils.ml[241,10405+31]..[241,10405+40])
                            Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_utils.ml[241,10405+31]..[241,10405+40])
                            []
                  ]
                  expression (middle_end/flambda/flambda_utils.ml[280,11878+2]..[319,13387+56])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/flambda_utils.ml[280,11878+6]..[280,11878+15])
                          Ppat_var "aux_named" (middle_end/flambda/flambda_utils.ml[280,11878+6]..[280,11878+15])
                        expression (middle_end/flambda/flambda_utils.ml[280,11878+16]..[316,13300+40]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/flambda_utils.ml[280,11878+16]..[280,11878+39])
                            Ppat_constraint
                            pattern (middle_end/flambda/flambda_utils.ml[280,11878+17]..[280,11878+22])
                              Ppat_var "named" (middle_end/flambda/flambda_utils.ml[280,11878+17]..[280,11878+22])
                            core_type (middle_end/flambda/flambda_utils.ml[280,11878+25]..[280,11878+38])
                              Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_utils.ml[280,11878+25]..[280,11878+38])
                              []
                          expression (middle_end/flambda/flambda_utils.ml[280,11878+40]..[316,13300+40])
                            Pexp_constraint
                            expression (middle_end/flambda/flambda_utils.ml[281,11936+4]..[316,13300+40])
                              Pexp_match
                              expression (middle_end/flambda/flambda_utils.ml[281,11936+10]..[281,11936+15])
                                Pexp_ident "named" (middle_end/flambda/flambda_utils.ml[281,11936+10]..[281,11936+15])
                              [
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[282,11957+6]..[282,11957+33])
                                    Ppat_or
                                    pattern (middle_end/flambda/flambda_utils.ml[282,11957+6]..[282,11957+24])
                                      Ppat_or
                                      pattern (middle_end/flambda/flambda_utils.ml[282,11957+6]..[282,11957+14])
                                        Ppat_construct "Symbol" (middle_end/flambda/flambda_utils.ml[282,11957+6]..[282,11957+12])
                                        Some
                                          []
                                          pattern (middle_end/flambda/flambda_utils.ml[282,11957+13]..[282,11957+14])
                                            Ppat_any
                                      pattern (middle_end/flambda/flambda_utils.ml[282,11957+17]..[282,11957+24])
                                        Ppat_construct "Const" (middle_end/flambda/flambda_utils.ml[282,11957+17]..[282,11957+22])
                                        Some
                                          []
                                          pattern (middle_end/flambda/flambda_utils.ml[282,11957+23]..[282,11957+24])
                                            Ppat_any
                                    pattern (middle_end/flambda/flambda_utils.ml[282,11957+27]..[282,11957+33])
                                      Ppat_construct "Expr" (middle_end/flambda/flambda_utils.ml[282,11957+27]..[282,11957+31])
                                      Some
                                        []
                                        pattern (middle_end/flambda/flambda_utils.ml[282,11957+32]..[282,11957+33])
                                          Ppat_any
                                  expression (middle_end/flambda/flambda_utils.ml[282,11957+37]..[282,11957+42])
                                    Pexp_ident "named" (middle_end/flambda/flambda_utils.ml[282,11957+37]..[282,11957+42])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[283,12000+6]..[283,12000+40])
                                    Ppat_or
                                    pattern (middle_end/flambda/flambda_utils.ml[283,12000+6]..[283,12000+23])
                                      Ppat_construct "Allocated_const" (middle_end/flambda/flambda_utils.ml[283,12000+6]..[283,12000+21])
                                      Some
                                        []
                                        pattern (middle_end/flambda/flambda_utils.ml[283,12000+22]..[283,12000+23])
                                          Ppat_any
                                    pattern (middle_end/flambda/flambda_utils.ml[283,12000+26]..[283,12000+40])
                                      Ppat_construct "Read_mutable" (middle_end/flambda/flambda_utils.ml[283,12000+26]..[283,12000+38])
                                      Some
                                        []
                                        pattern (middle_end/flambda/flambda_utils.ml[283,12000+39]..[283,12000+40])
                                          Ppat_any
                                  expression (middle_end/flambda/flambda_utils.ml[283,12000+44]..[283,12000+49])
                                    Pexp_ident "named" (middle_end/flambda/flambda_utils.ml[283,12000+44]..[283,12000+49])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[284,12050+6]..[284,12050+25])
                                    Ppat_construct "Read_symbol_field" (middle_end/flambda/flambda_utils.ml[284,12050+6]..[284,12050+23])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[284,12050+24]..[284,12050+25])
                                        Ppat_any
                                  expression (middle_end/flambda/flambda_utils.ml[284,12050+29]..[284,12050+34])
                                    Pexp_ident "named" (middle_end/flambda/flambda_utils.ml[284,12050+29]..[284,12050+34])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[285,12085+6]..[285,12085+37])
                                    Ppat_construct "Set_of_closures" (middle_end/flambda/flambda_utils.ml[285,12085+6]..[285,12085+21])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[285,12085+22]..[285,12085+37])
                                        Ppat_var "set_of_closures" (middle_end/flambda/flambda_utils.ml[285,12085+22]..[285,12085+37])
                                  expression (middle_end/flambda/flambda_utils.ml[286,12126+6]..[299,12730+37])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[286,12126+10]..[286,12126+25])
                                          Ppat_var "set_of_closures" (middle_end/flambda/flambda_utils.ml[286,12126+10]..[286,12126+25])
                                        expression (middle_end/flambda/flambda_utils.ml[287,12154+8]..[297,12648+72])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[287,12154+8]..[287,12154+38])
                                            Pexp_ident "Flambda.create_set_of_closures" (middle_end/flambda/flambda_utils.ml[287,12154+8]..[287,12154+38])
                                          [
                                            <arg>
                                            Labelled "function_decls"
                                              expression (middle_end/flambda/flambda_utils.ml[288,12193+26]..[288,12193+56])
                                                Pexp_field
                                                expression (middle_end/flambda/flambda_utils.ml[288,12193+26]..[288,12193+41])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/flambda_utils.ml[288,12193+26]..[288,12193+41])
                                                "function_decls" (middle_end/flambda/flambda_utils.ml[288,12193+42]..[288,12193+56])
                                            <arg>
                                            Labelled "free_vars"
                                              expression (middle_end/flambda/flambda_utils.ml[290,12272+12]..[292,12401+40])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_utils.ml[290,12272+13]..[290,12272+29])
                                                  Pexp_ident "Variable.Map.map" (middle_end/flambda/flambda_utils.ml[290,12272+13]..[290,12272+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[290,12272+30]..[291,12345+55])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (middle_end/flambda/flambda_utils.ml[290,12272+35]..[290,12272+69])
                                                        Ppat_constraint
                                                        pattern (middle_end/flambda/flambda_utils.ml[290,12272+36]..[290,12272+43])
                                                          Ppat_var "spec_to" (middle_end/flambda/flambda_utils.ml[290,12272+36]..[290,12272+43])
                                                        core_type (middle_end/flambda/flambda_utils.ml[290,12272+46]..[290,12272+68])
                                                          Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/flambda_utils.ml[290,12272+46]..[290,12272+68])
                                                          []
                                                      expression (middle_end/flambda/flambda_utils.ml[291,12345+16]..[291,12345+54])
                                                        Pexp_record
                                                        [
                                                          "var" (middle_end/flambda/flambda_utils.ml[291,12345+31]..[291,12345+34])
                                                            expression (middle_end/flambda/flambda_utils.ml[291,12345+37]..[291,12345+51])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/flambda_utils.ml[291,12345+37]..[291,12345+39])
                                                                Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[291,12345+37]..[291,12345+39])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/flambda_utils.ml[291,12345+40]..[291,12345+51])
                                                                    Pexp_field
                                                                    expression (middle_end/flambda/flambda_utils.ml[291,12345+40]..[291,12345+47])
                                                                      Pexp_ident "spec_to" (middle_end/flambda/flambda_utils.ml[291,12345+40]..[291,12345+47])
                                                                    "var" (middle_end/flambda/flambda_utils.ml[291,12345+48]..[291,12345+51])
                                                              ]
                                                        ]
                                                        Some
                                                          expression (middle_end/flambda/flambda_utils.ml[291,12345+18]..[291,12345+25])
                                                            Pexp_ident "spec_to" (middle_end/flambda/flambda_utils.ml[291,12345+18]..[291,12345+25])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[292,12401+14]..[292,12401+39])
                                                      Pexp_field
                                                      expression (middle_end/flambda/flambda_utils.ml[292,12401+14]..[292,12401+29])
                                                        Pexp_ident "set_of_closures" (middle_end/flambda/flambda_utils.ml[292,12401+14]..[292,12401+29])
                                                      "free_vars" (middle_end/flambda/flambda_utils.ml[292,12401+30]..[292,12401+39])
                                                ]
                                            <arg>
                                            Labelled "specialised_args"
                                              expression (middle_end/flambda/flambda_utils.ml[294,12471+12]..[296,12600+47])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_utils.ml[294,12471+13]..[294,12471+29])
                                                  Pexp_ident "Variable.Map.map" (middle_end/flambda/flambda_utils.ml[294,12471+13]..[294,12471+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[294,12471+30]..[295,12544+55])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (middle_end/flambda/flambda_utils.ml[294,12471+35]..[294,12471+69])
                                                        Ppat_constraint
                                                        pattern (middle_end/flambda/flambda_utils.ml[294,12471+36]..[294,12471+43])
                                                          Ppat_var "spec_to" (middle_end/flambda/flambda_utils.ml[294,12471+36]..[294,12471+43])
                                                        core_type (middle_end/flambda/flambda_utils.ml[294,12471+46]..[294,12471+68])
                                                          Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/flambda_utils.ml[294,12471+46]..[294,12471+68])
                                                          []
                                                      expression (middle_end/flambda/flambda_utils.ml[295,12544+16]..[295,12544+54])
                                                        Pexp_record
                                                        [
                                                          "var" (middle_end/flambda/flambda_utils.ml[295,12544+31]..[295,12544+34])
                                                            expression (middle_end/flambda/flambda_utils.ml[295,12544+37]..[295,12544+51])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/flambda_utils.ml[295,12544+37]..[295,12544+39])
                                                                Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[295,12544+37]..[295,12544+39])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/flambda_utils.ml[295,12544+40]..[295,12544+51])
                                                                    Pexp_field
                                                                    expression (middle_end/flambda/flambda_utils.ml[295,12544+40]..[295,12544+47])
                                                                      Pexp_ident "spec_to" (middle_end/flambda/flambda_utils.ml[295,12544+40]..[295,12544+47])
                                                                    "var" (middle_end/flambda/flambda_utils.ml[295,12544+48]..[295,12544+51])
                                                              ]
                                                        ]
                                                        Some
                                                          expression (middle_end/flambda/flambda_utils.ml[295,12544+18]..[295,12544+25])
                                                            Pexp_ident "spec_to" (middle_end/flambda/flambda_utils.ml[295,12544+18]..[295,12544+25])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[296,12600+14]..[296,12600+46])
                                                      Pexp_field
                                                      expression (middle_end/flambda/flambda_utils.ml[296,12600+14]..[296,12600+29])
                                                        Pexp_ident "set_of_closures" (middle_end/flambda/flambda_utils.ml[296,12600+14]..[296,12600+29])
                                                      "specialised_args" (middle_end/flambda/flambda_utils.ml[296,12600+30]..[296,12600+46])
                                                ]
                                            <arg>
                                            Labelled "direct_call_surrogates"
                                              expression (middle_end/flambda/flambda_utils.ml[297,12648+34]..[297,12648+72])
                                                Pexp_field
                                                expression (middle_end/flambda/flambda_utils.ml[297,12648+34]..[297,12648+49])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/flambda_utils.ml[297,12648+34]..[297,12648+49])
                                                "direct_call_surrogates" (middle_end/flambda/flambda_utils.ml[297,12648+50]..[297,12648+72])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[299,12730+6]..[299,12730+37])
                                      Pexp_construct "Set_of_closures" (middle_end/flambda/flambda_utils.ml[299,12730+6]..[299,12730+21])
                                      Some
                                        expression (middle_end/flambda/flambda_utils.ml[299,12730+22]..[299,12730+37])
                                          Pexp_ident "set_of_closures" (middle_end/flambda/flambda_utils.ml[299,12730+22]..[299,12730+37])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[300,12768+6]..[300,12768+37])
                                    Ppat_construct "Project_closure" (middle_end/flambda/flambda_utils.ml[300,12768+6]..[300,12768+21])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[300,12768+22]..[300,12768+37])
                                        Ppat_var "project_closure" (middle_end/flambda/flambda_utils.ml[300,12768+22]..[300,12768+37])
                                  expression (middle_end/flambda/flambda_utils.ml[301,12809+6]..[304,12924+7])
                                    Pexp_construct "Project_closure" (middle_end/flambda/flambda_utils.ml[301,12809+6]..[301,12809+21])
                                    Some
                                      expression (middle_end/flambda/flambda_utils.ml[301,12809+22]..[304,12924+7])
                                        Pexp_record
                                        [
                                          "set_of_closures" (middle_end/flambda/flambda_utils.ml[303,12862+8]..[303,12862+23])
                                            expression (middle_end/flambda/flambda_utils.ml[303,12862+26]..[303,12862+60])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_utils.ml[303,12862+26]..[303,12862+28])
                                                Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[303,12862+26]..[303,12862+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[303,12862+29]..[303,12862+60])
                                                    Pexp_field
                                                    expression (middle_end/flambda/flambda_utils.ml[303,12862+29]..[303,12862+44])
                                                      Pexp_ident "project_closure" (middle_end/flambda/flambda_utils.ml[303,12862+29]..[303,12862+44])
                                                    "set_of_closures" (middle_end/flambda/flambda_utils.ml[303,12862+45]..[303,12862+60])
                                              ]
                                        ]
                                        Some
                                          expression (middle_end/flambda/flambda_utils.ml[302,12833+8]..[302,12833+23])
                                            Pexp_ident "project_closure" (middle_end/flambda/flambda_utils.ml[302,12833+8]..[302,12833+23])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[305,12932+6]..[305,12932+61])
                                    Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[305,12932+6]..[305,12932+33])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[305,12932+34]..[305,12932+61])
                                        Ppat_var "move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[305,12932+34]..[305,12932+61])
                                  expression (middle_end/flambda/flambda_utils.ml[306,12997+6]..[309,13132+7])
                                    Pexp_construct "Move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[306,12997+6]..[306,12997+33])
                                    Some
                                      expression (middle_end/flambda/flambda_utils.ml[306,12997+34]..[309,13132+7])
                                        Pexp_record
                                        [
                                          "closure" (middle_end/flambda/flambda_utils.ml[308,13074+8]..[308,13074+15])
                                            expression (middle_end/flambda/flambda_utils.ml[308,13074+18]..[308,13074+56])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_utils.ml[308,13074+18]..[308,13074+20])
                                                Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[308,13074+18]..[308,13074+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[308,13074+21]..[308,13074+56])
                                                    Pexp_field
                                                    expression (middle_end/flambda/flambda_utils.ml[308,13074+21]..[308,13074+48])
                                                      Pexp_ident "move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[308,13074+21]..[308,13074+48])
                                                    "closure" (middle_end/flambda/flambda_utils.ml[308,13074+49]..[308,13074+56])
                                              ]
                                        ]
                                        Some
                                          expression (middle_end/flambda/flambda_utils.ml[307,13033+8]..[307,13033+35])
                                            Pexp_ident "move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[307,13033+8]..[307,13033+35])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[310,13140+6]..[310,13140+29])
                                    Ppat_construct "Project_var" (middle_end/flambda/flambda_utils.ml[310,13140+6]..[310,13140+17])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[310,13140+18]..[310,13140+29])
                                        Ppat_var "project_var" (middle_end/flambda/flambda_utils.ml[310,13140+18]..[310,13140+29])
                                  expression (middle_end/flambda/flambda_utils.ml[311,13173+6]..[314,13260+7])
                                    Pexp_construct "Project_var" (middle_end/flambda/flambda_utils.ml[311,13173+6]..[311,13173+17])
                                    Some
                                      expression (middle_end/flambda/flambda_utils.ml[311,13173+18]..[314,13260+7])
                                        Pexp_record
                                        [
                                          "closure" (middle_end/flambda/flambda_utils.ml[313,13218+8]..[313,13218+15])
                                            expression (middle_end/flambda/flambda_utils.ml[313,13218+18]..[313,13218+40])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_utils.ml[313,13218+18]..[313,13218+20])
                                                Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[313,13218+18]..[313,13218+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[313,13218+21]..[313,13218+40])
                                                    Pexp_field
                                                    expression (middle_end/flambda/flambda_utils.ml[313,13218+21]..[313,13218+32])
                                                      Pexp_ident "project_var" (middle_end/flambda/flambda_utils.ml[313,13218+21]..[313,13218+32])
                                                    "closure" (middle_end/flambda/flambda_utils.ml[313,13218+33]..[313,13218+40])
                                              ]
                                        ]
                                        Some
                                          expression (middle_end/flambda/flambda_utils.ml[312,13193+8]..[312,13193+19])
                                            Pexp_ident "project_var" (middle_end/flambda/flambda_utils.ml[312,13193+8]..[312,13193+19])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[315,13268+6]..[315,13268+28])
                                    Ppat_construct "Prim" (middle_end/flambda/flambda_utils.ml[315,13268+6]..[315,13268+10])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[315,13268+11]..[315,13268+28])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/flambda_utils.ml[315,13268+12]..[315,13268+16])
                                            Ppat_var "prim" (middle_end/flambda/flambda_utils.ml[315,13268+12]..[315,13268+16])
                                          pattern (middle_end/flambda/flambda_utils.ml[315,13268+18]..[315,13268+22])
                                            Ppat_var "args" (middle_end/flambda/flambda_utils.ml[315,13268+18]..[315,13268+22])
                                          pattern (middle_end/flambda/flambda_utils.ml[315,13268+24]..[315,13268+27])
                                            Ppat_var "dbg" (middle_end/flambda/flambda_utils.ml[315,13268+24]..[315,13268+27])
                                        ]
                                  expression (middle_end/flambda/flambda_utils.ml[316,13300+6]..[316,13300+40])
                                    Pexp_construct "Prim" (middle_end/flambda/flambda_utils.ml[316,13300+6]..[316,13300+10])
                                    Some
                                      expression (middle_end/flambda/flambda_utils.ml[316,13300+11]..[316,13300+40])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/flambda/flambda_utils.ml[316,13300+12]..[316,13300+16])
                                            Pexp_ident "prim" (middle_end/flambda/flambda_utils.ml[316,13300+12]..[316,13300+16])
                                          expression (middle_end/flambda/flambda_utils.ml[316,13300+18]..[316,13300+34])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[316,13300+18]..[316,13300+26])
                                              Pexp_ident "List.map" (middle_end/flambda/flambda_utils.ml[316,13300+18]..[316,13300+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[316,13300+27]..[316,13300+29])
                                                  Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[316,13300+27]..[316,13300+29])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[316,13300+30]..[316,13300+34])
                                                  Pexp_ident "args" (middle_end/flambda/flambda_utils.ml[316,13300+30]..[316,13300+34])
                                            ]
                                          expression (middle_end/flambda/flambda_utils.ml[316,13300+36]..[316,13300+39])
                                            Pexp_ident "dbg" (middle_end/flambda/flambda_utils.ml[316,13300+36]..[316,13300+39])
                                        ]
                              ]
                            core_type (middle_end/flambda/flambda_utils.ml[280,11878+42]..[280,11878+55])
                              Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_utils.ml[280,11878+42]..[280,11878+55])
                              []
                    ]
                    expression (middle_end/flambda/flambda_utils.ml[318,13346+2]..[319,13387+56])
                      Pexp_ifthenelse
                      expression (middle_end/flambda/flambda_utils.ml[318,13346+5]..[318,13346+30])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_utils.ml[318,13346+5]..[318,13346+26])
                          Pexp_ident "Variable.Map.is_empty" (middle_end/flambda/flambda_utils.ml[318,13346+5]..[318,13346+26])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[318,13346+27]..[318,13346+30])
                              Pexp_ident "sb'" (middle_end/flambda/flambda_utils.ml[318,13346+27]..[318,13346+30])
                        ]
                      expression (middle_end/flambda/flambda_utils.ml[318,13346+36]..[318,13346+40])
                        Pexp_ident "tree" (middle_end/flambda/flambda_utils.ml[318,13346+36]..[318,13346+40])
                      Some
                        expression (middle_end/flambda/flambda_utils.ml[319,13387+7]..[319,13387+56])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[319,13387+7]..[319,13387+37])
                            Pexp_ident "Flambda_iterators.map_toplevel" (middle_end/flambda/flambda_utils.ml[319,13387+7]..[319,13387+37])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[319,13387+38]..[319,13387+41])
                                Pexp_ident "aux" (middle_end/flambda/flambda_utils.ml[319,13387+38]..[319,13387+41])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[319,13387+42]..[319,13387+51])
                                Pexp_ident "aux_named" (middle_end/flambda/flambda_utils.ml[319,13387+42]..[319,13387+51])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[319,13387+52]..[319,13387+56])
                                Pexp_ident "tree" (middle_end/flambda/flambda_utils.ml[319,13387+52]..[319,13387+56])
                          ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[323,13537+0]..[328,13772+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[323,13537+4]..[323,13537+31])
          Ppat_var "toplevel_substitution_named" (middle_end/flambda/flambda_utils.ml[323,13537+4]..[323,13537+31])
        expression (middle_end/flambda/flambda_utils.ml[323,13537+32]..[328,13772+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[323,13537+32]..[323,13537+34])
            Ppat_var "sb" (middle_end/flambda/flambda_utils.ml[323,13537+32]..[323,13537+34])
          expression (middle_end/flambda/flambda_utils.ml[323,13537+35]..[328,13772+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[323,13537+35]..[323,13537+40])
              Ppat_var "named" (middle_end/flambda/flambda_utils.ml[323,13537+35]..[323,13537+40])
            expression (middle_end/flambda/flambda_utils.ml[324,13580+2]..[328,13772+21])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/flambda_utils.ml[324,13580+6]..[324,13580+10])
                    Ppat_var "name" (middle_end/flambda/flambda_utils.ml[324,13580+6]..[324,13580+10])
                  expression (middle_end/flambda/flambda_utils.ml[324,13580+13]..[324,13580+64])
                    Pexp_ident "Internal_variable_names.toplevel_substitution_named" (middle_end/flambda/flambda_utils.ml[324,13580+13]..[324,13580+64])
              ]
              expression (middle_end/flambda/flambda_utils.ml[325,13648+2]..[328,13772+21])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (middle_end/flambda/flambda_utils.ml[325,13648+6]..[325,13648+10])
                      Ppat_var "expr" (middle_end/flambda/flambda_utils.ml[325,13648+6]..[325,13648+10])
                    expression (middle_end/flambda/flambda_utils.ml[325,13648+13]..[325,13648+34])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_utils.ml[325,13648+13]..[325,13648+22])
                        Pexp_ident "name_expr" (middle_end/flambda/flambda_utils.ml[325,13648+13]..[325,13648+22])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[325,13648+23]..[325,13648+28])
                            Pexp_ident "named" (middle_end/flambda/flambda_utils.ml[325,13648+23]..[325,13648+28])
                        <arg>
                        Labelled "name"
                          expression (middle_end/flambda/flambda_utils.ml[325,13648+30]..[325,13648+34])
                            Pexp_ident "name" (middle_end/flambda/flambda_utils.ml[325,13648+30]..[325,13648+34])
                      ]
                ]
                expression (middle_end/flambda/flambda_utils.ml[326,13686+2]..[328,13772+21])
                  Pexp_match
                  expression (middle_end/flambda/flambda_utils.ml[326,13686+8]..[326,13686+37])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[326,13686+8]..[326,13686+29])
                      Pexp_ident "toplevel_substitution" (middle_end/flambda/flambda_utils.ml[326,13686+8]..[326,13686+29])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[326,13686+30]..[326,13686+32])
                          Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[326,13686+30]..[326,13686+32])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[326,13686+33]..[326,13686+37])
                          Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[326,13686+33]..[326,13686+37])
                    ]
                  [
                    <case>
                      pattern (middle_end/flambda/flambda_utils.ml[327,13729+4]..[327,13729+16])
                        Ppat_construct "Let" (middle_end/flambda/flambda_utils.ml[327,13729+4]..[327,13729+7])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_utils.ml[327,13729+8]..[327,13729+16])
                            Ppat_var "let_expr" (middle_end/flambda/flambda_utils.ml[327,13729+8]..[327,13729+16])
                      expression (middle_end/flambda/flambda_utils.ml[327,13729+20]..[327,13729+42])
                        Pexp_field
                        expression (middle_end/flambda/flambda_utils.ml[327,13729+20]..[327,13729+28])
                          Pexp_ident "let_expr" (middle_end/flambda/flambda_utils.ml[327,13729+20]..[327,13729+28])
                        "defining_expr" (middle_end/flambda/flambda_utils.ml[327,13729+29]..[327,13729+42])
                    <case>
                      pattern (middle_end/flambda/flambda_utils.ml[328,13772+4]..[328,13772+5])
                        Ppat_any
                      expression (middle_end/flambda/flambda_utils.ml[328,13772+9]..[328,13772+21])
                        Pexp_assert
                        expression (middle_end/flambda/flambda_utils.ml[328,13772+16]..[328,13772+21])
                          Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[328,13772+16]..[328,13772+21])
                          None
                  ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[330,13795+0]..[396,16398+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[330,13795+4]..[330,13795+28])
          Ppat_var "make_closure_declaration" (middle_end/flambda/flambda_utils.ml[330,13795+4]..[330,13795+28])
        expression (middle_end/flambda/flambda_utils.ml[331,13824+6]..[396,16398+34]) ghost
          Pexp_fun
          Labelled "is_classic_mode"
          None
          pattern (middle_end/flambda/flambda_utils.ml[331,13824+7]..[331,13824+22])
            Ppat_var "is_classic_mode" (middle_end/flambda/flambda_utils.ml[331,13824+7]..[331,13824+22])
          expression (middle_end/flambda/flambda_utils.ml[331,13824+23]..[396,16398+34]) ghost
            Pexp_fun
            Labelled "id"
            None
            pattern (middle_end/flambda/flambda_utils.ml[331,13824+24]..[331,13824+26])
              Ppat_var "id" (middle_end/flambda/flambda_utils.ml[331,13824+24]..[331,13824+26])
            expression (middle_end/flambda/flambda_utils.ml[331,13824+27]..[396,16398+34]) ghost
              Pexp_fun
              Labelled "body"
              None
              pattern (middle_end/flambda/flambda_utils.ml[331,13824+28]..[331,13824+32])
                Ppat_var "body" (middle_end/flambda/flambda_utils.ml[331,13824+28]..[331,13824+32])
              expression (middle_end/flambda/flambda_utils.ml[331,13824+33]..[396,16398+34]) ghost
                Pexp_fun
                Labelled "params"
                None
                pattern (middle_end/flambda/flambda_utils.ml[331,13824+34]..[331,13824+40])
                  Ppat_var "params" (middle_end/flambda/flambda_utils.ml[331,13824+34]..[331,13824+40])
                expression (middle_end/flambda/flambda_utils.ml[331,13824+41]..[396,16398+34]) ghost
                  Pexp_fun
                  Labelled "stub"
                  None
                  pattern (middle_end/flambda/flambda_utils.ml[331,13824+42]..[331,13824+46])
                    Ppat_var "stub" (middle_end/flambda/flambda_utils.ml[331,13824+42]..[331,13824+46])
                  expression (middle_end/flambda/flambda_utils.ml[331,13824+47]..[396,16398+34])
                    Pexp_constraint
                    expression (middle_end/flambda/flambda_utils.ml[332,13885+2]..[396,16398+34])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/flambda_utils.ml[332,13885+6]..[332,13885+20])
                            Ppat_var "free_variables" (middle_end/flambda/flambda_utils.ml[332,13885+6]..[332,13885+20])
                          expression (middle_end/flambda/flambda_utils.ml[332,13885+23]..[332,13885+50])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_utils.ml[332,13885+23]..[332,13885+45])
                              Pexp_ident "Flambda.free_variables" (middle_end/flambda/flambda_utils.ml[332,13885+23]..[332,13885+45])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[332,13885+46]..[332,13885+50])
                                  Pexp_ident "body" (middle_end/flambda/flambda_utils.ml[332,13885+46]..[332,13885+50])
                            ]
                      ]
                      expression (middle_end/flambda/flambda_utils.ml[333,13939+2]..[396,16398+34])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/flambda_utils.ml[333,13939+6]..[333,13939+15])
                              Ppat_var "param_set" (middle_end/flambda/flambda_utils.ml[333,13939+6]..[333,13939+15])
                            expression (middle_end/flambda/flambda_utils.ml[333,13939+18]..[333,13939+43])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_utils.ml[333,13939+18]..[333,13939+36])
                                Pexp_ident "Parameter.Set.vars" (middle_end/flambda/flambda_utils.ml[333,13939+18]..[333,13939+36])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_utils.ml[333,13939+37]..[333,13939+43])
                                    Pexp_ident "params" (middle_end/flambda/flambda_utils.ml[333,13939+37]..[333,13939+43])
                              ]
                        ]
                        expression (middle_end/flambda/flambda_utils.ml[334,13986+2]..[396,16398+34])
                          Pexp_sequence
                          expression (middle_end/flambda/flambda_utils.ml[334,13986+2]..[336,14115+5])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/flambda_utils.ml[334,13986+5]..[334,13986+55])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_utils.ml[334,13986+5]..[334,13986+8])
                                Pexp_ident "not" (middle_end/flambda/flambda_utils.ml[334,13986+5]..[334,13986+8])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_utils.ml[334,13986+9]..[334,13986+55])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_utils.ml[334,13986+10]..[334,13986+29])
                                      Pexp_ident "Variable.Set.subset" (middle_end/flambda/flambda_utils.ml[334,13986+10]..[334,13986+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_utils.ml[334,13986+30]..[334,13986+39])
                                          Pexp_ident "param_set" (middle_end/flambda/flambda_utils.ml[334,13986+30]..[334,13986+39])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_utils.ml[334,13986+40]..[334,13986+54])
                                          Pexp_ident "free_variables" (middle_end/flambda/flambda_utils.ml[334,13986+40]..[334,13986+54])
                                    ]
                              ]
                            expression (middle_end/flambda/flambda_utils.ml[334,13986+61]..[336,14115+5])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_utils.ml[335,14053+4]..[335,14053+20])
                                Pexp_ident "Misc.fatal_error" (middle_end/flambda/flambda_utils.ml[335,14053+4]..[335,14053+20])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_utils.ml[335,14053+21]..[335,14053+61])
                                    Pexp_constant PConst_string("Flambda_utils.make_closure_declaration",(middle_end/flambda/flambda_utils.ml[335,14053+22]..[335,14053+60]),None)
                              ]
                            None
                          expression (middle_end/flambda/flambda_utils.ml[337,14122+2]..[396,16398+34])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/flambda_utils.ml[337,14122+6]..[337,14122+8])
                                  Ppat_var "sb" (middle_end/flambda/flambda_utils.ml[337,14122+6]..[337,14122+8])
                                expression (middle_end/flambda/flambda_utils.ml[338,14133+4]..[340,14220+39])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_utils.ml[338,14133+4]..[338,14133+21])
                                    Pexp_ident "Variable.Set.fold" (middle_end/flambda/flambda_utils.ml[338,14133+4]..[338,14133+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[339,14155+6]..[339,14155+64])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/flambda/flambda_utils.ml[339,14155+11]..[339,14155+13])
                                          Ppat_var "id" (middle_end/flambda/flambda_utils.ml[339,14155+11]..[339,14155+13])
                                        expression (middle_end/flambda/flambda_utils.ml[339,14155+14]..[339,14155+63]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/flambda/flambda_utils.ml[339,14155+14]..[339,14155+16])
                                            Ppat_var "sb" (middle_end/flambda/flambda_utils.ml[339,14155+14]..[339,14155+16])
                                          expression (middle_end/flambda/flambda_utils.ml[339,14155+20]..[339,14155+63])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[339,14155+20]..[339,14155+36])
                                              Pexp_ident "Variable.Map.add" (middle_end/flambda/flambda_utils.ml[339,14155+20]..[339,14155+36])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[339,14155+37]..[339,14155+39])
                                                  Pexp_ident "id" (middle_end/flambda/flambda_utils.ml[339,14155+37]..[339,14155+39])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[339,14155+40]..[339,14155+60])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/flambda_utils.ml[339,14155+41]..[339,14155+56])
                                                    Pexp_ident "Variable.rename" (middle_end/flambda/flambda_utils.ml[339,14155+41]..[339,14155+56])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[339,14155+57]..[339,14155+59])
                                                        Pexp_ident "id" (middle_end/flambda/flambda_utils.ml[339,14155+57]..[339,14155+59])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[339,14155+61]..[339,14155+63])
                                                  Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[339,14155+61]..[339,14155+63])
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[340,14220+6]..[340,14220+20])
                                        Pexp_ident "free_variables" (middle_end/flambda/flambda_utils.ml[340,14220+6]..[340,14220+20])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[340,14220+21]..[340,14220+39])
                                        Pexp_ident "Variable.Map.empty" (middle_end/flambda/flambda_utils.ml[340,14220+21]..[340,14220+39])
                                  ]
                            ]
                            expression (middle_end/flambda/flambda_utils.ml[345,14498+2]..[396,16398+34])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/flambda_utils.ml[345,14498+6]..[345,14498+10])
                                    Ppat_var "body" (middle_end/flambda/flambda_utils.ml[345,14498+6]..[345,14498+10])
                                  expression (middle_end/flambda/flambda_utils.ml[345,14498+13]..[345,14498+42])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_utils.ml[345,14498+13]..[345,14498+34])
                                      Pexp_ident "toplevel_substitution" (middle_end/flambda/flambda_utils.ml[345,14498+13]..[345,14498+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_utils.ml[345,14498+35]..[345,14498+37])
                                          Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[345,14498+35]..[345,14498+37])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_utils.ml[345,14498+38]..[345,14498+42])
                                          Pexp_ident "body" (middle_end/flambda/flambda_utils.ml[345,14498+38]..[345,14498+42])
                                    ]
                              ]
                              expression (middle_end/flambda/flambda_utils.ml[346,14544+2]..[396,16398+34])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/flambda_utils.ml[346,14544+6]..[346,14544+11])
                                      Ppat_var "subst" (middle_end/flambda/flambda_utils.ml[346,14544+6]..[346,14544+11])
                                    expression (middle_end/flambda/flambda_utils.ml[346,14544+12]..[346,14544+40]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/flambda_utils.ml[346,14544+12]..[346,14544+14])
                                        Ppat_var "id" (middle_end/flambda/flambda_utils.ml[346,14544+12]..[346,14544+14])
                                      expression (middle_end/flambda/flambda_utils.ml[346,14544+17]..[346,14544+40])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[346,14544+17]..[346,14544+34])
                                          Pexp_ident "Variable.Map.find" (middle_end/flambda/flambda_utils.ml[346,14544+17]..[346,14544+34])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[346,14544+35]..[346,14544+37])
                                              Pexp_ident "id" (middle_end/flambda/flambda_utils.ml[346,14544+35]..[346,14544+37])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[346,14544+38]..[346,14544+40])
                                              Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[346,14544+38]..[346,14544+40])
                                        ]
                                ]
                                expression (middle_end/flambda/flambda_utils.ml[347,14588+2]..[396,16398+34])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_utils.ml[347,14588+6]..[347,14588+17])
                                        Ppat_var "subst_param" (middle_end/flambda/flambda_utils.ml[347,14588+6]..[347,14588+17])
                                      expression (middle_end/flambda/flambda_utils.ml[347,14588+18]..[347,14588+55]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/flambda/flambda_utils.ml[347,14588+18]..[347,14588+23])
                                          Ppat_var "param" (middle_end/flambda/flambda_utils.ml[347,14588+18]..[347,14588+23])
                                        expression (middle_end/flambda/flambda_utils.ml[347,14588+26]..[347,14588+55])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[347,14588+26]..[347,14588+43])
                                            Pexp_ident "Parameter.map_var" (middle_end/flambda/flambda_utils.ml[347,14588+26]..[347,14588+43])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[347,14588+44]..[347,14588+49])
                                                Pexp_ident "subst" (middle_end/flambda/flambda_utils.ml[347,14588+44]..[347,14588+49])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[347,14588+50]..[347,14588+55])
                                                Pexp_ident "param" (middle_end/flambda/flambda_utils.ml[347,14588+50]..[347,14588+55])
                                          ]
                                  ]
                                  expression (middle_end/flambda/flambda_utils.ml[348,14647+2]..[396,16398+34])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[348,14647+6]..[348,14647+26])
                                          Ppat_var "function_declaration" (middle_end/flambda/flambda_utils.ml[348,14647+6]..[348,14647+26])
                                        expression (middle_end/flambda/flambda_utils.ml[349,14676+4]..[352,14872+66])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[349,14676+4]..[349,14676+39])
                                            Pexp_ident "Flambda.create_function_declaration" (middle_end/flambda/flambda_utils.ml[349,14676+4]..[349,14676+39])
                                          [
                                            <arg>
                                            Labelled "params"
                                              expression (middle_end/flambda/flambda_utils.ml[349,14676+48]..[349,14676+77])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_utils.ml[349,14676+49]..[349,14676+57])
                                                  Pexp_ident "List.map" (middle_end/flambda/flambda_utils.ml[349,14676+49]..[349,14676+57])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[349,14676+58]..[349,14676+69])
                                                      Pexp_ident "subst_param" (middle_end/flambda/flambda_utils.ml[349,14676+58]..[349,14676+69])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[349,14676+70]..[349,14676+76])
                                                      Pexp_ident "params" (middle_end/flambda/flambda_utils.ml[349,14676+70]..[349,14676+76])
                                                ]
                                            <arg>
                                            Labelled "body"
                                              expression (middle_end/flambda/flambda_utils.ml[350,14754+7]..[350,14754+11])
                                                Pexp_ident "body" (middle_end/flambda/flambda_utils.ml[350,14754+7]..[350,14754+11])
                                            <arg>
                                            Labelled "stub"
                                              expression (middle_end/flambda/flambda_utils.ml[350,14754+13]..[350,14754+17])
                                                Pexp_ident "stub" (middle_end/flambda/flambda_utils.ml[350,14754+13]..[350,14754+17])
                                            <arg>
                                            Labelled "dbg"
                                              expression (middle_end/flambda/flambda_utils.ml[350,14754+23]..[350,14754+37])
                                                Pexp_ident "Debuginfo.none" (middle_end/flambda/flambda_utils.ml[350,14754+23]..[350,14754+37])
                                            <arg>
                                            Labelled "inline"
                                              expression (middle_end/flambda/flambda_utils.ml[350,14754+46]..[350,14754+60])
                                                Pexp_construct "Default_inline" (middle_end/flambda/flambda_utils.ml[350,14754+46]..[350,14754+60])
                                                None
                                            <arg>
                                            Labelled "specialise"
                                              expression (middle_end/flambda/flambda_utils.ml[351,14815+18]..[351,14815+36])
                                                Pexp_construct "Default_specialise" (middle_end/flambda/flambda_utils.ml[351,14815+18]..[351,14815+36])
                                                None
                                            <arg>
                                            Labelled "is_a_functor"
                                              expression (middle_end/flambda/flambda_utils.ml[351,14815+51]..[351,14815+56])
                                                Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[351,14815+51]..[351,14815+56])
                                                None
                                            <arg>
                                            Labelled "closure_origin"
                                              expression (middle_end/flambda/flambda_utils.ml[352,14872+22]..[352,14872+66])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_utils.ml[352,14872+23]..[352,14872+44])
                                                  Pexp_ident "Closure_origin.create" (middle_end/flambda/flambda_utils.ml[352,14872+23]..[352,14872+44])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[352,14872+45]..[352,14872+65])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_utils.ml[352,14872+46]..[352,14872+61])
                                                        Pexp_ident "Closure_id.wrap" (middle_end/flambda/flambda_utils.ml[352,14872+46]..[352,14872+61])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_utils.ml[352,14872+62]..[352,14872+64])
                                                            Pexp_ident "id" (middle_end/flambda/flambda_utils.ml[352,14872+62]..[352,14872+64])
                                                      ]
                                                ]
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[354,14944+2]..[396,16398+34])
                                      Pexp_sequence
                                      expression (middle_end/flambda/flambda_utils.ml[354,14944+2]..[355,15013+40])
                                        Pexp_assert
                                        expression (middle_end/flambda/flambda_utils.ml[354,14944+9]..[355,15013+40])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[354,14944+10]..[354,14944+28])
                                            Pexp_ident "Variable.Set.equal" (middle_end/flambda/flambda_utils.ml[354,14944+10]..[354,14944+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[354,14944+29]..[354,14944+68])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_utils.ml[354,14944+30]..[354,14944+46])
                                                  Pexp_ident "Variable.Set.map" (middle_end/flambda/flambda_utils.ml[354,14944+30]..[354,14944+46])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[354,14944+47]..[354,14944+52])
                                                      Pexp_ident "subst" (middle_end/flambda/flambda_utils.ml[354,14944+47]..[354,14944+52])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[354,14944+53]..[354,14944+67])
                                                      Pexp_ident "free_variables" (middle_end/flambda/flambda_utils.ml[354,14944+53]..[354,14944+67])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[355,15013+4]..[355,15013+39])
                                                Pexp_field
                                                expression (middle_end/flambda/flambda_utils.ml[355,15013+4]..[355,15013+24])
                                                  Pexp_ident "function_declaration" (middle_end/flambda/flambda_utils.ml[355,15013+4]..[355,15013+24])
                                                "free_variables" (middle_end/flambda/flambda_utils.ml[355,15013+25]..[355,15013+39])
                                          ]
                                      expression (middle_end/flambda/flambda_utils.ml[356,15055+2]..[396,16398+34])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/flambda_utils.ml[356,15055+6]..[356,15055+15])
                                              Ppat_var "free_vars" (middle_end/flambda/flambda_utils.ml[356,15055+6]..[356,15055+15])
                                            expression (middle_end/flambda/flambda_utils.ml[357,15073+4]..[367,15376+24])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_utils.ml[357,15073+4]..[357,15073+21])
                                                Pexp_ident "Variable.Map.fold" (middle_end/flambda/flambda_utils.ml[357,15073+4]..[357,15073+21])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[357,15073+22]..[363,15237+41])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (middle_end/flambda/flambda_utils.ml[357,15073+27]..[357,15073+29])
                                                      Ppat_var "id" (middle_end/flambda/flambda_utils.ml[357,15073+27]..[357,15073+29])
                                                    expression (middle_end/flambda/flambda_utils.ml[357,15073+30]..[363,15237+40]) ghost
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (middle_end/flambda/flambda_utils.ml[357,15073+30]..[357,15073+33])
                                                        Ppat_var "id'" (middle_end/flambda/flambda_utils.ml[357,15073+30]..[357,15073+33])
                                                      expression (middle_end/flambda/flambda_utils.ml[357,15073+34]..[363,15237+40]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (middle_end/flambda/flambda_utils.ml[357,15073+34]..[357,15073+37])
                                                          Ppat_var "fv'" (middle_end/flambda/flambda_utils.ml[357,15073+34]..[357,15073+37])
                                                        expression (middle_end/flambda/flambda_utils.ml[358,15114+8]..[363,15237+40])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (middle_end/flambda/flambda_utils.ml[358,15114+12]..[358,15114+44]) ghost
                                                                Ppat_constraint
                                                                pattern (middle_end/flambda/flambda_utils.ml[358,15114+12]..[358,15114+19])
                                                                  Ppat_var "spec_to" (middle_end/flambda/flambda_utils.ml[358,15114+12]..[358,15114+19])
                                                                core_type (middle_end/flambda/flambda_utils.ml[358,15114+22]..[358,15114+44]) ghost
                                                                  Ptyp_poly
                                                                  core_type (middle_end/flambda/flambda_utils.ml[358,15114+22]..[358,15114+44])
                                                                    Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/flambda_utils.ml[358,15114+22]..[358,15114+44])
                                                                    []
                                                              expression (middle_end/flambda/flambda_utils.ml[358,15114+12]..[361,15214+11])
                                                                Pexp_constraint
                                                                expression (middle_end/flambda/flambda_utils.ml[359,15161+10]..[361,15214+11])
                                                                  Pexp_record
                                                                  [
                                                                    "var" (middle_end/flambda/flambda_utils.ml[359,15161+12]..[359,15161+15])
                                                                      expression (middle_end/flambda/flambda_utils.ml[359,15161+18]..[359,15161+20])
Pexp_ident "id" (middle_end/flambda/flambda_utils.ml[359,15161+18]..[359,15161+20])
                                                                    "projection" (middle_end/flambda/flambda_utils.ml[360,15183+12]..[360,15183+22])
                                                                      expression (middle_end/flambda/flambda_utils.ml[360,15183+25]..[360,15183+29])
Pexp_construct "None" (middle_end/flambda/flambda_utils.ml[360,15183+25]..[360,15183+29])
None
                                                                  ]
                                                                  None
                                                                core_type (middle_end/flambda/flambda_utils.ml[358,15114+22]..[358,15114+44])
                                                                  Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/flambda_utils.ml[358,15114+22]..[358,15114+44])
                                                                  []
                                                          ]
                                                          expression (middle_end/flambda/flambda_utils.ml[363,15237+8]..[363,15237+40])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/flambda_utils.ml[363,15237+8]..[363,15237+24])
                                                              Pexp_ident "Variable.Map.add" (middle_end/flambda/flambda_utils.ml[363,15237+8]..[363,15237+24])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_utils.ml[363,15237+25]..[363,15237+28])
                                                                  Pexp_ident "id'" (middle_end/flambda/flambda_utils.ml[363,15237+25]..[363,15237+28])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_utils.ml[363,15237+29]..[363,15237+36])
                                                                  Pexp_ident "spec_to" (middle_end/flambda/flambda_utils.ml[363,15237+29]..[363,15237+36])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_utils.ml[363,15237+37]..[363,15237+40])
                                                                  Pexp_ident "fv'" (middle_end/flambda/flambda_utils.ml[363,15237+37]..[363,15237+40])
                                                            ]
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[364,15279+6]..[366,15364+11])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_utils.ml[364,15279+7]..[364,15279+26])
                                                      Pexp_ident "Variable.Map.filter" (middle_end/flambda/flambda_utils.ml[364,15279+7]..[364,15279+26])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[365,15306+8]..[365,15306+57])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (middle_end/flambda/flambda_utils.ml[365,15306+13]..[365,15306+15])
                                                            Ppat_var "id" (middle_end/flambda/flambda_utils.ml[365,15306+13]..[365,15306+15])
                                                          expression (middle_end/flambda/flambda_utils.ml[365,15306+16]..[365,15306+56]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (middle_end/flambda/flambda_utils.ml[365,15306+16]..[365,15306+17])
                                                              Ppat_any
                                                            expression (middle_end/flambda/flambda_utils.ml[365,15306+21]..[365,15306+56])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/flambda_utils.ml[365,15306+21]..[365,15306+24])
                                                                Pexp_ident "not" (middle_end/flambda/flambda_utils.ml[365,15306+21]..[365,15306+24])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/flambda_utils.ml[365,15306+25]..[365,15306+56])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/flambda_utils.ml[365,15306+26]..[365,15306+42])
                                                                      Pexp_ident "Variable.Set.mem" (middle_end/flambda/flambda_utils.ml[365,15306+26]..[365,15306+42])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/flambda_utils.ml[365,15306+43]..[365,15306+45])
  Pexp_ident "id" (middle_end/flambda/flambda_utils.ml[365,15306+43]..[365,15306+45])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/flambda_utils.ml[365,15306+46]..[365,15306+55])
  Pexp_ident "param_set" (middle_end/flambda/flambda_utils.ml[365,15306+46]..[365,15306+55])
                                                                    ]
                                                              ]
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[366,15364+8]..[366,15364+10])
                                                          Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[366,15364+8]..[366,15364+10])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[367,15376+6]..[367,15376+24])
                                                    Pexp_ident "Variable.Map.empty" (middle_end/flambda/flambda_utils.ml[367,15376+6]..[367,15376+24])
                                              ]
                                        ]
                                        expression (middle_end/flambda/flambda_utils.ml[369,15406+2]..[396,16398+34])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/flambda_utils.ml[369,15406+6]..[369,15406+22])
                                                Ppat_var "compilation_unit" (middle_end/flambda/flambda_utils.ml[369,15406+6]..[369,15406+22])
                                              expression (middle_end/flambda/flambda_utils.ml[369,15406+25]..[369,15406+60])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_utils.ml[369,15406+25]..[369,15406+57])
                                                  Pexp_ident "Compilation_unit.get_current_exn" (middle_end/flambda/flambda_utils.ml[369,15406+25]..[369,15406+57])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[369,15406+58]..[369,15406+60])
                                                      Pexp_construct "()" (middle_end/flambda/flambda_utils.ml[369,15406+58]..[369,15406+60])
                                                      None
                                                ]
                                          ]
                                          expression (middle_end/flambda/flambda_utils.ml[370,15470+2]..[396,16398+34])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/flambda_utils.ml[370,15470+6]..[370,15470+25])
                                                  Ppat_var "set_of_closures_var" (middle_end/flambda/flambda_utils.ml[370,15470+6]..[370,15470+25])
                                                expression (middle_end/flambda/flambda_utils.ml[371,15498+4]..[372,15558+48])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/flambda_utils.ml[371,15498+4]..[371,15498+19])
                                                    Pexp_ident "Variable.create" (middle_end/flambda/flambda_utils.ml[371,15498+4]..[371,15498+19])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[371,15498+20]..[371,15498+59])
                                                        Pexp_ident "Internal_variable_names.set_of_closures" (middle_end/flambda/flambda_utils.ml[371,15498+20]..[371,15498+59])
                                                    <arg>
                                                    Labelled "current_compilation_unit"
                                                      expression (middle_end/flambda/flambda_utils.ml[372,15558+32]..[372,15558+48])
                                                        Pexp_ident "compilation_unit" (middle_end/flambda/flambda_utils.ml[372,15558+32]..[372,15558+48])
                                                  ]
                                            ]
                                            expression (middle_end/flambda/flambda_utils.ml[374,15612+2]..[396,16398+34])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/flambda_utils.ml[374,15612+6]..[374,15612+21])
                                                    Ppat_var "set_of_closures" (middle_end/flambda/flambda_utils.ml[374,15612+6]..[374,15612+21])
                                                  expression (middle_end/flambda/flambda_utils.ml[375,15636+4]..[382,15904+48])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/flambda/flambda_utils.ml[375,15636+8]..[375,15636+22])
                                                          Ppat_var "function_decls" (middle_end/flambda/flambda_utils.ml[375,15636+8]..[375,15636+22])
                                                        expression (middle_end/flambda/flambda_utils.ml[376,15661+6]..[378,15729+62])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_utils.ml[376,15661+6]..[376,15661+42])
                                                            Pexp_ident "Flambda.create_function_declarations" (middle_end/flambda/flambda_utils.ml[376,15661+6]..[376,15661+42])
                                                          [
                                                            <arg>
                                                            Labelled "is_classic_mode"
                                                              expression (middle_end/flambda/flambda_utils.ml[377,15704+9]..[377,15704+24])
                                                                Pexp_ident "is_classic_mode" (middle_end/flambda/flambda_utils.ml[377,15704+9]..[377,15704+24])
                                                            <arg>
                                                            Labelled "funs"
                                                              expression (middle_end/flambda/flambda_utils.ml[378,15729+14]..[378,15729+62])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/flambda_utils.ml[378,15729+15]..[378,15729+37])
                                                                  Pexp_ident "Variable.Map.singleton" (middle_end/flambda/flambda_utils.ml[378,15729+15]..[378,15729+37])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/flambda_utils.ml[378,15729+38]..[378,15729+40])
                                                                      Pexp_ident "id" (middle_end/flambda/flambda_utils.ml[378,15729+38]..[378,15729+40])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/flambda_utils.ml[378,15729+41]..[378,15729+61])
                                                                      Pexp_ident "function_declaration" (middle_end/flambda/flambda_utils.ml[378,15729+41]..[378,15729+61])
                                                                ]
                                                          ]
                                                    ]
                                                    expression (middle_end/flambda/flambda_utils.ml[380,15799+4]..[382,15904+48])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_utils.ml[380,15799+4]..[380,15799+34])
                                                        Pexp_ident "Flambda.create_set_of_closures" (middle_end/flambda/flambda_utils.ml[380,15799+4]..[380,15799+34])
                                                      [
                                                        <arg>
                                                        Labelled "function_decls"
                                                          expression (middle_end/flambda/flambda_utils.ml[380,15799+36]..[380,15799+50])
                                                            Pexp_ident "function_decls" (middle_end/flambda/flambda_utils.ml[380,15799+36]..[380,15799+50])
                                                        <arg>
                                                        Labelled "free_vars"
                                                          expression (middle_end/flambda/flambda_utils.ml[380,15799+52]..[380,15799+61])
                                                            Pexp_ident "free_vars" (middle_end/flambda/flambda_utils.ml[380,15799+52]..[380,15799+61])
                                                        <arg>
                                                        Labelled "specialised_args"
                                                          expression (middle_end/flambda/flambda_utils.ml[381,15861+24]..[381,15861+42])
                                                            Pexp_ident "Variable.Map.empty" (middle_end/flambda/flambda_utils.ml[381,15861+24]..[381,15861+42])
                                                        <arg>
                                                        Labelled "direct_call_surrogates"
                                                          expression (middle_end/flambda/flambda_utils.ml[382,15904+30]..[382,15904+48])
                                                            Pexp_ident "Variable.Map.empty" (middle_end/flambda/flambda_utils.ml[382,15904+30]..[382,15904+48])
                                                      ]
                                              ]
                                              expression (middle_end/flambda/flambda_utils.ml[384,15958+2]..[396,16398+34])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/flambda_utils.ml[384,15958+6]..[384,15958+37]) ghost
                                                      Ppat_constraint
                                                      pattern (middle_end/flambda/flambda_utils.ml[384,15958+6]..[384,15958+21])
                                                        Ppat_var "project_closure" (middle_end/flambda/flambda_utils.ml[384,15958+6]..[384,15958+21])
                                                      core_type (middle_end/flambda/flambda_utils.ml[384,15958+24]..[384,15958+37]) ghost
                                                        Ptyp_poly
                                                        core_type (middle_end/flambda/flambda_utils.ml[384,15958+24]..[384,15958+37])
                                                          Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_utils.ml[384,15958+24]..[384,15958+37])
                                                          []
                                                    expression (middle_end/flambda/flambda_utils.ml[384,15958+6]..[388,16108+7])
                                                      Pexp_constraint
                                                      expression (middle_end/flambda/flambda_utils.ml[385,15998+4]..[388,16108+7])
                                                        Pexp_construct "Project_closure" (middle_end/flambda/flambda_utils.ml[385,15998+4]..[385,15998+19])
                                                        Some
                                                          expression (middle_end/flambda/flambda_utils.ml[385,15998+20]..[388,16108+7])
                                                            Pexp_record
                                                            [
                                                              "set_of_closures" (middle_end/flambda/flambda_utils.ml[386,16020+8]..[386,16020+23])
                                                                expression (middle_end/flambda/flambda_utils.ml[386,16020+26]..[386,16020+45])
                                                                  Pexp_ident "set_of_closures_var" (middle_end/flambda/flambda_utils.ml[386,16020+26]..[386,16020+45])
                                                              "closure_id" (middle_end/flambda/flambda_utils.ml[387,16067+8]..[387,16067+18])
                                                                expression (middle_end/flambda/flambda_utils.ml[387,16067+21]..[387,16067+39])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/flambda_utils.ml[387,16067+21]..[387,16067+36])
                                                                    Pexp_ident "Closure_id.wrap" (middle_end/flambda/flambda_utils.ml[387,16067+21]..[387,16067+36])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/flambda_utils.ml[387,16067+37]..[387,16067+39])
Pexp_ident "id" (middle_end/flambda/flambda_utils.ml[387,16067+37]..[387,16067+39])
                                                                  ]
                                                            ]
                                                            None
                                                      core_type (middle_end/flambda/flambda_utils.ml[384,15958+24]..[384,15958+37])
                                                        Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_utils.ml[384,15958+24]..[384,15958+37])
                                                        []
                                                ]
                                                expression (middle_end/flambda/flambda_utils.ml[390,16121+2]..[396,16398+34])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/flambda_utils.ml[390,16121+6]..[390,16121+25])
                                                        Ppat_var "project_closure_var" (middle_end/flambda/flambda_utils.ml[390,16121+6]..[390,16121+25])
                                                      expression (middle_end/flambda/flambda_utils.ml[391,16149+4]..[392,16209+48])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/flambda_utils.ml[391,16149+4]..[391,16149+19])
                                                          Pexp_ident "Variable.create" (middle_end/flambda/flambda_utils.ml[391,16149+4]..[391,16149+19])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/flambda_utils.ml[391,16149+20]..[391,16149+59])
                                                              Pexp_ident "Internal_variable_names.project_closure" (middle_end/flambda/flambda_utils.ml[391,16149+20]..[391,16149+59])
                                                          <arg>
                                                          Labelled "current_compilation_unit"
                                                            expression (middle_end/flambda/flambda_utils.ml[392,16209+32]..[392,16209+48])
                                                              Pexp_ident "compilation_unit" (middle_end/flambda/flambda_utils.ml[392,16209+32]..[392,16209+48])
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/flambda_utils.ml[394,16263+2]..[396,16398+34])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_utils.ml[394,16263+2]..[394,16263+20])
                                                      Pexp_ident "Flambda.create_let" (middle_end/flambda/flambda_utils.ml[394,16263+2]..[394,16263+20])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[394,16263+21]..[394,16263+40])
                                                          Pexp_ident "set_of_closures_var" (middle_end/flambda/flambda_utils.ml[394,16263+21]..[394,16263+40])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[394,16263+41]..[394,16263+74])
                                                          Pexp_construct "Set_of_closures" (middle_end/flambda/flambda_utils.ml[394,16263+42]..[394,16263+57])
                                                          Some
                                                            expression (middle_end/flambda/flambda_utils.ml[394,16263+58]..[394,16263+73])
                                                              Pexp_ident "set_of_closures" (middle_end/flambda/flambda_utils.ml[394,16263+58]..[394,16263+73])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[395,16338+4]..[396,16398+34])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_utils.ml[395,16338+5]..[395,16338+23])
                                                            Pexp_ident "Flambda.create_let" (middle_end/flambda/flambda_utils.ml[395,16338+5]..[395,16338+23])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_utils.ml[395,16338+24]..[395,16338+43])
                                                                Pexp_ident "project_closure_var" (middle_end/flambda/flambda_utils.ml[395,16338+24]..[395,16338+43])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_utils.ml[395,16338+44]..[395,16338+59])
                                                                Pexp_ident "project_closure" (middle_end/flambda/flambda_utils.ml[395,16338+44]..[395,16338+59])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_utils.ml[396,16398+6]..[396,16398+33])
                                                                Pexp_construct "Var" (middle_end/flambda/flambda_utils.ml[396,16398+7]..[396,16398+10])
                                                                Some
                                                                  expression (middle_end/flambda/flambda_utils.ml[396,16398+11]..[396,16398+32])
                                                                    Pexp_ident "project_closure_var" (middle_end/flambda/flambda_utils.ml[396,16398+12]..[396,16398+31])
                                                          ]
                                                    ]
                    core_type (middle_end/flambda/flambda_utils.ml[331,13824+49]..[331,13824+58])
                      Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_utils.ml[331,13824+49]..[331,13824+58])
                      []
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[398,16434+0]..[401,16549+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[398,16434+4]..[398,16434+8])
          Ppat_var "bind" (middle_end/flambda/flambda_utils.ml[398,16434+4]..[398,16434+8])
        expression (middle_end/flambda/flambda_utils.ml[398,16434+9]..[401,16549+17]) ghost
          Pexp_fun
          Labelled "bindings"
          None
          pattern (middle_end/flambda/flambda_utils.ml[398,16434+10]..[398,16434+18])
            Ppat_var "bindings" (middle_end/flambda/flambda_utils.ml[398,16434+10]..[398,16434+18])
          expression (middle_end/flambda/flambda_utils.ml[398,16434+19]..[401,16549+17]) ghost
            Pexp_fun
            Labelled "body"
            None
            pattern (middle_end/flambda/flambda_utils.ml[398,16434+20]..[398,16434+24])
              Ppat_var "body" (middle_end/flambda/flambda_utils.ml[398,16434+20]..[398,16434+24])
            expression (middle_end/flambda/flambda_utils.ml[399,16461+2]..[401,16549+17])
              Pexp_apply
              expression (middle_end/flambda/flambda_utils.ml[399,16461+2]..[399,16461+16])
                Pexp_ident "List.fold_left" (middle_end/flambda/flambda_utils.ml[399,16461+2]..[399,16461+16])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[399,16461+17]..[400,16506+42])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_utils.ml[399,16461+22]..[399,16461+26])
                      Ppat_var "expr" (middle_end/flambda/flambda_utils.ml[399,16461+22]..[399,16461+26])
                    expression (middle_end/flambda/flambda_utils.ml[399,16461+27]..[400,16506+41]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/flambda_utils.ml[399,16461+27]..[399,16461+41])
                        Ppat_tuple
                        [
                          pattern (middle_end/flambda/flambda_utils.ml[399,16461+28]..[399,16461+31])
                            Ppat_var "var" (middle_end/flambda/flambda_utils.ml[399,16461+28]..[399,16461+31])
                          pattern (middle_end/flambda/flambda_utils.ml[399,16461+33]..[399,16461+40])
                            Ppat_var "var_def" (middle_end/flambda/flambda_utils.ml[399,16461+33]..[399,16461+40])
                        ]
                      expression (middle_end/flambda/flambda_utils.ml[400,16506+6]..[400,16506+41])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_utils.ml[400,16506+6]..[400,16506+24])
                          Pexp_ident "Flambda.create_let" (middle_end/flambda/flambda_utils.ml[400,16506+6]..[400,16506+24])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[400,16506+25]..[400,16506+28])
                              Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[400,16506+25]..[400,16506+28])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[400,16506+29]..[400,16506+36])
                              Pexp_ident "var_def" (middle_end/flambda/flambda_utils.ml[400,16506+29]..[400,16506+36])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[400,16506+37]..[400,16506+41])
                              Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[400,16506+37]..[400,16506+41])
                        ]
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[401,16549+4]..[401,16549+8])
                    Pexp_ident "body" (middle_end/flambda/flambda_utils.ml[401,16549+4]..[401,16549+8])
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[401,16549+9]..[401,16549+17])
                    Pexp_ident "bindings" (middle_end/flambda/flambda_utils.ml[401,16549+9]..[401,16549+17])
              ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[403,16568+0]..[415,17026+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[403,16568+4]..[403,16568+24])
          Ppat_var "all_lifted_constants" (middle_end/flambda/flambda_utils.ml[403,16568+4]..[403,16568+24])
        expression (middle_end/flambda/flambda_utils.ml[403,16568+25]..[415,17026+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[403,16568+25]..[403,16568+52])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[403,16568+26]..[403,16568+33])
              Ppat_var "program" (middle_end/flambda/flambda_utils.ml[403,16568+26]..[403,16568+33])
            core_type (middle_end/flambda/flambda_utils.ml[403,16568+36]..[403,16568+51])
              Ptyp_constr "Flambda.program" (middle_end/flambda/flambda_utils.ml[403,16568+36]..[403,16568+51])
              []
          expression (middle_end/flambda/flambda_utils.ml[404,16623+2]..[415,17026+27])
            Pexp_let Rec
            [
              <def>
                pattern (middle_end/flambda/flambda_utils.ml[404,16623+10]..[404,16623+14])
                  Ppat_var "loop" (middle_end/flambda/flambda_utils.ml[404,16623+10]..[404,16623+14])
                expression (middle_end/flambda/flambda_utils.ml[404,16623+15]..[413,17003+17]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/flambda_utils.ml[404,16623+15]..[404,16623+47])
                    Ppat_constraint
                    pattern (middle_end/flambda/flambda_utils.ml[404,16623+16]..[404,16623+23])
                      Ppat_var "program" (middle_end/flambda/flambda_utils.ml[404,16623+16]..[404,16623+23])
                    core_type (middle_end/flambda/flambda_utils.ml[404,16623+26]..[404,16623+46])
                      Ptyp_constr "Flambda.program_body" (middle_end/flambda/flambda_utils.ml[404,16623+26]..[404,16623+46])
                      []
                  expression (middle_end/flambda/flambda_utils.ml[405,16673+4]..[413,17003+17])
                    Pexp_match
                    expression (middle_end/flambda/flambda_utils.ml[405,16673+10]..[405,16673+17])
                      Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[405,16673+10]..[405,16673+17])
                    [
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[406,16696+6]..[406,16696+40])
                          Ppat_construct "Let_symbol" (middle_end/flambda/flambda_utils.ml[406,16696+6]..[406,16696+16])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[406,16696+17]..[406,16696+40])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/flambda_utils.ml[406,16696+18]..[406,16696+24])
                                  Ppat_var "symbol" (middle_end/flambda/flambda_utils.ml[406,16696+18]..[406,16696+24])
                                pattern (middle_end/flambda/flambda_utils.ml[406,16696+26]..[406,16696+30])
                                  Ppat_var "decl" (middle_end/flambda/flambda_utils.ml[406,16696+26]..[406,16696+30])
                                pattern (middle_end/flambda/flambda_utils.ml[406,16696+32]..[406,16696+39])
                                  Ppat_var "program" (middle_end/flambda/flambda_utils.ml[406,16696+32]..[406,16696+39])
                              ]
                        expression (middle_end/flambda/flambda_utils.ml[406,16696+44]..[406,16696+76])
                          Pexp_construct "::" (middle_end/flambda/flambda_utils.ml[406,16696+59]..[406,16696+61])
                          Some
                            expression (middle_end/flambda/flambda_utils.ml[406,16696+44]..[406,16696+76]) ghost
                              Pexp_tuple
                              [
                                expression (middle_end/flambda/flambda_utils.ml[406,16696+44]..[406,16696+58])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/flambda_utils.ml[406,16696+45]..[406,16696+51])
                                      Pexp_ident "symbol" (middle_end/flambda/flambda_utils.ml[406,16696+45]..[406,16696+51])
                                    expression (middle_end/flambda/flambda_utils.ml[406,16696+53]..[406,16696+57])
                                      Pexp_ident "decl" (middle_end/flambda/flambda_utils.ml[406,16696+53]..[406,16696+57])
                                  ]
                                expression (middle_end/flambda/flambda_utils.ml[406,16696+62]..[406,16696+76])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_utils.ml[406,16696+63]..[406,16696+67])
                                    Pexp_ident "loop" (middle_end/flambda/flambda_utils.ml[406,16696+63]..[406,16696+67])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[406,16696+68]..[406,16696+75])
                                        Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[406,16696+68]..[406,16696+75])
                                  ]
                              ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[407,16773+6]..[407,16773+37])
                          Ppat_construct "Let_rec_symbol" (middle_end/flambda/flambda_utils.ml[407,16773+6]..[407,16773+20])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[407,16773+21]..[407,16773+37])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/flambda_utils.ml[407,16773+22]..[407,16773+27])
                                  Ppat_var "decls" (middle_end/flambda/flambda_utils.ml[407,16773+22]..[407,16773+27])
                                pattern (middle_end/flambda/flambda_utils.ml[407,16773+29]..[407,16773+36])
                                  Ppat_var "program" (middle_end/flambda/flambda_utils.ml[407,16773+29]..[407,16773+36])
                              ]
                        expression (middle_end/flambda/flambda_utils.ml[408,16814+6]..[410,16904+13])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[408,16814+6]..[408,16814+20])
                            Pexp_ident "List.fold_left" (middle_end/flambda/flambda_utils.ml[408,16814+6]..[408,16814+20])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[408,16814+21]..[408,16814+66])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/flambda_utils.ml[408,16814+26]..[408,16814+27])
                                  Ppat_var "l" (middle_end/flambda/flambda_utils.ml[408,16814+26]..[408,16814+27])
                                expression (middle_end/flambda/flambda_utils.ml[408,16814+28]..[408,16814+65]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/flambda_utils.ml[408,16814+28]..[408,16814+42])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/flambda_utils.ml[408,16814+29]..[408,16814+35])
                                        Ppat_var "symbol" (middle_end/flambda/flambda_utils.ml[408,16814+29]..[408,16814+35])
                                      pattern (middle_end/flambda/flambda_utils.ml[408,16814+37]..[408,16814+41])
                                        Ppat_var "decl" (middle_end/flambda/flambda_utils.ml[408,16814+37]..[408,16814+41])
                                    ]
                                  expression (middle_end/flambda/flambda_utils.ml[408,16814+46]..[408,16814+65])
                                    Pexp_construct "::" (middle_end/flambda/flambda_utils.ml[408,16814+61]..[408,16814+63])
                                    Some
                                      expression (middle_end/flambda/flambda_utils.ml[408,16814+46]..[408,16814+65]) ghost
                                        Pexp_tuple
                                        [
                                          expression (middle_end/flambda/flambda_utils.ml[408,16814+46]..[408,16814+60])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/flambda/flambda_utils.ml[408,16814+47]..[408,16814+53])
                                                Pexp_ident "symbol" (middle_end/flambda/flambda_utils.ml[408,16814+47]..[408,16814+53])
                                              expression (middle_end/flambda/flambda_utils.ml[408,16814+55]..[408,16814+59])
                                                Pexp_ident "decl" (middle_end/flambda/flambda_utils.ml[408,16814+55]..[408,16814+59])
                                            ]
                                          expression (middle_end/flambda/flambda_utils.ml[408,16814+64]..[408,16814+65])
                                            Pexp_ident "l" (middle_end/flambda/flambda_utils.ml[408,16814+64]..[408,16814+65])
                                        ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[409,16881+8]..[409,16881+22])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[409,16881+9]..[409,16881+13])
                                  Pexp_ident "loop" (middle_end/flambda/flambda_utils.ml[409,16881+9]..[409,16881+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[409,16881+14]..[409,16881+21])
                                      Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[409,16881+14]..[409,16881+21])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[410,16904+8]..[410,16904+13])
                                Pexp_ident "decls" (middle_end/flambda/flambda_utils.ml[410,16904+8]..[410,16904+13])
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[411,16918+6]..[412,16961+25])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[411,16918+6]..[411,16918+42])
                            Ppat_construct "Initialize_symbol" (middle_end/flambda/flambda_utils.ml[411,16918+6]..[411,16918+23])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_utils.ml[411,16918+24]..[411,16918+42])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_utils.ml[411,16918+25]..[411,16918+26])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_utils.ml[411,16918+28]..[411,16918+29])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_utils.ml[411,16918+31]..[411,16918+32])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_utils.ml[411,16918+34]..[411,16918+41])
                                    Ppat_var "program" (middle_end/flambda/flambda_utils.ml[411,16918+34]..[411,16918+41])
                                ]
                          pattern (middle_end/flambda/flambda_utils.ml[412,16961+6]..[412,16961+25])
                            Ppat_construct "Effect" (middle_end/flambda/flambda_utils.ml[412,16961+6]..[412,16961+12])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_utils.ml[412,16961+13]..[412,16961+25])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_utils.ml[412,16961+14]..[412,16961+15])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_utils.ml[412,16961+17]..[412,16961+24])
                                    Ppat_var "program" (middle_end/flambda/flambda_utils.ml[412,16961+17]..[412,16961+24])
                                ]
                        expression (middle_end/flambda/flambda_utils.ml[412,16961+29]..[412,16961+41])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[412,16961+29]..[412,16961+33])
                            Pexp_ident "loop" (middle_end/flambda/flambda_utils.ml[412,16961+29]..[412,16961+33])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[412,16961+34]..[412,16961+41])
                                Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[412,16961+34]..[412,16961+41])
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[413,17003+6]..[413,17003+11])
                          Ppat_construct "End" (middle_end/flambda/flambda_utils.ml[413,17003+6]..[413,17003+9])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[413,17003+10]..[413,17003+11])
                              Ppat_any
                        expression (middle_end/flambda/flambda_utils.ml[413,17003+15]..[413,17003+17])
                          Pexp_construct "[]" (middle_end/flambda/flambda_utils.ml[413,17003+15]..[413,17003+17])
                          None
                    ]
            ]
            expression (middle_end/flambda/flambda_utils.ml[415,17026+2]..[415,17026+27])
              Pexp_apply
              expression (middle_end/flambda/flambda_utils.ml[415,17026+2]..[415,17026+6])
                Pexp_ident "loop" (middle_end/flambda/flambda_utils.ml[415,17026+2]..[415,17026+6])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[415,17026+7]..[415,17026+27])
                    Pexp_field
                    expression (middle_end/flambda/flambda_utils.ml[415,17026+7]..[415,17026+14])
                      Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[415,17026+7]..[415,17026+14])
                    "program_body" (middle_end/flambda/flambda_utils.ml[415,17026+15]..[415,17026+27])
              ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[417,17055+0]..[418,17097+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[417,17055+4]..[417,17055+31])
          Ppat_var "all_lifted_constants_as_map" (middle_end/flambda/flambda_utils.ml[417,17055+4]..[417,17055+31])
        expression (middle_end/flambda/flambda_utils.ml[417,17055+32]..[418,17097+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[417,17055+32]..[417,17055+39])
            Ppat_var "program" (middle_end/flambda/flambda_utils.ml[417,17055+32]..[417,17055+39])
          expression (middle_end/flambda/flambda_utils.ml[418,17097+2]..[418,17097+51])
            Pexp_apply
            expression (middle_end/flambda/flambda_utils.ml[418,17097+2]..[418,17097+20])
              Pexp_ident "Symbol.Map.of_list" (middle_end/flambda/flambda_utils.ml[418,17097+2]..[418,17097+20])
            [
              <arg>
              Nolabel
                expression (middle_end/flambda/flambda_utils.ml[418,17097+21]..[418,17097+51])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[418,17097+22]..[418,17097+42])
                    Pexp_ident "all_lifted_constants" (middle_end/flambda/flambda_utils.ml[418,17097+22]..[418,17097+42])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[418,17097+43]..[418,17097+50])
                        Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[418,17097+43]..[418,17097+50])
                  ]
            ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[420,17150+0]..[430,17512+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[420,17150+4]..[420,17150+22])
          Ppat_var "initialize_symbols" (middle_end/flambda/flambda_utils.ml[420,17150+4]..[420,17150+22])
        expression (middle_end/flambda/flambda_utils.ml[420,17150+23]..[430,17512+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[420,17150+23]..[420,17150+50])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[420,17150+24]..[420,17150+31])
              Ppat_var "program" (middle_end/flambda/flambda_utils.ml[420,17150+24]..[420,17150+31])
            core_type (middle_end/flambda/flambda_utils.ml[420,17150+34]..[420,17150+49])
              Ptyp_constr "Flambda.program" (middle_end/flambda/flambda_utils.ml[420,17150+34]..[420,17150+49])
              []
          expression (middle_end/flambda/flambda_utils.ml[421,17203+2]..[430,17512+27])
            Pexp_let Rec
            [
              <def>
                pattern (middle_end/flambda/flambda_utils.ml[421,17203+10]..[421,17203+14])
                  Ppat_var "loop" (middle_end/flambda/flambda_utils.ml[421,17203+10]..[421,17203+14])
                expression (middle_end/flambda/flambda_utils.ml[421,17203+15]..[428,17489+17]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/flambda_utils.ml[421,17203+15]..[421,17203+47])
                    Ppat_constraint
                    pattern (middle_end/flambda/flambda_utils.ml[421,17203+16]..[421,17203+23])
                      Ppat_var "program" (middle_end/flambda/flambda_utils.ml[421,17203+16]..[421,17203+23])
                    core_type (middle_end/flambda/flambda_utils.ml[421,17203+26]..[421,17203+46])
                      Ptyp_constr "Flambda.program_body" (middle_end/flambda/flambda_utils.ml[421,17203+26]..[421,17203+46])
                      []
                  expression (middle_end/flambda/flambda_utils.ml[422,17253+4]..[428,17489+17])
                    Pexp_match
                    expression (middle_end/flambda/flambda_utils.ml[422,17253+10]..[422,17253+17])
                      Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[422,17253+10]..[422,17253+17])
                    [
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[423,17276+6]..[423,17276+54])
                          Ppat_construct "Initialize_symbol" (middle_end/flambda/flambda_utils.ml[423,17276+6]..[423,17276+23])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[423,17276+24]..[423,17276+54])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/flambda_utils.ml[423,17276+25]..[423,17276+31])
                                  Ppat_var "symbol" (middle_end/flambda/flambda_utils.ml[423,17276+25]..[423,17276+31])
                                pattern (middle_end/flambda/flambda_utils.ml[423,17276+33]..[423,17276+36])
                                  Ppat_var "tag" (middle_end/flambda/flambda_utils.ml[423,17276+33]..[423,17276+36])
                                pattern (middle_end/flambda/flambda_utils.ml[423,17276+38]..[423,17276+44])
                                  Ppat_var "fields" (middle_end/flambda/flambda_utils.ml[423,17276+38]..[423,17276+44])
                                pattern (middle_end/flambda/flambda_utils.ml[423,17276+46]..[423,17276+53])
                                  Ppat_var "program" (middle_end/flambda/flambda_utils.ml[423,17276+46]..[423,17276+53])
                              ]
                        expression (middle_end/flambda/flambda_utils.ml[424,17334+6]..[424,17334+45])
                          Pexp_construct "::" (middle_end/flambda/flambda_utils.ml[424,17334+28]..[424,17334+30])
                          Some
                            expression (middle_end/flambda/flambda_utils.ml[424,17334+6]..[424,17334+45]) ghost
                              Pexp_tuple
                              [
                                expression (middle_end/flambda/flambda_utils.ml[424,17334+6]..[424,17334+27])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/flambda_utils.ml[424,17334+7]..[424,17334+13])
                                      Pexp_ident "symbol" (middle_end/flambda/flambda_utils.ml[424,17334+7]..[424,17334+13])
                                    expression (middle_end/flambda/flambda_utils.ml[424,17334+15]..[424,17334+18])
                                      Pexp_ident "tag" (middle_end/flambda/flambda_utils.ml[424,17334+15]..[424,17334+18])
                                    expression (middle_end/flambda/flambda_utils.ml[424,17334+20]..[424,17334+26])
                                      Pexp_ident "fields" (middle_end/flambda/flambda_utils.ml[424,17334+20]..[424,17334+26])
                                  ]
                                expression (middle_end/flambda/flambda_utils.ml[424,17334+31]..[424,17334+45])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_utils.ml[424,17334+32]..[424,17334+36])
                                    Pexp_ident "loop" (middle_end/flambda/flambda_utils.ml[424,17334+32]..[424,17334+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[424,17334+37]..[424,17334+44])
                                        Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[424,17334+37]..[424,17334+44])
                                  ]
                              ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[425,17380+6]..[427,17439+33])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[425,17380+6]..[426,17406+32])
                            Ppat_or
                            pattern (middle_end/flambda/flambda_utils.ml[425,17380+6]..[425,17380+25])
                              Ppat_construct "Effect" (middle_end/flambda/flambda_utils.ml[425,17380+6]..[425,17380+12])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[425,17380+13]..[425,17380+25])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[425,17380+14]..[425,17380+15])
                                      Ppat_any
                                    pattern (middle_end/flambda/flambda_utils.ml[425,17380+17]..[425,17380+24])
                                      Ppat_var "program" (middle_end/flambda/flambda_utils.ml[425,17380+17]..[425,17380+24])
                                  ]
                            pattern (middle_end/flambda/flambda_utils.ml[426,17406+6]..[426,17406+32])
                              Ppat_construct "Let_symbol" (middle_end/flambda/flambda_utils.ml[426,17406+6]..[426,17406+16])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[426,17406+17]..[426,17406+32])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[426,17406+18]..[426,17406+19])
                                      Ppat_any
                                    pattern (middle_end/flambda/flambda_utils.ml[426,17406+21]..[426,17406+22])
                                      Ppat_any
                                    pattern (middle_end/flambda/flambda_utils.ml[426,17406+24]..[426,17406+31])
                                      Ppat_var "program" (middle_end/flambda/flambda_utils.ml[426,17406+24]..[426,17406+31])
                                  ]
                          pattern (middle_end/flambda/flambda_utils.ml[427,17439+6]..[427,17439+33])
                            Ppat_construct "Let_rec_symbol" (middle_end/flambda/flambda_utils.ml[427,17439+6]..[427,17439+20])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_utils.ml[427,17439+21]..[427,17439+33])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_utils.ml[427,17439+22]..[427,17439+23])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_utils.ml[427,17439+25]..[427,17439+32])
                                    Ppat_var "program" (middle_end/flambda/flambda_utils.ml[427,17439+25]..[427,17439+32])
                                ]
                        expression (middle_end/flambda/flambda_utils.ml[427,17439+37]..[427,17439+49])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[427,17439+37]..[427,17439+41])
                            Pexp_ident "loop" (middle_end/flambda/flambda_utils.ml[427,17439+37]..[427,17439+41])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[427,17439+42]..[427,17439+49])
                                Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[427,17439+42]..[427,17439+49])
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[428,17489+6]..[428,17489+11])
                          Ppat_construct "End" (middle_end/flambda/flambda_utils.ml[428,17489+6]..[428,17489+9])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[428,17489+10]..[428,17489+11])
                              Ppat_any
                        expression (middle_end/flambda/flambda_utils.ml[428,17489+15]..[428,17489+17])
                          Pexp_construct "[]" (middle_end/flambda/flambda_utils.ml[428,17489+15]..[428,17489+17])
                          None
                    ]
            ]
            expression (middle_end/flambda/flambda_utils.ml[430,17512+2]..[430,17512+27])
              Pexp_apply
              expression (middle_end/flambda/flambda_utils.ml[430,17512+2]..[430,17512+6])
                Pexp_ident "loop" (middle_end/flambda/flambda_utils.ml[430,17512+2]..[430,17512+6])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[430,17512+7]..[430,17512+27])
                    Pexp_field
                    expression (middle_end/flambda/flambda_utils.ml[430,17512+7]..[430,17512+14])
                      Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[430,17512+7]..[430,17512+14])
                    "program_body" (middle_end/flambda/flambda_utils.ml[430,17512+15]..[430,17512+27])
              ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[432,17541+0]..[433,17592+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[432,17541+4]..[432,17541+20])
          Ppat_var "imported_symbols" (middle_end/flambda/flambda_utils.ml[432,17541+4]..[432,17541+20])
        expression (middle_end/flambda/flambda_utils.ml[432,17541+21]..[433,17592+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[432,17541+21]..[432,17541+48])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[432,17541+22]..[432,17541+29])
              Ppat_var "program" (middle_end/flambda/flambda_utils.ml[432,17541+22]..[432,17541+29])
            core_type (middle_end/flambda/flambda_utils.ml[432,17541+32]..[432,17541+47])
              Ptyp_constr "Flambda.program" (middle_end/flambda/flambda_utils.ml[432,17541+32]..[432,17541+47])
              []
          expression (middle_end/flambda/flambda_utils.ml[433,17592+2]..[433,17592+26])
            Pexp_field
            expression (middle_end/flambda/flambda_utils.ml[433,17592+2]..[433,17592+9])
              Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[433,17592+2]..[433,17592+9])
            "imported_symbols" (middle_end/flambda/flambda_utils.ml[433,17592+10]..[433,17592+26])
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[435,17620+0]..[444,17965+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[435,17620+4]..[435,17620+25])
          Ppat_var "needed_import_symbols" (middle_end/flambda/flambda_utils.ml[435,17620+4]..[435,17620+25])
        expression (middle_end/flambda/flambda_utils.ml[435,17620+26]..[444,17965+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[435,17620+26]..[435,17620+53])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[435,17620+27]..[435,17620+34])
              Ppat_var "program" (middle_end/flambda/flambda_utils.ml[435,17620+27]..[435,17620+34])
            core_type (middle_end/flambda/flambda_utils.ml[435,17620+37]..[435,17620+52])
              Ptyp_constr "Flambda.program" (middle_end/flambda/flambda_utils.ml[435,17620+37]..[435,17620+52])
              []
          expression (middle_end/flambda/flambda_utils.ml[436,17676+2]..[444,17965+45])
            Pexp_let Nonrec
            [
              <def>
                pattern (middle_end/flambda/flambda_utils.ml[436,17676+6]..[436,17676+18])
                  Ppat_var "dependencies" (middle_end/flambda/flambda_utils.ml[436,17676+6]..[436,17676+18])
                expression (middle_end/flambda/flambda_utils.ml[436,17676+21]..[436,17676+57])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[436,17676+21]..[436,17676+49])
                    Pexp_ident "Flambda.free_symbols_program" (middle_end/flambda/flambda_utils.ml[436,17676+21]..[436,17676+49])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[436,17676+50]..[436,17676+57])
                        Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[436,17676+50]..[436,17676+57])
                  ]
            ]
            expression (middle_end/flambda/flambda_utils.ml[437,17737+2]..[444,17965+45])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/flambda_utils.ml[437,17737+6]..[437,17737+20])
                    Ppat_var "defined_symbol" (middle_end/flambda/flambda_utils.ml[437,17737+6]..[437,17737+20])
                  expression (middle_end/flambda/flambda_utils.ml[438,17760+4]..[442,17889+70])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[438,17760+4]..[438,17760+20])
                      Pexp_ident "Symbol.Set.union" (middle_end/flambda/flambda_utils.ml[438,17760+4]..[438,17760+20])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[439,17781+6]..[440,17807+55])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[439,17781+7]..[439,17781+25])
                            Pexp_ident "Symbol.Set.of_list" (middle_end/flambda/flambda_utils.ml[439,17781+7]..[439,17781+25])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[440,17807+9]..[440,17807+54])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[440,17807+10]..[440,17807+18])
                                  Pexp_ident "List.map" (middle_end/flambda/flambda_utils.ml[440,17807+10]..[440,17807+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[440,17807+19]..[440,17807+22])
                                      Pexp_ident "fst" (middle_end/flambda/flambda_utils.ml[440,17807+19]..[440,17807+22])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[440,17807+23]..[440,17807+53])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[440,17807+24]..[440,17807+44])
                                        Pexp_ident "all_lifted_constants" (middle_end/flambda/flambda_utils.ml[440,17807+24]..[440,17807+44])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[440,17807+45]..[440,17807+52])
                                            Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[440,17807+45]..[440,17807+52])
                                      ]
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[441,17863+6]..[442,17889+70])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[441,17863+7]..[441,17863+25])
                            Pexp_ident "Symbol.Set.of_list" (middle_end/flambda/flambda_utils.ml[441,17863+7]..[441,17863+25])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[442,17889+9]..[442,17889+69])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[442,17889+10]..[442,17889+18])
                                  Pexp_ident "List.map" (middle_end/flambda/flambda_utils.ml[442,17889+10]..[442,17889+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[442,17889+19]..[442,17889+39])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/flambda_utils.ml[442,17889+24]..[442,17889+33])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/flambda_utils.ml[442,17889+25]..[442,17889+26])
                                            Ppat_var "s" (middle_end/flambda/flambda_utils.ml[442,17889+25]..[442,17889+26])
                                          pattern (middle_end/flambda/flambda_utils.ml[442,17889+28]..[442,17889+29])
                                            Ppat_any
                                          pattern (middle_end/flambda/flambda_utils.ml[442,17889+31]..[442,17889+32])
                                            Ppat_any
                                        ]
                                      expression (middle_end/flambda/flambda_utils.ml[442,17889+37]..[442,17889+38])
                                        Pexp_ident "s" (middle_end/flambda/flambda_utils.ml[442,17889+37]..[442,17889+38])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[442,17889+40]..[442,17889+68])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[442,17889+41]..[442,17889+59])
                                        Pexp_ident "initialize_symbols" (middle_end/flambda/flambda_utils.ml[442,17889+41]..[442,17889+59])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[442,17889+60]..[442,17889+67])
                                            Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[442,17889+60]..[442,17889+67])
                                      ]
                                ]
                          ]
                    ]
              ]
              expression (middle_end/flambda/flambda_utils.ml[444,17965+2]..[444,17965+45])
                Pexp_apply
                expression (middle_end/flambda/flambda_utils.ml[444,17965+2]..[444,17965+17])
                  Pexp_ident "Symbol.Set.diff" (middle_end/flambda/flambda_utils.ml[444,17965+2]..[444,17965+17])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_utils.ml[444,17965+18]..[444,17965+30])
                      Pexp_ident "dependencies" (middle_end/flambda/flambda_utils.ml[444,17965+18]..[444,17965+30])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_utils.ml[444,17965+31]..[444,17965+45])
                      Pexp_ident "defined_symbol" (middle_end/flambda/flambda_utils.ml[444,17965+31]..[444,17965+45])
                ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[446,18012+0]..[449,18147+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[446,18012+4]..[446,18012+35])
          Ppat_var "introduce_needed_import_symbols" (middle_end/flambda/flambda_utils.ml[446,18012+4]..[446,18012+35])
        expression (middle_end/flambda/flambda_utils.ml[446,18012+36]..[449,18147+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[446,18012+36]..[446,18012+43])
            Ppat_var "program" (middle_end/flambda/flambda_utils.ml[446,18012+36]..[446,18012+43])
          expression (middle_end/flambda/flambda_utils.ml[446,18012+44]..[449,18147+3])
            Pexp_constraint
            expression (middle_end/flambda/flambda_utils.ml[447,18076+2]..[449,18147+3])
              Pexp_record
              [
                "imported_symbols" (middle_end/flambda/flambda_utils.ml[448,18093+4]..[448,18093+20])
                  expression (middle_end/flambda/flambda_utils.ml[448,18093+23]..[448,18093+52])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[448,18093+23]..[448,18093+44])
                      Pexp_ident "needed_import_symbols" (middle_end/flambda/flambda_utils.ml[448,18093+23]..[448,18093+44])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[448,18093+45]..[448,18093+52])
                          Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[448,18093+45]..[448,18093+52])
                    ]
              ]
              Some
                expression (middle_end/flambda/flambda_utils.ml[447,18076+4]..[447,18076+11])
                  Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[447,18076+4]..[447,18076+11])
            core_type (middle_end/flambda/flambda_utils.ml[446,18012+46]..[446,18012+61])
              Ptyp_constr "Flambda.program" (middle_end/flambda/flambda_utils.ml[446,18012+46]..[446,18012+61])
              []
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[451,18152+0]..[461,18457+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[451,18152+4]..[451,18152+15])
          Ppat_var "root_symbol" (middle_end/flambda/flambda_utils.ml[451,18152+4]..[451,18152+15])
        expression (middle_end/flambda/flambda_utils.ml[451,18152+16]..[461,18457+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[451,18152+16]..[451,18152+43])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[451,18152+17]..[451,18152+24])
              Ppat_var "program" (middle_end/flambda/flambda_utils.ml[451,18152+17]..[451,18152+24])
            core_type (middle_end/flambda/flambda_utils.ml[451,18152+27]..[451,18152+42])
              Ptyp_constr "Flambda.program" (middle_end/flambda/flambda_utils.ml[451,18152+27]..[451,18152+42])
              []
          expression (middle_end/flambda/flambda_utils.ml[452,18198+2]..[461,18457+27])
            Pexp_let Rec
            [
              <def>
                pattern (middle_end/flambda/flambda_utils.ml[452,18198+10]..[452,18198+14])
                  Ppat_var "loop" (middle_end/flambda/flambda_utils.ml[452,18198+10]..[452,18198+14])
                expression (middle_end/flambda/flambda_utils.ml[452,18198+15]..[459,18441+10]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/flambda_utils.ml[452,18198+15]..[452,18198+47])
                    Ppat_constraint
                    pattern (middle_end/flambda/flambda_utils.ml[452,18198+16]..[452,18198+23])
                      Ppat_var "program" (middle_end/flambda/flambda_utils.ml[452,18198+16]..[452,18198+23])
                    core_type (middle_end/flambda/flambda_utils.ml[452,18198+26]..[452,18198+46])
                      Ptyp_constr "Flambda.program_body" (middle_end/flambda/flambda_utils.ml[452,18198+26]..[452,18198+46])
                      []
                  expression (middle_end/flambda/flambda_utils.ml[453,18248+4]..[459,18441+10])
                    Pexp_match
                    expression (middle_end/flambda/flambda_utils.ml[453,18248+10]..[453,18248+17])
                      Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[453,18248+10]..[453,18248+17])
                    [
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[454,18271+6]..[457,18364+42])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_utils.ml[454,18271+6]..[456,18330+33])
                            Ppat_or
                            pattern (middle_end/flambda/flambda_utils.ml[454,18271+6]..[455,18297+32])
                              Ppat_or
                              pattern (middle_end/flambda/flambda_utils.ml[454,18271+6]..[454,18271+25])
                                Ppat_construct "Effect" (middle_end/flambda/flambda_utils.ml[454,18271+6]..[454,18271+12])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[454,18271+13]..[454,18271+25])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/flambda_utils.ml[454,18271+14]..[454,18271+15])
                                        Ppat_any
                                      pattern (middle_end/flambda/flambda_utils.ml[454,18271+17]..[454,18271+24])
                                        Ppat_var "program" (middle_end/flambda/flambda_utils.ml[454,18271+17]..[454,18271+24])
                                    ]
                              pattern (middle_end/flambda/flambda_utils.ml[455,18297+6]..[455,18297+32])
                                Ppat_construct "Let_symbol" (middle_end/flambda/flambda_utils.ml[455,18297+6]..[455,18297+16])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[455,18297+17]..[455,18297+32])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/flambda_utils.ml[455,18297+18]..[455,18297+19])
                                        Ppat_any
                                      pattern (middle_end/flambda/flambda_utils.ml[455,18297+21]..[455,18297+22])
                                        Ppat_any
                                      pattern (middle_end/flambda/flambda_utils.ml[455,18297+24]..[455,18297+31])
                                        Ppat_var "program" (middle_end/flambda/flambda_utils.ml[455,18297+24]..[455,18297+31])
                                    ]
                            pattern (middle_end/flambda/flambda_utils.ml[456,18330+6]..[456,18330+33])
                              Ppat_construct "Let_rec_symbol" (middle_end/flambda/flambda_utils.ml[456,18330+6]..[456,18330+20])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[456,18330+21]..[456,18330+33])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[456,18330+22]..[456,18330+23])
                                      Ppat_any
                                    pattern (middle_end/flambda/flambda_utils.ml[456,18330+25]..[456,18330+32])
                                      Ppat_var "program" (middle_end/flambda/flambda_utils.ml[456,18330+25]..[456,18330+32])
                                  ]
                          pattern (middle_end/flambda/flambda_utils.ml[457,18364+6]..[457,18364+42])
                            Ppat_construct "Initialize_symbol" (middle_end/flambda/flambda_utils.ml[457,18364+6]..[457,18364+23])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_utils.ml[457,18364+24]..[457,18364+42])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_utils.ml[457,18364+25]..[457,18364+26])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_utils.ml[457,18364+28]..[457,18364+29])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_utils.ml[457,18364+31]..[457,18364+32])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_utils.ml[457,18364+34]..[457,18364+41])
                                    Ppat_var "program" (middle_end/flambda/flambda_utils.ml[457,18364+34]..[457,18364+41])
                                ]
                        expression (middle_end/flambda/flambda_utils.ml[457,18364+46]..[457,18364+58])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[457,18364+46]..[457,18364+50])
                            Pexp_ident "loop" (middle_end/flambda/flambda_utils.ml[457,18364+46]..[457,18364+50])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[457,18364+51]..[457,18364+58])
                                Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[457,18364+51]..[457,18364+58])
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[458,18423+6]..[458,18423+14])
                          Ppat_construct "End" (middle_end/flambda/flambda_utils.ml[458,18423+6]..[458,18423+9])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[458,18423+10]..[458,18423+14])
                              Ppat_var "root" (middle_end/flambda/flambda_utils.ml[458,18423+10]..[458,18423+14])
                        expression (middle_end/flambda/flambda_utils.ml[459,18441+6]..[459,18441+10])
                          Pexp_ident "root" (middle_end/flambda/flambda_utils.ml[459,18441+6]..[459,18441+10])
                    ]
            ]
            expression (middle_end/flambda/flambda_utils.ml[461,18457+2]..[461,18457+27])
              Pexp_apply
              expression (middle_end/flambda/flambda_utils.ml[461,18457+2]..[461,18457+6])
                Pexp_ident "loop" (middle_end/flambda/flambda_utils.ml[461,18457+2]..[461,18457+6])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[461,18457+7]..[461,18457+27])
                    Pexp_field
                    expression (middle_end/flambda/flambda_utils.ml[461,18457+7]..[461,18457+14])
                      Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[461,18457+7]..[461,18457+14])
                    "program_body" (middle_end/flambda/flambda_utils.ml[461,18457+15]..[461,18457+27])
              ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[463,18486+0]..[473,18745+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[463,18486+4]..[463,18486+26])
          Ppat_var "might_raise_static_exn" (middle_end/flambda/flambda_utils.ml[463,18486+4]..[463,18486+26])
        expression (middle_end/flambda/flambda_utils.ml[463,18486+27]..[473,18745+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[463,18486+27]..[463,18486+31])
            Ppat_var "flam" (middle_end/flambda/flambda_utils.ml[463,18486+27]..[463,18486+31])
          expression (middle_end/flambda/flambda_utils.ml[463,18486+32]..[473,18745+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[463,18486+32]..[463,18486+37])
              Ppat_var "stexn" (middle_end/flambda/flambda_utils.ml[463,18486+32]..[463,18486+37])
            expression (middle_end/flambda/flambda_utils.ml[464,18526+2]..[473,18745+19])
              Pexp_try
              expression (middle_end/flambda/flambda_utils.ml[465,18532+4]..[472,18735+9])
                Pexp_sequence
                expression (middle_end/flambda/flambda_utils.ml[465,18532+4]..[471,18723+10])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[465,18532+4]..[465,18532+35])
                    Pexp_ident "Flambda_iterators.iter_on_named" (middle_end/flambda/flambda_utils.ml[465,18532+4]..[465,18532+35])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[466,18568+6]..[469,18684+18])
                        Pexp_function
                        [
                          <case>
                            pattern (middle_end/flambda/flambda_utils.ml[467,18584+10]..[467,18584+38])
                              Ppat_construct "Flambda.Static_raise" (middle_end/flambda/flambda_utils.ml[467,18584+10]..[467,18584+30])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[467,18584+31]..[467,18584+38])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[467,18584+32]..[467,18584+34])
                                      Ppat_var "ex" (middle_end/flambda/flambda_utils.ml[467,18584+32]..[467,18584+34])
                                    pattern (middle_end/flambda/flambda_utils.ml[467,18584+36]..[467,18584+37])
                                      Ppat_any
                                  ]
                            <when>
                              expression (middle_end/flambda/flambda_utils.ml[467,18584+44]..[467,18584+75])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[467,18584+44]..[467,18584+66])
                                  Pexp_ident "Static_exception.equal" (middle_end/flambda/flambda_utils.ml[467,18584+44]..[467,18584+66])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[467,18584+67]..[467,18584+69])
                                      Pexp_ident "ex" (middle_end/flambda/flambda_utils.ml[467,18584+67]..[467,18584+69])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[467,18584+70]..[467,18584+75])
                                      Pexp_ident "stexn" (middle_end/flambda/flambda_utils.ml[467,18584+70]..[467,18584+75])
                                ]
                            expression (middle_end/flambda/flambda_utils.ml[468,18663+10]..[468,18663+20])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_utils.ml[468,18663+10]..[468,18663+15])
                                Pexp_ident "raise" (middle_end/flambda/flambda_utils.ml[468,18663+10]..[468,18663+15])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_utils.ml[468,18663+16]..[468,18663+20])
                                    Pexp_construct "Exit" (middle_end/flambda/flambda_utils.ml[468,18663+16]..[468,18663+20])
                                    None
                              ]
                          <case>
                            pattern (middle_end/flambda/flambda_utils.ml[469,18684+10]..[469,18684+11])
                              Ppat_any
                            expression (middle_end/flambda/flambda_utils.ml[469,18684+15]..[469,18684+17])
                              Pexp_construct "()" (middle_end/flambda/flambda_utils.ml[469,18684+15]..[469,18684+17])
                              None
                        ]
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[470,18703+6]..[470,18703+19])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/flambda_utils.ml[470,18703+11]..[470,18703+12])
                          Ppat_any
                        expression (middle_end/flambda/flambda_utils.ml[470,18703+16]..[470,18703+18])
                          Pexp_construct "()" (middle_end/flambda/flambda_utils.ml[470,18703+16]..[470,18703+18])
                          None
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[471,18723+6]..[471,18723+10])
                        Pexp_ident "flam" (middle_end/flambda/flambda_utils.ml[471,18723+6]..[471,18723+10])
                  ]
                expression (middle_end/flambda/flambda_utils.ml[472,18735+4]..[472,18735+9])
                  Pexp_construct "false" (middle_end/flambda/flambda_utils.ml[472,18735+4]..[472,18735+9])
                  None
              [
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[473,18745+7]..[473,18745+11])
                    Ppat_construct "Exit" (middle_end/flambda/flambda_utils.ml[473,18745+7]..[473,18745+11])
                    None
                  expression (middle_end/flambda/flambda_utils.ml[473,18745+15]..[473,18745+19])
                    Pexp_construct "true" (middle_end/flambda/flambda_utils.ml[473,18745+15]..[473,18745+19])
                    None
              ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[475,18766+0]..[488,19291+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[475,18766+4]..[475,18766+20])
          Ppat_var "make_closure_map" (middle_end/flambda/flambda_utils.ml[475,18766+4]..[475,18766+20])
        expression (middle_end/flambda/flambda_utils.ml[475,18766+21]..[488,19291+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[475,18766+21]..[475,18766+28])
            Ppat_var "program" (middle_end/flambda/flambda_utils.ml[475,18766+21]..[475,18766+28])
          expression (middle_end/flambda/flambda_utils.ml[476,18797+2]..[488,19291+6])
            Pexp_let Nonrec
            [
              <def>
                pattern (middle_end/flambda/flambda_utils.ml[476,18797+6]..[476,18797+9])
                  Ppat_var "map" (middle_end/flambda/flambda_utils.ml[476,18797+6]..[476,18797+9])
                expression (middle_end/flambda/flambda_utils.ml[476,18797+12]..[476,18797+36])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[476,18797+12]..[476,18797+15])
                    Pexp_ident "ref" (middle_end/flambda/flambda_utils.ml[476,18797+12]..[476,18797+15])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[476,18797+16]..[476,18797+36])
                        Pexp_ident "Closure_id.Map.empty" (middle_end/flambda/flambda_utils.ml[476,18797+16]..[476,18797+36])
                  ]
            ]
            expression (middle_end/flambda/flambda_utils.ml[477,18837+2]..[488,19291+6])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/flambda_utils.ml[477,18837+6]..[477,18837+25])
                    Ppat_var "add_set_of_closures" (middle_end/flambda/flambda_utils.ml[477,18837+6]..[477,18837+25])
                  expression (middle_end/flambda/flambda_utils.ml[477,18837+26]..[483,19165+25]) ghost
                    Pexp_fun
                    Labelled "constant"
                    None
                    pattern (middle_end/flambda/flambda_utils.ml[477,18837+36]..[477,18837+37])
                      Ppat_any
                    expression (middle_end/flambda/flambda_utils.ml[477,18837+38]..[483,19165+25])
                      Pexp_constraint
                      expression (middle_end/flambda/flambda_utils.ml[477,18837+74]..[483,19165+25])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/flambda_utils.ml[478,18915+4]..[478,18915+22])
                          Ppat_record Closed
                          [
                            "function_decls" (middle_end/flambda/flambda_utils.ml[478,18915+6]..[478,18915+20]) ghost
                              pattern (middle_end/flambda/flambda_utils.ml[478,18915+6]..[478,18915+20])
                                Ppat_var "function_decls" (middle_end/flambda/flambda_utils.ml[478,18915+6]..[478,18915+20])
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[479,18941+4]..[483,19165+25])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[479,18941+4]..[479,18941+21])
                            Pexp_ident "Variable.Map.iter" (middle_end/flambda/flambda_utils.ml[479,18941+4]..[479,18941+21])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[479,18941+22]..[482,19095+69])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/flambda_utils.ml[479,18941+27]..[479,18941+30])
                                  Ppat_var "var" (middle_end/flambda/flambda_utils.ml[479,18941+27]..[479,18941+30])
                                expression (middle_end/flambda/flambda_utils.ml[479,18941+31]..[482,19095+68]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/flambda_utils.ml[479,18941+31]..[479,18941+32])
                                    Ppat_any
                                  expression (middle_end/flambda/flambda_utils.ml[480,18977+8]..[482,19095+68])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[480,18977+12]..[480,18977+22])
                                          Ppat_var "closure_id" (middle_end/flambda/flambda_utils.ml[480,18977+12]..[480,18977+22])
                                        expression (middle_end/flambda/flambda_utils.ml[480,18977+25]..[480,18977+44])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[480,18977+25]..[480,18977+40])
                                            Pexp_ident "Closure_id.wrap" (middle_end/flambda/flambda_utils.ml[480,18977+25]..[480,18977+40])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[480,18977+41]..[480,18977+44])
                                                Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[480,18977+41]..[480,18977+44])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[481,19025+8]..[482,19095+68])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/flambda_utils.ml[481,19025+12]..[481,19025+30])
                                            Ppat_var "set_of_closures_id" (middle_end/flambda/flambda_utils.ml[481,19025+12]..[481,19025+30])
                                          expression (middle_end/flambda/flambda_utils.ml[481,19025+33]..[481,19025+66])
                                            Pexp_field
                                            expression (middle_end/flambda/flambda_utils.ml[481,19025+33]..[481,19025+47])
                                              Pexp_ident "function_decls" (middle_end/flambda/flambda_utils.ml[481,19025+33]..[481,19025+47])
                                            "set_of_closures_id" (middle_end/flambda/flambda_utils.ml[481,19025+48]..[481,19025+66])
                                      ]
                                      expression (middle_end/flambda/flambda_utils.ml[482,19095+8]..[482,19095+68])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[482,19095+12]..[482,19095+14])
                                          Pexp_ident ":=" (middle_end/flambda/flambda_utils.ml[482,19095+12]..[482,19095+14])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[482,19095+8]..[482,19095+11])
                                              Pexp_ident "map" (middle_end/flambda/flambda_utils.ml[482,19095+8]..[482,19095+11])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[482,19095+15]..[482,19095+68])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_utils.ml[482,19095+15]..[482,19095+33])
                                                Pexp_ident "Closure_id.Map.add" (middle_end/flambda/flambda_utils.ml[482,19095+15]..[482,19095+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[482,19095+34]..[482,19095+44])
                                                    Pexp_ident "closure_id" (middle_end/flambda/flambda_utils.ml[482,19095+34]..[482,19095+44])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[482,19095+45]..[482,19095+63])
                                                    Pexp_ident "set_of_closures_id" (middle_end/flambda/flambda_utils.ml[482,19095+45]..[482,19095+63])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[482,19095+64]..[482,19095+68])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_utils.ml[482,19095+64]..[482,19095+65])
                                                      Pexp_ident "!" (middle_end/flambda/flambda_utils.ml[482,19095+64]..[482,19095+65])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[482,19095+65]..[482,19095+68])
                                                          Pexp_ident "map" (middle_end/flambda/flambda_utils.ml[482,19095+65]..[482,19095+68])
                                                    ]
                                              ]
                                        ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[483,19165+6]..[483,19165+25])
                                Pexp_field
                                expression (middle_end/flambda/flambda_utils.ml[483,19165+6]..[483,19165+20])
                                  Pexp_ident "function_decls" (middle_end/flambda/flambda_utils.ml[483,19165+6]..[483,19165+20])
                                "funs" (middle_end/flambda/flambda_utils.ml[483,19165+21]..[483,19165+25])
                          ]
                      core_type (middle_end/flambda/flambda_utils.ml[477,18837+40]..[477,18837+71])
                        Ptyp_arrow
                        Nolabel
                        core_type (middle_end/flambda/flambda_utils.ml[477,18837+40]..[477,18837+63])
                          Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/flambda_utils.ml[477,18837+40]..[477,18837+63])
                          []
                        core_type (middle_end/flambda/flambda_utils.ml[477,18837+67]..[477,18837+71])
                          Ptyp_constr "unit" (middle_end/flambda/flambda_utils.ml[477,18837+67]..[477,18837+71])
                          []
              ]
              expression (middle_end/flambda/flambda_utils.ml[485,19196+2]..[488,19291+6])
                Pexp_sequence
                expression (middle_end/flambda/flambda_utils.ml[485,19196+2]..[487,19263+26])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[485,19196+2]..[485,19196+54])
                    Pexp_ident "Flambda_iterators.iter_on_set_of_closures_of_program" (middle_end/flambda/flambda_utils.ml[485,19196+2]..[485,19196+54])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[486,19251+4]..[486,19251+11])
                        Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[486,19251+4]..[486,19251+11])
                    <arg>
                    Labelled "f"
                      expression (middle_end/flambda/flambda_utils.ml[487,19263+7]..[487,19263+26])
                        Pexp_ident "add_set_of_closures" (middle_end/flambda/flambda_utils.ml[487,19263+7]..[487,19263+26])
                  ]
                expression (middle_end/flambda/flambda_utils.ml[488,19291+2]..[488,19291+6])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[488,19291+2]..[488,19291+3])
                    Pexp_ident "!" (middle_end/flambda/flambda_utils.ml[488,19291+2]..[488,19291+3])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[488,19291+3]..[488,19291+6])
                        Pexp_ident "map" (middle_end/flambda/flambda_utils.ml[488,19291+3]..[488,19291+6])
                  ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[490,19299+0]..[501,19710+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[490,19299+4]..[490,19299+32])
          Ppat_var "all_lifted_constant_closures" (middle_end/flambda/flambda_utils.ml[490,19299+4]..[490,19299+32])
        expression (middle_end/flambda/flambda_utils.ml[490,19299+33]..[501,19710+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[490,19299+33]..[490,19299+40])
            Ppat_var "program" (middle_end/flambda/flambda_utils.ml[490,19299+33]..[490,19299+40])
          expression (middle_end/flambda/flambda_utils.ml[491,19342+2]..[501,19710+34])
            Pexp_apply
            expression (middle_end/flambda/flambda_utils.ml[491,19342+2]..[491,19342+16])
              Pexp_ident "List.fold_left" (middle_end/flambda/flambda_utils.ml[491,19342+2]..[491,19342+16])
            [
              <arg>
              Nolabel
                expression (middle_end/flambda/flambda_utils.ml[491,19342+17]..[499,19661+23])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/flambda_utils.ml[491,19342+22]..[491,19342+31])
                    Ppat_var "unchanged" (middle_end/flambda/flambda_utils.ml[491,19342+22]..[491,19342+31])
                  expression (middle_end/flambda/flambda_utils.ml[491,19342+32]..[499,19661+22]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_utils.ml[491,19342+32]..[491,19342+39])
                      Ppat_var "flambda" (middle_end/flambda/flambda_utils.ml[491,19342+32]..[491,19342+39])
                    expression (middle_end/flambda/flambda_utils.ml[492,19385+6]..[499,19661+22])
                      Pexp_match
                      expression (middle_end/flambda/flambda_utils.ml[492,19385+12]..[492,19385+19])
                        Pexp_ident "flambda" (middle_end/flambda/flambda_utils.ml[492,19385+12]..[492,19385+19])
                      [
                        <case>
                          pattern (middle_end/flambda/flambda_utils.ml[493,19410+8]..[493,19410+66])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[493,19410+9]..[493,19410+10])
                                Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[493,19410+12]..[493,19410+65])
                                Ppat_construct "Flambda.Set_of_closures" (middle_end/flambda/flambda_utils.ml[493,19410+12]..[493,19410+35])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[493,19410+36]..[493,19410+65])
                                    Ppat_record Closed
                                    [
                                      "function_decls" (middle_end/flambda/flambda_utils.ml[493,19410+38]..[493,19410+52])
                                        pattern (middle_end/flambda/flambda_utils.ml[493,19410+55]..[493,19410+63])
                                          Ppat_record Closed
                                          [
                                            "funs" (middle_end/flambda/flambda_utils.ml[493,19410+57]..[493,19410+61]) ghost
                                              pattern (middle_end/flambda/flambda_utils.ml[493,19410+57]..[493,19410+61])
                                                Ppat_var "funs" (middle_end/flambda/flambda_utils.ml[493,19410+57]..[493,19410+61])
                                          ]
                                    ]
                            ]
                          expression (middle_end/flambda/flambda_utils.ml[494,19480+8]..[498,19641+19])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_utils.ml[494,19480+8]..[494,19480+25])
                              Pexp_ident "Variable.Map.fold" (middle_end/flambda/flambda_utils.ml[494,19480+8]..[494,19480+25])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[495,19506+10]..[496,19567+58])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/flambda_utils.ml[495,19506+15]..[495,19506+18])
                                    Ppat_var "key" (middle_end/flambda/flambda_utils.ml[495,19506+15]..[495,19506+18])
                                  expression (middle_end/flambda/flambda_utils.ml[495,19506+19]..[496,19567+57]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/flambda_utils.ml[495,19506+19]..[495,19506+53])
                                      Ppat_constraint
                                      pattern (middle_end/flambda/flambda_utils.ml[495,19506+20]..[495,19506+21])
                                        Ppat_any
                                      core_type (middle_end/flambda/flambda_utils.ml[495,19506+24]..[495,19506+52])
                                        Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/flambda_utils.ml[495,19506+24]..[495,19506+52])
                                        []
                                    expression (middle_end/flambda/flambda_utils.ml[495,19506+54]..[496,19567+57]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/flambda_utils.ml[495,19506+54]..[495,19506+57])
                                        Ppat_var "acc" (middle_end/flambda/flambda_utils.ml[495,19506+54]..[495,19506+57])
                                      expression (middle_end/flambda/flambda_utils.ml[496,19567+13]..[496,19567+57])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[496,19567+13]..[496,19567+31])
                                          Pexp_ident "Closure_id.Set.add" (middle_end/flambda/flambda_utils.ml[496,19567+13]..[496,19567+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[496,19567+32]..[496,19567+53])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_utils.ml[496,19567+33]..[496,19567+48])
                                                Pexp_ident "Closure_id.wrap" (middle_end/flambda/flambda_utils.ml[496,19567+33]..[496,19567+48])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[496,19567+49]..[496,19567+52])
                                                    Pexp_ident "key" (middle_end/flambda/flambda_utils.ml[496,19567+49]..[496,19567+52])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[496,19567+54]..[496,19567+57])
                                              Pexp_ident "acc" (middle_end/flambda/flambda_utils.ml[496,19567+54]..[496,19567+57])
                                        ]
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[497,19626+10]..[497,19626+14])
                                  Pexp_ident "funs" (middle_end/flambda/flambda_utils.ml[497,19626+10]..[497,19626+14])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[498,19641+10]..[498,19641+19])
                                  Pexp_ident "unchanged" (middle_end/flambda/flambda_utils.ml[498,19641+10]..[498,19641+19])
                            ]
                        <case>
                          pattern (middle_end/flambda/flambda_utils.ml[499,19661+8]..[499,19661+9])
                            Ppat_any
                          expression (middle_end/flambda/flambda_utils.ml[499,19661+13]..[499,19661+22])
                            Pexp_ident "unchanged" (middle_end/flambda/flambda_utils.ml[499,19661+13]..[499,19661+22])
                      ]
              <arg>
              Nolabel
                expression (middle_end/flambda/flambda_utils.ml[500,19685+4]..[500,19685+24])
                  Pexp_ident "Closure_id.Set.empty" (middle_end/flambda/flambda_utils.ml[500,19685+4]..[500,19685+24])
              <arg>
              Nolabel
                expression (middle_end/flambda/flambda_utils.ml[501,19710+4]..[501,19710+34])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[501,19710+5]..[501,19710+25])
                    Pexp_ident "all_lifted_constants" (middle_end/flambda/flambda_utils.ml[501,19710+5]..[501,19710+25])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[501,19710+26]..[501,19710+33])
                        Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[501,19710+26]..[501,19710+33])
                  ]
            ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[503,19746+0]..[511,20080+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[503,19746+4]..[503,19746+40])
          Ppat_var "all_lifted_constant_sets_of_closures" (middle_end/flambda/flambda_utils.ml[503,19746+4]..[503,19746+40])
        expression (middle_end/flambda/flambda_utils.ml[503,19746+41]..[511,20080+6]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[503,19746+41]..[503,19746+48])
            Ppat_var "program" (middle_end/flambda/flambda_utils.ml[503,19746+41]..[503,19746+48])
          expression (middle_end/flambda/flambda_utils.ml[504,19797+2]..[511,20080+6])
            Pexp_let Nonrec
            [
              <def>
                pattern (middle_end/flambda/flambda_utils.ml[504,19797+6]..[504,19797+9])
                  Ppat_var "set" (middle_end/flambda/flambda_utils.ml[504,19797+6]..[504,19797+9])
                expression (middle_end/flambda/flambda_utils.ml[504,19797+12]..[504,19797+44])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[504,19797+12]..[504,19797+15])
                    Pexp_ident "ref" (middle_end/flambda/flambda_utils.ml[504,19797+12]..[504,19797+15])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[504,19797+16]..[504,19797+44])
                        Pexp_ident "Set_of_closures_id.Set.empty" (middle_end/flambda/flambda_utils.ml[504,19797+16]..[504,19797+44])
                  ]
            ]
            expression (middle_end/flambda/flambda_utils.ml[505,19845+2]..[511,20080+6])
              Pexp_sequence
              expression (middle_end/flambda/flambda_utils.ml[505,19845+2]..[510,20044+34])
                Pexp_apply
                expression (middle_end/flambda/flambda_utils.ml[505,19845+2]..[505,19845+11])
                  Pexp_ident "List.iter" (middle_end/flambda/flambda_utils.ml[505,19845+2]..[505,19845+11])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_utils.ml[505,19845+12]..[509,20027+16])
                      Pexp_function
                      [
                        <case>
                          pattern (middle_end/flambda/flambda_utils.ml[506,19867+8]..[507,19905+52])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_utils.ml[506,19867+9]..[506,19867+10])
                                Ppat_any
                              pattern (middle_end/flambda/flambda_utils.ml[506,19867+12]..[507,19905+51])
                                Ppat_construct "Flambda.Set_of_closures" (middle_end/flambda/flambda_utils.ml[506,19867+12]..[506,19867+35])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_utils.ml[506,19867+36]..[507,19905+51])
                                    Ppat_record Closed
                                    [
                                      "function_decls" (middle_end/flambda/flambda_utils.ml[507,19905+10]..[507,19905+24])
                                        pattern (middle_end/flambda/flambda_utils.ml[507,19905+27]..[507,19905+49])
                                          Ppat_record Closed
                                          [
                                            "set_of_closures_id" (middle_end/flambda/flambda_utils.ml[507,19905+29]..[507,19905+47]) ghost
                                              pattern (middle_end/flambda/flambda_utils.ml[507,19905+29]..[507,19905+47])
                                                Ppat_var "set_of_closures_id" (middle_end/flambda/flambda_utils.ml[507,19905+29]..[507,19905+47])
                                          ]
                                    ]
                            ]
                          expression (middle_end/flambda/flambda_utils.ml[508,19961+8]..[508,19961+65])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_utils.ml[508,19961+12]..[508,19961+14])
                              Pexp_ident ":=" (middle_end/flambda/flambda_utils.ml[508,19961+12]..[508,19961+14])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[508,19961+8]..[508,19961+11])
                                  Pexp_ident "set" (middle_end/flambda/flambda_utils.ml[508,19961+8]..[508,19961+11])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[508,19961+15]..[508,19961+65])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_utils.ml[508,19961+15]..[508,19961+41])
                                    Pexp_ident "Set_of_closures_id.Set.add" (middle_end/flambda/flambda_utils.ml[508,19961+15]..[508,19961+41])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[508,19961+42]..[508,19961+60])
                                        Pexp_ident "set_of_closures_id" (middle_end/flambda/flambda_utils.ml[508,19961+42]..[508,19961+60])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[508,19961+61]..[508,19961+65])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[508,19961+61]..[508,19961+62])
                                          Pexp_ident "!" (middle_end/flambda/flambda_utils.ml[508,19961+61]..[508,19961+62])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[508,19961+62]..[508,19961+65])
                                              Pexp_ident "set" (middle_end/flambda/flambda_utils.ml[508,19961+62]..[508,19961+65])
                                        ]
                                  ]
                            ]
                        <case>
                          pattern (middle_end/flambda/flambda_utils.ml[509,20027+8]..[509,20027+9])
                            Ppat_any
                          expression (middle_end/flambda/flambda_utils.ml[509,20027+13]..[509,20027+15])
                            Pexp_construct "()" (middle_end/flambda/flambda_utils.ml[509,20027+13]..[509,20027+15])
                            None
                      ]
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_utils.ml[510,20044+4]..[510,20044+34])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_utils.ml[510,20044+5]..[510,20044+25])
                        Pexp_ident "all_lifted_constants" (middle_end/flambda/flambda_utils.ml[510,20044+5]..[510,20044+25])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[510,20044+26]..[510,20044+33])
                            Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[510,20044+26]..[510,20044+33])
                      ]
                ]
              expression (middle_end/flambda/flambda_utils.ml[511,20080+2]..[511,20080+6])
                Pexp_apply
                expression (middle_end/flambda/flambda_utils.ml[511,20080+2]..[511,20080+3])
                  Pexp_ident "!" (middle_end/flambda/flambda_utils.ml[511,20080+2]..[511,20080+3])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_utils.ml[511,20080+3]..[511,20080+6])
                      Pexp_ident "set" (middle_end/flambda/flambda_utils.ml[511,20080+3]..[511,20080+6])
                ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[513,20088+0]..[518,20295+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[513,20088+4]..[513,20088+24])
          Ppat_var "all_sets_of_closures" (middle_end/flambda/flambda_utils.ml[513,20088+4]..[513,20088+24])
        expression (middle_end/flambda/flambda_utils.ml[513,20088+25]..[518,20295+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[513,20088+25]..[513,20088+32])
            Ppat_var "program" (middle_end/flambda/flambda_utils.ml[513,20088+25]..[513,20088+32])
          expression (middle_end/flambda/flambda_utils.ml[514,20123+2]..[518,20295+7])
            Pexp_let Nonrec
            [
              <def>
                pattern (middle_end/flambda/flambda_utils.ml[514,20123+6]..[514,20123+10])
                  Ppat_var "list" (middle_end/flambda/flambda_utils.ml[514,20123+6]..[514,20123+10])
                expression (middle_end/flambda/flambda_utils.ml[514,20123+13]..[514,20123+19])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[514,20123+13]..[514,20123+16])
                    Pexp_ident "ref" (middle_end/flambda/flambda_utils.ml[514,20123+13]..[514,20123+16])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[514,20123+17]..[514,20123+19])
                        Pexp_construct "[]" (middle_end/flambda/flambda_utils.ml[514,20123+17]..[514,20123+19])
                        None
                  ]
            ]
            expression (middle_end/flambda/flambda_utils.ml[515,20146+2]..[518,20295+7])
              Pexp_sequence
              expression (middle_end/flambda/flambda_utils.ml[515,20146+2]..[517,20252+41])
                Pexp_apply
                expression (middle_end/flambda/flambda_utils.ml[515,20146+2]..[515,20146+54])
                  Pexp_ident "Flambda_iterators.iter_on_set_of_closures_of_program" (middle_end/flambda/flambda_utils.ml[515,20146+2]..[515,20146+54])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_utils.ml[515,20146+55]..[515,20146+62])
                      Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[515,20146+55]..[515,20146+62])
                  <arg>
                  Labelled "f"
                    expression (middle_end/flambda/flambda_utils.ml[516,20209+7]..[517,20252+41])
                      Pexp_fun
                      Labelled "constant"
                      None
                      pattern (middle_end/flambda/flambda_utils.ml[516,20209+22]..[516,20209+23])
                        Ppat_any
                      expression (middle_end/flambda/flambda_utils.ml[516,20209+24]..[517,20252+40]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/flambda_utils.ml[516,20209+24]..[516,20209+39])
                          Ppat_var "set_of_closures" (middle_end/flambda/flambda_utils.ml[516,20209+24]..[516,20209+39])
                        expression (middle_end/flambda/flambda_utils.ml[517,20252+8]..[517,20252+40])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[517,20252+13]..[517,20252+15])
                            Pexp_ident ":=" (middle_end/flambda/flambda_utils.ml[517,20252+13]..[517,20252+15])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[517,20252+8]..[517,20252+12])
                                Pexp_ident "list" (middle_end/flambda/flambda_utils.ml[517,20252+8]..[517,20252+12])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[517,20252+16]..[517,20252+40])
                                Pexp_construct "::" (middle_end/flambda/flambda_utils.ml[517,20252+32]..[517,20252+34])
                                Some
                                  expression (middle_end/flambda/flambda_utils.ml[517,20252+16]..[517,20252+40]) ghost
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/flambda_utils.ml[517,20252+16]..[517,20252+31])
                                        Pexp_ident "set_of_closures" (middle_end/flambda/flambda_utils.ml[517,20252+16]..[517,20252+31])
                                      expression (middle_end/flambda/flambda_utils.ml[517,20252+35]..[517,20252+40])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[517,20252+35]..[517,20252+36])
                                          Pexp_ident "!" (middle_end/flambda/flambda_utils.ml[517,20252+35]..[517,20252+36])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[517,20252+36]..[517,20252+40])
                                              Pexp_ident "list" (middle_end/flambda/flambda_utils.ml[517,20252+36]..[517,20252+40])
                                        ]
                                    ]
                          ]
                ]
              expression (middle_end/flambda/flambda_utils.ml[518,20295+2]..[518,20295+7])
                Pexp_apply
                expression (middle_end/flambda/flambda_utils.ml[518,20295+2]..[518,20295+3])
                  Pexp_ident "!" (middle_end/flambda/flambda_utils.ml[518,20295+2]..[518,20295+3])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_utils.ml[518,20295+3]..[518,20295+7])
                      Pexp_ident "list" (middle_end/flambda/flambda_utils.ml[518,20295+3]..[518,20295+7])
                ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[520,20304+0]..[527,20624+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[520,20304+4]..[520,20304+28])
          Ppat_var "all_sets_of_closures_map" (middle_end/flambda/flambda_utils.ml[520,20304+4]..[520,20304+28])
        expression (middle_end/flambda/flambda_utils.ml[520,20304+29]..[527,20624+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[520,20304+29]..[520,20304+36])
            Ppat_var "program" (middle_end/flambda/flambda_utils.ml[520,20304+29]..[520,20304+36])
          expression (middle_end/flambda/flambda_utils.ml[521,20343+2]..[527,20624+4])
            Pexp_let Nonrec
            [
              <def>
                pattern (middle_end/flambda/flambda_utils.ml[521,20343+6]..[521,20343+7])
                  Ppat_var "r" (middle_end/flambda/flambda_utils.ml[521,20343+6]..[521,20343+7])
                expression (middle_end/flambda/flambda_utils.ml[521,20343+10]..[521,20343+42])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[521,20343+10]..[521,20343+13])
                    Pexp_ident "ref" (middle_end/flambda/flambda_utils.ml[521,20343+10]..[521,20343+13])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[521,20343+14]..[521,20343+42])
                        Pexp_ident "Set_of_closures_id.Map.empty" (middle_end/flambda/flambda_utils.ml[521,20343+14]..[521,20343+42])
                  ]
            ]
            expression (middle_end/flambda/flambda_utils.ml[522,20389+2]..[527,20624+4])
              Pexp_sequence
              expression (middle_end/flambda/flambda_utils.ml[522,20389+2]..[526,20593+29])
                Pexp_apply
                expression (middle_end/flambda/flambda_utils.ml[522,20389+2]..[522,20389+54])
                  Pexp_ident "Flambda_iterators.iter_on_set_of_closures_of_program" (middle_end/flambda/flambda_utils.ml[522,20389+2]..[522,20389+54])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_utils.ml[522,20389+55]..[522,20389+62])
                      Pexp_ident "program" (middle_end/flambda/flambda_utils.ml[522,20389+55]..[522,20389+62])
                  <arg>
                  Labelled "f"
                    expression (middle_end/flambda/flambda_utils.ml[523,20452+7]..[526,20593+29])
                      Pexp_fun
                      Labelled "constant"
                      None
                      pattern (middle_end/flambda/flambda_utils.ml[523,20452+22]..[523,20452+23])
                        Ppat_any
                      expression (middle_end/flambda/flambda_utils.ml[523,20452+24]..[526,20593+28]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/flambda_utils.ml[523,20452+24]..[523,20452+39])
                          Ppat_var "set_of_closures" (middle_end/flambda/flambda_utils.ml[523,20452+24]..[523,20452+39])
                        expression (middle_end/flambda/flambda_utils.ml[524,20495+6]..[526,20593+28])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[524,20495+8]..[524,20495+10])
                            Pexp_ident ":=" (middle_end/flambda/flambda_utils.ml[524,20495+8]..[524,20495+10])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[524,20495+6]..[524,20495+7])
                                Pexp_ident "r" (middle_end/flambda/flambda_utils.ml[524,20495+6]..[524,20495+7])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[524,20495+11]..[526,20593+28])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[524,20495+11]..[524,20495+37])
                                  Pexp_ident "Set_of_closures_id.Map.add" (middle_end/flambda/flambda_utils.ml[524,20495+11]..[524,20495+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[525,20533+10]..[525,20533+59])
                                      Pexp_field
                                      expression (middle_end/flambda/flambda_utils.ml[525,20533+10]..[525,20533+40])
                                        Pexp_field
                                        expression (middle_end/flambda/flambda_utils.ml[525,20533+10]..[525,20533+25])
                                          Pexp_ident "set_of_closures" (middle_end/flambda/flambda_utils.ml[525,20533+10]..[525,20533+25])
                                        "function_decls" (middle_end/flambda/flambda_utils.ml[525,20533+26]..[525,20533+40])
                                      "set_of_closures_id" (middle_end/flambda/flambda_utils.ml[525,20533+41]..[525,20533+59])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[526,20593+10]..[526,20593+25])
                                      Pexp_ident "set_of_closures" (middle_end/flambda/flambda_utils.ml[526,20593+10]..[526,20593+25])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[526,20593+26]..[526,20593+28])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[526,20593+26]..[526,20593+27])
                                        Pexp_ident "!" (middle_end/flambda/flambda_utils.ml[526,20593+26]..[526,20593+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[526,20593+27]..[526,20593+28])
                                            Pexp_ident "r" (middle_end/flambda/flambda_utils.ml[526,20593+27]..[526,20593+28])
                                      ]
                                ]
                          ]
                ]
              expression (middle_end/flambda/flambda_utils.ml[527,20624+2]..[527,20624+4])
                Pexp_apply
                expression (middle_end/flambda/flambda_utils.ml[527,20624+2]..[527,20624+3])
                  Pexp_ident "!" (middle_end/flambda/flambda_utils.ml[527,20624+2]..[527,20624+3])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_utils.ml[527,20624+3]..[527,20624+4])
                      Pexp_ident "r" (middle_end/flambda/flambda_utils.ml[527,20624+3]..[527,20624+4])
                ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[529,20630+0]..[724,27844+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[529,20630+4]..[529,20630+46])
          Ppat_var "substitute_read_symbol_field_for_variables" (middle_end/flambda/flambda_utils.ml[529,20630+4]..[529,20630+46])
        expression (middle_end/flambda/flambda_utils.ml[530,20677+4]..[724,27844+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[530,20677+4]..[530,20677+57])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[530,20677+5]..[530,20677+17])
              Ppat_var "substitution" (middle_end/flambda/flambda_utils.ml[530,20677+5]..[530,20677+17])
            core_type (middle_end/flambda/flambda_utils.ml[530,20677+20]..[530,20677+56])
              Ptyp_constr "Variable.Map.t" (middle_end/flambda/flambda_utils.ml[530,20677+42]..[530,20677+56])
              [
                core_type (middle_end/flambda/flambda_utils.ml[530,20677+21]..[530,20677+40])
                  Ptyp_tuple
                  [
                    core_type (middle_end/flambda/flambda_utils.ml[530,20677+21]..[530,20677+29])
                      Ptyp_constr "Symbol.t" (middle_end/flambda/flambda_utils.ml[530,20677+21]..[530,20677+29])
                      []
                    core_type (middle_end/flambda/flambda_utils.ml[530,20677+32]..[530,20677+40])
                      Ptyp_constr "list" (middle_end/flambda/flambda_utils.ml[530,20677+36]..[530,20677+40])
                      [
                        core_type (middle_end/flambda/flambda_utils.ml[530,20677+32]..[530,20677+35])
                          Ptyp_constr "int" (middle_end/flambda/flambda_utils.ml[530,20677+32]..[530,20677+35])
                          []
                      ]
                  ]
              ]
          expression (middle_end/flambda/flambda_utils.ml[531,20735+4]..[724,27844+52]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_utils.ml[531,20735+4]..[531,20735+22])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_utils.ml[531,20735+5]..[531,20735+9])
                Ppat_var "expr" (middle_end/flambda/flambda_utils.ml[531,20735+5]..[531,20735+9])
              core_type (middle_end/flambda/flambda_utils.ml[531,20735+12]..[531,20735+21])
                Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_utils.ml[531,20735+12]..[531,20735+21])
                []
            expression (middle_end/flambda/flambda_utils.ml[532,20760+2]..[724,27844+52])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/flambda_utils.ml[532,20760+6]..[532,20760+10])
                    Ppat_var "bind" (middle_end/flambda/flambda_utils.ml[532,20760+6]..[532,20760+10])
                  expression (middle_end/flambda/flambda_utils.ml[532,20760+11]..[549,21502+55]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_utils.ml[532,20760+11]..[532,20760+14])
                      Ppat_var "var" (middle_end/flambda/flambda_utils.ml[532,20760+11]..[532,20760+14])
                    expression (middle_end/flambda/flambda_utils.ml[532,20760+15]..[549,21502+55]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/flambda_utils.ml[532,20760+15]..[532,20760+24])
                        Ppat_var "fresh_var" (middle_end/flambda/flambda_utils.ml[532,20760+15]..[532,20760+24])
                      expression (middle_end/flambda/flambda_utils.ml[532,20760+25]..[549,21502+55]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/flambda_utils.ml[532,20760+25]..[532,20760+41])
                          Ppat_constraint
                          pattern (middle_end/flambda/flambda_utils.ml[532,20760+26]..[532,20760+30])
                            Ppat_var "expr" (middle_end/flambda/flambda_utils.ml[532,20760+26]..[532,20760+30])
                          core_type (middle_end/flambda/flambda_utils.ml[532,20760+31]..[532,20760+40])
                            Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_utils.ml[532,20760+31]..[532,20760+40])
                            []
                        expression (middle_end/flambda/flambda_utils.ml[532,20760+42]..[549,21502+55])
                          Pexp_constraint
                          expression (middle_end/flambda/flambda_utils.ml[533,20816+4]..[549,21502+55])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/flambda_utils.ml[533,20816+8]..[533,20816+20])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[533,20816+8]..[533,20816+14])
                                      Ppat_var "symbol" (middle_end/flambda/flambda_utils.ml[533,20816+8]..[533,20816+14])
                                    pattern (middle_end/flambda/flambda_utils.ml[533,20816+16]..[533,20816+20])
                                      Ppat_var "path" (middle_end/flambda/flambda_utils.ml[533,20816+16]..[533,20816+20])
                                  ]
                                expression (middle_end/flambda/flambda_utils.ml[533,20816+23]..[533,20816+57])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_utils.ml[533,20816+23]..[533,20816+40])
                                    Pexp_ident "Variable.Map.find" (middle_end/flambda/flambda_utils.ml[533,20816+23]..[533,20816+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[533,20816+41]..[533,20816+44])
                                        Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[533,20816+41]..[533,20816+44])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[533,20816+45]..[533,20816+57])
                                        Pexp_ident "substitution" (middle_end/flambda/flambda_utils.ml[533,20816+45]..[533,20816+57])
                                  ]
                            ]
                            expression (middle_end/flambda/flambda_utils.ml[534,20877+4]..[549,21502+55])
                              Pexp_let Rec
                              [
                                <def>
                                  pattern (middle_end/flambda/flambda_utils.ml[534,20877+12]..[534,20877+22])
                                    Ppat_var "make_named" (middle_end/flambda/flambda_utils.ml[534,20877+12]..[534,20877+22])
                                  expression (middle_end/flambda/flambda_utils.ml[534,20877+23]..[547,21464+30]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/flambda_utils.ml[534,20877+23]..[534,20877+38])
                                      Ppat_constraint
                                      pattern (middle_end/flambda/flambda_utils.ml[534,20877+24]..[534,20877+28])
                                        Ppat_var "path" (middle_end/flambda/flambda_utils.ml[534,20877+24]..[534,20877+28])
                                      core_type (middle_end/flambda/flambda_utils.ml[534,20877+29]..[534,20877+37])
                                        Ptyp_constr "list" (middle_end/flambda/flambda_utils.ml[534,20877+33]..[534,20877+37])
                                        [
                                          core_type (middle_end/flambda/flambda_utils.ml[534,20877+29]..[534,20877+32])
                                            Ptyp_constr "int" (middle_end/flambda/flambda_utils.ml[534,20877+29]..[534,20877+32])
                                            []
                                        ]
                                    expression (middle_end/flambda/flambda_utils.ml[534,20877+39]..[547,21464+30])
                                      Pexp_constraint
                                      expression (middle_end/flambda/flambda_utils.ml[535,20934+6]..[547,21464+30])
                                        Pexp_match
                                        expression (middle_end/flambda/flambda_utils.ml[535,20934+12]..[535,20934+16])
                                          Pexp_ident "path" (middle_end/flambda/flambda_utils.ml[535,20934+12]..[535,20934+16])
                                        [
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[536,20956+8]..[536,20956+10])
                                              Ppat_construct "[]" (middle_end/flambda/flambda_utils.ml[536,20956+8]..[536,20956+10])
                                              None
                                            expression (middle_end/flambda/flambda_utils.ml[536,20956+14]..[536,20956+27])
                                              Pexp_construct "Symbol" (middle_end/flambda/flambda_utils.ml[536,20956+14]..[536,20956+20])
                                              Some
                                                expression (middle_end/flambda/flambda_utils.ml[536,20956+21]..[536,20956+27])
                                                  Pexp_ident "symbol" (middle_end/flambda/flambda_utils.ml[536,20956+21]..[536,20956+27])
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[537,20984+8]..[537,20984+11])
                                              Ppat_construct "::" (middle_end/flambda/flambda_utils.ml[537,20984+9]..[537,20984+11]) ghost
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_utils.ml[537,20984+9]..[537,20984+11]) ghost
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/flambda_utils.ml[537,20984+9]..[537,20984+10])
                                                      Ppat_var "i" (middle_end/flambda/flambda_utils.ml[537,20984+9]..[537,20984+10])
                                                    pattern (middle_end/flambda/flambda_utils.ml[537,20984+10]..[537,20984+11]) ghost
                                                      Ppat_construct "[]" (middle_end/flambda/flambda_utils.ml[537,20984+10]..[537,20984+11]) ghost
                                                      None
                                                  ]
                                            expression (middle_end/flambda/flambda_utils.ml[537,20984+15]..[537,20984+44])
                                              Pexp_construct "Read_symbol_field" (middle_end/flambda/flambda_utils.ml[537,20984+15]..[537,20984+32])
                                              Some
                                                expression (middle_end/flambda/flambda_utils.ml[537,20984+33]..[537,20984+44])
                                                  Pexp_tuple
                                                  [
                                                    expression (middle_end/flambda/flambda_utils.ml[537,20984+34]..[537,20984+40])
                                                      Pexp_ident "symbol" (middle_end/flambda/flambda_utils.ml[537,20984+34]..[537,20984+40])
                                                    expression (middle_end/flambda/flambda_utils.ml[537,20984+42]..[537,20984+43])
                                                      Pexp_ident "i" (middle_end/flambda/flambda_utils.ml[537,20984+42]..[537,20984+43])
                                                  ]
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[538,21029+8]..[538,21029+14])
                                              Ppat_construct "::" (middle_end/flambda/flambda_utils.ml[538,21029+10]..[538,21029+12])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_utils.ml[538,21029+8]..[538,21029+14]) ghost
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/flambda_utils.ml[538,21029+8]..[538,21029+9])
                                                      Ppat_var "h" (middle_end/flambda/flambda_utils.ml[538,21029+8]..[538,21029+9])
                                                    pattern (middle_end/flambda/flambda_utils.ml[538,21029+13]..[538,21029+14])
                                                      Ppat_var "t" (middle_end/flambda/flambda_utils.ml[538,21029+13]..[538,21029+14])
                                                  ]
                                            expression (middle_end/flambda/flambda_utils.ml[539,21047+10]..[547,21464+30])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/flambda_utils.ml[539,21047+14]..[539,21047+24])
                                                    Ppat_var "block_name" (middle_end/flambda/flambda_utils.ml[539,21047+14]..[539,21047+24])
                                                  expression (middle_end/flambda/flambda_utils.ml[539,21047+27]..[539,21047+69])
                                                    Pexp_ident "Internal_variable_names.symbol_field_block" (middle_end/flambda/flambda_utils.ml[539,21047+27]..[539,21047+69])
                                              ]
                                              expression (middle_end/flambda/flambda_utils.ml[540,21120+10]..[547,21464+30])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/flambda_utils.ml[540,21120+14]..[540,21120+19])
                                                      Ppat_var "block" (middle_end/flambda/flambda_utils.ml[540,21120+14]..[540,21120+19])
                                                    expression (middle_end/flambda/flambda_utils.ml[540,21120+22]..[540,21120+48])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_utils.ml[540,21120+22]..[540,21120+37])
                                                        Pexp_ident "Variable.create" (middle_end/flambda/flambda_utils.ml[540,21120+22]..[540,21120+37])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_utils.ml[540,21120+38]..[540,21120+48])
                                                            Pexp_ident "block_name" (middle_end/flambda/flambda_utils.ml[540,21120+38]..[540,21120+48])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/flambda_utils.ml[541,21172+10]..[547,21464+30])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/flambda_utils.ml[541,21172+14]..[541,21172+24])
                                                        Ppat_var "field_name" (middle_end/flambda/flambda_utils.ml[541,21172+14]..[541,21172+24])
                                                      expression (middle_end/flambda/flambda_utils.ml[541,21172+27]..[541,21172+67])
                                                        Pexp_ident "Internal_variable_names.get_symbol_field" (middle_end/flambda/flambda_utils.ml[541,21172+27]..[541,21172+67])
                                                  ]
                                                  expression (middle_end/flambda/flambda_utils.ml[542,21243+10]..[547,21464+30])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/flambda/flambda_utils.ml[542,21243+14]..[542,21243+19])
                                                          Ppat_var "field" (middle_end/flambda/flambda_utils.ml[542,21243+14]..[542,21243+19])
                                                        expression (middle_end/flambda/flambda_utils.ml[542,21243+22]..[542,21243+48])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_utils.ml[542,21243+22]..[542,21243+37])
                                                            Pexp_ident "Variable.create" (middle_end/flambda/flambda_utils.ml[542,21243+22]..[542,21243+37])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_utils.ml[542,21243+38]..[542,21243+48])
                                                                Pexp_ident "field_name" (middle_end/flambda/flambda_utils.ml[542,21243+38]..[542,21243+48])
                                                          ]
                                                    ]
                                                    expression (middle_end/flambda/flambda_utils.ml[543,21295+10]..[547,21464+30])
                                                      Pexp_construct "Expr" (middle_end/flambda/flambda_utils.ml[543,21295+10]..[543,21295+14])
                                                      Some
                                                        expression (middle_end/flambda/flambda_utils.ml[543,21295+15]..[547,21464+30])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_utils.ml[544,21312+12]..[544,21312+30])
                                                            Pexp_ident "Flambda.create_let" (middle_end/flambda/flambda_utils.ml[544,21312+12]..[544,21312+30])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_utils.ml[544,21312+31]..[544,21312+36])
                                                                Pexp_ident "block" (middle_end/flambda/flambda_utils.ml[544,21312+31]..[544,21312+36])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_utils.ml[544,21312+37]..[544,21312+51])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/flambda_utils.ml[544,21312+38]..[544,21312+48])
                                                                  Pexp_ident "make_named" (middle_end/flambda/flambda_utils.ml[544,21312+38]..[544,21312+48])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/flambda_utils.ml[544,21312+49]..[544,21312+50])
                                                                      Pexp_ident "t" (middle_end/flambda/flambda_utils.ml[544,21312+49]..[544,21312+50])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_utils.ml[545,21364+14]..[547,21464+29])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/flambda_utils.ml[545,21364+15]..[545,21364+33])
                                                                  Pexp_ident "Flambda.create_let" (middle_end/flambda/flambda_utils.ml[545,21364+15]..[545,21364+33])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/flambda_utils.ml[545,21364+34]..[545,21364+39])
                                                                      Pexp_ident "field" (middle_end/flambda/flambda_utils.ml[545,21364+34]..[545,21364+39])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/flambda_utils.ml[546,21404+17]..[546,21404+59])
                                                                      Pexp_construct "Prim" (middle_end/flambda/flambda_utils.ml[546,21404+18]..[546,21404+22])
                                                                      Some
expression (middle_end/flambda/flambda_utils.ml[546,21404+23]..[546,21404+58])
  Pexp_tuple
  [
    expression (middle_end/flambda/flambda_utils.ml[546,21404+24]..[546,21404+32])
      Pexp_construct "Pfield" (middle_end/flambda/flambda_utils.ml[546,21404+24]..[546,21404+30])
      Some
        expression (middle_end/flambda/flambda_utils.ml[546,21404+31]..[546,21404+32])
          Pexp_ident "h" (middle_end/flambda/flambda_utils.ml[546,21404+31]..[546,21404+32])
    expression (middle_end/flambda/flambda_utils.ml[546,21404+34]..[546,21404+41])
      Pexp_construct "::" (middle_end/flambda/flambda_utils.ml[546,21404+35]..[546,21404+41]) ghost
      Some
        expression (middle_end/flambda/flambda_utils.ml[546,21404+35]..[546,21404+41]) ghost
          Pexp_tuple
          [
            expression (middle_end/flambda/flambda_utils.ml[546,21404+35]..[546,21404+40])
              Pexp_ident "block" (middle_end/flambda/flambda_utils.ml[546,21404+35]..[546,21404+40])
            expression (middle_end/flambda/flambda_utils.ml[546,21404+40]..[546,21404+41]) ghost
              Pexp_construct "[]" (middle_end/flambda/flambda_utils.ml[546,21404+40]..[546,21404+41]) ghost
              None
          ]
    expression (middle_end/flambda/flambda_utils.ml[546,21404+43]..[546,21404+57])
      Pexp_ident "Debuginfo.none" (middle_end/flambda/flambda_utils.ml[546,21404+43]..[546,21404+57])
  ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/flambda_utils.ml[547,21464+17]..[547,21464+28])
                                                                      Pexp_construct "Var" (middle_end/flambda/flambda_utils.ml[547,21464+18]..[547,21464+21])
                                                                      Some
expression (middle_end/flambda/flambda_utils.ml[547,21464+22]..[547,21464+27])
  Pexp_ident "field" (middle_end/flambda/flambda_utils.ml[547,21464+22]..[547,21464+27])
                                                                ]
                                                          ]
                                        ]
                                      core_type (middle_end/flambda/flambda_utils.ml[534,20877+41]..[534,20877+54])
                                        Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_utils.ml[534,20877+41]..[534,20877+54])
                                        []
                              ]
                              expression (middle_end/flambda/flambda_utils.ml[549,21502+4]..[549,21502+55])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[549,21502+4]..[549,21502+22])
                                  Pexp_ident "Flambda.create_let" (middle_end/flambda/flambda_utils.ml[549,21502+4]..[549,21502+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[549,21502+23]..[549,21502+32])
                                      Pexp_ident "fresh_var" (middle_end/flambda/flambda_utils.ml[549,21502+23]..[549,21502+32])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[549,21502+33]..[549,21502+50])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[549,21502+34]..[549,21502+44])
                                        Pexp_ident "make_named" (middle_end/flambda/flambda_utils.ml[549,21502+34]..[549,21502+44])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[549,21502+45]..[549,21502+49])
                                            Pexp_ident "path" (middle_end/flambda/flambda_utils.ml[549,21502+45]..[549,21502+49])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[549,21502+51]..[549,21502+55])
                                      Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[549,21502+51]..[549,21502+55])
                                ]
                          core_type (middle_end/flambda/flambda_utils.ml[532,20760+44]..[532,20760+53])
                            Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_utils.ml[532,20760+44]..[532,20760+53])
                            []
              ]
              expression (middle_end/flambda/flambda_utils.ml[551,21563+2]..[724,27844+52])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (middle_end/flambda/flambda_utils.ml[551,21563+6]..[551,21563+22])
                      Ppat_var "substitute_named" (middle_end/flambda/flambda_utils.ml[551,21563+6]..[551,21563+22])
                    expression (middle_end/flambda/flambda_utils.ml[551,21563+23]..[592,23132+40]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/flambda_utils.ml[551,21563+23]..[551,21563+31])
                        Ppat_var "bindings" (middle_end/flambda/flambda_utils.ml[551,21563+23]..[551,21563+31])
                      expression (middle_end/flambda/flambda_utils.ml[551,21563+32]..[592,23132+40]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/flambda_utils.ml[551,21563+32]..[551,21563+53])
                          Ppat_constraint
                          pattern (middle_end/flambda/flambda_utils.ml[551,21563+33]..[551,21563+38])
                            Ppat_var "named" (middle_end/flambda/flambda_utils.ml[551,21563+33]..[551,21563+38])
                          core_type (middle_end/flambda/flambda_utils.ml[551,21563+39]..[551,21563+52])
                            Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_utils.ml[551,21563+39]..[551,21563+52])
                            []
                        expression (middle_end/flambda/flambda_utils.ml[551,21563+54]..[592,23132+40])
                          Pexp_constraint
                          expression (middle_end/flambda/flambda_utils.ml[552,21635+4]..[592,23132+40])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/flambda_utils.ml[552,21635+8]..[552,21635+10])
                                  Ppat_var "sb" (middle_end/flambda/flambda_utils.ml[552,21635+8]..[552,21635+10])
                                expression (middle_end/flambda/flambda_utils.ml[552,21635+11]..[555,21739+21]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/flambda_utils.ml[552,21635+11]..[552,21635+24])
                                    Ppat_var "to_substitute" (middle_end/flambda/flambda_utils.ml[552,21635+11]..[552,21635+24])
                                  expression (middle_end/flambda/flambda_utils.ml[553,21662+6]..[555,21739+21])
                                    Pexp_try
                                    expression (middle_end/flambda/flambda_utils.ml[553,21662+10]..[553,21662+50])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[553,21662+10]..[553,21662+27])
                                        Pexp_ident "Variable.Map.find" (middle_end/flambda/flambda_utils.ml[553,21662+10]..[553,21662+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[553,21662+28]..[553,21662+41])
                                            Pexp_ident "to_substitute" (middle_end/flambda/flambda_utils.ml[553,21662+28]..[553,21662+41])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[553,21662+42]..[553,21662+50])
                                            Pexp_ident "bindings" (middle_end/flambda/flambda_utils.ml[553,21662+42]..[553,21662+50])
                                      ]
                                    [
                                      <case>
                                        pattern (middle_end/flambda/flambda_utils.ml[554,21718+8]..[554,21718+17])
                                          Ppat_construct "Not_found" (middle_end/flambda/flambda_utils.ml[554,21718+8]..[554,21718+17])
                                          None
                                        expression (middle_end/flambda/flambda_utils.ml[555,21739+8]..[555,21739+21])
                                          Pexp_ident "to_substitute" (middle_end/flambda/flambda_utils.ml[555,21739+8]..[555,21739+21])
                                    ]
                            ]
                            expression (middle_end/flambda/flambda_utils.ml[557,21768+4]..[592,23132+40])
                              Pexp_match
                              expression (middle_end/flambda/flambda_utils.ml[557,21768+10]..[557,21768+15])
                                Pexp_ident "named" (middle_end/flambda/flambda_utils.ml[557,21768+10]..[557,21768+15])
                              [
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[558,21789+6]..[558,21789+33])
                                    Ppat_or
                                    pattern (middle_end/flambda/flambda_utils.ml[558,21789+6]..[558,21789+24])
                                      Ppat_or
                                      pattern (middle_end/flambda/flambda_utils.ml[558,21789+6]..[558,21789+14])
                                        Ppat_construct "Symbol" (middle_end/flambda/flambda_utils.ml[558,21789+6]..[558,21789+12])
                                        Some
                                          []
                                          pattern (middle_end/flambda/flambda_utils.ml[558,21789+13]..[558,21789+14])
                                            Ppat_any
                                      pattern (middle_end/flambda/flambda_utils.ml[558,21789+17]..[558,21789+24])
                                        Ppat_construct "Const" (middle_end/flambda/flambda_utils.ml[558,21789+17]..[558,21789+22])
                                        Some
                                          []
                                          pattern (middle_end/flambda/flambda_utils.ml[558,21789+23]..[558,21789+24])
                                            Ppat_any
                                    pattern (middle_end/flambda/flambda_utils.ml[558,21789+27]..[558,21789+33])
                                      Ppat_construct "Expr" (middle_end/flambda/flambda_utils.ml[558,21789+27]..[558,21789+31])
                                      Some
                                        []
                                        pattern (middle_end/flambda/flambda_utils.ml[558,21789+32]..[558,21789+33])
                                          Ppat_any
                                  expression (middle_end/flambda/flambda_utils.ml[558,21789+37]..[558,21789+42])
                                    Pexp_ident "named" (middle_end/flambda/flambda_utils.ml[558,21789+37]..[558,21789+42])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[559,21832+6]..[559,21832+40])
                                    Ppat_or
                                    pattern (middle_end/flambda/flambda_utils.ml[559,21832+6]..[559,21832+23])
                                      Ppat_construct "Allocated_const" (middle_end/flambda/flambda_utils.ml[559,21832+6]..[559,21832+21])
                                      Some
                                        []
                                        pattern (middle_end/flambda/flambda_utils.ml[559,21832+22]..[559,21832+23])
                                          Ppat_any
                                    pattern (middle_end/flambda/flambda_utils.ml[559,21832+26]..[559,21832+40])
                                      Ppat_construct "Read_mutable" (middle_end/flambda/flambda_utils.ml[559,21832+26]..[559,21832+38])
                                      Some
                                        []
                                        pattern (middle_end/flambda/flambda_utils.ml[559,21832+39]..[559,21832+40])
                                          Ppat_any
                                  expression (middle_end/flambda/flambda_utils.ml[559,21832+44]..[559,21832+49])
                                    Pexp_ident "named" (middle_end/flambda/flambda_utils.ml[559,21832+44]..[559,21832+49])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[560,21882+6]..[560,21882+25])
                                    Ppat_construct "Read_symbol_field" (middle_end/flambda/flambda_utils.ml[560,21882+6]..[560,21882+23])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[560,21882+24]..[560,21882+25])
                                        Ppat_any
                                  expression (middle_end/flambda/flambda_utils.ml[560,21882+29]..[560,21882+34])
                                    Pexp_ident "named" (middle_end/flambda/flambda_utils.ml[560,21882+29]..[560,21882+34])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[561,21917+6]..[561,21917+37])
                                    Ppat_construct "Set_of_closures" (middle_end/flambda/flambda_utils.ml[561,21917+6]..[561,21917+21])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[561,21917+22]..[561,21917+37])
                                        Ppat_var "set_of_closures" (middle_end/flambda/flambda_utils.ml[561,21917+22]..[561,21917+37])
                                  expression (middle_end/flambda/flambda_utils.ml[562,21958+6]..[575,22562+37])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[562,21958+10]..[562,21958+25])
                                          Ppat_var "set_of_closures" (middle_end/flambda/flambda_utils.ml[562,21958+10]..[562,21958+25])
                                        expression (middle_end/flambda/flambda_utils.ml[563,21986+8]..[573,22480+72])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[563,21986+8]..[563,21986+38])
                                            Pexp_ident "Flambda.create_set_of_closures" (middle_end/flambda/flambda_utils.ml[563,21986+8]..[563,21986+38])
                                          [
                                            <arg>
                                            Labelled "function_decls"
                                              expression (middle_end/flambda/flambda_utils.ml[564,22025+26]..[564,22025+56])
                                                Pexp_field
                                                expression (middle_end/flambda/flambda_utils.ml[564,22025+26]..[564,22025+41])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/flambda_utils.ml[564,22025+26]..[564,22025+41])
                                                "function_decls" (middle_end/flambda/flambda_utils.ml[564,22025+42]..[564,22025+56])
                                            <arg>
                                            Labelled "free_vars"
                                              expression (middle_end/flambda/flambda_utils.ml[566,22104+12]..[568,22233+40])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_utils.ml[566,22104+13]..[566,22104+29])
                                                  Pexp_ident "Variable.Map.map" (middle_end/flambda/flambda_utils.ml[566,22104+13]..[566,22104+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[566,22104+30]..[567,22177+55])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (middle_end/flambda/flambda_utils.ml[566,22104+35]..[566,22104+69])
                                                        Ppat_constraint
                                                        pattern (middle_end/flambda/flambda_utils.ml[566,22104+36]..[566,22104+43])
                                                          Ppat_var "spec_to" (middle_end/flambda/flambda_utils.ml[566,22104+36]..[566,22104+43])
                                                        core_type (middle_end/flambda/flambda_utils.ml[566,22104+46]..[566,22104+68])
                                                          Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/flambda_utils.ml[566,22104+46]..[566,22104+68])
                                                          []
                                                      expression (middle_end/flambda/flambda_utils.ml[567,22177+16]..[567,22177+54])
                                                        Pexp_record
                                                        [
                                                          "var" (middle_end/flambda/flambda_utils.ml[567,22177+31]..[567,22177+34])
                                                            expression (middle_end/flambda/flambda_utils.ml[567,22177+37]..[567,22177+51])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/flambda_utils.ml[567,22177+37]..[567,22177+39])
                                                                Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[567,22177+37]..[567,22177+39])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/flambda_utils.ml[567,22177+40]..[567,22177+51])
                                                                    Pexp_field
                                                                    expression (middle_end/flambda/flambda_utils.ml[567,22177+40]..[567,22177+47])
                                                                      Pexp_ident "spec_to" (middle_end/flambda/flambda_utils.ml[567,22177+40]..[567,22177+47])
                                                                    "var" (middle_end/flambda/flambda_utils.ml[567,22177+48]..[567,22177+51])
                                                              ]
                                                        ]
                                                        Some
                                                          expression (middle_end/flambda/flambda_utils.ml[567,22177+18]..[567,22177+25])
                                                            Pexp_ident "spec_to" (middle_end/flambda/flambda_utils.ml[567,22177+18]..[567,22177+25])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[568,22233+14]..[568,22233+39])
                                                      Pexp_field
                                                      expression (middle_end/flambda/flambda_utils.ml[568,22233+14]..[568,22233+29])
                                                        Pexp_ident "set_of_closures" (middle_end/flambda/flambda_utils.ml[568,22233+14]..[568,22233+29])
                                                      "free_vars" (middle_end/flambda/flambda_utils.ml[568,22233+30]..[568,22233+39])
                                                ]
                                            <arg>
                                            Labelled "specialised_args"
                                              expression (middle_end/flambda/flambda_utils.ml[570,22303+12]..[572,22432+47])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_utils.ml[570,22303+13]..[570,22303+29])
                                                  Pexp_ident "Variable.Map.map" (middle_end/flambda/flambda_utils.ml[570,22303+13]..[570,22303+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[570,22303+30]..[571,22376+55])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (middle_end/flambda/flambda_utils.ml[570,22303+35]..[570,22303+69])
                                                        Ppat_constraint
                                                        pattern (middle_end/flambda/flambda_utils.ml[570,22303+36]..[570,22303+43])
                                                          Ppat_var "spec_to" (middle_end/flambda/flambda_utils.ml[570,22303+36]..[570,22303+43])
                                                        core_type (middle_end/flambda/flambda_utils.ml[570,22303+46]..[570,22303+68])
                                                          Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/flambda_utils.ml[570,22303+46]..[570,22303+68])
                                                          []
                                                      expression (middle_end/flambda/flambda_utils.ml[571,22376+16]..[571,22376+54])
                                                        Pexp_record
                                                        [
                                                          "var" (middle_end/flambda/flambda_utils.ml[571,22376+31]..[571,22376+34])
                                                            expression (middle_end/flambda/flambda_utils.ml[571,22376+37]..[571,22376+51])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/flambda_utils.ml[571,22376+37]..[571,22376+39])
                                                                Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[571,22376+37]..[571,22376+39])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/flambda_utils.ml[571,22376+40]..[571,22376+51])
                                                                    Pexp_field
                                                                    expression (middle_end/flambda/flambda_utils.ml[571,22376+40]..[571,22376+47])
                                                                      Pexp_ident "spec_to" (middle_end/flambda/flambda_utils.ml[571,22376+40]..[571,22376+47])
                                                                    "var" (middle_end/flambda/flambda_utils.ml[571,22376+48]..[571,22376+51])
                                                              ]
                                                        ]
                                                        Some
                                                          expression (middle_end/flambda/flambda_utils.ml[571,22376+18]..[571,22376+25])
                                                            Pexp_ident "spec_to" (middle_end/flambda/flambda_utils.ml[571,22376+18]..[571,22376+25])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[572,22432+14]..[572,22432+46])
                                                      Pexp_field
                                                      expression (middle_end/flambda/flambda_utils.ml[572,22432+14]..[572,22432+29])
                                                        Pexp_ident "set_of_closures" (middle_end/flambda/flambda_utils.ml[572,22432+14]..[572,22432+29])
                                                      "specialised_args" (middle_end/flambda/flambda_utils.ml[572,22432+30]..[572,22432+46])
                                                ]
                                            <arg>
                                            Labelled "direct_call_surrogates"
                                              expression (middle_end/flambda/flambda_utils.ml[573,22480+34]..[573,22480+72])
                                                Pexp_field
                                                expression (middle_end/flambda/flambda_utils.ml[573,22480+34]..[573,22480+49])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/flambda_utils.ml[573,22480+34]..[573,22480+49])
                                                "direct_call_surrogates" (middle_end/flambda/flambda_utils.ml[573,22480+50]..[573,22480+72])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[575,22562+6]..[575,22562+37])
                                      Pexp_construct "Set_of_closures" (middle_end/flambda/flambda_utils.ml[575,22562+6]..[575,22562+21])
                                      Some
                                        expression (middle_end/flambda/flambda_utils.ml[575,22562+22]..[575,22562+37])
                                          Pexp_ident "set_of_closures" (middle_end/flambda/flambda_utils.ml[575,22562+22]..[575,22562+37])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[576,22600+6]..[576,22600+37])
                                    Ppat_construct "Project_closure" (middle_end/flambda/flambda_utils.ml[576,22600+6]..[576,22600+21])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[576,22600+22]..[576,22600+37])
                                        Ppat_var "project_closure" (middle_end/flambda/flambda_utils.ml[576,22600+22]..[576,22600+37])
                                  expression (middle_end/flambda/flambda_utils.ml[577,22641+6]..[580,22756+7])
                                    Pexp_construct "Project_closure" (middle_end/flambda/flambda_utils.ml[577,22641+6]..[577,22641+21])
                                    Some
                                      expression (middle_end/flambda/flambda_utils.ml[577,22641+22]..[580,22756+7])
                                        Pexp_record
                                        [
                                          "set_of_closures" (middle_end/flambda/flambda_utils.ml[579,22694+8]..[579,22694+23])
                                            expression (middle_end/flambda/flambda_utils.ml[579,22694+26]..[579,22694+60])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_utils.ml[579,22694+26]..[579,22694+28])
                                                Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[579,22694+26]..[579,22694+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[579,22694+29]..[579,22694+60])
                                                    Pexp_field
                                                    expression (middle_end/flambda/flambda_utils.ml[579,22694+29]..[579,22694+44])
                                                      Pexp_ident "project_closure" (middle_end/flambda/flambda_utils.ml[579,22694+29]..[579,22694+44])
                                                    "set_of_closures" (middle_end/flambda/flambda_utils.ml[579,22694+45]..[579,22694+60])
                                              ]
                                        ]
                                        Some
                                          expression (middle_end/flambda/flambda_utils.ml[578,22665+8]..[578,22665+23])
                                            Pexp_ident "project_closure" (middle_end/flambda/flambda_utils.ml[578,22665+8]..[578,22665+23])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[581,22764+6]..[581,22764+61])
                                    Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[581,22764+6]..[581,22764+33])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[581,22764+34]..[581,22764+61])
                                        Ppat_var "move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[581,22764+34]..[581,22764+61])
                                  expression (middle_end/flambda/flambda_utils.ml[582,22829+6]..[585,22964+7])
                                    Pexp_construct "Move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[582,22829+6]..[582,22829+33])
                                    Some
                                      expression (middle_end/flambda/flambda_utils.ml[582,22829+34]..[585,22964+7])
                                        Pexp_record
                                        [
                                          "closure" (middle_end/flambda/flambda_utils.ml[584,22906+8]..[584,22906+15])
                                            expression (middle_end/flambda/flambda_utils.ml[584,22906+18]..[584,22906+56])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_utils.ml[584,22906+18]..[584,22906+20])
                                                Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[584,22906+18]..[584,22906+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[584,22906+21]..[584,22906+56])
                                                    Pexp_field
                                                    expression (middle_end/flambda/flambda_utils.ml[584,22906+21]..[584,22906+48])
                                                      Pexp_ident "move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[584,22906+21]..[584,22906+48])
                                                    "closure" (middle_end/flambda/flambda_utils.ml[584,22906+49]..[584,22906+56])
                                              ]
                                        ]
                                        Some
                                          expression (middle_end/flambda/flambda_utils.ml[583,22865+8]..[583,22865+35])
                                            Pexp_ident "move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[583,22865+8]..[583,22865+35])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[586,22972+6]..[586,22972+29])
                                    Ppat_construct "Project_var" (middle_end/flambda/flambda_utils.ml[586,22972+6]..[586,22972+17])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[586,22972+18]..[586,22972+29])
                                        Ppat_var "project_var" (middle_end/flambda/flambda_utils.ml[586,22972+18]..[586,22972+29])
                                  expression (middle_end/flambda/flambda_utils.ml[587,23005+6]..[590,23092+7])
                                    Pexp_construct "Project_var" (middle_end/flambda/flambda_utils.ml[587,23005+6]..[587,23005+17])
                                    Some
                                      expression (middle_end/flambda/flambda_utils.ml[587,23005+18]..[590,23092+7])
                                        Pexp_record
                                        [
                                          "closure" (middle_end/flambda/flambda_utils.ml[589,23050+8]..[589,23050+15])
                                            expression (middle_end/flambda/flambda_utils.ml[589,23050+18]..[589,23050+40])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_utils.ml[589,23050+18]..[589,23050+20])
                                                Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[589,23050+18]..[589,23050+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[589,23050+21]..[589,23050+40])
                                                    Pexp_field
                                                    expression (middle_end/flambda/flambda_utils.ml[589,23050+21]..[589,23050+32])
                                                      Pexp_ident "project_var" (middle_end/flambda/flambda_utils.ml[589,23050+21]..[589,23050+32])
                                                    "closure" (middle_end/flambda/flambda_utils.ml[589,23050+33]..[589,23050+40])
                                              ]
                                        ]
                                        Some
                                          expression (middle_end/flambda/flambda_utils.ml[588,23025+8]..[588,23025+19])
                                            Pexp_ident "project_var" (middle_end/flambda/flambda_utils.ml[588,23025+8]..[588,23025+19])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[591,23100+6]..[591,23100+28])
                                    Ppat_construct "Prim" (middle_end/flambda/flambda_utils.ml[591,23100+6]..[591,23100+10])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[591,23100+11]..[591,23100+28])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/flambda_utils.ml[591,23100+12]..[591,23100+16])
                                            Ppat_var "prim" (middle_end/flambda/flambda_utils.ml[591,23100+12]..[591,23100+16])
                                          pattern (middle_end/flambda/flambda_utils.ml[591,23100+18]..[591,23100+22])
                                            Ppat_var "args" (middle_end/flambda/flambda_utils.ml[591,23100+18]..[591,23100+22])
                                          pattern (middle_end/flambda/flambda_utils.ml[591,23100+24]..[591,23100+27])
                                            Ppat_var "dbg" (middle_end/flambda/flambda_utils.ml[591,23100+24]..[591,23100+27])
                                        ]
                                  expression (middle_end/flambda/flambda_utils.ml[592,23132+6]..[592,23132+40])
                                    Pexp_construct "Prim" (middle_end/flambda/flambda_utils.ml[592,23132+6]..[592,23132+10])
                                    Some
                                      expression (middle_end/flambda/flambda_utils.ml[592,23132+11]..[592,23132+40])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/flambda/flambda_utils.ml[592,23132+12]..[592,23132+16])
                                            Pexp_ident "prim" (middle_end/flambda/flambda_utils.ml[592,23132+12]..[592,23132+16])
                                          expression (middle_end/flambda/flambda_utils.ml[592,23132+18]..[592,23132+34])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[592,23132+18]..[592,23132+26])
                                              Pexp_ident "List.map" (middle_end/flambda/flambda_utils.ml[592,23132+18]..[592,23132+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[592,23132+27]..[592,23132+29])
                                                  Pexp_ident "sb" (middle_end/flambda/flambda_utils.ml[592,23132+27]..[592,23132+29])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[592,23132+30]..[592,23132+34])
                                                  Pexp_ident "args" (middle_end/flambda/flambda_utils.ml[592,23132+30]..[592,23132+34])
                                            ]
                                          expression (middle_end/flambda/flambda_utils.ml[592,23132+36]..[592,23132+39])
                                            Pexp_ident "dbg" (middle_end/flambda/flambda_utils.ml[592,23132+36]..[592,23132+39])
                                        ]
                              ]
                          core_type (middle_end/flambda/flambda_utils.ml[551,21563+56]..[551,21563+69])
                            Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_utils.ml[551,21563+56]..[551,21563+69])
                            []
                ]
                expression (middle_end/flambda/flambda_utils.ml[594,23178+2]..[724,27844+52])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/flambda/flambda_utils.ml[594,23178+6]..[594,23178+20])
                        Ppat_var "make_var_subst" (middle_end/flambda/flambda_utils.ml[594,23178+6]..[594,23178+20])
                      expression (middle_end/flambda/flambda_utils.ml[594,23178+21]..[599,23348+23]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/flambda_utils.ml[594,23178+21]..[594,23178+24])
                          Ppat_var "var" (middle_end/flambda/flambda_utils.ml[594,23178+21]..[594,23178+24])
                        expression (middle_end/flambda/flambda_utils.ml[595,23205+4]..[599,23348+23])
                          Pexp_ifthenelse
                          expression (middle_end/flambda/flambda_utils.ml[595,23205+7]..[595,23205+40])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_utils.ml[595,23205+7]..[595,23205+23])
                              Pexp_ident "Variable.Map.mem" (middle_end/flambda/flambda_utils.ml[595,23205+7]..[595,23205+23])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[595,23205+24]..[595,23205+27])
                                  Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[595,23205+24]..[595,23205+27])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[595,23205+28]..[595,23205+40])
                                  Pexp_ident "substitution" (middle_end/flambda/flambda_utils.ml[595,23205+28]..[595,23205+40])
                            ]
                          expression (middle_end/flambda/flambda_utils.ml[596,23251+6]..[597,23292+46])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/flambda_utils.ml[596,23251+10]..[596,23251+15])
                                  Ppat_var "fresh" (middle_end/flambda/flambda_utils.ml[596,23251+10]..[596,23251+15])
                                expression (middle_end/flambda/flambda_utils.ml[596,23251+18]..[596,23251+37])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_utils.ml[596,23251+18]..[596,23251+33])
                                    Pexp_ident "Variable.rename" (middle_end/flambda/flambda_utils.ml[596,23251+18]..[596,23251+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[596,23251+34]..[596,23251+37])
                                        Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[596,23251+34]..[596,23251+37])
                                  ]
                            ]
                            expression (middle_end/flambda/flambda_utils.ml[597,23292+6]..[597,23292+46])
                              Pexp_tuple
                              [
                                expression (middle_end/flambda/flambda_utils.ml[597,23292+6]..[597,23292+11])
                                  Pexp_ident "fresh" (middle_end/flambda/flambda_utils.ml[597,23292+6]..[597,23292+11])
                                expression (middle_end/flambda/flambda_utils.ml[597,23292+13]..[597,23292+46])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/flambda_utils.ml[597,23292+18]..[597,23292+22])
                                    Ppat_var "expr" (middle_end/flambda/flambda_utils.ml[597,23292+18]..[597,23292+22])
                                  expression (middle_end/flambda/flambda_utils.ml[597,23292+26]..[597,23292+45])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_utils.ml[597,23292+26]..[597,23292+30])
                                      Pexp_ident "bind" (middle_end/flambda/flambda_utils.ml[597,23292+26]..[597,23292+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_utils.ml[597,23292+31]..[597,23292+34])
                                          Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[597,23292+31]..[597,23292+34])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_utils.ml[597,23292+35]..[597,23292+40])
                                          Pexp_ident "fresh" (middle_end/flambda/flambda_utils.ml[597,23292+35]..[597,23292+40])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_utils.ml[597,23292+41]..[597,23292+45])
                                          Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[597,23292+41]..[597,23292+45])
                                    ]
                              ]
                          Some
                            expression (middle_end/flambda/flambda_utils.ml[599,23348+6]..[599,23348+23])
                              Pexp_tuple
                              [
                                expression (middle_end/flambda/flambda_utils.ml[599,23348+6]..[599,23348+9])
                                  Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[599,23348+6]..[599,23348+9])
                                expression (middle_end/flambda/flambda_utils.ml[599,23348+11]..[599,23348+23])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/flambda_utils.ml[599,23348+16]..[599,23348+17])
                                    Ppat_var "x" (middle_end/flambda/flambda_utils.ml[599,23348+16]..[599,23348+17])
                                  expression (middle_end/flambda/flambda_utils.ml[599,23348+21]..[599,23348+22])
                                    Pexp_ident "x" (middle_end/flambda/flambda_utils.ml[599,23348+21]..[599,23348+22])
                              ]
                  ]
                  expression (middle_end/flambda/flambda_utils.ml[601,23377+2]..[724,27844+52])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/flambda_utils.ml[601,23377+6]..[601,23377+7])
                          Ppat_var "f" (middle_end/flambda/flambda_utils.ml[601,23377+6]..[601,23377+7])
                        expression (middle_end/flambda/flambda_utils.ml[601,23377+8]..[722,27828+10]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/flambda_utils.ml[601,23377+8]..[601,23377+24])
                            Ppat_constraint
                            pattern (middle_end/flambda/flambda_utils.ml[601,23377+9]..[601,23377+13])
                              Ppat_var "expr" (middle_end/flambda/flambda_utils.ml[601,23377+9]..[601,23377+13])
                            core_type (middle_end/flambda/flambda_utils.ml[601,23377+14]..[601,23377+23])
                              Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_utils.ml[601,23377+14]..[601,23377+23])
                              []
                          expression (middle_end/flambda/flambda_utils.ml[601,23377+25]..[722,27828+10])
                            Pexp_constraint
                            expression (middle_end/flambda/flambda_utils.ml[602,23416+4]..[722,27828+10])
                              Pexp_match
                              expression (middle_end/flambda/flambda_utils.ml[602,23416+10]..[602,23416+14])
                                Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[602,23416+10]..[602,23416+14])
                              [
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[603,23436+6]..[603,23436+11])
                                    Ppat_construct "Var" (middle_end/flambda/flambda_utils.ml[603,23436+6]..[603,23436+9])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[603,23436+10]..[603,23436+11])
                                        Ppat_var "v" (middle_end/flambda/flambda_utils.ml[603,23436+10]..[603,23436+11])
                                  <when>
                                    expression (middle_end/flambda/flambda_utils.ml[603,23436+17]..[603,23436+48])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[603,23436+17]..[603,23436+33])
                                        Pexp_ident "Variable.Map.mem" (middle_end/flambda/flambda_utils.ml[603,23436+17]..[603,23436+33])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[603,23436+34]..[603,23436+35])
                                            Pexp_ident "v" (middle_end/flambda/flambda_utils.ml[603,23436+34]..[603,23436+35])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[603,23436+36]..[603,23436+48])
                                            Pexp_ident "substitution" (middle_end/flambda/flambda_utils.ml[603,23436+36]..[603,23436+48])
                                      ]
                                  expression (middle_end/flambda/flambda_utils.ml[604,23488+6]..[605,23527+30])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[604,23488+10]..[604,23488+15])
                                          Ppat_var "fresh" (middle_end/flambda/flambda_utils.ml[604,23488+10]..[604,23488+15])
                                        expression (middle_end/flambda/flambda_utils.ml[604,23488+18]..[604,23488+35])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[604,23488+18]..[604,23488+33])
                                            Pexp_ident "Variable.rename" (middle_end/flambda/flambda_utils.ml[604,23488+18]..[604,23488+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[604,23488+34]..[604,23488+35])
                                                Pexp_ident "v" (middle_end/flambda/flambda_utils.ml[604,23488+34]..[604,23488+35])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[605,23527+6]..[605,23527+30])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[605,23527+6]..[605,23527+10])
                                        Pexp_ident "bind" (middle_end/flambda/flambda_utils.ml[605,23527+6]..[605,23527+10])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[605,23527+11]..[605,23527+12])
                                            Pexp_ident "v" (middle_end/flambda/flambda_utils.ml[605,23527+11]..[605,23527+12])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[605,23527+13]..[605,23527+18])
                                            Pexp_ident "fresh" (middle_end/flambda/flambda_utils.ml[605,23527+13]..[605,23527+18])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[605,23527+19]..[605,23527+30])
                                            Pexp_construct "Var" (middle_end/flambda/flambda_utils.ml[605,23527+20]..[605,23527+23])
                                            Some
                                              expression (middle_end/flambda/flambda_utils.ml[605,23527+24]..[605,23527+29])
                                                Pexp_ident "fresh" (middle_end/flambda/flambda_utils.ml[605,23527+24]..[605,23527+29])
                                      ]
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[606,23558+6]..[606,23558+11])
                                    Ppat_construct "Var" (middle_end/flambda/flambda_utils.ml[606,23558+6]..[606,23558+9])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[606,23558+10]..[606,23558+11])
                                        Ppat_any
                                  expression (middle_end/flambda/flambda_utils.ml[606,23558+15]..[606,23558+19])
                                    Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[606,23558+15]..[606,23558+19])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[607,23578+6]..[607,23578+61])
                                    Ppat_construct "Let" (middle_end/flambda/flambda_utils.ml[607,23578+6]..[607,23578+9])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[607,23578+10]..[607,23578+61])
                                        Ppat_alias "let_expr" (middle_end/flambda/flambda_utils.ml[607,23578+52]..[607,23578+60])
                                        pattern (middle_end/flambda/flambda_utils.ml[607,23578+11]..[607,23578+48])
                                          Ppat_record Open
                                          [
                                            "var" (middle_end/flambda/flambda_utils.ml[607,23578+13]..[607,23578+16])
                                              pattern (middle_end/flambda/flambda_utils.ml[607,23578+19]..[607,23578+20])
                                                Ppat_var "v" (middle_end/flambda/flambda_utils.ml[607,23578+19]..[607,23578+20])
                                            "defining_expr" (middle_end/flambda/flambda_utils.ml[607,23578+22]..[607,23578+35])
                                              pattern (middle_end/flambda/flambda_utils.ml[607,23578+38]..[607,23578+43])
                                                Ppat_var "named" (middle_end/flambda/flambda_utils.ml[607,23578+38]..[607,23578+43])
                                          ]
                                  expression (middle_end/flambda/flambda_utils.ml[608,23643+6]..[628,24324+23])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[608,23643+10]..[608,23643+23])
                                          Ppat_var "to_substitute" (middle_end/flambda/flambda_utils.ml[608,23643+10]..[608,23643+23])
                                        expression (middle_end/flambda/flambda_utils.ml[609,23669+8]..[611,23750+46])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[609,23669+8]..[609,23669+27])
                                            Pexp_ident "Variable.Set.filter" (middle_end/flambda/flambda_utils.ml[609,23669+8]..[609,23669+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[610,23697+10]..[610,23697+52])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (middle_end/flambda/flambda_utils.ml[610,23697+15]..[610,23697+16])
                                                  Ppat_var "v" (middle_end/flambda/flambda_utils.ml[610,23697+15]..[610,23697+16])
                                                expression (middle_end/flambda/flambda_utils.ml[610,23697+20]..[610,23697+51])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/flambda_utils.ml[610,23697+20]..[610,23697+36])
                                                    Pexp_ident "Variable.Map.mem" (middle_end/flambda/flambda_utils.ml[610,23697+20]..[610,23697+36])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[610,23697+37]..[610,23697+38])
                                                        Pexp_ident "v" (middle_end/flambda/flambda_utils.ml[610,23697+37]..[610,23697+38])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[610,23697+39]..[610,23697+51])
                                                        Pexp_ident "substitution" (middle_end/flambda/flambda_utils.ml[610,23697+39]..[610,23697+51])
                                                  ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[611,23750+10]..[611,23750+46])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_utils.ml[611,23750+11]..[611,23750+39])
                                                  Pexp_ident "Flambda.free_variables_named" (middle_end/flambda/flambda_utils.ml[611,23750+11]..[611,23750+39])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[611,23750+40]..[611,23750+45])
                                                      Pexp_ident "named" (middle_end/flambda/flambda_utils.ml[611,23750+40]..[611,23750+45])
                                                ]
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[613,23806+6]..[628,24324+23])
                                      Pexp_ifthenelse
                                      expression (middle_end/flambda/flambda_utils.ml[613,23806+9]..[613,23806+44])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[613,23806+9]..[613,23806+30])
                                          Pexp_ident "Variable.Set.is_empty" (middle_end/flambda/flambda_utils.ml[613,23806+9]..[613,23806+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[613,23806+31]..[613,23806+44])
                                              Pexp_ident "to_substitute" (middle_end/flambda/flambda_utils.ml[613,23806+31]..[613,23806+44])
                                        ]
                                      expression (middle_end/flambda/flambda_utils.ml[614,23856+8]..[614,23856+12])
                                        Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[614,23856+8]..[614,23856+12])
                                      Some
                                        expression (middle_end/flambda/flambda_utils.ml[616,23880+8]..[628,24324+23])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/flambda_utils.ml[616,23880+12]..[616,23880+20])
                                                Ppat_var "bindings" (middle_end/flambda/flambda_utils.ml[616,23880+12]..[616,23880+20])
                                              expression (middle_end/flambda/flambda_utils.ml[617,23903+10]..[617,23903+76])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_utils.ml[617,23903+10]..[617,23903+29])
                                                  Pexp_ident "Variable.Map.of_set" (middle_end/flambda/flambda_utils.ml[617,23903+10]..[617,23903+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[617,23903+30]..[617,23903+62])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (middle_end/flambda/flambda_utils.ml[617,23903+35]..[617,23903+38])
                                                        Ppat_var "var" (middle_end/flambda/flambda_utils.ml[617,23903+35]..[617,23903+38])
                                                      expression (middle_end/flambda/flambda_utils.ml[617,23903+42]..[617,23903+61])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/flambda_utils.ml[617,23903+42]..[617,23903+57])
                                                          Pexp_ident "Variable.rename" (middle_end/flambda/flambda_utils.ml[617,23903+42]..[617,23903+57])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/flambda_utils.ml[617,23903+58]..[617,23903+61])
                                                              Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[617,23903+58]..[617,23903+61])
                                                        ]
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[617,23903+63]..[617,23903+76])
                                                      Pexp_ident "to_substitute" (middle_end/flambda/flambda_utils.ml[617,23903+63]..[617,23903+76])
                                                ]
                                          ]
                                          expression (middle_end/flambda/flambda_utils.ml[619,23991+8]..[628,24324+23])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/flambda_utils.ml[619,23991+12]..[619,23991+17])
                                                  Ppat_var "named" (middle_end/flambda/flambda_utils.ml[619,23991+12]..[619,23991+17])
                                                expression (middle_end/flambda/flambda_utils.ml[620,24011+10]..[620,24011+41])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/flambda_utils.ml[620,24011+10]..[620,24011+26])
                                                    Pexp_ident "substitute_named" (middle_end/flambda/flambda_utils.ml[620,24011+10]..[620,24011+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[620,24011+27]..[620,24011+35])
                                                        Pexp_ident "bindings" (middle_end/flambda/flambda_utils.ml[620,24011+27]..[620,24011+35])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[620,24011+36]..[620,24011+41])
                                                        Pexp_ident "named" (middle_end/flambda/flambda_utils.ml[620,24011+36]..[620,24011+41])
                                                  ]
                                            ]
                                            expression (middle_end/flambda/flambda_utils.ml[622,24064+8]..[628,24324+23])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/flambda_utils.ml[622,24064+12]..[622,24064+16])
                                                    Ppat_var "expr" (middle_end/flambda/flambda_utils.ml[622,24064+12]..[622,24064+16])
                                                  expression (middle_end/flambda/flambda_utils.ml[623,24083+10]..[624,24139+71])
                                                    Pexp_letmodule "W" (middle_end/flambda/flambda_utils.ml[623,24083+21]..[623,24083+22])
                                                    module_expr (middle_end/flambda/flambda_utils.ml[623,24083+25]..[623,24083+52])
                                                      Pmod_ident "Flambda.With_free_variables" (middle_end/flambda/flambda_utils.ml[623,24083+25]..[623,24083+52])
                                                    expression (middle_end/flambda/flambda_utils.ml[624,24139+10]..[624,24139+71])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_utils.ml[624,24139+10]..[624,24139+35])
                                                        Pexp_ident "W.create_let_reusing_body" (middle_end/flambda/flambda_utils.ml[624,24139+10]..[624,24139+35])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_utils.ml[624,24139+36]..[624,24139+37])
                                                            Pexp_ident "v" (middle_end/flambda/flambda_utils.ml[624,24139+36]..[624,24139+37])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_utils.ml[624,24139+38]..[624,24139+43])
                                                            Pexp_ident "named" (middle_end/flambda/flambda_utils.ml[624,24139+38]..[624,24139+43])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_utils.ml[624,24139+44]..[624,24139+71])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/flambda_utils.ml[624,24139+45]..[624,24139+61])
                                                              Pexp_ident "W.of_body_of_let" (middle_end/flambda/flambda_utils.ml[624,24139+45]..[624,24139+61])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_utils.ml[624,24139+62]..[624,24139+70])
                                                                  Pexp_ident "let_expr" (middle_end/flambda/flambda_utils.ml[624,24139+62]..[624,24139+70])
                                                            ]
                                                      ]
                                              ]
                                              expression (middle_end/flambda/flambda_utils.ml[626,24222+8]..[628,24324+23])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_utils.ml[626,24222+8]..[626,24222+25])
                                                  Pexp_ident "Variable.Map.fold" (middle_end/flambda/flambda_utils.ml[626,24222+8]..[626,24222+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[626,24222+26]..[627,24281+42])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (middle_end/flambda/flambda_utils.ml[626,24222+31]..[626,24222+44])
                                                        Ppat_var "to_substitute" (middle_end/flambda/flambda_utils.ml[626,24222+31]..[626,24222+44])
                                                      expression (middle_end/flambda/flambda_utils.ml[626,24222+45]..[627,24281+41]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (middle_end/flambda/flambda_utils.ml[626,24222+45]..[626,24222+50])
                                                          Ppat_var "fresh" (middle_end/flambda/flambda_utils.ml[626,24222+45]..[626,24222+50])
                                                        expression (middle_end/flambda/flambda_utils.ml[626,24222+51]..[627,24281+41]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (middle_end/flambda/flambda_utils.ml[626,24222+51]..[626,24222+55])
                                                            Ppat_var "expr" (middle_end/flambda/flambda_utils.ml[626,24222+51]..[626,24222+55])
                                                          expression (middle_end/flambda/flambda_utils.ml[627,24281+12]..[627,24281+41])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/flambda_utils.ml[627,24281+12]..[627,24281+16])
                                                              Pexp_ident "bind" (middle_end/flambda/flambda_utils.ml[627,24281+12]..[627,24281+16])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_utils.ml[627,24281+17]..[627,24281+30])
                                                                  Pexp_ident "to_substitute" (middle_end/flambda/flambda_utils.ml[627,24281+17]..[627,24281+30])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_utils.ml[627,24281+31]..[627,24281+36])
                                                                  Pexp_ident "fresh" (middle_end/flambda/flambda_utils.ml[627,24281+31]..[627,24281+36])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_utils.ml[627,24281+37]..[627,24281+41])
                                                                  Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[627,24281+37]..[627,24281+41])
                                                            ]
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[628,24324+10]..[628,24324+18])
                                                      Pexp_ident "bindings" (middle_end/flambda/flambda_utils.ml[628,24324+10]..[628,24324+18])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[628,24324+19]..[628,24324+23])
                                                      Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[628,24324+19]..[628,24324+23])
                                                ]
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[629,24348+6]..[629,24348+29])
                                    Ppat_construct "Let_mutable" (middle_end/flambda/flambda_utils.ml[629,24348+6]..[629,24348+17])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[629,24348+18]..[629,24348+29])
                                        Ppat_var "let_mutable" (middle_end/flambda/flambda_utils.ml[629,24348+18]..[629,24348+29])
                                  <when>
                                    expression (middle_end/flambda/flambda_utils.ml[630,24383+8]..[630,24383+63])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[630,24383+8]..[630,24383+24])
                                        Pexp_ident "Variable.Map.mem" (middle_end/flambda/flambda_utils.ml[630,24383+8]..[630,24383+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[630,24383+25]..[630,24383+50])
                                            Pexp_field
                                            expression (middle_end/flambda/flambda_utils.ml[630,24383+25]..[630,24383+36])
                                              Pexp_ident "let_mutable" (middle_end/flambda/flambda_utils.ml[630,24383+25]..[630,24383+36])
                                            "initial_value" (middle_end/flambda/flambda_utils.ml[630,24383+37]..[630,24383+50])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[630,24383+51]..[630,24383+63])
                                            Pexp_ident "substitution" (middle_end/flambda/flambda_utils.ml[630,24383+51]..[630,24383+63])
                                      ]
                                  expression (middle_end/flambda/flambda_utils.ml[631,24450+6]..[633,24556+64])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[631,24450+10]..[631,24450+15])
                                          Ppat_var "fresh" (middle_end/flambda/flambda_utils.ml[631,24450+10]..[631,24450+15])
                                        expression (middle_end/flambda/flambda_utils.ml[631,24450+18]..[631,24450+59])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[631,24450+18]..[631,24450+33])
                                            Pexp_ident "Variable.rename" (middle_end/flambda/flambda_utils.ml[631,24450+18]..[631,24450+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[631,24450+34]..[631,24450+59])
                                                Pexp_field
                                                expression (middle_end/flambda/flambda_utils.ml[631,24450+34]..[631,24450+45])
                                                  Pexp_ident "let_mutable" (middle_end/flambda/flambda_utils.ml[631,24450+34]..[631,24450+45])
                                                "initial_value" (middle_end/flambda/flambda_utils.ml[631,24450+46]..[631,24450+59])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[632,24513+6]..[633,24556+64])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[632,24513+6]..[632,24513+10])
                                        Pexp_ident "bind" (middle_end/flambda/flambda_utils.ml[632,24513+6]..[632,24513+10])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[632,24513+11]..[632,24513+36])
                                            Pexp_field
                                            expression (middle_end/flambda/flambda_utils.ml[632,24513+11]..[632,24513+22])
                                              Pexp_ident "let_mutable" (middle_end/flambda/flambda_utils.ml[632,24513+11]..[632,24513+22])
                                            "initial_value" (middle_end/flambda/flambda_utils.ml[632,24513+23]..[632,24513+36])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[632,24513+37]..[632,24513+42])
                                            Pexp_ident "fresh" (middle_end/flambda/flambda_utils.ml[632,24513+37]..[632,24513+42])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[633,24556+8]..[633,24556+64])
                                            Pexp_construct "Let_mutable" (middle_end/flambda/flambda_utils.ml[633,24556+9]..[633,24556+20])
                                            Some
                                              expression (middle_end/flambda/flambda_utils.ml[633,24556+21]..[633,24556+63])
                                                Pexp_record
                                                [
                                                  "initial_value" (middle_end/flambda/flambda_utils.ml[633,24556+40]..[633,24556+53])
                                                    expression (middle_end/flambda/flambda_utils.ml[633,24556+56]..[633,24556+61])
                                                      Pexp_ident "fresh" (middle_end/flambda/flambda_utils.ml[633,24556+56]..[633,24556+61])
                                                ]
                                                Some
                                                  expression (middle_end/flambda/flambda_utils.ml[633,24556+23]..[633,24556+34])
                                                    Pexp_ident "let_mutable" (middle_end/flambda/flambda_utils.ml[633,24556+23]..[633,24556+34])
                                      ]
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[634,24621+6]..[634,24621+19])
                                    Ppat_construct "Let_mutable" (middle_end/flambda/flambda_utils.ml[634,24621+6]..[634,24621+17])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[634,24621+18]..[634,24621+19])
                                        Ppat_any
                                  expression (middle_end/flambda/flambda_utils.ml[635,24644+6]..[635,24644+10])
                                    Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[635,24644+6]..[635,24644+10])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[636,24655+6]..[636,24655+26])
                                    Ppat_construct "Let_rec" (middle_end/flambda/flambda_utils.ml[636,24655+6]..[636,24655+13])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[636,24655+14]..[636,24655+26])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/flambda_utils.ml[636,24655+15]..[636,24655+19])
                                            Ppat_var "defs" (middle_end/flambda/flambda_utils.ml[636,24655+15]..[636,24655+19])
                                          pattern (middle_end/flambda/flambda_utils.ml[636,24655+21]..[636,24655+25])
                                            Ppat_var "body" (middle_end/flambda/flambda_utils.ml[636,24655+21]..[636,24655+25])
                                        ]
                                  expression (middle_end/flambda/flambda_utils.ml[637,24685+6]..[664,25556+9])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[637,24685+10]..[637,24685+32])
                                          Ppat_var "free_variables_of_defs" (middle_end/flambda/flambda_utils.ml[637,24685+10]..[637,24685+32])
                                        expression (middle_end/flambda/flambda_utils.ml[638,24720+8]..[640,24839+33])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[638,24720+8]..[638,24720+22])
                                            Pexp_ident "List.fold_left" (middle_end/flambda/flambda_utils.ml[638,24720+8]..[638,24720+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[638,24720+23]..[639,24766+72])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (middle_end/flambda/flambda_utils.ml[638,24720+28]..[638,24720+31])
                                                  Ppat_var "set" (middle_end/flambda/flambda_utils.ml[638,24720+28]..[638,24720+31])
                                                expression (middle_end/flambda/flambda_utils.ml[638,24720+32]..[639,24766+71]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (middle_end/flambda/flambda_utils.ml[638,24720+32]..[638,24720+42])
                                                    Ppat_tuple
                                                    [
                                                      pattern (middle_end/flambda/flambda_utils.ml[638,24720+33]..[638,24720+34])
                                                        Ppat_any
                                                      pattern (middle_end/flambda/flambda_utils.ml[638,24720+36]..[638,24720+41])
                                                        Ppat_var "named" (middle_end/flambda/flambda_utils.ml[638,24720+36]..[638,24720+41])
                                                    ]
                                                  expression (middle_end/flambda/flambda_utils.ml[639,24766+12]..[639,24766+71])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_utils.ml[639,24766+12]..[639,24766+30])
                                                      Pexp_ident "Variable.Set.union" (middle_end/flambda/flambda_utils.ml[639,24766+12]..[639,24766+30])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[639,24766+31]..[639,24766+34])
                                                          Pexp_ident "set" (middle_end/flambda/flambda_utils.ml[639,24766+31]..[639,24766+34])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[639,24766+35]..[639,24766+71])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_utils.ml[639,24766+36]..[639,24766+64])
                                                            Pexp_ident "Flambda.free_variables_named" (middle_end/flambda/flambda_utils.ml[639,24766+36]..[639,24766+64])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_utils.ml[639,24766+65]..[639,24766+70])
                                                                Pexp_ident "named" (middle_end/flambda/flambda_utils.ml[639,24766+65]..[639,24766+70])
                                                          ]
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[640,24839+10]..[640,24839+28])
                                                Pexp_ident "Variable.Set.empty" (middle_end/flambda/flambda_utils.ml[640,24839+10]..[640,24839+28])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[640,24839+29]..[640,24839+33])
                                                Pexp_ident "defs" (middle_end/flambda/flambda_utils.ml[640,24839+29]..[640,24839+33])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[642,24882+6]..[664,25556+9])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/flambda_utils.ml[642,24882+10]..[642,24882+23])
                                            Ppat_var "to_substitute" (middle_end/flambda/flambda_utils.ml[642,24882+10]..[642,24882+23])
                                          expression (middle_end/flambda/flambda_utils.ml[643,24908+8]..[645,24989+32])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[643,24908+8]..[643,24908+27])
                                              Pexp_ident "Variable.Set.filter" (middle_end/flambda/flambda_utils.ml[643,24908+8]..[643,24908+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[644,24936+10]..[644,24936+52])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (middle_end/flambda/flambda_utils.ml[644,24936+15]..[644,24936+16])
                                                    Ppat_var "v" (middle_end/flambda/flambda_utils.ml[644,24936+15]..[644,24936+16])
                                                  expression (middle_end/flambda/flambda_utils.ml[644,24936+20]..[644,24936+51])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_utils.ml[644,24936+20]..[644,24936+36])
                                                      Pexp_ident "Variable.Map.mem" (middle_end/flambda/flambda_utils.ml[644,24936+20]..[644,24936+36])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[644,24936+37]..[644,24936+38])
                                                          Pexp_ident "v" (middle_end/flambda/flambda_utils.ml[644,24936+37]..[644,24936+38])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[644,24936+39]..[644,24936+51])
                                                          Pexp_ident "substitution" (middle_end/flambda/flambda_utils.ml[644,24936+39]..[644,24936+51])
                                                    ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[645,24989+10]..[645,24989+32])
                                                  Pexp_ident "free_variables_of_defs" (middle_end/flambda/flambda_utils.ml[645,24989+10]..[645,24989+32])
                                            ]
                                      ]
                                      expression (middle_end/flambda/flambda_utils.ml[647,25031+6]..[664,25556+9])
                                        Pexp_ifthenelse
                                        expression (middle_end/flambda/flambda_utils.ml[647,25031+9]..[647,25031+44])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[647,25031+9]..[647,25031+30])
                                            Pexp_ident "Variable.Set.is_empty" (middle_end/flambda/flambda_utils.ml[647,25031+9]..[647,25031+30])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[647,25031+31]..[647,25031+44])
                                                Pexp_ident "to_substitute" (middle_end/flambda/flambda_utils.ml[647,25031+31]..[647,25031+44])
                                          ]
                                        expression (middle_end/flambda/flambda_utils.ml[648,25081+8]..[648,25081+12])
                                          Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[648,25081+8]..[648,25081+12])
                                        Some
                                          expression (middle_end/flambda/flambda_utils.ml[649,25094+11]..[664,25556+9])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/flambda/flambda_utils.ml[650,25111+12]..[650,25111+20])
                                                  Ppat_var "bindings" (middle_end/flambda/flambda_utils.ml[650,25111+12]..[650,25111+20])
                                                expression (middle_end/flambda/flambda_utils.ml[651,25134+10]..[651,25134+76])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/flambda_utils.ml[651,25134+10]..[651,25134+29])
                                                    Pexp_ident "Variable.Map.of_set" (middle_end/flambda/flambda_utils.ml[651,25134+10]..[651,25134+29])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[651,25134+30]..[651,25134+62])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (middle_end/flambda/flambda_utils.ml[651,25134+35]..[651,25134+38])
                                                          Ppat_var "var" (middle_end/flambda/flambda_utils.ml[651,25134+35]..[651,25134+38])
                                                        expression (middle_end/flambda/flambda_utils.ml[651,25134+42]..[651,25134+61])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_utils.ml[651,25134+42]..[651,25134+57])
                                                            Pexp_ident "Variable.rename" (middle_end/flambda/flambda_utils.ml[651,25134+42]..[651,25134+57])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_utils.ml[651,25134+58]..[651,25134+61])
                                                                Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[651,25134+58]..[651,25134+61])
                                                          ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[651,25134+63]..[651,25134+76])
                                                        Pexp_ident "to_substitute" (middle_end/flambda/flambda_utils.ml[651,25134+63]..[651,25134+76])
                                                  ]
                                            ]
                                            expression (middle_end/flambda/flambda_utils.ml[653,25222+8]..[663,25532+23])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/flambda_utils.ml[653,25222+12]..[653,25222+16])
                                                    Ppat_var "defs" (middle_end/flambda/flambda_utils.ml[653,25222+12]..[653,25222+16])
                                                  expression (middle_end/flambda/flambda_utils.ml[654,25241+10]..[656,25333+16])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_utils.ml[654,25241+10]..[654,25241+18])
                                                      Pexp_ident "List.map" (middle_end/flambda/flambda_utils.ml[654,25241+10]..[654,25241+18])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[654,25241+19]..[655,25281+51])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (middle_end/flambda/flambda_utils.ml[654,25241+24]..[654,25241+36])
                                                            Ppat_tuple
                                                            [
                                                              pattern (middle_end/flambda/flambda_utils.ml[654,25241+25]..[654,25241+28])
                                                                Ppat_var "var" (middle_end/flambda/flambda_utils.ml[654,25241+25]..[654,25241+28])
                                                              pattern (middle_end/flambda/flambda_utils.ml[654,25241+30]..[654,25241+35])
                                                                Ppat_var "named" (middle_end/flambda/flambda_utils.ml[654,25241+30]..[654,25241+35])
                                                            ]
                                                          expression (middle_end/flambda/flambda_utils.ml[655,25281+14]..[655,25281+50])
                                                            Pexp_tuple
                                                            [
                                                              expression (middle_end/flambda/flambda_utils.ml[655,25281+14]..[655,25281+17])
                                                                Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[655,25281+14]..[655,25281+17])
                                                              expression (middle_end/flambda/flambda_utils.ml[655,25281+19]..[655,25281+50])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/flambda_utils.ml[655,25281+19]..[655,25281+35])
                                                                  Pexp_ident "substitute_named" (middle_end/flambda/flambda_utils.ml[655,25281+19]..[655,25281+35])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/flambda_utils.ml[655,25281+36]..[655,25281+44])
                                                                      Pexp_ident "bindings" (middle_end/flambda/flambda_utils.ml[655,25281+36]..[655,25281+44])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/flambda_utils.ml[655,25281+45]..[655,25281+50])
                                                                      Pexp_ident "named" (middle_end/flambda/flambda_utils.ml[655,25281+45]..[655,25281+50])
                                                                ]
                                                            ]
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[656,25333+12]..[656,25333+16])
                                                          Pexp_ident "defs" (middle_end/flambda/flambda_utils.ml[656,25333+12]..[656,25333+16])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/flambda_utils.ml[658,25361+8]..[663,25532+23])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/flambda_utils.ml[658,25361+12]..[658,25361+16])
                                                      Ppat_var "expr" (middle_end/flambda/flambda_utils.ml[658,25361+12]..[658,25361+16])
                                                    expression (middle_end/flambda/flambda_utils.ml[659,25380+10]..[659,25380+38])
                                                      Pexp_construct "Flambda.Let_rec" (middle_end/flambda/flambda_utils.ml[659,25380+10]..[659,25380+25])
                                                      Some
                                                        expression (middle_end/flambda/flambda_utils.ml[659,25380+26]..[659,25380+38])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/flambda/flambda_utils.ml[659,25380+27]..[659,25380+31])
                                                              Pexp_ident "defs" (middle_end/flambda/flambda_utils.ml[659,25380+27]..[659,25380+31])
                                                            expression (middle_end/flambda/flambda_utils.ml[659,25380+33]..[659,25380+37])
                                                              Pexp_ident "body" (middle_end/flambda/flambda_utils.ml[659,25380+33]..[659,25380+37])
                                                          ]
                                                ]
                                                expression (middle_end/flambda/flambda_utils.ml[661,25430+8]..[663,25532+23])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/flambda_utils.ml[661,25430+8]..[661,25430+25])
                                                    Pexp_ident "Variable.Map.fold" (middle_end/flambda/flambda_utils.ml[661,25430+8]..[661,25430+25])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[661,25430+26]..[662,25489+42])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (middle_end/flambda/flambda_utils.ml[661,25430+31]..[661,25430+44])
                                                          Ppat_var "to_substitute" (middle_end/flambda/flambda_utils.ml[661,25430+31]..[661,25430+44])
                                                        expression (middle_end/flambda/flambda_utils.ml[661,25430+45]..[662,25489+41]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (middle_end/flambda/flambda_utils.ml[661,25430+45]..[661,25430+50])
                                                            Ppat_var "fresh" (middle_end/flambda/flambda_utils.ml[661,25430+45]..[661,25430+50])
                                                          expression (middle_end/flambda/flambda_utils.ml[661,25430+51]..[662,25489+41]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (middle_end/flambda/flambda_utils.ml[661,25430+51]..[661,25430+55])
                                                              Ppat_var "expr" (middle_end/flambda/flambda_utils.ml[661,25430+51]..[661,25430+55])
                                                            expression (middle_end/flambda/flambda_utils.ml[662,25489+12]..[662,25489+41])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/flambda_utils.ml[662,25489+12]..[662,25489+16])
                                                                Pexp_ident "bind" (middle_end/flambda/flambda_utils.ml[662,25489+12]..[662,25489+16])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/flambda_utils.ml[662,25489+17]..[662,25489+30])
                                                                    Pexp_ident "to_substitute" (middle_end/flambda/flambda_utils.ml[662,25489+17]..[662,25489+30])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/flambda_utils.ml[662,25489+31]..[662,25489+36])
                                                                    Pexp_ident "fresh" (middle_end/flambda/flambda_utils.ml[662,25489+31]..[662,25489+36])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/flambda_utils.ml[662,25489+37]..[662,25489+41])
                                                                    Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[662,25489+37]..[662,25489+41])
                                                              ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[663,25532+10]..[663,25532+18])
                                                        Pexp_ident "bindings" (middle_end/flambda/flambda_utils.ml[663,25532+10]..[663,25532+18])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[663,25532+19]..[663,25532+23])
                                                        Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[663,25532+19]..[663,25532+23])
                                                  ]
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[665,25566+6]..[665,25566+38])
                                    Ppat_construct "If_then_else" (middle_end/flambda/flambda_utils.ml[665,25566+6]..[665,25566+18])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[665,25566+19]..[665,25566+38])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/flambda_utils.ml[665,25566+20]..[665,25566+24])
                                            Ppat_var "cond" (middle_end/flambda/flambda_utils.ml[665,25566+20]..[665,25566+24])
                                          pattern (middle_end/flambda/flambda_utils.ml[665,25566+26]..[665,25566+30])
                                            Ppat_var "ifso" (middle_end/flambda/flambda_utils.ml[665,25566+26]..[665,25566+30])
                                          pattern (middle_end/flambda/flambda_utils.ml[665,25566+32]..[665,25566+37])
                                            Ppat_var "ifnot" (middle_end/flambda/flambda_utils.ml[665,25566+32]..[665,25566+37])
                                        ]
                                  <when>
                                    expression (middle_end/flambda/flambda_utils.ml[666,25605+13]..[666,25605+47])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[666,25605+13]..[666,25605+29])
                                        Pexp_ident "Variable.Map.mem" (middle_end/flambda/flambda_utils.ml[666,25605+13]..[666,25605+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[666,25605+30]..[666,25605+34])
                                            Pexp_ident "cond" (middle_end/flambda/flambda_utils.ml[666,25605+30]..[666,25605+34])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[666,25605+35]..[666,25605+47])
                                            Pexp_ident "substitution" (middle_end/flambda/flambda_utils.ml[666,25605+35]..[666,25605+47])
                                      ]
                                  expression (middle_end/flambda/flambda_utils.ml[667,25656+6]..[668,25698+57])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[667,25656+10]..[667,25656+15])
                                          Ppat_var "fresh" (middle_end/flambda/flambda_utils.ml[667,25656+10]..[667,25656+15])
                                        expression (middle_end/flambda/flambda_utils.ml[667,25656+18]..[667,25656+38])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[667,25656+18]..[667,25656+33])
                                            Pexp_ident "Variable.rename" (middle_end/flambda/flambda_utils.ml[667,25656+18]..[667,25656+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[667,25656+34]..[667,25656+38])
                                                Pexp_ident "cond" (middle_end/flambda/flambda_utils.ml[667,25656+34]..[667,25656+38])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[668,25698+6]..[668,25698+57])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[668,25698+6]..[668,25698+10])
                                        Pexp_ident "bind" (middle_end/flambda/flambda_utils.ml[668,25698+6]..[668,25698+10])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[668,25698+11]..[668,25698+15])
                                            Pexp_ident "cond" (middle_end/flambda/flambda_utils.ml[668,25698+11]..[668,25698+15])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[668,25698+16]..[668,25698+21])
                                            Pexp_ident "fresh" (middle_end/flambda/flambda_utils.ml[668,25698+16]..[668,25698+21])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[668,25698+22]..[668,25698+57])
                                            Pexp_construct "If_then_else" (middle_end/flambda/flambda_utils.ml[668,25698+23]..[668,25698+35])
                                            Some
                                              expression (middle_end/flambda/flambda_utils.ml[668,25698+36]..[668,25698+56])
                                                Pexp_tuple
                                                [
                                                  expression (middle_end/flambda/flambda_utils.ml[668,25698+37]..[668,25698+42])
                                                    Pexp_ident "fresh" (middle_end/flambda/flambda_utils.ml[668,25698+37]..[668,25698+42])
                                                  expression (middle_end/flambda/flambda_utils.ml[668,25698+44]..[668,25698+48])
                                                    Pexp_ident "ifso" (middle_end/flambda/flambda_utils.ml[668,25698+44]..[668,25698+48])
                                                  expression (middle_end/flambda/flambda_utils.ml[668,25698+50]..[668,25698+55])
                                                    Pexp_ident "ifnot" (middle_end/flambda/flambda_utils.ml[668,25698+50]..[668,25698+55])
                                                ]
                                      ]
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[669,25756+6]..[669,25756+20])
                                    Ppat_construct "If_then_else" (middle_end/flambda/flambda_utils.ml[669,25756+6]..[669,25756+18])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[669,25756+19]..[669,25756+20])
                                        Ppat_any
                                  expression (middle_end/flambda/flambda_utils.ml[670,25780+6]..[670,25780+10])
                                    Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[670,25780+6]..[670,25780+10])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[671,25791+6]..[671,25791+23])
                                    Ppat_construct "Switch" (middle_end/flambda/flambda_utils.ml[671,25791+6]..[671,25791+12])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[671,25791+13]..[671,25791+23])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/flambda_utils.ml[671,25791+14]..[671,25791+18])
                                            Ppat_var "cond" (middle_end/flambda/flambda_utils.ml[671,25791+14]..[671,25791+18])
                                          pattern (middle_end/flambda/flambda_utils.ml[671,25791+20]..[671,25791+22])
                                            Ppat_var "sw" (middle_end/flambda/flambda_utils.ml[671,25791+20]..[671,25791+22])
                                        ]
                                  <when>
                                    expression (middle_end/flambda/flambda_utils.ml[671,25791+29]..[671,25791+63])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[671,25791+29]..[671,25791+45])
                                        Pexp_ident "Variable.Map.mem" (middle_end/flambda/flambda_utils.ml[671,25791+29]..[671,25791+45])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[671,25791+46]..[671,25791+50])
                                            Pexp_ident "cond" (middle_end/flambda/flambda_utils.ml[671,25791+46]..[671,25791+50])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[671,25791+51]..[671,25791+63])
                                            Pexp_ident "substitution" (middle_end/flambda/flambda_utils.ml[671,25791+51]..[671,25791+63])
                                      ]
                                  expression (middle_end/flambda/flambda_utils.ml[672,25858+6]..[673,25900+42])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[672,25858+10]..[672,25858+15])
                                          Ppat_var "fresh" (middle_end/flambda/flambda_utils.ml[672,25858+10]..[672,25858+15])
                                        expression (middle_end/flambda/flambda_utils.ml[672,25858+18]..[672,25858+38])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[672,25858+18]..[672,25858+33])
                                            Pexp_ident "Variable.rename" (middle_end/flambda/flambda_utils.ml[672,25858+18]..[672,25858+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[672,25858+34]..[672,25858+38])
                                                Pexp_ident "cond" (middle_end/flambda/flambda_utils.ml[672,25858+34]..[672,25858+38])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[673,25900+6]..[673,25900+42])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[673,25900+6]..[673,25900+10])
                                        Pexp_ident "bind" (middle_end/flambda/flambda_utils.ml[673,25900+6]..[673,25900+10])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[673,25900+11]..[673,25900+15])
                                            Pexp_ident "cond" (middle_end/flambda/flambda_utils.ml[673,25900+11]..[673,25900+15])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[673,25900+16]..[673,25900+21])
                                            Pexp_ident "fresh" (middle_end/flambda/flambda_utils.ml[673,25900+16]..[673,25900+21])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[673,25900+22]..[673,25900+42])
                                            Pexp_construct "Switch" (middle_end/flambda/flambda_utils.ml[673,25900+23]..[673,25900+29])
                                            Some
                                              expression (middle_end/flambda/flambda_utils.ml[673,25900+30]..[673,25900+41])
                                                Pexp_tuple
                                                [
                                                  expression (middle_end/flambda/flambda_utils.ml[673,25900+31]..[673,25900+36])
                                                    Pexp_ident "fresh" (middle_end/flambda/flambda_utils.ml[673,25900+31]..[673,25900+36])
                                                  expression (middle_end/flambda/flambda_utils.ml[673,25900+38]..[673,25900+40])
                                                    Pexp_ident "sw" (middle_end/flambda/flambda_utils.ml[673,25900+38]..[673,25900+40])
                                                ]
                                      ]
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[674,25943+6]..[674,25943+14])
                                    Ppat_construct "Switch" (middle_end/flambda/flambda_utils.ml[674,25943+6]..[674,25943+12])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[674,25943+13]..[674,25943+14])
                                        Ppat_any
                                  expression (middle_end/flambda/flambda_utils.ml[675,25961+6]..[675,25961+10])
                                    Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[675,25961+6]..[675,25961+10])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[676,25972+6]..[676,25972+35])
                                    Ppat_construct "String_switch" (middle_end/flambda/flambda_utils.ml[676,25972+6]..[676,25972+19])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[676,25972+20]..[676,25972+35])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/flambda_utils.ml[676,25972+21]..[676,25972+25])
                                            Ppat_var "cond" (middle_end/flambda/flambda_utils.ml[676,25972+21]..[676,25972+25])
                                          pattern (middle_end/flambda/flambda_utils.ml[676,25972+27]..[676,25972+29])
                                            Ppat_var "sw" (middle_end/flambda/flambda_utils.ml[676,25972+27]..[676,25972+29])
                                          pattern (middle_end/flambda/flambda_utils.ml[676,25972+31]..[676,25972+34])
                                            Ppat_var "def" (middle_end/flambda/flambda_utils.ml[676,25972+31]..[676,25972+34])
                                        ]
                                  <when>
                                    expression (middle_end/flambda/flambda_utils.ml[676,25972+41]..[676,25972+75])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[676,25972+41]..[676,25972+57])
                                        Pexp_ident "Variable.Map.mem" (middle_end/flambda/flambda_utils.ml[676,25972+41]..[676,25972+57])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[676,25972+58]..[676,25972+62])
                                            Pexp_ident "cond" (middle_end/flambda/flambda_utils.ml[676,25972+58]..[676,25972+62])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[676,25972+63]..[676,25972+75])
                                            Pexp_ident "substitution" (middle_end/flambda/flambda_utils.ml[676,25972+63]..[676,25972+75])
                                      ]
                                  expression (middle_end/flambda/flambda_utils.ml[677,26051+6]..[678,26093+54])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[677,26051+10]..[677,26051+15])
                                          Ppat_var "fresh" (middle_end/flambda/flambda_utils.ml[677,26051+10]..[677,26051+15])
                                        expression (middle_end/flambda/flambda_utils.ml[677,26051+18]..[677,26051+38])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[677,26051+18]..[677,26051+33])
                                            Pexp_ident "Variable.rename" (middle_end/flambda/flambda_utils.ml[677,26051+18]..[677,26051+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[677,26051+34]..[677,26051+38])
                                                Pexp_ident "cond" (middle_end/flambda/flambda_utils.ml[677,26051+34]..[677,26051+38])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[678,26093+6]..[678,26093+54])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[678,26093+6]..[678,26093+10])
                                        Pexp_ident "bind" (middle_end/flambda/flambda_utils.ml[678,26093+6]..[678,26093+10])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[678,26093+11]..[678,26093+15])
                                            Pexp_ident "cond" (middle_end/flambda/flambda_utils.ml[678,26093+11]..[678,26093+15])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[678,26093+16]..[678,26093+21])
                                            Pexp_ident "fresh" (middle_end/flambda/flambda_utils.ml[678,26093+16]..[678,26093+21])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[678,26093+22]..[678,26093+54])
                                            Pexp_construct "String_switch" (middle_end/flambda/flambda_utils.ml[678,26093+23]..[678,26093+36])
                                            Some
                                              expression (middle_end/flambda/flambda_utils.ml[678,26093+37]..[678,26093+53])
                                                Pexp_tuple
                                                [
                                                  expression (middle_end/flambda/flambda_utils.ml[678,26093+38]..[678,26093+43])
                                                    Pexp_ident "fresh" (middle_end/flambda/flambda_utils.ml[678,26093+38]..[678,26093+43])
                                                  expression (middle_end/flambda/flambda_utils.ml[678,26093+45]..[678,26093+47])
                                                    Pexp_ident "sw" (middle_end/flambda/flambda_utils.ml[678,26093+45]..[678,26093+47])
                                                  expression (middle_end/flambda/flambda_utils.ml[678,26093+49]..[678,26093+52])
                                                    Pexp_ident "def" (middle_end/flambda/flambda_utils.ml[678,26093+49]..[678,26093+52])
                                                ]
                                      ]
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[679,26148+6]..[679,26148+21])
                                    Ppat_construct "String_switch" (middle_end/flambda/flambda_utils.ml[679,26148+6]..[679,26148+19])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[679,26148+20]..[679,26148+21])
                                        Ppat_any
                                  expression (middle_end/flambda/flambda_utils.ml[680,26173+6]..[680,26173+10])
                                    Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[680,26173+6]..[680,26173+10])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[681,26184+6]..[681,26184+42])
                                    Ppat_construct "Assign" (middle_end/flambda/flambda_utils.ml[681,26184+6]..[681,26184+12])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[681,26184+13]..[681,26184+42])
                                        Ppat_record Closed
                                        [
                                          "being_assigned" (middle_end/flambda/flambda_utils.ml[681,26184+15]..[681,26184+29]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[681,26184+15]..[681,26184+29])
                                              Ppat_var "being_assigned" (middle_end/flambda/flambda_utils.ml[681,26184+15]..[681,26184+29])
                                          "new_value" (middle_end/flambda/flambda_utils.ml[681,26184+31]..[681,26184+40]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[681,26184+31]..[681,26184+40])
                                              Ppat_var "new_value" (middle_end/flambda/flambda_utils.ml[681,26184+31]..[681,26184+40])
                                        ]
                                  <when>
                                    expression (middle_end/flambda/flambda_utils.ml[682,26227+13]..[682,26227+52])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[682,26227+13]..[682,26227+29])
                                        Pexp_ident "Variable.Map.mem" (middle_end/flambda/flambda_utils.ml[682,26227+13]..[682,26227+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[682,26227+30]..[682,26227+39])
                                            Pexp_ident "new_value" (middle_end/flambda/flambda_utils.ml[682,26227+30]..[682,26227+39])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[682,26227+40]..[682,26227+52])
                                            Pexp_ident "substitution" (middle_end/flambda/flambda_utils.ml[682,26227+40]..[682,26227+52])
                                      ]
                                  expression (middle_end/flambda/flambda_utils.ml[683,26283+6]..[684,26330+73])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[683,26283+10]..[683,26283+15])
                                          Ppat_var "fresh" (middle_end/flambda/flambda_utils.ml[683,26283+10]..[683,26283+15])
                                        expression (middle_end/flambda/flambda_utils.ml[683,26283+18]..[683,26283+43])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[683,26283+18]..[683,26283+33])
                                            Pexp_ident "Variable.rename" (middle_end/flambda/flambda_utils.ml[683,26283+18]..[683,26283+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[683,26283+34]..[683,26283+43])
                                                Pexp_ident "new_value" (middle_end/flambda/flambda_utils.ml[683,26283+34]..[683,26283+43])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[684,26330+6]..[684,26330+73])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[684,26330+6]..[684,26330+10])
                                        Pexp_ident "bind" (middle_end/flambda/flambda_utils.ml[684,26330+6]..[684,26330+10])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[684,26330+11]..[684,26330+20])
                                            Pexp_ident "new_value" (middle_end/flambda/flambda_utils.ml[684,26330+11]..[684,26330+20])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[684,26330+21]..[684,26330+26])
                                            Pexp_ident "fresh" (middle_end/flambda/flambda_utils.ml[684,26330+21]..[684,26330+26])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[684,26330+27]..[684,26330+73])
                                            Pexp_construct "Assign" (middle_end/flambda/flambda_utils.ml[684,26330+28]..[684,26330+34])
                                            Some
                                              expression (middle_end/flambda/flambda_utils.ml[684,26330+35]..[684,26330+72])
                                                Pexp_record
                                                [
                                                  "being_assigned" (middle_end/flambda/flambda_utils.ml[684,26330+37]..[684,26330+51]) ghost
                                                    expression (middle_end/flambda/flambda_utils.ml[684,26330+37]..[684,26330+51])
                                                      Pexp_ident "being_assigned" (middle_end/flambda/flambda_utils.ml[684,26330+37]..[684,26330+51])
                                                  "new_value" (middle_end/flambda/flambda_utils.ml[684,26330+53]..[684,26330+62])
                                                    expression (middle_end/flambda/flambda_utils.ml[684,26330+65]..[684,26330+70])
                                                      Pexp_ident "fresh" (middle_end/flambda/flambda_utils.ml[684,26330+65]..[684,26330+70])
                                                ]
                                                None
                                      ]
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[685,26404+6]..[685,26404+14])
                                    Ppat_construct "Assign" (middle_end/flambda/flambda_utils.ml[685,26404+6]..[685,26404+12])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[685,26404+13]..[685,26404+14])
                                        Ppat_any
                                  expression (middle_end/flambda/flambda_utils.ml[686,26422+6]..[686,26422+10])
                                    Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[686,26422+6]..[686,26422+10])
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[687,26433+6]..[687,26433+30])
                                    Ppat_construct "Static_raise" (middle_end/flambda/flambda_utils.ml[687,26433+6]..[687,26433+18])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[687,26433+19]..[687,26433+30])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/flambda_utils.ml[687,26433+20]..[687,26433+23])
                                            Ppat_var "exn" (middle_end/flambda/flambda_utils.ml[687,26433+20]..[687,26433+23])
                                          pattern (middle_end/flambda/flambda_utils.ml[687,26433+25]..[687,26433+29])
                                            Ppat_var "args" (middle_end/flambda/flambda_utils.ml[687,26433+25]..[687,26433+29])
                                        ]
                                  expression (middle_end/flambda/flambda_utils.ml[688,26467+6]..[692,26612+40])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[688,26467+10]..[688,26467+25])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/flambda/flambda_utils.ml[688,26467+10]..[688,26467+14])
                                              Ppat_var "args" (middle_end/flambda/flambda_utils.ml[688,26467+10]..[688,26467+14])
                                            pattern (middle_end/flambda/flambda_utils.ml[688,26467+16]..[688,26467+25])
                                              Ppat_var "bind_args" (middle_end/flambda/flambda_utils.ml[688,26467+16]..[688,26467+25])
                                          ]
                                        expression (middle_end/flambda/flambda_utils.ml[689,26495+8]..[689,26495+49])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[689,26495+8]..[689,26495+18])
                                            Pexp_ident "List.split" (middle_end/flambda/flambda_utils.ml[689,26495+8]..[689,26495+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[689,26495+19]..[689,26495+49])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_utils.ml[689,26495+20]..[689,26495+28])
                                                  Pexp_ident "List.map" (middle_end/flambda/flambda_utils.ml[689,26495+20]..[689,26495+28])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[689,26495+29]..[689,26495+43])
                                                      Pexp_ident "make_var_subst" (middle_end/flambda/flambda_utils.ml[689,26495+29]..[689,26495+43])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[689,26495+44]..[689,26495+48])
                                                      Pexp_ident "args" (middle_end/flambda/flambda_utils.ml[689,26495+44]..[689,26495+48])
                                                ]
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[691,26554+6]..[692,26612+40])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[691,26554+55]..[691,26554+57])
                                        Pexp_ident "@@" (middle_end/flambda/flambda_utils.ml[691,26554+55]..[691,26554+57])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[691,26554+6]..[691,26554+54])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[691,26554+6]..[691,26554+21])
                                              Pexp_ident "List.fold_right" (middle_end/flambda/flambda_utils.ml[691,26554+6]..[691,26554+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[691,26554+22]..[691,26554+44])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (middle_end/flambda/flambda_utils.ml[691,26554+27]..[691,26554+28])
                                                    Ppat_var "f" (middle_end/flambda/flambda_utils.ml[691,26554+27]..[691,26554+28])
                                                  expression (middle_end/flambda/flambda_utils.ml[691,26554+29]..[691,26554+43]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (middle_end/flambda/flambda_utils.ml[691,26554+29]..[691,26554+33])
                                                      Ppat_var "expr" (middle_end/flambda/flambda_utils.ml[691,26554+29]..[691,26554+33])
                                                    expression (middle_end/flambda/flambda_utils.ml[691,26554+37]..[691,26554+43])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_utils.ml[691,26554+37]..[691,26554+38])
                                                        Pexp_ident "f" (middle_end/flambda/flambda_utils.ml[691,26554+37]..[691,26554+38])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_utils.ml[691,26554+39]..[691,26554+43])
                                                            Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[691,26554+39]..[691,26554+43])
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[691,26554+45]..[691,26554+54])
                                                  Pexp_ident "bind_args" (middle_end/flambda/flambda_utils.ml[691,26554+45]..[691,26554+54])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[692,26612+8]..[692,26612+40])
                                            Pexp_construct "Flambda.Static_raise" (middle_end/flambda/flambda_utils.ml[692,26612+8]..[692,26612+28])
                                            Some
                                              expression (middle_end/flambda/flambda_utils.ml[692,26612+29]..[692,26612+40])
                                                Pexp_tuple
                                                [
                                                  expression (middle_end/flambda/flambda_utils.ml[692,26612+30]..[692,26612+33])
                                                    Pexp_ident "exn" (middle_end/flambda/flambda_utils.ml[692,26612+30]..[692,26612+33])
                                                  expression (middle_end/flambda/flambda_utils.ml[692,26612+35]..[692,26612+39])
                                                    Pexp_ident "args" (middle_end/flambda/flambda_utils.ml[692,26612+35]..[692,26612+39])
                                                ]
                                      ]
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[693,26653+6]..[693,26653+62])
                                    Ppat_construct "For" (middle_end/flambda/flambda_utils.ml[693,26653+6]..[693,26653+9])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[693,26653+10]..[693,26653+62])
                                        Ppat_record Closed
                                        [
                                          "bound_var" (middle_end/flambda/flambda_utils.ml[693,26653+12]..[693,26653+21]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[693,26653+12]..[693,26653+21])
                                              Ppat_var "bound_var" (middle_end/flambda/flambda_utils.ml[693,26653+12]..[693,26653+21])
                                          "from_value" (middle_end/flambda/flambda_utils.ml[693,26653+23]..[693,26653+33]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[693,26653+23]..[693,26653+33])
                                              Ppat_var "from_value" (middle_end/flambda/flambda_utils.ml[693,26653+23]..[693,26653+33])
                                          "to_value" (middle_end/flambda/flambda_utils.ml[693,26653+35]..[693,26653+43]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[693,26653+35]..[693,26653+43])
                                              Ppat_var "to_value" (middle_end/flambda/flambda_utils.ml[693,26653+35]..[693,26653+43])
                                          "direction" (middle_end/flambda/flambda_utils.ml[693,26653+45]..[693,26653+54]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[693,26653+45]..[693,26653+54])
                                              Ppat_var "direction" (middle_end/flambda/flambda_utils.ml[693,26653+45]..[693,26653+54])
                                          "body" (middle_end/flambda/flambda_utils.ml[693,26653+56]..[693,26653+60]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[693,26653+56]..[693,26653+60])
                                              Ppat_var "body" (middle_end/flambda/flambda_utils.ml[693,26653+56]..[693,26653+60])
                                        ]
                                  expression (middle_end/flambda/flambda_utils.ml[694,26719+6]..[698,26899+70])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[694,26719+10]..[694,26719+37])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/flambda/flambda_utils.ml[694,26719+10]..[694,26719+20])
                                              Ppat_var "from_value" (middle_end/flambda/flambda_utils.ml[694,26719+10]..[694,26719+20])
                                            pattern (middle_end/flambda/flambda_utils.ml[694,26719+22]..[694,26719+37])
                                              Ppat_var "bind_from_value" (middle_end/flambda/flambda_utils.ml[694,26719+22]..[694,26719+37])
                                          ]
                                        expression (middle_end/flambda/flambda_utils.ml[694,26719+40]..[694,26719+65])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[694,26719+40]..[694,26719+54])
                                            Pexp_ident "make_var_subst" (middle_end/flambda/flambda_utils.ml[694,26719+40]..[694,26719+54])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[694,26719+55]..[694,26719+65])
                                                Pexp_ident "from_value" (middle_end/flambda/flambda_utils.ml[694,26719+55]..[694,26719+65])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[695,26788+6]..[698,26899+70])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/flambda_utils.ml[695,26788+10]..[695,26788+33])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/flambda_utils.ml[695,26788+10]..[695,26788+18])
                                                Ppat_var "to_value" (middle_end/flambda/flambda_utils.ml[695,26788+10]..[695,26788+18])
                                              pattern (middle_end/flambda/flambda_utils.ml[695,26788+20]..[695,26788+33])
                                                Ppat_var "bind_to_value" (middle_end/flambda/flambda_utils.ml[695,26788+20]..[695,26788+33])
                                            ]
                                          expression (middle_end/flambda/flambda_utils.ml[695,26788+36]..[695,26788+59])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[695,26788+36]..[695,26788+50])
                                              Pexp_ident "make_var_subst" (middle_end/flambda/flambda_utils.ml[695,26788+36]..[695,26788+50])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[695,26788+51]..[695,26788+59])
                                                  Pexp_ident "to_value" (middle_end/flambda/flambda_utils.ml[695,26788+51]..[695,26788+59])
                                            ]
                                      ]
                                      expression (middle_end/flambda/flambda_utils.ml[696,26851+6]..[698,26899+70])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[696,26851+22]..[696,26851+24])
                                          Pexp_ident "@@" (middle_end/flambda/flambda_utils.ml[696,26851+22]..[696,26851+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[696,26851+6]..[696,26851+21])
                                              Pexp_ident "bind_from_value" (middle_end/flambda/flambda_utils.ml[696,26851+6]..[696,26851+21])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[697,26876+6]..[698,26899+70])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_utils.ml[697,26876+20]..[697,26876+22])
                                                Pexp_ident "@@" (middle_end/flambda/flambda_utils.ml[697,26876+20]..[697,26876+22])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[697,26876+6]..[697,26876+19])
                                                    Pexp_ident "bind_to_value" (middle_end/flambda/flambda_utils.ml[697,26876+6]..[697,26876+19])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[698,26899+6]..[698,26899+70])
                                                    Pexp_construct "Flambda.For" (middle_end/flambda/flambda_utils.ml[698,26899+6]..[698,26899+17])
                                                    Some
                                                      expression (middle_end/flambda/flambda_utils.ml[698,26899+18]..[698,26899+70])
                                                        Pexp_record
                                                        [
                                                          "bound_var" (middle_end/flambda/flambda_utils.ml[698,26899+20]..[698,26899+29]) ghost
                                                            expression (middle_end/flambda/flambda_utils.ml[698,26899+20]..[698,26899+29])
                                                              Pexp_ident "bound_var" (middle_end/flambda/flambda_utils.ml[698,26899+20]..[698,26899+29])
                                                          "from_value" (middle_end/flambda/flambda_utils.ml[698,26899+31]..[698,26899+41]) ghost
                                                            expression (middle_end/flambda/flambda_utils.ml[698,26899+31]..[698,26899+41])
                                                              Pexp_ident "from_value" (middle_end/flambda/flambda_utils.ml[698,26899+31]..[698,26899+41])
                                                          "to_value" (middle_end/flambda/flambda_utils.ml[698,26899+43]..[698,26899+51]) ghost
                                                            expression (middle_end/flambda/flambda_utils.ml[698,26899+43]..[698,26899+51])
                                                              Pexp_ident "to_value" (middle_end/flambda/flambda_utils.ml[698,26899+43]..[698,26899+51])
                                                          "direction" (middle_end/flambda/flambda_utils.ml[698,26899+53]..[698,26899+62]) ghost
                                                            expression (middle_end/flambda/flambda_utils.ml[698,26899+53]..[698,26899+62])
                                                              Pexp_ident "direction" (middle_end/flambda/flambda_utils.ml[698,26899+53]..[698,26899+62])
                                                          "body" (middle_end/flambda/flambda_utils.ml[698,26899+64]..[698,26899+68]) ghost
                                                            expression (middle_end/flambda/flambda_utils.ml[698,26899+64]..[698,26899+68])
                                                              Pexp_ident "body" (middle_end/flambda/flambda_utils.ml[698,26899+64]..[698,26899+68])
                                                        ]
                                                        None
                                              ]
                                        ]
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[699,26970+6]..[699,26970+57])
                                    Ppat_construct "Apply" (middle_end/flambda/flambda_utils.ml[699,26970+6]..[699,26970+11])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[699,26970+12]..[699,26970+57])
                                        Ppat_record Closed
                                        [
                                          "func" (middle_end/flambda/flambda_utils.ml[699,26970+14]..[699,26970+18]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[699,26970+14]..[699,26970+18])
                                              Ppat_var "func" (middle_end/flambda/flambda_utils.ml[699,26970+14]..[699,26970+18])
                                          "args" (middle_end/flambda/flambda_utils.ml[699,26970+20]..[699,26970+24]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[699,26970+20]..[699,26970+24])
                                              Ppat_var "args" (middle_end/flambda/flambda_utils.ml[699,26970+20]..[699,26970+24])
                                          "kind" (middle_end/flambda/flambda_utils.ml[699,26970+26]..[699,26970+30]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[699,26970+26]..[699,26970+30])
                                              Ppat_var "kind" (middle_end/flambda/flambda_utils.ml[699,26970+26]..[699,26970+30])
                                          "dbg" (middle_end/flambda/flambda_utils.ml[699,26970+32]..[699,26970+35]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[699,26970+32]..[699,26970+35])
                                              Ppat_var "dbg" (middle_end/flambda/flambda_utils.ml[699,26970+32]..[699,26970+35])
                                          "inline" (middle_end/flambda/flambda_utils.ml[699,26970+37]..[699,26970+43]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[699,26970+37]..[699,26970+43])
                                              Ppat_var "inline" (middle_end/flambda/flambda_utils.ml[699,26970+37]..[699,26970+43])
                                          "specialise" (middle_end/flambda/flambda_utils.ml[699,26970+45]..[699,26970+55]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[699,26970+45]..[699,26970+55])
                                              Ppat_var "specialise" (middle_end/flambda/flambda_utils.ml[699,26970+45]..[699,26970+55])
                                        ]
                                  expression (middle_end/flambda/flambda_utils.ml[700,27031+6]..[706,27246+65])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[700,27031+10]..[700,27031+25])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/flambda/flambda_utils.ml[700,27031+10]..[700,27031+14])
                                              Ppat_var "func" (middle_end/flambda/flambda_utils.ml[700,27031+10]..[700,27031+14])
                                            pattern (middle_end/flambda/flambda_utils.ml[700,27031+16]..[700,27031+25])
                                              Ppat_var "bind_func" (middle_end/flambda/flambda_utils.ml[700,27031+16]..[700,27031+25])
                                          ]
                                        expression (middle_end/flambda/flambda_utils.ml[700,27031+28]..[700,27031+47])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[700,27031+28]..[700,27031+42])
                                            Pexp_ident "make_var_subst" (middle_end/flambda/flambda_utils.ml[700,27031+28]..[700,27031+42])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[700,27031+43]..[700,27031+47])
                                                Pexp_ident "func" (middle_end/flambda/flambda_utils.ml[700,27031+43]..[700,27031+47])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[701,27082+6]..[706,27246+65])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/flambda_utils.ml[701,27082+10]..[701,27082+25])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/flambda_utils.ml[701,27082+10]..[701,27082+14])
                                                Ppat_var "args" (middle_end/flambda/flambda_utils.ml[701,27082+10]..[701,27082+14])
                                              pattern (middle_end/flambda/flambda_utils.ml[701,27082+16]..[701,27082+25])
                                                Ppat_var "bind_args" (middle_end/flambda/flambda_utils.ml[701,27082+16]..[701,27082+25])
                                            ]
                                          expression (middle_end/flambda/flambda_utils.ml[702,27110+8]..[702,27110+49])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[702,27110+8]..[702,27110+18])
                                              Pexp_ident "List.split" (middle_end/flambda/flambda_utils.ml[702,27110+8]..[702,27110+18])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[702,27110+19]..[702,27110+49])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/flambda_utils.ml[702,27110+20]..[702,27110+28])
                                                    Pexp_ident "List.map" (middle_end/flambda/flambda_utils.ml[702,27110+20]..[702,27110+28])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[702,27110+29]..[702,27110+43])
                                                        Pexp_ident "make_var_subst" (middle_end/flambda/flambda_utils.ml[702,27110+29]..[702,27110+43])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[702,27110+44]..[702,27110+48])
                                                        Pexp_ident "args" (middle_end/flambda/flambda_utils.ml[702,27110+44]..[702,27110+48])
                                                  ]
                                            ]
                                      ]
                                      expression (middle_end/flambda/flambda_utils.ml[704,27169+6]..[706,27246+65])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[704,27169+16]..[704,27169+18])
                                          Pexp_ident "@@" (middle_end/flambda/flambda_utils.ml[704,27169+16]..[704,27169+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[704,27169+6]..[704,27169+15])
                                              Pexp_ident "bind_func" (middle_end/flambda/flambda_utils.ml[704,27169+6]..[704,27169+15])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[705,27188+6]..[706,27246+65])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_utils.ml[705,27188+55]..[705,27188+57])
                                                Pexp_ident "@@" (middle_end/flambda/flambda_utils.ml[705,27188+55]..[705,27188+57])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[705,27188+6]..[705,27188+54])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_utils.ml[705,27188+6]..[705,27188+21])
                                                      Pexp_ident "List.fold_right" (middle_end/flambda/flambda_utils.ml[705,27188+6]..[705,27188+21])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[705,27188+22]..[705,27188+44])
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (middle_end/flambda/flambda_utils.ml[705,27188+27]..[705,27188+28])
                                                            Ppat_var "f" (middle_end/flambda/flambda_utils.ml[705,27188+27]..[705,27188+28])
                                                          expression (middle_end/flambda/flambda_utils.ml[705,27188+29]..[705,27188+43]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (middle_end/flambda/flambda_utils.ml[705,27188+29]..[705,27188+33])
                                                              Ppat_var "expr" (middle_end/flambda/flambda_utils.ml[705,27188+29]..[705,27188+33])
                                                            expression (middle_end/flambda/flambda_utils.ml[705,27188+37]..[705,27188+43])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/flambda_utils.ml[705,27188+37]..[705,27188+38])
                                                                Pexp_ident "f" (middle_end/flambda/flambda_utils.ml[705,27188+37]..[705,27188+38])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/flambda_utils.ml[705,27188+39]..[705,27188+43])
                                                                    Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[705,27188+39]..[705,27188+43])
                                                              ]
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[705,27188+45]..[705,27188+54])
                                                          Pexp_ident "bind_args" (middle_end/flambda/flambda_utils.ml[705,27188+45]..[705,27188+54])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[706,27246+6]..[706,27246+65])
                                                    Pexp_construct "Flambda.Apply" (middle_end/flambda/flambda_utils.ml[706,27246+6]..[706,27246+19])
                                                    Some
                                                      expression (middle_end/flambda/flambda_utils.ml[706,27246+20]..[706,27246+65])
                                                        Pexp_record
                                                        [
                                                          "func" (middle_end/flambda/flambda_utils.ml[706,27246+22]..[706,27246+26]) ghost
                                                            expression (middle_end/flambda/flambda_utils.ml[706,27246+22]..[706,27246+26])
                                                              Pexp_ident "func" (middle_end/flambda/flambda_utils.ml[706,27246+22]..[706,27246+26])
                                                          "args" (middle_end/flambda/flambda_utils.ml[706,27246+28]..[706,27246+32]) ghost
                                                            expression (middle_end/flambda/flambda_utils.ml[706,27246+28]..[706,27246+32])
                                                              Pexp_ident "args" (middle_end/flambda/flambda_utils.ml[706,27246+28]..[706,27246+32])
                                                          "kind" (middle_end/flambda/flambda_utils.ml[706,27246+34]..[706,27246+38]) ghost
                                                            expression (middle_end/flambda/flambda_utils.ml[706,27246+34]..[706,27246+38])
                                                              Pexp_ident "kind" (middle_end/flambda/flambda_utils.ml[706,27246+34]..[706,27246+38])
                                                          "dbg" (middle_end/flambda/flambda_utils.ml[706,27246+40]..[706,27246+43]) ghost
                                                            expression (middle_end/flambda/flambda_utils.ml[706,27246+40]..[706,27246+43])
                                                              Pexp_ident "dbg" (middle_end/flambda/flambda_utils.ml[706,27246+40]..[706,27246+43])
                                                          "inline" (middle_end/flambda/flambda_utils.ml[706,27246+45]..[706,27246+51]) ghost
                                                            expression (middle_end/flambda/flambda_utils.ml[706,27246+45]..[706,27246+51])
                                                              Pexp_ident "inline" (middle_end/flambda/flambda_utils.ml[706,27246+45]..[706,27246+51])
                                                          "specialise" (middle_end/flambda/flambda_utils.ml[706,27246+53]..[706,27246+63]) ghost
                                                            expression (middle_end/flambda/flambda_utils.ml[706,27246+53]..[706,27246+63])
                                                              Pexp_ident "specialise" (middle_end/flambda/flambda_utils.ml[706,27246+53]..[706,27246+63])
                                                        ]
                                                        None
                                              ]
                                        ]
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[707,27312+6]..[707,27312+41])
                                    Ppat_construct "Send" (middle_end/flambda/flambda_utils.ml[707,27312+6]..[707,27312+10])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_utils.ml[707,27312+11]..[707,27312+41])
                                        Ppat_record Closed
                                        [
                                          "kind" (middle_end/flambda/flambda_utils.ml[707,27312+13]..[707,27312+17]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[707,27312+13]..[707,27312+17])
                                              Ppat_var "kind" (middle_end/flambda/flambda_utils.ml[707,27312+13]..[707,27312+17])
                                          "meth" (middle_end/flambda/flambda_utils.ml[707,27312+19]..[707,27312+23]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[707,27312+19]..[707,27312+23])
                                              Ppat_var "meth" (middle_end/flambda/flambda_utils.ml[707,27312+19]..[707,27312+23])
                                          "obj" (middle_end/flambda/flambda_utils.ml[707,27312+25]..[707,27312+28]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[707,27312+25]..[707,27312+28])
                                              Ppat_var "obj" (middle_end/flambda/flambda_utils.ml[707,27312+25]..[707,27312+28])
                                          "args" (middle_end/flambda/flambda_utils.ml[707,27312+30]..[707,27312+34]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[707,27312+30]..[707,27312+34])
                                              Ppat_var "args" (middle_end/flambda/flambda_utils.ml[707,27312+30]..[707,27312+34])
                                          "dbg" (middle_end/flambda/flambda_utils.ml[707,27312+36]..[707,27312+39]) ghost
                                            pattern (middle_end/flambda/flambda_utils.ml[707,27312+36]..[707,27312+39])
                                              Ppat_var "dbg" (middle_end/flambda/flambda_utils.ml[707,27312+36]..[707,27312+39])
                                        ]
                                  expression (middle_end/flambda/flambda_utils.ml[708,27357+6]..[716,27638+49])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_utils.ml[708,27357+10]..[708,27357+25])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/flambda/flambda_utils.ml[708,27357+10]..[708,27357+14])
                                              Ppat_var "meth" (middle_end/flambda/flambda_utils.ml[708,27357+10]..[708,27357+14])
                                            pattern (middle_end/flambda/flambda_utils.ml[708,27357+16]..[708,27357+25])
                                              Ppat_var "bind_meth" (middle_end/flambda/flambda_utils.ml[708,27357+16]..[708,27357+25])
                                          ]
                                        expression (middle_end/flambda/flambda_utils.ml[708,27357+28]..[708,27357+47])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[708,27357+28]..[708,27357+42])
                                            Pexp_ident "make_var_subst" (middle_end/flambda/flambda_utils.ml[708,27357+28]..[708,27357+42])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[708,27357+43]..[708,27357+47])
                                                Pexp_ident "meth" (middle_end/flambda/flambda_utils.ml[708,27357+43]..[708,27357+47])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_utils.ml[709,27408+6]..[716,27638+49])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/flambda_utils.ml[709,27408+10]..[709,27408+23])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/flambda_utils.ml[709,27408+10]..[709,27408+13])
                                                Ppat_var "obj" (middle_end/flambda/flambda_utils.ml[709,27408+10]..[709,27408+13])
                                              pattern (middle_end/flambda/flambda_utils.ml[709,27408+15]..[709,27408+23])
                                                Ppat_var "bind_obj" (middle_end/flambda/flambda_utils.ml[709,27408+15]..[709,27408+23])
                                            ]
                                          expression (middle_end/flambda/flambda_utils.ml[709,27408+26]..[709,27408+44])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[709,27408+26]..[709,27408+40])
                                              Pexp_ident "make_var_subst" (middle_end/flambda/flambda_utils.ml[709,27408+26]..[709,27408+40])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[709,27408+41]..[709,27408+44])
                                                  Pexp_ident "obj" (middle_end/flambda/flambda_utils.ml[709,27408+41]..[709,27408+44])
                                            ]
                                      ]
                                      expression (middle_end/flambda/flambda_utils.ml[710,27456+6]..[716,27638+49])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/flambda_utils.ml[710,27456+10]..[710,27456+25])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[710,27456+10]..[710,27456+14])
                                                  Ppat_var "args" (middle_end/flambda/flambda_utils.ml[710,27456+10]..[710,27456+14])
                                                pattern (middle_end/flambda/flambda_utils.ml[710,27456+16]..[710,27456+25])
                                                  Ppat_var "bind_args" (middle_end/flambda/flambda_utils.ml[710,27456+16]..[710,27456+25])
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[711,27484+8]..[711,27484+49])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_utils.ml[711,27484+8]..[711,27484+18])
                                                Pexp_ident "List.split" (middle_end/flambda/flambda_utils.ml[711,27484+8]..[711,27484+18])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[711,27484+19]..[711,27484+49])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_utils.ml[711,27484+20]..[711,27484+28])
                                                      Pexp_ident "List.map" (middle_end/flambda/flambda_utils.ml[711,27484+20]..[711,27484+28])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[711,27484+29]..[711,27484+43])
                                                          Pexp_ident "make_var_subst" (middle_end/flambda/flambda_utils.ml[711,27484+29]..[711,27484+43])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[711,27484+44]..[711,27484+48])
                                                          Pexp_ident "args" (middle_end/flambda/flambda_utils.ml[711,27484+44]..[711,27484+48])
                                                    ]
                                              ]
                                        ]
                                        expression (middle_end/flambda/flambda_utils.ml[713,27543+6]..[716,27638+49])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[713,27543+16]..[713,27543+18])
                                            Pexp_ident "@@" (middle_end/flambda/flambda_utils.ml[713,27543+16]..[713,27543+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[713,27543+6]..[713,27543+15])
                                                Pexp_ident "bind_meth" (middle_end/flambda/flambda_utils.ml[713,27543+6]..[713,27543+15])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[714,27562+6]..[716,27638+49])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_utils.ml[714,27562+15]..[714,27562+17])
                                                  Pexp_ident "@@" (middle_end/flambda/flambda_utils.ml[714,27562+15]..[714,27562+17])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[714,27562+6]..[714,27562+14])
                                                      Pexp_ident "bind_obj" (middle_end/flambda/flambda_utils.ml[714,27562+6]..[714,27562+14])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[715,27580+6]..[716,27638+49])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_utils.ml[715,27580+55]..[715,27580+57])
                                                        Pexp_ident "@@" (middle_end/flambda/flambda_utils.ml[715,27580+55]..[715,27580+57])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_utils.ml[715,27580+6]..[715,27580+54])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/flambda_utils.ml[715,27580+6]..[715,27580+21])
                                                              Pexp_ident "List.fold_right" (middle_end/flambda/flambda_utils.ml[715,27580+6]..[715,27580+21])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_utils.ml[715,27580+22]..[715,27580+44])
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (middle_end/flambda/flambda_utils.ml[715,27580+27]..[715,27580+28])
                                                                    Ppat_var "f" (middle_end/flambda/flambda_utils.ml[715,27580+27]..[715,27580+28])
                                                                  expression (middle_end/flambda/flambda_utils.ml[715,27580+29]..[715,27580+43]) ghost
                                                                    Pexp_fun
                                                                    Nolabel
                                                                    None
                                                                    pattern (middle_end/flambda/flambda_utils.ml[715,27580+29]..[715,27580+33])
                                                                      Ppat_var "expr" (middle_end/flambda/flambda_utils.ml[715,27580+29]..[715,27580+33])
                                                                    expression (middle_end/flambda/flambda_utils.ml[715,27580+37]..[715,27580+43])
                                                                      Pexp_apply
                                                                      expression (middle_end/flambda/flambda_utils.ml[715,27580+37]..[715,27580+38])
Pexp_ident "f" (middle_end/flambda/flambda_utils.ml[715,27580+37]..[715,27580+38])
                                                                      [
<arg>
Nolabel
  expression (middle_end/flambda/flambda_utils.ml[715,27580+39]..[715,27580+43])
    Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[715,27580+39]..[715,27580+43])
                                                                      ]
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_utils.ml[715,27580+45]..[715,27580+54])
                                                                  Pexp_ident "bind_args" (middle_end/flambda/flambda_utils.ml[715,27580+45]..[715,27580+54])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_utils.ml[716,27638+6]..[716,27638+49])
                                                            Pexp_construct "Flambda.Send" (middle_end/flambda/flambda_utils.ml[716,27638+6]..[716,27638+18])
                                                            Some
                                                              expression (middle_end/flambda/flambda_utils.ml[716,27638+19]..[716,27638+49])
                                                                Pexp_record
                                                                [
                                                                  "kind" (middle_end/flambda/flambda_utils.ml[716,27638+21]..[716,27638+25]) ghost
                                                                    expression (middle_end/flambda/flambda_utils.ml[716,27638+21]..[716,27638+25])
                                                                      Pexp_ident "kind" (middle_end/flambda/flambda_utils.ml[716,27638+21]..[716,27638+25])
                                                                  "meth" (middle_end/flambda/flambda_utils.ml[716,27638+27]..[716,27638+31]) ghost
                                                                    expression (middle_end/flambda/flambda_utils.ml[716,27638+27]..[716,27638+31])
                                                                      Pexp_ident "meth" (middle_end/flambda/flambda_utils.ml[716,27638+27]..[716,27638+31])
                                                                  "obj" (middle_end/flambda/flambda_utils.ml[716,27638+33]..[716,27638+36]) ghost
                                                                    expression (middle_end/flambda/flambda_utils.ml[716,27638+33]..[716,27638+36])
                                                                      Pexp_ident "obj" (middle_end/flambda/flambda_utils.ml[716,27638+33]..[716,27638+36])
                                                                  "args" (middle_end/flambda/flambda_utils.ml[716,27638+38]..[716,27638+42]) ghost
                                                                    expression (middle_end/flambda/flambda_utils.ml[716,27638+38]..[716,27638+42])
                                                                      Pexp_ident "args" (middle_end/flambda/flambda_utils.ml[716,27638+38]..[716,27638+42])
                                                                  "dbg" (middle_end/flambda/flambda_utils.ml[716,27638+44]..[716,27638+47]) ghost
                                                                    expression (middle_end/flambda/flambda_utils.ml[716,27638+44]..[716,27638+47])
                                                                      Pexp_ident "dbg" (middle_end/flambda/flambda_utils.ml[716,27638+44]..[716,27638+47])
                                                                ]
                                                                None
                                                      ]
                                                ]
                                          ]
                                <case>
                                  pattern (middle_end/flambda/flambda_utils.ml[717,27688+6]..[720,27744+20])
                                    Ppat_or
                                    pattern (middle_end/flambda/flambda_utils.ml[717,27688+6]..[719,27727+16])
                                      Ppat_or
                                      pattern (middle_end/flambda/flambda_utils.ml[717,27688+6]..[718,27713+13])
                                        Ppat_or
                                        pattern (middle_end/flambda/flambda_utils.ml[717,27688+6]..[717,27688+24])
                                          Ppat_construct "Proved_unreachable" (middle_end/flambda/flambda_utils.ml[717,27688+6]..[717,27688+24])
                                          None
                                        pattern (middle_end/flambda/flambda_utils.ml[718,27713+6]..[718,27713+13])
                                          Ppat_construct "While" (middle_end/flambda/flambda_utils.ml[718,27713+6]..[718,27713+11])
                                          Some
                                            []
                                            pattern (middle_end/flambda/flambda_utils.ml[718,27713+12]..[718,27713+13])
                                              Ppat_any
                                      pattern (middle_end/flambda/flambda_utils.ml[719,27727+6]..[719,27727+16])
                                        Ppat_construct "Try_with" (middle_end/flambda/flambda_utils.ml[719,27727+6]..[719,27727+14])
                                        Some
                                          []
                                          pattern (middle_end/flambda/flambda_utils.ml[719,27727+15]..[719,27727+16])
                                            Ppat_any
                                    pattern (middle_end/flambda/flambda_utils.ml[720,27744+6]..[720,27744+20])
                                      Ppat_construct "Static_catch" (middle_end/flambda/flambda_utils.ml[720,27744+6]..[720,27744+18])
                                      Some
                                        []
                                        pattern (middle_end/flambda/flambda_utils.ml[720,27744+19]..[720,27744+20])
                                          Ppat_any
                                  expression (middle_end/flambda/flambda_utils.ml[722,27828+6]..[722,27828+10])
                                    Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[722,27828+6]..[722,27828+10])
                              ]
                            core_type (middle_end/flambda/flambda_utils.ml[601,23377+27]..[601,23377+36])
                              Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_utils.ml[601,23377+27]..[601,23377+36])
                              []
                    ]
                    expression (middle_end/flambda/flambda_utils.ml[724,27844+2]..[724,27844+52])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_utils.ml[724,27844+2]..[724,27844+32])
                        Pexp_ident "Flambda_iterators.map_toplevel" (middle_end/flambda/flambda_utils.ml[724,27844+2]..[724,27844+32])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[724,27844+33]..[724,27844+34])
                            Pexp_ident "f" (middle_end/flambda/flambda_utils.ml[724,27844+33]..[724,27844+34])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[724,27844+35]..[724,27844+47])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/flambda_utils.ml[724,27844+40]..[724,27844+41])
                              Ppat_var "v" (middle_end/flambda/flambda_utils.ml[724,27844+40]..[724,27844+41])
                            expression (middle_end/flambda/flambda_utils.ml[724,27844+45]..[724,27844+46])
                              Pexp_ident "v" (middle_end/flambda/flambda_utils.ml[724,27844+45]..[724,27844+46])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[724,27844+48]..[724,27844+52])
                            Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[724,27844+48]..[724,27844+52])
                      ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[726,27898+0]..[812,31242+4])
    Pstr_module
    "Switch_storer" (middle_end/flambda/flambda_utils.ml[726,27898+7]..[726,27898+20])
      module_expr (middle_end/flambda/flambda_utils.ml[726,27898+23]..[812,31242+4])
        Pmod_apply
        module_expr (middle_end/flambda/flambda_utils.ml[726,27898+23]..[726,27898+35])
          Pmod_ident "Switch.Store" (middle_end/flambda/flambda_utils.ml[726,27898+23]..[726,27898+35])
        module_expr (middle_end/flambda/flambda_utils.ml[726,27898+37]..[812,31242+3])
          Pmod_structure
          [
            structure_item (middle_end/flambda/flambda_utils.ml[727,27942+2]..[727,27942+20])
              Pstr_type Rec
              [
                type_declaration "t" (middle_end/flambda/flambda_utils.ml[727,27942+7]..[727,27942+8]) (middle_end/flambda/flambda_utils.ml[727,27942+2]..[727,27942+20])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (middle_end/flambda/flambda_utils.ml[727,27942+11]..[727,27942+20])
                        Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_utils.ml[727,27942+11]..[727,27942+20])
                        []
              ]
            structure_item (middle_end/flambda/flambda_utils.ml[731,28090+2]..[739,28361+17])
              Pstr_type Rec
              [
                type_declaration "key" (middle_end/flambda/flambda_utils.ml[731,28090+7]..[731,28090+10]) (middle_end/flambda/flambda_utils.ml[731,28090+2]..[734,28169+58])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_variant
                      [
                        (middle_end/flambda/flambda_utils.ml[732,28103+4]..[732,28103+23])
                          "Var" (middle_end/flambda/flambda_utils.ml[732,28103+6]..[732,28103+9])
                          [
                            core_type (middle_end/flambda/flambda_utils.ml[732,28103+13]..[732,28103+23])
                              Ptyp_constr "Variable.t" (middle_end/flambda/flambda_utils.ml[732,28103+13]..[732,28103+23])
                              []
                          ]
                          None
                        (middle_end/flambda/flambda_utils.ml[733,28127+4]..[733,28127+41])
                          "Let" (middle_end/flambda/flambda_utils.ml[733,28127+6]..[733,28127+9])
                          [
                            core_type (middle_end/flambda/flambda_utils.ml[733,28127+13]..[733,28127+23])
                              Ptyp_constr "Variable.t" (middle_end/flambda/flambda_utils.ml[733,28127+13]..[733,28127+23])
                              []
                            core_type (middle_end/flambda/flambda_utils.ml[733,28127+26]..[733,28127+35])
                              Ptyp_constr "key_named" (middle_end/flambda/flambda_utils.ml[733,28127+26]..[733,28127+35])
                              []
                            core_type (middle_end/flambda/flambda_utils.ml[733,28127+38]..[733,28127+41])
                              Ptyp_constr "key" (middle_end/flambda/flambda_utils.ml[733,28127+38]..[733,28127+41])
                              []
                          ]
                          None
                        (middle_end/flambda/flambda_utils.ml[734,28169+4]..[734,28169+58])
                          "Static_raise" (middle_end/flambda/flambda_utils.ml[734,28169+6]..[734,28169+18])
                          [
                            core_type (middle_end/flambda/flambda_utils.ml[734,28169+22]..[734,28169+40])
                              Ptyp_constr "Static_exception.t" (middle_end/flambda/flambda_utils.ml[734,28169+22]..[734,28169+40])
                              []
                            core_type (middle_end/flambda/flambda_utils.ml[734,28169+43]..[734,28169+58])
                              Ptyp_constr "list" (middle_end/flambda/flambda_utils.ml[734,28169+54]..[734,28169+58])
                              [
                                core_type (middle_end/flambda/flambda_utils.ml[734,28169+43]..[734,28169+53])
                                  Ptyp_constr "Variable.t" (middle_end/flambda/flambda_utils.ml[734,28169+43]..[734,28169+53])
                                  []
                              ]
                          ]
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
                type_declaration "key_named" (middle_end/flambda/flambda_utils.ml[735,28228+6]..[735,28228+15]) (middle_end/flambda/flambda_utils.ml[735,28228+2]..[739,28361+17])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_variant
                      [
                        (middle_end/flambda/flambda_utils.ml[736,28246+4]..[736,28246+24])
                          "Symbol" (middle_end/flambda/flambda_utils.ml[736,28246+6]..[736,28246+12])
                          [
                            core_type (middle_end/flambda/flambda_utils.ml[736,28246+16]..[736,28246+24])
                              Ptyp_constr "Symbol.t" (middle_end/flambda/flambda_utils.ml[736,28246+16]..[736,28246+24])
                              []
                          ]
                          None
                        (middle_end/flambda/flambda_utils.ml[737,28271+4]..[737,28271+28])
                          "Const" (middle_end/flambda/flambda_utils.ml[737,28271+6]..[737,28271+11])
                          [
                            core_type (middle_end/flambda/flambda_utils.ml[737,28271+15]..[737,28271+28])
                              Ptyp_constr "Flambda.const" (middle_end/flambda/flambda_utils.ml[737,28271+15]..[737,28271+28])
                              []
                          ]
                          None
                        (middle_end/flambda/flambda_utils.ml[738,28300+4]..[738,28300+60])
                          "Prim" (middle_end/flambda/flambda_utils.ml[738,28300+6]..[738,28300+10])
                          [
                            core_type (middle_end/flambda/flambda_utils.ml[738,28300+14]..[738,28300+42])
                              Ptyp_constr "Clambda_primitives.primitive" (middle_end/flambda/flambda_utils.ml[738,28300+14]..[738,28300+42])
                              []
                            core_type (middle_end/flambda/flambda_utils.ml[738,28300+45]..[738,28300+60])
                              Ptyp_constr "list" (middle_end/flambda/flambda_utils.ml[738,28300+56]..[738,28300+60])
                              [
                                core_type (middle_end/flambda/flambda_utils.ml[738,28300+45]..[738,28300+55])
                                  Ptyp_constr "Variable.t" (middle_end/flambda/flambda_utils.ml[738,28300+45]..[738,28300+55])
                                  []
                              ]
                          ]
                          None
                        (middle_end/flambda/flambda_utils.ml[739,28361+4]..[739,28361+17])
                          "Expr" (middle_end/flambda/flambda_utils.ml[739,28361+6]..[739,28361+10])
                          [
                            core_type (middle_end/flambda/flambda_utils.ml[739,28361+14]..[739,28361+17])
                              Ptyp_constr "key" (middle_end/flambda/flambda_utils.ml[739,28361+14]..[739,28361+17])
                              []
                          ]
                          None
                      ]
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
            structure_item (middle_end/flambda/flambda_utils.ml[741,28380+2]..[741,28380+26])
              Pstr_exception
              type_exception
                ptyext_constructor =
                  extension_constructor (middle_end/flambda/flambda_utils.ml[741,28380+2]..[741,28380+26])
                    pext_name = "Not_comparable"
                    pext_kind =
                      Pext_decl
                        []
                        None
            structure_item (middle_end/flambda/flambda_utils.ml[743,28408+2]..[756,28916+31])
              Pstr_value Rec
              [
                <def>
                  pattern (middle_end/flambda/flambda_utils.ml[743,28408+10]..[743,28408+23])
                    Ppat_var "make_expr_key" (middle_end/flambda/flambda_utils.ml[743,28408+10]..[743,28408+23])
                  expression (middle_end/flambda/flambda_utils.ml[743,28408+24]..[749,28664+31]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_utils.ml[743,28408+24]..[743,28408+42])
                      Ppat_constraint
                      pattern (middle_end/flambda/flambda_utils.ml[743,28408+25]..[743,28408+29])
                        Ppat_var "expr" (middle_end/flambda/flambda_utils.ml[743,28408+25]..[743,28408+29])
                      core_type (middle_end/flambda/flambda_utils.ml[743,28408+32]..[743,28408+41])
                        Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_utils.ml[743,28408+32]..[743,28408+41])
                        []
                    expression (middle_end/flambda/flambda_utils.ml[743,28408+43]..[749,28664+31])
                      Pexp_constraint
                      expression (middle_end/flambda/flambda_utils.ml[744,28459+4]..[749,28664+31])
                        Pexp_match
                        expression (middle_end/flambda/flambda_utils.ml[744,28459+10]..[744,28459+14])
                          Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[744,28459+10]..[744,28459+14])
                        [
                          <case>
                            pattern (middle_end/flambda/flambda_utils.ml[745,28479+6]..[745,28479+11])
                              Ppat_construct "Var" (middle_end/flambda/flambda_utils.ml[745,28479+6]..[745,28479+9])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[745,28479+10]..[745,28479+11])
                                  Ppat_var "v" (middle_end/flambda/flambda_utils.ml[745,28479+10]..[745,28479+11])
                            expression (middle_end/flambda/flambda_utils.ml[745,28479+15]..[745,28479+20])
                              Pexp_construct "Var" (middle_end/flambda/flambda_utils.ml[745,28479+15]..[745,28479+18])
                              Some
                                expression (middle_end/flambda/flambda_utils.ml[745,28479+19]..[745,28479+20])
                                  Pexp_ident "v" (middle_end/flambda/flambda_utils.ml[745,28479+19]..[745,28479+20])
                          <case>
                            pattern (middle_end/flambda/flambda_utils.ml[746,28500+6]..[746,28500+39])
                              Ppat_construct "Let" (middle_end/flambda/flambda_utils.ml[746,28500+6]..[746,28500+9])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[746,28500+10]..[746,28500+39])
                                  Ppat_record Closed
                                  [
                                    "var" (middle_end/flambda/flambda_utils.ml[746,28500+12]..[746,28500+15]) ghost
                                      pattern (middle_end/flambda/flambda_utils.ml[746,28500+12]..[746,28500+15])
                                        Ppat_var "var" (middle_end/flambda/flambda_utils.ml[746,28500+12]..[746,28500+15])
                                    "defining_expr" (middle_end/flambda/flambda_utils.ml[746,28500+17]..[746,28500+30]) ghost
                                      pattern (middle_end/flambda/flambda_utils.ml[746,28500+17]..[746,28500+30])
                                        Ppat_var "defining_expr" (middle_end/flambda/flambda_utils.ml[746,28500+17]..[746,28500+30])
                                    "body" (middle_end/flambda/flambda_utils.ml[746,28500+32]..[746,28500+36]) ghost
                                      pattern (middle_end/flambda/flambda_utils.ml[746,28500+32]..[746,28500+36])
                                        Ppat_var "body" (middle_end/flambda/flambda_utils.ml[746,28500+32]..[746,28500+36])
                                  ]
                            expression (middle_end/flambda/flambda_utils.ml[747,28543+6]..[747,28543+65])
                              Pexp_construct "Let" (middle_end/flambda/flambda_utils.ml[747,28543+6]..[747,28543+9])
                              Some
                                expression (middle_end/flambda/flambda_utils.ml[747,28543+10]..[747,28543+65])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/flambda_utils.ml[747,28543+11]..[747,28543+14])
                                      Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[747,28543+11]..[747,28543+14])
                                    expression (middle_end/flambda/flambda_utils.ml[747,28543+16]..[747,28543+44])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[747,28543+16]..[747,28543+30])
                                        Pexp_ident "make_named_key" (middle_end/flambda/flambda_utils.ml[747,28543+16]..[747,28543+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[747,28543+31]..[747,28543+44])
                                            Pexp_ident "defining_expr" (middle_end/flambda/flambda_utils.ml[747,28543+31]..[747,28543+44])
                                      ]
                                    expression (middle_end/flambda/flambda_utils.ml[747,28543+46]..[747,28543+64])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[747,28543+46]..[747,28543+59])
                                        Pexp_ident "make_expr_key" (middle_end/flambda/flambda_utils.ml[747,28543+46]..[747,28543+59])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[747,28543+60]..[747,28543+64])
                                            Pexp_ident "body" (middle_end/flambda/flambda_utils.ml[747,28543+60]..[747,28543+64])
                                      ]
                                  ]
                          <case>
                            pattern (middle_end/flambda/flambda_utils.ml[748,28609+6]..[748,28609+28])
                              Ppat_construct "Static_raise" (middle_end/flambda/flambda_utils.ml[748,28609+6]..[748,28609+18])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[748,28609+19]..[748,28609+28])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[748,28609+20]..[748,28609+21])
                                      Ppat_var "e" (middle_end/flambda/flambda_utils.ml[748,28609+20]..[748,28609+21])
                                    pattern (middle_end/flambda/flambda_utils.ml[748,28609+23]..[748,28609+27])
                                      Ppat_var "args" (middle_end/flambda/flambda_utils.ml[748,28609+23]..[748,28609+27])
                                  ]
                            expression (middle_end/flambda/flambda_utils.ml[748,28609+32]..[748,28609+54])
                              Pexp_construct "Static_raise" (middle_end/flambda/flambda_utils.ml[748,28609+32]..[748,28609+44])
                              Some
                                expression (middle_end/flambda/flambda_utils.ml[748,28609+45]..[748,28609+54])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/flambda_utils.ml[748,28609+46]..[748,28609+47])
                                      Pexp_ident "e" (middle_end/flambda/flambda_utils.ml[748,28609+46]..[748,28609+47])
                                    expression (middle_end/flambda/flambda_utils.ml[748,28609+49]..[748,28609+53])
                                      Pexp_ident "args" (middle_end/flambda/flambda_utils.ml[748,28609+49]..[748,28609+53])
                                  ]
                          <case>
                            pattern (middle_end/flambda/flambda_utils.ml[749,28664+6]..[749,28664+7])
                              Ppat_any
                            expression (middle_end/flambda/flambda_utils.ml[749,28664+11]..[749,28664+31])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_utils.ml[749,28664+11]..[749,28664+16])
                                Pexp_ident "raise" (middle_end/flambda/flambda_utils.ml[749,28664+11]..[749,28664+16])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_utils.ml[749,28664+17]..[749,28664+31])
                                    Pexp_construct "Not_comparable" (middle_end/flambda/flambda_utils.ml[749,28664+17]..[749,28664+31])
                                    None
                              ]
                        ]
                      core_type (middle_end/flambda/flambda_utils.ml[743,28408+45]..[743,28408+48])
                        Ptyp_constr "key" (middle_end/flambda/flambda_utils.ml[743,28408+45]..[743,28408+48])
                        []
                <def>
                  pattern (middle_end/flambda/flambda_utils.ml[750,28696+6]..[750,28696+20])
                    Ppat_var "make_named_key" (middle_end/flambda/flambda_utils.ml[750,28696+6]..[750,28696+20])
                  expression (middle_end/flambda/flambda_utils.ml[750,28696+21]..[756,28916+31]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_utils.ml[750,28696+21]..[750,28696+42])
                      Ppat_constraint
                      pattern (middle_end/flambda/flambda_utils.ml[750,28696+22]..[750,28696+27])
                        Ppat_var "named" (middle_end/flambda/flambda_utils.ml[750,28696+22]..[750,28696+27])
                      core_type (middle_end/flambda/flambda_utils.ml[750,28696+28]..[750,28696+41])
                        Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_utils.ml[750,28696+28]..[750,28696+41])
                        []
                    expression (middle_end/flambda/flambda_utils.ml[750,28696+43]..[756,28916+31])
                      Pexp_constraint
                      expression (middle_end/flambda/flambda_utils.ml[751,28753+4]..[756,28916+31])
                        Pexp_match
                        expression (middle_end/flambda/flambda_utils.ml[751,28753+10]..[751,28753+15])
                          Pexp_ident "named" (middle_end/flambda/flambda_utils.ml[751,28753+10]..[751,28753+15])
                        [
                          <case>
                            pattern (middle_end/flambda/flambda_utils.ml[752,28774+6]..[752,28774+14])
                              Ppat_construct "Symbol" (middle_end/flambda/flambda_utils.ml[752,28774+6]..[752,28774+12])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[752,28774+13]..[752,28774+14])
                                  Ppat_var "s" (middle_end/flambda/flambda_utils.ml[752,28774+13]..[752,28774+14])
                            expression (middle_end/flambda/flambda_utils.ml[752,28774+18]..[752,28774+26])
                              Pexp_construct "Symbol" (middle_end/flambda/flambda_utils.ml[752,28774+18]..[752,28774+24])
                              Some
                                expression (middle_end/flambda/flambda_utils.ml[752,28774+25]..[752,28774+26])
                                  Pexp_ident "s" (middle_end/flambda/flambda_utils.ml[752,28774+25]..[752,28774+26])
                          <case>
                            pattern (middle_end/flambda/flambda_utils.ml[753,28801+6]..[753,28801+13])
                              Ppat_construct "Const" (middle_end/flambda/flambda_utils.ml[753,28801+6]..[753,28801+11])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[753,28801+12]..[753,28801+13])
                                  Ppat_var "c" (middle_end/flambda/flambda_utils.ml[753,28801+12]..[753,28801+13])
                            expression (middle_end/flambda/flambda_utils.ml[753,28801+17]..[753,28801+24])
                              Pexp_construct "Const" (middle_end/flambda/flambda_utils.ml[753,28801+17]..[753,28801+22])
                              Some
                                expression (middle_end/flambda/flambda_utils.ml[753,28801+23]..[753,28801+24])
                                  Pexp_ident "c" (middle_end/flambda/flambda_utils.ml[753,28801+23]..[753,28801+24])
                          <case>
                            pattern (middle_end/flambda/flambda_utils.ml[754,28826+6]..[754,28826+12])
                              Ppat_construct "Expr" (middle_end/flambda/flambda_utils.ml[754,28826+6]..[754,28826+10])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[754,28826+11]..[754,28826+12])
                                  Ppat_var "e" (middle_end/flambda/flambda_utils.ml[754,28826+11]..[754,28826+12])
                            expression (middle_end/flambda/flambda_utils.ml[754,28826+16]..[754,28826+38])
                              Pexp_construct "Expr" (middle_end/flambda/flambda_utils.ml[754,28826+16]..[754,28826+20])
                              Some
                                expression (middle_end/flambda/flambda_utils.ml[754,28826+21]..[754,28826+38])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_utils.ml[754,28826+22]..[754,28826+35])
                                    Pexp_ident "make_expr_key" (middle_end/flambda/flambda_utils.ml[754,28826+22]..[754,28826+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[754,28826+36]..[754,28826+37])
                                        Pexp_ident "e" (middle_end/flambda/flambda_utils.ml[754,28826+36]..[754,28826+37])
                                  ]
                          <case>
                            pattern (middle_end/flambda/flambda_utils.ml[755,28865+6]..[755,28865+29])
                              Ppat_construct "Prim" (middle_end/flambda/flambda_utils.ml[755,28865+6]..[755,28865+10])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_utils.ml[755,28865+11]..[755,28865+29])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_utils.ml[755,28865+12]..[755,28865+16])
                                      Ppat_var "prim" (middle_end/flambda/flambda_utils.ml[755,28865+12]..[755,28865+16])
                                    pattern (middle_end/flambda/flambda_utils.ml[755,28865+18]..[755,28865+22])
                                      Ppat_var "args" (middle_end/flambda/flambda_utils.ml[755,28865+18]..[755,28865+22])
                                    pattern (middle_end/flambda/flambda_utils.ml[755,28865+24]..[755,28865+28])
                                      Ppat_var "_dbg" (middle_end/flambda/flambda_utils.ml[755,28865+24]..[755,28865+28])
                                  ]
                            expression (middle_end/flambda/flambda_utils.ml[755,28865+33]..[755,28865+50])
                              Pexp_construct "Prim" (middle_end/flambda/flambda_utils.ml[755,28865+33]..[755,28865+37])
                              Some
                                expression (middle_end/flambda/flambda_utils.ml[755,28865+38]..[755,28865+50])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/flambda_utils.ml[755,28865+39]..[755,28865+43])
                                      Pexp_ident "prim" (middle_end/flambda/flambda_utils.ml[755,28865+39]..[755,28865+43])
                                    expression (middle_end/flambda/flambda_utils.ml[755,28865+45]..[755,28865+49])
                                      Pexp_ident "args" (middle_end/flambda/flambda_utils.ml[755,28865+45]..[755,28865+49])
                                  ]
                          <case>
                            pattern (middle_end/flambda/flambda_utils.ml[756,28916+6]..[756,28916+7])
                              Ppat_any
                            expression (middle_end/flambda/flambda_utils.ml[756,28916+11]..[756,28916+31])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_utils.ml[756,28916+11]..[756,28916+16])
                                Pexp_ident "raise" (middle_end/flambda/flambda_utils.ml[756,28916+11]..[756,28916+16])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_utils.ml[756,28916+17]..[756,28916+31])
                                    Pexp_construct "Not_comparable" (middle_end/flambda/flambda_utils.ml[756,28916+17]..[756,28916+31])
                                    None
                              ]
                        ]
                      core_type (middle_end/flambda/flambda_utils.ml[750,28696+45]..[750,28696+54])
                        Ptyp_constr "key_named" (middle_end/flambda/flambda_utils.ml[750,28696+45]..[750,28696+54])
                        []
              ]
            structure_item (middle_end/flambda/flambda_utils.ml[758,28949+2]..[761,29044+21])
              Pstr_value Nonrec
              [
                <def>
                  pattern (middle_end/flambda/flambda_utils.ml[758,28949+6]..[758,28949+14])
                    Ppat_var "make_key" (middle_end/flambda/flambda_utils.ml[758,28949+6]..[758,28949+14])
                  expression (middle_end/flambda/flambda_utils.ml[758,28949+15]..[761,29044+21]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_utils.ml[758,28949+15]..[758,28949+19])
                      Ppat_var "expr" (middle_end/flambda/flambda_utils.ml[758,28949+15]..[758,28949+19])
                    expression (middle_end/flambda/flambda_utils.ml[759,28971+4]..[761,29044+21])
                      Pexp_match
                      expression (middle_end/flambda/flambda_utils.ml[759,28971+10]..[759,28971+28])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_utils.ml[759,28971+10]..[759,28971+23])
                          Pexp_ident "make_expr_key" (middle_end/flambda/flambda_utils.ml[759,28971+10]..[759,28971+23])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[759,28971+24]..[759,28971+28])
                              Pexp_ident "expr" (middle_end/flambda/flambda_utils.ml[759,28971+24]..[759,28971+28])
                        ]
                      [
                        <case>
                          pattern (middle_end/flambda/flambda_utils.ml[760,29005+6]..[760,29005+30])
                            Ppat_exception
                            pattern (middle_end/flambda/flambda_utils.ml[760,29005+16]..[760,29005+30])
                              Ppat_construct "Not_comparable" (middle_end/flambda/flambda_utils.ml[760,29005+16]..[760,29005+30])
                              None
                          expression (middle_end/flambda/flambda_utils.ml[760,29005+34]..[760,29005+38])
                            Pexp_construct "None" (middle_end/flambda/flambda_utils.ml[760,29005+34]..[760,29005+38])
                            None
                        <case>
                          pattern (middle_end/flambda/flambda_utils.ml[761,29044+6]..[761,29044+9])
                            Ppat_var "key" (middle_end/flambda/flambda_utils.ml[761,29044+6]..[761,29044+9])
                          expression (middle_end/flambda/flambda_utils.ml[761,29044+13]..[761,29044+21])
                            Pexp_construct "Some" (middle_end/flambda/flambda_utils.ml[761,29044+13]..[761,29044+17])
                            Some
                              expression (middle_end/flambda/flambda_utils.ml[761,29044+18]..[761,29044+21])
                                Pexp_ident "key" (middle_end/flambda/flambda_utils.ml[761,29044+18]..[761,29044+21])
                      ]
              ]
            structure_item (middle_end/flambda/flambda_utils.ml[763,29067+2]..[811,31200+41])
              Pstr_value Nonrec
              [
                <def>
                  pattern (middle_end/flambda/flambda_utils.ml[763,29067+6]..[763,29067+17])
                    Ppat_var "compare_key" (middle_end/flambda/flambda_utils.ml[763,29067+6]..[763,29067+17])
                  expression (middle_end/flambda/flambda_utils.ml[763,29067+18]..[811,31200+41]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_utils.ml[763,29067+18]..[763,29067+20])
                      Ppat_var "e1" (middle_end/flambda/flambda_utils.ml[763,29067+18]..[763,29067+20])
                    expression (middle_end/flambda/flambda_utils.ml[763,29067+21]..[811,31200+41]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/flambda_utils.ml[763,29067+21]..[763,29067+23])
                        Ppat_var "e2" (middle_end/flambda/flambda_utils.ml[763,29067+21]..[763,29067+23])
                      expression (middle_end/flambda/flambda_utils.ml[768,29397+4]..[811,31200+41])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/flambda_utils.ml[768,29397+8]..[768,29397+19])
                              Ppat_var "compare_var" (middle_end/flambda/flambda_utils.ml[768,29397+8]..[768,29397+19])
                            expression (middle_end/flambda/flambda_utils.ml[768,29397+20]..[775,29664+33]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/flambda_utils.ml[768,29397+20]..[768,29397+23])
                                Ppat_var "env" (middle_end/flambda/flambda_utils.ml[768,29397+20]..[768,29397+23])
                              expression (middle_end/flambda/flambda_utils.ml[768,29397+24]..[775,29664+33]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/flambda_utils.ml[768,29397+24]..[768,29397+26])
                                  Ppat_var "v1" (middle_end/flambda/flambda_utils.ml[768,29397+24]..[768,29397+26])
                                expression (middle_end/flambda/flambda_utils.ml[768,29397+27]..[775,29664+33]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/flambda_utils.ml[768,29397+27]..[768,29397+29])
                                    Ppat_var "v2" (middle_end/flambda/flambda_utils.ml[768,29397+27]..[768,29397+29])
                                  expression (middle_end/flambda/flambda_utils.ml[769,29429+6]..[775,29664+33])
                                    Pexp_match
                                    expression (middle_end/flambda/flambda_utils.ml[769,29429+12]..[769,29429+36])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[769,29429+12]..[769,29429+29])
                                        Pexp_ident "Variable.Map.find" (middle_end/flambda/flambda_utils.ml[769,29429+12]..[769,29429+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[769,29429+30]..[769,29429+32])
                                            Pexp_ident "v2" (middle_end/flambda/flambda_utils.ml[769,29429+30]..[769,29429+32])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[769,29429+33]..[769,29429+36])
                                            Pexp_ident "env" (middle_end/flambda/flambda_utils.ml[769,29429+33]..[769,29429+36])
                                      ]
                                    [
                                      <case>
                                        pattern (middle_end/flambda/flambda_utils.ml[770,29471+8]..[770,29471+27])
                                          Ppat_exception
                                          pattern (middle_end/flambda/flambda_utils.ml[770,29471+18]..[770,29471+27])
                                            Ppat_construct "Not_found" (middle_end/flambda/flambda_utils.ml[770,29471+18]..[770,29471+27])
                                            None
                                        expression (middle_end/flambda/flambda_utils.ml[773,29616+8]..[773,29616+30])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[773,29616+8]..[773,29616+24])
                                            Pexp_ident "Variable.compare" (middle_end/flambda/flambda_utils.ml[773,29616+8]..[773,29616+24])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[773,29616+25]..[773,29616+27])
                                                Pexp_ident "v1" (middle_end/flambda/flambda_utils.ml[773,29616+25]..[773,29616+27])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[773,29616+28]..[773,29616+30])
                                                Pexp_ident "v2" (middle_end/flambda/flambda_utils.ml[773,29616+28]..[773,29616+30])
                                          ]
                                      <case>
                                        pattern (middle_end/flambda/flambda_utils.ml[774,29647+8]..[774,29647+13])
                                          Ppat_var "bound" (middle_end/flambda/flambda_utils.ml[774,29647+8]..[774,29647+13])
                                        expression (middle_end/flambda/flambda_utils.ml[775,29664+8]..[775,29664+33])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[775,29664+8]..[775,29664+24])
                                            Pexp_ident "Variable.compare" (middle_end/flambda/flambda_utils.ml[775,29664+8]..[775,29664+24])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[775,29664+25]..[775,29664+27])
                                                Pexp_ident "v1" (middle_end/flambda/flambda_utils.ml[775,29664+25]..[775,29664+27])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[775,29664+28]..[775,29664+33])
                                                Pexp_ident "bound" (middle_end/flambda/flambda_utils.ml[775,29664+28]..[775,29664+33])
                                          ]
                                    ]
                        ]
                        expression (middle_end/flambda/flambda_utils.ml[777,29705+4]..[811,31200+41])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (middle_end/flambda/flambda_utils.ml[777,29705+12]..[777,29705+24])
                                Ppat_var "compare_expr" (middle_end/flambda/flambda_utils.ml[777,29705+12]..[777,29705+24])
                              expression (middle_end/flambda/flambda_utils.ml[777,29705+25]..[794,30416+67]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/flambda_utils.ml[777,29705+25]..[777,29705+28])
                                  Ppat_var "env" (middle_end/flambda/flambda_utils.ml[777,29705+25]..[777,29705+28])
                                expression (middle_end/flambda/flambda_utils.ml[777,29705+29]..[794,30416+67]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/flambda_utils.ml[777,29705+29]..[777,29705+39])
                                    Ppat_constraint
                                    pattern (middle_end/flambda/flambda_utils.ml[777,29705+30]..[777,29705+32])
                                      Ppat_var "e1" (middle_end/flambda/flambda_utils.ml[777,29705+30]..[777,29705+32])
                                    core_type (middle_end/flambda/flambda_utils.ml[777,29705+35]..[777,29705+38])
                                      Ptyp_constr "key" (middle_end/flambda/flambda_utils.ml[777,29705+35]..[777,29705+38])
                                      []
                                  expression (middle_end/flambda/flambda_utils.ml[777,29705+40]..[794,30416+67]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/flambda_utils.ml[777,29705+40]..[777,29705+50])
                                      Ppat_constraint
                                      pattern (middle_end/flambda/flambda_utils.ml[777,29705+41]..[777,29705+43])
                                        Ppat_var "e2" (middle_end/flambda/flambda_utils.ml[777,29705+41]..[777,29705+43])
                                      core_type (middle_end/flambda/flambda_utils.ml[777,29705+46]..[777,29705+49])
                                        Ptyp_constr "key" (middle_end/flambda/flambda_utils.ml[777,29705+46]..[777,29705+49])
                                        []
                                    expression (middle_end/flambda/flambda_utils.ml[777,29705+51]..[794,30416+67])
                                      Pexp_constraint
                                      expression (middle_end/flambda/flambda_utils.ml[778,29764+6]..[794,30416+67])
                                        Pexp_match
                                        expression (middle_end/flambda/flambda_utils.ml[778,29764+12]..[778,29764+18])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/flambda_utils.ml[778,29764+12]..[778,29764+14])
                                              Pexp_ident "e1" (middle_end/flambda/flambda_utils.ml[778,29764+12]..[778,29764+14])
                                            expression (middle_end/flambda/flambda_utils.ml[778,29764+16]..[778,29764+18])
                                              Pexp_ident "e2" (middle_end/flambda/flambda_utils.ml[778,29764+16]..[778,29764+18])
                                          ]
                                        [
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[779,29788+8]..[779,29788+22])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[779,29788+8]..[779,29788+14])
                                                  Ppat_construct "Var" (middle_end/flambda/flambda_utils.ml[779,29788+8]..[779,29788+11])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[779,29788+12]..[779,29788+14])
                                                      Ppat_var "v1" (middle_end/flambda/flambda_utils.ml[779,29788+12]..[779,29788+14])
                                                pattern (middle_end/flambda/flambda_utils.ml[779,29788+16]..[779,29788+22])
                                                  Ppat_construct "Var" (middle_end/flambda/flambda_utils.ml[779,29788+16]..[779,29788+19])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[779,29788+20]..[779,29788+22])
                                                      Ppat_var "v2" (middle_end/flambda/flambda_utils.ml[779,29788+20]..[779,29788+22])
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[780,29814+8]..[780,29814+29])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_utils.ml[780,29814+8]..[780,29814+19])
                                                Pexp_ident "compare_var" (middle_end/flambda/flambda_utils.ml[780,29814+8]..[780,29814+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[780,29814+20]..[780,29814+23])
                                                    Pexp_ident "env" (middle_end/flambda/flambda_utils.ml[780,29814+20]..[780,29814+23])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[780,29814+24]..[780,29814+26])
                                                    Pexp_ident "v1" (middle_end/flambda/flambda_utils.ml[780,29814+24]..[780,29814+26])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[780,29814+27]..[780,29814+29])
                                                    Pexp_ident "v2" (middle_end/flambda/flambda_utils.ml[780,29814+27]..[780,29814+29])
                                              ]
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[781,29844+8]..[781,29844+38])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[781,29844+8]..[781,29844+13])
                                                  Ppat_construct "Var" (middle_end/flambda/flambda_utils.ml[781,29844+8]..[781,29844+11])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[781,29844+12]..[781,29844+13])
                                                      Ppat_any
                                                pattern (middle_end/flambda/flambda_utils.ml[781,29844+15]..[781,29844+38])
                                                  Ppat_or
                                                  pattern (middle_end/flambda/flambda_utils.ml[781,29844+16]..[781,29844+21])
                                                    Ppat_construct "Let" (middle_end/flambda/flambda_utils.ml[781,29844+16]..[781,29844+19])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/flambda_utils.ml[781,29844+20]..[781,29844+21])
                                                        Ppat_any
                                                  pattern (middle_end/flambda/flambda_utils.ml[781,29844+23]..[781,29844+37])
                                                    Ppat_construct "Static_raise" (middle_end/flambda/flambda_utils.ml[781,29844+23]..[781,29844+35])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/flambda_utils.ml[781,29844+36]..[781,29844+37])
                                                        Ppat_any
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[781,29844+42]..[781,29844+44])
                                              Pexp_constant PConst_int (-1,None)
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[782,29889+8]..[782,29889+38])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[782,29889+8]..[782,29889+31])
                                                  Ppat_or
                                                  pattern (middle_end/flambda/flambda_utils.ml[782,29889+9]..[782,29889+14])
                                                    Ppat_construct "Let" (middle_end/flambda/flambda_utils.ml[782,29889+9]..[782,29889+12])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/flambda_utils.ml[782,29889+13]..[782,29889+14])
                                                        Ppat_any
                                                  pattern (middle_end/flambda/flambda_utils.ml[782,29889+16]..[782,29889+30])
                                                    Ppat_construct "Static_raise" (middle_end/flambda/flambda_utils.ml[782,29889+16]..[782,29889+28])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/flambda_utils.ml[782,29889+29]..[782,29889+30])
                                                        Ppat_any
                                                pattern (middle_end/flambda/flambda_utils.ml[782,29889+33]..[782,29889+38])
                                                  Ppat_construct "Var" (middle_end/flambda/flambda_utils.ml[782,29889+33]..[782,29889+36])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[782,29889+37]..[782,29889+38])
                                                      Ppat_any
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[782,29889+43]..[782,29889+44])
                                              Pexp_constant PConst_int (1,None)
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[783,29934+8]..[783,29934+42])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[783,29934+8]..[783,29934+24])
                                                  Ppat_construct "Let" (middle_end/flambda/flambda_utils.ml[783,29934+8]..[783,29934+11])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[783,29934+12]..[783,29934+24])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/flambda_utils.ml[783,29934+13]..[783,29934+15])
                                                          Ppat_var "v1" (middle_end/flambda/flambda_utils.ml[783,29934+13]..[783,29934+15])
                                                        pattern (middle_end/flambda/flambda_utils.ml[783,29934+17]..[783,29934+19])
                                                          Ppat_var "n1" (middle_end/flambda/flambda_utils.ml[783,29934+17]..[783,29934+19])
                                                        pattern (middle_end/flambda/flambda_utils.ml[783,29934+21]..[783,29934+23])
                                                          Ppat_var "b1" (middle_end/flambda/flambda_utils.ml[783,29934+21]..[783,29934+23])
                                                      ]
                                                pattern (middle_end/flambda/flambda_utils.ml[783,29934+26]..[783,29934+42])
                                                  Ppat_construct "Let" (middle_end/flambda/flambda_utils.ml[783,29934+26]..[783,29934+29])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[783,29934+30]..[783,29934+42])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/flambda_utils.ml[783,29934+31]..[783,29934+33])
                                                          Ppat_var "v2" (middle_end/flambda/flambda_utils.ml[783,29934+31]..[783,29934+33])
                                                        pattern (middle_end/flambda/flambda_utils.ml[783,29934+35]..[783,29934+37])
                                                          Ppat_var "n2" (middle_end/flambda/flambda_utils.ml[783,29934+35]..[783,29934+37])
                                                        pattern (middle_end/flambda/flambda_utils.ml[783,29934+39]..[783,29934+41])
                                                          Ppat_var "b2" (middle_end/flambda/flambda_utils.ml[783,29934+39]..[783,29934+41])
                                                      ]
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[784,29980+8]..[788,30138+32])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/flambda_utils.ml[784,29980+12]..[784,29980+22])
                                                    Ppat_var "comp_named" (middle_end/flambda/flambda_utils.ml[784,29980+12]..[784,29980+22])
                                                  expression (middle_end/flambda/flambda_utils.ml[784,29980+25]..[784,29980+48])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_utils.ml[784,29980+25]..[784,29980+38])
                                                      Pexp_ident "compare_named" (middle_end/flambda/flambda_utils.ml[784,29980+25]..[784,29980+38])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[784,29980+39]..[784,29980+42])
                                                          Pexp_ident "env" (middle_end/flambda/flambda_utils.ml[784,29980+39]..[784,29980+42])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[784,29980+43]..[784,29980+45])
                                                          Pexp_ident "n1" (middle_end/flambda/flambda_utils.ml[784,29980+43]..[784,29980+45])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[784,29980+46]..[784,29980+48])
                                                          Pexp_ident "n2" (middle_end/flambda/flambda_utils.ml[784,29980+46]..[784,29980+48])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/flambda_utils.ml[785,30032+8]..[788,30138+32])
                                                Pexp_ifthenelse
                                                expression (middle_end/flambda/flambda_utils.ml[785,30032+11]..[785,30032+26])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/flambda_utils.ml[785,30032+22]..[785,30032+24])
                                                    Pexp_ident "<>" (middle_end/flambda/flambda_utils.ml[785,30032+22]..[785,30032+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[785,30032+11]..[785,30032+21])
                                                        Pexp_ident "comp_named" (middle_end/flambda/flambda_utils.ml[785,30032+11]..[785,30032+21])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[785,30032+25]..[785,30032+26])
                                                        Pexp_constant PConst_int (0,None)
                                                  ]
                                                expression (middle_end/flambda/flambda_utils.ml[785,30032+32]..[785,30032+42])
                                                  Pexp_ident "comp_named" (middle_end/flambda/flambda_utils.ml[785,30032+32]..[785,30032+42])
                                                Some
                                                  expression (middle_end/flambda/flambda_utils.ml[787,30088+10]..[788,30138+32])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/flambda/flambda_utils.ml[787,30088+14]..[787,30088+17])
                                                          Ppat_var "env" (middle_end/flambda/flambda_utils.ml[787,30088+14]..[787,30088+17])
                                                        expression (middle_end/flambda/flambda_utils.ml[787,30088+20]..[787,30088+46])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_utils.ml[787,30088+20]..[787,30088+36])
                                                            Pexp_ident "Variable.Map.add" (middle_end/flambda/flambda_utils.ml[787,30088+20]..[787,30088+36])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_utils.ml[787,30088+37]..[787,30088+39])
                                                                Pexp_ident "v2" (middle_end/flambda/flambda_utils.ml[787,30088+37]..[787,30088+39])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_utils.ml[787,30088+40]..[787,30088+42])
                                                                Pexp_ident "v1" (middle_end/flambda/flambda_utils.ml[787,30088+40]..[787,30088+42])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_utils.ml[787,30088+43]..[787,30088+46])
                                                                Pexp_ident "env" (middle_end/flambda/flambda_utils.ml[787,30088+43]..[787,30088+46])
                                                          ]
                                                    ]
                                                    expression (middle_end/flambda/flambda_utils.ml[788,30138+10]..[788,30138+32])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_utils.ml[788,30138+10]..[788,30138+22])
                                                        Pexp_ident "compare_expr" (middle_end/flambda/flambda_utils.ml[788,30138+10]..[788,30138+22])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_utils.ml[788,30138+23]..[788,30138+26])
                                                            Pexp_ident "env" (middle_end/flambda/flambda_utils.ml[788,30138+23]..[788,30138+26])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_utils.ml[788,30138+27]..[788,30138+29])
                                                            Pexp_ident "b1" (middle_end/flambda/flambda_utils.ml[788,30138+27]..[788,30138+29])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_utils.ml[788,30138+30]..[788,30138+32])
                                                            Pexp_ident "b2" (middle_end/flambda/flambda_utils.ml[788,30138+30]..[788,30138+32])
                                                      ]
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[789,30171+8]..[789,30171+29])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[789,30171+8]..[789,30171+13])
                                                  Ppat_construct "Let" (middle_end/flambda/flambda_utils.ml[789,30171+8]..[789,30171+11])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[789,30171+12]..[789,30171+13])
                                                      Ppat_any
                                                pattern (middle_end/flambda/flambda_utils.ml[789,30171+15]..[789,30171+29])
                                                  Ppat_construct "Static_raise" (middle_end/flambda/flambda_utils.ml[789,30171+15]..[789,30171+27])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[789,30171+28]..[789,30171+29])
                                                      Ppat_any
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[789,30171+33]..[789,30171+35])
                                              Pexp_constant PConst_int (-1,None)
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[790,30207+8]..[790,30207+29])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[790,30207+8]..[790,30207+22])
                                                  Ppat_construct "Static_raise" (middle_end/flambda/flambda_utils.ml[790,30207+8]..[790,30207+20])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[790,30207+21]..[790,30207+22])
                                                      Ppat_any
                                                pattern (middle_end/flambda/flambda_utils.ml[790,30207+24]..[790,30207+29])
                                                  Ppat_construct "Let" (middle_end/flambda/flambda_utils.ml[790,30207+24]..[790,30207+27])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[790,30207+28]..[790,30207+29])
                                                      Ppat_any
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[790,30207+34]..[790,30207+35])
                                              Pexp_constant PConst_int (1,None)
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[791,30243+8]..[791,30243+64])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[791,30243+8]..[791,30243+35])
                                                  Ppat_construct "Static_raise" (middle_end/flambda/flambda_utils.ml[791,30243+8]..[791,30243+20])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[791,30243+21]..[791,30243+35])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/flambda_utils.ml[791,30243+22]..[791,30243+27])
                                                          Ppat_var "sexn1" (middle_end/flambda/flambda_utils.ml[791,30243+22]..[791,30243+27])
                                                        pattern (middle_end/flambda/flambda_utils.ml[791,30243+29]..[791,30243+34])
                                                          Ppat_var "args1" (middle_end/flambda/flambda_utils.ml[791,30243+29]..[791,30243+34])
                                                      ]
                                                pattern (middle_end/flambda/flambda_utils.ml[791,30243+37]..[791,30243+64])
                                                  Ppat_construct "Static_raise" (middle_end/flambda/flambda_utils.ml[791,30243+37]..[791,30243+49])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[791,30243+50]..[791,30243+64])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/flambda_utils.ml[791,30243+51]..[791,30243+56])
                                                          Ppat_var "sexn2" (middle_end/flambda/flambda_utils.ml[791,30243+51]..[791,30243+56])
                                                        pattern (middle_end/flambda/flambda_utils.ml[791,30243+58]..[791,30243+63])
                                                          Ppat_var "args2" (middle_end/flambda/flambda_utils.ml[791,30243+58]..[791,30243+63])
                                                      ]
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[792,30311+8]..[794,30416+67])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/flambda_utils.ml[792,30311+12]..[792,30311+21])
                                                    Ppat_var "comp_sexn" (middle_end/flambda/flambda_utils.ml[792,30311+12]..[792,30311+21])
                                                  expression (middle_end/flambda/flambda_utils.ml[792,30311+24]..[792,30311+60])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_utils.ml[792,30311+24]..[792,30311+48])
                                                      Pexp_ident "Static_exception.compare" (middle_end/flambda/flambda_utils.ml[792,30311+24]..[792,30311+48])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[792,30311+49]..[792,30311+54])
                                                          Pexp_ident "sexn1" (middle_end/flambda/flambda_utils.ml[792,30311+49]..[792,30311+54])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[792,30311+55]..[792,30311+60])
                                                          Pexp_ident "sexn2" (middle_end/flambda/flambda_utils.ml[792,30311+55]..[792,30311+60])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/flambda_utils.ml[793,30375+8]..[794,30416+67])
                                                Pexp_ifthenelse
                                                expression (middle_end/flambda/flambda_utils.ml[793,30375+11]..[793,30375+25])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/flambda_utils.ml[793,30375+21]..[793,30375+23])
                                                    Pexp_ident "<>" (middle_end/flambda/flambda_utils.ml[793,30375+21]..[793,30375+23])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[793,30375+11]..[793,30375+20])
                                                        Pexp_ident "comp_sexn" (middle_end/flambda/flambda_utils.ml[793,30375+11]..[793,30375+20])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[793,30375+24]..[793,30375+25])
                                                        Pexp_constant PConst_int (0,None)
                                                  ]
                                                expression (middle_end/flambda/flambda_utils.ml[793,30375+31]..[793,30375+40])
                                                  Pexp_ident "comp_sexn" (middle_end/flambda/flambda_utils.ml[793,30375+31]..[793,30375+40])
                                                Some
                                                  expression (middle_end/flambda/flambda_utils.ml[794,30416+13]..[794,30416+67])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_utils.ml[794,30416+13]..[794,30416+37])
                                                      Pexp_ident "Misc.Stdlib.List.compare" (middle_end/flambda/flambda_utils.ml[794,30416+13]..[794,30416+37])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[794,30416+38]..[794,30416+55])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_utils.ml[794,30416+39]..[794,30416+50])
                                                            Pexp_ident "compare_var" (middle_end/flambda/flambda_utils.ml[794,30416+39]..[794,30416+50])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_utils.ml[794,30416+51]..[794,30416+54])
                                                                Pexp_ident "env" (middle_end/flambda/flambda_utils.ml[794,30416+51]..[794,30416+54])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[794,30416+56]..[794,30416+61])
                                                          Pexp_ident "args1" (middle_end/flambda/flambda_utils.ml[794,30416+56]..[794,30416+61])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[794,30416+62]..[794,30416+67])
                                                          Pexp_ident "args2" (middle_end/flambda/flambda_utils.ml[794,30416+62]..[794,30416+67])
                                                    ]
                                        ]
                                      core_type (middle_end/flambda/flambda_utils.ml[777,29705+53]..[777,29705+56])
                                        Ptyp_constr "int" (middle_end/flambda/flambda_utils.ml[777,29705+53]..[777,29705+56])
                                        []
                            <def>
                              pattern (middle_end/flambda/flambda_utils.ml[795,30484+8]..[795,30484+21])
                                Ppat_var "compare_named" (middle_end/flambda/flambda_utils.ml[795,30484+8]..[795,30484+21])
                              expression (middle_end/flambda/flambda_utils.ml[795,30484+22]..[809,31125+67]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/flambda_utils.ml[795,30484+22]..[795,30484+25])
                                  Ppat_var "env" (middle_end/flambda/flambda_utils.ml[795,30484+22]..[795,30484+25])
                                expression (middle_end/flambda/flambda_utils.ml[795,30484+26]..[809,31125+67]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/flambda_utils.ml[795,30484+26]..[795,30484+40])
                                    Ppat_constraint
                                    pattern (middle_end/flambda/flambda_utils.ml[795,30484+27]..[795,30484+29])
                                      Ppat_var "n1" (middle_end/flambda/flambda_utils.ml[795,30484+27]..[795,30484+29])
                                    core_type (middle_end/flambda/flambda_utils.ml[795,30484+30]..[795,30484+39])
                                      Ptyp_constr "key_named" (middle_end/flambda/flambda_utils.ml[795,30484+30]..[795,30484+39])
                                      []
                                  expression (middle_end/flambda/flambda_utils.ml[795,30484+41]..[809,31125+67]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/flambda_utils.ml[795,30484+41]..[795,30484+55])
                                      Ppat_constraint
                                      pattern (middle_end/flambda/flambda_utils.ml[795,30484+42]..[795,30484+44])
                                        Ppat_var "n2" (middle_end/flambda/flambda_utils.ml[795,30484+42]..[795,30484+44])
                                      core_type (middle_end/flambda/flambda_utils.ml[795,30484+45]..[795,30484+54])
                                        Ptyp_constr "key_named" (middle_end/flambda/flambda_utils.ml[795,30484+45]..[795,30484+54])
                                        []
                                    expression (middle_end/flambda/flambda_utils.ml[795,30484+56]..[809,31125+67])
                                      Pexp_constraint
                                      expression (middle_end/flambda/flambda_utils.ml[796,30548+6]..[809,31125+67])
                                        Pexp_match
                                        expression (middle_end/flambda/flambda_utils.ml[796,30548+12]..[796,30548+18])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/flambda_utils.ml[796,30548+12]..[796,30548+14])
                                              Pexp_ident "n1" (middle_end/flambda/flambda_utils.ml[796,30548+12]..[796,30548+14])
                                            expression (middle_end/flambda/flambda_utils.ml[796,30548+16]..[796,30548+18])
                                              Pexp_ident "n2" (middle_end/flambda/flambda_utils.ml[796,30548+16]..[796,30548+18])
                                          ]
                                        [
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[797,30572+8]..[797,30572+28])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[797,30572+8]..[797,30572+17])
                                                  Ppat_construct "Symbol" (middle_end/flambda/flambda_utils.ml[797,30572+8]..[797,30572+14])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[797,30572+15]..[797,30572+17])
                                                      Ppat_var "s1" (middle_end/flambda/flambda_utils.ml[797,30572+15]..[797,30572+17])
                                                pattern (middle_end/flambda/flambda_utils.ml[797,30572+19]..[797,30572+28])
                                                  Ppat_construct "Symbol" (middle_end/flambda/flambda_utils.ml[797,30572+19]..[797,30572+25])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[797,30572+26]..[797,30572+28])
                                                      Ppat_var "s2" (middle_end/flambda/flambda_utils.ml[797,30572+26]..[797,30572+28])
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[797,30572+32]..[797,30572+52])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_utils.ml[797,30572+32]..[797,30572+46])
                                                Pexp_ident "Symbol.compare" (middle_end/flambda/flambda_utils.ml[797,30572+32]..[797,30572+46])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[797,30572+47]..[797,30572+49])
                                                    Pexp_ident "s1" (middle_end/flambda/flambda_utils.ml[797,30572+47]..[797,30572+49])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[797,30572+50]..[797,30572+52])
                                                    Pexp_ident "s2" (middle_end/flambda/flambda_utils.ml[797,30572+50]..[797,30572+52])
                                              ]
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[798,30625+8]..[798,30625+45])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[798,30625+8]..[798,30625+16])
                                                  Ppat_construct "Symbol" (middle_end/flambda/flambda_utils.ml[798,30625+8]..[798,30625+14])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[798,30625+15]..[798,30625+16])
                                                      Ppat_any
                                                pattern (middle_end/flambda/flambda_utils.ml[798,30625+18]..[798,30625+45])
                                                  Ppat_or
                                                  pattern (middle_end/flambda/flambda_utils.ml[798,30625+19]..[798,30625+35])
                                                    Ppat_or
                                                    pattern (middle_end/flambda/flambda_utils.ml[798,30625+19]..[798,30625+26])
                                                      Ppat_construct "Const" (middle_end/flambda/flambda_utils.ml[798,30625+19]..[798,30625+24])
                                                      Some
                                                        []
                                                        pattern (middle_end/flambda/flambda_utils.ml[798,30625+25]..[798,30625+26])
                                                          Ppat_any
                                                    pattern (middle_end/flambda/flambda_utils.ml[798,30625+29]..[798,30625+35])
                                                      Ppat_construct "Expr" (middle_end/flambda/flambda_utils.ml[798,30625+29]..[798,30625+33])
                                                      Some
                                                        []
                                                        pattern (middle_end/flambda/flambda_utils.ml[798,30625+34]..[798,30625+35])
                                                          Ppat_any
                                                  pattern (middle_end/flambda/flambda_utils.ml[798,30625+38]..[798,30625+44])
                                                    Ppat_construct "Prim" (middle_end/flambda/flambda_utils.ml[798,30625+38]..[798,30625+42])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/flambda_utils.ml[798,30625+43]..[798,30625+44])
                                                        Ppat_any
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[798,30625+49]..[798,30625+51])
                                              Pexp_constant PConst_int (-1,None)
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[799,30677+8]..[799,30677+45])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[799,30677+8]..[799,30677+35])
                                                  Ppat_or
                                                  pattern (middle_end/flambda/flambda_utils.ml[799,30677+9]..[799,30677+25])
                                                    Ppat_or
                                                    pattern (middle_end/flambda/flambda_utils.ml[799,30677+9]..[799,30677+16])
                                                      Ppat_construct "Const" (middle_end/flambda/flambda_utils.ml[799,30677+9]..[799,30677+14])
                                                      Some
                                                        []
                                                        pattern (middle_end/flambda/flambda_utils.ml[799,30677+15]..[799,30677+16])
                                                          Ppat_any
                                                    pattern (middle_end/flambda/flambda_utils.ml[799,30677+19]..[799,30677+25])
                                                      Ppat_construct "Expr" (middle_end/flambda/flambda_utils.ml[799,30677+19]..[799,30677+23])
                                                      Some
                                                        []
                                                        pattern (middle_end/flambda/flambda_utils.ml[799,30677+24]..[799,30677+25])
                                                          Ppat_any
                                                  pattern (middle_end/flambda/flambda_utils.ml[799,30677+28]..[799,30677+34])
                                                    Ppat_construct "Prim" (middle_end/flambda/flambda_utils.ml[799,30677+28]..[799,30677+32])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/flambda_utils.ml[799,30677+33]..[799,30677+34])
                                                        Ppat_any
                                                pattern (middle_end/flambda/flambda_utils.ml[799,30677+37]..[799,30677+45])
                                                  Ppat_construct "Symbol" (middle_end/flambda/flambda_utils.ml[799,30677+37]..[799,30677+43])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[799,30677+44]..[799,30677+45])
                                                      Ppat_any
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[799,30677+50]..[799,30677+51])
                                              Pexp_constant PConst_int (1,None)
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[800,30729+8]..[800,30729+26])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[800,30729+8]..[800,30729+16])
                                                  Ppat_construct "Const" (middle_end/flambda/flambda_utils.ml[800,30729+8]..[800,30729+13])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[800,30729+14]..[800,30729+16])
                                                      Ppat_var "c1" (middle_end/flambda/flambda_utils.ml[800,30729+14]..[800,30729+16])
                                                pattern (middle_end/flambda/flambda_utils.ml[800,30729+18]..[800,30729+26])
                                                  Ppat_construct "Const" (middle_end/flambda/flambda_utils.ml[800,30729+18]..[800,30729+23])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[800,30729+24]..[800,30729+26])
                                                      Ppat_var "c2" (middle_end/flambda/flambda_utils.ml[800,30729+24]..[800,30729+26])
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[800,30729+30]..[800,30729+57])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_utils.ml[800,30729+30]..[800,30729+51])
                                                Pexp_ident "Flambda.compare_const" (middle_end/flambda/flambda_utils.ml[800,30729+30]..[800,30729+51])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[800,30729+52]..[800,30729+54])
                                                    Pexp_ident "c1" (middle_end/flambda/flambda_utils.ml[800,30729+52]..[800,30729+54])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[800,30729+55]..[800,30729+57])
                                                    Pexp_ident "c2" (middle_end/flambda/flambda_utils.ml[800,30729+55]..[800,30729+57])
                                              ]
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[801,30787+8]..[801,30787+34])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[801,30787+8]..[801,30787+15])
                                                  Ppat_construct "Const" (middle_end/flambda/flambda_utils.ml[801,30787+8]..[801,30787+13])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[801,30787+14]..[801,30787+15])
                                                      Ppat_any
                                                pattern (middle_end/flambda/flambda_utils.ml[801,30787+17]..[801,30787+34])
                                                  Ppat_or
                                                  pattern (middle_end/flambda/flambda_utils.ml[801,30787+18]..[801,30787+24])
                                                    Ppat_construct "Expr" (middle_end/flambda/flambda_utils.ml[801,30787+18]..[801,30787+22])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/flambda_utils.ml[801,30787+23]..[801,30787+24])
                                                        Ppat_any
                                                  pattern (middle_end/flambda/flambda_utils.ml[801,30787+27]..[801,30787+33])
                                                    Ppat_construct "Prim" (middle_end/flambda/flambda_utils.ml[801,30787+27]..[801,30787+31])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/flambda_utils.ml[801,30787+32]..[801,30787+33])
                                                        Ppat_any
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[801,30787+38]..[801,30787+40])
                                              Pexp_constant PConst_int (-1,None)
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[802,30828+8]..[802,30828+34])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[802,30828+8]..[802,30828+25])
                                                  Ppat_or
                                                  pattern (middle_end/flambda/flambda_utils.ml[802,30828+9]..[802,30828+15])
                                                    Ppat_construct "Expr" (middle_end/flambda/flambda_utils.ml[802,30828+9]..[802,30828+13])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/flambda_utils.ml[802,30828+14]..[802,30828+15])
                                                        Ppat_any
                                                  pattern (middle_end/flambda/flambda_utils.ml[802,30828+18]..[802,30828+24])
                                                    Ppat_construct "Prim" (middle_end/flambda/flambda_utils.ml[802,30828+18]..[802,30828+22])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/flambda_utils.ml[802,30828+23]..[802,30828+24])
                                                        Ppat_any
                                                pattern (middle_end/flambda/flambda_utils.ml[802,30828+27]..[802,30828+34])
                                                  Ppat_construct "Const" (middle_end/flambda/flambda_utils.ml[802,30828+27]..[802,30828+32])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[802,30828+33]..[802,30828+34])
                                                      Ppat_any
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[802,30828+39]..[802,30828+40])
                                              Pexp_constant PConst_int (1,None)
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[803,30869+8]..[803,30869+24])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[803,30869+8]..[803,30869+15])
                                                  Ppat_construct "Expr" (middle_end/flambda/flambda_utils.ml[803,30869+8]..[803,30869+12])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[803,30869+13]..[803,30869+15])
                                                      Ppat_var "e1" (middle_end/flambda/flambda_utils.ml[803,30869+13]..[803,30869+15])
                                                pattern (middle_end/flambda/flambda_utils.ml[803,30869+17]..[803,30869+24])
                                                  Ppat_construct "Expr" (middle_end/flambda/flambda_utils.ml[803,30869+17]..[803,30869+21])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[803,30869+22]..[803,30869+24])
                                                      Ppat_var "e2" (middle_end/flambda/flambda_utils.ml[803,30869+22]..[803,30869+24])
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[803,30869+28]..[803,30869+50])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_utils.ml[803,30869+28]..[803,30869+40])
                                                Pexp_ident "compare_expr" (middle_end/flambda/flambda_utils.ml[803,30869+28]..[803,30869+40])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[803,30869+41]..[803,30869+44])
                                                    Pexp_ident "env" (middle_end/flambda/flambda_utils.ml[803,30869+41]..[803,30869+44])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[803,30869+45]..[803,30869+47])
                                                    Pexp_ident "e1" (middle_end/flambda/flambda_utils.ml[803,30869+45]..[803,30869+47])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[803,30869+48]..[803,30869+50])
                                                    Pexp_ident "e2" (middle_end/flambda/flambda_utils.ml[803,30869+48]..[803,30869+50])
                                              ]
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[804,30920+8]..[804,30920+22])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[804,30920+8]..[804,30920+14])
                                                  Ppat_construct "Expr" (middle_end/flambda/flambda_utils.ml[804,30920+8]..[804,30920+12])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[804,30920+13]..[804,30920+14])
                                                      Ppat_any
                                                pattern (middle_end/flambda/flambda_utils.ml[804,30920+16]..[804,30920+22])
                                                  Ppat_construct "Prim" (middle_end/flambda/flambda_utils.ml[804,30920+16]..[804,30920+20])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[804,30920+21]..[804,30920+22])
                                                      Ppat_any
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[804,30920+26]..[804,30920+28])
                                              Pexp_constant PConst_int (-1,None)
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[805,30949+8]..[805,30949+22])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[805,30949+8]..[805,30949+14])
                                                  Ppat_construct "Prim" (middle_end/flambda/flambda_utils.ml[805,30949+8]..[805,30949+12])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[805,30949+13]..[805,30949+14])
                                                      Ppat_any
                                                pattern (middle_end/flambda/flambda_utils.ml[805,30949+16]..[805,30949+22])
                                                  Ppat_construct "Expr" (middle_end/flambda/flambda_utils.ml[805,30949+16]..[805,30949+20])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[805,30949+21]..[805,30949+22])
                                                      Ppat_any
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[805,30949+27]..[805,30949+28])
                                              Pexp_constant PConst_int (1,None)
                                          <case>
                                            pattern (middle_end/flambda/flambda_utils.ml[806,30978+8]..[806,30978+48])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/flambda_utils.ml[806,30978+8]..[806,30978+27])
                                                  Ppat_construct "Prim" (middle_end/flambda/flambda_utils.ml[806,30978+8]..[806,30978+12])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[806,30978+13]..[806,30978+27])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/flambda_utils.ml[806,30978+14]..[806,30978+19])
                                                          Ppat_var "prim1" (middle_end/flambda/flambda_utils.ml[806,30978+14]..[806,30978+19])
                                                        pattern (middle_end/flambda/flambda_utils.ml[806,30978+21]..[806,30978+26])
                                                          Ppat_var "args1" (middle_end/flambda/flambda_utils.ml[806,30978+21]..[806,30978+26])
                                                      ]
                                                pattern (middle_end/flambda/flambda_utils.ml[806,30978+29]..[806,30978+48])
                                                  Ppat_construct "Prim" (middle_end/flambda/flambda_utils.ml[806,30978+29]..[806,30978+33])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_utils.ml[806,30978+34]..[806,30978+48])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/flambda/flambda_utils.ml[806,30978+35]..[806,30978+40])
                                                          Ppat_var "prim2" (middle_end/flambda/flambda_utils.ml[806,30978+35]..[806,30978+40])
                                                        pattern (middle_end/flambda/flambda_utils.ml[806,30978+42]..[806,30978+47])
                                                          Ppat_var "args2" (middle_end/flambda/flambda_utils.ml[806,30978+42]..[806,30978+47])
                                                      ]
                                              ]
                                            expression (middle_end/flambda/flambda_utils.ml[807,31030+8]..[809,31125+67])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/flambda_utils.ml[807,31030+12]..[807,31030+21])
                                                    Ppat_var "comp_prim" (middle_end/flambda/flambda_utils.ml[807,31030+12]..[807,31030+21])
                                                  expression (middle_end/flambda/flambda_utils.ml[807,31030+24]..[807,31030+50])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_utils.ml[807,31030+24]..[807,31030+38])
                                                      Pexp_ident "Stdlib.compare" (middle_end/flambda/flambda_utils.ml[807,31030+24]..[807,31030+38])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[807,31030+39]..[807,31030+44])
                                                          Pexp_ident "prim1" (middle_end/flambda/flambda_utils.ml[807,31030+39]..[807,31030+44])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[807,31030+45]..[807,31030+50])
                                                          Pexp_ident "prim2" (middle_end/flambda/flambda_utils.ml[807,31030+45]..[807,31030+50])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/flambda_utils.ml[808,31084+8]..[809,31125+67])
                                                Pexp_ifthenelse
                                                expression (middle_end/flambda/flambda_utils.ml[808,31084+11]..[808,31084+25])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/flambda_utils.ml[808,31084+21]..[808,31084+23])
                                                    Pexp_ident "<>" (middle_end/flambda/flambda_utils.ml[808,31084+21]..[808,31084+23])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[808,31084+11]..[808,31084+20])
                                                        Pexp_ident "comp_prim" (middle_end/flambda/flambda_utils.ml[808,31084+11]..[808,31084+20])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[808,31084+24]..[808,31084+25])
                                                        Pexp_constant PConst_int (0,None)
                                                  ]
                                                expression (middle_end/flambda/flambda_utils.ml[808,31084+31]..[808,31084+40])
                                                  Pexp_ident "comp_prim" (middle_end/flambda/flambda_utils.ml[808,31084+31]..[808,31084+40])
                                                Some
                                                  expression (middle_end/flambda/flambda_utils.ml[809,31125+13]..[809,31125+67])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_utils.ml[809,31125+13]..[809,31125+37])
                                                      Pexp_ident "Misc.Stdlib.List.compare" (middle_end/flambda/flambda_utils.ml[809,31125+13]..[809,31125+37])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[809,31125+38]..[809,31125+55])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_utils.ml[809,31125+39]..[809,31125+50])
                                                            Pexp_ident "compare_var" (middle_end/flambda/flambda_utils.ml[809,31125+39]..[809,31125+50])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_utils.ml[809,31125+51]..[809,31125+54])
                                                                Pexp_ident "env" (middle_end/flambda/flambda_utils.ml[809,31125+51]..[809,31125+54])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[809,31125+56]..[809,31125+61])
                                                          Pexp_ident "args1" (middle_end/flambda/flambda_utils.ml[809,31125+56]..[809,31125+61])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[809,31125+62]..[809,31125+67])
                                                          Pexp_ident "args2" (middle_end/flambda/flambda_utils.ml[809,31125+62]..[809,31125+67])
                                                    ]
                                        ]
                                      core_type (middle_end/flambda/flambda_utils.ml[795,30484+58]..[795,30484+61])
                                        Ptyp_constr "int" (middle_end/flambda/flambda_utils.ml[795,30484+58]..[795,30484+61])
                                        []
                          ]
                          expression (middle_end/flambda/flambda_utils.ml[811,31200+4]..[811,31200+41])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_utils.ml[811,31200+4]..[811,31200+16])
                              Pexp_ident "compare_expr" (middle_end/flambda/flambda_utils.ml[811,31200+4]..[811,31200+16])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[811,31200+17]..[811,31200+35])
                                  Pexp_ident "Variable.Map.empty" (middle_end/flambda/flambda_utils.ml[811,31200+17]..[811,31200+35])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[811,31200+36]..[811,31200+38])
                                  Pexp_ident "e1" (middle_end/flambda/flambda_utils.ml[811,31200+36]..[811,31200+38])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[811,31200+39]..[811,31200+41])
                                  Pexp_ident "e2" (middle_end/flambda/flambda_utils.ml[811,31200+39]..[811,31200+41])
                            ]
              ]
          ]
  structure_item (middle_end/flambda/flambda_utils.ml[814,31248+0]..[840,32314+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[814,31248+4]..[814,31248+32])
          Ppat_var "fun_vars_referenced_in_decls" (middle_end/flambda/flambda_utils.ml[814,31248+4]..[814,31248+32])
        expression (middle_end/flambda/flambda_utils.ml[815,31281+6]..[840,32314+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[815,31281+6]..[815,31281+54])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[815,31281+7]..[815,31281+21])
              Ppat_var "function_decls" (middle_end/flambda/flambda_utils.ml[815,31281+7]..[815,31281+21])
            core_type (middle_end/flambda/flambda_utils.ml[815,31281+24]..[815,31281+53])
              Ptyp_constr "Flambda.function_declarations" (middle_end/flambda/flambda_utils.ml[815,31281+24]..[815,31281+53])
              []
          expression (middle_end/flambda/flambda_utils.ml[815,31281+55]..[840,32314+23]) ghost
            Pexp_fun
            Labelled "closure_symbol"
            None
            pattern (middle_end/flambda/flambda_utils.ml[815,31281+56]..[815,31281+70])
              Ppat_var "closure_symbol" (middle_end/flambda/flambda_utils.ml[815,31281+56]..[815,31281+70])
            expression (middle_end/flambda/flambda_utils.ml[816,31354+2]..[840,32314+23])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/flambda_utils.ml[816,31354+6]..[816,31354+14])
                    Ppat_var "fun_vars" (middle_end/flambda/flambda_utils.ml[816,31354+6]..[816,31354+14])
                  expression (middle_end/flambda/flambda_utils.ml[816,31354+17]..[816,31354+54])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[816,31354+17]..[816,31354+34])
                      Pexp_ident "Variable.Map.keys" (middle_end/flambda/flambda_utils.ml[816,31354+17]..[816,31354+34])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[816,31354+35]..[816,31354+54])
                          Pexp_field
                          expression (middle_end/flambda/flambda_utils.ml[816,31354+35]..[816,31354+49])
                            Pexp_ident "function_decls" (middle_end/flambda/flambda_utils.ml[816,31354+35]..[816,31354+49])
                          "funs" (middle_end/flambda/flambda_utils.ml[816,31354+50]..[816,31354+54])
                    ]
              ]
              expression (middle_end/flambda/flambda_utils.ml[817,31412+2]..[840,32314+23])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (middle_end/flambda/flambda_utils.ml[817,31412+6]..[817,31412+25])
                      Ppat_var "symbols_to_fun_vars" (middle_end/flambda/flambda_utils.ml[817,31412+6]..[817,31412+25])
                    expression (middle_end/flambda/flambda_utils.ml[818,31440+4]..[823,31674+22])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_utils.ml[818,31440+4]..[818,31440+21])
                        Pexp_ident "Variable.Set.fold" (middle_end/flambda/flambda_utils.ml[818,31440+4]..[818,31440+21])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[818,31440+22]..[821,31600+58])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/flambda_utils.ml[818,31440+27]..[818,31440+34])
                              Ppat_var "fun_var" (middle_end/flambda/flambda_utils.ml[818,31440+27]..[818,31440+34])
                            expression (middle_end/flambda/flambda_utils.ml[818,31440+35]..[821,31600+57]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/flambda_utils.ml[818,31440+35]..[818,31440+54])
                                Ppat_var "symbols_to_fun_vars" (middle_end/flambda/flambda_utils.ml[818,31440+35]..[818,31440+54])
                              expression (middle_end/flambda/flambda_utils.ml[819,31498+8]..[821,31600+57])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/flambda_utils.ml[819,31498+12]..[819,31498+22])
                                      Ppat_var "closure_id" (middle_end/flambda/flambda_utils.ml[819,31498+12]..[819,31498+22])
                                    expression (middle_end/flambda/flambda_utils.ml[819,31498+25]..[819,31498+48])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[819,31498+25]..[819,31498+40])
                                        Pexp_ident "Closure_id.wrap" (middle_end/flambda/flambda_utils.ml[819,31498+25]..[819,31498+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[819,31498+41]..[819,31498+48])
                                            Pexp_ident "fun_var" (middle_end/flambda/flambda_utils.ml[819,31498+41]..[819,31498+48])
                                      ]
                                ]
                                expression (middle_end/flambda/flambda_utils.ml[820,31550+8]..[821,31600+57])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_utils.ml[820,31550+12]..[820,31550+18])
                                        Ppat_var "symbol" (middle_end/flambda/flambda_utils.ml[820,31550+12]..[820,31550+18])
                                      expression (middle_end/flambda/flambda_utils.ml[820,31550+21]..[820,31550+46])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[820,31550+21]..[820,31550+35])
                                          Pexp_ident "closure_symbol" (middle_end/flambda/flambda_utils.ml[820,31550+21]..[820,31550+35])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[820,31550+36]..[820,31550+46])
                                              Pexp_ident "closure_id" (middle_end/flambda/flambda_utils.ml[820,31550+36]..[820,31550+46])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_utils.ml[821,31600+8]..[821,31600+57])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_utils.ml[821,31600+8]..[821,31600+22])
                                      Pexp_ident "Symbol.Map.add" (middle_end/flambda/flambda_utils.ml[821,31600+8]..[821,31600+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_utils.ml[821,31600+23]..[821,31600+29])
                                          Pexp_ident "symbol" (middle_end/flambda/flambda_utils.ml[821,31600+23]..[821,31600+29])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_utils.ml[821,31600+30]..[821,31600+37])
                                          Pexp_ident "fun_var" (middle_end/flambda/flambda_utils.ml[821,31600+30]..[821,31600+37])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_utils.ml[821,31600+38]..[821,31600+57])
                                          Pexp_ident "symbols_to_fun_vars" (middle_end/flambda/flambda_utils.ml[821,31600+38]..[821,31600+57])
                                    ]
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[822,31659+6]..[822,31659+14])
                            Pexp_ident "fun_vars" (middle_end/flambda/flambda_utils.ml[822,31659+6]..[822,31659+14])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[823,31674+6]..[823,31674+22])
                            Pexp_ident "Symbol.Map.empty" (middle_end/flambda/flambda_utils.ml[823,31674+6]..[823,31674+22])
                      ]
                ]
                expression (middle_end/flambda/flambda_utils.ml[825,31702+2]..[840,32314+23])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[825,31702+2]..[825,31702+18])
                    Pexp_ident "Variable.Map.map" (middle_end/flambda/flambda_utils.ml[825,31702+2]..[825,31702+18])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[825,31702+19]..[839,32260+53])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/flambda_utils.ml[825,31702+24]..[825,31702+66])
                          Ppat_constraint
                          pattern (middle_end/flambda/flambda_utils.ml[825,31702+25]..[825,31702+34])
                            Ppat_var "func_decl" (middle_end/flambda/flambda_utils.ml[825,31702+25]..[825,31702+34])
                          core_type (middle_end/flambda/flambda_utils.ml[825,31702+37]..[825,31702+65])
                            Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/flambda_utils.ml[825,31702+37]..[825,31702+65])
                            []
                        expression (middle_end/flambda/flambda_utils.ml[826,31772+6]..[839,32260+52])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/flambda_utils.ml[826,31772+10]..[826,31772+22])
                                Ppat_var "from_symbols" (middle_end/flambda/flambda_utils.ml[826,31772+10]..[826,31772+22])
                              expression (middle_end/flambda/flambda_utils.ml[827,31797+8]..[834,32125+28])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[827,31797+8]..[827,31797+23])
                                  Pexp_ident "Symbol.Set.fold" (middle_end/flambda/flambda_utils.ml[827,31797+8]..[827,31797+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[827,31797+24]..[832,32042+49])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/flambda_utils.ml[827,31797+29]..[827,31797+35])
                                        Ppat_var "symbol" (middle_end/flambda/flambda_utils.ml[827,31797+29]..[827,31797+35])
                                      expression (middle_end/flambda/flambda_utils.ml[827,31797+36]..[832,32042+48]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/flambda/flambda_utils.ml[827,31797+36]..[827,31797+45])
                                          Ppat_var "fun_vars'" (middle_end/flambda/flambda_utils.ml[827,31797+36]..[827,31797+45])
                                        expression (middle_end/flambda/flambda_utils.ml[828,31846+12]..[832,32042+48])
                                          Pexp_match
                                          expression (middle_end/flambda/flambda_utils.ml[828,31846+18]..[828,31846+60])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[828,31846+18]..[828,31846+33])
                                              Pexp_ident "Symbol.Map.find" (middle_end/flambda/flambda_utils.ml[828,31846+18]..[828,31846+33])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[828,31846+34]..[828,31846+40])
                                                  Pexp_ident "symbol" (middle_end/flambda/flambda_utils.ml[828,31846+34]..[828,31846+40])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[828,31846+41]..[828,31846+60])
                                                  Pexp_ident "symbols_to_fun_vars" (middle_end/flambda/flambda_utils.ml[828,31846+41]..[828,31846+60])
                                            ]
                                          [
                                            <case>
                                              pattern (middle_end/flambda/flambda_utils.ml[829,31912+14]..[829,31912+33])
                                                Ppat_exception
                                                pattern (middle_end/flambda/flambda_utils.ml[829,31912+24]..[829,31912+33])
                                                  Ppat_construct "Not_found" (middle_end/flambda/flambda_utils.ml[829,31912+24]..[829,31912+33])
                                                  None
                                              expression (middle_end/flambda/flambda_utils.ml[829,31912+37]..[829,31912+46])
                                                Pexp_ident "fun_vars'" (middle_end/flambda/flambda_utils.ml[829,31912+37]..[829,31912+46])
                                            <case>
                                              pattern (middle_end/flambda/flambda_utils.ml[830,31959+14]..[830,31959+21])
                                                Ppat_var "fun_var" (middle_end/flambda/flambda_utils.ml[830,31959+14]..[830,31959+21])
                                              expression (middle_end/flambda/flambda_utils.ml[831,31984+14]..[832,32042+48])
                                                Pexp_sequence
                                                expression (middle_end/flambda/flambda_utils.ml[831,31984+14]..[831,31984+56])
                                                  Pexp_assert
                                                  expression (middle_end/flambda/flambda_utils.ml[831,31984+21]..[831,31984+56])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_utils.ml[831,31984+22]..[831,31984+38])
                                                      Pexp_ident "Variable.Set.mem" (middle_end/flambda/flambda_utils.ml[831,31984+22]..[831,31984+38])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[831,31984+39]..[831,31984+46])
                                                          Pexp_ident "fun_var" (middle_end/flambda/flambda_utils.ml[831,31984+39]..[831,31984+46])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_utils.ml[831,31984+47]..[831,31984+55])
                                                          Pexp_ident "fun_vars" (middle_end/flambda/flambda_utils.ml[831,31984+47]..[831,31984+55])
                                                    ]
                                                expression (middle_end/flambda/flambda_utils.ml[832,32042+14]..[832,32042+48])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/flambda_utils.ml[832,32042+14]..[832,32042+30])
                                                    Pexp_ident "Variable.Set.add" (middle_end/flambda/flambda_utils.ml[832,32042+14]..[832,32042+30])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[832,32042+31]..[832,32042+38])
                                                        Pexp_ident "fun_var" (middle_end/flambda/flambda_utils.ml[832,32042+31]..[832,32042+38])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_utils.ml[832,32042+39]..[832,32042+48])
                                                        Pexp_ident "fun_vars'" (middle_end/flambda/flambda_utils.ml[832,32042+39]..[832,32042+48])
                                                  ]
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[833,32092+10]..[833,32092+32])
                                      Pexp_field
                                      expression (middle_end/flambda/flambda_utils.ml[833,32092+10]..[833,32092+19])
                                        Pexp_ident "func_decl" (middle_end/flambda/flambda_utils.ml[833,32092+10]..[833,32092+19])
                                      "free_symbols" (middle_end/flambda/flambda_utils.ml[833,32092+20]..[833,32092+32])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[834,32125+10]..[834,32125+28])
                                      Pexp_ident "Variable.Set.empty" (middle_end/flambda/flambda_utils.ml[834,32125+10]..[834,32125+28])
                                ]
                          ]
                          expression (middle_end/flambda/flambda_utils.ml[836,32163+6]..[839,32260+52])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/flambda_utils.ml[836,32163+10]..[836,32163+24])
                                  Ppat_var "from_variables" (middle_end/flambda/flambda_utils.ml[836,32163+10]..[836,32163+24])
                                expression (middle_end/flambda/flambda_utils.ml[837,32190+8]..[837,32190+60])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_utils.ml[837,32190+8]..[837,32190+26])
                                    Pexp_ident "Variable.Set.inter" (middle_end/flambda/flambda_utils.ml[837,32190+8]..[837,32190+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[837,32190+27]..[837,32190+51])
                                        Pexp_field
                                        expression (middle_end/flambda/flambda_utils.ml[837,32190+27]..[837,32190+36])
                                          Pexp_ident "func_decl" (middle_end/flambda/flambda_utils.ml[837,32190+27]..[837,32190+36])
                                        "free_variables" (middle_end/flambda/flambda_utils.ml[837,32190+37]..[837,32190+51])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[837,32190+52]..[837,32190+60])
                                        Pexp_ident "fun_vars" (middle_end/flambda/flambda_utils.ml[837,32190+52]..[837,32190+60])
                                  ]
                            ]
                            expression (middle_end/flambda/flambda_utils.ml[839,32260+6]..[839,32260+52])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_utils.ml[839,32260+6]..[839,32260+24])
                                Pexp_ident "Variable.Set.union" (middle_end/flambda/flambda_utils.ml[839,32260+6]..[839,32260+24])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_utils.ml[839,32260+25]..[839,32260+37])
                                    Pexp_ident "from_symbols" (middle_end/flambda/flambda_utils.ml[839,32260+25]..[839,32260+37])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_utils.ml[839,32260+38]..[839,32260+52])
                                    Pexp_ident "from_variables" (middle_end/flambda/flambda_utils.ml[839,32260+38]..[839,32260+52])
                              ]
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[840,32314+4]..[840,32314+23])
                        Pexp_field
                        expression (middle_end/flambda/flambda_utils.ml[840,32314+4]..[840,32314+18])
                          Pexp_ident "function_decls" (middle_end/flambda/flambda_utils.ml[840,32314+4]..[840,32314+18])
                        "funs" (middle_end/flambda/flambda_utils.ml[840,32314+19]..[840,32314+23])
                  ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[842,32339+0]..[866,33153+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[842,32339+4]..[842,32339+36])
          Ppat_var "closures_required_by_entry_point" (middle_end/flambda/flambda_utils.ml[842,32339+4]..[842,32339+36])
        expression (middle_end/flambda/flambda_utils.ml[842,32339+37]..[866,33153+6]) ghost
          Pexp_fun
          Labelled "entry_point"
          None
          pattern (middle_end/flambda/flambda_utils.ml[842,32339+39]..[842,32339+65])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[842,32339+39]..[842,32339+50])
              Ppat_var "entry_point" (middle_end/flambda/flambda_utils.ml[842,32339+39]..[842,32339+50])
            core_type (middle_end/flambda/flambda_utils.ml[842,32339+53]..[842,32339+65])
              Ptyp_constr "Closure_id.t" (middle_end/flambda/flambda_utils.ml[842,32339+53]..[842,32339+65])
              []
          expression (middle_end/flambda/flambda_utils.ml[843,32406+6]..[866,33153+6]) ghost
            Pexp_fun
            Labelled "closure_symbol"
            None
            pattern (middle_end/flambda/flambda_utils.ml[843,32406+7]..[843,32406+21])
              Ppat_var "closure_symbol" (middle_end/flambda/flambda_utils.ml[843,32406+7]..[843,32406+21])
            expression (middle_end/flambda/flambda_utils.ml[843,32406+22]..[866,33153+6]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/flambda_utils.ml[843,32406+22]..[843,32406+70])
                Ppat_constraint
                pattern (middle_end/flambda/flambda_utils.ml[843,32406+23]..[843,32406+37])
                  Ppat_var "function_decls" (middle_end/flambda/flambda_utils.ml[843,32406+23]..[843,32406+37])
                core_type (middle_end/flambda/flambda_utils.ml[843,32406+40]..[843,32406+69])
                  Ptyp_constr "Flambda.function_declarations" (middle_end/flambda/flambda_utils.ml[843,32406+40]..[843,32406+69])
                  []
              expression (middle_end/flambda/flambda_utils.ml[844,32479+2]..[866,33153+6])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (middle_end/flambda/flambda_utils.ml[844,32479+6]..[844,32479+18])
                      Ppat_var "dependencies" (middle_end/flambda/flambda_utils.ml[844,32479+6]..[844,32479+18])
                    expression (middle_end/flambda/flambda_utils.ml[845,32500+4]..[845,32500+63])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_utils.ml[845,32500+4]..[845,32500+32])
                        Pexp_ident "fun_vars_referenced_in_decls" (middle_end/flambda/flambda_utils.ml[845,32500+4]..[845,32500+32])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_utils.ml[845,32500+33]..[845,32500+47])
                            Pexp_ident "function_decls" (middle_end/flambda/flambda_utils.ml[845,32500+33]..[845,32500+47])
                        <arg>
                        Labelled "closure_symbol"
                          expression (middle_end/flambda/flambda_utils.ml[845,32500+49]..[845,32500+63])
                            Pexp_ident "closure_symbol" (middle_end/flambda/flambda_utils.ml[845,32500+49]..[845,32500+63])
                      ]
                ]
                expression (middle_end/flambda/flambda_utils.ml[847,32569+2]..[866,33153+6])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/flambda/flambda_utils.ml[847,32569+6]..[847,32569+9])
                        Ppat_var "set" (middle_end/flambda/flambda_utils.ml[847,32569+6]..[847,32569+9])
                      expression (middle_end/flambda/flambda_utils.ml[847,32569+12]..[847,32569+34])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_utils.ml[847,32569+12]..[847,32569+15])
                          Pexp_ident "ref" (middle_end/flambda/flambda_utils.ml[847,32569+12]..[847,32569+15])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[847,32569+16]..[847,32569+34])
                              Pexp_ident "Variable.Set.empty" (middle_end/flambda/flambda_utils.ml[847,32569+16]..[847,32569+34])
                        ]
                  ]
                  expression (middle_end/flambda/flambda_utils.ml[848,32607+2]..[866,33153+6])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/flambda_utils.ml[848,32607+6]..[848,32607+11])
                          Ppat_var "queue" (middle_end/flambda/flambda_utils.ml[848,32607+6]..[848,32607+11])
                        expression (middle_end/flambda/flambda_utils.ml[848,32607+14]..[848,32607+29])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[848,32607+14]..[848,32607+26])
                            Pexp_ident "Queue.create" (middle_end/flambda/flambda_utils.ml[848,32607+14]..[848,32607+26])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[848,32607+27]..[848,32607+29])
                                Pexp_construct "()" (middle_end/flambda/flambda_utils.ml[848,32607+27]..[848,32607+29])
                                None
                          ]
                    ]
                    expression (middle_end/flambda/flambda_utils.ml[849,32640+2]..[866,33153+6])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/flambda_utils.ml[849,32640+6]..[849,32640+9])
                            Ppat_var "add" (middle_end/flambda/flambda_utils.ml[849,32640+6]..[849,32640+9])
                          expression (middle_end/flambda/flambda_utils.ml[849,32640+10]..[853,32765+7]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/flambda_utils.ml[849,32640+10]..[849,32640+11])
                              Ppat_var "v" (middle_end/flambda/flambda_utils.ml[849,32640+10]..[849,32640+11])
                            expression (middle_end/flambda/flambda_utils.ml[850,32654+4]..[853,32765+7])
                              Pexp_ifthenelse
                              expression (middle_end/flambda/flambda_utils.ml[850,32654+7]..[850,32654+36])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[850,32654+7]..[850,32654+10])
                                  Pexp_ident "not" (middle_end/flambda/flambda_utils.ml[850,32654+7]..[850,32654+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[850,32654+11]..[850,32654+36])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[850,32654+12]..[850,32654+28])
                                        Pexp_ident "Variable.Set.mem" (middle_end/flambda/flambda_utils.ml[850,32654+12]..[850,32654+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[850,32654+29]..[850,32654+30])
                                            Pexp_ident "v" (middle_end/flambda/flambda_utils.ml[850,32654+29]..[850,32654+30])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[850,32654+31]..[850,32654+35])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_utils.ml[850,32654+31]..[850,32654+32])
                                              Pexp_ident "!" (middle_end/flambda/flambda_utils.ml[850,32654+31]..[850,32654+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_utils.ml[850,32654+32]..[850,32654+35])
                                                  Pexp_ident "set" (middle_end/flambda/flambda_utils.ml[850,32654+32]..[850,32654+35])
                                            ]
                                      ]
                                ]
                              expression (middle_end/flambda/flambda_utils.ml[850,32654+42]..[853,32765+7])
                                Pexp_sequence
                                expression (middle_end/flambda/flambda_utils.ml[851,32702+6]..[851,32702+36])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_utils.ml[851,32702+10]..[851,32702+12])
                                    Pexp_ident ":=" (middle_end/flambda/flambda_utils.ml[851,32702+10]..[851,32702+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[851,32702+6]..[851,32702+9])
                                        Pexp_ident "set" (middle_end/flambda/flambda_utils.ml[851,32702+6]..[851,32702+9])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[851,32702+13]..[851,32702+36])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[851,32702+13]..[851,32702+29])
                                          Pexp_ident "Variable.Set.add" (middle_end/flambda/flambda_utils.ml[851,32702+13]..[851,32702+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[851,32702+30]..[851,32702+31])
                                              Pexp_ident "v" (middle_end/flambda/flambda_utils.ml[851,32702+30]..[851,32702+31])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[851,32702+32]..[851,32702+36])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_utils.ml[851,32702+32]..[851,32702+33])
                                                Pexp_ident "!" (middle_end/flambda/flambda_utils.ml[851,32702+32]..[851,32702+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_utils.ml[851,32702+33]..[851,32702+36])
                                                    Pexp_ident "set" (middle_end/flambda/flambda_utils.ml[851,32702+33]..[851,32702+36])
                                              ]
                                        ]
                                  ]
                                expression (middle_end/flambda/flambda_utils.ml[852,32740+6]..[852,32740+24])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_utils.ml[852,32740+6]..[852,32740+16])
                                    Pexp_ident "Queue.push" (middle_end/flambda/flambda_utils.ml[852,32740+6]..[852,32740+16])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[852,32740+17]..[852,32740+18])
                                        Pexp_ident "v" (middle_end/flambda/flambda_utils.ml[852,32740+17]..[852,32740+18])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[852,32740+19]..[852,32740+24])
                                        Pexp_ident "queue" (middle_end/flambda/flambda_utils.ml[852,32740+19]..[852,32740+24])
                                  ]
                              None
                      ]
                      expression (middle_end/flambda/flambda_utils.ml[855,32778+2]..[866,33153+6])
                        Pexp_sequence
                        expression (middle_end/flambda/flambda_utils.ml[855,32778+2]..[855,32778+37])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[855,32778+2]..[855,32778+5])
                            Pexp_ident "add" (middle_end/flambda/flambda_utils.ml[855,32778+2]..[855,32778+5])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[855,32778+6]..[855,32778+37])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[855,32778+7]..[855,32778+24])
                                  Pexp_ident "Closure_id.unwrap" (middle_end/flambda/flambda_utils.ml[855,32778+7]..[855,32778+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[855,32778+25]..[855,32778+36])
                                      Pexp_ident "entry_point" (middle_end/flambda/flambda_utils.ml[855,32778+25]..[855,32778+36])
                                ]
                          ]
                        expression (middle_end/flambda/flambda_utils.ml[856,32817+2]..[866,33153+6])
                          Pexp_sequence
                          expression (middle_end/flambda/flambda_utils.ml[856,32817+2]..[865,33145+6])
                            Pexp_while
                            expression (middle_end/flambda/flambda_utils.ml[856,32817+8]..[856,32817+34])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_utils.ml[856,32817+8]..[856,32817+11])
                                Pexp_ident "not" (middle_end/flambda/flambda_utils.ml[856,32817+8]..[856,32817+11])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_utils.ml[856,32817+12]..[856,32817+34])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_utils.ml[856,32817+13]..[856,32817+27])
                                      Pexp_ident "Queue.is_empty" (middle_end/flambda/flambda_utils.ml[856,32817+13]..[856,32817+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_utils.ml[856,32817+28]..[856,32817+33])
                                          Pexp_ident "queue" (middle_end/flambda/flambda_utils.ml[856,32817+28]..[856,32817+33])
                                    ]
                              ]
                            expression (middle_end/flambda/flambda_utils.ml[857,32855+4]..[864,33120+24])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/flambda_utils.ml[857,32855+8]..[857,32855+15])
                                    Ppat_var "fun_var" (middle_end/flambda/flambda_utils.ml[857,32855+8]..[857,32855+15])
                                  expression (middle_end/flambda/flambda_utils.ml[857,32855+18]..[857,32855+33])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_utils.ml[857,32855+18]..[857,32855+27])
                                      Pexp_ident "Queue.pop" (middle_end/flambda/flambda_utils.ml[857,32855+18]..[857,32855+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_utils.ml[857,32855+28]..[857,32855+33])
                                          Pexp_ident "queue" (middle_end/flambda/flambda_utils.ml[857,32855+28]..[857,32855+33])
                                    ]
                              ]
                              expression (middle_end/flambda/flambda_utils.ml[858,32892+4]..[864,33120+24])
                                Pexp_match
                                expression (middle_end/flambda/flambda_utils.ml[858,32892+10]..[858,32892+48])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_utils.ml[858,32892+10]..[858,32892+27])
                                    Pexp_ident "Variable.Map.find" (middle_end/flambda/flambda_utils.ml[858,32892+10]..[858,32892+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[858,32892+28]..[858,32892+35])
                                        Pexp_ident "fun_var" (middle_end/flambda/flambda_utils.ml[858,32892+28]..[858,32892+35])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[858,32892+36]..[858,32892+48])
                                        Pexp_ident "dependencies" (middle_end/flambda/flambda_utils.ml[858,32892+36]..[858,32892+48])
                                  ]
                                [
                                  <case>
                                    pattern (middle_end/flambda/flambda_utils.ml[859,32946+6]..[859,32946+25])
                                      Ppat_exception
                                      pattern (middle_end/flambda/flambda_utils.ml[859,32946+16]..[859,32946+25])
                                        Ppat_construct "Not_found" (middle_end/flambda/flambda_utils.ml[859,32946+16]..[859,32946+25])
                                        None
                                    expression (middle_end/flambda/flambda_utils.ml[859,32946+29]..[859,32946+31])
                                      Pexp_construct "()" (middle_end/flambda/flambda_utils.ml[859,32946+29]..[859,32946+31])
                                      None
                                  <case>
                                    pattern (middle_end/flambda/flambda_utils.ml[860,32978+6]..[860,32978+22])
                                      Ppat_var "fun_dependencies" (middle_end/flambda/flambda_utils.ml[860,32978+6]..[860,32978+22])
                                    expression (middle_end/flambda/flambda_utils.ml[861,33004+6]..[864,33120+24])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_utils.ml[861,33004+6]..[861,33004+23])
                                        Pexp_ident "Variable.Set.iter" (middle_end/flambda/flambda_utils.ml[861,33004+6]..[861,33004+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[861,33004+24]..[863,33099+20])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/flambda/flambda_utils.ml[861,33004+29]..[861,33004+32])
                                              Ppat_var "dep" (middle_end/flambda/flambda_utils.ml[861,33004+29]..[861,33004+32])
                                            expression (middle_end/flambda/flambda_utils.ml[862,33040+10]..[863,33099+19])
                                              Pexp_ifthenelse
                                              expression (middle_end/flambda/flambda_utils.ml[862,33040+13]..[862,33040+53])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_utils.ml[862,33040+13]..[862,33040+29])
                                                  Pexp_ident "Variable.Map.mem" (middle_end/flambda/flambda_utils.ml[862,33040+13]..[862,33040+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[862,33040+30]..[862,33040+33])
                                                      Pexp_ident "dep" (middle_end/flambda/flambda_utils.ml[862,33040+30]..[862,33040+33])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[862,33040+34]..[862,33040+53])
                                                      Pexp_field
                                                      expression (middle_end/flambda/flambda_utils.ml[862,33040+34]..[862,33040+48])
                                                        Pexp_ident "function_decls" (middle_end/flambda/flambda_utils.ml[862,33040+34]..[862,33040+48])
                                                      "funs" (middle_end/flambda/flambda_utils.ml[862,33040+49]..[862,33040+53])
                                                ]
                                              expression (middle_end/flambda/flambda_utils.ml[863,33099+12]..[863,33099+19])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_utils.ml[863,33099+12]..[863,33099+15])
                                                  Pexp_ident "add" (middle_end/flambda/flambda_utils.ml[863,33099+12]..[863,33099+15])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_utils.ml[863,33099+16]..[863,33099+19])
                                                      Pexp_ident "dep" (middle_end/flambda/flambda_utils.ml[863,33099+16]..[863,33099+19])
                                                ]
                                              None
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_utils.ml[864,33120+8]..[864,33120+24])
                                            Pexp_ident "fun_dependencies" (middle_end/flambda/flambda_utils.ml[864,33120+8]..[864,33120+24])
                                      ]
                                ]
                          expression (middle_end/flambda/flambda_utils.ml[866,33153+2]..[866,33153+6])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_utils.ml[866,33153+2]..[866,33153+3])
                              Pexp_ident "!" (middle_end/flambda/flambda_utils.ml[866,33153+2]..[866,33153+3])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_utils.ml[866,33153+3]..[866,33153+6])
                                  Pexp_ident "set" (middle_end/flambda/flambda_utils.ml[866,33153+3]..[866,33153+6])
                            ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[868,33161+0]..[871,33377+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[868,33161+4]..[868,33161+28])
          Ppat_var "all_functions_parameters" (middle_end/flambda/flambda_utils.ml[868,33161+4]..[868,33161+28])
        expression (middle_end/flambda/flambda_utils.ml[868,33161+29]..[871,33377+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[868,33161+29]..[868,33161+77])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[868,33161+30]..[868,33161+44])
              Ppat_var "function_decls" (middle_end/flambda/flambda_utils.ml[868,33161+30]..[868,33161+44])
            core_type (middle_end/flambda/flambda_utils.ml[868,33161+47]..[868,33161+76])
              Ptyp_constr "Flambda.function_declarations" (middle_end/flambda/flambda_utils.ml[868,33161+47]..[868,33161+76])
              []
          expression (middle_end/flambda/flambda_utils.ml[869,33241+2]..[871,33377+42])
            Pexp_apply
            expression (middle_end/flambda/flambda_utils.ml[869,33241+2]..[869,33241+19])
              Pexp_ident "Variable.Map.fold" (middle_end/flambda/flambda_utils.ml[869,33241+2]..[869,33241+19])
            [
              <arg>
              Nolabel
                expression (middle_end/flambda/flambda_utils.ml[869,33241+20]..[870,33319+57])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/flambda_utils.ml[869,33241+25]..[869,33241+26])
                    Ppat_any
                  expression (middle_end/flambda/flambda_utils.ml[869,33241+27]..[870,33319+56]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_utils.ml[869,33241+27]..[869,33241+70])
                      Ppat_constraint
                      pattern (middle_end/flambda/flambda_utils.ml[869,33241+28]..[869,33241+38])
                        Ppat_record Closed
                        [
                          "params" (middle_end/flambda/flambda_utils.ml[869,33241+30]..[869,33241+36]) ghost
                            pattern (middle_end/flambda/flambda_utils.ml[869,33241+30]..[869,33241+36])
                              Ppat_var "params" (middle_end/flambda/flambda_utils.ml[869,33241+30]..[869,33241+36])
                        ]
                      core_type (middle_end/flambda/flambda_utils.ml[869,33241+41]..[869,33241+69])
                        Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/flambda_utils.ml[869,33241+41]..[869,33241+69])
                        []
                    expression (middle_end/flambda/flambda_utils.ml[869,33241+71]..[870,33319+56]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/flambda_utils.ml[869,33241+71]..[869,33241+74])
                        Ppat_var "set" (middle_end/flambda/flambda_utils.ml[869,33241+71]..[869,33241+74])
                      expression (middle_end/flambda/flambda_utils.ml[870,33319+6]..[870,33319+56])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_utils.ml[870,33319+6]..[870,33319+24])
                          Pexp_ident "Variable.Set.union" (middle_end/flambda/flambda_utils.ml[870,33319+6]..[870,33319+24])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[870,33319+25]..[870,33319+28])
                              Pexp_ident "set" (middle_end/flambda/flambda_utils.ml[870,33319+25]..[870,33319+28])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[870,33319+29]..[870,33319+56])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_utils.ml[870,33319+30]..[870,33319+48])
                                Pexp_ident "Parameter.Set.vars" (middle_end/flambda/flambda_utils.ml[870,33319+30]..[870,33319+48])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_utils.ml[870,33319+49]..[870,33319+55])
                                    Pexp_ident "params" (middle_end/flambda/flambda_utils.ml[870,33319+49]..[870,33319+55])
                              ]
                        ]
              <arg>
              Nolabel
                expression (middle_end/flambda/flambda_utils.ml[871,33377+4]..[871,33377+23])
                  Pexp_field
                  expression (middle_end/flambda/flambda_utils.ml[871,33377+4]..[871,33377+18])
                    Pexp_ident "function_decls" (middle_end/flambda/flambda_utils.ml[871,33377+4]..[871,33377+18])
                  "funs" (middle_end/flambda/flambda_utils.ml[871,33377+19]..[871,33377+23])
              <arg>
              Nolabel
                expression (middle_end/flambda/flambda_utils.ml[871,33377+24]..[871,33377+42])
                  Pexp_ident "Variable.Set.empty" (middle_end/flambda/flambda_utils.ml[871,33377+24]..[871,33377+42])
            ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[873,33421+0]..[877,33641+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[873,33421+4]..[873,33421+20])
          Ppat_var "all_free_symbols" (middle_end/flambda/flambda_utils.ml[873,33421+4]..[873,33421+20])
        expression (middle_end/flambda/flambda_utils.ml[873,33421+21]..[877,33641+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[873,33421+21]..[873,33421+69])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[873,33421+22]..[873,33421+36])
              Ppat_var "function_decls" (middle_end/flambda/flambda_utils.ml[873,33421+22]..[873,33421+36])
            core_type (middle_end/flambda/flambda_utils.ml[873,33421+39]..[873,33421+68])
              Ptyp_constr "Flambda.function_declarations" (middle_end/flambda/flambda_utils.ml[873,33421+39]..[873,33421+68])
              []
          expression (middle_end/flambda/flambda_utils.ml[874,33493+2]..[877,33641+40])
            Pexp_apply
            expression (middle_end/flambda/flambda_utils.ml[874,33493+2]..[874,33493+19])
              Pexp_ident "Variable.Map.fold" (middle_end/flambda/flambda_utils.ml[874,33493+2]..[874,33493+19])
            [
              <arg>
              Nolabel
                expression (middle_end/flambda/flambda_utils.ml[874,33493+20]..[876,33585+55])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/flambda_utils.ml[874,33493+25]..[874,33493+26])
                    Ppat_any
                  expression (middle_end/flambda/flambda_utils.ml[874,33493+27]..[876,33585+54]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_utils.ml[874,33493+27]..[874,33493+73])
                      Ppat_constraint
                      pattern (middle_end/flambda/flambda_utils.ml[874,33493+28]..[874,33493+41])
                        Ppat_var "function_decl" (middle_end/flambda/flambda_utils.ml[874,33493+28]..[874,33493+41])
                      core_type (middle_end/flambda/flambda_utils.ml[874,33493+44]..[874,33493+72])
                        Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/flambda_utils.ml[874,33493+44]..[874,33493+72])
                        []
                    expression (middle_end/flambda/flambda_utils.ml[875,33567+10]..[876,33585+54]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/flambda_utils.ml[875,33567+10]..[875,33567+14])
                        Ppat_var "syms" (middle_end/flambda/flambda_utils.ml[875,33567+10]..[875,33567+14])
                      expression (middle_end/flambda/flambda_utils.ml[876,33585+6]..[876,33585+54])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_utils.ml[876,33585+6]..[876,33585+22])
                          Pexp_ident "Symbol.Set.union" (middle_end/flambda/flambda_utils.ml[876,33585+6]..[876,33585+22])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[876,33585+23]..[876,33585+27])
                              Pexp_ident "syms" (middle_end/flambda/flambda_utils.ml[876,33585+23]..[876,33585+27])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[876,33585+28]..[876,33585+54])
                              Pexp_field
                              expression (middle_end/flambda/flambda_utils.ml[876,33585+28]..[876,33585+41])
                                Pexp_ident "function_decl" (middle_end/flambda/flambda_utils.ml[876,33585+28]..[876,33585+41])
                              "free_symbols" (middle_end/flambda/flambda_utils.ml[876,33585+42]..[876,33585+54])
                        ]
              <arg>
              Nolabel
                expression (middle_end/flambda/flambda_utils.ml[877,33641+4]..[877,33641+23])
                  Pexp_field
                  expression (middle_end/flambda/flambda_utils.ml[877,33641+4]..[877,33641+18])
                    Pexp_ident "function_decls" (middle_end/flambda/flambda_utils.ml[877,33641+4]..[877,33641+18])
                  "funs" (middle_end/flambda/flambda_utils.ml[877,33641+19]..[877,33641+23])
              <arg>
              Nolabel
                expression (middle_end/flambda/flambda_utils.ml[877,33641+24]..[877,33641+40])
                  Pexp_ident "Symbol.Set.empty" (middle_end/flambda/flambda_utils.ml[877,33641+24]..[877,33641+40])
            ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[879,33683+0]..[885,33896+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[879,33683+4]..[879,33683+17])
          Ppat_var "contains_stub" (middle_end/flambda/flambda_utils.ml[879,33683+4]..[879,33683+17])
        expression (middle_end/flambda/flambda_utils.ml[879,33683+18]..[885,33896+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[879,33683+18]..[879,33683+61])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[879,33683+19]..[879,33683+28])
              Ppat_var "fun_decls" (middle_end/flambda/flambda_utils.ml[879,33683+19]..[879,33683+28])
            core_type (middle_end/flambda/flambda_utils.ml[879,33683+31]..[879,33683+60])
              Ptyp_constr "Flambda.function_declarations" (middle_end/flambda/flambda_utils.ml[879,33683+31]..[879,33683+60])
              []
          expression (middle_end/flambda/flambda_utils.ml[880,33747+2]..[885,33896+30])
            Pexp_let Nonrec
            [
              <def>
                pattern (middle_end/flambda/flambda_utils.ml[880,33747+6]..[880,33747+30])
                  Ppat_var "number_of_stub_functions" (middle_end/flambda/flambda_utils.ml[880,33747+6]..[880,33747+30])
                expression (middle_end/flambda/flambda_utils.ml[881,33780+4]..[883,33866+24])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_utils.ml[881,33780+4]..[881,33780+25])
                    Pexp_ident "Variable.Map.cardinal" (middle_end/flambda/flambda_utils.ml[881,33780+4]..[881,33780+25])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_utils.ml[882,33806+6]..[883,33866+24])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_utils.ml[882,33806+7]..[882,33806+26])
                          Pexp_ident "Variable.Map.filter" (middle_end/flambda/flambda_utils.ml[882,33806+7]..[882,33806+26])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[882,33806+27]..[882,33806+59])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/flambda_utils.ml[882,33806+32]..[882,33806+33])
                                Ppat_any
                              expression (middle_end/flambda/flambda_utils.ml[882,33806+34]..[882,33806+58]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/flambda_utils.ml[882,33806+34]..[882,33806+50])
                                  Ppat_record Closed
                                  [
                                    "Flambda.stub" (middle_end/flambda/flambda_utils.ml[882,33806+36]..[882,33806+48]) ghost
                                      pattern (middle_end/flambda/flambda_utils.ml[882,33806+36]..[882,33806+48])
                                        Ppat_var "stub" (middle_end/flambda/flambda_utils.ml[882,33806+36]..[882,33806+48])
                                  ]
                                expression (middle_end/flambda/flambda_utils.ml[882,33806+54]..[882,33806+58])
                                  Pexp_ident "stub" (middle_end/flambda/flambda_utils.ml[882,33806+54]..[882,33806+58])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[883,33866+9]..[883,33866+23])
                              Pexp_field
                              expression (middle_end/flambda/flambda_utils.ml[883,33866+9]..[883,33866+18])
                                Pexp_ident "fun_decls" (middle_end/flambda/flambda_utils.ml[883,33866+9]..[883,33866+18])
                              "funs" (middle_end/flambda/flambda_utils.ml[883,33866+19]..[883,33866+23])
                        ]
                  ]
            ]
            expression (middle_end/flambda/flambda_utils.ml[885,33896+2]..[885,33896+30])
              Pexp_apply
              expression (middle_end/flambda/flambda_utils.ml[885,33896+27]..[885,33896+28])
                Pexp_ident ">" (middle_end/flambda/flambda_utils.ml[885,33896+27]..[885,33896+28])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[885,33896+2]..[885,33896+26])
                    Pexp_ident "number_of_stub_functions" (middle_end/flambda/flambda_utils.ml[885,33896+2]..[885,33896+26])
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_utils.ml[885,33896+29]..[885,33896+30])
                    Pexp_constant PConst_int (0,None)
              ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[887,33928+0]..[897,34337+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[887,33928+4]..[887,33928+21])
          Ppat_var "clean_projections" (middle_end/flambda/flambda_utils.ml[887,33928+4]..[887,33928+21])
        expression (middle_end/flambda/flambda_utils.ml[887,33928+22]..[897,34337+19]) ghost
          Pexp_fun
          Labelled "which_variables"
          None
          pattern (middle_end/flambda/flambda_utils.ml[887,33928+23]..[887,33928+38])
            Ppat_var "which_variables" (middle_end/flambda/flambda_utils.ml[887,33928+23]..[887,33928+38])
          expression (middle_end/flambda/flambda_utils.ml[888,33969+2]..[897,34337+19])
            Pexp_apply
            expression (middle_end/flambda/flambda_utils.ml[888,33969+2]..[888,33969+18])
              Pexp_ident "Variable.Map.map" (middle_end/flambda/flambda_utils.ml[888,33969+2]..[888,33969+18])
            [
              <arg>
              Nolabel
                expression (middle_end/flambda/flambda_utils.ml[888,33969+19]..[896,34263+73])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/flambda_utils.ml[888,33969+24]..[888,33969+58])
                    Ppat_constraint
                    pattern (middle_end/flambda/flambda_utils.ml[888,33969+25]..[888,33969+32])
                      Ppat_var "spec_to" (middle_end/flambda/flambda_utils.ml[888,33969+25]..[888,33969+32])
                    core_type (middle_end/flambda/flambda_utils.ml[888,33969+35]..[888,33969+57])
                      Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/flambda_utils.ml[888,33969+35]..[888,33969+57])
                      []
                  expression (middle_end/flambda/flambda_utils.ml[889,34031+6]..[896,34263+72])
                    Pexp_match
                    expression (middle_end/flambda/flambda_utils.ml[889,34031+12]..[889,34031+30])
                      Pexp_field
                      expression (middle_end/flambda/flambda_utils.ml[889,34031+12]..[889,34031+19])
                        Pexp_ident "spec_to" (middle_end/flambda/flambda_utils.ml[889,34031+12]..[889,34031+19])
                      "projection" (middle_end/flambda/flambda_utils.ml[889,34031+20]..[889,34031+30])
                    [
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[890,34067+8]..[890,34067+12])
                          Ppat_construct "None" (middle_end/flambda/flambda_utils.ml[890,34067+8]..[890,34067+12])
                          None
                        expression (middle_end/flambda/flambda_utils.ml[890,34067+16]..[890,34067+23])
                          Pexp_ident "spec_to" (middle_end/flambda/flambda_utils.ml[890,34067+16]..[890,34067+23])
                      <case>
                        pattern (middle_end/flambda/flambda_utils.ml[891,34091+8]..[891,34091+23])
                          Ppat_construct "Some" (middle_end/flambda/flambda_utils.ml[891,34091+8]..[891,34091+12])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_utils.ml[891,34091+13]..[891,34091+23])
                              Ppat_var "projection" (middle_end/flambda/flambda_utils.ml[891,34091+13]..[891,34091+23])
                        expression (middle_end/flambda/flambda_utils.ml[892,34118+8]..[896,34263+72])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/flambda_utils.ml[892,34118+12]..[892,34118+16])
                                Ppat_var "from" (middle_end/flambda/flambda_utils.ml[892,34118+12]..[892,34118+16])
                              expression (middle_end/flambda/flambda_utils.ml[892,34118+19]..[892,34118+56])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_utils.ml[892,34118+19]..[892,34118+45])
                                  Pexp_ident "Projection.projecting_from" (middle_end/flambda/flambda_utils.ml[892,34118+19]..[892,34118+45])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_utils.ml[892,34118+46]..[892,34118+56])
                                      Pexp_ident "projection" (middle_end/flambda/flambda_utils.ml[892,34118+46]..[892,34118+56])
                                ]
                          ]
                          expression (middle_end/flambda/flambda_utils.ml[893,34178+8]..[896,34263+72])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/flambda_utils.ml[893,34178+11]..[893,34178+48])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_utils.ml[893,34178+11]..[893,34178+27])
                                Pexp_ident "Variable.Map.mem" (middle_end/flambda/flambda_utils.ml[893,34178+11]..[893,34178+27])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_utils.ml[893,34178+28]..[893,34178+32])
                                    Pexp_ident "from" (middle_end/flambda/flambda_utils.ml[893,34178+28]..[893,34178+32])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_utils.ml[893,34178+33]..[893,34178+48])
                                    Pexp_ident "which_variables" (middle_end/flambda/flambda_utils.ml[893,34178+33]..[893,34178+48])
                              ]
                            expression (middle_end/flambda/flambda_utils.ml[894,34232+10]..[894,34232+17])
                              Pexp_ident "spec_to" (middle_end/flambda/flambda_utils.ml[894,34232+10]..[894,34232+17])
                            Some
                              expression (middle_end/flambda/flambda_utils.ml[896,34263+10]..[896,34263+72])
                                Pexp_constraint
                                expression (middle_end/flambda/flambda_utils.ml[896,34263+11]..[896,34263+46])
                                  Pexp_record
                                  [
                                    "projection" (middle_end/flambda/flambda_utils.ml[896,34263+26]..[896,34263+36])
                                      expression (middle_end/flambda/flambda_utils.ml[896,34263+39]..[896,34263+43])
                                        Pexp_construct "None" (middle_end/flambda/flambda_utils.ml[896,34263+39]..[896,34263+43])
                                        None
                                  ]
                                  Some
                                    expression (middle_end/flambda/flambda_utils.ml[896,34263+13]..[896,34263+20])
                                      Pexp_ident "spec_to" (middle_end/flambda/flambda_utils.ml[896,34263+13]..[896,34263+20])
                                core_type (middle_end/flambda/flambda_utils.ml[896,34263+49]..[896,34263+71])
                                  Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/flambda_utils.ml[896,34263+49]..[896,34263+71])
                                  []
                    ]
              <arg>
              Nolabel
                expression (middle_end/flambda/flambda_utils.ml[897,34337+4]..[897,34337+19])
                  Pexp_ident "which_variables" (middle_end/flambda/flambda_utils.ml[897,34337+4]..[897,34337+19])
            ]
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[899,34358+0]..[905,34683+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[899,34358+4]..[899,34358+23])
          Ppat_var "projection_to_named" (middle_end/flambda/flambda_utils.ml[899,34358+4]..[899,34358+23])
        expression (middle_end/flambda/flambda_utils.ml[899,34358+24]..[905,34683+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_utils.ml[899,34358+24]..[899,34358+51])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[899,34358+25]..[899,34358+35])
              Ppat_var "projection" (middle_end/flambda/flambda_utils.ml[899,34358+25]..[899,34358+35])
            core_type (middle_end/flambda/flambda_utils.ml[899,34358+38]..[899,34358+50])
              Ptyp_constr "Projection.t" (middle_end/flambda/flambda_utils.ml[899,34358+38]..[899,34358+50])
              []
          expression (middle_end/flambda/flambda_utils.ml[899,34358+52]..[905,34683+52])
            Pexp_constraint
            expression (middle_end/flambda/flambda_utils.ml[900,34428+2]..[905,34683+52])
              Pexp_match
              expression (middle_end/flambda/flambda_utils.ml[900,34428+8]..[900,34428+18])
                Pexp_ident "projection" (middle_end/flambda/flambda_utils.ml[900,34428+8]..[900,34428+18])
              [
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[901,34452+4]..[901,34452+27])
                    Ppat_construct "Project_var" (middle_end/flambda/flambda_utils.ml[901,34452+4]..[901,34452+15])
                    Some
                      []
                      pattern (middle_end/flambda/flambda_utils.ml[901,34452+16]..[901,34452+27])
                        Ppat_var "project_var" (middle_end/flambda/flambda_utils.ml[901,34452+16]..[901,34452+27])
                  expression (middle_end/flambda/flambda_utils.ml[901,34452+31]..[901,34452+54])
                    Pexp_construct "Project_var" (middle_end/flambda/flambda_utils.ml[901,34452+31]..[901,34452+42])
                    Some
                      expression (middle_end/flambda/flambda_utils.ml[901,34452+43]..[901,34452+54])
                        Pexp_ident "project_var" (middle_end/flambda/flambda_utils.ml[901,34452+43]..[901,34452+54])
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[902,34507+4]..[902,34507+35])
                    Ppat_construct "Project_closure" (middle_end/flambda/flambda_utils.ml[902,34507+4]..[902,34507+19])
                    Some
                      []
                      pattern (middle_end/flambda/flambda_utils.ml[902,34507+20]..[902,34507+35])
                        Ppat_var "project_closure" (middle_end/flambda/flambda_utils.ml[902,34507+20]..[902,34507+35])
                  expression (middle_end/flambda/flambda_utils.ml[902,34507+39]..[902,34507+70])
                    Pexp_construct "Project_closure" (middle_end/flambda/flambda_utils.ml[902,34507+39]..[902,34507+54])
                    Some
                      expression (middle_end/flambda/flambda_utils.ml[902,34507+55]..[902,34507+70])
                        Pexp_ident "project_closure" (middle_end/flambda/flambda_utils.ml[902,34507+55]..[902,34507+70])
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[903,34578+4]..[903,34578+36])
                    Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[903,34578+4]..[903,34578+31])
                    Some
                      []
                      pattern (middle_end/flambda/flambda_utils.ml[903,34578+32]..[903,34578+36])
                        Ppat_var "move" (middle_end/flambda/flambda_utils.ml[903,34578+32]..[903,34578+36])
                  expression (middle_end/flambda/flambda_utils.ml[903,34578+40]..[903,34578+72])
                    Pexp_construct "Move_within_set_of_closures" (middle_end/flambda/flambda_utils.ml[903,34578+40]..[903,34578+67])
                    Some
                      expression (middle_end/flambda/flambda_utils.ml[903,34578+68]..[903,34578+72])
                        Pexp_ident "move" (middle_end/flambda/flambda_utils.ml[903,34578+68]..[903,34578+72])
                <case>
                  pattern (middle_end/flambda/flambda_utils.ml[904,34651+4]..[904,34651+28])
                    Ppat_construct "Field" (middle_end/flambda/flambda_utils.ml[904,34651+4]..[904,34651+9])
                    Some
                      []
                      pattern (middle_end/flambda/flambda_utils.ml[904,34651+10]..[904,34651+28])
                        Ppat_tuple
                        [
                          pattern (middle_end/flambda/flambda_utils.ml[904,34651+11]..[904,34651+22])
                            Ppat_var "field_index" (middle_end/flambda/flambda_utils.ml[904,34651+11]..[904,34651+22])
                          pattern (middle_end/flambda/flambda_utils.ml[904,34651+24]..[904,34651+27])
                            Ppat_var "var" (middle_end/flambda/flambda_utils.ml[904,34651+24]..[904,34651+27])
                        ]
                  expression (middle_end/flambda/flambda_utils.ml[905,34683+4]..[905,34683+52])
                    Pexp_construct "Prim" (middle_end/flambda/flambda_utils.ml[905,34683+4]..[905,34683+8])
                    Some
                      expression (middle_end/flambda/flambda_utils.ml[905,34683+9]..[905,34683+52])
                        Pexp_tuple
                        [
                          expression (middle_end/flambda/flambda_utils.ml[905,34683+10]..[905,34683+28])
                            Pexp_construct "Pfield" (middle_end/flambda/flambda_utils.ml[905,34683+10]..[905,34683+16])
                            Some
                              expression (middle_end/flambda/flambda_utils.ml[905,34683+17]..[905,34683+28])
                                Pexp_ident "field_index" (middle_end/flambda/flambda_utils.ml[905,34683+17]..[905,34683+28])
                          expression (middle_end/flambda/flambda_utils.ml[905,34683+30]..[905,34683+35])
                            Pexp_construct "::" (middle_end/flambda/flambda_utils.ml[905,34683+31]..[905,34683+35]) ghost
                            Some
                              expression (middle_end/flambda/flambda_utils.ml[905,34683+31]..[905,34683+35]) ghost
                                Pexp_tuple
                                [
                                  expression (middle_end/flambda/flambda_utils.ml[905,34683+31]..[905,34683+34])
                                    Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[905,34683+31]..[905,34683+34])
                                  expression (middle_end/flambda/flambda_utils.ml[905,34683+34]..[905,34683+35]) ghost
                                    Pexp_construct "[]" (middle_end/flambda/flambda_utils.ml[905,34683+34]..[905,34683+35]) ghost
                                    None
                                ]
                          expression (middle_end/flambda/flambda_utils.ml[905,34683+37]..[905,34683+51])
                            Pexp_ident "Debuginfo.none" (middle_end/flambda/flambda_utils.ml[905,34683+37]..[905,34683+51])
                        ]
              ]
            core_type (middle_end/flambda/flambda_utils.ml[899,34358+54]..[899,34358+67])
              Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_utils.ml[899,34358+54]..[899,34358+67])
              []
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[907,34737+0]..[909,34787+48])
    Pstr_type Rec
    [
      type_declaration "specialised_to_same_as" (middle_end/flambda/flambda_utils.ml[907,34737+5]..[907,34737+27]) (middle_end/flambda/flambda_utils.ml[907,34737+0]..[909,34787+48])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (middle_end/flambda/flambda_utils.ml[908,34767+2]..[908,34767+19])
                "Not_specialised" (middle_end/flambda/flambda_utils.ml[908,34767+4]..[908,34767+19])
                []
                None
              (middle_end/flambda/flambda_utils.ml[909,34787+2]..[909,34787+48])
                "Specialised_and_aliased_to" (middle_end/flambda/flambda_utils.ml[909,34787+4]..[909,34787+30])
                [
                  core_type (middle_end/flambda/flambda_utils.ml[909,34787+34]..[909,34787+48])
                    Ptyp_constr "Variable.Set.t" (middle_end/flambda/flambda_utils.ml[909,34787+34]..[909,34787+48])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (middle_end/flambda/flambda_utils.ml[911,34837+0]..[929,35707+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_utils.ml[911,34837+4]..[911,34837+47])
          Ppat_var "parameters_specialised_to_the_same_variable" (middle_end/flambda/flambda_utils.ml[911,34837+4]..[911,34837+47])
        expression (middle_end/flambda/flambda_utils.ml[912,34885+6]..[929,35707+23]) ghost
          Pexp_fun
          Labelled "function_decls"
          None
          pattern (middle_end/flambda/flambda_utils.ml[912,34885+8]..[912,34885+54])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_utils.ml[912,34885+8]..[912,34885+22])
              Ppat_var "function_decls" (middle_end/flambda/flambda_utils.ml[912,34885+8]..[912,34885+22])
            core_type (middle_end/flambda/flambda_utils.ml[912,34885+25]..[912,34885+54])
              Ptyp_constr "Flambda.function_declarations" (middle_end/flambda/flambda_utils.ml[912,34885+25]..[912,34885+54])
              []
          expression (middle_end/flambda/flambda_utils.ml[913,34941+6]..[929,35707+23]) ghost
            Pexp_fun
            Labelled "specialised_args"
            None
            pattern (middle_end/flambda/flambda_utils.ml[913,34941+8]..[913,34941+64])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_utils.ml[913,34941+8]..[913,34941+24])
                Ppat_var "specialised_args" (middle_end/flambda/flambda_utils.ml[913,34941+8]..[913,34941+24])
              core_type (middle_end/flambda/flambda_utils.ml[913,34941+27]..[913,34941+64])
                Ptyp_constr "Variable.Map.t" (middle_end/flambda/flambda_utils.ml[913,34941+50]..[913,34941+64])
                [
                  core_type (middle_end/flambda/flambda_utils.ml[913,34941+27]..[913,34941+49])
                    Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/flambda_utils.ml[913,34941+27]..[913,34941+49])
                    []
                ]
            expression (middle_end/flambda/flambda_utils.ml[914,35009+2]..[929,35707+23])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/flambda_utils.ml[914,35009+6]..[914,35009+30])
                    Ppat_var "specialised_arg_aliasing" (middle_end/flambda/flambda_utils.ml[914,35009+6]..[914,35009+30])
                  expression (middle_end/flambda/flambda_utils.ml[917,35179+4]..[919,35299+25])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_utils.ml[917,35179+4]..[917,35179+44])
                      Pexp_ident "Variable.Map.transpose_keys_and_data_set" (middle_end/flambda/flambda_utils.ml[917,35179+4]..[917,35179+44])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_utils.ml[918,35224+6]..[919,35299+25])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_utils.ml[918,35224+7]..[918,35224+23])
                            Pexp_ident "Variable.Map.map" (middle_end/flambda/flambda_utils.ml[918,35224+7]..[918,35224+23])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[918,35224+24]..[918,35224+74])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/flambda_utils.ml[918,35224+29]..[918,35224+66])
                                  Ppat_constraint
                                  pattern (middle_end/flambda/flambda_utils.ml[918,35224+30]..[918,35224+40])
                                    Ppat_record Open
                                    [
                                      "var" (middle_end/flambda/flambda_utils.ml[918,35224+32]..[918,35224+35]) ghost
                                        pattern (middle_end/flambda/flambda_utils.ml[918,35224+32]..[918,35224+35])
                                          Ppat_var "var" (middle_end/flambda/flambda_utils.ml[918,35224+32]..[918,35224+35])
                                    ]
                                  core_type (middle_end/flambda/flambda_utils.ml[918,35224+43]..[918,35224+65])
                                    Ptyp_constr "Flambda.specialised_to" (middle_end/flambda/flambda_utils.ml[918,35224+43]..[918,35224+65])
                                    []
                                expression (middle_end/flambda/flambda_utils.ml[918,35224+70]..[918,35224+73])
                                  Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[918,35224+70]..[918,35224+73])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_utils.ml[919,35299+8]..[919,35299+24])
                                Pexp_ident "specialised_args" (middle_end/flambda/flambda_utils.ml[919,35299+8]..[919,35299+24])
                          ]
                    ]
              ]
              expression (middle_end/flambda/flambda_utils.ml[921,35330+2]..[929,35707+23])
                Pexp_apply
                expression (middle_end/flambda/flambda_utils.ml[921,35330+2]..[921,35330+18])
                  Pexp_ident "Variable.Map.map" (middle_end/flambda/flambda_utils.ml[921,35330+2]..[921,35330+18])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_utils.ml[921,35330+19]..[928,35691+15])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/flambda_utils.ml[921,35330+24]..[921,35330+70])
                        Ppat_constraint
                        pattern (middle_end/flambda/flambda_utils.ml[921,35330+25]..[921,35330+38])
                          Ppat_record Open
                          [
                            "params" (middle_end/flambda/flambda_utils.ml[921,35330+27]..[921,35330+33]) ghost
                              pattern (middle_end/flambda/flambda_utils.ml[921,35330+27]..[921,35330+33])
                                Ppat_var "params" (middle_end/flambda/flambda_utils.ml[921,35330+27]..[921,35330+33])
                          ]
                        core_type (middle_end/flambda/flambda_utils.ml[921,35330+41]..[921,35330+69])
                          Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/flambda_utils.ml[921,35330+41]..[921,35330+69])
                          []
                      expression (middle_end/flambda/flambda_utils.ml[922,35404+6]..[928,35691+14])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_utils.ml[922,35404+6]..[922,35404+14])
                          Pexp_ident "List.map" (middle_end/flambda/flambda_utils.ml[922,35404+6]..[922,35404+14])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[922,35404+15]..[927,35627+63])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/flambda_utils.ml[922,35404+20]..[922,35404+25])
                                Ppat_var "param" (middle_end/flambda/flambda_utils.ml[922,35404+20]..[922,35404+25])
                              expression (middle_end/flambda/flambda_utils.ml[923,35433+10]..[927,35627+62])
                                Pexp_match
                                expression (middle_end/flambda/flambda_utils.ml[923,35433+16]..[923,35433+72])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_utils.ml[923,35433+16]..[923,35433+33])
                                    Pexp_ident "Variable.Map.find" (middle_end/flambda/flambda_utils.ml[923,35433+16]..[923,35433+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[923,35433+34]..[923,35433+55])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_utils.ml[923,35433+35]..[923,35433+48])
                                          Pexp_ident "Parameter.var" (middle_end/flambda/flambda_utils.ml[923,35433+35]..[923,35433+48])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_utils.ml[923,35433+49]..[923,35433+54])
                                              Pexp_ident "param" (middle_end/flambda/flambda_utils.ml[923,35433+49]..[923,35433+54])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_utils.ml[923,35433+56]..[923,35433+72])
                                        Pexp_ident "specialised_args" (middle_end/flambda/flambda_utils.ml[923,35433+56]..[923,35433+72])
                                  ]
                                [
                                  <case>
                                    pattern (middle_end/flambda/flambda_utils.ml[924,35511+12]..[924,35511+31])
                                      Ppat_exception
                                      pattern (middle_end/flambda/flambda_utils.ml[924,35511+22]..[924,35511+31])
                                        Ppat_construct "Not_found" (middle_end/flambda/flambda_utils.ml[924,35511+22]..[924,35511+31])
                                        None
                                    expression (middle_end/flambda/flambda_utils.ml[924,35511+35]..[924,35511+50])
                                      Pexp_construct "Not_specialised" (middle_end/flambda/flambda_utils.ml[924,35511+35]..[924,35511+50])
                                      None
                                  <case>
                                    pattern (middle_end/flambda/flambda_utils.ml[925,35562+12]..[925,35562+22])
                                      Ppat_record Open
                                      [
                                        "var" (middle_end/flambda/flambda_utils.ml[925,35562+14]..[925,35562+17]) ghost
                                          pattern (middle_end/flambda/flambda_utils.ml[925,35562+14]..[925,35562+17])
                                            Ppat_var "var" (middle_end/flambda/flambda_utils.ml[925,35562+14]..[925,35562+17])
                                      ]
                                    expression (middle_end/flambda/flambda_utils.ml[926,35588+12]..[927,35627+62])
                                      Pexp_construct "Specialised_and_aliased_to" (middle_end/flambda/flambda_utils.ml[926,35588+12]..[926,35588+38])
                                      Some
                                        expression (middle_end/flambda/flambda_utils.ml[927,35627+14]..[927,35627+62])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_utils.ml[927,35627+15]..[927,35627+32])
                                            Pexp_ident "Variable.Map.find" (middle_end/flambda/flambda_utils.ml[927,35627+15]..[927,35627+32])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[927,35627+33]..[927,35627+36])
                                                Pexp_ident "var" (middle_end/flambda/flambda_utils.ml[927,35627+33]..[927,35627+36])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_utils.ml[927,35627+37]..[927,35627+61])
                                                Pexp_ident "specialised_arg_aliasing" (middle_end/flambda/flambda_utils.ml[927,35627+37]..[927,35627+61])
                                          ]
                                ]
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_utils.ml[928,35691+8]..[928,35691+14])
                              Pexp_ident "params" (middle_end/flambda/flambda_utils.ml[928,35691+8]..[928,35691+14])
                        ]
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_utils.ml[929,35707+4]..[929,35707+23])
                      Pexp_field
                      expression (middle_end/flambda/flambda_utils.ml[929,35707+4]..[929,35707+18])
                        Pexp_ident "function_decls" (middle_end/flambda/flambda_utils.ml[929,35707+4]..[929,35707+18])
                      "funs" (middle_end/flambda/flambda_utils.ml[929,35707+19]..[929,35707+23])
                ]
    ]
]

