[
  signature_item (stdlib/stdlib.mli[16,1079+0]..[26,1558+2])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[16,1079+0]..[26,1558+2])
        Pstr_eval
        expression (stdlib/stdlib.mli[16,1079+0]..[26,1558+2])
          Pexp_constant PConst_string(" The OCaml Standard library.\n\n    This module is automatically opened at the beginning of each\n    compilation. All components of this module can therefore be\n    referred by their short name, without prefixing them by [Stdlib].\n\n    It particular, it provides the basic operations over the built-in\n    types (numbers, booleans, byte sequences, strings, exceptions,\n    references, lists, arrays, input-output channels, ...) and the\n    {{!modules}standard library modules}.\n",(stdlib/stdlib.mli[16,1079+0]..[26,1558+2]),None)
    ]
  signature_item (stdlib/stdlib.mli[28,1562+0]..[28,1562+21])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[28,1562+0]..[28,1562+21])
        Pstr_eval
        expression (stdlib/stdlib.mli[28,1562+0]..[28,1562+21])
          Pexp_constant PConst_string(" {1 Exceptions} ",(stdlib/stdlib.mli[28,1562+0]..[28,1562+21]),None)
    ]
  signature_item (stdlib/stdlib.mli[30,1585+0]..[30,1585+37])
    Psig_value
    value_description "raise" (stdlib/stdlib.mli[30,1585+9]..[30,1585+14]) (stdlib/stdlib.mli[30,1585+0]..[30,1585+37])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[31,1623+0]..[31,1623+38])
            Pstr_eval
            expression (stdlib/stdlib.mli[31,1623+0]..[31,1623+38])
              Pexp_constant PConst_string(" Raise the given exception value ",(stdlib/stdlib.mli[31,1623+0]..[31,1623+38]),None)
        ]
      core_type (stdlib/stdlib.mli[30,1585+17]..[30,1585+26])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[30,1585+17]..[30,1585+20])
          Ptyp_constr "exn" (stdlib/stdlib.mli[30,1585+17]..[30,1585+20])
          []
        core_type (stdlib/stdlib.mli[30,1585+24]..[30,1585+26])
          Ptyp_var a
      [
        "%raise"
      ]
  signature_item (stdlib/stdlib.mli[33,1663+0]..[33,1663+53])
    Psig_value
    value_description "raise_notrace" (stdlib/stdlib.mli[33,1663+9]..[33,1663+22]) (stdlib/stdlib.mli[33,1663+0]..[33,1663+53])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[34,1717+0]..[36,1801+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[34,1717+0]..[36,1801+2])
              Pexp_constant PConst_string(" A faster version [raise] which does not record the backtrace.\n    @since 4.02.0\n",(stdlib/stdlib.mli[34,1717+0]..[36,1801+2]),None)
        ]
      core_type (stdlib/stdlib.mli[33,1663+25]..[33,1663+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[33,1663+25]..[33,1663+28])
          Ptyp_constr "exn" (stdlib/stdlib.mli[33,1663+25]..[33,1663+28])
          []
        core_type (stdlib/stdlib.mli[33,1663+32]..[33,1663+34])
          Ptyp_var a
      [
        "%raise_notrace"
      ]
  signature_item (stdlib/stdlib.mli[38,1805+0]..[38,1805+30])
    Psig_value
    value_description "invalid_arg" (stdlib/stdlib.mli[38,1805+4]..[38,1805+15]) (stdlib/stdlib.mli[38,1805+0]..[38,1805+30])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[39,1836+0]..[39,1836+64])
            Pstr_eval
            expression (stdlib/stdlib.mli[39,1836+0]..[39,1836+64])
              Pexp_constant PConst_string(" Raise exception [Invalid_argument] with the given string. ",(stdlib/stdlib.mli[39,1836+0]..[39,1836+64]),None)
        ]
      core_type (stdlib/stdlib.mli[38,1805+18]..[38,1805+30])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[38,1805+18]..[38,1805+24])
          Ptyp_constr "string" (stdlib/stdlib.mli[38,1805+18]..[38,1805+24])
          []
        core_type (stdlib/stdlib.mli[38,1805+28]..[38,1805+30])
          Ptyp_var a
      []
  signature_item (stdlib/stdlib.mli[41,1902+0]..[41,1902+27])
    Psig_value
    value_description "failwith" (stdlib/stdlib.mli[41,1902+4]..[41,1902+12]) (stdlib/stdlib.mli[41,1902+0]..[41,1902+27])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[42,1930+0]..[42,1930+55])
            Pstr_eval
            expression (stdlib/stdlib.mli[42,1930+0]..[42,1930+55])
              Pexp_constant PConst_string(" Raise exception [Failure] with the given string. ",(stdlib/stdlib.mli[42,1930+0]..[42,1930+55]),None)
        ]
      core_type (stdlib/stdlib.mli[41,1902+15]..[41,1902+27])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[41,1902+15]..[41,1902+21])
          Ptyp_constr "string" (stdlib/stdlib.mli[41,1902+15]..[41,1902+21])
          []
        core_type (stdlib/stdlib.mli[41,1902+25]..[41,1902+27])
          Ptyp_var a
      []
  signature_item (stdlib/stdlib.mli[44,1987+0]..[44,1987+14])
    Psig_exception
    type_exception
      ptyext_constructor =
        extension_constructor (stdlib/stdlib.mli[44,1987+0]..[44,1987+14])
          attribute "ocaml.doc"
            [
              structure_item (stdlib/stdlib.mli[45,2002+0]..[46,2073+41])
                Pstr_eval
                expression (stdlib/stdlib.mli[45,2002+0]..[46,2073+41])
                  Pexp_constant PConst_string(" The [Exit] exception is not raised by any library function.  It is\n    provided for use in your programs. ",(stdlib/stdlib.mli[45,2002+0]..[46,2073+41]),None)
            ]
          pext_name = "Exit"
          pext_kind =
            Pext_decl
              []
              None
  signature_item (stdlib/stdlib.mli[48,2116+0]..[49,2164+34])
    Psig_exception
    type_exception
      ptyext_constructor =
        extension_constructor (stdlib/stdlib.mli[48,2116+0]..[49,2164+34])
          attribute "ocaml.warn_on_literal_pattern"
            []
          attribute "ocaml.doc"
            [
              structure_item (stdlib/stdlib.mli[50,2199+0]..[52,2334+58])
                Pstr_eval
                expression (stdlib/stdlib.mli[50,2199+0]..[52,2334+58])
                  Pexp_constant PConst_string(" Exception raised when none of the cases of a pattern-matching\n   apply. The arguments are the location of the match keyword in the\n   source code (file name, line number, column number). ",(stdlib/stdlib.mli[50,2199+0]..[52,2334+58]),None)
            ]
          pext_name = "Match_failure"
          pext_kind =
            Pext_decl
              [
                core_type (stdlib/stdlib.mli[48,2116+28]..[48,2116+46])
                  Ptyp_tuple
                  [
                    core_type (stdlib/stdlib.mli[48,2116+28]..[48,2116+34])
                      Ptyp_constr "string" (stdlib/stdlib.mli[48,2116+28]..[48,2116+34])
                      []
                    core_type (stdlib/stdlib.mli[48,2116+37]..[48,2116+40])
                      Ptyp_constr "int" (stdlib/stdlib.mli[48,2116+37]..[48,2116+40])
                      []
                    core_type (stdlib/stdlib.mli[48,2116+43]..[48,2116+46])
                      Ptyp_constr "int" (stdlib/stdlib.mli[48,2116+43]..[48,2116+46])
                      []
                  ]
              ]
              None
  signature_item (stdlib/stdlib.mli[54,2394+0]..[55,2443+34])
    Psig_exception
    type_exception
      ptyext_constructor =
        extension_constructor (stdlib/stdlib.mli[54,2394+0]..[55,2443+34])
          attribute "ocaml.warn_on_literal_pattern"
            []
          attribute "ocaml.doc"
            [
              structure_item (stdlib/stdlib.mli[56,2478+0]..[58,2616+29])
                Pstr_eval
                expression (stdlib/stdlib.mli[56,2478+0]..[58,2616+29])
                  Pexp_constant PConst_string(" Exception raised when an assertion fails. The arguments are the\n   location of the assert keyword in the source code (file name, line\n   number, column number). ",(stdlib/stdlib.mli[56,2478+0]..[58,2616+29]),None)
            ]
          pext_name = "Assert_failure"
          pext_kind =
            Pext_decl
              [
                core_type (stdlib/stdlib.mli[54,2394+29]..[54,2394+47])
                  Ptyp_tuple
                  [
                    core_type (stdlib/stdlib.mli[54,2394+29]..[54,2394+35])
                      Ptyp_constr "string" (stdlib/stdlib.mli[54,2394+29]..[54,2394+35])
                      []
                    core_type (stdlib/stdlib.mli[54,2394+38]..[54,2394+41])
                      Ptyp_constr "int" (stdlib/stdlib.mli[54,2394+38]..[54,2394+41])
                      []
                    core_type (stdlib/stdlib.mli[54,2394+44]..[54,2394+47])
                      Ptyp_constr "int" (stdlib/stdlib.mli[54,2394+44]..[54,2394+47])
                      []
                  ]
              ]
              None
  signature_item (stdlib/stdlib.mli[60,2647+0]..[61,2684+34])
    Psig_exception
    type_exception
      ptyext_constructor =
        extension_constructor (stdlib/stdlib.mli[60,2647+0]..[61,2684+34])
          attribute "ocaml.warn_on_literal_pattern"
            []
          attribute "ocaml.doc"
            [
              structure_item (stdlib/stdlib.mli[62,2719+0]..[66,2987+33])
                Pstr_eval
                expression (stdlib/stdlib.mli[62,2719+0]..[66,2987+33])
                  Pexp_constant PConst_string(" Exception raised by library functions to signal that the given\n   arguments do not make sense. The string gives some information to\n   the programmer. As a general rule, this exception should not be\n   caught, it denotes a programming error and the code should be\n   modified not to trigger it. ",(stdlib/stdlib.mli[62,2719+0]..[66,2987+33]),None)
            ]
          pext_name = "Invalid_argument"
          pext_kind =
            Pext_decl
              [
                core_type (stdlib/stdlib.mli[60,2647+30]..[60,2647+36])
                  Ptyp_constr "string" (stdlib/stdlib.mli[60,2647+30]..[60,2647+36])
                  []
              ]
              None
  signature_item (stdlib/stdlib.mli[68,3022+0]..[69,3050+34])
    Psig_exception
    type_exception
      ptyext_constructor =
        extension_constructor (stdlib/stdlib.mli[68,3022+0]..[69,3050+34])
          attribute "ocaml.warn_on_literal_pattern"
            []
          attribute "ocaml.doc"
            [
              structure_item (stdlib/stdlib.mli[70,3085+0]..[74,3353+25])
                Pstr_eval
                expression (stdlib/stdlib.mli[70,3085+0]..[74,3353+25])
                  Pexp_constant PConst_string(" Exception raised by library functions to signal that they are\n   undefined on the given arguments. The string is meant to give some\n   information to the programmer; you must not pattern match on the\n   string literal because it may change in future versions (use\n   Failure _ instead). ",(stdlib/stdlib.mli[70,3085+0]..[74,3353+25]),None)
            ]
          pext_name = "Failure"
          pext_kind =
            Pext_decl
              [
                core_type (stdlib/stdlib.mli[68,3022+21]..[68,3022+27])
                  Ptyp_constr "string" (stdlib/stdlib.mli[68,3022+21]..[68,3022+27])
                  []
              ]
              None
  signature_item (stdlib/stdlib.mli[76,3380+0]..[76,3380+19])
    Psig_exception
    type_exception
      ptyext_constructor =
        extension_constructor (stdlib/stdlib.mli[76,3380+0]..[76,3380+19])
          attribute "ocaml.doc"
            [
              structure_item (stdlib/stdlib.mli[77,3400+0]..[78,3471+19])
                Pstr_eval
                expression (stdlib/stdlib.mli[77,3400+0]..[78,3471+19])
                  Pexp_constant PConst_string(" Exception raised by search functions when the desired object could\n   not be found. ",(stdlib/stdlib.mli[77,3400+0]..[78,3471+19]),None)
            ]
          pext_name = "Not_found"
          pext_kind =
            Pext_decl
              []
              None
  signature_item (stdlib/stdlib.mli[80,3492+0]..[80,3492+23])
    Psig_exception
    type_exception
      ptyext_constructor =
        extension_constructor (stdlib/stdlib.mli[80,3492+0]..[80,3492+23])
          attribute "ocaml.doc"
            [
              structure_item (stdlib/stdlib.mli[81,3516+0]..[83,3646+37])
                Pstr_eval
                expression (stdlib/stdlib.mli[81,3516+0]..[83,3646+37])
                  Pexp_constant PConst_string(" Exception raised by the garbage collector when there is\n   insufficient memory to complete the computation. (Not reliable for\n   allocations on the minor heap.) ",(stdlib/stdlib.mli[81,3516+0]..[83,3646+37]),None)
            ]
          pext_name = "Out_of_memory"
          pext_kind =
            Pext_decl
              []
              None
  signature_item (stdlib/stdlib.mli[85,3685+0]..[85,3685+24])
    Psig_exception
    type_exception
      ptyext_constructor =
        extension_constructor (stdlib/stdlib.mli[85,3685+0]..[85,3685+24])
          attribute "ocaml.doc"
            [
              structure_item (stdlib/stdlib.mli[86,3710+0]..[91,3965+15])
                Pstr_eval
                expression (stdlib/stdlib.mli[86,3710+0]..[91,3965+15])
                  Pexp_constant PConst_string(" Exception raised by the bytecode interpreter when the evaluation\n   stack reaches its maximal size. This often indicates infinite or\n   excessively deep recursion in the user's program.\n\n   Before 4.10, it was not fully implemented by the native-code\n   compiler. ",(stdlib/stdlib.mli[86,3710+0]..[91,3965+15]),None)
            ]
          pext_name = "Stack_overflow"
          pext_kind =
            Pext_decl
              []
              None
  signature_item (stdlib/stdlib.mli[93,3982+0]..[94,4012+34])
    Psig_exception
    type_exception
      ptyext_constructor =
        extension_constructor (stdlib/stdlib.mli[93,3982+0]..[94,4012+34])
          attribute "ocaml.warn_on_literal_pattern"
            []
          attribute "ocaml.doc"
            [
              structure_item (stdlib/stdlib.mli[95,4047+0]..[99,4303+27])
                Pstr_eval
                expression (stdlib/stdlib.mli[95,4047+0]..[99,4303+27])
                  Pexp_constant PConst_string(" Exception raised by the input/output functions to report an\n   operating system error. The string is meant to give some\n   information to the programmer; you must not pattern match on the\n   string literal because it may change in future versions (use\n   Sys_error _ instead). ",(stdlib/stdlib.mli[95,4047+0]..[99,4303+27]),None)
            ]
          pext_name = "Sys_error"
          pext_kind =
            Pext_decl
              [
                core_type (stdlib/stdlib.mli[93,3982+23]..[93,3982+29])
                  Ptyp_constr "string" (stdlib/stdlib.mli[93,3982+23]..[93,3982+29])
                  []
              ]
              None
  signature_item (stdlib/stdlib.mli[101,4332+0]..[101,4332+21])
    Psig_exception
    type_exception
      ptyext_constructor =
        extension_constructor (stdlib/stdlib.mli[101,4332+0]..[101,4332+21])
          attribute "ocaml.doc"
            [
              structure_item (stdlib/stdlib.mli[102,4354+0]..[103,4425+23])
                Pstr_eval
                expression (stdlib/stdlib.mli[102,4354+0]..[103,4425+23])
                  Pexp_constant PConst_string(" Exception raised by input functions to signal that the end of file\n   has been reached. ",(stdlib/stdlib.mli[102,4354+0]..[103,4425+23]),None)
            ]
          pext_name = "End_of_file"
          pext_kind =
            Pext_decl
              []
              None
  signature_item (stdlib/stdlib.mli[105,4450+0]..[105,4450+26])
    Psig_exception
    type_exception
      ptyext_constructor =
        extension_constructor (stdlib/stdlib.mli[105,4450+0]..[105,4450+26])
          attribute "ocaml.doc"
            [
              structure_item (stdlib/stdlib.mli[106,4477+0]..[107,4548+36])
                Pstr_eval
                expression (stdlib/stdlib.mli[106,4477+0]..[107,4548+36])
                  Pexp_constant PConst_string(" Exception raised by integer division and remainder operations when\n   their second argument is zero. ",(stdlib/stdlib.mli[106,4477+0]..[107,4548+36]),None)
            ]
          pext_name = "Division_by_zero"
          pext_kind =
            Pext_decl
              []
              None
  signature_item (stdlib/stdlib.mli[109,4586+0]..[109,4586+24])
    Psig_exception
    type_exception
      ptyext_constructor =
        extension_constructor (stdlib/stdlib.mli[109,4586+0]..[109,4586+24])
          attribute "ocaml.doc"
            [
              structure_item (stdlib/stdlib.mli[110,4611+0]..[111,4679+31])
                Pstr_eval
                expression (stdlib/stdlib.mli[110,4611+0]..[111,4679+31])
                  Pexp_constant PConst_string(" A special case of Sys_error raised when no I/O is possible on a\n   non-blocking I/O channel. ",(stdlib/stdlib.mli[110,4611+0]..[111,4679+31]),None)
            ]
          pext_name = "Sys_blocked_io"
          pext_kind =
            Pext_decl
              []
              None
  signature_item (stdlib/stdlib.mli[113,4712+0]..[114,4773+34])
    Psig_exception
    type_exception
      ptyext_constructor =
        extension_constructor (stdlib/stdlib.mli[113,4712+0]..[114,4773+34])
          attribute "ocaml.warn_on_literal_pattern"
            []
          attribute "ocaml.doc"
            [
              structure_item (stdlib/stdlib.mli[115,4808+0]..[117,4946+62])
                Pstr_eval
                expression (stdlib/stdlib.mli[115,4808+0]..[117,4946+62])
                  Pexp_constant PConst_string(" Exception raised when an ill-founded recursive module definition\n   is evaluated. The arguments are the location of the definition in\n   the source code (file name, line number, column number). ",(stdlib/stdlib.mli[115,4808+0]..[117,4946+62]),None)
            ]
          pext_name = "Undefined_recursive_module"
          pext_kind =
            Pext_decl
              [
                core_type (stdlib/stdlib.mli[113,4712+41]..[113,4712+59])
                  Ptyp_tuple
                  [
                    core_type (stdlib/stdlib.mli[113,4712+41]..[113,4712+47])
                      Ptyp_constr "string" (stdlib/stdlib.mli[113,4712+41]..[113,4712+47])
                      []
                    core_type (stdlib/stdlib.mli[113,4712+50]..[113,4712+53])
                      Ptyp_constr "int" (stdlib/stdlib.mli[113,4712+50]..[113,4712+53])
                      []
                    core_type (stdlib/stdlib.mli[113,4712+56]..[113,4712+59])
                      Ptyp_constr "int" (stdlib/stdlib.mli[113,4712+56]..[113,4712+59])
                      []
                  ]
              ]
              None
  signature_item (stdlib/stdlib.mli[119,5010+0]..[119,5010+22])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[119,5010+0]..[119,5010+22])
        Pstr_eval
        expression (stdlib/stdlib.mli[119,5010+0]..[119,5010+22])
          Pexp_constant PConst_string(" {1 Comparisons} ",(stdlib/stdlib.mli[119,5010+0]..[119,5010+22]),None)
    ]
  signature_item (stdlib/stdlib.mli[121,5034+0]..[121,5034+44])
    Psig_value
    value_description "=" (stdlib/stdlib.mli[121,5034+9]..[121,5034+14]) (stdlib/stdlib.mli[121,5034+0]..[121,5034+44])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[122,5079+0]..[128,5463+77])
            Pstr_eval
            expression (stdlib/stdlib.mli[122,5079+0]..[128,5463+77])
              Pexp_constant PConst_string(" [e1 = e2] tests for structural equality of [e1] and [e2].\n   Mutable structures (e.g. references and arrays) are equal\n   if and only if their current contents are structurally equal,\n   even if the two mutable objects are not the same physical object.\n   Equality between functional values raises [Invalid_argument].\n   Equality between cyclic data structures may not terminate.\n   Left-associative operator, see {!Ocaml_operators} for more information. ",(stdlib/stdlib.mli[122,5079+0]..[128,5463+77]),None)
        ]
      core_type (stdlib/stdlib.mli[121,5034+17]..[121,5034+33])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[121,5034+17]..[121,5034+19])
          Ptyp_var a
        core_type (stdlib/stdlib.mli[121,5034+23]..[121,5034+33])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[121,5034+23]..[121,5034+25])
            Ptyp_var a
          core_type (stdlib/stdlib.mli[121,5034+29]..[121,5034+33])
            Ptyp_constr "bool" (stdlib/stdlib.mli[121,5034+29]..[121,5034+33])
            []
      [
        "%equal"
      ]
  signature_item (stdlib/stdlib.mli[130,5542+0]..[130,5542+48])
    Psig_value
    value_description "<>" (stdlib/stdlib.mli[130,5542+9]..[130,5542+15]) (stdlib/stdlib.mli[130,5542+0]..[130,5542+48])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[131,5591+0]..[133,5700+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[131,5591+0]..[133,5700+2])
              Pexp_constant PConst_string(" Negation of {!Stdlib.( = )}.\n    Left-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[131,5591+0]..[133,5700+2]),None)
        ]
      core_type (stdlib/stdlib.mli[130,5542+18]..[130,5542+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[130,5542+18]..[130,5542+20])
          Ptyp_var a
        core_type (stdlib/stdlib.mli[130,5542+24]..[130,5542+34])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[130,5542+24]..[130,5542+26])
            Ptyp_var a
          core_type (stdlib/stdlib.mli[130,5542+30]..[130,5542+34])
            Ptyp_constr "bool" (stdlib/stdlib.mli[130,5542+30]..[130,5542+34])
            []
      [
        "%notequal"
      ]
  signature_item (stdlib/stdlib.mli[135,5704+0]..[135,5704+47])
    Psig_value
    value_description "<" (stdlib/stdlib.mli[135,5704+9]..[135,5704+14]) (stdlib/stdlib.mli[135,5704+0]..[135,5704+47])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[136,5752+0]..[138,5854+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[136,5752+0]..[138,5854+2])
              Pexp_constant PConst_string(" See {!Stdlib.( >= )}.\n    Left-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[136,5752+0]..[138,5854+2]),None)
        ]
      core_type (stdlib/stdlib.mli[135,5704+17]..[135,5704+33])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[135,5704+17]..[135,5704+19])
          Ptyp_var a
        core_type (stdlib/stdlib.mli[135,5704+23]..[135,5704+33])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[135,5704+23]..[135,5704+25])
            Ptyp_var a
          core_type (stdlib/stdlib.mli[135,5704+29]..[135,5704+33])
            Ptyp_constr "bool" (stdlib/stdlib.mli[135,5704+29]..[135,5704+33])
            []
      [
        "%lessthan"
      ]
  signature_item (stdlib/stdlib.mli[140,5858+0]..[140,5858+50])
    Psig_value
    value_description ">" (stdlib/stdlib.mli[140,5858+9]..[140,5858+14]) (stdlib/stdlib.mli[140,5858+0]..[140,5858+50])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[141,5909+0]..[143,6012+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[141,5909+0]..[143,6012+2])
              Pexp_constant PConst_string(" See {!Stdlib.( >= )}.\n    Left-associative operator,  see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[141,5909+0]..[143,6012+2]),None)
        ]
      core_type (stdlib/stdlib.mli[140,5858+17]..[140,5858+33])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[140,5858+17]..[140,5858+19])
          Ptyp_var a
        core_type (stdlib/stdlib.mli[140,5858+23]..[140,5858+33])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[140,5858+23]..[140,5858+25])
            Ptyp_var a
          core_type (stdlib/stdlib.mli[140,5858+29]..[140,5858+33])
            Ptyp_constr "bool" (stdlib/stdlib.mli[140,5858+29]..[140,5858+33])
            []
      [
        "%greaterthan"
      ]
  signature_item (stdlib/stdlib.mli[145,6016+0]..[145,6016+49])
    Psig_value
    value_description "<=" (stdlib/stdlib.mli[145,6016+9]..[145,6016+15]) (stdlib/stdlib.mli[145,6016+0]..[145,6016+49])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[146,6066+0]..[148,6169+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[146,6066+0]..[148,6169+2])
              Pexp_constant PConst_string(" See {!Stdlib.( >= )}.\n    Left-associative operator,  see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[146,6066+0]..[148,6169+2]),None)
        ]
      core_type (stdlib/stdlib.mli[145,6016+18]..[145,6016+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[145,6016+18]..[145,6016+20])
          Ptyp_var a
        core_type (stdlib/stdlib.mli[145,6016+24]..[145,6016+34])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[145,6016+24]..[145,6016+26])
            Ptyp_var a
          core_type (stdlib/stdlib.mli[145,6016+30]..[145,6016+34])
            Ptyp_constr "bool" (stdlib/stdlib.mli[145,6016+30]..[145,6016+34])
            []
      [
        "%lessequal"
      ]
  signature_item (stdlib/stdlib.mli[150,6173+0]..[150,6173+52])
    Psig_value
    value_description ">=" (stdlib/stdlib.mli[150,6173+9]..[150,6173+15]) (stdlib/stdlib.mli[150,6173+0]..[150,6173+52])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[151,6226+0]..[160,6771+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[151,6226+0]..[160,6771+2])
              Pexp_constant PConst_string(" Structural ordering functions. These functions coincide with\n   the usual orderings over integers, characters, strings, byte sequences\n   and floating-point numbers, and extend them to a\n   total ordering over all types.\n   The ordering is compatible with [( = )]. As in the case\n   of [( = )], mutable structures are compared by contents.\n   Comparison between functional values raises [Invalid_argument].\n   Comparison between cyclic structures may not terminate.\n   Left-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[151,6226+0]..[160,6771+2]),None)
        ]
      core_type (stdlib/stdlib.mli[150,6173+18]..[150,6173+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[150,6173+18]..[150,6173+20])
          Ptyp_var a
        core_type (stdlib/stdlib.mli[150,6173+24]..[150,6173+34])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[150,6173+24]..[150,6173+26])
            Ptyp_var a
          core_type (stdlib/stdlib.mli[150,6173+30]..[150,6173+34])
            Ptyp_constr "bool" (stdlib/stdlib.mli[150,6173+30]..[150,6173+34])
            []
      [
        "%greaterequal"
      ]
  signature_item (stdlib/stdlib.mli[162,6775+0]..[162,6775+47])
    Psig_value
    value_description "compare" (stdlib/stdlib.mli[162,6775+9]..[162,6775+16]) (stdlib/stdlib.mli[162,6775+0]..[162,6775+47])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[163,6823+0]..[179,7729+51])
            Pstr_eval
            expression (stdlib/stdlib.mli[163,6823+0]..[179,7729+51])
              Pexp_constant PConst_string(" [compare x y] returns [0] if [x] is equal to [y],\n   a negative integer if [x] is less than [y], and a positive integer\n   if [x] is greater than [y].  The ordering implemented by [compare]\n   is compatible with the comparison predicates [=], [<] and [>]\n   defined above,  with one difference on the treatment of the float value\n   {!Stdlib.nan}.  Namely, the comparison predicates treat [nan]\n   as different from any other float value, including itself;\n   while [compare] treats [nan] as equal to itself and less than any\n   other float value.  This treatment of [nan] ensures that [compare]\n   defines a total ordering relation.\n\n   [compare] applied to functional values may raise [Invalid_argument].\n   [compare] applied to cyclic structures may not terminate.\n\n   The [compare] function can be used as the comparison function\n   required by the {!Set.Make} and {!Map.Make} functors, as well as\n   the {!List.sort} and {!Array.sort} functions. ",(stdlib/stdlib.mli[163,6823+0]..[179,7729+51]),None)
        ]
      core_type (stdlib/stdlib.mli[162,6775+19]..[162,6775+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[162,6775+19]..[162,6775+21])
          Ptyp_var a
        core_type (stdlib/stdlib.mli[162,6775+25]..[162,6775+34])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[162,6775+25]..[162,6775+27])
            Ptyp_var a
          core_type (stdlib/stdlib.mli[162,6775+31]..[162,6775+34])
            Ptyp_constr "int" (stdlib/stdlib.mli[162,6775+31]..[162,6775+34])
            []
      [
        "%compare"
      ]
  signature_item (stdlib/stdlib.mli[181,7782+0]..[181,7782+24])
    Psig_value
    value_description "min" (stdlib/stdlib.mli[181,7782+4]..[181,7782+7]) (stdlib/stdlib.mli[181,7782+0]..[181,7782+24])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[182,7807+0]..[184,7915+29])
            Pstr_eval
            expression (stdlib/stdlib.mli[182,7807+0]..[184,7915+29])
              Pexp_constant PConst_string(" Return the smaller of the two arguments.\n    The result is unspecified if one of the arguments contains\n    the float value [nan]. ",(stdlib/stdlib.mli[182,7807+0]..[184,7915+29]),None)
        ]
      core_type (stdlib/stdlib.mli[181,7782+10]..[181,7782+24])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[181,7782+10]..[181,7782+12])
          Ptyp_var a
        core_type (stdlib/stdlib.mli[181,7782+16]..[181,7782+24])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[181,7782+16]..[181,7782+18])
            Ptyp_var a
          core_type (stdlib/stdlib.mli[181,7782+22]..[181,7782+24])
            Ptyp_var a
      []
  signature_item (stdlib/stdlib.mli[186,7946+0]..[186,7946+24])
    Psig_value
    value_description "max" (stdlib/stdlib.mli[186,7946+4]..[186,7946+7]) (stdlib/stdlib.mli[186,7946+0]..[186,7946+24])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[187,7971+0]..[189,8079+29])
            Pstr_eval
            expression (stdlib/stdlib.mli[187,7971+0]..[189,8079+29])
              Pexp_constant PConst_string(" Return the greater of the two arguments.\n    The result is unspecified if one of the arguments contains\n    the float value [nan]. ",(stdlib/stdlib.mli[187,7971+0]..[189,8079+29]),None)
        ]
      core_type (stdlib/stdlib.mli[186,7946+10]..[186,7946+24])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[186,7946+10]..[186,7946+12])
          Ptyp_var a
        core_type (stdlib/stdlib.mli[186,7946+16]..[186,7946+24])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[186,7946+16]..[186,7946+18])
            Ptyp_var a
          core_type (stdlib/stdlib.mli[186,7946+22]..[186,7946+24])
            Ptyp_var a
      []
  signature_item (stdlib/stdlib.mli[191,8110+0]..[191,8110+42])
    Psig_value
    value_description "==" (stdlib/stdlib.mli[191,8110+9]..[191,8110+15]) (stdlib/stdlib.mli[191,8110+0]..[191,8110+42])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[192,8153+0]..[201,8675+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[192,8153+0]..[201,8675+2])
              Pexp_constant PConst_string(" [e1 == e2] tests for physical equality of [e1] and [e2].\n   On mutable types such as references, arrays, byte sequences, records with\n   mutable fields and objects with mutable instance variables,\n   [e1 == e2] is true if and only if physical modification of [e1]\n   also affects [e2].\n   On non-mutable types, the behavior of [( == )] is\n   implementation-dependent; however, it is guaranteed that\n   [e1 == e2] implies [compare e1 e2 = 0].\n   Left-associative operator,  see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[192,8153+0]..[201,8675+2]),None)
        ]
      core_type (stdlib/stdlib.mli[191,8110+18]..[191,8110+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[191,8110+18]..[191,8110+20])
          Ptyp_var a
        core_type (stdlib/stdlib.mli[191,8110+24]..[191,8110+34])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[191,8110+24]..[191,8110+26])
            Ptyp_var a
          core_type (stdlib/stdlib.mli[191,8110+30]..[191,8110+34])
            Ptyp_constr "bool" (stdlib/stdlib.mli[191,8110+30]..[191,8110+34])
            []
      [
        "%eq"
      ]
  signature_item (stdlib/stdlib.mli[203,8679+0]..[203,8679+45])
    Psig_value
    value_description "!=" (stdlib/stdlib.mli[203,8679+9]..[203,8679+15]) (stdlib/stdlib.mli[203,8679+0]..[203,8679+45])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[204,8725+0]..[206,8836+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[204,8725+0]..[206,8836+2])
              Pexp_constant PConst_string(" Negation of {!Stdlib.( == )}.\n    Left-associative operator,  see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[204,8725+0]..[206,8836+2]),None)
        ]
      core_type (stdlib/stdlib.mli[203,8679+18]..[203,8679+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[203,8679+18]..[203,8679+20])
          Ptyp_var a
        core_type (stdlib/stdlib.mli[203,8679+24]..[203,8679+34])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[203,8679+24]..[203,8679+26])
            Ptyp_var a
          core_type (stdlib/stdlib.mli[203,8679+30]..[203,8679+34])
            Ptyp_constr "bool" (stdlib/stdlib.mli[203,8679+30]..[203,8679+34])
            []
      [
        "%noteq"
      ]
  signature_item (stdlib/stdlib.mli[209,8841+0]..[209,8841+29])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[209,8841+0]..[209,8841+29])
        Pstr_eval
        expression (stdlib/stdlib.mli[209,8841+0]..[209,8841+29])
          Pexp_constant PConst_string(" {1 Boolean operations} ",(stdlib/stdlib.mli[209,8841+0]..[209,8841+29]),None)
    ]
  signature_item (stdlib/stdlib.mli[211,8872+0]..[211,8872+40])
    Psig_value
    value_description "not" (stdlib/stdlib.mli[211,8872+9]..[211,8872+12]) (stdlib/stdlib.mli[211,8872+0]..[211,8872+40])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[212,8913+0]..[212,8913+28])
            Pstr_eval
            expression (stdlib/stdlib.mli[212,8913+0]..[212,8913+28])
              Pexp_constant PConst_string(" The boolean negation. ",(stdlib/stdlib.mli[212,8913+0]..[212,8913+28]),None)
        ]
      core_type (stdlib/stdlib.mli[211,8872+15]..[211,8872+27])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[211,8872+15]..[211,8872+19])
          Ptyp_constr "bool" (stdlib/stdlib.mli[211,8872+15]..[211,8872+19])
          []
        core_type (stdlib/stdlib.mli[211,8872+23]..[211,8872+27])
          Ptyp_constr "bool" (stdlib/stdlib.mli[211,8872+23]..[211,8872+27])
          []
      [
        "%boolnot"
      ]
  signature_item (stdlib/stdlib.mli[214,8943+0]..[214,8943+51])
    Psig_value
    value_description "&&" (stdlib/stdlib.mli[214,8943+9]..[214,8943+15]) (stdlib/stdlib.mli[214,8943+0]..[214,8943+51])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[215,8995+0]..[219,9239+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[215,8995+0]..[219,9239+2])
              Pexp_constant PConst_string(" The boolean 'and'. Evaluation is sequential, left-to-right:\n   in [e1 && e2], [e1] is evaluated first, and if it returns [false],\n   [e2] is not evaluated at all.\n   Right-associative operator,  see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[215,8995+0]..[219,9239+2]),None)
        ]
      core_type (stdlib/stdlib.mli[214,8943+18]..[214,8943+38])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[214,8943+18]..[214,8943+22])
          Ptyp_constr "bool" (stdlib/stdlib.mli[214,8943+18]..[214,8943+22])
          []
        core_type (stdlib/stdlib.mli[214,8943+26]..[214,8943+38])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[214,8943+26]..[214,8943+30])
            Ptyp_constr "bool" (stdlib/stdlib.mli[214,8943+26]..[214,8943+30])
            []
          core_type (stdlib/stdlib.mli[214,8943+34]..[214,8943+38])
            Ptyp_constr "bool" (stdlib/stdlib.mli[214,8943+34]..[214,8943+38])
            []
      [
        "%sequand"
      ]
  signature_item (stdlib/stdlib.mli[221,9243+0]..[222,9294+42])
    Psig_value
    value_description "&" (stdlib/stdlib.mli[221,9243+9]..[221,9243+14]) (stdlib/stdlib.mli[221,9243+0]..[222,9294+42])
      attribute "ocaml.deprecated"
        [
          structure_item (stdlib/stdlib.mli[222,9294+22]..[222,9294+41])
            Pstr_eval
            expression (stdlib/stdlib.mli[222,9294+22]..[222,9294+41])
              Pexp_constant PConst_string("Use (&&) instead.",(stdlib/stdlib.mli[222,9294+23]..[222,9294+40]),None)
        ]
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[223,9337+0]..[225,9471+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[223,9337+0]..[225,9471+2])
              Pexp_constant PConst_string(" @deprecated {!Stdlib.( && )} should be used instead.\n    Right-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[223,9337+0]..[225,9471+2]),None)
        ]
      core_type (stdlib/stdlib.mli[221,9243+17]..[221,9243+37])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[221,9243+17]..[221,9243+21])
          Ptyp_constr "bool" (stdlib/stdlib.mli[221,9243+17]..[221,9243+21])
          []
        core_type (stdlib/stdlib.mli[221,9243+25]..[221,9243+37])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[221,9243+25]..[221,9243+29])
            Ptyp_constr "bool" (stdlib/stdlib.mli[221,9243+25]..[221,9243+29])
            []
          core_type (stdlib/stdlib.mli[221,9243+33]..[221,9243+37])
            Ptyp_constr "bool" (stdlib/stdlib.mli[221,9243+33]..[221,9243+37])
            []
      [
        "%sequand"
      ]
  signature_item (stdlib/stdlib.mli[227,9475+0]..[227,9475+50])
    Psig_value
    value_description "||" (stdlib/stdlib.mli[227,9475+9]..[227,9475+15]) (stdlib/stdlib.mli[227,9475+0]..[227,9475+50])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[228,9526+0]..[232,9768+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[228,9526+0]..[232,9768+2])
              Pexp_constant PConst_string(" The boolean 'or'. Evaluation is sequential, left-to-right:\n   in [e1 || e2], [e1] is evaluated first, and if it returns [true],\n   [e2] is not evaluated at all.\n   Right-associative operator,  see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[228,9526+0]..[232,9768+2]),None)
        ]
      core_type (stdlib/stdlib.mli[227,9475+18]..[227,9475+38])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[227,9475+18]..[227,9475+22])
          Ptyp_constr "bool" (stdlib/stdlib.mli[227,9475+18]..[227,9475+22])
          []
        core_type (stdlib/stdlib.mli[227,9475+26]..[227,9475+38])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[227,9475+26]..[227,9475+30])
            Ptyp_constr "bool" (stdlib/stdlib.mli[227,9475+26]..[227,9475+30])
            []
          core_type (stdlib/stdlib.mli[227,9475+34]..[227,9475+38])
            Ptyp_constr "bool" (stdlib/stdlib.mli[227,9475+34]..[227,9475+38])
            []
      [
        "%sequor"
      ]
  signature_item (stdlib/stdlib.mli[234,9772+0]..[235,9823+42])
    Psig_value
    value_description "or" (stdlib/stdlib.mli[234,9772+9]..[234,9772+15]) (stdlib/stdlib.mli[234,9772+0]..[235,9823+42])
      attribute "ocaml.deprecated"
        [
          structure_item (stdlib/stdlib.mli[235,9823+22]..[235,9823+41])
            Pstr_eval
            expression (stdlib/stdlib.mli[235,9823+22]..[235,9823+41])
              Pexp_constant PConst_string("Use (||) instead.",(stdlib/stdlib.mli[235,9823+23]..[235,9823+40]),None)
        ]
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[236,9866+0]..[238,10000+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[236,9866+0]..[238,10000+2])
              Pexp_constant PConst_string(" @deprecated {!Stdlib.( || )} should be used instead.\n    Right-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[236,9866+0]..[238,10000+2]),None)
        ]
      core_type (stdlib/stdlib.mli[234,9772+18]..[234,9772+38])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[234,9772+18]..[234,9772+22])
          Ptyp_constr "bool" (stdlib/stdlib.mli[234,9772+18]..[234,9772+22])
          []
        core_type (stdlib/stdlib.mli[234,9772+26]..[234,9772+38])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[234,9772+26]..[234,9772+30])
            Ptyp_constr "bool" (stdlib/stdlib.mli[234,9772+26]..[234,9772+30])
            []
          core_type (stdlib/stdlib.mli[234,9772+34]..[234,9772+38])
            Ptyp_constr "bool" (stdlib/stdlib.mli[234,9772+34]..[234,9772+38])
            []
      [
        "%sequor"
      ]
  signature_item (stdlib/stdlib.mli[240,10004+0]..[240,10004+20])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[240,10004+0]..[240,10004+20])
        Pstr_eval
        expression (stdlib/stdlib.mli[240,10004+0]..[240,10004+20])
          Pexp_constant PConst_string(" {1 Debugging} ",(stdlib/stdlib.mli[240,10004+0]..[240,10004+20]),None)
    ]
  signature_item (stdlib/stdlib.mli[242,10026+0]..[242,10026+38])
    Psig_value
    value_description "__LOC__" (stdlib/stdlib.mli[242,10026+9]..[242,10026+16]) (stdlib/stdlib.mli[242,10026+0]..[242,10026+38])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[243,10065+0]..[247,10290+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[243,10065+0]..[247,10290+2])
              Pexp_constant PConst_string(" [__LOC__] returns the location at which this expression appears in\n    the file currently being parsed by the compiler, with the standard\n    error format of OCaml: \"File %S, line %d, characters %d-%d\".\n    @since 4.02.0\n",(stdlib/stdlib.mli[243,10065+0]..[247,10290+2]),None)
        ]
      core_type (stdlib/stdlib.mli[242,10026+19]..[242,10026+25])
        Ptyp_constr "string" (stdlib/stdlib.mli[242,10026+19]..[242,10026+25])
        []
      [
        "%loc_LOC"
      ]
  signature_item (stdlib/stdlib.mli[249,10294+0]..[249,10294+40])
    Psig_value
    value_description "__FILE__" (stdlib/stdlib.mli[249,10294+9]..[249,10294+17]) (stdlib/stdlib.mli[249,10294+0]..[249,10294+40])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[250,10335+0]..[253,10441+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[250,10335+0]..[253,10441+2])
              Pexp_constant PConst_string(" [__FILE__] returns the name of the file currently being\n    parsed by the compiler.\n    @since 4.02.0\n",(stdlib/stdlib.mli[250,10335+0]..[253,10441+2]),None)
        ]
      core_type (stdlib/stdlib.mli[249,10294+20]..[249,10294+26])
        Ptyp_constr "string" (stdlib/stdlib.mli[249,10294+20]..[249,10294+26])
        []
      [
        "%loc_FILE"
      ]
  signature_item (stdlib/stdlib.mli[255,10445+0]..[255,10445+37])
    Psig_value
    value_description "__LINE__" (stdlib/stdlib.mli[255,10445+9]..[255,10445+17]) (stdlib/stdlib.mli[255,10445+0]..[255,10445+37])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[256,10483+0]..[259,10629+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[256,10483+0]..[259,10629+2])
              Pexp_constant PConst_string(" [__LINE__] returns the line number at which this expression\n    appears in the file currently being parsed by the compiler.\n    @since 4.02.0\n",(stdlib/stdlib.mli[256,10483+0]..[259,10629+2]),None)
        ]
      core_type (stdlib/stdlib.mli[255,10445+20]..[255,10445+23])
        Ptyp_constr "int" (stdlib/stdlib.mli[255,10445+20]..[255,10445+23])
        []
      [
        "%loc_LINE"
      ]
  signature_item (stdlib/stdlib.mli[261,10633+0]..[261,10633+44])
    Psig_value
    value_description "__MODULE__" (stdlib/stdlib.mli[261,10633+9]..[261,10633+19]) (stdlib/stdlib.mli[261,10633+0]..[261,10633+44])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[262,10678+0]..[265,10783+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[262,10678+0]..[265,10783+2])
              Pexp_constant PConst_string(" [__MODULE__] returns the module name of the file being\n    parsed by the compiler.\n    @since 4.02.0\n",(stdlib/stdlib.mli[262,10678+0]..[265,10783+2]),None)
        ]
      core_type (stdlib/stdlib.mli[261,10633+22]..[261,10633+28])
        Ptyp_constr "string" (stdlib/stdlib.mli[261,10633+22]..[261,10633+28])
        []
      [
        "%loc_MODULE"
      ]
  signature_item (stdlib/stdlib.mli[267,10787+0]..[267,10787+56])
    Psig_value
    value_description "__POS__" (stdlib/stdlib.mli[267,10787+9]..[267,10787+16]) (stdlib/stdlib.mli[267,10787+0]..[267,10787+56])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[268,10844+0]..[274,11198+3])
            Pstr_eval
            expression (stdlib/stdlib.mli[268,10844+0]..[274,11198+3])
              Pexp_constant PConst_string(" [__POS__] returns a tuple [(file,lnum,cnum,enum)], corresponding\n    to the location at which this expression appears in the file\n    currently being parsed by the compiler. [file] is the current\n    filename, [lnum] the line number, [cnum] the character position in\n    the line and [enum] the last character position in the line.\n    @since 4.02.0\n ",(stdlib/stdlib.mli[268,10844+0]..[274,11198+3]),None)
        ]
      core_type (stdlib/stdlib.mli[267,10787+19]..[267,10787+43])
        Ptyp_tuple
        [
          core_type (stdlib/stdlib.mli[267,10787+19]..[267,10787+25])
            Ptyp_constr "string" (stdlib/stdlib.mli[267,10787+19]..[267,10787+25])
            []
          core_type (stdlib/stdlib.mli[267,10787+28]..[267,10787+31])
            Ptyp_constr "int" (stdlib/stdlib.mli[267,10787+28]..[267,10787+31])
            []
          core_type (stdlib/stdlib.mli[267,10787+34]..[267,10787+37])
            Ptyp_constr "int" (stdlib/stdlib.mli[267,10787+34]..[267,10787+37])
            []
          core_type (stdlib/stdlib.mli[267,10787+40]..[267,10787+43])
            Ptyp_constr "int" (stdlib/stdlib.mli[267,10787+40]..[267,10787+43])
            []
        ]
      [
        "%loc_POS"
      ]
  signature_item (stdlib/stdlib.mli[276,11203+0]..[276,11203+48])
    Psig_value
    value_description "__FUNCTION__" (stdlib/stdlib.mli[276,11203+9]..[276,11203+21]) (stdlib/stdlib.mli[276,11203+0]..[276,11203+48])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[277,11252+0]..[280,11372+20])
            Pstr_eval
            expression (stdlib/stdlib.mli[277,11252+0]..[280,11372+20])
              Pexp_constant PConst_string(" [__FUNCTION__] returns the name of the current function or method, including\n    any enclosing modules or classes.\n\n    @since 4.12.0 ",(stdlib/stdlib.mli[277,11252+0]..[280,11372+20]),None)
        ]
      core_type (stdlib/stdlib.mli[276,11203+24]..[276,11203+30])
        Ptyp_constr "string" (stdlib/stdlib.mli[276,11203+24]..[276,11203+30])
        []
      [
        "%loc_FUNCTION"
      ]
  signature_item (stdlib/stdlib.mli[282,11394+0]..[282,11394+52])
    Psig_value
    value_description "__LOC_OF__" (stdlib/stdlib.mli[282,11394+9]..[282,11394+19]) (stdlib/stdlib.mli[282,11394+0]..[282,11394+52])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[283,11447+0]..[288,11697+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[283,11447+0]..[288,11697+2])
              Pexp_constant PConst_string(" [__LOC_OF__ expr] returns a pair [(loc, expr)] where [loc] is the\n    location of [expr] in the file currently being parsed by the\n    compiler, with the standard error format of OCaml: \"File %S, line\n    %d, characters %d-%d\".\n    @since 4.02.0\n",(stdlib/stdlib.mli[283,11447+0]..[288,11697+2]),None)
        ]
      core_type (stdlib/stdlib.mli[282,11394+22]..[282,11394+39])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[282,11394+22]..[282,11394+24])
          Ptyp_var a
        core_type (stdlib/stdlib.mli[282,11394+28]..[282,11394+39])
          Ptyp_tuple
          [
            core_type (stdlib/stdlib.mli[282,11394+28]..[282,11394+34])
              Ptyp_constr "string" (stdlib/stdlib.mli[282,11394+28]..[282,11394+34])
              []
            core_type (stdlib/stdlib.mli[282,11394+37]..[282,11394+39])
              Ptyp_var a
          ]
      [
        "%loc_LOC"
      ]
  signature_item (stdlib/stdlib.mli[290,11701+0]..[290,11701+51])
    Psig_value
    value_description "__LINE_OF__" (stdlib/stdlib.mli[290,11701+9]..[290,11701+20]) (stdlib/stdlib.mli[290,11701+0]..[290,11701+51])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[291,11753+0]..[295,11956+3])
            Pstr_eval
            expression (stdlib/stdlib.mli[291,11753+0]..[295,11956+3])
              Pexp_constant PConst_string(" [__LINE_OF__ expr] returns a pair [(line, expr)], where [line] is the\n    line number at which the expression [expr] appears in the file\n    currently being parsed by the compiler.\n    @since 4.02.0\n ",(stdlib/stdlib.mli[291,11753+0]..[295,11956+3]),None)
        ]
      core_type (stdlib/stdlib.mli[290,11701+23]..[290,11701+37])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[290,11701+23]..[290,11701+25])
          Ptyp_var a
        core_type (stdlib/stdlib.mli[290,11701+29]..[290,11701+37])
          Ptyp_tuple
          [
            core_type (stdlib/stdlib.mli[290,11701+29]..[290,11701+32])
              Ptyp_constr "int" (stdlib/stdlib.mli[290,11701+29]..[290,11701+32])
              []
            core_type (stdlib/stdlib.mli[290,11701+35]..[290,11701+37])
              Ptyp_var a
          ]
      [
        "%loc_LINE"
      ]
  signature_item (stdlib/stdlib.mli[297,11961+0]..[297,11961+72])
    Psig_value
    value_description "__POS_OF__" (stdlib/stdlib.mli[297,11961+9]..[297,11961+19]) (stdlib/stdlib.mli[297,11961+0]..[297,11961+72])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[298,12034+0]..[305,12441+3])
            Pstr_eval
            expression (stdlib/stdlib.mli[298,12034+0]..[305,12441+3])
              Pexp_constant PConst_string(" [__POS_OF__ expr] returns a pair [(loc,expr)], where [loc] is a\n    tuple [(file,lnum,cnum,enum)] corresponding to the location at\n    which the expression [expr] appears in the file currently being\n    parsed by the compiler. [file] is the current filename, [lnum] the\n    line number, [cnum] the character position in the line and [enum]\n    the last character position in the line.\n    @since 4.02.0\n ",(stdlib/stdlib.mli[298,12034+0]..[305,12441+3]),None)
        ]
      core_type (stdlib/stdlib.mli[297,11961+22]..[297,11961+59])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[297,11961+22]..[297,11961+24])
          Ptyp_var a
        core_type (stdlib/stdlib.mli[297,11961+28]..[297,11961+59])
          Ptyp_tuple
          [
            core_type (stdlib/stdlib.mli[297,11961+29]..[297,11961+53])
              Ptyp_tuple
              [
                core_type (stdlib/stdlib.mli[297,11961+29]..[297,11961+35])
                  Ptyp_constr "string" (stdlib/stdlib.mli[297,11961+29]..[297,11961+35])
                  []
                core_type (stdlib/stdlib.mli[297,11961+38]..[297,11961+41])
                  Ptyp_constr "int" (stdlib/stdlib.mli[297,11961+38]..[297,11961+41])
                  []
                core_type (stdlib/stdlib.mli[297,11961+44]..[297,11961+47])
                  Ptyp_constr "int" (stdlib/stdlib.mli[297,11961+44]..[297,11961+47])
                  []
                core_type (stdlib/stdlib.mli[297,11961+50]..[297,11961+53])
                  Ptyp_constr "int" (stdlib/stdlib.mli[297,11961+50]..[297,11961+53])
                  []
              ]
            core_type (stdlib/stdlib.mli[297,11961+57]..[297,11961+59])
              Ptyp_var a
          ]
      [
        "%loc_POS"
      ]
  signature_item (stdlib/stdlib.mli[307,12446+0]..[307,12446+32])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[307,12446+0]..[307,12446+32])
        Pstr_eval
        expression (stdlib/stdlib.mli[307,12446+0]..[307,12446+32])
          Pexp_constant PConst_string(" {1 Composition operators} ",(stdlib/stdlib.mli[307,12446+0]..[307,12446+32]),None)
    ]
  signature_item (stdlib/stdlib.mli[309,12480+0]..[309,12480+54])
    Psig_value
    value_description "|>" (stdlib/stdlib.mli[309,12480+9]..[309,12480+15]) (stdlib/stdlib.mli[309,12480+0]..[309,12480+54])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[310,12535+0]..[314,12708+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[310,12535+0]..[314,12708+2])
              Pexp_constant PConst_string(" Reverse-application operator: [x |> f |> g] is exactly equivalent\n to [g (f (x))].\n Left-associative operator, see {!Ocaml_operators} for more information.\n @since 4.01\n",(stdlib/stdlib.mli[310,12535+0]..[314,12708+2]),None)
        ]
      core_type (stdlib/stdlib.mli[309,12480+18]..[309,12480+40])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[309,12480+18]..[309,12480+20])
          Ptyp_var a
        core_type (stdlib/stdlib.mli[309,12480+24]..[309,12480+40])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[309,12480+25]..[309,12480+33])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/stdlib.mli[309,12480+25]..[309,12480+27])
              Ptyp_var a
            core_type (stdlib/stdlib.mli[309,12480+31]..[309,12480+33])
              Ptyp_var b
          core_type (stdlib/stdlib.mli[309,12480+38]..[309,12480+40])
            Ptyp_var b
      [
        "%revapply"
      ]
  signature_item (stdlib/stdlib.mli[316,12712+0]..[316,12712+51])
    Psig_value
    value_description "@@" (stdlib/stdlib.mli[316,12712+9]..[316,12712+15]) (stdlib/stdlib.mli[316,12712+0]..[316,12712+51])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[317,12764+0]..[321,12930+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[317,12764+0]..[321,12930+2])
              Pexp_constant PConst_string(" Application operator: [g @@ f @@ x] is exactly equivalent to\n [g (f (x))].\n Right-associative operator, see {!Ocaml_operators} for more information.\n @since 4.01\n",(stdlib/stdlib.mli[317,12764+0]..[321,12930+2]),None)
        ]
      core_type (stdlib/stdlib.mli[316,12712+18]..[316,12712+40])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[316,12712+19]..[316,12712+27])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[316,12712+19]..[316,12712+21])
            Ptyp_var a
          core_type (stdlib/stdlib.mli[316,12712+25]..[316,12712+27])
            Ptyp_var b
        core_type (stdlib/stdlib.mli[316,12712+32]..[316,12712+40])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[316,12712+32]..[316,12712+34])
            Ptyp_var a
          core_type (stdlib/stdlib.mli[316,12712+38]..[316,12712+40])
            Ptyp_var b
      [
        "%apply"
      ]
  signature_item (stdlib/stdlib.mli[323,12934+0]..[323,12934+29])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[323,12934+0]..[323,12934+29])
        Pstr_eval
        expression (stdlib/stdlib.mli[323,12934+0]..[323,12934+29])
          Pexp_constant PConst_string(" {1 Integer arithmetic} ",(stdlib/stdlib.mli[323,12934+0]..[323,12934+29]),None)
    ]
  signature_item (stdlib/stdlib.mli[325,12965+0]..[327,13064+36])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[325,12965+0]..[327,13064+36])
        Pstr_eval
        expression (stdlib/stdlib.mli[325,12965+0]..[327,13064+36])
          Pexp_constant PConst_string(" Integers are [Sys.int_size] bits wide.\n    All operations are taken modulo 2{^[Sys.int_size]}.\n    They do not fail on overflow. ",(stdlib/stdlib.mli[325,12965+0]..[327,13064+36]),None)
    ]
  signature_item (stdlib/stdlib.mli[329,13102+0]..[329,13102+40])
    Psig_value
    value_description "~-" (stdlib/stdlib.mli[329,13102+9]..[329,13102+15]) (stdlib/stdlib.mli[329,13102+0]..[329,13102+40])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[330,13143+0]..[332,13272+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[330,13143+0]..[332,13272+2])
              Pexp_constant PConst_string(" Unary negation. You can also write [- e] instead of [~- e].\n    Unary operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[330,13143+0]..[332,13272+2]),None)
        ]
      core_type (stdlib/stdlib.mli[329,13102+18]..[329,13102+28])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[329,13102+18]..[329,13102+21])
          Ptyp_constr "int" (stdlib/stdlib.mli[329,13102+18]..[329,13102+21])
          []
        core_type (stdlib/stdlib.mli[329,13102+25]..[329,13102+28])
          Ptyp_constr "int" (stdlib/stdlib.mli[329,13102+25]..[329,13102+28])
          []
      [
        "%negint"
      ]
  signature_item (stdlib/stdlib.mli[335,13277+0]..[335,13277+42])
    Psig_value
    value_description "~+" (stdlib/stdlib.mli[335,13277+9]..[335,13277+15]) (stdlib/stdlib.mli[335,13277+0]..[335,13277+42])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[336,13320+0]..[339,13467+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[336,13320+0]..[339,13467+2])
              Pexp_constant PConst_string(" Unary addition. You can also write [+ e] instead of [~+ e].\n    Unary operator, see {!Ocaml_operators} for more information.\n    @since 3.12.0\n",(stdlib/stdlib.mli[336,13320+0]..[339,13467+2]),None)
        ]
      core_type (stdlib/stdlib.mli[335,13277+18]..[335,13277+28])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[335,13277+18]..[335,13277+21])
          Ptyp_constr "int" (stdlib/stdlib.mli[335,13277+18]..[335,13277+21])
          []
        core_type (stdlib/stdlib.mli[335,13277+25]..[335,13277+28])
          Ptyp_constr "int" (stdlib/stdlib.mli[335,13277+25]..[335,13277+28])
          []
      [
        "%identity"
      ]
  signature_item (stdlib/stdlib.mli[341,13471+0]..[341,13471+39])
    Psig_value
    value_description "succ" (stdlib/stdlib.mli[341,13471+9]..[341,13471+13]) (stdlib/stdlib.mli[341,13471+0]..[341,13471+39])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[342,13511+0]..[342,13511+27])
            Pstr_eval
            expression (stdlib/stdlib.mli[342,13511+0]..[342,13511+27])
              Pexp_constant PConst_string(" [succ x] is [x + 1]. ",(stdlib/stdlib.mli[342,13511+0]..[342,13511+27]),None)
        ]
      core_type (stdlib/stdlib.mli[341,13471+16]..[341,13471+26])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[341,13471+16]..[341,13471+19])
          Ptyp_constr "int" (stdlib/stdlib.mli[341,13471+16]..[341,13471+19])
          []
        core_type (stdlib/stdlib.mli[341,13471+23]..[341,13471+26])
          Ptyp_constr "int" (stdlib/stdlib.mli[341,13471+23]..[341,13471+26])
          []
      [
        "%succint"
      ]
  signature_item (stdlib/stdlib.mli[344,13540+0]..[344,13540+39])
    Psig_value
    value_description "pred" (stdlib/stdlib.mli[344,13540+9]..[344,13540+13]) (stdlib/stdlib.mli[344,13540+0]..[344,13540+39])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[345,13580+0]..[345,13580+27])
            Pstr_eval
            expression (stdlib/stdlib.mli[345,13580+0]..[345,13580+27])
              Pexp_constant PConst_string(" [pred x] is [x - 1]. ",(stdlib/stdlib.mli[345,13580+0]..[345,13580+27]),None)
        ]
      core_type (stdlib/stdlib.mli[344,13540+16]..[344,13540+26])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[344,13540+16]..[344,13540+19])
          Ptyp_constr "int" (stdlib/stdlib.mli[344,13540+16]..[344,13540+19])
          []
        core_type (stdlib/stdlib.mli[344,13540+23]..[344,13540+26])
          Ptyp_constr "int" (stdlib/stdlib.mli[344,13540+23]..[344,13540+26])
          []
      [
        "%predint"
      ]
  signature_item (stdlib/stdlib.mli[347,13609+0]..[347,13609+46])
    Psig_value
    value_description "+" (stdlib/stdlib.mli[347,13609+9]..[347,13609+14]) (stdlib/stdlib.mli[347,13609+0]..[347,13609+46])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[348,13656+0]..[350,13754+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[348,13656+0]..[350,13754+2])
              Pexp_constant PConst_string(" Integer addition.\n    Left-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[348,13656+0]..[350,13754+2]),None)
        ]
      core_type (stdlib/stdlib.mli[347,13609+17]..[347,13609+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[347,13609+17]..[347,13609+20])
          Ptyp_constr "int" (stdlib/stdlib.mli[347,13609+17]..[347,13609+20])
          []
        core_type (stdlib/stdlib.mli[347,13609+24]..[347,13609+34])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[347,13609+24]..[347,13609+27])
            Ptyp_constr "int" (stdlib/stdlib.mli[347,13609+24]..[347,13609+27])
            []
          core_type (stdlib/stdlib.mli[347,13609+31]..[347,13609+34])
            Ptyp_constr "int" (stdlib/stdlib.mli[347,13609+31]..[347,13609+34])
            []
      [
        "%addint"
      ]
  signature_item (stdlib/stdlib.mli[352,13758+0]..[352,13758+46])
    Psig_value
    value_description "-" (stdlib/stdlib.mli[352,13758+9]..[352,13758+14]) (stdlib/stdlib.mli[352,13758+0]..[352,13758+46])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[353,13805+0]..[355,13908+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[353,13805+0]..[355,13908+2])
              Pexp_constant PConst_string(" Integer subtraction.\n    Left-associative operator, , see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[353,13805+0]..[355,13908+2]),None)
        ]
      core_type (stdlib/stdlib.mli[352,13758+17]..[352,13758+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[352,13758+17]..[352,13758+20])
          Ptyp_constr "int" (stdlib/stdlib.mli[352,13758+17]..[352,13758+20])
          []
        core_type (stdlib/stdlib.mli[352,13758+24]..[352,13758+34])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[352,13758+24]..[352,13758+27])
            Ptyp_constr "int" (stdlib/stdlib.mli[352,13758+24]..[352,13758+27])
            []
          core_type (stdlib/stdlib.mli[352,13758+31]..[352,13758+34])
            Ptyp_constr "int" (stdlib/stdlib.mli[352,13758+31]..[352,13758+34])
            []
      [
        "%subint"
      ]
  signature_item (stdlib/stdlib.mli[357,13912+0]..[357,13912+46])
    Psig_value
    value_description "*" (stdlib/stdlib.mli[357,13912+9]..[357,13912+14]) (stdlib/stdlib.mli[357,13912+0]..[357,13912+46])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[358,13959+0]..[360,14063+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[358,13959+0]..[360,14063+2])
              Pexp_constant PConst_string(" Integer multiplication.\n    Left-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[358,13959+0]..[360,14063+2]),None)
        ]
      core_type (stdlib/stdlib.mli[357,13912+17]..[357,13912+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[357,13912+17]..[357,13912+20])
          Ptyp_constr "int" (stdlib/stdlib.mli[357,13912+17]..[357,13912+20])
          []
        core_type (stdlib/stdlib.mli[357,13912+24]..[357,13912+34])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[357,13912+24]..[357,13912+27])
            Ptyp_constr "int" (stdlib/stdlib.mli[357,13912+24]..[357,13912+27])
            []
          core_type (stdlib/stdlib.mli[357,13912+31]..[357,13912+34])
            Ptyp_constr "int" (stdlib/stdlib.mli[357,13912+31]..[357,13912+34])
            []
      [
        "%mulint"
      ]
  signature_item (stdlib/stdlib.mli[362,14067+0]..[362,14067+46])
    Psig_value
    value_description "/" (stdlib/stdlib.mli[362,14067+9]..[362,14067+14]) (stdlib/stdlib.mli[362,14067+0]..[362,14067+46])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[363,14114+0]..[371,14529+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[363,14114+0]..[371,14529+2])
              Pexp_constant PConst_string(" Integer division.\n   Integer division rounds the real quotient of its arguments towards zero.\n   More precisely, if [x >= 0] and [y > 0], [x / y] is the greatest integer\n   less than or equal to the real quotient of [x] by [y].  Moreover,\n   [(- x) / y = x / (- y) = - (x / y)].\n   Left-associative operator, see {!Ocaml_operators} for more information.\n\n   @raise Division_by_zero if the second argument is 0.\n",(stdlib/stdlib.mli[363,14114+0]..[371,14529+2]),None)
        ]
      core_type (stdlib/stdlib.mli[362,14067+17]..[362,14067+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[362,14067+17]..[362,14067+20])
          Ptyp_constr "int" (stdlib/stdlib.mli[362,14067+17]..[362,14067+20])
          []
        core_type (stdlib/stdlib.mli[362,14067+24]..[362,14067+34])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[362,14067+24]..[362,14067+27])
            Ptyp_constr "int" (stdlib/stdlib.mli[362,14067+24]..[362,14067+27])
            []
          core_type (stdlib/stdlib.mli[362,14067+31]..[362,14067+34])
            Ptyp_constr "int" (stdlib/stdlib.mli[362,14067+31]..[362,14067+34])
            []
      [
        "%divint"
      ]
  signature_item (stdlib/stdlib.mli[373,14533+0]..[373,14533+48])
    Psig_value
    value_description "mod" (stdlib/stdlib.mli[373,14533+9]..[373,14533+16]) (stdlib/stdlib.mli[373,14533+0]..[373,14533+48])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[374,14582+0]..[383,14980+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[374,14582+0]..[383,14980+2])
              Pexp_constant PConst_string(" Integer remainder.  If [y] is not zero, the result\n   of [x mod y] satisfies the following properties:\n   [x = (x / y) * y + x mod y] and\n   [abs(x mod y) <= abs(y) - 1].\n   If [y = 0], [x mod y] raises [Division_by_zero].\n   Note that [x mod y] is negative only if [x < 0].\n   Left-associative operator, see {!Ocaml_operators} for more information.\n\n   @raise Division_by_zero if [y] is zero.\n",(stdlib/stdlib.mli[374,14582+0]..[383,14980+2]),None)
        ]
      core_type (stdlib/stdlib.mli[373,14533+19]..[373,14533+36])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[373,14533+19]..[373,14533+22])
          Ptyp_constr "int" (stdlib/stdlib.mli[373,14533+19]..[373,14533+22])
          []
        core_type (stdlib/stdlib.mli[373,14533+26]..[373,14533+36])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[373,14533+26]..[373,14533+29])
            Ptyp_constr "int" (stdlib/stdlib.mli[373,14533+26]..[373,14533+29])
            []
          core_type (stdlib/stdlib.mli[373,14533+33]..[373,14533+36])
            Ptyp_constr "int" (stdlib/stdlib.mli[373,14533+33]..[373,14533+36])
            []
      [
        "%modint"
      ]
  signature_item (stdlib/stdlib.mli[385,14984+0]..[385,14984+20])
    Psig_value
    value_description "abs" (stdlib/stdlib.mli[385,14984+4]..[385,14984+7]) (stdlib/stdlib.mli[385,14984+0]..[385,14984+20])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[386,15005+0]..[387,15075+43])
            Pstr_eval
            expression (stdlib/stdlib.mli[386,15005+0]..[387,15075+43])
              Pexp_constant PConst_string(" Return the absolute value of the argument.  Note that this may be\n  negative if the argument is [min_int]. ",(stdlib/stdlib.mli[386,15005+0]..[387,15075+43]),None)
        ]
      core_type (stdlib/stdlib.mli[385,14984+10]..[385,14984+20])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[385,14984+10]..[385,14984+13])
          Ptyp_constr "int" (stdlib/stdlib.mli[385,14984+10]..[385,14984+13])
          []
        core_type (stdlib/stdlib.mli[385,14984+17]..[385,14984+20])
          Ptyp_constr "int" (stdlib/stdlib.mli[385,14984+17]..[385,14984+20])
          []
      []
  signature_item (stdlib/stdlib.mli[389,15120+0]..[389,15120+17])
    Psig_value
    value_description "max_int" (stdlib/stdlib.mli[389,15120+4]..[389,15120+11]) (stdlib/stdlib.mli[389,15120+0]..[389,15120+17])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[390,15138+0]..[390,15138+42])
            Pstr_eval
            expression (stdlib/stdlib.mli[390,15138+0]..[390,15138+42])
              Pexp_constant PConst_string(" The greatest representable integer. ",(stdlib/stdlib.mli[390,15138+0]..[390,15138+42]),None)
        ]
      core_type (stdlib/stdlib.mli[389,15120+14]..[389,15120+17])
        Ptyp_constr "int" (stdlib/stdlib.mli[389,15120+14]..[389,15120+17])
        []
      []
  signature_item (stdlib/stdlib.mli[392,15182+0]..[392,15182+17])
    Psig_value
    value_description "min_int" (stdlib/stdlib.mli[392,15182+4]..[392,15182+11]) (stdlib/stdlib.mli[392,15182+0]..[392,15182+17])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[393,15200+0]..[393,15200+42])
            Pstr_eval
            expression (stdlib/stdlib.mli[393,15200+0]..[393,15200+42])
              Pexp_constant PConst_string(" The smallest representable integer. ",(stdlib/stdlib.mli[393,15200+0]..[393,15200+42]),None)
        ]
      core_type (stdlib/stdlib.mli[392,15182+14]..[392,15182+17])
        Ptyp_constr "int" (stdlib/stdlib.mli[392,15182+14]..[392,15182+17])
        []
      []
  signature_item (stdlib/stdlib.mli[396,15245+0]..[396,15245+29])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[396,15245+0]..[396,15245+29])
        Pstr_eval
        expression (stdlib/stdlib.mli[396,15245+0]..[396,15245+29])
          Pexp_constant PConst_string(" {2 Bitwise operations} ",(stdlib/stdlib.mli[396,15245+0]..[396,15245+29]),None)
    ]
  signature_item (stdlib/stdlib.mli[398,15276+0]..[398,15276+49])
    Psig_value
    value_description "land" (stdlib/stdlib.mli[398,15276+9]..[398,15276+17]) (stdlib/stdlib.mli[398,15276+0]..[398,15276+49])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[399,15326+0]..[401,15427+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[399,15326+0]..[401,15427+2])
              Pexp_constant PConst_string(" Bitwise logical and.\n    Left-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[399,15326+0]..[401,15427+2]),None)
        ]
      core_type (stdlib/stdlib.mli[398,15276+20]..[398,15276+37])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[398,15276+20]..[398,15276+23])
          Ptyp_constr "int" (stdlib/stdlib.mli[398,15276+20]..[398,15276+23])
          []
        core_type (stdlib/stdlib.mli[398,15276+27]..[398,15276+37])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[398,15276+27]..[398,15276+30])
            Ptyp_constr "int" (stdlib/stdlib.mli[398,15276+27]..[398,15276+30])
            []
          core_type (stdlib/stdlib.mli[398,15276+34]..[398,15276+37])
            Ptyp_constr "int" (stdlib/stdlib.mli[398,15276+34]..[398,15276+37])
            []
      [
        "%andint"
      ]
  signature_item (stdlib/stdlib.mli[403,15431+0]..[403,15431+47])
    Psig_value
    value_description "lor" (stdlib/stdlib.mli[403,15431+9]..[403,15431+16]) (stdlib/stdlib.mli[403,15431+0]..[403,15431+47])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[404,15479+0]..[406,15579+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[404,15479+0]..[406,15579+2])
              Pexp_constant PConst_string(" Bitwise logical or.\n    Left-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[404,15479+0]..[406,15579+2]),None)
        ]
      core_type (stdlib/stdlib.mli[403,15431+19]..[403,15431+36])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[403,15431+19]..[403,15431+22])
          Ptyp_constr "int" (stdlib/stdlib.mli[403,15431+19]..[403,15431+22])
          []
        core_type (stdlib/stdlib.mli[403,15431+26]..[403,15431+36])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[403,15431+26]..[403,15431+29])
            Ptyp_constr "int" (stdlib/stdlib.mli[403,15431+26]..[403,15431+29])
            []
          core_type (stdlib/stdlib.mli[403,15431+33]..[403,15431+36])
            Ptyp_constr "int" (stdlib/stdlib.mli[403,15431+33]..[403,15431+36])
            []
      [
        "%orint"
      ]
  signature_item (stdlib/stdlib.mli[408,15583+0]..[408,15583+49])
    Psig_value
    value_description "lxor" (stdlib/stdlib.mli[408,15583+9]..[408,15583+17]) (stdlib/stdlib.mli[408,15583+0]..[408,15583+49])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[409,15633+0]..[411,15743+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[409,15633+0]..[411,15743+2])
              Pexp_constant PConst_string(" Bitwise logical exclusive or.\n    Left-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[409,15633+0]..[411,15743+2]),None)
        ]
      core_type (stdlib/stdlib.mli[408,15583+20]..[408,15583+37])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[408,15583+20]..[408,15583+23])
          Ptyp_constr "int" (stdlib/stdlib.mli[408,15583+20]..[408,15583+23])
          []
        core_type (stdlib/stdlib.mli[408,15583+27]..[408,15583+37])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[408,15583+27]..[408,15583+30])
            Ptyp_constr "int" (stdlib/stdlib.mli[408,15583+27]..[408,15583+30])
            []
          core_type (stdlib/stdlib.mli[408,15583+34]..[408,15583+37])
            Ptyp_constr "int" (stdlib/stdlib.mli[408,15583+34]..[408,15583+37])
            []
      [
        "%xorint"
      ]
  signature_item (stdlib/stdlib.mli[413,15747+0]..[413,15747+21])
    Psig_value
    value_description "lnot" (stdlib/stdlib.mli[413,15747+4]..[413,15747+8]) (stdlib/stdlib.mli[413,15747+0]..[413,15747+21])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[414,15769+0]..[414,15769+32])
            Pstr_eval
            expression (stdlib/stdlib.mli[414,15769+0]..[414,15769+32])
              Pexp_constant PConst_string(" Bitwise logical negation. ",(stdlib/stdlib.mli[414,15769+0]..[414,15769+32]),None)
        ]
      core_type (stdlib/stdlib.mli[413,15747+11]..[413,15747+21])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[413,15747+11]..[413,15747+14])
          Ptyp_constr "int" (stdlib/stdlib.mli[413,15747+11]..[413,15747+14])
          []
        core_type (stdlib/stdlib.mli[413,15747+18]..[413,15747+21])
          Ptyp_constr "int" (stdlib/stdlib.mli[413,15747+18]..[413,15747+21])
          []
      []
  signature_item (stdlib/stdlib.mli[416,15803+0]..[416,15803+48])
    Psig_value
    value_description "lsl" (stdlib/stdlib.mli[416,15803+9]..[416,15803+16]) (stdlib/stdlib.mli[416,15803+0]..[416,15803+48])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[417,15852+0]..[420,16043+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[417,15852+0]..[420,16043+2])
              Pexp_constant PConst_string(" [n lsl m] shifts [n] to the left by [m] bits.\n    The result is unspecified if [m < 0] or [m > Sys.int_size].\n    Right-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[417,15852+0]..[420,16043+2]),None)
        ]
      core_type (stdlib/stdlib.mli[416,15803+19]..[416,15803+36])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[416,15803+19]..[416,15803+22])
          Ptyp_constr "int" (stdlib/stdlib.mli[416,15803+19]..[416,15803+22])
          []
        core_type (stdlib/stdlib.mli[416,15803+26]..[416,15803+36])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[416,15803+26]..[416,15803+29])
            Ptyp_constr "int" (stdlib/stdlib.mli[416,15803+26]..[416,15803+29])
            []
          core_type (stdlib/stdlib.mli[416,15803+33]..[416,15803+36])
            Ptyp_constr "int" (stdlib/stdlib.mli[416,15803+33]..[416,15803+36])
            []
      [
        "%lslint"
      ]
  signature_item (stdlib/stdlib.mli[422,16047+0]..[422,16047+48])
    Psig_value
    value_description "lsr" (stdlib/stdlib.mli[422,16047+9]..[422,16047+16]) (stdlib/stdlib.mli[422,16047+0]..[422,16047+48])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[423,16096+0]..[428,16372+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[423,16096+0]..[428,16372+2])
              Pexp_constant PConst_string(" [n lsr m] shifts [n] to the right by [m] bits.\n    This is a logical shift: zeroes are inserted regardless of\n    the sign of [n].\n    The result is unspecified if [m < 0] or [m > Sys.int_size].\n    Right-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[423,16096+0]..[428,16372+2]),None)
        ]
      core_type (stdlib/stdlib.mli[422,16047+19]..[422,16047+36])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[422,16047+19]..[422,16047+22])
          Ptyp_constr "int" (stdlib/stdlib.mli[422,16047+19]..[422,16047+22])
          []
        core_type (stdlib/stdlib.mli[422,16047+26]..[422,16047+36])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[422,16047+26]..[422,16047+29])
            Ptyp_constr "int" (stdlib/stdlib.mli[422,16047+26]..[422,16047+29])
            []
          core_type (stdlib/stdlib.mli[422,16047+33]..[422,16047+36])
            Ptyp_constr "int" (stdlib/stdlib.mli[422,16047+33]..[422,16047+36])
            []
      [
        "%lsrint"
      ]
  signature_item (stdlib/stdlib.mli[430,16376+0]..[430,16376+48])
    Psig_value
    value_description "asr" (stdlib/stdlib.mli[430,16376+9]..[430,16376+16]) (stdlib/stdlib.mli[430,16376+0]..[430,16376+48])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[431,16425+0]..[435,16685+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[431,16425+0]..[435,16685+2])
              Pexp_constant PConst_string(" [n asr m] shifts [n] to the right by [m] bits.\n    This is an arithmetic shift: the sign bit of [n] is replicated.\n    The result is unspecified if [m < 0] or [m > Sys.int_size].\n    Right-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[431,16425+0]..[435,16685+2]),None)
        ]
      core_type (stdlib/stdlib.mli[430,16376+19]..[430,16376+36])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[430,16376+19]..[430,16376+22])
          Ptyp_constr "int" (stdlib/stdlib.mli[430,16376+19]..[430,16376+22])
          []
        core_type (stdlib/stdlib.mli[430,16376+26]..[430,16376+36])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[430,16376+26]..[430,16376+29])
            Ptyp_constr "int" (stdlib/stdlib.mli[430,16376+26]..[430,16376+29])
            []
          core_type (stdlib/stdlib.mli[430,16376+33]..[430,16376+36])
            Ptyp_constr "int" (stdlib/stdlib.mli[430,16376+33]..[430,16376+36])
            []
      [
        "%asrint"
      ]
  signature_item (stdlib/stdlib.mli[437,16689+0]..[449,17359+2])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[437,16689+0]..[449,17359+2])
        Pstr_eval
        expression (stdlib/stdlib.mli[437,16689+0]..[449,17359+2])
          Pexp_constant PConst_string(" {1 Floating-point arithmetic}\n\n   OCaml's floating-point numbers follow the\n   IEEE 754 standard, using double precision (64 bits) numbers.\n   Floating-point operations never raise an exception on overflow,\n   underflow, division by zero, etc.  Instead, special IEEE numbers\n   are returned as appropriate, such as [infinity] for [1.0 /. 0.0],\n   [neg_infinity] for [-1.0 /. 0.0], and [nan] ('not a number')\n   for [0.0 /. 0.0].  These special numbers then propagate through\n   floating-point computations as expected: for instance,\n    [1.0 /. infinity] is [0.0], basic arithmetic operations\n    ([+.], [-.], [*.], [/.]) with [nan] as an argument return [nan], ...\n",(stdlib/stdlib.mli[437,16689+0]..[449,17359+2]),None)
    ]
  signature_item (stdlib/stdlib.mli[451,17363+0]..[451,17363+47])
    Psig_value
    value_description "~-." (stdlib/stdlib.mli[451,17363+9]..[451,17363+16]) (stdlib/stdlib.mli[451,17363+0]..[451,17363+47])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[452,17411+0]..[454,17542+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[452,17411+0]..[454,17542+2])
              Pexp_constant PConst_string(" Unary negation. You can also write [-. e] instead of [~-. e].\n    Unary operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[452,17411+0]..[454,17542+2]),None)
        ]
      core_type (stdlib/stdlib.mli[451,17363+19]..[451,17363+33])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[451,17363+19]..[451,17363+24])
          Ptyp_constr "float" (stdlib/stdlib.mli[451,17363+19]..[451,17363+24])
          []
        core_type (stdlib/stdlib.mli[451,17363+28]..[451,17363+33])
          Ptyp_constr "float" (stdlib/stdlib.mli[451,17363+28]..[451,17363+33])
          []
      [
        "%negfloat"
      ]
  signature_item (stdlib/stdlib.mli[456,17546+0]..[456,17546+47])
    Psig_value
    value_description "~+." (stdlib/stdlib.mli[456,17546+9]..[456,17546+16]) (stdlib/stdlib.mli[456,17546+0]..[456,17546+47])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[457,17594+0]..[460,17743+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[457,17594+0]..[460,17743+2])
              Pexp_constant PConst_string(" Unary addition. You can also write [+. e] instead of [~+. e].\n    Unary operator, see {!Ocaml_operators} for more information.\n    @since 3.12.0\n",(stdlib/stdlib.mli[457,17594+0]..[460,17743+2]),None)
        ]
      core_type (stdlib/stdlib.mli[456,17546+19]..[456,17546+33])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[456,17546+19]..[456,17546+24])
          Ptyp_constr "float" (stdlib/stdlib.mli[456,17546+19]..[456,17546+24])
          []
        core_type (stdlib/stdlib.mli[456,17546+28]..[456,17546+33])
          Ptyp_constr "float" (stdlib/stdlib.mli[456,17546+28]..[456,17546+33])
          []
      [
        "%identity"
      ]
  signature_item (stdlib/stdlib.mli[462,17747+0]..[462,17747+55])
    Psig_value
    value_description "+." (stdlib/stdlib.mli[462,17747+9]..[462,17747+15]) (stdlib/stdlib.mli[462,17747+0]..[462,17747+55])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[463,17803+0]..[465,17908+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[463,17803+0]..[465,17908+2])
              Pexp_constant PConst_string(" Floating-point addition.\n    Left-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[463,17803+0]..[465,17908+2]),None)
        ]
      core_type (stdlib/stdlib.mli[462,17747+18]..[462,17747+41])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[462,17747+18]..[462,17747+23])
          Ptyp_constr "float" (stdlib/stdlib.mli[462,17747+18]..[462,17747+23])
          []
        core_type (stdlib/stdlib.mli[462,17747+27]..[462,17747+41])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[462,17747+27]..[462,17747+32])
            Ptyp_constr "float" (stdlib/stdlib.mli[462,17747+27]..[462,17747+32])
            []
          core_type (stdlib/stdlib.mli[462,17747+36]..[462,17747+41])
            Ptyp_constr "float" (stdlib/stdlib.mli[462,17747+36]..[462,17747+41])
            []
      [
        "%addfloat"
      ]
  signature_item (stdlib/stdlib.mli[467,17912+0]..[467,17912+55])
    Psig_value
    value_description "-." (stdlib/stdlib.mli[467,17912+9]..[467,17912+15]) (stdlib/stdlib.mli[467,17912+0]..[467,17912+55])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[468,17968+0]..[470,18076+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[468,17968+0]..[470,18076+2])
              Pexp_constant PConst_string(" Floating-point subtraction.\n    Left-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[468,17968+0]..[470,18076+2]),None)
        ]
      core_type (stdlib/stdlib.mli[467,17912+18]..[467,17912+41])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[467,17912+18]..[467,17912+23])
          Ptyp_constr "float" (stdlib/stdlib.mli[467,17912+18]..[467,17912+23])
          []
        core_type (stdlib/stdlib.mli[467,17912+27]..[467,17912+41])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[467,17912+27]..[467,17912+32])
            Ptyp_constr "float" (stdlib/stdlib.mli[467,17912+27]..[467,17912+32])
            []
          core_type (stdlib/stdlib.mli[467,17912+36]..[467,17912+41])
            Ptyp_constr "float" (stdlib/stdlib.mli[467,17912+36]..[467,17912+41])
            []
      [
        "%subfloat"
      ]
  signature_item (stdlib/stdlib.mli[472,18080+0]..[472,18080+55])
    Psig_value
    value_description "*." (stdlib/stdlib.mli[472,18080+9]..[472,18080+15]) (stdlib/stdlib.mli[472,18080+0]..[472,18080+55])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[473,18136+0]..[475,18247+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[473,18136+0]..[475,18247+2])
              Pexp_constant PConst_string(" Floating-point multiplication.\n    Left-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[473,18136+0]..[475,18247+2]),None)
        ]
      core_type (stdlib/stdlib.mli[472,18080+18]..[472,18080+41])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[472,18080+18]..[472,18080+23])
          Ptyp_constr "float" (stdlib/stdlib.mli[472,18080+18]..[472,18080+23])
          []
        core_type (stdlib/stdlib.mli[472,18080+27]..[472,18080+41])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[472,18080+27]..[472,18080+32])
            Ptyp_constr "float" (stdlib/stdlib.mli[472,18080+27]..[472,18080+32])
            []
          core_type (stdlib/stdlib.mli[472,18080+36]..[472,18080+41])
            Ptyp_constr "float" (stdlib/stdlib.mli[472,18080+36]..[472,18080+41])
            []
      [
        "%mulfloat"
      ]
  signature_item (stdlib/stdlib.mli[477,18251+0]..[477,18251+55])
    Psig_value
    value_description "/." (stdlib/stdlib.mli[477,18251+9]..[477,18251+15]) (stdlib/stdlib.mli[477,18251+0]..[477,18251+55])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[478,18307+0]..[480,18412+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[478,18307+0]..[480,18412+2])
              Pexp_constant PConst_string(" Floating-point division.\n    Left-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[478,18307+0]..[480,18412+2]),None)
        ]
      core_type (stdlib/stdlib.mli[477,18251+18]..[477,18251+41])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[477,18251+18]..[477,18251+23])
          Ptyp_constr "float" (stdlib/stdlib.mli[477,18251+18]..[477,18251+23])
          []
        core_type (stdlib/stdlib.mli[477,18251+27]..[477,18251+41])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[477,18251+27]..[477,18251+32])
            Ptyp_constr "float" (stdlib/stdlib.mli[477,18251+27]..[477,18251+32])
            []
          core_type (stdlib/stdlib.mli[477,18251+36]..[477,18251+41])
            Ptyp_constr "float" (stdlib/stdlib.mli[477,18251+36]..[477,18251+41])
            []
      [
        "%divfloat"
      ]
  signature_item (stdlib/stdlib.mli[482,18416+0]..[483,18485+25])
    Psig_value
    value_description "**" (stdlib/stdlib.mli[482,18416+9]..[482,18416+15]) (stdlib/stdlib.mli[482,18416+0]..[483,18485+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[484,18511+0]..[486,18608+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[484,18511+0]..[486,18608+2])
              Pexp_constant PConst_string(" Exponentiation.\n    Right-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[484,18511+0]..[486,18608+2]),None)
        ]
      core_type (stdlib/stdlib.mli[482,18416+18]..[482,18416+41])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[482,18416+18]..[482,18416+23])
          Ptyp_constr "float" (stdlib/stdlib.mli[482,18416+18]..[482,18416+23])
          []
        core_type (stdlib/stdlib.mli[482,18416+27]..[482,18416+41])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[482,18416+27]..[482,18416+32])
            Ptyp_constr "float" (stdlib/stdlib.mli[482,18416+27]..[482,18416+32])
            []
          core_type (stdlib/stdlib.mli[482,18416+36]..[482,18416+41])
            Ptyp_constr "float" (stdlib/stdlib.mli[482,18416+36]..[482,18416+41])
            []
      [
        "caml_power_float"
        "pow"
      ]
  signature_item (stdlib/stdlib.mli[488,18612+0]..[489,18670+25])
    Psig_value
    value_description "sqrt" (stdlib/stdlib.mli[488,18612+9]..[488,18612+13]) (stdlib/stdlib.mli[488,18612+0]..[489,18670+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[490,18696+0]..[490,18696+19])
            Pstr_eval
            expression (stdlib/stdlib.mli[490,18696+0]..[490,18696+19])
              Pexp_constant PConst_string(" Square root. ",(stdlib/stdlib.mli[490,18696+0]..[490,18696+19]),None)
        ]
      core_type (stdlib/stdlib.mli[488,18612+16]..[488,18612+30])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[488,18612+16]..[488,18612+21])
          Ptyp_constr "float" (stdlib/stdlib.mli[488,18612+16]..[488,18612+21])
          []
        core_type (stdlib/stdlib.mli[488,18612+25]..[488,18612+30])
          Ptyp_constr "float" (stdlib/stdlib.mli[488,18612+25]..[488,18612+30])
          []
      [
        "caml_sqrt_float"
        "sqrt"
      ]
  signature_item (stdlib/stdlib.mli[492,18717+0]..[492,18717+78])
    Psig_value
    value_description "exp" (stdlib/stdlib.mli[492,18717+9]..[492,18717+12]) (stdlib/stdlib.mli[492,18717+0]..[492,18717+78])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[493,18796+0]..[493,18796+19])
            Pstr_eval
            expression (stdlib/stdlib.mli[493,18796+0]..[493,18796+19])
              Pexp_constant PConst_string(" Exponential. ",(stdlib/stdlib.mli[493,18796+0]..[493,18796+19]),None)
        ]
      core_type (stdlib/stdlib.mli[492,18717+15]..[492,18717+29])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[492,18717+15]..[492,18717+20])
          Ptyp_constr "float" (stdlib/stdlib.mli[492,18717+15]..[492,18717+20])
          []
        core_type (stdlib/stdlib.mli[492,18717+24]..[492,18717+29])
          Ptyp_constr "float" (stdlib/stdlib.mli[492,18717+24]..[492,18717+29])
          []
      [
        "caml_exp_float"
        "exp"
      ]
  signature_item (stdlib/stdlib.mli[495,18817+0]..[495,18817+78])
    Psig_value
    value_description "log" (stdlib/stdlib.mli[495,18817+9]..[495,18817+12]) (stdlib/stdlib.mli[495,18817+0]..[495,18817+78])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[496,18896+0]..[496,18896+25])
            Pstr_eval
            expression (stdlib/stdlib.mli[496,18896+0]..[496,18896+25])
              Pexp_constant PConst_string(" Natural logarithm. ",(stdlib/stdlib.mli[496,18896+0]..[496,18896+25]),None)
        ]
      core_type (stdlib/stdlib.mli[495,18817+15]..[495,18817+29])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[495,18817+15]..[495,18817+20])
          Ptyp_constr "float" (stdlib/stdlib.mli[495,18817+15]..[495,18817+20])
          []
        core_type (stdlib/stdlib.mli[495,18817+24]..[495,18817+29])
          Ptyp_constr "float" (stdlib/stdlib.mli[495,18817+24]..[495,18817+29])
          []
      [
        "caml_log_float"
        "log"
      ]
  signature_item (stdlib/stdlib.mli[498,18923+0]..[499,18984+25])
    Psig_value
    value_description "log10" (stdlib/stdlib.mli[498,18923+9]..[498,18923+14]) (stdlib/stdlib.mli[498,18923+0]..[499,18984+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[500,19010+0]..[500,19010+25])
            Pstr_eval
            expression (stdlib/stdlib.mli[500,19010+0]..[500,19010+25])
              Pexp_constant PConst_string(" Base 10 logarithm. ",(stdlib/stdlib.mli[500,19010+0]..[500,19010+25]),None)
        ]
      core_type (stdlib/stdlib.mli[498,18923+17]..[498,18923+31])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[498,18923+17]..[498,18923+22])
          Ptyp_constr "float" (stdlib/stdlib.mli[498,18923+17]..[498,18923+22])
          []
        core_type (stdlib/stdlib.mli[498,18923+26]..[498,18923+31])
          Ptyp_constr "float" (stdlib/stdlib.mli[498,18923+26]..[498,18923+31])
          []
      [
        "caml_log10_float"
        "log10"
      ]
  signature_item (stdlib/stdlib.mli[502,19037+0]..[503,19103+25])
    Psig_value
    value_description "expm1" (stdlib/stdlib.mli[502,19037+9]..[502,19037+14]) (stdlib/stdlib.mli[502,19037+0]..[503,19103+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[504,19129+0]..[507,19257+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[504,19129+0]..[507,19257+2])
              Pexp_constant PConst_string(" [expm1 x] computes [exp x -. 1.0], giving numerically-accurate results\n    even if [x] is close to [0.0].\n    @since 3.12.0\n",(stdlib/stdlib.mli[504,19129+0]..[507,19257+2]),None)
        ]
      core_type (stdlib/stdlib.mli[502,19037+17]..[502,19037+31])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[502,19037+17]..[502,19037+22])
          Ptyp_constr "float" (stdlib/stdlib.mli[502,19037+17]..[502,19037+22])
          []
        core_type (stdlib/stdlib.mli[502,19037+26]..[502,19037+31])
          Ptyp_constr "float" (stdlib/stdlib.mli[502,19037+26]..[502,19037+31])
          []
      [
        "caml_expm1_float"
        "caml_expm1"
      ]
  signature_item (stdlib/stdlib.mli[509,19261+0]..[510,19327+25])
    Psig_value
    value_description "log1p" (stdlib/stdlib.mli[509,19261+9]..[509,19261+14]) (stdlib/stdlib.mli[509,19261+0]..[510,19327+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[511,19353+0]..[514,19502+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[511,19353+0]..[514,19502+2])
              Pexp_constant PConst_string(" [log1p x] computes [log(1.0 +. x)] (natural logarithm),\n    giving numerically-accurate results even if [x] is close to [0.0].\n    @since 3.12.0\n",(stdlib/stdlib.mli[511,19353+0]..[514,19502+2]),None)
        ]
      core_type (stdlib/stdlib.mli[509,19261+17]..[509,19261+31])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[509,19261+17]..[509,19261+22])
          Ptyp_constr "float" (stdlib/stdlib.mli[509,19261+17]..[509,19261+22])
          []
        core_type (stdlib/stdlib.mli[509,19261+26]..[509,19261+31])
          Ptyp_constr "float" (stdlib/stdlib.mli[509,19261+26]..[509,19261+31])
          []
      [
        "caml_log1p_float"
        "caml_log1p"
      ]
  signature_item (stdlib/stdlib.mli[516,19506+0]..[516,19506+78])
    Psig_value
    value_description "cos" (stdlib/stdlib.mli[516,19506+9]..[516,19506+12]) (stdlib/stdlib.mli[516,19506+0]..[516,19506+78])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[517,19585+0]..[517,19585+39])
            Pstr_eval
            expression (stdlib/stdlib.mli[517,19585+0]..[517,19585+39])
              Pexp_constant PConst_string(" Cosine.  Argument is in radians. ",(stdlib/stdlib.mli[517,19585+0]..[517,19585+39]),None)
        ]
      core_type (stdlib/stdlib.mli[516,19506+15]..[516,19506+29])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[516,19506+15]..[516,19506+20])
          Ptyp_constr "float" (stdlib/stdlib.mli[516,19506+15]..[516,19506+20])
          []
        core_type (stdlib/stdlib.mli[516,19506+24]..[516,19506+29])
          Ptyp_constr "float" (stdlib/stdlib.mli[516,19506+24]..[516,19506+29])
          []
      [
        "caml_cos_float"
        "cos"
      ]
  signature_item (stdlib/stdlib.mli[519,19626+0]..[519,19626+78])
    Psig_value
    value_description "sin" (stdlib/stdlib.mli[519,19626+9]..[519,19626+12]) (stdlib/stdlib.mli[519,19626+0]..[519,19626+78])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[520,19705+0]..[520,19705+37])
            Pstr_eval
            expression (stdlib/stdlib.mli[520,19705+0]..[520,19705+37])
              Pexp_constant PConst_string(" Sine.  Argument is in radians. ",(stdlib/stdlib.mli[520,19705+0]..[520,19705+37]),None)
        ]
      core_type (stdlib/stdlib.mli[519,19626+15]..[519,19626+29])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[519,19626+15]..[519,19626+20])
          Ptyp_constr "float" (stdlib/stdlib.mli[519,19626+15]..[519,19626+20])
          []
        core_type (stdlib/stdlib.mli[519,19626+24]..[519,19626+29])
          Ptyp_constr "float" (stdlib/stdlib.mli[519,19626+24]..[519,19626+29])
          []
      [
        "caml_sin_float"
        "sin"
      ]
  signature_item (stdlib/stdlib.mli[522,19744+0]..[522,19744+78])
    Psig_value
    value_description "tan" (stdlib/stdlib.mli[522,19744+9]..[522,19744+12]) (stdlib/stdlib.mli[522,19744+0]..[522,19744+78])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[523,19823+0]..[523,19823+40])
            Pstr_eval
            expression (stdlib/stdlib.mli[523,19823+0]..[523,19823+40])
              Pexp_constant PConst_string(" Tangent.  Argument is in radians. ",(stdlib/stdlib.mli[523,19823+0]..[523,19823+40]),None)
        ]
      core_type (stdlib/stdlib.mli[522,19744+15]..[522,19744+29])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[522,19744+15]..[522,19744+20])
          Ptyp_constr "float" (stdlib/stdlib.mli[522,19744+15]..[522,19744+20])
          []
        core_type (stdlib/stdlib.mli[522,19744+24]..[522,19744+29])
          Ptyp_constr "float" (stdlib/stdlib.mli[522,19744+24]..[522,19744+29])
          []
      [
        "caml_tan_float"
        "tan"
      ]
  signature_item (stdlib/stdlib.mli[525,19865+0]..[526,19923+25])
    Psig_value
    value_description "acos" (stdlib/stdlib.mli[525,19865+9]..[525,19865+13]) (stdlib/stdlib.mli[525,19865+0]..[526,19923+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[527,19949+0]..[528,20021+58])
            Pstr_eval
            expression (stdlib/stdlib.mli[527,19949+0]..[528,20021+58])
              Pexp_constant PConst_string(" Arc cosine.  The argument must fall within the range [[-1.0, 1.0]].\n    Result is in radians and is between [0.0] and [pi]. ",(stdlib/stdlib.mli[527,19949+0]..[528,20021+58]),None)
        ]
      core_type (stdlib/stdlib.mli[525,19865+16]..[525,19865+30])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[525,19865+16]..[525,19865+21])
          Ptyp_constr "float" (stdlib/stdlib.mli[525,19865+16]..[525,19865+21])
          []
        core_type (stdlib/stdlib.mli[525,19865+25]..[525,19865+30])
          Ptyp_constr "float" (stdlib/stdlib.mli[525,19865+25]..[525,19865+30])
          []
      [
        "caml_acos_float"
        "acos"
      ]
  signature_item (stdlib/stdlib.mli[530,20081+0]..[531,20139+25])
    Psig_value
    value_description "asin" (stdlib/stdlib.mli[530,20081+9]..[530,20081+13]) (stdlib/stdlib.mli[530,20081+0]..[531,20139+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[532,20165+0]..[533,20235+62])
            Pstr_eval
            expression (stdlib/stdlib.mli[532,20165+0]..[533,20235+62])
              Pexp_constant PConst_string(" Arc sine.  The argument must fall within the range [[-1.0, 1.0]].\n    Result is in radians and is between [-pi/2] and [pi/2]. ",(stdlib/stdlib.mli[532,20165+0]..[533,20235+62]),None)
        ]
      core_type (stdlib/stdlib.mli[530,20081+16]..[530,20081+30])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[530,20081+16]..[530,20081+21])
          Ptyp_constr "float" (stdlib/stdlib.mli[530,20081+16]..[530,20081+21])
          []
        core_type (stdlib/stdlib.mli[530,20081+25]..[530,20081+30])
          Ptyp_constr "float" (stdlib/stdlib.mli[530,20081+25]..[530,20081+30])
          []
      [
        "caml_asin_float"
        "asin"
      ]
  signature_item (stdlib/stdlib.mli[535,20299+0]..[536,20357+25])
    Psig_value
    value_description "atan" (stdlib/stdlib.mli[535,20299+9]..[535,20299+13]) (stdlib/stdlib.mli[535,20299+0]..[536,20357+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[537,20383+0]..[538,20400+62])
            Pstr_eval
            expression (stdlib/stdlib.mli[537,20383+0]..[538,20400+62])
              Pexp_constant PConst_string(" Arc tangent.\n    Result is in radians and is between [-pi/2] and [pi/2]. ",(stdlib/stdlib.mli[537,20383+0]..[538,20400+62]),None)
        ]
      core_type (stdlib/stdlib.mli[535,20299+16]..[535,20299+30])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[535,20299+16]..[535,20299+21])
          Ptyp_constr "float" (stdlib/stdlib.mli[535,20299+16]..[535,20299+21])
          []
        core_type (stdlib/stdlib.mli[535,20299+25]..[535,20299+30])
          Ptyp_constr "float" (stdlib/stdlib.mli[535,20299+25]..[535,20299+30])
          []
      [
        "caml_atan_float"
        "atan"
      ]
  signature_item (stdlib/stdlib.mli[540,20464+0]..[541,20534+25])
    Psig_value
    value_description "atan2" (stdlib/stdlib.mli[540,20464+9]..[540,20464+14]) (stdlib/stdlib.mli[540,20464+0]..[541,20534+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[542,20560+0]..[544,20693+58])
            Pstr_eval
            expression (stdlib/stdlib.mli[542,20560+0]..[544,20693+58])
              Pexp_constant PConst_string(" [atan2 y x] returns the arc tangent of [y /. x].  The signs of [x]\n    and [y] are used to determine the quadrant of the result.\n    Result is in radians and is between [-pi] and [pi]. ",(stdlib/stdlib.mli[542,20560+0]..[544,20693+58]),None)
        ]
      core_type (stdlib/stdlib.mli[540,20464+17]..[540,20464+40])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[540,20464+17]..[540,20464+22])
          Ptyp_constr "float" (stdlib/stdlib.mli[540,20464+17]..[540,20464+22])
          []
        core_type (stdlib/stdlib.mli[540,20464+26]..[540,20464+40])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[540,20464+26]..[540,20464+31])
            Ptyp_constr "float" (stdlib/stdlib.mli[540,20464+26]..[540,20464+31])
            []
          core_type (stdlib/stdlib.mli[540,20464+35]..[540,20464+40])
            Ptyp_constr "float" (stdlib/stdlib.mli[540,20464+35]..[540,20464+40])
            []
      [
        "caml_atan2_float"
        "atan2"
      ]
  signature_item (stdlib/stdlib.mli[546,20753+0]..[547,20828+25])
    Psig_value
    value_description "hypot" (stdlib/stdlib.mli[546,20753+9]..[546,20753+14]) (stdlib/stdlib.mli[546,20753+0]..[547,20828+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[548,20854+0]..[553,21155+19])
            Pstr_eval
            expression (stdlib/stdlib.mli[548,20854+0]..[553,21155+19])
              Pexp_constant PConst_string(" [hypot x y] returns [sqrt(x *. x + y *. y)], that is, the length\n  of the hypotenuse of a right-angled triangle with sides of length\n  [x] and [y], or, equivalently, the distance of the point [(x,y)]\n  to origin.  If one of [x] or [y] is infinite, returns [infinity]\n  even if the other is [nan].\n  @since 4.00.0  ",(stdlib/stdlib.mli[548,20854+0]..[553,21155+19]),None)
        ]
      core_type (stdlib/stdlib.mli[546,20753+17]..[546,20753+40])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[546,20753+17]..[546,20753+22])
          Ptyp_constr "float" (stdlib/stdlib.mli[546,20753+17]..[546,20753+22])
          []
        core_type (stdlib/stdlib.mli[546,20753+26]..[546,20753+40])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[546,20753+26]..[546,20753+31])
            Ptyp_constr "float" (stdlib/stdlib.mli[546,20753+26]..[546,20753+31])
            []
          core_type (stdlib/stdlib.mli[546,20753+35]..[546,20753+40])
            Ptyp_constr "float" (stdlib/stdlib.mli[546,20753+35]..[546,20753+40])
            []
      [
        "caml_hypot_float"
        "caml_hypot"
      ]
  signature_item (stdlib/stdlib.mli[555,21176+0]..[556,21234+25])
    Psig_value
    value_description "cosh" (stdlib/stdlib.mli[555,21176+9]..[555,21176+13]) (stdlib/stdlib.mli[555,21176+0]..[556,21234+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[557,21260+0]..[557,21260+50])
            Pstr_eval
            expression (stdlib/stdlib.mli[557,21260+0]..[557,21260+50])
              Pexp_constant PConst_string(" Hyperbolic cosine.  Argument is in radians. ",(stdlib/stdlib.mli[557,21260+0]..[557,21260+50]),None)
        ]
      core_type (stdlib/stdlib.mli[555,21176+16]..[555,21176+30])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[555,21176+16]..[555,21176+21])
          Ptyp_constr "float" (stdlib/stdlib.mli[555,21176+16]..[555,21176+21])
          []
        core_type (stdlib/stdlib.mli[555,21176+25]..[555,21176+30])
          Ptyp_constr "float" (stdlib/stdlib.mli[555,21176+25]..[555,21176+30])
          []
      [
        "caml_cosh_float"
        "cosh"
      ]
  signature_item (stdlib/stdlib.mli[559,21312+0]..[560,21370+25])
    Psig_value
    value_description "sinh" (stdlib/stdlib.mli[559,21312+9]..[559,21312+13]) (stdlib/stdlib.mli[559,21312+0]..[560,21370+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[561,21396+0]..[561,21396+48])
            Pstr_eval
            expression (stdlib/stdlib.mli[561,21396+0]..[561,21396+48])
              Pexp_constant PConst_string(" Hyperbolic sine.  Argument is in radians. ",(stdlib/stdlib.mli[561,21396+0]..[561,21396+48]),None)
        ]
      core_type (stdlib/stdlib.mli[559,21312+16]..[559,21312+30])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[559,21312+16]..[559,21312+21])
          Ptyp_constr "float" (stdlib/stdlib.mli[559,21312+16]..[559,21312+21])
          []
        core_type (stdlib/stdlib.mli[559,21312+25]..[559,21312+30])
          Ptyp_constr "float" (stdlib/stdlib.mli[559,21312+25]..[559,21312+30])
          []
      [
        "caml_sinh_float"
        "sinh"
      ]
  signature_item (stdlib/stdlib.mli[563,21446+0]..[564,21504+25])
    Psig_value
    value_description "tanh" (stdlib/stdlib.mli[563,21446+9]..[563,21446+13]) (stdlib/stdlib.mli[563,21446+0]..[564,21504+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[565,21530+0]..[565,21530+51])
            Pstr_eval
            expression (stdlib/stdlib.mli[565,21530+0]..[565,21530+51])
              Pexp_constant PConst_string(" Hyperbolic tangent.  Argument is in radians. ",(stdlib/stdlib.mli[565,21530+0]..[565,21530+51]),None)
        ]
      core_type (stdlib/stdlib.mli[563,21446+16]..[563,21446+30])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[563,21446+16]..[563,21446+21])
          Ptyp_constr "float" (stdlib/stdlib.mli[563,21446+16]..[563,21446+21])
          []
        core_type (stdlib/stdlib.mli[563,21446+25]..[563,21446+30])
          Ptyp_constr "float" (stdlib/stdlib.mli[563,21446+25]..[563,21446+30])
          []
      [
        "caml_tanh_float"
        "tanh"
      ]
  signature_item (stdlib/stdlib.mli[567,21583+0]..[568,21649+25])
    Psig_value
    value_description "acosh" (stdlib/stdlib.mli[567,21583+9]..[567,21583+14]) (stdlib/stdlib.mli[567,21583+0]..[568,21649+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[569,21675+0]..[574,21837+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[569,21675+0]..[574,21837+2])
              Pexp_constant PConst_string(" Hyperbolic arc cosine.  The argument must fall within the range\n    [[1.0, inf]].\n    Result is in radians and is between [0.0] and [inf].\n\n    @since 4.13.0\n",(stdlib/stdlib.mli[569,21675+0]..[574,21837+2]),None)
        ]
      core_type (stdlib/stdlib.mli[567,21583+17]..[567,21583+31])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[567,21583+17]..[567,21583+22])
          Ptyp_constr "float" (stdlib/stdlib.mli[567,21583+17]..[567,21583+22])
          []
        core_type (stdlib/stdlib.mli[567,21583+26]..[567,21583+31])
          Ptyp_constr "float" (stdlib/stdlib.mli[567,21583+26]..[567,21583+31])
          []
      [
        "caml_acosh_float"
        "caml_acosh"
      ]
  signature_item (stdlib/stdlib.mli[576,21841+0]..[577,21907+25])
    Psig_value
    value_description "asinh" (stdlib/stdlib.mli[576,21841+9]..[576,21841+14]) (stdlib/stdlib.mli[576,21841+0]..[577,21907+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[578,21933+0]..[583,22065+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[578,21933+0]..[583,22065+2])
              Pexp_constant PConst_string(" Hyperbolic arc sine.  The argument and result range over the entire\n    real line.\n    Result is in radians.\n\n    @since 4.13.0\n",(stdlib/stdlib.mli[578,21933+0]..[583,22065+2]),None)
        ]
      core_type (stdlib/stdlib.mli[576,21841+17]..[576,21841+31])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[576,21841+17]..[576,21841+22])
          Ptyp_constr "float" (stdlib/stdlib.mli[576,21841+17]..[576,21841+22])
          []
        core_type (stdlib/stdlib.mli[576,21841+26]..[576,21841+31])
          Ptyp_constr "float" (stdlib/stdlib.mli[576,21841+26]..[576,21841+31])
          []
      [
        "caml_asinh_float"
        "caml_asinh"
      ]
  signature_item (stdlib/stdlib.mli[585,22069+0]..[586,22135+25])
    Psig_value
    value_description "atanh" (stdlib/stdlib.mli[585,22069+9]..[585,22069+14]) (stdlib/stdlib.mli[585,22069+0]..[586,22135+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[587,22161+0]..[592,22331+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[587,22161+0]..[592,22331+2])
              Pexp_constant PConst_string(" Hyperbolic arc tangent.  The argument must fall within the range\n    [[-1.0, 1.0]].\n    Result is in radians and ranges over the entire real line.\n\n    @since 4.13.0\n",(stdlib/stdlib.mli[587,22161+0]..[592,22331+2]),None)
        ]
      core_type (stdlib/stdlib.mli[585,22069+17]..[585,22069+31])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[585,22069+17]..[585,22069+22])
          Ptyp_constr "float" (stdlib/stdlib.mli[585,22069+17]..[585,22069+22])
          []
        core_type (stdlib/stdlib.mli[585,22069+26]..[585,22069+31])
          Ptyp_constr "float" (stdlib/stdlib.mli[585,22069+26]..[585,22069+31])
          []
      [
        "caml_atanh_float"
        "caml_atanh"
      ]
  signature_item (stdlib/stdlib.mli[594,22335+0]..[595,22393+25])
    Psig_value
    value_description "ceil" (stdlib/stdlib.mli[594,22335+9]..[594,22335+13]) (stdlib/stdlib.mli[594,22335+0]..[595,22393+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[596,22419+0]..[598,22531+41])
            Pstr_eval
            expression (stdlib/stdlib.mli[596,22419+0]..[598,22531+41])
              Pexp_constant PConst_string(" Round above to an integer value.\n    [ceil f] returns the least integer value greater than or equal to [f].\n    The result is returned as a float. ",(stdlib/stdlib.mli[596,22419+0]..[598,22531+41]),None)
        ]
      core_type (stdlib/stdlib.mli[594,22335+16]..[594,22335+30])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[594,22335+16]..[594,22335+21])
          Ptyp_constr "float" (stdlib/stdlib.mli[594,22335+16]..[594,22335+21])
          []
        core_type (stdlib/stdlib.mli[594,22335+25]..[594,22335+30])
          Ptyp_constr "float" (stdlib/stdlib.mli[594,22335+25]..[594,22335+30])
          []
      [
        "caml_ceil_float"
        "ceil"
      ]
  signature_item (stdlib/stdlib.mli[600,22574+0]..[601,22635+25])
    Psig_value
    value_description "floor" (stdlib/stdlib.mli[600,22574+9]..[600,22574+14]) (stdlib/stdlib.mli[600,22574+0]..[601,22635+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[602,22661+0]..[605,22778+41])
            Pstr_eval
            expression (stdlib/stdlib.mli[602,22661+0]..[605,22778+41])
              Pexp_constant PConst_string(" Round below to an integer value.\n    [floor f] returns the greatest integer value less than or\n    equal to [f].\n    The result is returned as a float. ",(stdlib/stdlib.mli[602,22661+0]..[605,22778+41]),None)
        ]
      core_type (stdlib/stdlib.mli[600,22574+17]..[600,22574+31])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[600,22574+17]..[600,22574+22])
          Ptyp_constr "float" (stdlib/stdlib.mli[600,22574+17]..[600,22574+22])
          []
        core_type (stdlib/stdlib.mli[600,22574+26]..[600,22574+31])
          Ptyp_constr "float" (stdlib/stdlib.mli[600,22574+26]..[600,22574+31])
          []
      [
        "caml_floor_float"
        "floor"
      ]
  signature_item (stdlib/stdlib.mli[607,22821+0]..[607,22821+49])
    Psig_value
    value_description "abs_float" (stdlib/stdlib.mli[607,22821+9]..[607,22821+18]) (stdlib/stdlib.mli[607,22821+0]..[607,22821+49])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[608,22871+0]..[608,22871+55])
            Pstr_eval
            expression (stdlib/stdlib.mli[608,22871+0]..[608,22871+55])
              Pexp_constant PConst_string(" [abs_float f] returns the absolute value of [f]. ",(stdlib/stdlib.mli[608,22871+0]..[608,22871+55]),None)
        ]
      core_type (stdlib/stdlib.mli[607,22821+21]..[607,22821+35])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[607,22821+21]..[607,22821+26])
          Ptyp_constr "float" (stdlib/stdlib.mli[607,22821+21]..[607,22821+26])
          []
        core_type (stdlib/stdlib.mli[607,22821+30]..[607,22821+35])
          Ptyp_constr "float" (stdlib/stdlib.mli[607,22821+30]..[607,22821+35])
          []
      [
        "%absfloat"
      ]
  signature_item (stdlib/stdlib.mli[610,22928+0]..[612,23030+41])
    Psig_value
    value_description "copysign" (stdlib/stdlib.mli[610,22928+9]..[610,22928+17]) (stdlib/stdlib.mli[610,22928+0]..[612,23030+41])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[613,23072+0]..[617,23291+19])
            Pstr_eval
            expression (stdlib/stdlib.mli[613,23072+0]..[617,23291+19])
              Pexp_constant PConst_string(" [copysign x y] returns a float whose absolute value is that of [x]\n  and whose sign is that of [y].  If [x] is [nan], returns [nan].\n  If [y] is [nan], returns either [x] or [-. x], but it is not\n  specified which.\n  @since 4.00.0  ",(stdlib/stdlib.mli[613,23072+0]..[617,23291+19]),None)
        ]
      core_type (stdlib/stdlib.mli[610,22928+20]..[610,22928+43])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[610,22928+20]..[610,22928+25])
          Ptyp_constr "float" (stdlib/stdlib.mli[610,22928+20]..[610,22928+25])
          []
        core_type (stdlib/stdlib.mli[610,22928+29]..[610,22928+43])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[610,22928+29]..[610,22928+34])
            Ptyp_constr "float" (stdlib/stdlib.mli[610,22928+29]..[610,22928+34])
            []
          core_type (stdlib/stdlib.mli[610,22928+38]..[610,22928+43])
            Ptyp_constr "float" (stdlib/stdlib.mli[610,22928+38]..[610,22928+43])
            []
      [
        "caml_copysign_float"
        "caml_copysign"
      ]
  signature_item (stdlib/stdlib.mli[619,23312+0]..[620,23384+25])
    Psig_value
    value_description "mod_float" (stdlib/stdlib.mli[619,23312+9]..[619,23312+18]) (stdlib/stdlib.mli[619,23312+0]..[620,23384+25])
      attribute "unboxed"
        []
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[621,23410+0]..[623,23531+66])
            Pstr_eval
            expression (stdlib/stdlib.mli[621,23410+0]..[623,23531+66])
              Pexp_constant PConst_string(" [mod_float a b] returns the remainder of [a] with respect to\n   [b].  The returned value is [a -. n *. b], where [n]\n   is the quotient [a /. b] rounded towards zero to an integer. ",(stdlib/stdlib.mli[621,23410+0]..[623,23531+66]),None)
        ]
      core_type (stdlib/stdlib.mli[619,23312+21]..[619,23312+44])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[619,23312+21]..[619,23312+26])
          Ptyp_constr "float" (stdlib/stdlib.mli[619,23312+21]..[619,23312+26])
          []
        core_type (stdlib/stdlib.mli[619,23312+30]..[619,23312+44])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[619,23312+30]..[619,23312+35])
            Ptyp_constr "float" (stdlib/stdlib.mli[619,23312+30]..[619,23312+35])
            []
          core_type (stdlib/stdlib.mli[619,23312+39]..[619,23312+44])
            Ptyp_constr "float" (stdlib/stdlib.mli[619,23312+39]..[619,23312+44])
            []
      [
        "caml_fmod_float"
        "fmod"
      ]
  signature_item (stdlib/stdlib.mli[625,23599+0]..[625,23599+58])
    Psig_value
    value_description "frexp" (stdlib/stdlib.mli[625,23599+9]..[625,23599+14]) (stdlib/stdlib.mli[625,23599+0]..[625,23599+58])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[626,23658+0]..[630,23871+45])
            Pstr_eval
            expression (stdlib/stdlib.mli[626,23658+0]..[630,23871+45])
              Pexp_constant PConst_string(" [frexp f] returns the pair of the significant\n   and the exponent of [f].  When [f] is zero, the\n   significant [x] and the exponent [n] of [f] are equal to\n   zero.  When [f] is non-zero, they are defined by\n   [f = x *. 2 ** n] and [0.5 <= x < 1.0]. ",(stdlib/stdlib.mli[626,23658+0]..[630,23871+45]),None)
        ]
      core_type (stdlib/stdlib.mli[625,23599+17]..[625,23599+37])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[625,23599+17]..[625,23599+22])
          Ptyp_constr "float" (stdlib/stdlib.mli[625,23599+17]..[625,23599+22])
          []
        core_type (stdlib/stdlib.mli[625,23599+26]..[625,23599+37])
          Ptyp_tuple
          [
            core_type (stdlib/stdlib.mli[625,23599+26]..[625,23599+31])
              Ptyp_constr "float" (stdlib/stdlib.mli[625,23599+26]..[625,23599+31])
              []
            core_type (stdlib/stdlib.mli[625,23599+34]..[625,23599+37])
              Ptyp_constr "int" (stdlib/stdlib.mli[625,23599+34]..[625,23599+37])
              []
          ]
      [
        "caml_frexp_float"
      ]
  signature_item (stdlib/stdlib.mli[633,23919+0]..[634,24000+59])
    Psig_value
    value_description "ldexp" (stdlib/stdlib.mli[633,23919+9]..[633,23919+14]) (stdlib/stdlib.mli[633,23919+0]..[634,24000+59])
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[635,24060+0]..[635,24060+41])
            Pstr_eval
            expression (stdlib/stdlib.mli[635,24060+0]..[635,24060+41])
              Pexp_constant PConst_string(" [ldexp x n] returns [x *. 2 ** n]. ",(stdlib/stdlib.mli[635,24060+0]..[635,24060+41]),None)
        ]
      core_type (stdlib/stdlib.mli[633,23919+17]..[633,23919+78])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[633,23919+18]..[633,23919+23])
          attribute "unboxed"
            []
          Ptyp_constr "float" (stdlib/stdlib.mli[633,23919+18]..[633,23919+23])
          []
        core_type (stdlib/stdlib.mli[633,23919+39]..[633,23919+78])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[633,23919+40]..[633,23919+43])
            attribute "untagged"
              []
            Ptyp_constr "int" (stdlib/stdlib.mli[633,23919+40]..[633,23919+43])
            []
          core_type (stdlib/stdlib.mli[633,23919+61]..[633,23919+66])
            attribute "unboxed"
              []
            Ptyp_constr "float" (stdlib/stdlib.mli[633,23919+61]..[633,23919+66])
            []
      [
        "caml_ldexp_float"
        "caml_ldexp_float_unboxed"
      ]
  signature_item (stdlib/stdlib.mli[637,24103+0]..[637,24103+58])
    Psig_value
    value_description "modf" (stdlib/stdlib.mli[637,24103+9]..[637,24103+13]) (stdlib/stdlib.mli[637,24103+0]..[637,24103+58])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[638,24162+0]..[639,24223+18])
            Pstr_eval
            expression (stdlib/stdlib.mli[638,24162+0]..[639,24223+18])
              Pexp_constant PConst_string(" [modf f] returns the pair of the fractional and integral\n   part of [f]. ",(stdlib/stdlib.mli[638,24162+0]..[639,24223+18]),None)
        ]
      core_type (stdlib/stdlib.mli[637,24103+16]..[637,24103+38])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[637,24103+16]..[637,24103+21])
          Ptyp_constr "float" (stdlib/stdlib.mli[637,24103+16]..[637,24103+21])
          []
        core_type (stdlib/stdlib.mli[637,24103+25]..[637,24103+38])
          Ptyp_tuple
          [
            core_type (stdlib/stdlib.mli[637,24103+25]..[637,24103+30])
              Ptyp_constr "float" (stdlib/stdlib.mli[637,24103+25]..[637,24103+30])
              []
            core_type (stdlib/stdlib.mli[637,24103+33]..[637,24103+38])
              Ptyp_constr "float" (stdlib/stdlib.mli[637,24103+33]..[637,24103+38])
              []
          ]
      [
        "caml_modf_float"
      ]
  signature_item (stdlib/stdlib.mli[641,24243+0]..[641,24243+45])
    Psig_value
    value_description "float" (stdlib/stdlib.mli[641,24243+9]..[641,24243+14]) (stdlib/stdlib.mli[641,24243+0]..[641,24243+45])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[642,24289+0]..[642,24289+38])
            Pstr_eval
            expression (stdlib/stdlib.mli[642,24289+0]..[642,24289+38])
              Pexp_constant PConst_string(" Same as {!Stdlib.float_of_int}. ",(stdlib/stdlib.mli[642,24289+0]..[642,24289+38]),None)
        ]
      core_type (stdlib/stdlib.mli[641,24243+17]..[641,24243+29])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[641,24243+17]..[641,24243+20])
          Ptyp_constr "int" (stdlib/stdlib.mli[641,24243+17]..[641,24243+20])
          []
        core_type (stdlib/stdlib.mli[641,24243+24]..[641,24243+29])
          Ptyp_constr "float" (stdlib/stdlib.mli[641,24243+24]..[641,24243+29])
          []
      [
        "%floatofint"
      ]
  signature_item (stdlib/stdlib.mli[644,24329+0]..[644,24329+52])
    Psig_value
    value_description "float_of_int" (stdlib/stdlib.mli[644,24329+9]..[644,24329+21]) (stdlib/stdlib.mli[644,24329+0]..[644,24329+52])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[645,24382+0]..[645,24382+44])
            Pstr_eval
            expression (stdlib/stdlib.mli[645,24382+0]..[645,24382+44])
              Pexp_constant PConst_string(" Convert an integer to floating-point. ",(stdlib/stdlib.mli[645,24382+0]..[645,24382+44]),None)
        ]
      core_type (stdlib/stdlib.mli[644,24329+24]..[644,24329+36])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[644,24329+24]..[644,24329+27])
          Ptyp_constr "int" (stdlib/stdlib.mli[644,24329+24]..[644,24329+27])
          []
        core_type (stdlib/stdlib.mli[644,24329+31]..[644,24329+36])
          Ptyp_constr "float" (stdlib/stdlib.mli[644,24329+31]..[644,24329+36])
          []
      [
        "%floatofint"
      ]
  signature_item (stdlib/stdlib.mli[647,24428+0]..[647,24428+48])
    Psig_value
    value_description "truncate" (stdlib/stdlib.mli[647,24428+9]..[647,24428+17]) (stdlib/stdlib.mli[647,24428+0]..[647,24428+48])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[648,24477+0]..[648,24477+38])
            Pstr_eval
            expression (stdlib/stdlib.mli[648,24477+0]..[648,24477+38])
              Pexp_constant PConst_string(" Same as {!Stdlib.int_of_float}. ",(stdlib/stdlib.mli[648,24477+0]..[648,24477+38]),None)
        ]
      core_type (stdlib/stdlib.mli[647,24428+20]..[647,24428+32])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[647,24428+20]..[647,24428+25])
          Ptyp_constr "float" (stdlib/stdlib.mli[647,24428+20]..[647,24428+25])
          []
        core_type (stdlib/stdlib.mli[647,24428+29]..[647,24428+32])
          Ptyp_constr "int" (stdlib/stdlib.mli[647,24428+29]..[647,24428+32])
          []
      [
        "%intoffloat"
      ]
  signature_item (stdlib/stdlib.mli[650,24517+0]..[650,24517+52])
    Psig_value
    value_description "int_of_float" (stdlib/stdlib.mli[650,24517+9]..[650,24517+21]) (stdlib/stdlib.mli[650,24517+0]..[650,24517+52])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[651,24570+0]..[653,24705+38])
            Pstr_eval
            expression (stdlib/stdlib.mli[651,24570+0]..[653,24705+38])
              Pexp_constant PConst_string(" Truncate the given floating-point number to an integer.\n   The result is unspecified if the argument is [nan] or falls outside the\n   range of representable integers. ",(stdlib/stdlib.mli[651,24570+0]..[653,24705+38]),None)
        ]
      core_type (stdlib/stdlib.mli[650,24517+24]..[650,24517+36])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[650,24517+24]..[650,24517+29])
          Ptyp_constr "float" (stdlib/stdlib.mli[650,24517+24]..[650,24517+29])
          []
        core_type (stdlib/stdlib.mli[650,24517+33]..[650,24517+36])
          Ptyp_constr "int" (stdlib/stdlib.mli[650,24517+33]..[650,24517+36])
          []
      [
        "%intoffloat"
      ]
  signature_item (stdlib/stdlib.mli[655,24745+0]..[655,24745+20])
    Psig_value
    value_description "infinity" (stdlib/stdlib.mli[655,24745+4]..[655,24745+12]) (stdlib/stdlib.mli[655,24745+0]..[655,24745+20])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[656,24766+0]..[656,24766+25])
            Pstr_eval
            expression (stdlib/stdlib.mli[656,24766+0]..[656,24766+25])
              Pexp_constant PConst_string(" Positive infinity. ",(stdlib/stdlib.mli[656,24766+0]..[656,24766+25]),None)
        ]
      core_type (stdlib/stdlib.mli[655,24745+15]..[655,24745+20])
        Ptyp_constr "float" (stdlib/stdlib.mli[655,24745+15]..[655,24745+20])
        []
      []
  signature_item (stdlib/stdlib.mli[658,24793+0]..[658,24793+24])
    Psig_value
    value_description "neg_infinity" (stdlib/stdlib.mli[658,24793+4]..[658,24793+16]) (stdlib/stdlib.mli[658,24793+0]..[658,24793+24])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[659,24818+0]..[659,24818+25])
            Pstr_eval
            expression (stdlib/stdlib.mli[659,24818+0]..[659,24818+25])
              Pexp_constant PConst_string(" Negative infinity. ",(stdlib/stdlib.mli[659,24818+0]..[659,24818+25]),None)
        ]
      core_type (stdlib/stdlib.mli[658,24793+19]..[658,24793+24])
        Ptyp_constr "float" (stdlib/stdlib.mli[658,24793+19]..[658,24793+24])
        []
      []
  signature_item (stdlib/stdlib.mli[661,24845+0]..[661,24845+15])
    Psig_value
    value_description "nan" (stdlib/stdlib.mli[661,24845+4]..[661,24845+7]) (stdlib/stdlib.mli[661,24845+0]..[661,24845+15])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[662,24861+0]..[667,25186+49])
            Pstr_eval
            expression (stdlib/stdlib.mli[662,24861+0]..[667,25186+49])
              Pexp_constant PConst_string(" A special floating-point value denoting the result of an\n   undefined operation such as [0.0 /. 0.0].  Stands for\n   'not a number'.  Any floating-point operation with [nan] as\n   argument returns [nan] as result.  As for floating-point comparisons,\n   [=], [<], [<=], [>] and [>=] return [false] and [<>] returns [true]\n   if one or both of their arguments is [nan]. ",(stdlib/stdlib.mli[662,24861+0]..[667,25186+49]),None)
        ]
      core_type (stdlib/stdlib.mli[661,24845+10]..[661,24845+15])
        Ptyp_constr "float" (stdlib/stdlib.mli[661,24845+10]..[661,24845+15])
        []
      []
  signature_item (stdlib/stdlib.mli[669,25237+0]..[669,25237+21])
    Psig_value
    value_description "max_float" (stdlib/stdlib.mli[669,25237+4]..[669,25237+13]) (stdlib/stdlib.mli[669,25237+0]..[669,25237+21])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[670,25259+0]..[670,25259+57])
            Pstr_eval
            expression (stdlib/stdlib.mli[670,25259+0]..[670,25259+57])
              Pexp_constant PConst_string(" The largest positive finite value of type [float]. ",(stdlib/stdlib.mli[670,25259+0]..[670,25259+57]),None)
        ]
      core_type (stdlib/stdlib.mli[669,25237+16]..[669,25237+21])
        Ptyp_constr "float" (stdlib/stdlib.mli[669,25237+16]..[669,25237+21])
        []
      []
  signature_item (stdlib/stdlib.mli[672,25318+0]..[672,25318+21])
    Psig_value
    value_description "min_float" (stdlib/stdlib.mli[672,25318+4]..[672,25318+13]) (stdlib/stdlib.mli[672,25318+0]..[672,25318+21])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[673,25340+0]..[673,25340+79])
            Pstr_eval
            expression (stdlib/stdlib.mli[673,25340+0]..[673,25340+79])
              Pexp_constant PConst_string(" The smallest positive, non-zero, non-denormalized value of type [float]. ",(stdlib/stdlib.mli[673,25340+0]..[673,25340+79]),None)
        ]
      core_type (stdlib/stdlib.mli[672,25318+16]..[672,25318+21])
        Ptyp_constr "float" (stdlib/stdlib.mli[672,25318+16]..[672,25318+21])
        []
      []
  signature_item (stdlib/stdlib.mli[675,25421+0]..[675,25421+25])
    Psig_value
    value_description "epsilon_float" (stdlib/stdlib.mli[675,25421+4]..[675,25421+17]) (stdlib/stdlib.mli[675,25421+0]..[675,25421+25])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[676,25447+0]..[677,25519+48])
            Pstr_eval
            expression (stdlib/stdlib.mli[676,25447+0]..[677,25519+48])
              Pexp_constant PConst_string(" The difference between [1.0] and the smallest exactly representable\n    floating-point number greater than [1.0]. ",(stdlib/stdlib.mli[676,25447+0]..[677,25519+48]),None)
        ]
      core_type (stdlib/stdlib.mli[675,25421+20]..[675,25421+25])
        Ptyp_constr "float" (stdlib/stdlib.mli[675,25421+20]..[675,25421+25])
        []
      []
  signature_item (stdlib/stdlib.mli[679,25569+0]..[684,25851+10])
    Psig_type Rec
    [
      type_declaration "fpclass" (stdlib/stdlib.mli[679,25569+5]..[679,25569+12]) (stdlib/stdlib.mli[679,25569+0]..[684,25851+10])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/stdlib.mli[685,25929+0]..[686,25994+44])
              Pstr_eval
              expression (stdlib/stdlib.mli[685,25929+0]..[686,25994+44])
                Pexp_constant PConst_string(" The five classes of floating-point numbers, as determined by\n   the {!Stdlib.classify_float} function. ",(stdlib/stdlib.mli[685,25929+0]..[686,25994+44]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (stdlib/stdlib.mli[680,25584+4]..[680,25584+13])
                "FP_normal" (stdlib/stdlib.mli[680,25584+4]..[680,25584+13])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/stdlib.mli[680,25584+24]..[680,25584+63])
                      Pstr_eval
                      expression (stdlib/stdlib.mli[680,25584+24]..[680,25584+63])
                        Pexp_constant PConst_string(" Normal number, none of the below ",(stdlib/stdlib.mli[680,25584+24]..[680,25584+63]),None)
                  ]
                []
                None
              (stdlib/stdlib.mli[681,25648+2]..[681,25648+16])
                "FP_subnormal" (stdlib/stdlib.mli[681,25648+4]..[681,25648+16])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/stdlib.mli[681,25648+24]..[681,25648+78])
                      Pstr_eval
                      expression (stdlib/stdlib.mli[681,25648+24]..[681,25648+78])
                        Pexp_constant PConst_string(" Number very close to 0.0, has reduced precision ",(stdlib/stdlib.mli[681,25648+24]..[681,25648+78]),None)
                  ]
                []
                None
              (stdlib/stdlib.mli[682,25727+2]..[682,25727+11])
                "FP_zero" (stdlib/stdlib.mli[682,25727+4]..[682,25727+11])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/stdlib.mli[682,25727+24]..[682,25727+52])
                      Pstr_eval
                      expression (stdlib/stdlib.mli[682,25727+24]..[682,25727+52])
                        Pexp_constant PConst_string(" Number is 0.0 or -0.0 ",(stdlib/stdlib.mli[682,25727+24]..[682,25727+52]),None)
                  ]
                []
                None
              (stdlib/stdlib.mli[683,25780+2]..[683,25780+15])
                "FP_infinite" (stdlib/stdlib.mli[683,25780+4]..[683,25780+15])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/stdlib.mli[683,25780+24]..[683,25780+70])
                      Pstr_eval
                      expression (stdlib/stdlib.mli[683,25780+24]..[683,25780+70])
                        Pexp_constant PConst_string(" Number is positive or negative infinity ",(stdlib/stdlib.mli[683,25780+24]..[683,25780+70]),None)
                  ]
                []
                None
              (stdlib/stdlib.mli[684,25851+2]..[684,25851+10])
                "FP_nan" (stdlib/stdlib.mli[684,25851+4]..[684,25851+10])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/stdlib.mli[684,25851+24]..[684,25851+77])
                      Pstr_eval
                      expression (stdlib/stdlib.mli[684,25851+24]..[684,25851+77])
                        Pexp_constant PConst_string(" Not a number: result of an undefined operation ",(stdlib/stdlib.mli[684,25851+24]..[684,25851+77]),None)
                  ]
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (stdlib/stdlib.mli[688,26040+0]..[689,26098+65])
    Psig_value
    value_description "classify_float" (stdlib/stdlib.mli[688,26040+9]..[688,26040+23]) (stdlib/stdlib.mli[688,26040+0]..[689,26098+65])
      attribute "noalloc"
        []
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[690,26164+0]..[691,26221+57])
            Pstr_eval
            expression (stdlib/stdlib.mli[690,26164+0]..[691,26221+57])
              Pexp_constant PConst_string(" Return the class of the given floating-point number:\n   normal, subnormal, zero, infinite, or not a number. ",(stdlib/stdlib.mli[690,26164+0]..[691,26221+57]),None)
        ]
      core_type (stdlib/stdlib.mli[688,26040+26]..[688,26040+55])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[688,26040+27]..[688,26040+32])
          attribute "unboxed"
            []
          Ptyp_constr "float" (stdlib/stdlib.mli[688,26040+27]..[688,26040+32])
          []
        core_type (stdlib/stdlib.mli[688,26040+48]..[688,26040+55])
          Ptyp_constr "fpclass" (stdlib/stdlib.mli[688,26040+48]..[688,26040+55])
          []
      [
        "caml_classify_float"
        "caml_classify_float_unboxed"
      ]
  signature_item (stdlib/stdlib.mli[694,26281+0]..[697,26368+2])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[694,26281+0]..[697,26368+2])
        Pstr_eval
        expression (stdlib/stdlib.mli[694,26281+0]..[697,26368+2])
          Pexp_constant PConst_string(" {1 String operations}\n\n   More string operations are provided in module {!String}.\n",(stdlib/stdlib.mli[694,26281+0]..[697,26368+2]),None)
    ]
  signature_item (stdlib/stdlib.mli[699,26372+0]..[699,26372+38])
    Psig_value
    value_description "^" (stdlib/stdlib.mli[699,26372+4]..[699,26372+9]) (stdlib/stdlib.mli[699,26372+0]..[699,26372+38])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[700,26411+0]..[705,26613+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[700,26411+0]..[705,26613+2])
              Pexp_constant PConst_string(" String concatenation.\n    Right-associative operator, see {!Ocaml_operators} for more information.\n\n    @raise Invalid_argument if the result is longer then\n    than {!Sys.max_string_length} bytes.\n",(stdlib/stdlib.mli[700,26411+0]..[705,26613+2]),None)
        ]
      core_type (stdlib/stdlib.mli[699,26372+12]..[699,26372+38])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[699,26372+12]..[699,26372+18])
          Ptyp_constr "string" (stdlib/stdlib.mli[699,26372+12]..[699,26372+18])
          []
        core_type (stdlib/stdlib.mli[699,26372+22]..[699,26372+38])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[699,26372+22]..[699,26372+28])
            Ptyp_constr "string" (stdlib/stdlib.mli[699,26372+22]..[699,26372+28])
            []
          core_type (stdlib/stdlib.mli[699,26372+32]..[699,26372+38])
            Ptyp_constr "string" (stdlib/stdlib.mli[699,26372+32]..[699,26372+38])
            []
      []
  signature_item (stdlib/stdlib.mli[707,26617+0]..[710,26708+2])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[707,26617+0]..[710,26708+2])
        Pstr_eval
        expression (stdlib/stdlib.mli[707,26617+0]..[710,26708+2])
          Pexp_constant PConst_string(" {1 Character operations}\n\n   More character operations are provided in module {!Char}.\n",(stdlib/stdlib.mli[707,26617+0]..[710,26708+2]),None)
    ]
  signature_item (stdlib/stdlib.mli[712,26712+0]..[712,26712+48])
    Psig_value
    value_description "int_of_char" (stdlib/stdlib.mli[712,26712+9]..[712,26712+20]) (stdlib/stdlib.mli[712,26712+0]..[712,26712+48])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[713,26761+0]..[713,26761+45])
            Pstr_eval
            expression (stdlib/stdlib.mli[713,26761+0]..[713,26761+45])
              Pexp_constant PConst_string(" Return the ASCII code of the argument. ",(stdlib/stdlib.mli[713,26761+0]..[713,26761+45]),None)
        ]
      core_type (stdlib/stdlib.mli[712,26712+23]..[712,26712+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[712,26712+23]..[712,26712+27])
          Ptyp_constr "char" (stdlib/stdlib.mli[712,26712+23]..[712,26712+27])
          []
        core_type (stdlib/stdlib.mli[712,26712+31]..[712,26712+34])
          Ptyp_constr "int" (stdlib/stdlib.mli[712,26712+31]..[712,26712+34])
          []
      [
        "%identity"
      ]
  signature_item (stdlib/stdlib.mli[715,26808+0]..[715,26808+29])
    Psig_value
    value_description "char_of_int" (stdlib/stdlib.mli[715,26808+4]..[715,26808+15]) (stdlib/stdlib.mli[715,26808+0]..[715,26808+29])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[716,26838+0]..[718,26936+31])
            Pstr_eval
            expression (stdlib/stdlib.mli[716,26838+0]..[718,26936+31])
              Pexp_constant PConst_string(" Return the character with the given ASCII code.\n   @raise Invalid_argument if the argument is\n   outside the range 0--255. ",(stdlib/stdlib.mli[716,26838+0]..[718,26936+31]),None)
        ]
      core_type (stdlib/stdlib.mli[715,26808+18]..[715,26808+29])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[715,26808+18]..[715,26808+21])
          Ptyp_constr "int" (stdlib/stdlib.mli[715,26808+18]..[715,26808+21])
          []
        core_type (stdlib/stdlib.mli[715,26808+25]..[715,26808+29])
          Ptyp_constr "char" (stdlib/stdlib.mli[715,26808+25]..[715,26808+29])
          []
      []
  signature_item (stdlib/stdlib.mli[721,26970+0]..[721,26970+26])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[721,26970+0]..[721,26970+26])
        Pstr_eval
        expression (stdlib/stdlib.mli[721,26970+0]..[721,26970+26])
          Pexp_constant PConst_string(" {1 Unit operations} ",(stdlib/stdlib.mli[721,26970+0]..[721,26970+26]),None)
    ]
  signature_item (stdlib/stdlib.mli[723,26998+0]..[723,26998+40])
    Psig_value
    value_description "ignore" (stdlib/stdlib.mli[723,26998+9]..[723,26998+15]) (stdlib/stdlib.mli[723,26998+0]..[723,26998+40])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[724,27039+0]..[729,27308+25])
            Pstr_eval
            expression (stdlib/stdlib.mli[724,27039+0]..[729,27308+25])
              Pexp_constant PConst_string(" Discard the value of its argument and return [()].\n   For instance, [ignore(f x)] discards the result of\n   the side-effecting function [f].  It is equivalent to\n   [f x; ()], except that the latter may generate a\n   compiler warning; writing [ignore(f x)] instead\n   avoids the warning. ",(stdlib/stdlib.mli[724,27039+0]..[729,27308+25]),None)
        ]
      core_type (stdlib/stdlib.mli[723,26998+18]..[723,26998+28])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[723,26998+18]..[723,26998+20])
          Ptyp_var a
        core_type (stdlib/stdlib.mli[723,26998+24]..[723,26998+28])
          Ptyp_constr "unit" (stdlib/stdlib.mli[723,26998+24]..[723,26998+28])
          []
      [
        "%ignore"
      ]
  signature_item (stdlib/stdlib.mli[732,27336+0]..[732,27336+38])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[732,27336+0]..[732,27336+38])
        Pstr_eval
        expression (stdlib/stdlib.mli[732,27336+0]..[732,27336+38])
          Pexp_constant PConst_string(" {1 String conversion functions} ",(stdlib/stdlib.mli[732,27336+0]..[732,27336+38]),None)
    ]
  signature_item (stdlib/stdlib.mli[734,27376+0]..[734,27376+35])
    Psig_value
    value_description "string_of_bool" (stdlib/stdlib.mli[734,27376+4]..[734,27376+18]) (stdlib/stdlib.mli[734,27376+0]..[734,27376+35])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[735,27412+0]..[737,27546+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[735,27412+0]..[737,27546+2])
              Pexp_constant PConst_string(" Return the string representation of a boolean. As the returned values\n   may be shared, the user should not modify them directly.\n",(stdlib/stdlib.mli[735,27412+0]..[737,27546+2]),None)
        ]
      core_type (stdlib/stdlib.mli[734,27376+21]..[734,27376+35])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[734,27376+21]..[734,27376+25])
          Ptyp_constr "bool" (stdlib/stdlib.mli[734,27376+21]..[734,27376+25])
          []
        core_type (stdlib/stdlib.mli[734,27376+29]..[734,27376+35])
          Ptyp_constr "string" (stdlib/stdlib.mli[734,27376+29]..[734,27376+35])
          []
      []
  signature_item (stdlib/stdlib.mli[739,27550+0]..[739,27550+45])
    Psig_value
    value_description "bool_of_string_opt" (stdlib/stdlib.mli[739,27550+4]..[739,27550+22]) (stdlib/stdlib.mli[739,27550+0]..[739,27550+45])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[740,27596+0]..[744,27716+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[740,27596+0]..[744,27716+2])
              Pexp_constant PConst_string(" Convert the given string to a boolean.\n\n   Return [None] if the string is not [\"true\"] or [\"false\"].\n   @since 4.05\n",(stdlib/stdlib.mli[740,27596+0]..[744,27716+2]),None)
        ]
      core_type (stdlib/stdlib.mli[739,27550+24]..[739,27550+45])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[739,27550+24]..[739,27550+30])
          Ptyp_constr "string" (stdlib/stdlib.mli[739,27550+24]..[739,27550+30])
          []
        core_type (stdlib/stdlib.mli[739,27550+34]..[739,27550+45])
          Ptyp_constr "option" (stdlib/stdlib.mli[739,27550+39]..[739,27550+45])
          [
            core_type (stdlib/stdlib.mli[739,27550+34]..[739,27550+38])
              Ptyp_constr "bool" (stdlib/stdlib.mli[739,27550+34]..[739,27550+38])
              []
          ]
      []
  signature_item (stdlib/stdlib.mli[746,27720+0]..[746,27720+35])
    Psig_value
    value_description "bool_of_string" (stdlib/stdlib.mli[746,27720+4]..[746,27720+18]) (stdlib/stdlib.mli[746,27720+0]..[746,27720+35])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[747,27756+0]..[748,27808+70])
            Pstr_eval
            expression (stdlib/stdlib.mli[747,27756+0]..[748,27808+70])
              Pexp_constant PConst_string(" Same as {!Stdlib.bool_of_string_opt}, but raise\n   [Invalid_argument \"bool_of_string\"] instead of returning [None]. ",(stdlib/stdlib.mli[747,27756+0]..[748,27808+70]),None)
        ]
      core_type (stdlib/stdlib.mli[746,27720+21]..[746,27720+35])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[746,27720+21]..[746,27720+27])
          Ptyp_constr "string" (stdlib/stdlib.mli[746,27720+21]..[746,27720+27])
          []
        core_type (stdlib/stdlib.mli[746,27720+31]..[746,27720+35])
          Ptyp_constr "bool" (stdlib/stdlib.mli[746,27720+31]..[746,27720+35])
          []
      []
  signature_item (stdlib/stdlib.mli[750,27880+0]..[750,27880+33])
    Psig_value
    value_description "string_of_int" (stdlib/stdlib.mli[750,27880+4]..[750,27880+17]) (stdlib/stdlib.mli[750,27880+0]..[750,27880+33])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[751,27914+0]..[751,27914+66])
            Pstr_eval
            expression (stdlib/stdlib.mli[751,27914+0]..[751,27914+66])
              Pexp_constant PConst_string(" Return the string representation of an integer, in decimal. ",(stdlib/stdlib.mli[751,27914+0]..[751,27914+66]),None)
        ]
      core_type (stdlib/stdlib.mli[750,27880+20]..[750,27880+33])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[750,27880+20]..[750,27880+23])
          Ptyp_constr "int" (stdlib/stdlib.mli[750,27880+20]..[750,27880+23])
          []
        core_type (stdlib/stdlib.mli[750,27880+27]..[750,27880+33])
          Ptyp_constr "string" (stdlib/stdlib.mli[750,27880+27]..[750,27880+33])
          []
      []
  signature_item (stdlib/stdlib.mli[753,27982+0]..[753,27982+43])
    Psig_value
    value_description "int_of_string_opt" (stdlib/stdlib.mli[753,27982+4]..[753,27982+21]) (stdlib/stdlib.mli[753,27982+0]..[753,27982+43])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[754,28026+0]..[772,28786+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[754,28026+0]..[772,28786+2])
              Pexp_constant PConst_string(" Convert the given string to an integer.\n   The string is read in decimal (by default, or if the string\n   begins with [0u]), in hexadecimal (if it begins with [0x] or\n   [0X]), in octal (if it begins with [0o] or [0O]), or in binary\n   (if it begins with [0b] or [0B]).\n\n   The [0u] prefix reads the input as an unsigned integer in the range\n   [[0, 2*max_int+1]].  If the input exceeds {!max_int}\n   it is converted to the signed integer\n   [min_int + input - max_int - 1].\n\n   The [_] (underscore) character can appear anywhere in the string\n   and is ignored.\n\n   Return [None] if the given string is not a valid representation of an\n   integer, or if the integer represented exceeds the range of integers\n   representable in type [int].\n   @since 4.05\n",(stdlib/stdlib.mli[754,28026+0]..[772,28786+2]),None)
        ]
      core_type (stdlib/stdlib.mli[753,27982+23]..[753,27982+43])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[753,27982+23]..[753,27982+29])
          Ptyp_constr "string" (stdlib/stdlib.mli[753,27982+23]..[753,27982+29])
          []
        core_type (stdlib/stdlib.mli[753,27982+33]..[753,27982+43])
          Ptyp_constr "option" (stdlib/stdlib.mli[753,27982+37]..[753,27982+43])
          [
            core_type (stdlib/stdlib.mli[753,27982+33]..[753,27982+36])
              Ptyp_constr "int" (stdlib/stdlib.mli[753,27982+33]..[753,27982+36])
              []
          ]
      []
  signature_item (stdlib/stdlib.mli[774,28790+0]..[774,28790+61])
    Psig_value
    value_description "int_of_string" (stdlib/stdlib.mli[774,28790+9]..[774,28790+22]) (stdlib/stdlib.mli[774,28790+0]..[774,28790+61])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[775,28852+0]..[776,28903+60])
            Pstr_eval
            expression (stdlib/stdlib.mli[775,28852+0]..[776,28903+60])
              Pexp_constant PConst_string(" Same as {!Stdlib.int_of_string_opt}, but raise\n   [Failure \"int_of_string\"] instead of returning [None]. ",(stdlib/stdlib.mli[775,28852+0]..[776,28903+60]),None)
        ]
      core_type (stdlib/stdlib.mli[774,28790+25]..[774,28790+38])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[774,28790+25]..[774,28790+31])
          Ptyp_constr "string" (stdlib/stdlib.mli[774,28790+25]..[774,28790+31])
          []
        core_type (stdlib/stdlib.mli[774,28790+35]..[774,28790+38])
          Ptyp_constr "int" (stdlib/stdlib.mli[774,28790+35]..[774,28790+38])
          []
      [
        "caml_int_of_string"
      ]
  signature_item (stdlib/stdlib.mli[778,28965+0]..[778,28965+37])
    Psig_value
    value_description "string_of_float" (stdlib/stdlib.mli[778,28965+4]..[778,28965+19]) (stdlib/stdlib.mli[778,28965+0]..[778,28965+37])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[779,29003+0]..[779,29003+67])
            Pstr_eval
            expression (stdlib/stdlib.mli[779,29003+0]..[779,29003+67])
              Pexp_constant PConst_string(" Return the string representation of a floating-point number. ",(stdlib/stdlib.mli[779,29003+0]..[779,29003+67]),None)
        ]
      core_type (stdlib/stdlib.mli[778,28965+22]..[778,28965+37])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[778,28965+22]..[778,28965+27])
          Ptyp_constr "float" (stdlib/stdlib.mli[778,28965+22]..[778,28965+27])
          []
        core_type (stdlib/stdlib.mli[778,28965+31]..[778,28965+37])
          Ptyp_constr "string" (stdlib/stdlib.mli[778,28965+31]..[778,28965+37])
          []
      []
  signature_item (stdlib/stdlib.mli[781,29072+0]..[781,29072+47])
    Psig_value
    value_description "float_of_string_opt" (stdlib/stdlib.mli[781,29072+4]..[781,29072+23]) (stdlib/stdlib.mli[781,29072+0]..[781,29072+47])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[782,29120+0]..[803,29988+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[782,29120+0]..[803,29988+2])
              Pexp_constant PConst_string(" Convert the given string to a float.  The string is read in decimal\n   (by default) or in hexadecimal (marked by [0x] or [0X]).\n\n   The format of decimal floating-point numbers is\n   [ [-] dd.ddd (e|E) [+|-] dd ], where [d] stands for a decimal digit.\n\n   The format of hexadecimal floating-point numbers is\n   [ [-] 0(x|X) hh.hhh (p|P) [+|-] dd ], where [h] stands for an\n   hexadecimal digit and [d] for a decimal digit.\n\n   In both cases, at least one of the integer and fractional parts must be\n   given; the exponent part is optional.\n\n   The [_] (underscore) character can appear anywhere in the string\n   and is ignored.\n\n   Depending on the execution platforms, other representations of\n   floating-point numbers can be accepted, but should not be relied upon.\n\n   Return [None] if the given string is not a valid representation of a float.\n   @since 4.05\n",(stdlib/stdlib.mli[782,29120+0]..[803,29988+2]),None)
        ]
      core_type (stdlib/stdlib.mli[781,29072+25]..[781,29072+47])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[781,29072+25]..[781,29072+31])
          Ptyp_constr "string" (stdlib/stdlib.mli[781,29072+25]..[781,29072+31])
          []
        core_type (stdlib/stdlib.mli[781,29072+35]..[781,29072+47])
          Ptyp_constr "option" (stdlib/stdlib.mli[781,29072+41]..[781,29072+47])
          [
            core_type (stdlib/stdlib.mli[781,29072+35]..[781,29072+40])
              Ptyp_constr "float" (stdlib/stdlib.mli[781,29072+35]..[781,29072+40])
              []
          ]
      []
  signature_item (stdlib/stdlib.mli[805,29992+0]..[805,29992+67])
    Psig_value
    value_description "float_of_string" (stdlib/stdlib.mli[805,29992+9]..[805,29992+24]) (stdlib/stdlib.mli[805,29992+0]..[805,29992+67])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[806,30060+0]..[807,30113+62])
            Pstr_eval
            expression (stdlib/stdlib.mli[806,30060+0]..[807,30113+62])
              Pexp_constant PConst_string(" Same as {!Stdlib.float_of_string_opt}, but raise\n   [Failure \"float_of_string\"] instead of returning [None]. ",(stdlib/stdlib.mli[806,30060+0]..[807,30113+62]),None)
        ]
      core_type (stdlib/stdlib.mli[805,29992+27]..[805,29992+42])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[805,29992+27]..[805,29992+33])
          Ptyp_constr "string" (stdlib/stdlib.mli[805,29992+27]..[805,29992+33])
          []
        core_type (stdlib/stdlib.mli[805,29992+37]..[805,29992+42])
          Ptyp_constr "float" (stdlib/stdlib.mli[805,29992+37]..[805,29992+42])
          []
      [
        "caml_float_of_string"
      ]
  signature_item (stdlib/stdlib.mli[809,30177+0]..[809,30177+26])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[809,30177+0]..[809,30177+26])
        Pstr_eval
        expression (stdlib/stdlib.mli[809,30177+0]..[809,30177+26])
          Pexp_constant PConst_string(" {1 Pair operations} ",(stdlib/stdlib.mli[809,30177+0]..[809,30177+26]),None)
    ]
  signature_item (stdlib/stdlib.mli[811,30205+0]..[811,30205+40])
    Psig_value
    value_description "fst" (stdlib/stdlib.mli[811,30205+9]..[811,30205+12]) (stdlib/stdlib.mli[811,30205+0]..[811,30205+40])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[812,30246+0]..[812,30246+44])
            Pstr_eval
            expression (stdlib/stdlib.mli[812,30246+0]..[812,30246+44])
              Pexp_constant PConst_string(" Return the first component of a pair. ",(stdlib/stdlib.mli[812,30246+0]..[812,30246+44]),None)
        ]
      core_type (stdlib/stdlib.mli[811,30205+15]..[811,30205+28])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[811,30205+15]..[811,30205+22])
          Ptyp_tuple
          [
            core_type (stdlib/stdlib.mli[811,30205+15]..[811,30205+17])
              Ptyp_var a
            core_type (stdlib/stdlib.mli[811,30205+20]..[811,30205+22])
              Ptyp_var b
          ]
        core_type (stdlib/stdlib.mli[811,30205+26]..[811,30205+28])
          Ptyp_var a
      [
        "%field0"
      ]
  signature_item (stdlib/stdlib.mli[814,30292+0]..[814,30292+40])
    Psig_value
    value_description "snd" (stdlib/stdlib.mli[814,30292+9]..[814,30292+12]) (stdlib/stdlib.mli[814,30292+0]..[814,30292+40])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[815,30333+0]..[815,30333+45])
            Pstr_eval
            expression (stdlib/stdlib.mli[815,30333+0]..[815,30333+45])
              Pexp_constant PConst_string(" Return the second component of a pair. ",(stdlib/stdlib.mli[815,30333+0]..[815,30333+45]),None)
        ]
      core_type (stdlib/stdlib.mli[814,30292+15]..[814,30292+28])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[814,30292+15]..[814,30292+22])
          Ptyp_tuple
          [
            core_type (stdlib/stdlib.mli[814,30292+15]..[814,30292+17])
              Ptyp_var a
            core_type (stdlib/stdlib.mli[814,30292+20]..[814,30292+22])
              Ptyp_var b
          ]
        core_type (stdlib/stdlib.mli[814,30292+26]..[814,30292+28])
          Ptyp_var b
      [
        "%field1"
      ]
  signature_item (stdlib/stdlib.mli[818,30381+0]..[821,30462+2])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[818,30381+0]..[821,30462+2])
        Pstr_eval
        expression (stdlib/stdlib.mli[818,30381+0]..[821,30462+2])
          Pexp_constant PConst_string(" {1 List operations}\n\n   More list operations are provided in module {!List}.\n",(stdlib/stdlib.mli[818,30381+0]..[821,30462+2]),None)
    ]
  signature_item (stdlib/stdlib.mli[823,30466+0]..[823,30466+41])
    Psig_value
    value_description "@" (stdlib/stdlib.mli[823,30466+4]..[823,30466+9]) (stdlib/stdlib.mli[823,30466+0]..[823,30466+41])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[824,30508+0]..[826,30659+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[824,30508+0]..[826,30659+2])
              Pexp_constant PConst_string(" List concatenation.  Not tail-recursive (length of the first argument).\n  Right-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[824,30508+0]..[826,30659+2]),None)
        ]
      core_type (stdlib/stdlib.mli[823,30466+12]..[823,30466+41])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[823,30466+12]..[823,30466+19])
          Ptyp_constr "list" (stdlib/stdlib.mli[823,30466+15]..[823,30466+19])
          [
            core_type (stdlib/stdlib.mli[823,30466+12]..[823,30466+14])
              Ptyp_var a
          ]
        core_type (stdlib/stdlib.mli[823,30466+23]..[823,30466+41])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[823,30466+23]..[823,30466+30])
            Ptyp_constr "list" (stdlib/stdlib.mli[823,30466+26]..[823,30466+30])
            [
              core_type (stdlib/stdlib.mli[823,30466+23]..[823,30466+25])
                Ptyp_var a
            ]
          core_type (stdlib/stdlib.mli[823,30466+34]..[823,30466+41])
            Ptyp_constr "list" (stdlib/stdlib.mli[823,30466+37]..[823,30466+41])
            [
              core_type (stdlib/stdlib.mli[823,30466+34]..[823,30466+36])
                Ptyp_var a
            ]
      []
  signature_item (stdlib/stdlib.mli[828,30663+0]..[830,30759+30])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[828,30663+0]..[830,30759+30])
        Pstr_eval
        expression (stdlib/stdlib.mli[828,30663+0]..[830,30759+30])
          Pexp_constant PConst_string(" {1 Input/output}\n    Note: all input/output functions can raise [Sys_error] when the system\n    calls they invoke fail. ",(stdlib/stdlib.mli[828,30663+0]..[830,30759+30]),None)
    ]
  signature_item (stdlib/stdlib.mli[832,30791+0]..[832,30791+15])
    Psig_type Rec
    [
      type_declaration "in_channel" (stdlib/stdlib.mli[832,30791+5]..[832,30791+15]) (stdlib/stdlib.mli[832,30791+0]..[832,30791+15])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/stdlib.mli[833,30807+0]..[833,30807+33])
              Pstr_eval
              expression (stdlib/stdlib.mli[833,30807+0]..[833,30807+33])
                Pexp_constant PConst_string(" The type of input channel. ",(stdlib/stdlib.mli[833,30807+0]..[833,30807+33]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (stdlib/stdlib.mli[835,30842+0]..[835,30842+16])
    Psig_type Rec
    [
      type_declaration "out_channel" (stdlib/stdlib.mli[835,30842+5]..[835,30842+16]) (stdlib/stdlib.mli[835,30842+0]..[835,30842+16])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/stdlib.mli[836,30859+0]..[836,30859+34])
              Pstr_eval
              expression (stdlib/stdlib.mli[836,30859+0]..[836,30859+34])
                Pexp_constant PConst_string(" The type of output channel. ",(stdlib/stdlib.mli[836,30859+0]..[836,30859+34]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (stdlib/stdlib.mli[838,30895+0]..[838,30895+22])
    Psig_value
    value_description "stdin" (stdlib/stdlib.mli[838,30895+4]..[838,30895+9]) (stdlib/stdlib.mli[838,30895+0]..[838,30895+22])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[839,30918+0]..[839,30918+42])
            Pstr_eval
            expression (stdlib/stdlib.mli[839,30918+0]..[839,30918+42])
              Pexp_constant PConst_string(" The standard input for the process. ",(stdlib/stdlib.mli[839,30918+0]..[839,30918+42]),None)
        ]
      core_type (stdlib/stdlib.mli[838,30895+12]..[838,30895+22])
        Ptyp_constr "in_channel" (stdlib/stdlib.mli[838,30895+12]..[838,30895+22])
        []
      []
  signature_item (stdlib/stdlib.mli[841,30962+0]..[841,30962+24])
    Psig_value
    value_description "stdout" (stdlib/stdlib.mli[841,30962+4]..[841,30962+10]) (stdlib/stdlib.mli[841,30962+0]..[841,30962+24])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[842,30987+0]..[842,30987+43])
            Pstr_eval
            expression (stdlib/stdlib.mli[842,30987+0]..[842,30987+43])
              Pexp_constant PConst_string(" The standard output for the process. ",(stdlib/stdlib.mli[842,30987+0]..[842,30987+43]),None)
        ]
      core_type (stdlib/stdlib.mli[841,30962+13]..[841,30962+24])
        Ptyp_constr "out_channel" (stdlib/stdlib.mli[841,30962+13]..[841,30962+24])
        []
      []
  signature_item (stdlib/stdlib.mli[844,31032+0]..[844,31032+24])
    Psig_value
    value_description "stderr" (stdlib/stdlib.mli[844,31032+4]..[844,31032+10]) (stdlib/stdlib.mli[844,31032+0]..[844,31032+24])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[845,31057+0]..[845,31057+49])
            Pstr_eval
            expression (stdlib/stdlib.mli[845,31057+0]..[845,31057+49])
              Pexp_constant PConst_string(" The standard error output for the process. ",(stdlib/stdlib.mli[845,31057+0]..[845,31057+49]),None)
        ]
      core_type (stdlib/stdlib.mli[844,31032+13]..[844,31032+24])
        Ptyp_constr "out_channel" (stdlib/stdlib.mli[844,31032+13]..[844,31032+24])
        []
      []
  signature_item (stdlib/stdlib.mli[848,31109+0]..[848,31109+46])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[848,31109+0]..[848,31109+46])
        Pstr_eval
        expression (stdlib/stdlib.mli[848,31109+0]..[848,31109+46])
          Pexp_constant PConst_string(" {2 Output functions on standard output} ",(stdlib/stdlib.mli[848,31109+0]..[848,31109+46]),None)
    ]
  signature_item (stdlib/stdlib.mli[850,31157+0]..[850,31157+29])
    Psig_value
    value_description "print_char" (stdlib/stdlib.mli[850,31157+4]..[850,31157+14]) (stdlib/stdlib.mli[850,31157+0]..[850,31157+29])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[851,31187+0]..[851,31187+44])
            Pstr_eval
            expression (stdlib/stdlib.mli[851,31187+0]..[851,31187+44])
              Pexp_constant PConst_string(" Print a character on standard output. ",(stdlib/stdlib.mli[851,31187+0]..[851,31187+44]),None)
        ]
      core_type (stdlib/stdlib.mli[850,31157+17]..[850,31157+29])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[850,31157+17]..[850,31157+21])
          Ptyp_constr "char" (stdlib/stdlib.mli[850,31157+17]..[850,31157+21])
          []
        core_type (stdlib/stdlib.mli[850,31157+25]..[850,31157+29])
          Ptyp_constr "unit" (stdlib/stdlib.mli[850,31157+25]..[850,31157+29])
          []
      []
  signature_item (stdlib/stdlib.mli[853,31233+0]..[853,31233+33])
    Psig_value
    value_description "print_string" (stdlib/stdlib.mli[853,31233+4]..[853,31233+16]) (stdlib/stdlib.mli[853,31233+0]..[853,31233+33])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[854,31267+0]..[854,31267+41])
            Pstr_eval
            expression (stdlib/stdlib.mli[854,31267+0]..[854,31267+41])
              Pexp_constant PConst_string(" Print a string on standard output. ",(stdlib/stdlib.mli[854,31267+0]..[854,31267+41]),None)
        ]
      core_type (stdlib/stdlib.mli[853,31233+19]..[853,31233+33])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[853,31233+19]..[853,31233+25])
          Ptyp_constr "string" (stdlib/stdlib.mli[853,31233+19]..[853,31233+25])
          []
        core_type (stdlib/stdlib.mli[853,31233+29]..[853,31233+33])
          Ptyp_constr "unit" (stdlib/stdlib.mli[853,31233+29]..[853,31233+33])
          []
      []
  signature_item (stdlib/stdlib.mli[856,31310+0]..[856,31310+31])
    Psig_value
    value_description "print_bytes" (stdlib/stdlib.mli[856,31310+4]..[856,31310+15]) (stdlib/stdlib.mli[856,31310+0]..[856,31310+31])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[857,31342+0]..[858,31388+19])
            Pstr_eval
            expression (stdlib/stdlib.mli[857,31342+0]..[858,31388+19])
              Pexp_constant PConst_string(" Print a byte sequence on standard output.\n   @since 4.02.0 ",(stdlib/stdlib.mli[857,31342+0]..[858,31388+19]),None)
        ]
      core_type (stdlib/stdlib.mli[856,31310+18]..[856,31310+31])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[856,31310+18]..[856,31310+23])
          Ptyp_constr "bytes" (stdlib/stdlib.mli[856,31310+18]..[856,31310+23])
          []
        core_type (stdlib/stdlib.mli[856,31310+27]..[856,31310+31])
          Ptyp_constr "unit" (stdlib/stdlib.mli[856,31310+27]..[856,31310+31])
          []
      []
  signature_item (stdlib/stdlib.mli[860,31409+0]..[860,31409+27])
    Psig_value
    value_description "print_int" (stdlib/stdlib.mli[860,31409+4]..[860,31409+13]) (stdlib/stdlib.mli[860,31409+0]..[860,31409+27])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[861,31437+0]..[861,31437+56])
            Pstr_eval
            expression (stdlib/stdlib.mli[861,31437+0]..[861,31437+56])
              Pexp_constant PConst_string(" Print an integer, in decimal, on standard output. ",(stdlib/stdlib.mli[861,31437+0]..[861,31437+56]),None)
        ]
      core_type (stdlib/stdlib.mli[860,31409+16]..[860,31409+27])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[860,31409+16]..[860,31409+19])
          Ptyp_constr "int" (stdlib/stdlib.mli[860,31409+16]..[860,31409+19])
          []
        core_type (stdlib/stdlib.mli[860,31409+23]..[860,31409+27])
          Ptyp_constr "unit" (stdlib/stdlib.mli[860,31409+23]..[860,31409+27])
          []
      []
  signature_item (stdlib/stdlib.mli[863,31495+0]..[863,31495+31])
    Psig_value
    value_description "print_float" (stdlib/stdlib.mli[863,31495+4]..[863,31495+15]) (stdlib/stdlib.mli[863,31495+0]..[863,31495+31])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[864,31527+0]..[864,31527+69])
            Pstr_eval
            expression (stdlib/stdlib.mli[864,31527+0]..[864,31527+69])
              Pexp_constant PConst_string(" Print a floating-point number, in decimal, on standard output. ",(stdlib/stdlib.mli[864,31527+0]..[864,31527+69]),None)
        ]
      core_type (stdlib/stdlib.mli[863,31495+18]..[863,31495+31])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[863,31495+18]..[863,31495+23])
          Ptyp_constr "float" (stdlib/stdlib.mli[863,31495+18]..[863,31495+23])
          []
        core_type (stdlib/stdlib.mli[863,31495+27]..[863,31495+31])
          Ptyp_constr "unit" (stdlib/stdlib.mli[863,31495+27]..[863,31495+31])
          []
      []
  signature_item (stdlib/stdlib.mli[866,31598+0]..[866,31598+34])
    Psig_value
    value_description "print_endline" (stdlib/stdlib.mli[866,31598+4]..[866,31598+17]) (stdlib/stdlib.mli[866,31598+0]..[866,31598+34])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[867,31633+0]..[868,31689+48])
            Pstr_eval
            expression (stdlib/stdlib.mli[867,31633+0]..[868,31689+48])
              Pexp_constant PConst_string(" Print a string, followed by a newline character, on\n   standard output and flush standard output. ",(stdlib/stdlib.mli[867,31633+0]..[868,31689+48]),None)
        ]
      core_type (stdlib/stdlib.mli[866,31598+20]..[866,31598+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[866,31598+20]..[866,31598+26])
          Ptyp_constr "string" (stdlib/stdlib.mli[866,31598+20]..[866,31598+26])
          []
        core_type (stdlib/stdlib.mli[866,31598+30]..[866,31598+34])
          Ptyp_constr "unit" (stdlib/stdlib.mli[866,31598+30]..[866,31598+34])
          []
      []
  signature_item (stdlib/stdlib.mli[870,31739+0]..[870,31739+32])
    Psig_value
    value_description "print_newline" (stdlib/stdlib.mli[870,31739+4]..[870,31739+17]) (stdlib/stdlib.mli[870,31739+0]..[870,31739+32])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[871,31772+0]..[873,31886+35])
            Pstr_eval
            expression (stdlib/stdlib.mli[871,31772+0]..[873,31886+35])
              Pexp_constant PConst_string(" Print a newline character on standard output, and flush\n   standard output. This can be used to simulate line\n   buffering of standard output. ",(stdlib/stdlib.mli[871,31772+0]..[873,31886+35]),None)
        ]
      core_type (stdlib/stdlib.mli[870,31739+20]..[870,31739+32])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[870,31739+20]..[870,31739+24])
          Ptyp_constr "unit" (stdlib/stdlib.mli[870,31739+20]..[870,31739+24])
          []
        core_type (stdlib/stdlib.mli[870,31739+28]..[870,31739+32])
          Ptyp_constr "unit" (stdlib/stdlib.mli[870,31739+28]..[870,31739+32])
          []
      []
  signature_item (stdlib/stdlib.mli[876,31924+0]..[876,31924+45])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[876,31924+0]..[876,31924+45])
        Pstr_eval
        expression (stdlib/stdlib.mli[876,31924+0]..[876,31924+45])
          Pexp_constant PConst_string(" {2 Output functions on standard error} ",(stdlib/stdlib.mli[876,31924+0]..[876,31924+45]),None)
    ]
  signature_item (stdlib/stdlib.mli[878,31971+0]..[878,31971+29])
    Psig_value
    value_description "prerr_char" (stdlib/stdlib.mli[878,31971+4]..[878,31971+14]) (stdlib/stdlib.mli[878,31971+0]..[878,31971+29])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[879,32001+0]..[879,32001+43])
            Pstr_eval
            expression (stdlib/stdlib.mli[879,32001+0]..[879,32001+43])
              Pexp_constant PConst_string(" Print a character on standard error. ",(stdlib/stdlib.mli[879,32001+0]..[879,32001+43]),None)
        ]
      core_type (stdlib/stdlib.mli[878,31971+17]..[878,31971+29])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[878,31971+17]..[878,31971+21])
          Ptyp_constr "char" (stdlib/stdlib.mli[878,31971+17]..[878,31971+21])
          []
        core_type (stdlib/stdlib.mli[878,31971+25]..[878,31971+29])
          Ptyp_constr "unit" (stdlib/stdlib.mli[878,31971+25]..[878,31971+29])
          []
      []
  signature_item (stdlib/stdlib.mli[881,32046+0]..[881,32046+33])
    Psig_value
    value_description "prerr_string" (stdlib/stdlib.mli[881,32046+4]..[881,32046+16]) (stdlib/stdlib.mli[881,32046+0]..[881,32046+33])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[882,32080+0]..[882,32080+40])
            Pstr_eval
            expression (stdlib/stdlib.mli[882,32080+0]..[882,32080+40])
              Pexp_constant PConst_string(" Print a string on standard error. ",(stdlib/stdlib.mli[882,32080+0]..[882,32080+40]),None)
        ]
      core_type (stdlib/stdlib.mli[881,32046+19]..[881,32046+33])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[881,32046+19]..[881,32046+25])
          Ptyp_constr "string" (stdlib/stdlib.mli[881,32046+19]..[881,32046+25])
          []
        core_type (stdlib/stdlib.mli[881,32046+29]..[881,32046+33])
          Ptyp_constr "unit" (stdlib/stdlib.mli[881,32046+29]..[881,32046+33])
          []
      []
  signature_item (stdlib/stdlib.mli[884,32122+0]..[884,32122+31])
    Psig_value
    value_description "prerr_bytes" (stdlib/stdlib.mli[884,32122+4]..[884,32122+15]) (stdlib/stdlib.mli[884,32122+0]..[884,32122+31])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[885,32154+0]..[886,32199+19])
            Pstr_eval
            expression (stdlib/stdlib.mli[885,32154+0]..[886,32199+19])
              Pexp_constant PConst_string(" Print a byte sequence on standard error.\n   @since 4.02.0 ",(stdlib/stdlib.mli[885,32154+0]..[886,32199+19]),None)
        ]
      core_type (stdlib/stdlib.mli[884,32122+18]..[884,32122+31])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[884,32122+18]..[884,32122+23])
          Ptyp_constr "bytes" (stdlib/stdlib.mli[884,32122+18]..[884,32122+23])
          []
        core_type (stdlib/stdlib.mli[884,32122+27]..[884,32122+31])
          Ptyp_constr "unit" (stdlib/stdlib.mli[884,32122+27]..[884,32122+31])
          []
      []
  signature_item (stdlib/stdlib.mli[888,32220+0]..[888,32220+27])
    Psig_value
    value_description "prerr_int" (stdlib/stdlib.mli[888,32220+4]..[888,32220+13]) (stdlib/stdlib.mli[888,32220+0]..[888,32220+27])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[889,32248+0]..[889,32248+55])
            Pstr_eval
            expression (stdlib/stdlib.mli[889,32248+0]..[889,32248+55])
              Pexp_constant PConst_string(" Print an integer, in decimal, on standard error. ",(stdlib/stdlib.mli[889,32248+0]..[889,32248+55]),None)
        ]
      core_type (stdlib/stdlib.mli[888,32220+16]..[888,32220+27])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[888,32220+16]..[888,32220+19])
          Ptyp_constr "int" (stdlib/stdlib.mli[888,32220+16]..[888,32220+19])
          []
        core_type (stdlib/stdlib.mli[888,32220+23]..[888,32220+27])
          Ptyp_constr "unit" (stdlib/stdlib.mli[888,32220+23]..[888,32220+27])
          []
      []
  signature_item (stdlib/stdlib.mli[891,32305+0]..[891,32305+31])
    Psig_value
    value_description "prerr_float" (stdlib/stdlib.mli[891,32305+4]..[891,32305+15]) (stdlib/stdlib.mli[891,32305+0]..[891,32305+31])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[892,32337+0]..[892,32337+68])
            Pstr_eval
            expression (stdlib/stdlib.mli[892,32337+0]..[892,32337+68])
              Pexp_constant PConst_string(" Print a floating-point number, in decimal, on standard error. ",(stdlib/stdlib.mli[892,32337+0]..[892,32337+68]),None)
        ]
      core_type (stdlib/stdlib.mli[891,32305+18]..[891,32305+31])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[891,32305+18]..[891,32305+23])
          Ptyp_constr "float" (stdlib/stdlib.mli[891,32305+18]..[891,32305+23])
          []
        core_type (stdlib/stdlib.mli[891,32305+27]..[891,32305+31])
          Ptyp_constr "unit" (stdlib/stdlib.mli[891,32305+27]..[891,32305+31])
          []
      []
  signature_item (stdlib/stdlib.mli[894,32407+0]..[894,32407+34])
    Psig_value
    value_description "prerr_endline" (stdlib/stdlib.mli[894,32407+4]..[894,32407+17]) (stdlib/stdlib.mli[894,32407+0]..[894,32407+34])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[895,32442+0]..[896,32506+37])
            Pstr_eval
            expression (stdlib/stdlib.mli[895,32442+0]..[896,32506+37])
              Pexp_constant PConst_string(" Print a string, followed by a newline character on standard\n   error and flush standard error. ",(stdlib/stdlib.mli[895,32442+0]..[896,32506+37]),None)
        ]
      core_type (stdlib/stdlib.mli[894,32407+20]..[894,32407+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[894,32407+20]..[894,32407+26])
          Ptyp_constr "string" (stdlib/stdlib.mli[894,32407+20]..[894,32407+26])
          []
        core_type (stdlib/stdlib.mli[894,32407+30]..[894,32407+34])
          Ptyp_constr "unit" (stdlib/stdlib.mli[894,32407+30]..[894,32407+34])
          []
      []
  signature_item (stdlib/stdlib.mli[898,32545+0]..[898,32545+32])
    Psig_value
    value_description "prerr_newline" (stdlib/stdlib.mli[898,32545+4]..[898,32545+17]) (stdlib/stdlib.mli[898,32545+0]..[898,32545+32])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[899,32578+0]..[900,32637+21])
            Pstr_eval
            expression (stdlib/stdlib.mli[899,32578+0]..[900,32637+21])
              Pexp_constant PConst_string(" Print a newline character on standard error, and flush\n   standard error. ",(stdlib/stdlib.mli[899,32578+0]..[900,32637+21]),None)
        ]
      core_type (stdlib/stdlib.mli[898,32545+20]..[898,32545+32])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[898,32545+20]..[898,32545+24])
          Ptyp_constr "unit" (stdlib/stdlib.mli[898,32545+20]..[898,32545+24])
          []
        core_type (stdlib/stdlib.mli[898,32545+28]..[898,32545+32])
          Ptyp_constr "unit" (stdlib/stdlib.mli[898,32545+28]..[898,32545+32])
          []
      []
  signature_item (stdlib/stdlib.mli[903,32661+0]..[903,32661+44])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[903,32661+0]..[903,32661+44])
        Pstr_eval
        expression (stdlib/stdlib.mli[903,32661+0]..[903,32661+44])
          Pexp_constant PConst_string(" {2 Input functions on standard input} ",(stdlib/stdlib.mli[903,32661+0]..[903,32661+44]),None)
    ]
  signature_item (stdlib/stdlib.mli[905,32707+0]..[905,32707+30])
    Psig_value
    value_description "read_line" (stdlib/stdlib.mli[905,32707+4]..[905,32707+13]) (stdlib/stdlib.mli[905,32707+0]..[905,32707+30])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[906,32738+0]..[908,32872+68])
            Pstr_eval
            expression (stdlib/stdlib.mli[906,32738+0]..[908,32872+68])
              Pexp_constant PConst_string(" Flush standard output, then read characters from standard input\n   until a newline character is encountered. Return the string of\n   all characters read, without the newline character at the end. ",(stdlib/stdlib.mli[906,32738+0]..[908,32872+68]),None)
        ]
      core_type (stdlib/stdlib.mli[905,32707+16]..[905,32707+30])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[905,32707+16]..[905,32707+20])
          Ptyp_constr "unit" (stdlib/stdlib.mli[905,32707+16]..[905,32707+20])
          []
        core_type (stdlib/stdlib.mli[905,32707+24]..[905,32707+30])
          Ptyp_constr "string" (stdlib/stdlib.mli[905,32707+24]..[905,32707+30])
          []
      []
  signature_item (stdlib/stdlib.mli[910,32942+0]..[910,32942+36])
    Psig_value
    value_description "read_int_opt" (stdlib/stdlib.mli[910,32942+4]..[910,32942+16]) (stdlib/stdlib.mli[910,32942+0]..[910,32942+36])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[911,32979+0]..[916,33173+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[911,32979+0]..[916,33173+2])
              Pexp_constant PConst_string(" Flush standard output, then read one line from standard input\n   and convert it to an integer.\n\n   Return [None] if the line read is not a valid representation of an integer.\n   @since 4.05\n",(stdlib/stdlib.mli[911,32979+0]..[916,33173+2]),None)
        ]
      core_type (stdlib/stdlib.mli[910,32942+18]..[910,32942+36])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[910,32942+18]..[910,32942+22])
          Ptyp_constr "unit" (stdlib/stdlib.mli[910,32942+18]..[910,32942+22])
          []
        core_type (stdlib/stdlib.mli[910,32942+26]..[910,32942+36])
          Ptyp_constr "option" (stdlib/stdlib.mli[910,32942+30]..[910,32942+36])
          [
            core_type (stdlib/stdlib.mli[910,32942+26]..[910,32942+29])
              Ptyp_constr "int" (stdlib/stdlib.mli[910,32942+26]..[910,32942+29])
              []
          ]
      []
  signature_item (stdlib/stdlib.mli[918,33177+0]..[918,33177+26])
    Psig_value
    value_description "read_int" (stdlib/stdlib.mli[918,33177+4]..[918,33177+12]) (stdlib/stdlib.mli[918,33177+0]..[918,33177+26])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[919,33204+0]..[920,33276+34])
            Pstr_eval
            expression (stdlib/stdlib.mli[919,33204+0]..[920,33276+34])
              Pexp_constant PConst_string(" Same as {!Stdlib.read_int_opt}, but raise [Failure \"int_of_string\"]\n   instead of returning [None]. ",(stdlib/stdlib.mli[919,33204+0]..[920,33276+34]),None)
        ]
      core_type (stdlib/stdlib.mli[918,33177+15]..[918,33177+26])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[918,33177+15]..[918,33177+19])
          Ptyp_constr "unit" (stdlib/stdlib.mli[918,33177+15]..[918,33177+19])
          []
        core_type (stdlib/stdlib.mli[918,33177+23]..[918,33177+26])
          Ptyp_constr "int" (stdlib/stdlib.mli[918,33177+23]..[918,33177+26])
          []
      []
  signature_item (stdlib/stdlib.mli[922,33312+0]..[922,33312+40])
    Psig_value
    value_description "read_float_opt" (stdlib/stdlib.mli[922,33312+4]..[922,33312+18]) (stdlib/stdlib.mli[922,33312+0]..[922,33312+40])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[923,33353+0]..[929,33578+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[923,33353+0]..[929,33578+2])
              Pexp_constant PConst_string(" Flush standard output, then read one line from standard input\n   and convert it to a floating-point number.\n\n   Return [None] if the line read is not a valid representation of a\n   floating-point number.\n   @since 4.05.0\n",(stdlib/stdlib.mli[923,33353+0]..[929,33578+2]),None)
        ]
      core_type (stdlib/stdlib.mli[922,33312+20]..[922,33312+40])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[922,33312+20]..[922,33312+24])
          Ptyp_constr "unit" (stdlib/stdlib.mli[922,33312+20]..[922,33312+24])
          []
        core_type (stdlib/stdlib.mli[922,33312+28]..[922,33312+40])
          Ptyp_constr "option" (stdlib/stdlib.mli[922,33312+34]..[922,33312+40])
          [
            core_type (stdlib/stdlib.mli[922,33312+28]..[922,33312+33])
              Ptyp_constr "float" (stdlib/stdlib.mli[922,33312+28]..[922,33312+33])
              []
          ]
      []
  signature_item (stdlib/stdlib.mli[931,33582+0]..[931,33582+30])
    Psig_value
    value_description "read_float" (stdlib/stdlib.mli[931,33582+4]..[931,33582+14]) (stdlib/stdlib.mli[931,33582+0]..[931,33582+30])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[932,33613+0]..[933,33689+34])
            Pstr_eval
            expression (stdlib/stdlib.mli[932,33613+0]..[933,33689+34])
              Pexp_constant PConst_string(" Same as {!Stdlib.read_float_opt}, but raise [Failure \"float_of_string\"]\n   instead of returning [None]. ",(stdlib/stdlib.mli[932,33613+0]..[933,33689+34]),None)
        ]
      core_type (stdlib/stdlib.mli[931,33582+17]..[931,33582+30])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[931,33582+17]..[931,33582+21])
          Ptyp_constr "unit" (stdlib/stdlib.mli[931,33582+17]..[931,33582+21])
          []
        core_type (stdlib/stdlib.mli[931,33582+25]..[931,33582+30])
          Ptyp_constr "float" (stdlib/stdlib.mli[931,33582+25]..[931,33582+30])
          []
      []
  signature_item (stdlib/stdlib.mli[936,33726+0]..[936,33726+35])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[936,33726+0]..[936,33726+35])
        Pstr_eval
        expression (stdlib/stdlib.mli[936,33726+0]..[936,33726+35])
          Pexp_constant PConst_string(" {2 General output functions} ",(stdlib/stdlib.mli[936,33726+0]..[936,33726+35]),None)
    ]
  signature_item (stdlib/stdlib.mli[938,33763+0]..[947,34294+17])
    Psig_type Rec
    [
      type_declaration "open_flag" (stdlib/stdlib.mli[938,33763+5]..[938,33763+14]) (stdlib/stdlib.mli[938,33763+0]..[947,34294+17])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/stdlib.mli[948,34349+0]..[949,34398+27])
              Pstr_eval
              expression (stdlib/stdlib.mli[948,34349+0]..[949,34398+27])
                Pexp_constant PConst_string(" Opening modes for {!Stdlib.open_out_gen} and\n  {!Stdlib.open_in_gen}. ",(stdlib/stdlib.mli[948,34349+0]..[949,34398+27]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (stdlib/stdlib.mli[939,33780+4]..[939,33780+15])
                "Open_rdonly" (stdlib/stdlib.mli[939,33780+4]..[939,33780+15])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/stdlib.mli[939,33780+21]..[939,33780+45])
                      Pstr_eval
                      expression (stdlib/stdlib.mli[939,33780+21]..[939,33780+45])
                        Pexp_constant PConst_string(" open for reading. ",(stdlib/stdlib.mli[939,33780+21]..[939,33780+45]),None)
                  ]
                []
                None
              (stdlib/stdlib.mli[940,33826+2]..[940,33826+15])
                "Open_wronly" (stdlib/stdlib.mli[940,33826+4]..[940,33826+15])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/stdlib.mli[940,33826+21]..[940,33826+45])
                      Pstr_eval
                      expression (stdlib/stdlib.mli[940,33826+21]..[940,33826+45])
                        Pexp_constant PConst_string(" open for writing. ",(stdlib/stdlib.mli[940,33826+21]..[940,33826+45]),None)
                  ]
                []
                None
              (stdlib/stdlib.mli[941,33872+2]..[941,33872+15])
                "Open_append" (stdlib/stdlib.mli[941,33872+4]..[941,33872+15])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/stdlib.mli[941,33872+21]..[941,33872+76])
                      Pstr_eval
                      expression (stdlib/stdlib.mli[941,33872+21]..[941,33872+76])
                        Pexp_constant PConst_string(" open for appending: always write at end of file. ",(stdlib/stdlib.mli[941,33872+21]..[941,33872+76]),None)
                  ]
                []
                None
              (stdlib/stdlib.mli[942,33949+2]..[942,33949+14])
                "Open_creat" (stdlib/stdlib.mli[942,33949+4]..[942,33949+14])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/stdlib.mli[942,33949+21]..[942,33949+65])
                      Pstr_eval
                      expression (stdlib/stdlib.mli[942,33949+21]..[942,33949+65])
                        Pexp_constant PConst_string(" create the file if it does not exist. ",(stdlib/stdlib.mli[942,33949+21]..[942,33949+65]),None)
                  ]
                []
                None
              (stdlib/stdlib.mli[943,34015+2]..[943,34015+14])
                "Open_trunc" (stdlib/stdlib.mli[943,34015+4]..[943,34015+14])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/stdlib.mli[943,34015+21]..[943,34015+64])
                      Pstr_eval
                      expression (stdlib/stdlib.mli[943,34015+21]..[943,34015+64])
                        Pexp_constant PConst_string(" empty the file if it already exists. ",(stdlib/stdlib.mli[943,34015+21]..[943,34015+64]),None)
                  ]
                []
                None
              (stdlib/stdlib.mli[944,34080+2]..[944,34080+13])
                "Open_excl" (stdlib/stdlib.mli[944,34080+4]..[944,34080+13])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/stdlib.mli[944,34080+21]..[944,34080+75])
                      Pstr_eval
                      expression (stdlib/stdlib.mli[944,34080+21]..[944,34080+75])
                        Pexp_constant PConst_string(" fail if Open_creat and the file already exists. ",(stdlib/stdlib.mli[944,34080+21]..[944,34080+75]),None)
                  ]
                []
                None
              (stdlib/stdlib.mli[945,34156+2]..[945,34156+15])
                "Open_binary" (stdlib/stdlib.mli[945,34156+4]..[945,34156+15])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/stdlib.mli[945,34156+21]..[945,34156+64])
                      Pstr_eval
                      expression (stdlib/stdlib.mli[945,34156+21]..[945,34156+64])
                        Pexp_constant PConst_string(" open in binary mode (no conversion). ",(stdlib/stdlib.mli[945,34156+21]..[945,34156+64]),None)
                  ]
                []
                None
              (stdlib/stdlib.mli[946,34221+2]..[946,34221+13])
                "Open_text" (stdlib/stdlib.mli[946,34221+4]..[946,34221+13])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/stdlib.mli[946,34221+21]..[946,34221+72])
                      Pstr_eval
                      expression (stdlib/stdlib.mli[946,34221+21]..[946,34221+72])
                        Pexp_constant PConst_string(" open in text mode (may perform conversions). ",(stdlib/stdlib.mli[946,34221+21]..[946,34221+72]),None)
                  ]
                []
                None
              (stdlib/stdlib.mli[947,34294+2]..[947,34294+17])
                "Open_nonblock" (stdlib/stdlib.mli[947,34294+4]..[947,34294+17])
                attribute "ocaml.doc"
                  [
                    structure_item (stdlib/stdlib.mli[947,34294+21]..[947,34294+54])
                      Pstr_eval
                      expression (stdlib/stdlib.mli[947,34294+21]..[947,34294+54])
                        Pexp_constant PConst_string(" open in non-blocking mode. ",(stdlib/stdlib.mli[947,34294+21]..[947,34294+54]),None)
                  ]
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (stdlib/stdlib.mli[951,34427+0]..[951,34427+36])
    Psig_value
    value_description "open_out" (stdlib/stdlib.mli[951,34427+4]..[951,34427+12]) (stdlib/stdlib.mli[951,34427+0]..[951,34427+36])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[952,34464+0]..[955,34656+47])
            Pstr_eval
            expression (stdlib/stdlib.mli[952,34464+0]..[955,34656+47])
              Pexp_constant PConst_string(" Open the named file for writing, and return a new output channel\n   on that file, positioned at the beginning of the file. The\n   file is truncated to zero length if it already exists. It\n   is created if it does not already exists. ",(stdlib/stdlib.mli[952,34464+0]..[955,34656+47]),None)
        ]
      core_type (stdlib/stdlib.mli[951,34427+15]..[951,34427+36])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[951,34427+15]..[951,34427+21])
          Ptyp_constr "string" (stdlib/stdlib.mli[951,34427+15]..[951,34427+21])
          []
        core_type (stdlib/stdlib.mli[951,34427+25]..[951,34427+36])
          Ptyp_constr "out_channel" (stdlib/stdlib.mli[951,34427+25]..[951,34427+36])
          []
      []
  signature_item (stdlib/stdlib.mli[957,34705+0]..[957,34705+40])
    Psig_value
    value_description "open_out_bin" (stdlib/stdlib.mli[957,34705+4]..[957,34705+16]) (stdlib/stdlib.mli[957,34705+0]..[957,34705+40])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[958,34746+0]..[961,34947+58])
            Pstr_eval
            expression (stdlib/stdlib.mli[958,34746+0]..[961,34947+58])
              Pexp_constant PConst_string(" Same as {!Stdlib.open_out}, but the file is opened in binary mode,\n   so that no translation takes place during writes. On operating\n   systems that do not distinguish between text mode and binary\n   mode, this function behaves like {!Stdlib.open_out}. ",(stdlib/stdlib.mli[958,34746+0]..[961,34947+58]),None)
        ]
      core_type (stdlib/stdlib.mli[957,34705+19]..[957,34705+40])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[957,34705+19]..[957,34705+25])
          Ptyp_constr "string" (stdlib/stdlib.mli[957,34705+19]..[957,34705+25])
          []
        core_type (stdlib/stdlib.mli[957,34705+29]..[957,34705+40])
          Ptyp_constr "out_channel" (stdlib/stdlib.mli[957,34705+29]..[957,34705+40])
          []
      []
  signature_item (stdlib/stdlib.mli[963,35007+0]..[963,35007+65])
    Psig_value
    value_description "open_out_gen" (stdlib/stdlib.mli[963,35007+4]..[963,35007+16]) (stdlib/stdlib.mli[963,35007+0]..[963,35007+65])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[964,35073+0]..[969,35381+29])
            Pstr_eval
            expression (stdlib/stdlib.mli[964,35073+0]..[969,35381+29])
              Pexp_constant PConst_string(" [open_out_gen mode perm filename] opens the named file for writing,\n   as described above. The extra argument [mode]\n   specifies the opening mode. The extra argument [perm] specifies\n   the file permissions, in case the file must be created.\n   {!Stdlib.open_out} and {!Stdlib.open_out_bin} are special\n   cases of this function. ",(stdlib/stdlib.mli[964,35073+0]..[969,35381+29]),None)
        ]
      core_type (stdlib/stdlib.mli[963,35007+19]..[963,35007+65])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[963,35007+19]..[963,35007+33])
          Ptyp_constr "list" (stdlib/stdlib.mli[963,35007+29]..[963,35007+33])
          [
            core_type (stdlib/stdlib.mli[963,35007+19]..[963,35007+28])
              Ptyp_constr "open_flag" (stdlib/stdlib.mli[963,35007+19]..[963,35007+28])
              []
          ]
        core_type (stdlib/stdlib.mli[963,35007+37]..[963,35007+65])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[963,35007+37]..[963,35007+40])
            Ptyp_constr "int" (stdlib/stdlib.mli[963,35007+37]..[963,35007+40])
            []
          core_type (stdlib/stdlib.mli[963,35007+44]..[963,35007+65])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/stdlib.mli[963,35007+44]..[963,35007+50])
              Ptyp_constr "string" (stdlib/stdlib.mli[963,35007+44]..[963,35007+50])
              []
            core_type (stdlib/stdlib.mli[963,35007+54]..[963,35007+65])
              Ptyp_constr "out_channel" (stdlib/stdlib.mli[963,35007+54]..[963,35007+65])
              []
      []
  signature_item (stdlib/stdlib.mli[971,35412+0]..[971,35412+31])
    Psig_value
    value_description "flush" (stdlib/stdlib.mli[971,35412+4]..[971,35412+9]) (stdlib/stdlib.mli[971,35412+0]..[971,35412+31])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[972,35444+0]..[975,35621+50])
            Pstr_eval
            expression (stdlib/stdlib.mli[972,35444+0]..[975,35621+50])
              Pexp_constant PConst_string(" Flush the buffer associated with the given output channel,\n   performing all pending writes on that channel.\n   Interactive programs must be careful about flushing standard\n   output and standard error at the right time. ",(stdlib/stdlib.mli[972,35444+0]..[975,35621+50]),None)
        ]
      core_type (stdlib/stdlib.mli[971,35412+12]..[971,35412+31])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[971,35412+12]..[971,35412+23])
          Ptyp_constr "out_channel" (stdlib/stdlib.mli[971,35412+12]..[971,35412+23])
          []
        core_type (stdlib/stdlib.mli[971,35412+27]..[971,35412+31])
          Ptyp_constr "unit" (stdlib/stdlib.mli[971,35412+27]..[971,35412+31])
          []
      []
  signature_item (stdlib/stdlib.mli[977,35673+0]..[977,35673+28])
    Psig_value
    value_description "flush_all" (stdlib/stdlib.mli[977,35673+4]..[977,35673+13]) (stdlib/stdlib.mli[977,35673+0]..[977,35673+28])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[978,35702+0]..[978,35702+53])
            Pstr_eval
            expression (stdlib/stdlib.mli[978,35702+0]..[978,35702+53])
              Pexp_constant PConst_string(" Flush all open output channels; ignore errors. ",(stdlib/stdlib.mli[978,35702+0]..[978,35702+53]),None)
        ]
      core_type (stdlib/stdlib.mli[977,35673+16]..[977,35673+28])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[977,35673+16]..[977,35673+20])
          Ptyp_constr "unit" (stdlib/stdlib.mli[977,35673+16]..[977,35673+20])
          []
        core_type (stdlib/stdlib.mli[977,35673+24]..[977,35673+28])
          Ptyp_constr "unit" (stdlib/stdlib.mli[977,35673+24]..[977,35673+28])
          []
      []
  signature_item (stdlib/stdlib.mli[980,35757+0]..[980,35757+45])
    Psig_value
    value_description "output_char" (stdlib/stdlib.mli[980,35757+4]..[980,35757+15]) (stdlib/stdlib.mli[980,35757+0]..[980,35757+45])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[981,35803+0]..[981,35803+55])
            Pstr_eval
            expression (stdlib/stdlib.mli[981,35803+0]..[981,35803+55])
              Pexp_constant PConst_string(" Write the character on the given output channel. ",(stdlib/stdlib.mli[981,35803+0]..[981,35803+55]),None)
        ]
      core_type (stdlib/stdlib.mli[980,35757+18]..[980,35757+45])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[980,35757+18]..[980,35757+29])
          Ptyp_constr "out_channel" (stdlib/stdlib.mli[980,35757+18]..[980,35757+29])
          []
        core_type (stdlib/stdlib.mli[980,35757+33]..[980,35757+45])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[980,35757+33]..[980,35757+37])
            Ptyp_constr "char" (stdlib/stdlib.mli[980,35757+33]..[980,35757+37])
            []
          core_type (stdlib/stdlib.mli[980,35757+41]..[980,35757+45])
            Ptyp_constr "unit" (stdlib/stdlib.mli[980,35757+41]..[980,35757+45])
            []
      []
  signature_item (stdlib/stdlib.mli[983,35860+0]..[983,35860+49])
    Psig_value
    value_description "output_string" (stdlib/stdlib.mli[983,35860+4]..[983,35860+17]) (stdlib/stdlib.mli[983,35860+0]..[983,35860+49])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[984,35910+0]..[984,35910+52])
            Pstr_eval
            expression (stdlib/stdlib.mli[984,35910+0]..[984,35910+52])
              Pexp_constant PConst_string(" Write the string on the given output channel. ",(stdlib/stdlib.mli[984,35910+0]..[984,35910+52]),None)
        ]
      core_type (stdlib/stdlib.mli[983,35860+20]..[983,35860+49])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[983,35860+20]..[983,35860+31])
          Ptyp_constr "out_channel" (stdlib/stdlib.mli[983,35860+20]..[983,35860+31])
          []
        core_type (stdlib/stdlib.mli[983,35860+35]..[983,35860+49])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[983,35860+35]..[983,35860+41])
            Ptyp_constr "string" (stdlib/stdlib.mli[983,35860+35]..[983,35860+41])
            []
          core_type (stdlib/stdlib.mli[983,35860+45]..[983,35860+49])
            Ptyp_constr "unit" (stdlib/stdlib.mli[983,35860+45]..[983,35860+49])
            []
      []
  signature_item (stdlib/stdlib.mli[986,35964+0]..[986,35964+47])
    Psig_value
    value_description "output_bytes" (stdlib/stdlib.mli[986,35964+4]..[986,35964+16]) (stdlib/stdlib.mli[986,35964+0]..[986,35964+47])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[987,36012+0]..[988,36069+19])
            Pstr_eval
            expression (stdlib/stdlib.mli[987,36012+0]..[988,36069+19])
              Pexp_constant PConst_string(" Write the byte sequence on the given output channel.\n   @since 4.02.0 ",(stdlib/stdlib.mli[987,36012+0]..[988,36069+19]),None)
        ]
      core_type (stdlib/stdlib.mli[986,35964+19]..[986,35964+47])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[986,35964+19]..[986,35964+30])
          Ptyp_constr "out_channel" (stdlib/stdlib.mli[986,35964+19]..[986,35964+30])
          []
        core_type (stdlib/stdlib.mli[986,35964+34]..[986,35964+47])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[986,35964+34]..[986,35964+39])
            Ptyp_constr "bytes" (stdlib/stdlib.mli[986,35964+34]..[986,35964+39])
            []
          core_type (stdlib/stdlib.mli[986,35964+43]..[986,35964+47])
            Ptyp_constr "unit" (stdlib/stdlib.mli[986,35964+43]..[986,35964+47])
            []
      []
  signature_item (stdlib/stdlib.mli[990,36090+0]..[990,36090+55])
    Psig_value
    value_description "output" (stdlib/stdlib.mli[990,36090+4]..[990,36090+10]) (stdlib/stdlib.mli[990,36090+0]..[990,36090+55])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[991,36146+0]..[994,36340+39])
            Pstr_eval
            expression (stdlib/stdlib.mli[991,36146+0]..[994,36340+39])
              Pexp_constant PConst_string(" [output oc buf pos len] writes [len] characters from byte sequence [buf],\n   starting at offset [pos], to the given output channel [oc].\n   @raise Invalid_argument if [pos] and [len] do not\n   designate a valid range of [buf]. ",(stdlib/stdlib.mli[991,36146+0]..[994,36340+39]),None)
        ]
      core_type (stdlib/stdlib.mli[990,36090+13]..[990,36090+55])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[990,36090+13]..[990,36090+24])
          Ptyp_constr "out_channel" (stdlib/stdlib.mli[990,36090+13]..[990,36090+24])
          []
        core_type (stdlib/stdlib.mli[990,36090+28]..[990,36090+55])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[990,36090+28]..[990,36090+33])
            Ptyp_constr "bytes" (stdlib/stdlib.mli[990,36090+28]..[990,36090+33])
            []
          core_type (stdlib/stdlib.mli[990,36090+37]..[990,36090+55])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/stdlib.mli[990,36090+37]..[990,36090+40])
              Ptyp_constr "int" (stdlib/stdlib.mli[990,36090+37]..[990,36090+40])
              []
            core_type (stdlib/stdlib.mli[990,36090+44]..[990,36090+55])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/stdlib.mli[990,36090+44]..[990,36090+47])
                Ptyp_constr "int" (stdlib/stdlib.mli[990,36090+44]..[990,36090+47])
                []
              core_type (stdlib/stdlib.mli[990,36090+51]..[990,36090+55])
                Ptyp_constr "unit" (stdlib/stdlib.mli[990,36090+51]..[990,36090+55])
                []
      []
  signature_item (stdlib/stdlib.mli[996,36381+0]..[996,36381+66])
    Psig_value
    value_description "output_substring" (stdlib/stdlib.mli[996,36381+4]..[996,36381+20]) (stdlib/stdlib.mli[996,36381+0]..[996,36381+66])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[997,36448+0]..[999,36530+19])
            Pstr_eval
            expression (stdlib/stdlib.mli[997,36448+0]..[999,36530+19])
              Pexp_constant PConst_string(" Same as [output] but take a string as argument instead of\n   a byte sequence.\n   @since 4.02.0 ",(stdlib/stdlib.mli[997,36448+0]..[999,36530+19]),None)
        ]
      core_type (stdlib/stdlib.mli[996,36381+23]..[996,36381+66])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[996,36381+23]..[996,36381+34])
          Ptyp_constr "out_channel" (stdlib/stdlib.mli[996,36381+23]..[996,36381+34])
          []
        core_type (stdlib/stdlib.mli[996,36381+38]..[996,36381+66])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[996,36381+38]..[996,36381+44])
            Ptyp_constr "string" (stdlib/stdlib.mli[996,36381+38]..[996,36381+44])
            []
          core_type (stdlib/stdlib.mli[996,36381+48]..[996,36381+66])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/stdlib.mli[996,36381+48]..[996,36381+51])
              Ptyp_constr "int" (stdlib/stdlib.mli[996,36381+48]..[996,36381+51])
              []
            core_type (stdlib/stdlib.mli[996,36381+55]..[996,36381+66])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/stdlib.mli[996,36381+55]..[996,36381+58])
                Ptyp_constr "int" (stdlib/stdlib.mli[996,36381+55]..[996,36381+58])
                []
              core_type (stdlib/stdlib.mli[996,36381+62]..[996,36381+66])
                Ptyp_constr "unit" (stdlib/stdlib.mli[996,36381+62]..[996,36381+66])
                []
      []
  signature_item (stdlib/stdlib.mli[1001,36551+0]..[1001,36551+44])
    Psig_value
    value_description "output_byte" (stdlib/stdlib.mli[1001,36551+4]..[1001,36551+15]) (stdlib/stdlib.mli[1001,36551+0]..[1001,36551+44])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1002,36596+0]..[1004,36731+10])
            Pstr_eval
            expression (stdlib/stdlib.mli[1002,36596+0]..[1004,36731+10])
              Pexp_constant PConst_string(" Write one 8-bit integer (as the single character with that code)\n   on the given output channel. The given integer is taken modulo\n   256. ",(stdlib/stdlib.mli[1002,36596+0]..[1004,36731+10]),None)
        ]
      core_type (stdlib/stdlib.mli[1001,36551+18]..[1001,36551+44])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1001,36551+18]..[1001,36551+29])
          Ptyp_constr "out_channel" (stdlib/stdlib.mli[1001,36551+18]..[1001,36551+29])
          []
        core_type (stdlib/stdlib.mli[1001,36551+33]..[1001,36551+44])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[1001,36551+33]..[1001,36551+36])
            Ptyp_constr "int" (stdlib/stdlib.mli[1001,36551+33]..[1001,36551+36])
            []
          core_type (stdlib/stdlib.mli[1001,36551+40]..[1001,36551+44])
            Ptyp_constr "unit" (stdlib/stdlib.mli[1001,36551+40]..[1001,36551+44])
            []
      []
  signature_item (stdlib/stdlib.mli[1006,36743+0]..[1006,36743+50])
    Psig_value
    value_description "output_binary_int" (stdlib/stdlib.mli[1006,36743+4]..[1006,36743+21]) (stdlib/stdlib.mli[1006,36743+0]..[1006,36743+50])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1007,36794+0]..[1012,37060+48])
            Pstr_eval
            expression (stdlib/stdlib.mli[1007,36794+0]..[1012,37060+48])
              Pexp_constant PConst_string(" Write one integer in binary format (4 bytes, big-endian)\n   on the given output channel.\n   The given integer is taken modulo 2{^32}.\n   The only reliable way to read it back is through the\n   {!Stdlib.input_binary_int} function. The format is compatible across\n   all machines for a given version of OCaml. ",(stdlib/stdlib.mli[1007,36794+0]..[1012,37060+48]),None)
        ]
      core_type (stdlib/stdlib.mli[1006,36743+24]..[1006,36743+50])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1006,36743+24]..[1006,36743+35])
          Ptyp_constr "out_channel" (stdlib/stdlib.mli[1006,36743+24]..[1006,36743+35])
          []
        core_type (stdlib/stdlib.mli[1006,36743+39]..[1006,36743+50])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[1006,36743+39]..[1006,36743+42])
            Ptyp_constr "int" (stdlib/stdlib.mli[1006,36743+39]..[1006,36743+42])
            []
          core_type (stdlib/stdlib.mli[1006,36743+46]..[1006,36743+50])
            Ptyp_constr "unit" (stdlib/stdlib.mli[1006,36743+46]..[1006,36743+50])
            []
      []
  signature_item (stdlib/stdlib.mli[1014,37110+0]..[1014,37110+44])
    Psig_value
    value_description "output_value" (stdlib/stdlib.mli[1014,37110+4]..[1014,37110+16]) (stdlib/stdlib.mli[1014,37110+0]..[1014,37110+44])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1015,37155+0]..[1020,37483+59])
            Pstr_eval
            expression (stdlib/stdlib.mli[1015,37155+0]..[1020,37483+59])
              Pexp_constant PConst_string(" Write the representation of a structured value of any type\n   to a channel. Circularities and sharing inside the value\n   are detected and preserved. The object can be read back,\n   by the function {!Stdlib.input_value}. See the description of module\n   {!Marshal} for more information. {!Stdlib.output_value} is equivalent\n   to {!Marshal.to_channel} with an empty list of flags. ",(stdlib/stdlib.mli[1015,37155+0]..[1020,37483+59]),None)
        ]
      core_type (stdlib/stdlib.mli[1014,37110+19]..[1014,37110+44])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1014,37110+19]..[1014,37110+30])
          Ptyp_constr "out_channel" (stdlib/stdlib.mli[1014,37110+19]..[1014,37110+30])
          []
        core_type (stdlib/stdlib.mli[1014,37110+34]..[1014,37110+44])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[1014,37110+34]..[1014,37110+36])
            Ptyp_var a
          core_type (stdlib/stdlib.mli[1014,37110+40]..[1014,37110+44])
            Ptyp_constr "unit" (stdlib/stdlib.mli[1014,37110+40]..[1014,37110+44])
            []
      []
  signature_item (stdlib/stdlib.mli[1022,37544+0]..[1022,37544+41])
    Psig_value
    value_description "seek_out" (stdlib/stdlib.mli[1022,37544+4]..[1022,37544+12]) (stdlib/stdlib.mli[1022,37544+0]..[1022,37544+41])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1023,37586+0]..[1026,37778+34])
            Pstr_eval
            expression (stdlib/stdlib.mli[1023,37586+0]..[1026,37778+34])
              Pexp_constant PConst_string(" [seek_out chan pos] sets the current writing position to [pos]\n   for channel [chan]. This works only for regular files. On\n   files of other kinds (such as terminals, pipes and sockets),\n   the behavior is unspecified. ",(stdlib/stdlib.mli[1023,37586+0]..[1026,37778+34]),None)
        ]
      core_type (stdlib/stdlib.mli[1022,37544+15]..[1022,37544+41])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1022,37544+15]..[1022,37544+26])
          Ptyp_constr "out_channel" (stdlib/stdlib.mli[1022,37544+15]..[1022,37544+26])
          []
        core_type (stdlib/stdlib.mli[1022,37544+30]..[1022,37544+41])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[1022,37544+30]..[1022,37544+33])
            Ptyp_constr "int" (stdlib/stdlib.mli[1022,37544+30]..[1022,37544+33])
            []
          core_type (stdlib/stdlib.mli[1022,37544+37]..[1022,37544+41])
            Ptyp_constr "unit" (stdlib/stdlib.mli[1022,37544+37]..[1022,37544+41])
            []
      []
  signature_item (stdlib/stdlib.mli[1028,37814+0]..[1028,37814+32])
    Psig_value
    value_description "pos_out" (stdlib/stdlib.mli[1028,37814+4]..[1028,37814+11]) (stdlib/stdlib.mli[1028,37814+0]..[1028,37814+32])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1029,37847+0]..[1037,38348+29])
            Pstr_eval
            expression (stdlib/stdlib.mli[1029,37847+0]..[1037,38348+29])
              Pexp_constant PConst_string(" Return the current writing position for the given channel.  Does\n    not work on channels opened with the [Open_append] flag (returns\n    unspecified results).\n    For files opened in text mode under Windows, the returned position\n    is approximate (owing to end-of-line conversion); in particular,\n    saving the current position with [pos_out], then going back to\n    this position using [seek_out] will not work.  For this\n    programming idiom to work reliably and portably, the file must be\n    opened in binary mode. ",(stdlib/stdlib.mli[1029,37847+0]..[1037,38348+29]),None)
        ]
      core_type (stdlib/stdlib.mli[1028,37814+14]..[1028,37814+32])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1028,37814+14]..[1028,37814+25])
          Ptyp_constr "out_channel" (stdlib/stdlib.mli[1028,37814+14]..[1028,37814+25])
          []
        core_type (stdlib/stdlib.mli[1028,37814+29]..[1028,37814+32])
          Ptyp_constr "int" (stdlib/stdlib.mli[1028,37814+29]..[1028,37814+32])
          []
      []
  signature_item (stdlib/stdlib.mli[1039,38379+0]..[1039,38379+43])
    Psig_value
    value_description "out_channel_length" (stdlib/stdlib.mli[1039,38379+4]..[1039,38379+22]) (stdlib/stdlib.mli[1039,38379+0]..[1039,38379+43])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1040,38423+0]..[1042,38553+71])
            Pstr_eval
            expression (stdlib/stdlib.mli[1040,38423+0]..[1042,38553+71])
              Pexp_constant PConst_string(" Return the size (number of characters) of the regular file\n   on which the given channel is opened.  If the channel is opened\n    on a file that is not a regular file, the result is meaningless. ",(stdlib/stdlib.mli[1040,38423+0]..[1042,38553+71]),None)
        ]
      core_type (stdlib/stdlib.mli[1039,38379+25]..[1039,38379+43])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1039,38379+25]..[1039,38379+36])
          Ptyp_constr "out_channel" (stdlib/stdlib.mli[1039,38379+25]..[1039,38379+36])
          []
        core_type (stdlib/stdlib.mli[1039,38379+40]..[1039,38379+43])
          Ptyp_constr "int" (stdlib/stdlib.mli[1039,38379+40]..[1039,38379+43])
          []
      []
  signature_item (stdlib/stdlib.mli[1044,38626+0]..[1044,38626+35])
    Psig_value
    value_description "close_out" (stdlib/stdlib.mli[1044,38626+4]..[1044,38626+13]) (stdlib/stdlib.mli[1044,38626+0]..[1044,38626+35])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1045,38662+0]..[1050,38993+55])
            Pstr_eval
            expression (stdlib/stdlib.mli[1045,38662+0]..[1050,38993+55])
              Pexp_constant PConst_string(" Close the given channel, flushing all buffered write operations.\n   Output functions raise a [Sys_error] exception when they are\n   applied to a closed output channel, except [close_out] and [flush],\n   which do nothing when applied to an already closed channel.\n   Note that [close_out] may raise [Sys_error] if the operating\n   system signals an error when flushing or closing. ",(stdlib/stdlib.mli[1045,38662+0]..[1050,38993+55]),None)
        ]
      core_type (stdlib/stdlib.mli[1044,38626+16]..[1044,38626+35])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1044,38626+16]..[1044,38626+27])
          Ptyp_constr "out_channel" (stdlib/stdlib.mli[1044,38626+16]..[1044,38626+27])
          []
        core_type (stdlib/stdlib.mli[1044,38626+31]..[1044,38626+35])
          Ptyp_constr "unit" (stdlib/stdlib.mli[1044,38626+31]..[1044,38626+35])
          []
      []
  signature_item (stdlib/stdlib.mli[1052,39050+0]..[1052,39050+41])
    Psig_value
    value_description "close_out_noerr" (stdlib/stdlib.mli[1052,39050+4]..[1052,39050+19]) (stdlib/stdlib.mli[1052,39050+0]..[1052,39050+41])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1053,39092+0]..[1053,39092+50])
            Pstr_eval
            expression (stdlib/stdlib.mli[1053,39092+0]..[1053,39092+50])
              Pexp_constant PConst_string(" Same as [close_out], but ignore all errors. ",(stdlib/stdlib.mli[1053,39092+0]..[1053,39092+50]),None)
        ]
      core_type (stdlib/stdlib.mli[1052,39050+22]..[1052,39050+41])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1052,39050+22]..[1052,39050+33])
          Ptyp_constr "out_channel" (stdlib/stdlib.mli[1052,39050+22]..[1052,39050+33])
          []
        core_type (stdlib/stdlib.mli[1052,39050+37]..[1052,39050+41])
          Ptyp_constr "unit" (stdlib/stdlib.mli[1052,39050+37]..[1052,39050+41])
          []
      []
  signature_item (stdlib/stdlib.mli[1055,39144+0]..[1055,39144+53])
    Psig_value
    value_description "set_binary_mode_out" (stdlib/stdlib.mli[1055,39144+4]..[1055,39144+23]) (stdlib/stdlib.mli[1055,39144+0]..[1055,39144+53])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1056,39198+0]..[1063,39620+59])
            Pstr_eval
            expression (stdlib/stdlib.mli[1056,39198+0]..[1063,39620+59])
              Pexp_constant PConst_string(" [set_binary_mode_out oc true] sets the channel [oc] to binary\n   mode: no translations take place during output.\n   [set_binary_mode_out oc false] sets the channel [oc] to text\n   mode: depending on the operating system, some translations\n   may take place during output.  For instance, under Windows,\n   end-of-lines will be translated from [\\n] to [\\r\\n].\n   This function has no effect under operating systems that\n   do not distinguish between text mode and binary mode. ",(stdlib/stdlib.mli[1056,39198+0]..[1063,39620+59]),None)
        ]
      core_type (stdlib/stdlib.mli[1055,39144+26]..[1055,39144+53])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1055,39144+26]..[1055,39144+37])
          Ptyp_constr "out_channel" (stdlib/stdlib.mli[1055,39144+26]..[1055,39144+37])
          []
        core_type (stdlib/stdlib.mli[1055,39144+41]..[1055,39144+53])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[1055,39144+41]..[1055,39144+45])
            Ptyp_constr "bool" (stdlib/stdlib.mli[1055,39144+41]..[1055,39144+45])
            []
          core_type (stdlib/stdlib.mli[1055,39144+49]..[1055,39144+53])
            Ptyp_constr "unit" (stdlib/stdlib.mli[1055,39144+49]..[1055,39144+53])
            []
      []
  signature_item (stdlib/stdlib.mli[1066,39682+0]..[1066,39682+34])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[1066,39682+0]..[1066,39682+34])
        Pstr_eval
        expression (stdlib/stdlib.mli[1066,39682+0]..[1066,39682+34])
          Pexp_constant PConst_string(" {2 General input functions} ",(stdlib/stdlib.mli[1066,39682+0]..[1066,39682+34]),None)
    ]
  signature_item (stdlib/stdlib.mli[1068,39718+0]..[1068,39718+34])
    Psig_value
    value_description "open_in" (stdlib/stdlib.mli[1068,39718+4]..[1068,39718+11]) (stdlib/stdlib.mli[1068,39718+0]..[1068,39718+34])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1069,39753+0]..[1070,39821+60])
            Pstr_eval
            expression (stdlib/stdlib.mli[1069,39753+0]..[1070,39821+60])
              Pexp_constant PConst_string(" Open the named file for reading, and return a new input channel\n   on that file, positioned at the beginning of the file. ",(stdlib/stdlib.mli[1069,39753+0]..[1070,39821+60]),None)
        ]
      core_type (stdlib/stdlib.mli[1068,39718+14]..[1068,39718+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1068,39718+14]..[1068,39718+20])
          Ptyp_constr "string" (stdlib/stdlib.mli[1068,39718+14]..[1068,39718+20])
          []
        core_type (stdlib/stdlib.mli[1068,39718+24]..[1068,39718+34])
          Ptyp_constr "in_channel" (stdlib/stdlib.mli[1068,39718+24]..[1068,39718+34])
          []
      []
  signature_item (stdlib/stdlib.mli[1072,39883+0]..[1072,39883+38])
    Psig_value
    value_description "open_in_bin" (stdlib/stdlib.mli[1072,39883+4]..[1072,39883+15]) (stdlib/stdlib.mli[1072,39883+0]..[1072,39883+38])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1073,39922+0]..[1076,40121+57])
            Pstr_eval
            expression (stdlib/stdlib.mli[1073,39922+0]..[1076,40121+57])
              Pexp_constant PConst_string(" Same as {!Stdlib.open_in}, but the file is opened in binary mode,\n   so that no translation takes place during reads. On operating\n   systems that do not distinguish between text mode and binary\n   mode, this function behaves like {!Stdlib.open_in}. ",(stdlib/stdlib.mli[1073,39922+0]..[1076,40121+57]),None)
        ]
      core_type (stdlib/stdlib.mli[1072,39883+18]..[1072,39883+38])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1072,39883+18]..[1072,39883+24])
          Ptyp_constr "string" (stdlib/stdlib.mli[1072,39883+18]..[1072,39883+24])
          []
        core_type (stdlib/stdlib.mli[1072,39883+28]..[1072,39883+38])
          Ptyp_constr "in_channel" (stdlib/stdlib.mli[1072,39883+28]..[1072,39883+38])
          []
      []
  signature_item (stdlib/stdlib.mli[1078,40180+0]..[1078,40180+63])
    Psig_value
    value_description "open_in_gen" (stdlib/stdlib.mli[1078,40180+4]..[1078,40180+15]) (stdlib/stdlib.mli[1078,40180+0]..[1078,40180+63])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1079,40244+0]..[1083,40485+29])
            Pstr_eval
            expression (stdlib/stdlib.mli[1079,40244+0]..[1083,40485+29])
              Pexp_constant PConst_string(" [open_in_gen mode perm filename] opens the named file for reading,\n   as described above. The extra arguments\n   [mode] and [perm] specify the opening mode and file permissions.\n   {!Stdlib.open_in} and {!Stdlib.open_in_bin} are special\n   cases of this function. ",(stdlib/stdlib.mli[1079,40244+0]..[1083,40485+29]),None)
        ]
      core_type (stdlib/stdlib.mli[1078,40180+18]..[1078,40180+63])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1078,40180+18]..[1078,40180+32])
          Ptyp_constr "list" (stdlib/stdlib.mli[1078,40180+28]..[1078,40180+32])
          [
            core_type (stdlib/stdlib.mli[1078,40180+18]..[1078,40180+27])
              Ptyp_constr "open_flag" (stdlib/stdlib.mli[1078,40180+18]..[1078,40180+27])
              []
          ]
        core_type (stdlib/stdlib.mli[1078,40180+36]..[1078,40180+63])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[1078,40180+36]..[1078,40180+39])
            Ptyp_constr "int" (stdlib/stdlib.mli[1078,40180+36]..[1078,40180+39])
            []
          core_type (stdlib/stdlib.mli[1078,40180+43]..[1078,40180+63])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/stdlib.mli[1078,40180+43]..[1078,40180+49])
              Ptyp_constr "string" (stdlib/stdlib.mli[1078,40180+43]..[1078,40180+49])
              []
            core_type (stdlib/stdlib.mli[1078,40180+53]..[1078,40180+63])
              Ptyp_constr "in_channel" (stdlib/stdlib.mli[1078,40180+53]..[1078,40180+63])
              []
      []
  signature_item (stdlib/stdlib.mli[1085,40516+0]..[1085,40516+35])
    Psig_value
    value_description "input_char" (stdlib/stdlib.mli[1085,40516+4]..[1085,40516+14]) (stdlib/stdlib.mli[1085,40516+0]..[1085,40516+35])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1086,40552+0]..[1087,40605+65])
            Pstr_eval
            expression (stdlib/stdlib.mli[1086,40552+0]..[1087,40605+65])
              Pexp_constant PConst_string(" Read one character from the given input channel.\n   @raise End_of_file if there are no more characters to read. ",(stdlib/stdlib.mli[1086,40552+0]..[1087,40605+65]),None)
        ]
      core_type (stdlib/stdlib.mli[1085,40516+17]..[1085,40516+35])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1085,40516+17]..[1085,40516+27])
          Ptyp_constr "in_channel" (stdlib/stdlib.mli[1085,40516+17]..[1085,40516+27])
          []
        core_type (stdlib/stdlib.mli[1085,40516+31]..[1085,40516+35])
          Ptyp_constr "char" (stdlib/stdlib.mli[1085,40516+31]..[1085,40516+35])
          []
      []
  signature_item (stdlib/stdlib.mli[1089,40672+0]..[1089,40672+37])
    Psig_value
    value_description "input_line" (stdlib/stdlib.mli[1089,40672+4]..[1089,40672+14]) (stdlib/stdlib.mli[1089,40672+0]..[1089,40672+37])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1090,40710+0]..[1094,40948+31])
            Pstr_eval
            expression (stdlib/stdlib.mli[1090,40710+0]..[1094,40948+31])
              Pexp_constant PConst_string(" Read characters from the given input channel, until a\n   newline character is encountered. Return the string of\n   all characters read, without the newline character at the end.\n   @raise End_of_file if the end of the file is reached\n   at the beginning of line. ",(stdlib/stdlib.mli[1090,40710+0]..[1094,40948+31]),None)
        ]
      core_type (stdlib/stdlib.mli[1089,40672+17]..[1089,40672+37])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1089,40672+17]..[1089,40672+27])
          Ptyp_constr "in_channel" (stdlib/stdlib.mli[1089,40672+17]..[1089,40672+27])
          []
        core_type (stdlib/stdlib.mli[1089,40672+31]..[1089,40672+37])
          Ptyp_constr "string" (stdlib/stdlib.mli[1089,40672+31]..[1089,40672+37])
          []
      []
  signature_item (stdlib/stdlib.mli[1096,40981+0]..[1096,40981+52])
    Psig_value
    value_description "input" (stdlib/stdlib.mli[1096,40981+4]..[1096,40981+9]) (stdlib/stdlib.mli[1096,40981+0]..[1096,40981+52])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1097,41034+0]..[1111,41824+46])
            Pstr_eval
            expression (stdlib/stdlib.mli[1097,41034+0]..[1111,41824+46])
              Pexp_constant PConst_string(" [input ic buf pos len] reads up to [len] characters from\n   the given channel [ic], storing them in byte sequence [buf], starting at\n   character number [pos].\n   It returns the actual number of characters read, between 0 and\n   [len] (inclusive).\n   A return value of 0 means that the end of file was reached.\n   A return value between 0 and [len] exclusive means that\n   not all requested [len] characters were read, either because\n   no more characters were available at that time, or because\n   the implementation found it convenient to do a partial read;\n   [input] must be called again to read the remaining characters,\n   if desired.  (See also {!Stdlib.really_input} for reading\n   exactly [len] characters.)\n   Exception [Invalid_argument \"input\"] is raised if [pos] and [len]\n   do not designate a valid range of [buf]. ",(stdlib/stdlib.mli[1097,41034+0]..[1111,41824+46]),None)
        ]
      core_type (stdlib/stdlib.mli[1096,40981+12]..[1096,40981+52])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1096,40981+12]..[1096,40981+22])
          Ptyp_constr "in_channel" (stdlib/stdlib.mli[1096,40981+12]..[1096,40981+22])
          []
        core_type (stdlib/stdlib.mli[1096,40981+26]..[1096,40981+52])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[1096,40981+26]..[1096,40981+31])
            Ptyp_constr "bytes" (stdlib/stdlib.mli[1096,40981+26]..[1096,40981+31])
            []
          core_type (stdlib/stdlib.mli[1096,40981+35]..[1096,40981+52])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/stdlib.mli[1096,40981+35]..[1096,40981+38])
              Ptyp_constr "int" (stdlib/stdlib.mli[1096,40981+35]..[1096,40981+38])
              []
            core_type (stdlib/stdlib.mli[1096,40981+42]..[1096,40981+52])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/stdlib.mli[1096,40981+42]..[1096,40981+45])
                Ptyp_constr "int" (stdlib/stdlib.mli[1096,40981+42]..[1096,40981+45])
                []
              core_type (stdlib/stdlib.mli[1096,40981+49]..[1096,40981+52])
                Ptyp_constr "int" (stdlib/stdlib.mli[1096,40981+49]..[1096,40981+52])
                []
      []
  signature_item (stdlib/stdlib.mli[1113,41872+0]..[1113,41872+60])
    Psig_value
    value_description "really_input" (stdlib/stdlib.mli[1113,41872+4]..[1113,41872+16]) (stdlib/stdlib.mli[1113,41872+0]..[1113,41872+60])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1114,41933+0]..[1119,42210+62])
            Pstr_eval
            expression (stdlib/stdlib.mli[1114,41933+0]..[1119,42210+62])
              Pexp_constant PConst_string(" [really_input ic buf pos len] reads [len] characters from channel [ic],\n   storing them in byte sequence [buf], starting at character number [pos].\n   @raise End_of_file if the end of file is reached before [len]\n   characters have been read.\n   @raise Invalid_argument if\n   [pos] and [len] do not designate a valid range of [buf]. ",(stdlib/stdlib.mli[1114,41933+0]..[1119,42210+62]),None)
        ]
      core_type (stdlib/stdlib.mli[1113,41872+19]..[1113,41872+60])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1113,41872+19]..[1113,41872+29])
          Ptyp_constr "in_channel" (stdlib/stdlib.mli[1113,41872+19]..[1113,41872+29])
          []
        core_type (stdlib/stdlib.mli[1113,41872+33]..[1113,41872+60])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[1113,41872+33]..[1113,41872+38])
            Ptyp_constr "bytes" (stdlib/stdlib.mli[1113,41872+33]..[1113,41872+38])
            []
          core_type (stdlib/stdlib.mli[1113,41872+42]..[1113,41872+60])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/stdlib.mli[1113,41872+42]..[1113,41872+45])
              Ptyp_constr "int" (stdlib/stdlib.mli[1113,41872+42]..[1113,41872+45])
              []
            core_type (stdlib/stdlib.mli[1113,41872+49]..[1113,41872+60])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/stdlib.mli[1113,41872+49]..[1113,41872+52])
                Ptyp_constr "int" (stdlib/stdlib.mli[1113,41872+49]..[1113,41872+52])
                []
              core_type (stdlib/stdlib.mli[1113,41872+56]..[1113,41872+60])
                Ptyp_constr "unit" (stdlib/stdlib.mli[1113,41872+56]..[1113,41872+60])
                []
      []
  signature_item (stdlib/stdlib.mli[1121,42274+0]..[1121,42274+53])
    Psig_value
    value_description "really_input_string" (stdlib/stdlib.mli[1121,42274+4]..[1121,42274+23]) (stdlib/stdlib.mli[1121,42274+0]..[1121,42274+53])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1122,42328+0]..[1126,42534+19])
            Pstr_eval
            expression (stdlib/stdlib.mli[1122,42328+0]..[1126,42534+19])
              Pexp_constant PConst_string(" [really_input_string ic len] reads [len] characters from channel [ic]\n   and returns them in a new string.\n   @raise End_of_file if the end of file is reached before [len]\n   characters have been read.\n   @since 4.02.0 ",(stdlib/stdlib.mli[1122,42328+0]..[1126,42534+19]),None)
        ]
      core_type (stdlib/stdlib.mli[1121,42274+26]..[1121,42274+53])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1121,42274+26]..[1121,42274+36])
          Ptyp_constr "in_channel" (stdlib/stdlib.mli[1121,42274+26]..[1121,42274+36])
          []
        core_type (stdlib/stdlib.mli[1121,42274+40]..[1121,42274+53])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[1121,42274+40]..[1121,42274+43])
            Ptyp_constr "int" (stdlib/stdlib.mli[1121,42274+40]..[1121,42274+43])
            []
          core_type (stdlib/stdlib.mli[1121,42274+47]..[1121,42274+53])
            Ptyp_constr "string" (stdlib/stdlib.mli[1121,42274+47]..[1121,42274+53])
            []
      []
  signature_item (stdlib/stdlib.mli[1128,42555+0]..[1128,42555+34])
    Psig_value
    value_description "input_byte" (stdlib/stdlib.mli[1128,42555+4]..[1128,42555+14]) (stdlib/stdlib.mli[1128,42555+0]..[1128,42555+34])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1129,42590+0]..[1131,42684+56])
            Pstr_eval
            expression (stdlib/stdlib.mli[1129,42590+0]..[1131,42684+56])
              Pexp_constant PConst_string(" Same as {!Stdlib.input_char}, but return the 8-bit integer representing\n   the character.\n   @raise End_of_file if the end of file was reached. ",(stdlib/stdlib.mli[1129,42590+0]..[1131,42684+56]),None)
        ]
      core_type (stdlib/stdlib.mli[1128,42555+17]..[1128,42555+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1128,42555+17]..[1128,42555+27])
          Ptyp_constr "in_channel" (stdlib/stdlib.mli[1128,42555+17]..[1128,42555+27])
          []
        core_type (stdlib/stdlib.mli[1128,42555+31]..[1128,42555+34])
          Ptyp_constr "int" (stdlib/stdlib.mli[1128,42555+31]..[1128,42555+34])
          []
      []
  signature_item (stdlib/stdlib.mli[1133,42742+0]..[1133,42742+40])
    Psig_value
    value_description "input_binary_int" (stdlib/stdlib.mli[1133,42742+4]..[1133,42742+20]) (stdlib/stdlib.mli[1133,42742+0]..[1133,42742+40])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1134,42783+0]..[1137,42987+14])
            Pstr_eval
            expression (stdlib/stdlib.mli[1134,42783+0]..[1137,42987+14])
              Pexp_constant PConst_string(" Read an integer encoded in binary format (4 bytes, big-endian)\n   from the given input channel. See {!Stdlib.output_binary_int}.\n   @raise End_of_file if the end of file was reached while reading the\n   integer. ",(stdlib/stdlib.mli[1134,42783+0]..[1137,42987+14]),None)
        ]
      core_type (stdlib/stdlib.mli[1133,42742+23]..[1133,42742+40])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1133,42742+23]..[1133,42742+33])
          Ptyp_constr "in_channel" (stdlib/stdlib.mli[1133,42742+23]..[1133,42742+33])
          []
        core_type (stdlib/stdlib.mli[1133,42742+37]..[1133,42742+40])
          Ptyp_constr "int" (stdlib/stdlib.mli[1133,42742+37]..[1133,42742+40])
          []
      []
  signature_item (stdlib/stdlib.mli[1139,43003+0]..[1139,43003+34])
    Psig_value
    value_description "input_value" (stdlib/stdlib.mli[1139,43003+4]..[1139,43003+15]) (stdlib/stdlib.mli[1139,43003+0]..[1139,43003+34])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1140,43038+0]..[1144,43291+55])
            Pstr_eval
            expression (stdlib/stdlib.mli[1140,43038+0]..[1144,43291+55])
              Pexp_constant PConst_string(" Read the representation of a structured value, as produced\n   by {!Stdlib.output_value}, and return the corresponding value.\n   This function is identical to {!Marshal.from_channel};\n   see the description of module {!Marshal} for more information,\n   in particular concerning the lack of type safety. ",(stdlib/stdlib.mli[1140,43038+0]..[1144,43291+55]),None)
        ]
      core_type (stdlib/stdlib.mli[1139,43003+18]..[1139,43003+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1139,43003+18]..[1139,43003+28])
          Ptyp_constr "in_channel" (stdlib/stdlib.mli[1139,43003+18]..[1139,43003+28])
          []
        core_type (stdlib/stdlib.mli[1139,43003+32]..[1139,43003+34])
          Ptyp_var a
      []
  signature_item (stdlib/stdlib.mli[1146,43348+0]..[1146,43348+39])
    Psig_value
    value_description "seek_in" (stdlib/stdlib.mli[1146,43348+4]..[1146,43348+11]) (stdlib/stdlib.mli[1146,43348+0]..[1146,43348+39])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1147,43388+0]..[1149,43515+56])
            Pstr_eval
            expression (stdlib/stdlib.mli[1147,43388+0]..[1149,43515+56])
              Pexp_constant PConst_string(" [seek_in chan pos] sets the current reading position to [pos]\n   for channel [chan]. This works only for regular files. On\n   files of other kinds, the behavior is unspecified. ",(stdlib/stdlib.mli[1147,43388+0]..[1149,43515+56]),None)
        ]
      core_type (stdlib/stdlib.mli[1146,43348+14]..[1146,43348+39])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1146,43348+14]..[1146,43348+24])
          Ptyp_constr "in_channel" (stdlib/stdlib.mli[1146,43348+14]..[1146,43348+24])
          []
        core_type (stdlib/stdlib.mli[1146,43348+28]..[1146,43348+39])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[1146,43348+28]..[1146,43348+31])
            Ptyp_constr "int" (stdlib/stdlib.mli[1146,43348+28]..[1146,43348+31])
            []
          core_type (stdlib/stdlib.mli[1146,43348+35]..[1146,43348+39])
            Ptyp_constr "unit" (stdlib/stdlib.mli[1146,43348+35]..[1146,43348+39])
            []
      []
  signature_item (stdlib/stdlib.mli[1151,43573+0]..[1151,43573+30])
    Psig_value
    value_description "pos_in" (stdlib/stdlib.mli[1151,43573+4]..[1151,43573+10]) (stdlib/stdlib.mli[1151,43573+0]..[1151,43573+30])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1152,43604+0]..[1158,44013+19])
            Pstr_eval
            expression (stdlib/stdlib.mli[1152,43604+0]..[1158,44013+19])
              Pexp_constant PConst_string(" Return the current reading position for the given channel.  For\n    files opened in text mode under Windows, the returned position is\n    approximate (owing to end-of-line conversion); in particular,\n    saving the current position with [pos_in], then going back to this\n    position using [seek_in] will not work.  For this programming\n    idiom to work reliably and portably, the file must be opened in\n    binary mode. ",(stdlib/stdlib.mli[1152,43604+0]..[1158,44013+19]),None)
        ]
      core_type (stdlib/stdlib.mli[1151,43573+13]..[1151,43573+30])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1151,43573+13]..[1151,43573+23])
          Ptyp_constr "in_channel" (stdlib/stdlib.mli[1151,43573+13]..[1151,43573+23])
          []
        core_type (stdlib/stdlib.mli[1151,43573+27]..[1151,43573+30])
          Ptyp_constr "int" (stdlib/stdlib.mli[1151,43573+27]..[1151,43573+30])
          []
      []
  signature_item (stdlib/stdlib.mli[1160,44034+0]..[1160,44034+41])
    Psig_value
    value_description "in_channel_length" (stdlib/stdlib.mli[1160,44034+4]..[1160,44034+21]) (stdlib/stdlib.mli[1160,44034+0]..[1160,44034+41])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1161,44076+0]..[1166,44408+27])
            Pstr_eval
            expression (stdlib/stdlib.mli[1161,44076+0]..[1166,44408+27])
              Pexp_constant PConst_string(" Return the size (number of characters) of the regular file\n    on which the given channel is opened.  If the channel is opened\n    on a file that is not a regular file, the result is meaningless.\n    The returned size does not take into account the end-of-line\n    translations that can be performed when reading from a channel\n    opened in text mode. ",(stdlib/stdlib.mli[1161,44076+0]..[1166,44408+27]),None)
        ]
      core_type (stdlib/stdlib.mli[1160,44034+24]..[1160,44034+41])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1160,44034+24]..[1160,44034+34])
          Ptyp_constr "in_channel" (stdlib/stdlib.mli[1160,44034+24]..[1160,44034+34])
          []
        core_type (stdlib/stdlib.mli[1160,44034+38]..[1160,44034+41])
          Ptyp_constr "int" (stdlib/stdlib.mli[1160,44034+38]..[1160,44034+41])
          []
      []
  signature_item (stdlib/stdlib.mli[1168,44437+0]..[1168,44437+33])
    Psig_value
    value_description "close_in" (stdlib/stdlib.mli[1168,44437+4]..[1168,44437+12]) (stdlib/stdlib.mli[1168,44437+0]..[1168,44437+33])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1169,44471+0]..[1172,44665+20])
            Pstr_eval
            expression (stdlib/stdlib.mli[1169,44471+0]..[1172,44665+20])
              Pexp_constant PConst_string(" Close the given channel.  Input functions raise a [Sys_error]\n  exception when they are applied to a closed input channel,\n  except [close_in], which does nothing when applied to an already\n  closed channel. ",(stdlib/stdlib.mli[1169,44471+0]..[1172,44665+20]),None)
        ]
      core_type (stdlib/stdlib.mli[1168,44437+15]..[1168,44437+33])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1168,44437+15]..[1168,44437+25])
          Ptyp_constr "in_channel" (stdlib/stdlib.mli[1168,44437+15]..[1168,44437+25])
          []
        core_type (stdlib/stdlib.mli[1168,44437+29]..[1168,44437+33])
          Ptyp_constr "unit" (stdlib/stdlib.mli[1168,44437+29]..[1168,44437+33])
          []
      []
  signature_item (stdlib/stdlib.mli[1174,44687+0]..[1174,44687+39])
    Psig_value
    value_description "close_in_noerr" (stdlib/stdlib.mli[1174,44687+4]..[1174,44687+18]) (stdlib/stdlib.mli[1174,44687+0]..[1174,44687+39])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1175,44727+0]..[1175,44727+49])
            Pstr_eval
            expression (stdlib/stdlib.mli[1175,44727+0]..[1175,44727+49])
              Pexp_constant PConst_string(" Same as [close_in], but ignore all errors. ",(stdlib/stdlib.mli[1175,44727+0]..[1175,44727+49]),None)
        ]
      core_type (stdlib/stdlib.mli[1174,44687+21]..[1174,44687+39])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1174,44687+21]..[1174,44687+31])
          Ptyp_constr "in_channel" (stdlib/stdlib.mli[1174,44687+21]..[1174,44687+31])
          []
        core_type (stdlib/stdlib.mli[1174,44687+35]..[1174,44687+39])
          Ptyp_constr "unit" (stdlib/stdlib.mli[1174,44687+35]..[1174,44687+39])
          []
      []
  signature_item (stdlib/stdlib.mli[1177,44778+0]..[1177,44778+51])
    Psig_value
    value_description "set_binary_mode_in" (stdlib/stdlib.mli[1177,44778+4]..[1177,44778+22]) (stdlib/stdlib.mli[1177,44778+0]..[1177,44778+51])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1178,44830+0]..[1185,45249+59])
            Pstr_eval
            expression (stdlib/stdlib.mli[1178,44830+0]..[1185,45249+59])
              Pexp_constant PConst_string(" [set_binary_mode_in ic true] sets the channel [ic] to binary\n   mode: no translations take place during input.\n   [set_binary_mode_out ic false] sets the channel [ic] to text\n   mode: depending on the operating system, some translations\n   may take place during input.  For instance, under Windows,\n   end-of-lines will be translated from [\\r\\n] to [\\n].\n   This function has no effect under operating systems that\n   do not distinguish between text mode and binary mode. ",(stdlib/stdlib.mli[1178,44830+0]..[1185,45249+59]),None)
        ]
      core_type (stdlib/stdlib.mli[1177,44778+25]..[1177,44778+51])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1177,44778+25]..[1177,44778+35])
          Ptyp_constr "in_channel" (stdlib/stdlib.mli[1177,44778+25]..[1177,44778+35])
          []
        core_type (stdlib/stdlib.mli[1177,44778+39]..[1177,44778+51])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[1177,44778+39]..[1177,44778+43])
            Ptyp_constr "bool" (stdlib/stdlib.mli[1177,44778+39]..[1177,44778+43])
            []
          core_type (stdlib/stdlib.mli[1177,44778+47]..[1177,44778+51])
            Ptyp_constr "unit" (stdlib/stdlib.mli[1177,44778+47]..[1177,44778+51])
            []
      []
  signature_item (stdlib/stdlib.mli[1188,45311+0]..[1188,45311+36])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[1188,45311+0]..[1188,45311+36])
        Pstr_eval
        expression (stdlib/stdlib.mli[1188,45311+0]..[1188,45311+36])
          Pexp_constant PConst_string(" {2 Operations on large files} ",(stdlib/stdlib.mli[1188,45311+0]..[1188,45311+36]),None)
    ]
  signature_item (stdlib/stdlib.mli[1190,45349+0]..[1198,45642+5])
    Psig_module "LargeFile" (stdlib/stdlib.mli[1190,45349+7]..[1190,45349+16])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1199,45648+0]..[1204,45945+63])
            Pstr_eval
            expression (stdlib/stdlib.mli[1199,45648+0]..[1204,45945+63])
              Pexp_constant PConst_string(" Operations on large files.\n  This sub-module provides 64-bit variants of the channel functions\n  that manipulate file positions and file sizes.  By representing\n  positions and sizes by 64-bit integers (type [int64]) instead of\n  regular integers (type [int]), these alternate functions allow\n  operating on files whose sizes are greater than [max_int]. ",(stdlib/stdlib.mli[1199,45648+0]..[1204,45945+63]),None)
        ]
    module_type (stdlib/stdlib.mli[1191,45368+2]..[1198,45642+5])
      Pmty_signature
      [
        signature_item (stdlib/stdlib.mli[1192,45374+4]..[1192,45374+47])
          Psig_value
          value_description "seek_out" (stdlib/stdlib.mli[1192,45374+8]..[1192,45374+16]) (stdlib/stdlib.mli[1192,45374+4]..[1192,45374+47])
            core_type (stdlib/stdlib.mli[1192,45374+19]..[1192,45374+47])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/stdlib.mli[1192,45374+19]..[1192,45374+30])
                Ptyp_constr "out_channel" (stdlib/stdlib.mli[1192,45374+19]..[1192,45374+30])
                []
              core_type (stdlib/stdlib.mli[1192,45374+34]..[1192,45374+47])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/stdlib.mli[1192,45374+34]..[1192,45374+39])
                  Ptyp_constr "int64" (stdlib/stdlib.mli[1192,45374+34]..[1192,45374+39])
                  []
                core_type (stdlib/stdlib.mli[1192,45374+43]..[1192,45374+47])
                  Ptyp_constr "unit" (stdlib/stdlib.mli[1192,45374+43]..[1192,45374+47])
                  []
            []
        signature_item (stdlib/stdlib.mli[1193,45422+4]..[1193,45422+38])
          Psig_value
          value_description "pos_out" (stdlib/stdlib.mli[1193,45422+8]..[1193,45422+15]) (stdlib/stdlib.mli[1193,45422+4]..[1193,45422+38])
            core_type (stdlib/stdlib.mli[1193,45422+18]..[1193,45422+38])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/stdlib.mli[1193,45422+18]..[1193,45422+29])
                Ptyp_constr "out_channel" (stdlib/stdlib.mli[1193,45422+18]..[1193,45422+29])
                []
              core_type (stdlib/stdlib.mli[1193,45422+33]..[1193,45422+38])
                Ptyp_constr "int64" (stdlib/stdlib.mli[1193,45422+33]..[1193,45422+38])
                []
            []
        signature_item (stdlib/stdlib.mli[1194,45461+4]..[1194,45461+49])
          Psig_value
          value_description "out_channel_length" (stdlib/stdlib.mli[1194,45461+8]..[1194,45461+26]) (stdlib/stdlib.mli[1194,45461+4]..[1194,45461+49])
            core_type (stdlib/stdlib.mli[1194,45461+29]..[1194,45461+49])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/stdlib.mli[1194,45461+29]..[1194,45461+40])
                Ptyp_constr "out_channel" (stdlib/stdlib.mli[1194,45461+29]..[1194,45461+40])
                []
              core_type (stdlib/stdlib.mli[1194,45461+44]..[1194,45461+49])
                Ptyp_constr "int64" (stdlib/stdlib.mli[1194,45461+44]..[1194,45461+49])
                []
            []
        signature_item (stdlib/stdlib.mli[1195,45511+4]..[1195,45511+45])
          Psig_value
          value_description "seek_in" (stdlib/stdlib.mli[1195,45511+8]..[1195,45511+15]) (stdlib/stdlib.mli[1195,45511+4]..[1195,45511+45])
            core_type (stdlib/stdlib.mli[1195,45511+18]..[1195,45511+45])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/stdlib.mli[1195,45511+18]..[1195,45511+28])
                Ptyp_constr "in_channel" (stdlib/stdlib.mli[1195,45511+18]..[1195,45511+28])
                []
              core_type (stdlib/stdlib.mli[1195,45511+32]..[1195,45511+45])
                Ptyp_arrow
                Nolabel
                core_type (stdlib/stdlib.mli[1195,45511+32]..[1195,45511+37])
                  Ptyp_constr "int64" (stdlib/stdlib.mli[1195,45511+32]..[1195,45511+37])
                  []
                core_type (stdlib/stdlib.mli[1195,45511+41]..[1195,45511+45])
                  Ptyp_constr "unit" (stdlib/stdlib.mli[1195,45511+41]..[1195,45511+45])
                  []
            []
        signature_item (stdlib/stdlib.mli[1196,45557+4]..[1196,45557+36])
          Psig_value
          value_description "pos_in" (stdlib/stdlib.mli[1196,45557+8]..[1196,45557+14]) (stdlib/stdlib.mli[1196,45557+4]..[1196,45557+36])
            core_type (stdlib/stdlib.mli[1196,45557+17]..[1196,45557+36])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/stdlib.mli[1196,45557+17]..[1196,45557+27])
                Ptyp_constr "in_channel" (stdlib/stdlib.mli[1196,45557+17]..[1196,45557+27])
                []
              core_type (stdlib/stdlib.mli[1196,45557+31]..[1196,45557+36])
                Ptyp_constr "int64" (stdlib/stdlib.mli[1196,45557+31]..[1196,45557+36])
                []
            []
        signature_item (stdlib/stdlib.mli[1197,45594+4]..[1197,45594+47])
          Psig_value
          value_description "in_channel_length" (stdlib/stdlib.mli[1197,45594+8]..[1197,45594+25]) (stdlib/stdlib.mli[1197,45594+4]..[1197,45594+47])
            core_type (stdlib/stdlib.mli[1197,45594+28]..[1197,45594+47])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/stdlib.mli[1197,45594+28]..[1197,45594+38])
                Ptyp_constr "in_channel" (stdlib/stdlib.mli[1197,45594+28]..[1197,45594+38])
                []
              core_type (stdlib/stdlib.mli[1197,45594+42]..[1197,45594+47])
                Ptyp_constr "int64" (stdlib/stdlib.mli[1197,45594+42]..[1197,45594+47])
                []
            []
      ]
  signature_item (stdlib/stdlib.mli[1206,46010+0]..[1206,46010+21])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[1206,46010+0]..[1206,46010+21])
        Pstr_eval
        expression (stdlib/stdlib.mli[1206,46010+0]..[1206,46010+21])
          Pexp_constant PConst_string(" {1 References} ",(stdlib/stdlib.mli[1206,46010+0]..[1206,46010+21]),None)
    ]
  signature_item (stdlib/stdlib.mli[1208,46033+0]..[1208,46033+39])
    Psig_type Rec
    [
      type_declaration "ref" (stdlib/stdlib.mli[1208,46033+8]..[1208,46033+11]) (stdlib/stdlib.mli[1208,46033+0]..[1208,46033+39])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/stdlib.mli[1209,46073+0]..[1210,46139+27])
              Pstr_eval
              expression (stdlib/stdlib.mli[1209,46073+0]..[1210,46139+27])
                Pexp_constant PConst_string(" The type of references (mutable indirection cells) containing\n   a value of type ['a]. ",(stdlib/stdlib.mli[1209,46073+0]..[1210,46139+27]),None)
          ]
        ptype_params =
          [
            core_type (stdlib/stdlib.mli[1208,46033+5]..[1208,46033+7])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (stdlib/stdlib.mli[1208,46033+16]..[1208,46033+37])
                Mutable
                "contents" (stdlib/stdlib.mli[1208,46033+24]..[1208,46033+32])                core_type (stdlib/stdlib.mli[1208,46033+35]..[1208,46033+37])
                  Ptyp_var a
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (stdlib/stdlib.mli[1212,46168+0]..[1212,46168+44])
    Psig_value
    value_description "ref" (stdlib/stdlib.mli[1212,46168+9]..[1212,46168+12]) (stdlib/stdlib.mli[1212,46168+0]..[1212,46168+44])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1213,46213+0]..[1213,46213+59])
            Pstr_eval
            expression (stdlib/stdlib.mli[1213,46213+0]..[1213,46213+59])
              Pexp_constant PConst_string(" Return a fresh reference containing the given value. ",(stdlib/stdlib.mli[1213,46213+0]..[1213,46213+59]),None)
        ]
      core_type (stdlib/stdlib.mli[1212,46168+15]..[1212,46168+27])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1212,46168+15]..[1212,46168+17])
          Ptyp_var a
        core_type (stdlib/stdlib.mli[1212,46168+21]..[1212,46168+27])
          Ptyp_constr "ref" (stdlib/stdlib.mli[1212,46168+24]..[1212,46168+27])
          [
            core_type (stdlib/stdlib.mli[1212,46168+21]..[1212,46168+23])
              Ptyp_var a
          ]
      [
        "%makemutable"
      ]
  signature_item (stdlib/stdlib.mli[1215,46274+0]..[1215,46274+41])
    Psig_value
    value_description "!" (stdlib/stdlib.mli[1215,46274+9]..[1215,46274+14]) (stdlib/stdlib.mli[1215,46274+0]..[1215,46274+41])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1216,46316+0]..[1219,46476+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[1216,46316+0]..[1219,46476+2])
              Pexp_constant PConst_string(" [!r] returns the current contents of reference [r].\n   Equivalent to [fun r -> r.contents].\n   Unary operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[1216,46316+0]..[1219,46476+2]),None)
        ]
      core_type (stdlib/stdlib.mli[1215,46274+17]..[1215,46274+29])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1215,46274+17]..[1215,46274+23])
          Ptyp_constr "ref" (stdlib/stdlib.mli[1215,46274+20]..[1215,46274+23])
          [
            core_type (stdlib/stdlib.mli[1215,46274+17]..[1215,46274+19])
              Ptyp_var a
          ]
        core_type (stdlib/stdlib.mli[1215,46274+27]..[1215,46274+29])
          Ptyp_var a
      [
        "%field0"
      ]
  signature_item (stdlib/stdlib.mli[1221,46480+0]..[1221,46480+53])
    Psig_value
    value_description ":=" (stdlib/stdlib.mli[1221,46480+9]..[1221,46480+15]) (stdlib/stdlib.mli[1221,46480+0]..[1221,46480+53])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1222,46534+0]..[1225,46712+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[1222,46534+0]..[1225,46712+2])
              Pexp_constant PConst_string(" [r := a] stores the value of [a] in reference [r].\n   Equivalent to [fun r v -> r.contents <- v].\n   Right-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[1222,46534+0]..[1225,46712+2]),None)
        ]
      core_type (stdlib/stdlib.mli[1221,46480+18]..[1221,46480+38])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1221,46480+18]..[1221,46480+24])
          Ptyp_constr "ref" (stdlib/stdlib.mli[1221,46480+21]..[1221,46480+24])
          [
            core_type (stdlib/stdlib.mli[1221,46480+18]..[1221,46480+20])
              Ptyp_var a
          ]
        core_type (stdlib/stdlib.mli[1221,46480+28]..[1221,46480+38])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[1221,46480+28]..[1221,46480+30])
            Ptyp_var a
          core_type (stdlib/stdlib.mli[1221,46480+34]..[1221,46480+38])
            Ptyp_constr "unit" (stdlib/stdlib.mli[1221,46480+34]..[1221,46480+38])
            []
      [
        "%setfield0"
      ]
  signature_item (stdlib/stdlib.mli[1227,46716+0]..[1227,46716+41])
    Psig_value
    value_description "incr" (stdlib/stdlib.mli[1227,46716+9]..[1227,46716+13]) (stdlib/stdlib.mli[1227,46716+0]..[1227,46716+41])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1228,46758+0]..[1229,46818+44])
            Pstr_eval
            expression (stdlib/stdlib.mli[1228,46758+0]..[1229,46818+44])
              Pexp_constant PConst_string(" Increment the integer contained in the given reference.\n   Equivalent to [fun r -> r := succ !r]. ",(stdlib/stdlib.mli[1228,46758+0]..[1229,46818+44]),None)
        ]
      core_type (stdlib/stdlib.mli[1227,46716+16]..[1227,46716+31])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1227,46716+16]..[1227,46716+23])
          Ptyp_constr "ref" (stdlib/stdlib.mli[1227,46716+20]..[1227,46716+23])
          [
            core_type (stdlib/stdlib.mli[1227,46716+16]..[1227,46716+19])
              Ptyp_constr "int" (stdlib/stdlib.mli[1227,46716+16]..[1227,46716+19])
              []
          ]
        core_type (stdlib/stdlib.mli[1227,46716+27]..[1227,46716+31])
          Ptyp_constr "unit" (stdlib/stdlib.mli[1227,46716+27]..[1227,46716+31])
          []
      [
        "%incr"
      ]
  signature_item (stdlib/stdlib.mli[1231,46864+0]..[1231,46864+41])
    Psig_value
    value_description "decr" (stdlib/stdlib.mli[1231,46864+9]..[1231,46864+13]) (stdlib/stdlib.mli[1231,46864+0]..[1231,46864+41])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1232,46906+0]..[1233,46966+44])
            Pstr_eval
            expression (stdlib/stdlib.mli[1232,46906+0]..[1233,46966+44])
              Pexp_constant PConst_string(" Decrement the integer contained in the given reference.\n   Equivalent to [fun r -> r := pred !r]. ",(stdlib/stdlib.mli[1232,46906+0]..[1233,46966+44]),None)
        ]
      core_type (stdlib/stdlib.mli[1231,46864+16]..[1231,46864+31])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1231,46864+16]..[1231,46864+23])
          Ptyp_constr "ref" (stdlib/stdlib.mli[1231,46864+20]..[1231,46864+23])
          [
            core_type (stdlib/stdlib.mli[1231,46864+16]..[1231,46864+19])
              Ptyp_constr "int" (stdlib/stdlib.mli[1231,46864+16]..[1231,46864+19])
              []
          ]
        core_type (stdlib/stdlib.mli[1231,46864+27]..[1231,46864+31])
          Ptyp_constr "unit" (stdlib/stdlib.mli[1231,46864+27]..[1231,46864+31])
          []
      [
        "%decr"
      ]
  signature_item (stdlib/stdlib.mli[1235,47012+0]..[1235,47012+22])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[1235,47012+0]..[1235,47012+22])
        Pstr_eval
        expression (stdlib/stdlib.mli[1235,47012+0]..[1235,47012+22])
          Pexp_constant PConst_string(" {1 Result type} ",(stdlib/stdlib.mli[1235,47012+0]..[1235,47012+22]),None)
    ]
  signature_item (stdlib/stdlib.mli[1238,47057+0]..[1238,47057+44])
    Psig_type Rec
    [
      type_declaration "result" (stdlib/stdlib.mli[1238,47057+13]..[1238,47057+19]) (stdlib/stdlib.mli[1238,47057+0]..[1238,47057+44])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/stdlib.mli[1237,47036+0]..[1237,47036+20])
              Pstr_eval
              expression (stdlib/stdlib.mli[1237,47036+0]..[1237,47036+20])
                Pexp_constant PConst_string(" @since 4.03.0 ",(stdlib/stdlib.mli[1237,47036+0]..[1237,47036+20]),None)
          ]
        ptype_params =
          [
            core_type (stdlib/stdlib.mli[1238,47057+6]..[1238,47057+8])
              Ptyp_var a
            core_type (stdlib/stdlib.mli[1238,47057+9]..[1238,47057+11])
              Ptyp_var b
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (stdlib/stdlib.mli[1238,47057+22]..[1238,47057+30])
                "Ok" (stdlib/stdlib.mli[1238,47057+22]..[1238,47057+24])
                [
                  core_type (stdlib/stdlib.mli[1238,47057+28]..[1238,47057+30])
                    Ptyp_var a
                ]
                None
              (stdlib/stdlib.mli[1238,47057+31]..[1238,47057+44])
                "Error" (stdlib/stdlib.mli[1238,47057+33]..[1238,47057+38])
                [
                  core_type (stdlib/stdlib.mli[1238,47057+42]..[1238,47057+44])
                    Ptyp_var b
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  signature_item (stdlib/stdlib.mli[1240,47103+0]..[1240,47103+39])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[1240,47103+0]..[1240,47103+39])
        Pstr_eval
        expression (stdlib/stdlib.mli[1240,47103+0]..[1240,47103+39])
          Pexp_constant PConst_string(" {1 Operations on format strings} ",(stdlib/stdlib.mli[1240,47103+0]..[1240,47103+39]),None)
    ]
  signature_item (stdlib/stdlib.mli[1242,47144+0]..[1267,48494+2])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[1242,47144+0]..[1267,48494+2])
        Pstr_eval
        expression (stdlib/stdlib.mli[1242,47144+0]..[1267,48494+2])
          Pexp_constant PConst_string(" Format strings are character strings with special lexical conventions\n  that defines the functionality of formatted input/output functions. Format\n  strings are used to read data with formatted input functions from module\n  {!Scanf} and to print data with formatted output functions from modules\n  {!Printf} and {!Format}.\n\n  Format strings are made of three kinds of entities:\n  - {e conversions specifications}, introduced by the special character ['%']\n    followed by one or more characters specifying what kind of argument to\n    read or print,\n  - {e formatting indications}, introduced by the special character ['@']\n    followed by one or more characters specifying how to read or print the\n    argument,\n  - {e plain characters} that are regular characters with usual lexical\n    conventions. Plain characters specify string literals to be read in the\n    input or printed in the output.\n\n  There is an additional lexical rule to escape the special characters ['%']\n  and ['@'] in format strings: if a special character follows a ['%']\n  character, it is treated as a plain character. In other words, [\"%%\"] is\n  considered as a plain ['%'] and [\"%@\"] as a plain ['@'].\n\n  For more information about conversion specifications and formatting\n  indications available, read the documentation of modules {!Scanf},\n  {!Printf} and {!Format}.\n",(stdlib/stdlib.mli[1242,47144+0]..[1267,48494+2]),None)
    ]
  signature_item (stdlib/stdlib.mli[1269,48498+0]..[1308,50337+2])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[1269,48498+0]..[1308,50337+2])
        Pstr_eval
        expression (stdlib/stdlib.mli[1269,48498+0]..[1308,50337+2])
          Pexp_constant PConst_string(" Format strings have a general and highly polymorphic type\n    [('a, 'b, 'c, 'd, 'e, 'f) format6].\n    The two simplified types, [format] and [format4] below are\n    included for backward compatibility with earlier releases of\n    OCaml.\n\n    The meaning of format string type parameters is as follows:\n\n    - ['a] is the type of the parameters of the format for formatted output\n      functions ([printf]-style functions);\n      ['a] is the type of the values read by the format for formatted input\n      functions ([scanf]-style functions).\n\n    - ['b] is the type of input source for formatted input functions and the\n      type of output target for formatted output functions.\n      For [printf]-style functions from module {!Printf}, ['b] is typically\n      [out_channel];\n      for [printf]-style functions from module {!Format}, ['b] is typically\n      {!Format.formatter};\n      for [scanf]-style functions from module {!Scanf}, ['b] is typically\n      {!Scanf.Scanning.in_channel}.\n\n      Type argument ['b] is also the type of the first argument given to\n      user's defined printing functions for [%a] and [%t] conversions,\n      and user's defined reading functions for [%r] conversion.\n\n    - ['c] is the type of the result of the [%a] and [%t] printing\n      functions, and also the type of the argument transmitted to the\n      first argument of [kprintf]-style functions or to the\n      [kscanf]-style functions.\n\n    - ['d] is the type of parameters for the [scanf]-style functions.\n\n    - ['e] is the type of the receiver function for the [scanf]-style functions.\n\n    - ['f] is the final result type of a formatted input/output function\n      invocation: for the [printf]-style functions, it is typically [unit];\n      for the [scanf]-style functions, it is typically the result type of the\n      receiver function.\n",(stdlib/stdlib.mli[1269,48498+0]..[1308,50337+2]),None)
    ]
  signature_item (stdlib/stdlib.mli[1310,50341+0]..[1311,50381+59])
    Psig_type Rec
    [
      type_declaration "format6" (stdlib/stdlib.mli[1310,50341+30]..[1310,50341+37]) (stdlib/stdlib.mli[1310,50341+0]..[1311,50381+59])
        ptype_params =
          [
            core_type (stdlib/stdlib.mli[1310,50341+6]..[1310,50341+8])
              Ptyp_var a
            core_type (stdlib/stdlib.mli[1310,50341+10]..[1310,50341+12])
              Ptyp_var b
            core_type (stdlib/stdlib.mli[1310,50341+14]..[1310,50341+16])
              Ptyp_var c
            core_type (stdlib/stdlib.mli[1310,50341+18]..[1310,50341+20])
              Ptyp_var d
            core_type (stdlib/stdlib.mli[1310,50341+22]..[1310,50341+24])
              Ptyp_var e
            core_type (stdlib/stdlib.mli[1310,50341+26]..[1310,50341+28])
              Ptyp_var f
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/stdlib.mli[1311,50381+2]..[1311,50381+59])
              Ptyp_constr "CamlinternalFormatBasics.format6" (stdlib/stdlib.mli[1311,50381+27]..[1311,50381+59])
              [
                core_type (stdlib/stdlib.mli[1311,50381+3]..[1311,50381+5])
                  Ptyp_var a
                core_type (stdlib/stdlib.mli[1311,50381+7]..[1311,50381+9])
                  Ptyp_var b
                core_type (stdlib/stdlib.mli[1311,50381+11]..[1311,50381+13])
                  Ptyp_var c
                core_type (stdlib/stdlib.mli[1311,50381+15]..[1311,50381+17])
                  Ptyp_var d
                core_type (stdlib/stdlib.mli[1311,50381+19]..[1311,50381+21])
                  Ptyp_var e
                core_type (stdlib/stdlib.mli[1311,50381+23]..[1311,50381+25])
                  Ptyp_var f
              ]
    ]
  signature_item (stdlib/stdlib.mli[1313,50442+0]..[1313,50442+64])
    Psig_type Rec
    [
      type_declaration "format4" (stdlib/stdlib.mli[1313,50442+22]..[1313,50442+29]) (stdlib/stdlib.mli[1313,50442+0]..[1313,50442+64])
        ptype_params =
          [
            core_type (stdlib/stdlib.mli[1313,50442+6]..[1313,50442+8])
              Ptyp_var a
            core_type (stdlib/stdlib.mli[1313,50442+10]..[1313,50442+12])
              Ptyp_var b
            core_type (stdlib/stdlib.mli[1313,50442+14]..[1313,50442+16])
              Ptyp_var c
            core_type (stdlib/stdlib.mli[1313,50442+18]..[1313,50442+20])
              Ptyp_var d
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/stdlib.mli[1313,50442+32]..[1313,50442+64])
              Ptyp_constr "format6" (stdlib/stdlib.mli[1313,50442+57]..[1313,50442+64])
              [
                core_type (stdlib/stdlib.mli[1313,50442+33]..[1313,50442+35])
                  Ptyp_var a
                core_type (stdlib/stdlib.mli[1313,50442+37]..[1313,50442+39])
                  Ptyp_var b
                core_type (stdlib/stdlib.mli[1313,50442+41]..[1313,50442+43])
                  Ptyp_var c
                core_type (stdlib/stdlib.mli[1313,50442+45]..[1313,50442+47])
                  Ptyp_var c
                core_type (stdlib/stdlib.mli[1313,50442+49]..[1313,50442+51])
                  Ptyp_var c
                core_type (stdlib/stdlib.mli[1313,50442+53]..[1313,50442+55])
                  Ptyp_var d
              ]
    ]
  signature_item (stdlib/stdlib.mli[1315,50508+0]..[1315,50508+51])
    Psig_type Rec
    [
      type_declaration "format" (stdlib/stdlib.mli[1315,50508+18]..[1315,50508+24]) (stdlib/stdlib.mli[1315,50508+0]..[1315,50508+51])
        ptype_params =
          [
            core_type (stdlib/stdlib.mli[1315,50508+6]..[1315,50508+8])
              Ptyp_var a
            core_type (stdlib/stdlib.mli[1315,50508+10]..[1315,50508+12])
              Ptyp_var b
            core_type (stdlib/stdlib.mli[1315,50508+14]..[1315,50508+16])
              Ptyp_var c
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/stdlib.mli[1315,50508+27]..[1315,50508+51])
              Ptyp_constr "format4" (stdlib/stdlib.mli[1315,50508+44]..[1315,50508+51])
              [
                core_type (stdlib/stdlib.mli[1315,50508+28]..[1315,50508+30])
                  Ptyp_var a
                core_type (stdlib/stdlib.mli[1315,50508+32]..[1315,50508+34])
                  Ptyp_var b
                core_type (stdlib/stdlib.mli[1315,50508+36]..[1315,50508+38])
                  Ptyp_var c
                core_type (stdlib/stdlib.mli[1315,50508+40]..[1315,50508+42])
                  Ptyp_var c
              ]
    ]
  signature_item (stdlib/stdlib.mli[1317,50561+0]..[1317,50561+65])
    Psig_value
    value_description "string_of_format" (stdlib/stdlib.mli[1317,50561+4]..[1317,50561+20]) (stdlib/stdlib.mli[1317,50561+0]..[1317,50561+65])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1318,50627+0]..[1318,50627+46])
            Pstr_eval
            expression (stdlib/stdlib.mli[1318,50627+0]..[1318,50627+46])
              Pexp_constant PConst_string(" Converts a format string into a string. ",(stdlib/stdlib.mli[1318,50627+0]..[1318,50627+46]),None)
        ]
      core_type (stdlib/stdlib.mli[1317,50561+23]..[1317,50561+65])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1317,50561+23]..[1317,50561+55])
          Ptyp_constr "format6" (stdlib/stdlib.mli[1317,50561+48]..[1317,50561+55])
          [
            core_type (stdlib/stdlib.mli[1317,50561+24]..[1317,50561+26])
              Ptyp_var a
            core_type (stdlib/stdlib.mli[1317,50561+28]..[1317,50561+30])
              Ptyp_var b
            core_type (stdlib/stdlib.mli[1317,50561+32]..[1317,50561+34])
              Ptyp_var c
            core_type (stdlib/stdlib.mli[1317,50561+36]..[1317,50561+38])
              Ptyp_var d
            core_type (stdlib/stdlib.mli[1317,50561+40]..[1317,50561+42])
              Ptyp_var e
            core_type (stdlib/stdlib.mli[1317,50561+44]..[1317,50561+46])
              Ptyp_var f
          ]
        core_type (stdlib/stdlib.mli[1317,50561+59]..[1317,50561+65])
          Ptyp_constr "string" (stdlib/stdlib.mli[1317,50561+59]..[1317,50561+65])
          []
      []
  signature_item (stdlib/stdlib.mli[1320,50675+0]..[1322,50741+48])
    Psig_value
    value_description "format_of_string" (stdlib/stdlib.mli[1320,50675+9]..[1320,50675+25]) (stdlib/stdlib.mli[1320,50675+0]..[1322,50741+48])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1323,50790+0]..[1328,51062+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[1323,50790+0]..[1328,51062+2])
              Pexp_constant PConst_string(" [format_of_string s] returns a format string read from the string\n    literal [s].\n    Note: [format_of_string] can not convert a string argument that is not a\n    literal. If you need this functionality, use the more general\n    {!Scanf.format_from_string} function.\n",(stdlib/stdlib.mli[1323,50790+0]..[1328,51062+2]),None)
        ]
      core_type (stdlib/stdlib.mli[1321,50703+2]..[1322,50741+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1321,50703+2]..[1321,50703+34])
          Ptyp_constr "format6" (stdlib/stdlib.mli[1321,50703+27]..[1321,50703+34])
          [
            core_type (stdlib/stdlib.mli[1321,50703+3]..[1321,50703+5])
              Ptyp_var a
            core_type (stdlib/stdlib.mli[1321,50703+7]..[1321,50703+9])
              Ptyp_var b
            core_type (stdlib/stdlib.mli[1321,50703+11]..[1321,50703+13])
              Ptyp_var c
            core_type (stdlib/stdlib.mli[1321,50703+15]..[1321,50703+17])
              Ptyp_var d
            core_type (stdlib/stdlib.mli[1321,50703+19]..[1321,50703+21])
              Ptyp_var e
            core_type (stdlib/stdlib.mli[1321,50703+23]..[1321,50703+25])
              Ptyp_var f
          ]
        core_type (stdlib/stdlib.mli[1322,50741+2]..[1322,50741+34])
          Ptyp_constr "format6" (stdlib/stdlib.mli[1322,50741+27]..[1322,50741+34])
          [
            core_type (stdlib/stdlib.mli[1322,50741+3]..[1322,50741+5])
              Ptyp_var a
            core_type (stdlib/stdlib.mli[1322,50741+7]..[1322,50741+9])
              Ptyp_var b
            core_type (stdlib/stdlib.mli[1322,50741+11]..[1322,50741+13])
              Ptyp_var c
            core_type (stdlib/stdlib.mli[1322,50741+15]..[1322,50741+17])
              Ptyp_var d
            core_type (stdlib/stdlib.mli[1322,50741+19]..[1322,50741+21])
              Ptyp_var e
            core_type (stdlib/stdlib.mli[1322,50741+23]..[1322,50741+25])
              Ptyp_var f
          ]
      [
        "%identity"
      ]
  signature_item (stdlib/stdlib.mli[1330,51066+0]..[1333,51155+34])
    Psig_value
    value_description "^^" (stdlib/stdlib.mli[1330,51066+4]..[1330,51066+10]) (stdlib/stdlib.mli[1330,51066+0]..[1333,51155+34])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1334,51190+0]..[1340,51594+2])
            Pstr_eval
            expression (stdlib/stdlib.mli[1334,51190+0]..[1340,51594+2])
              Pexp_constant PConst_string(" [f1 ^^ f2] catenates format strings [f1] and [f2]. The result is a\n  format string that behaves as the concatenation of format strings [f1] and\n  [f2]: in case of formatted output, it accepts arguments from [f1], then\n  arguments from [f2]; in case of formatted input, it returns results from\n  [f1], then results from [f2].\n  Right-associative operator, see {!Ocaml_operators} for more information.\n",(stdlib/stdlib.mli[1334,51190+0]..[1340,51594+2]),None)
        ]
      core_type (stdlib/stdlib.mli[1331,51079+2]..[1333,51155+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1331,51079+2]..[1331,51079+34])
          Ptyp_constr "format6" (stdlib/stdlib.mli[1331,51079+27]..[1331,51079+34])
          [
            core_type (stdlib/stdlib.mli[1331,51079+3]..[1331,51079+5])
              Ptyp_var a
            core_type (stdlib/stdlib.mli[1331,51079+7]..[1331,51079+9])
              Ptyp_var b
            core_type (stdlib/stdlib.mli[1331,51079+11]..[1331,51079+13])
              Ptyp_var c
            core_type (stdlib/stdlib.mli[1331,51079+15]..[1331,51079+17])
              Ptyp_var d
            core_type (stdlib/stdlib.mli[1331,51079+19]..[1331,51079+21])
              Ptyp_var e
            core_type (stdlib/stdlib.mli[1331,51079+23]..[1331,51079+25])
              Ptyp_var f
          ]
        core_type (stdlib/stdlib.mli[1332,51117+2]..[1333,51155+34])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[1332,51117+2]..[1332,51117+34])
            Ptyp_constr "format6" (stdlib/stdlib.mli[1332,51117+27]..[1332,51117+34])
            [
              core_type (stdlib/stdlib.mli[1332,51117+3]..[1332,51117+5])
                Ptyp_var f
              core_type (stdlib/stdlib.mli[1332,51117+7]..[1332,51117+9])
                Ptyp_var b
              core_type (stdlib/stdlib.mli[1332,51117+11]..[1332,51117+13])
                Ptyp_var c
              core_type (stdlib/stdlib.mli[1332,51117+15]..[1332,51117+17])
                Ptyp_var e
              core_type (stdlib/stdlib.mli[1332,51117+19]..[1332,51117+21])
                Ptyp_var g
              core_type (stdlib/stdlib.mli[1332,51117+23]..[1332,51117+25])
                Ptyp_var h
            ]
          core_type (stdlib/stdlib.mli[1333,51155+2]..[1333,51155+34])
            Ptyp_constr "format6" (stdlib/stdlib.mli[1333,51155+27]..[1333,51155+34])
            [
              core_type (stdlib/stdlib.mli[1333,51155+3]..[1333,51155+5])
                Ptyp_var a
              core_type (stdlib/stdlib.mli[1333,51155+7]..[1333,51155+9])
                Ptyp_var b
              core_type (stdlib/stdlib.mli[1333,51155+11]..[1333,51155+13])
                Ptyp_var c
              core_type (stdlib/stdlib.mli[1333,51155+15]..[1333,51155+17])
                Ptyp_var d
              core_type (stdlib/stdlib.mli[1333,51155+19]..[1333,51155+21])
                Ptyp_var g
              core_type (stdlib/stdlib.mli[1333,51155+23]..[1333,51155+25])
                Ptyp_var h
            ]
      []
  signature_item (stdlib/stdlib.mli[1342,51598+0]..[1342,51598+30])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[1342,51598+0]..[1342,51598+30])
        Pstr_eval
        expression (stdlib/stdlib.mli[1342,51598+0]..[1342,51598+30])
          Pexp_constant PConst_string(" {1 Program termination} ",(stdlib/stdlib.mli[1342,51598+0]..[1342,51598+30]),None)
    ]
  signature_item (stdlib/stdlib.mli[1344,51630+0]..[1344,51630+20])
    Psig_value
    value_description "exit" (stdlib/stdlib.mli[1344,51630+4]..[1344,51630+8]) (stdlib/stdlib.mli[1344,51630+0]..[1344,51630+20])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1345,51651+0]..[1351,52013+56])
            Pstr_eval
            expression (stdlib/stdlib.mli[1345,51651+0]..[1351,52013+56])
              Pexp_constant PConst_string(" Terminate the process, returning the given status code\n   to the operating system: usually 0 to indicate no errors,\n   and a small positive integer to indicate failure.\n   All open output channels are flushed with [flush_all].\n   An implicit [exit 0] is performed each time a program\n   terminates normally.  An implicit [exit 2] is performed if the program\n   terminates early because of an uncaught exception. ",(stdlib/stdlib.mli[1345,51651+0]..[1351,52013+56]),None)
        ]
      core_type (stdlib/stdlib.mli[1344,51630+11]..[1344,51630+20])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1344,51630+11]..[1344,51630+14])
          Ptyp_constr "int" (stdlib/stdlib.mli[1344,51630+11]..[1344,51630+14])
          []
        core_type (stdlib/stdlib.mli[1344,51630+18]..[1344,51630+20])
          Ptyp_var a
      []
  signature_item (stdlib/stdlib.mli[1353,52071+0]..[1353,52071+36])
    Psig_value
    value_description "at_exit" (stdlib/stdlib.mli[1353,52071+4]..[1353,52071+11]) (stdlib/stdlib.mli[1353,52071+0]..[1353,52071+36])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/stdlib.mli[1354,52108+0]..[1362,52499+66])
            Pstr_eval
            expression (stdlib/stdlib.mli[1354,52108+0]..[1362,52499+66])
              Pexp_constant PConst_string(" Register the given function to be called at program termination\n   time. The functions registered with [at_exit] will be called when\n   the program does any of the following:\n   - executes {!Stdlib.exit}\n   - terminates, either normally or because of an uncaught\n     exception\n   - executes the C function [caml_shutdown].\n   The functions are called in 'last in, first out' order: the\n   function most recently added with [at_exit] is called first. ",(stdlib/stdlib.mli[1354,52108+0]..[1362,52499+66]),None)
        ]
      core_type (stdlib/stdlib.mli[1353,52071+14]..[1353,52071+36])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1353,52071+15]..[1353,52071+27])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[1353,52071+15]..[1353,52071+19])
            Ptyp_constr "unit" (stdlib/stdlib.mli[1353,52071+15]..[1353,52071+19])
            []
          core_type (stdlib/stdlib.mli[1353,52071+23]..[1353,52071+27])
            Ptyp_constr "unit" (stdlib/stdlib.mli[1353,52071+23]..[1353,52071+27])
            []
        core_type (stdlib/stdlib.mli[1353,52071+32]..[1353,52071+36])
          Ptyp_constr "unit" (stdlib/stdlib.mli[1353,52071+32]..[1353,52071+36])
          []
      []
  signature_item (stdlib/stdlib.mli[1364,52567+0]..[1364,52567+7])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[1364,52567+0]..[1364,52567+7])
        Pstr_eval
        expression (stdlib/stdlib.mli[1364,52567+0]..[1364,52567+7])
          Pexp_constant PConst_string("/*",(stdlib/stdlib.mli[1364,52567+0]..[1364,52567+7]),None)
    ]
  signature_item (stdlib/stdlib.mli[1368,52643+0]..[1368,52643+40])
    Psig_value
    value_description "valid_float_lexem" (stdlib/stdlib.mli[1368,52643+4]..[1368,52643+21]) (stdlib/stdlib.mli[1368,52643+0]..[1368,52643+40])
      core_type (stdlib/stdlib.mli[1368,52643+24]..[1368,52643+40])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1368,52643+24]..[1368,52643+30])
          Ptyp_constr "string" (stdlib/stdlib.mli[1368,52643+24]..[1368,52643+30])
          []
        core_type (stdlib/stdlib.mli[1368,52643+34]..[1368,52643+40])
          Ptyp_constr "string" (stdlib/stdlib.mli[1368,52643+34]..[1368,52643+40])
          []
      []
  signature_item (stdlib/stdlib.mli[1370,52685+0]..[1370,52685+67])
    Psig_value
    value_description "unsafe_really_input" (stdlib/stdlib.mli[1370,52685+4]..[1370,52685+23]) (stdlib/stdlib.mli[1370,52685+0]..[1370,52685+67])
      core_type (stdlib/stdlib.mli[1370,52685+26]..[1370,52685+67])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1370,52685+26]..[1370,52685+36])
          Ptyp_constr "in_channel" (stdlib/stdlib.mli[1370,52685+26]..[1370,52685+36])
          []
        core_type (stdlib/stdlib.mli[1370,52685+40]..[1370,52685+67])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/stdlib.mli[1370,52685+40]..[1370,52685+45])
            Ptyp_constr "bytes" (stdlib/stdlib.mli[1370,52685+40]..[1370,52685+45])
            []
          core_type (stdlib/stdlib.mli[1370,52685+49]..[1370,52685+67])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/stdlib.mli[1370,52685+49]..[1370,52685+52])
              Ptyp_constr "int" (stdlib/stdlib.mli[1370,52685+49]..[1370,52685+52])
              []
            core_type (stdlib/stdlib.mli[1370,52685+56]..[1370,52685+67])
              Ptyp_arrow
              Nolabel
              core_type (stdlib/stdlib.mli[1370,52685+56]..[1370,52685+59])
                Ptyp_constr "int" (stdlib/stdlib.mli[1370,52685+56]..[1370,52685+59])
                []
              core_type (stdlib/stdlib.mli[1370,52685+63]..[1370,52685+67])
                Ptyp_constr "unit" (stdlib/stdlib.mli[1370,52685+63]..[1370,52685+67])
                []
      []
  signature_item (stdlib/stdlib.mli[1372,52754+0]..[1372,52754+29])
    Psig_value
    value_description "do_at_exit" (stdlib/stdlib.mli[1372,52754+4]..[1372,52754+14]) (stdlib/stdlib.mli[1372,52754+0]..[1372,52754+29])
      core_type (stdlib/stdlib.mli[1372,52754+17]..[1372,52754+29])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/stdlib.mli[1372,52754+17]..[1372,52754+21])
          Ptyp_constr "unit" (stdlib/stdlib.mli[1372,52754+17]..[1372,52754+21])
          []
        core_type (stdlib/stdlib.mli[1372,52754+25]..[1372,52754+29])
          Ptyp_constr "unit" (stdlib/stdlib.mli[1372,52754+25]..[1372,52754+29])
          []
      []
  signature_item (stdlib/stdlib.mli[1374,52785+0]..[1374,52785+7])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[1374,52785+0]..[1374,52785+7])
        Pstr_eval
        expression (stdlib/stdlib.mli[1374,52785+0]..[1374,52785+7])
          Pexp_constant PConst_string("/*",(stdlib/stdlib.mli[1374,52785+0]..[1374,52785+7]),None)
    ]
  signature_item (stdlib/stdlib.mli[1376,52794+0]..[1376,52794+44])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/stdlib.mli[1376,52794+0]..[1376,52794+44])
        Pstr_eval
        expression (stdlib/stdlib.mli[1376,52794+0]..[1376,52794+44])
          Pexp_constant PConst_string(" {1:modules Standard library modules } ",(stdlib/stdlib.mli[1376,52794+0]..[1376,52794+44]),None)
    ]
  signature_item (stdlib/stdlib.mli[1379,52859+0]..[1379,52859+25])
    Psig_module "Arg" (stdlib/stdlib.mli[1379,52859+7]..[1379,52859+10])
    module_type (stdlib/stdlib.mli[1379,52859+22]..[1379,52859+25])
      Pmty_alias "Arg" (stdlib/stdlib.mli[1379,52859+22]..[1379,52859+25])
  signature_item (stdlib/stdlib.mli[1380,52885+0]..[1380,52885+27])
    Psig_module "Array" (stdlib/stdlib.mli[1380,52885+7]..[1380,52885+12])
    module_type (stdlib/stdlib.mli[1380,52885+22]..[1380,52885+27])
      Pmty_alias "Array" (stdlib/stdlib.mli[1380,52885+22]..[1380,52885+27])
  signature_item (stdlib/stdlib.mli[1381,52913+0]..[1381,52913+33])
    Psig_module "ArrayLabels" (stdlib/stdlib.mli[1381,52913+7]..[1381,52913+18])
    module_type (stdlib/stdlib.mli[1381,52913+22]..[1381,52913+33])
      Pmty_alias "ArrayLabels" (stdlib/stdlib.mli[1381,52913+22]..[1381,52913+33])
  signature_item (stdlib/stdlib.mli[1382,52947+0]..[1382,52947+28])
    Psig_module "Atomic" (stdlib/stdlib.mli[1382,52947+7]..[1382,52947+13])
    module_type (stdlib/stdlib.mli[1382,52947+22]..[1382,52947+28])
      Pmty_alias "Atomic" (stdlib/stdlib.mli[1382,52947+22]..[1382,52947+28])
  signature_item (stdlib/stdlib.mli[1383,52976+0]..[1383,52976+30])
    Psig_module "Bigarray" (stdlib/stdlib.mli[1383,52976+7]..[1383,52976+15])
    module_type (stdlib/stdlib.mli[1383,52976+22]..[1383,52976+30])
      Pmty_alias "Bigarray" (stdlib/stdlib.mli[1383,52976+22]..[1383,52976+30])
  signature_item (stdlib/stdlib.mli[1384,53007+0]..[1384,53007+26])
    Psig_module "Bool" (stdlib/stdlib.mli[1384,53007+7]..[1384,53007+11])
    module_type (stdlib/stdlib.mli[1384,53007+22]..[1384,53007+26])
      Pmty_alias "Bool" (stdlib/stdlib.mli[1384,53007+22]..[1384,53007+26])
  signature_item (stdlib/stdlib.mli[1385,53034+0]..[1385,53034+28])
    Psig_module "Buffer" (stdlib/stdlib.mli[1385,53034+7]..[1385,53034+13])
    module_type (stdlib/stdlib.mli[1385,53034+22]..[1385,53034+28])
      Pmty_alias "Buffer" (stdlib/stdlib.mli[1385,53034+22]..[1385,53034+28])
  signature_item (stdlib/stdlib.mli[1386,53063+0]..[1386,53063+27])
    Psig_module "Bytes" (stdlib/stdlib.mli[1386,53063+7]..[1386,53063+12])
    module_type (stdlib/stdlib.mli[1386,53063+22]..[1386,53063+27])
      Pmty_alias "Bytes" (stdlib/stdlib.mli[1386,53063+22]..[1386,53063+27])
  signature_item (stdlib/stdlib.mli[1387,53091+0]..[1387,53091+33])
    Psig_module "BytesLabels" (stdlib/stdlib.mli[1387,53091+7]..[1387,53091+18])
    module_type (stdlib/stdlib.mli[1387,53091+22]..[1387,53091+33])
      Pmty_alias "BytesLabels" (stdlib/stdlib.mli[1387,53091+22]..[1387,53091+33])
  signature_item (stdlib/stdlib.mli[1388,53125+0]..[1388,53125+30])
    Psig_module "Callback" (stdlib/stdlib.mli[1388,53125+7]..[1388,53125+15])
    module_type (stdlib/stdlib.mli[1388,53125+22]..[1388,53125+30])
      Pmty_alias "Callback" (stdlib/stdlib.mli[1388,53125+22]..[1388,53125+30])
  signature_item (stdlib/stdlib.mli[1389,53156+0]..[1389,53156+26])
    Psig_module "Char" (stdlib/stdlib.mli[1389,53156+7]..[1389,53156+11])
    module_type (stdlib/stdlib.mli[1389,53156+22]..[1389,53156+26])
      Pmty_alias "Char" (stdlib/stdlib.mli[1389,53156+22]..[1389,53156+26])
  signature_item (stdlib/stdlib.mli[1390,53183+0]..[1390,53183+29])
    Psig_module "Complex" (stdlib/stdlib.mli[1390,53183+7]..[1390,53183+14])
    module_type (stdlib/stdlib.mli[1390,53183+22]..[1390,53183+29])
      Pmty_alias "Complex" (stdlib/stdlib.mli[1390,53183+22]..[1390,53183+29])
  signature_item (stdlib/stdlib.mli[1391,53213+0]..[1391,53213+28])
    Psig_module "Digest" (stdlib/stdlib.mli[1391,53213+7]..[1391,53213+13])
    module_type (stdlib/stdlib.mli[1391,53213+22]..[1391,53213+28])
      Pmty_alias "Digest" (stdlib/stdlib.mli[1391,53213+22]..[1391,53213+28])
  signature_item (stdlib/stdlib.mli[1392,53242+0]..[1392,53242+28])
    Psig_module "Either" (stdlib/stdlib.mli[1392,53242+7]..[1392,53242+13])
    module_type (stdlib/stdlib.mli[1392,53242+22]..[1392,53242+28])
      Pmty_alias "Either" (stdlib/stdlib.mli[1392,53242+22]..[1392,53242+28])
  signature_item (stdlib/stdlib.mli[1393,53271+0]..[1393,53271+31])
    Psig_module "Ephemeron" (stdlib/stdlib.mli[1393,53271+7]..[1393,53271+16])
    module_type (stdlib/stdlib.mli[1393,53271+22]..[1393,53271+31])
      Pmty_alias "Ephemeron" (stdlib/stdlib.mli[1393,53271+22]..[1393,53271+31])
  signature_item (stdlib/stdlib.mli[1394,53303+0]..[1394,53303+30])
    Psig_module "Filename" (stdlib/stdlib.mli[1394,53303+7]..[1394,53303+15])
    module_type (stdlib/stdlib.mli[1394,53303+22]..[1394,53303+30])
      Pmty_alias "Filename" (stdlib/stdlib.mli[1394,53303+22]..[1394,53303+30])
  signature_item (stdlib/stdlib.mli[1395,53334+0]..[1395,53334+27])
    Psig_module "Float" (stdlib/stdlib.mli[1395,53334+7]..[1395,53334+12])
    module_type (stdlib/stdlib.mli[1395,53334+22]..[1395,53334+27])
      Pmty_alias "Float" (stdlib/stdlib.mli[1395,53334+22]..[1395,53334+27])
  signature_item (stdlib/stdlib.mli[1396,53362+0]..[1396,53362+28])
    Psig_module "Format" (stdlib/stdlib.mli[1396,53362+7]..[1396,53362+13])
    module_type (stdlib/stdlib.mli[1396,53362+22]..[1396,53362+28])
      Pmty_alias "Format" (stdlib/stdlib.mli[1396,53362+22]..[1396,53362+28])
  signature_item (stdlib/stdlib.mli[1397,53391+0]..[1397,53391+25])
    Psig_module "Fun" (stdlib/stdlib.mli[1397,53391+7]..[1397,53391+10])
    module_type (stdlib/stdlib.mli[1397,53391+22]..[1397,53391+25])
      Pmty_alias "Fun" (stdlib/stdlib.mli[1397,53391+22]..[1397,53391+25])
  signature_item (stdlib/stdlib.mli[1398,53417+0]..[1398,53417+24])
    Psig_module "Gc" (stdlib/stdlib.mli[1398,53417+7]..[1398,53417+9])
    module_type (stdlib/stdlib.mli[1398,53417+22]..[1398,53417+24])
      Pmty_alias "Gc" (stdlib/stdlib.mli[1398,53417+22]..[1398,53417+24])
  signature_item (stdlib/stdlib.mli[1399,53442+0]..[1400,53471+55])
    Psig_module "Genlex" (stdlib/stdlib.mli[1399,53442+7]..[1399,53442+13])
      attribute "deprecated"
        [
          structure_item (stdlib/stdlib.mli[1400,53471+14]..[1400,53471+54])
            Pstr_eval
            expression (stdlib/stdlib.mli[1400,53471+14]..[1400,53471+54])
              Pexp_constant PConst_string("Use the camlp-streams library instead.",(stdlib/stdlib.mli[1400,53471+15]..[1400,53471+53]),None)
        ]
    module_type (stdlib/stdlib.mli[1399,53442+22]..[1399,53442+28])
      Pmty_alias "Genlex" (stdlib/stdlib.mli[1399,53442+22]..[1399,53442+28])
  signature_item (stdlib/stdlib.mli[1401,53527+0]..[1401,53527+29])
    Psig_module "Hashtbl" (stdlib/stdlib.mli[1401,53527+7]..[1401,53527+14])
    module_type (stdlib/stdlib.mli[1401,53527+22]..[1401,53527+29])
      Pmty_alias "Hashtbl" (stdlib/stdlib.mli[1401,53527+22]..[1401,53527+29])
  signature_item (stdlib/stdlib.mli[1402,53557+0]..[1402,53557+32])
    Psig_module "In_channel" (stdlib/stdlib.mli[1402,53557+7]..[1402,53557+17])
    module_type (stdlib/stdlib.mli[1402,53557+22]..[1402,53557+32])
      Pmty_alias "In_channel" (stdlib/stdlib.mli[1402,53557+22]..[1402,53557+32])
  signature_item (stdlib/stdlib.mli[1403,53590+0]..[1403,53590+25])
    Psig_module "Int" (stdlib/stdlib.mli[1403,53590+7]..[1403,53590+10])
    module_type (stdlib/stdlib.mli[1403,53590+22]..[1403,53590+25])
      Pmty_alias "Int" (stdlib/stdlib.mli[1403,53590+22]..[1403,53590+25])
  signature_item (stdlib/stdlib.mli[1404,53616+0]..[1404,53616+27])
    Psig_module "Int32" (stdlib/stdlib.mli[1404,53616+7]..[1404,53616+12])
    module_type (stdlib/stdlib.mli[1404,53616+22]..[1404,53616+27])
      Pmty_alias "Int32" (stdlib/stdlib.mli[1404,53616+22]..[1404,53616+27])
  signature_item (stdlib/stdlib.mli[1405,53644+0]..[1405,53644+27])
    Psig_module "Int64" (stdlib/stdlib.mli[1405,53644+7]..[1405,53644+12])
    module_type (stdlib/stdlib.mli[1405,53644+22]..[1405,53644+27])
      Pmty_alias "Int64" (stdlib/stdlib.mli[1405,53644+22]..[1405,53644+27])
  signature_item (stdlib/stdlib.mli[1406,53672+0]..[1406,53672+26])
    Psig_module "Lazy" (stdlib/stdlib.mli[1406,53672+7]..[1406,53672+11])
    module_type (stdlib/stdlib.mli[1406,53672+22]..[1406,53672+26])
      Pmty_alias "Lazy" (stdlib/stdlib.mli[1406,53672+22]..[1406,53672+26])
  signature_item (stdlib/stdlib.mli[1407,53699+0]..[1407,53699+28])
    Psig_module "Lexing" (stdlib/stdlib.mli[1407,53699+7]..[1407,53699+13])
    module_type (stdlib/stdlib.mli[1407,53699+22]..[1407,53699+28])
      Pmty_alias "Lexing" (stdlib/stdlib.mli[1407,53699+22]..[1407,53699+28])
  signature_item (stdlib/stdlib.mli[1408,53728+0]..[1408,53728+26])
    Psig_module "List" (stdlib/stdlib.mli[1408,53728+7]..[1408,53728+11])
    module_type (stdlib/stdlib.mli[1408,53728+22]..[1408,53728+26])
      Pmty_alias "List" (stdlib/stdlib.mli[1408,53728+22]..[1408,53728+26])
  signature_item (stdlib/stdlib.mli[1409,53755+0]..[1409,53755+32])
    Psig_module "ListLabels" (stdlib/stdlib.mli[1409,53755+7]..[1409,53755+17])
    module_type (stdlib/stdlib.mli[1409,53755+22]..[1409,53755+32])
      Pmty_alias "ListLabels" (stdlib/stdlib.mli[1409,53755+22]..[1409,53755+32])
  signature_item (stdlib/stdlib.mli[1410,53788+0]..[1410,53788+25])
    Psig_module "Map" (stdlib/stdlib.mli[1410,53788+7]..[1410,53788+10])
    module_type (stdlib/stdlib.mli[1410,53788+22]..[1410,53788+25])
      Pmty_alias "Map" (stdlib/stdlib.mli[1410,53788+22]..[1410,53788+25])
  signature_item (stdlib/stdlib.mli[1411,53814+0]..[1411,53814+29])
    Psig_module "Marshal" (stdlib/stdlib.mli[1411,53814+7]..[1411,53814+14])
    module_type (stdlib/stdlib.mli[1411,53814+22]..[1411,53814+29])
      Pmty_alias "Marshal" (stdlib/stdlib.mli[1411,53814+22]..[1411,53814+29])
  signature_item (stdlib/stdlib.mli[1412,53844+0]..[1412,53844+32])
    Psig_module "MoreLabels" (stdlib/stdlib.mli[1412,53844+7]..[1412,53844+17])
    module_type (stdlib/stdlib.mli[1412,53844+22]..[1412,53844+32])
      Pmty_alias "MoreLabels" (stdlib/stdlib.mli[1412,53844+22]..[1412,53844+32])
  signature_item (stdlib/stdlib.mli[1413,53877+0]..[1413,53877+31])
    Psig_module "Nativeint" (stdlib/stdlib.mli[1413,53877+7]..[1413,53877+16])
    module_type (stdlib/stdlib.mli[1413,53877+22]..[1413,53877+31])
      Pmty_alias "Nativeint" (stdlib/stdlib.mli[1413,53877+22]..[1413,53877+31])
  signature_item (stdlib/stdlib.mli[1414,53909+0]..[1414,53909+25])
    Psig_module "Obj" (stdlib/stdlib.mli[1414,53909+7]..[1414,53909+10])
    module_type (stdlib/stdlib.mli[1414,53909+22]..[1414,53909+25])
      Pmty_alias "Obj" (stdlib/stdlib.mli[1414,53909+22]..[1414,53909+25])
  signature_item (stdlib/stdlib.mli[1415,53935+0]..[1415,53935+24])
    Psig_module "Oo" (stdlib/stdlib.mli[1415,53935+7]..[1415,53935+9])
    module_type (stdlib/stdlib.mli[1415,53935+22]..[1415,53935+24])
      Pmty_alias "Oo" (stdlib/stdlib.mli[1415,53935+22]..[1415,53935+24])
  signature_item (stdlib/stdlib.mli[1416,53960+0]..[1416,53960+28])
    Psig_module "Option" (stdlib/stdlib.mli[1416,53960+7]..[1416,53960+13])
    module_type (stdlib/stdlib.mli[1416,53960+22]..[1416,53960+28])
      Pmty_alias "Option" (stdlib/stdlib.mli[1416,53960+22]..[1416,53960+28])
  signature_item (stdlib/stdlib.mli[1417,53989+0]..[1417,53989+33])
    Psig_module "Out_channel" (stdlib/stdlib.mli[1417,53989+7]..[1417,53989+18])
    module_type (stdlib/stdlib.mli[1417,53989+22]..[1417,53989+33])
      Pmty_alias "Out_channel" (stdlib/stdlib.mli[1417,53989+22]..[1417,53989+33])
  signature_item (stdlib/stdlib.mli[1418,54023+0]..[1418,54023+29])
    Psig_module "Parsing" (stdlib/stdlib.mli[1418,54023+7]..[1418,54023+14])
    module_type (stdlib/stdlib.mli[1418,54023+22]..[1418,54023+29])
      Pmty_alias "Parsing" (stdlib/stdlib.mli[1418,54023+22]..[1418,54023+29])
  signature_item (stdlib/stdlib.mli[1419,54053+0]..[1423,54198+61])
    Psig_module "Pervasives" (stdlib/stdlib.mli[1419,54053+7]..[1419,54053+17])
      attribute "deprecated"
        [
          structure_item (stdlib/stdlib.mli[1420,54086+14]..[1423,54198+60])
            Pstr_eval
            expression (stdlib/stdlib.mli[1420,54086+14]..[1423,54198+60])
              Pexp_constant PConst_string("Use Stdlib instead.\n\nIf you need to stay compatible with OCaml < 4.07, you can use the \nstdlib-shims library: https://github.com/ocaml/stdlib-shims",(stdlib/stdlib.mli[1420,54086+15]..[1423,54198+59]),None)
        ]
    module_type (stdlib/stdlib.mli[1419,54053+22]..[1419,54053+32])
      Pmty_alias "Pervasives" (stdlib/stdlib.mli[1419,54053+22]..[1419,54053+32])
  signature_item (stdlib/stdlib.mli[1424,54260+0]..[1424,54260+30])
    Psig_module "Printexc" (stdlib/stdlib.mli[1424,54260+7]..[1424,54260+15])
    module_type (stdlib/stdlib.mli[1424,54260+22]..[1424,54260+30])
      Pmty_alias "Printexc" (stdlib/stdlib.mli[1424,54260+22]..[1424,54260+30])
  signature_item (stdlib/stdlib.mli[1425,54291+0]..[1425,54291+28])
    Psig_module "Printf" (stdlib/stdlib.mli[1425,54291+7]..[1425,54291+13])
    module_type (stdlib/stdlib.mli[1425,54291+22]..[1425,54291+28])
      Pmty_alias "Printf" (stdlib/stdlib.mli[1425,54291+22]..[1425,54291+28])
  signature_item (stdlib/stdlib.mli[1426,54320+0]..[1426,54320+27])
    Psig_module "Queue" (stdlib/stdlib.mli[1426,54320+7]..[1426,54320+12])
    module_type (stdlib/stdlib.mli[1426,54320+22]..[1426,54320+27])
      Pmty_alias "Queue" (stdlib/stdlib.mli[1426,54320+22]..[1426,54320+27])
  signature_item (stdlib/stdlib.mli[1427,54348+0]..[1427,54348+28])
    Psig_module "Random" (stdlib/stdlib.mli[1427,54348+7]..[1427,54348+13])
    module_type (stdlib/stdlib.mli[1427,54348+22]..[1427,54348+28])
      Pmty_alias "Random" (stdlib/stdlib.mli[1427,54348+22]..[1427,54348+28])
  signature_item (stdlib/stdlib.mli[1428,54377+0]..[1428,54377+28])
    Psig_module "Result" (stdlib/stdlib.mli[1428,54377+7]..[1428,54377+13])
    module_type (stdlib/stdlib.mli[1428,54377+22]..[1428,54377+28])
      Pmty_alias "Result" (stdlib/stdlib.mli[1428,54377+22]..[1428,54377+28])
  signature_item (stdlib/stdlib.mli[1429,54406+0]..[1429,54406+27])
    Psig_module "Scanf" (stdlib/stdlib.mli[1429,54406+7]..[1429,54406+12])
    module_type (stdlib/stdlib.mli[1429,54406+22]..[1429,54406+27])
      Pmty_alias "Scanf" (stdlib/stdlib.mli[1429,54406+22]..[1429,54406+27])
  signature_item (stdlib/stdlib.mli[1430,54434+0]..[1430,54434+25])
    Psig_module "Seq" (stdlib/stdlib.mli[1430,54434+7]..[1430,54434+10])
    module_type (stdlib/stdlib.mli[1430,54434+22]..[1430,54434+25])
      Pmty_alias "Seq" (stdlib/stdlib.mli[1430,54434+22]..[1430,54434+25])
  signature_item (stdlib/stdlib.mli[1431,54460+0]..[1431,54460+25])
    Psig_module "Set" (stdlib/stdlib.mli[1431,54460+7]..[1431,54460+10])
    module_type (stdlib/stdlib.mli[1431,54460+22]..[1431,54460+25])
      Pmty_alias "Set" (stdlib/stdlib.mli[1431,54460+22]..[1431,54460+25])
  signature_item (stdlib/stdlib.mli[1432,54486+0]..[1432,54486+27])
    Psig_module "Stack" (stdlib/stdlib.mli[1432,54486+7]..[1432,54486+12])
    module_type (stdlib/stdlib.mli[1432,54486+22]..[1432,54486+27])
      Pmty_alias "Stack" (stdlib/stdlib.mli[1432,54486+22]..[1432,54486+27])
  signature_item (stdlib/stdlib.mli[1433,54514+0]..[1433,54514+31])
    Psig_module "StdLabels" (stdlib/stdlib.mli[1433,54514+7]..[1433,54514+16])
    module_type (stdlib/stdlib.mli[1433,54514+22]..[1433,54514+31])
      Pmty_alias "StdLabels" (stdlib/stdlib.mli[1433,54514+22]..[1433,54514+31])
  signature_item (stdlib/stdlib.mli[1434,54546+0]..[1435,54575+55])
    Psig_module "Stream" (stdlib/stdlib.mli[1434,54546+7]..[1434,54546+13])
      attribute "deprecated"
        [
          structure_item (stdlib/stdlib.mli[1435,54575+14]..[1435,54575+54])
            Pstr_eval
            expression (stdlib/stdlib.mli[1435,54575+14]..[1435,54575+54])
              Pexp_constant PConst_string("Use the camlp-streams library instead.",(stdlib/stdlib.mli[1435,54575+15]..[1435,54575+53]),None)
        ]
    module_type (stdlib/stdlib.mli[1434,54546+22]..[1434,54546+28])
      Pmty_alias "Stream" (stdlib/stdlib.mli[1434,54546+22]..[1434,54546+28])
  signature_item (stdlib/stdlib.mli[1436,54631+0]..[1436,54631+28])
    Psig_module "String" (stdlib/stdlib.mli[1436,54631+7]..[1436,54631+13])
    module_type (stdlib/stdlib.mli[1436,54631+22]..[1436,54631+28])
      Pmty_alias "String" (stdlib/stdlib.mli[1436,54631+22]..[1436,54631+28])
  signature_item (stdlib/stdlib.mli[1437,54660+0]..[1437,54660+34])
    Psig_module "StringLabels" (stdlib/stdlib.mli[1437,54660+7]..[1437,54660+19])
    module_type (stdlib/stdlib.mli[1437,54660+22]..[1437,54660+34])
      Pmty_alias "StringLabels" (stdlib/stdlib.mli[1437,54660+22]..[1437,54660+34])
  signature_item (stdlib/stdlib.mli[1438,54695+0]..[1438,54695+25])
    Psig_module "Sys" (stdlib/stdlib.mli[1438,54695+7]..[1438,54695+10])
    module_type (stdlib/stdlib.mli[1438,54695+22]..[1438,54695+25])
      Pmty_alias "Sys" (stdlib/stdlib.mli[1438,54695+22]..[1438,54695+25])
  signature_item (stdlib/stdlib.mli[1439,54721+0]..[1439,54721+27])
    Psig_module "Uchar" (stdlib/stdlib.mli[1439,54721+7]..[1439,54721+12])
    module_type (stdlib/stdlib.mli[1439,54721+22]..[1439,54721+27])
      Pmty_alias "Uchar" (stdlib/stdlib.mli[1439,54721+22]..[1439,54721+27])
  signature_item (stdlib/stdlib.mli[1440,54749+0]..[1440,54749+26])
    Psig_module "Unit" (stdlib/stdlib.mli[1440,54749+7]..[1440,54749+11])
    module_type (stdlib/stdlib.mli[1440,54749+22]..[1440,54749+26])
      Pmty_alias "Unit" (stdlib/stdlib.mli[1440,54749+22]..[1440,54749+26])
  signature_item (stdlib/stdlib.mli[1441,54776+0]..[1441,54776+26])
    Psig_module "Weak" (stdlib/stdlib.mli[1441,54776+7]..[1441,54776+11])
    module_type (stdlib/stdlib.mli[1441,54776+22]..[1441,54776+26])
      Pmty_alias "Weak" (stdlib/stdlib.mli[1441,54776+22]..[1441,54776+26])
]

