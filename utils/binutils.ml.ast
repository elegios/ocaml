[
  structure_item (utils/binutils.ml[16,1079+0]..[17,1099+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[16,1079+4]..[16,1079+15])
          Ppat_var "char_to_hex" (utils/binutils.ml[16,1079+4]..[16,1079+15])
        expression (utils/binutils.ml[16,1079+16]..[17,1099+39]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[16,1079+16]..[16,1079+17])
            Ppat_var "c" (utils/binutils.ml[16,1079+16]..[16,1079+17])
          expression (utils/binutils.ml[17,1099+2]..[17,1099+39])
            Pexp_apply
            expression (utils/binutils.ml[17,1099+2]..[17,1099+16])
              Pexp_ident "Printf.sprintf" (utils/binutils.ml[17,1099+2]..[17,1099+16])
            [
              <arg>
              Nolabel
                expression (utils/binutils.ml[17,1099+17]..[17,1099+25])
                  Pexp_constant PConst_string("0x%02x",(utils/binutils.ml[17,1099+18]..[17,1099+24]),None)
              <arg>
              Nolabel
                expression (utils/binutils.ml[17,1099+26]..[17,1099+39])
                  Pexp_apply
                  expression (utils/binutils.ml[17,1099+27]..[17,1099+36])
                    Pexp_ident "Char.code" (utils/binutils.ml[17,1099+27]..[17,1099+36])
                  [
                    <arg>
                    Nolabel
                      expression (utils/binutils.ml[17,1099+37]..[17,1099+38])
                        Pexp_ident "c" (utils/binutils.ml[17,1099+37]..[17,1099+38])
                  ]
            ]
    ]
  structure_item (utils/binutils.ml[19,1140+0]..[20,1159+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[19,1140+4]..[19,1140+14])
          Ppat_var "int_to_hex" (utils/binutils.ml[19,1140+4]..[19,1140+14])
        expression (utils/binutils.ml[19,1140+15]..[20,1159+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[19,1140+15]..[19,1140+16])
            Ppat_var "n" (utils/binutils.ml[19,1140+15]..[19,1140+16])
          expression (utils/binutils.ml[20,1159+2]..[20,1159+25])
            Pexp_apply
            expression (utils/binutils.ml[20,1159+2]..[20,1159+16])
              Pexp_ident "Printf.sprintf" (utils/binutils.ml[20,1159+2]..[20,1159+16])
            [
              <arg>
              Nolabel
                expression (utils/binutils.ml[20,1159+17]..[20,1159+23])
                  Pexp_constant PConst_string("0x%x",(utils/binutils.ml[20,1159+18]..[20,1159+22]),None)
              <arg>
              Nolabel
                expression (utils/binutils.ml[20,1159+24]..[20,1159+25])
                  Pexp_ident "n" (utils/binutils.ml[20,1159+24]..[20,1159+25])
            ]
    ]
  structure_item (utils/binutils.ml[22,1186+0]..[26,1279+26])
    Pstr_type Rec
    [
      type_declaration "error" (utils/binutils.ml[22,1186+5]..[22,1186+10]) (utils/binutils.ml[22,1186+0]..[26,1279+26])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (utils/binutils.ml[23,1199+2]..[23,1199+18])
                "Truncated_file" (utils/binutils.ml[23,1199+4]..[23,1199+18])
                []
                None
              (utils/binutils.ml[24,1218+2]..[24,1218+26])
                "Unrecognized" (utils/binutils.ml[24,1218+4]..[24,1218+16])
                [
                  core_type (utils/binutils.ml[24,1218+20]..[24,1218+26])
                    Ptyp_constr "string" (utils/binutils.ml[24,1218+20]..[24,1218+26])
                    []
                ]
                None
              (utils/binutils.ml[25,1245+2]..[25,1245+33])
                "Unsupported" (utils/binutils.ml[25,1245+4]..[25,1245+15])
                [
                  core_type (utils/binutils.ml[25,1245+19]..[25,1245+25])
                    Ptyp_constr "string" (utils/binutils.ml[25,1245+19]..[25,1245+25])
                    []
                  core_type (utils/binutils.ml[25,1245+28]..[25,1245+33])
                    Ptyp_constr "int64" (utils/binutils.ml[25,1245+28]..[25,1245+33])
                    []
                ]
                None
              (utils/binutils.ml[26,1279+2]..[26,1279+26])
                "Out_of_range" (utils/binutils.ml[26,1279+4]..[26,1279+16])
                [
                  core_type (utils/binutils.ml[26,1279+20]..[26,1279+26])
                    Ptyp_constr "string" (utils/binutils.ml[26,1279+20]..[26,1279+26])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (utils/binutils.ml[28,1307+0]..[39,1673+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[28,1307+4]..[28,1307+19])
          Ppat_var "error_to_string" (utils/binutils.ml[28,1307+4]..[28,1307+19])
        expression (utils/binutils.ml[28,1307+22]..[39,1673+50])
          Pexp_function
          [
            <case>
              pattern (utils/binutils.ml[29,1338+4]..[29,1338+18])
                Ppat_construct "Truncated_file" (utils/binutils.ml[29,1338+4]..[29,1338+18])
                None
              expression (utils/binutils.ml[30,1360+6]..[30,1360+22])
                Pexp_constant PConst_string("Truncated file",(utils/binutils.ml[30,1360+7]..[30,1360+21]),None)
            <case>
              pattern (utils/binutils.ml[31,1383+4]..[31,1383+22])
                Ppat_construct "Unrecognized" (utils/binutils.ml[31,1383+4]..[31,1383+16])
                Some
                  []
                  pattern (utils/binutils.ml[31,1383+17]..[31,1383+22])
                    Ppat_var "magic" (utils/binutils.ml[31,1383+17]..[31,1383+22])
              expression (utils/binutils.ml[32,1409+6]..[35,1526+48])
                Pexp_apply
                expression (utils/binutils.ml[32,1409+6]..[32,1409+20])
                  Pexp_ident "Printf.sprintf" (utils/binutils.ml[32,1409+6]..[32,1409+20])
                [
                  <arg>
                  Nolabel
                    expression (utils/binutils.ml[32,1409+21]..[32,1409+45])
                      Pexp_constant PConst_string("Unrecognized magic: %s",(utils/binutils.ml[32,1409+22]..[32,1409+44]),None)
                  <arg>
                  Nolabel
                    expression (utils/binutils.ml[33,1455+8]..[35,1526+48])
                      Pexp_apply
                      expression (utils/binutils.ml[33,1455+9]..[33,1455+22])
                        Pexp_ident "String.concat" (utils/binutils.ml[33,1455+9]..[33,1455+22])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[33,1455+23]..[33,1455+26])
                            Pexp_constant PConst_string(" ",(utils/binutils.ml[33,1455+24]..[33,1455+25]),None)
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[34,1482+11]..[35,1526+47])
                            Pexp_apply
                            expression (utils/binutils.ml[34,1482+12]..[34,1482+21])
                              Pexp_ident "List.init" (utils/binutils.ml[34,1482+12]..[34,1482+21])
                            [
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[34,1482+22]..[34,1482+43])
                                  Pexp_apply
                                  expression (utils/binutils.ml[34,1482+23]..[34,1482+36])
                                    Pexp_ident "String.length" (utils/binutils.ml[34,1482+23]..[34,1482+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[34,1482+37]..[34,1482+42])
                                        Pexp_ident "magic" (utils/binutils.ml[34,1482+37]..[34,1482+42])
                                  ]
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[35,1526+14]..[35,1526+46])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (utils/binutils.ml[35,1526+19]..[35,1526+20])
                                    Ppat_var "i" (utils/binutils.ml[35,1526+19]..[35,1526+20])
                                  expression (utils/binutils.ml[35,1526+24]..[35,1526+45])
                                    Pexp_apply
                                    expression (utils/binutils.ml[35,1526+24]..[35,1526+35])
                                      Pexp_ident "char_to_hex" (utils/binutils.ml[35,1526+24]..[35,1526+35])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[35,1526+36]..[35,1526+45])
                                          Pexp_apply
                                          expression (utils/binutils.ml[35,1526+36]..[35,1526+45]) ghost
                                            Pexp_ident "String.get" (utils/binutils.ml[35,1526+36]..[35,1526+45]) ghost
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[35,1526+36]..[35,1526+41])
                                                Pexp_ident "magic" (utils/binutils.ml[35,1526+36]..[35,1526+41])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[35,1526+43]..[35,1526+44])
                                                Pexp_ident "i" (utils/binutils.ml[35,1526+43]..[35,1526+44])
                                          ]
                                    ]
                            ]
                      ]
                ]
            <case>
              pattern (utils/binutils.ml[36,1575+4]..[36,1575+22])
                Ppat_construct "Unsupported" (utils/binutils.ml[36,1575+4]..[36,1575+15])
                Some
                  []
                  pattern (utils/binutils.ml[36,1575+16]..[36,1575+22])
                    Ppat_tuple
                    [
                      pattern (utils/binutils.ml[36,1575+17]..[36,1575+18])
                        Ppat_var "s" (utils/binutils.ml[36,1575+17]..[36,1575+18])
                      pattern (utils/binutils.ml[36,1575+20]..[36,1575+21])
                        Ppat_var "n" (utils/binutils.ml[36,1575+20]..[36,1575+21])
                    ]
              expression (utils/binutils.ml[37,1601+6]..[37,1601+49])
                Pexp_apply
                expression (utils/binutils.ml[37,1601+6]..[37,1601+20])
                  Pexp_ident "Printf.sprintf" (utils/binutils.ml[37,1601+6]..[37,1601+20])
                [
                  <arg>
                  Nolabel
                    expression (utils/binutils.ml[37,1601+21]..[37,1601+45])
                      Pexp_constant PConst_string("Unsupported: %s: 0x%Lx",(utils/binutils.ml[37,1601+22]..[37,1601+44]),None)
                  <arg>
                  Nolabel
                    expression (utils/binutils.ml[37,1601+46]..[37,1601+47])
                      Pexp_ident "s" (utils/binutils.ml[37,1601+46]..[37,1601+47])
                  <arg>
                  Nolabel
                    expression (utils/binutils.ml[37,1601+48]..[37,1601+49])
                      Pexp_ident "n" (utils/binutils.ml[37,1601+48]..[37,1601+49])
                ]
            <case>
              pattern (utils/binutils.ml[38,1651+4]..[38,1651+18])
                Ppat_construct "Out_of_range" (utils/binutils.ml[38,1651+4]..[38,1651+16])
                Some
                  []
                  pattern (utils/binutils.ml[38,1651+17]..[38,1651+18])
                    Ppat_var "s" (utils/binutils.ml[38,1651+17]..[38,1651+18])
              expression (utils/binutils.ml[39,1673+6]..[39,1673+50])
                Pexp_apply
                expression (utils/binutils.ml[39,1673+6]..[39,1673+20])
                  Pexp_ident "Printf.sprintf" (utils/binutils.ml[39,1673+6]..[39,1673+20])
                [
                  <arg>
                  Nolabel
                    expression (utils/binutils.ml[39,1673+21]..[39,1673+48])
                      Pexp_constant PConst_string("Out of range constant: %s",(utils/binutils.ml[39,1673+22]..[39,1673+47]),None)
                  <arg>
                  Nolabel
                    expression (utils/binutils.ml[39,1673+49]..[39,1673+50])
                      Pexp_ident "s" (utils/binutils.ml[39,1673+49]..[39,1673+50])
                ]
          ]
    ]
  structure_item (utils/binutils.ml[41,1725+0]..[41,1725+24])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (utils/binutils.ml[41,1725+0]..[41,1725+24])
          pext_name = "Error"
          pext_kind =
            Pext_decl
              [
                core_type (utils/binutils.ml[41,1725+19]..[41,1725+24])
                  Ptyp_constr "error" (utils/binutils.ml[41,1725+19]..[41,1725+24])
                  []
              ]
              None
  structure_item (utils/binutils.ml[43,1751+0]..[58,2180+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[43,1751+4]..[43,1751+11])
          Ppat_var "name_at" (utils/binutils.ml[43,1751+4]..[43,1751+11])
        expression (utils/binutils.ml[43,1751+12]..[58,2180+12]) ghost
          Pexp_fun
          Optional "max_len"
          None
          pattern (utils/binutils.ml[43,1751+13]..[43,1751+20])
            Ppat_var "max_len" (utils/binutils.ml[43,1751+13]..[43,1751+20])
          expression (utils/binutils.ml[43,1751+21]..[58,2180+12]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/binutils.ml[43,1751+21]..[43,1751+24])
              Ppat_var "buf" (utils/binutils.ml[43,1751+21]..[43,1751+24])
            expression (utils/binutils.ml[43,1751+25]..[58,2180+12]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (utils/binutils.ml[43,1751+25]..[43,1751+30])
                Ppat_var "start" (utils/binutils.ml[43,1751+25]..[43,1751+30])
              expression (utils/binutils.ml[44,1784+2]..[58,2180+12])
                Pexp_sequence
                expression (utils/binutils.ml[44,1784+2]..[45,1832+51])
                  Pexp_ifthenelse
                  expression (utils/binutils.ml[44,1784+5]..[44,1784+42])
                    Pexp_apply
                    expression (utils/binutils.ml[44,1784+15]..[44,1784+17])
                      Pexp_ident "||" (utils/binutils.ml[44,1784+15]..[44,1784+17])
                    [
                      <arg>
                      Nolabel
                        expression (utils/binutils.ml[44,1784+5]..[44,1784+14])
                          Pexp_apply
                          expression (utils/binutils.ml[44,1784+11]..[44,1784+12])
                            Pexp_ident "<" (utils/binutils.ml[44,1784+11]..[44,1784+12])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[44,1784+5]..[44,1784+10])
                                Pexp_ident "start" (utils/binutils.ml[44,1784+5]..[44,1784+10])
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[44,1784+13]..[44,1784+14])
                                Pexp_constant PConst_int (0,None)
                          ]
                      <arg>
                      Nolabel
                        expression (utils/binutils.ml[44,1784+18]..[44,1784+42])
                          Pexp_apply
                          expression (utils/binutils.ml[44,1784+24]..[44,1784+25])
                            Pexp_ident ">" (utils/binutils.ml[44,1784+24]..[44,1784+25])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[44,1784+18]..[44,1784+23])
                                Pexp_ident "start" (utils/binutils.ml[44,1784+18]..[44,1784+23])
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[44,1784+26]..[44,1784+42])
                                Pexp_apply
                                expression (utils/binutils.ml[44,1784+26]..[44,1784+38])
                                  Pexp_ident "Bytes.length" (utils/binutils.ml[44,1784+26]..[44,1784+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[44,1784+39]..[44,1784+42])
                                      Pexp_ident "buf" (utils/binutils.ml[44,1784+39]..[44,1784+42])
                                ]
                          ]
                    ]
                  expression (utils/binutils.ml[45,1832+4]..[45,1832+51])
                    Pexp_apply
                    expression (utils/binutils.ml[45,1832+4]..[45,1832+9])
                      Pexp_ident "raise" (utils/binutils.ml[45,1832+4]..[45,1832+9])
                    [
                      <arg>
                      Nolabel
                        expression (utils/binutils.ml[45,1832+10]..[45,1832+51])
                          Pexp_construct "Error" (utils/binutils.ml[45,1832+11]..[45,1832+16])
                          Some
                            expression (utils/binutils.ml[45,1832+17]..[45,1832+50])
                              Pexp_construct "Out_of_range" (utils/binutils.ml[45,1832+18]..[45,1832+30])
                              Some
                                expression (utils/binutils.ml[45,1832+31]..[45,1832+49])
                                  Pexp_apply
                                  expression (utils/binutils.ml[45,1832+32]..[45,1832+42])
                                    Pexp_ident "int_to_hex" (utils/binutils.ml[45,1832+32]..[45,1832+42])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[45,1832+43]..[45,1832+48])
                                        Pexp_ident "start" (utils/binutils.ml[45,1832+43]..[45,1832+48])
                                  ]
                    ]
                  None
                expression (utils/binutils.ml[46,1885+2]..[58,2180+12])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (utils/binutils.ml[46,1885+6]..[46,1885+13])
                        Ppat_var "max_pos" (utils/binutils.ml[46,1885+6]..[46,1885+13])
                      expression (utils/binutils.ml[47,1901+4]..[49,1955+54])
                        Pexp_match
                        expression (utils/binutils.ml[47,1901+10]..[47,1901+17])
                          Pexp_ident "max_len" (utils/binutils.ml[47,1901+10]..[47,1901+17])
                        [
                          <case>
                            pattern (utils/binutils.ml[48,1924+6]..[48,1924+10])
                              Ppat_construct "None" (utils/binutils.ml[48,1924+6]..[48,1924+10])
                              None
                            expression (utils/binutils.ml[48,1924+14]..[48,1924+30])
                              Pexp_apply
                              expression (utils/binutils.ml[48,1924+14]..[48,1924+26])
                                Pexp_ident "Bytes.length" (utils/binutils.ml[48,1924+14]..[48,1924+26])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[48,1924+27]..[48,1924+30])
                                    Pexp_ident "buf" (utils/binutils.ml[48,1924+27]..[48,1924+30])
                              ]
                          <case>
                            pattern (utils/binutils.ml[49,1955+6]..[49,1955+12])
                              Ppat_construct "Some" (utils/binutils.ml[49,1955+6]..[49,1955+10])
                              Some
                                []
                                pattern (utils/binutils.ml[49,1955+11]..[49,1955+12])
                                  Ppat_var "n" (utils/binutils.ml[49,1955+11]..[49,1955+12])
                            expression (utils/binutils.ml[49,1955+16]..[49,1955+54])
                              Pexp_apply
                              expression (utils/binutils.ml[49,1955+16]..[49,1955+23])
                                Pexp_ident "Int.min" (utils/binutils.ml[49,1955+16]..[49,1955+23])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[49,1955+24]..[49,1955+42])
                                    Pexp_apply
                                    expression (utils/binutils.ml[49,1955+25]..[49,1955+37])
                                      Pexp_ident "Bytes.length" (utils/binutils.ml[49,1955+25]..[49,1955+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[49,1955+38]..[49,1955+41])
                                          Pexp_ident "buf" (utils/binutils.ml[49,1955+38]..[49,1955+41])
                                    ]
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[49,1955+43]..[49,1955+54])
                                    Pexp_apply
                                    expression (utils/binutils.ml[49,1955+50]..[49,1955+51])
                                      Pexp_ident "+" (utils/binutils.ml[49,1955+50]..[49,1955+51])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[49,1955+44]..[49,1955+49])
                                          Pexp_ident "start" (utils/binutils.ml[49,1955+44]..[49,1955+49])
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[49,1955+52]..[49,1955+53])
                                          Pexp_ident "n" (utils/binutils.ml[49,1955+52]..[49,1955+53])
                                    ]
                              ]
                        ]
                  ]
                  expression (utils/binutils.ml[51,2015+2]..[58,2180+12])
                    Pexp_let Rec
                    [
                      <def>
                        pattern (utils/binutils.ml[51,2015+10]..[51,2015+14])
                          Ppat_var "loop" (utils/binutils.ml[51,2015+10]..[51,2015+14])
                        expression (utils/binutils.ml[51,2015+15]..[56,2153+21]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (utils/binutils.ml[51,2015+15]..[51,2015+18])
                            Ppat_var "pos" (utils/binutils.ml[51,2015+15]..[51,2015+18])
                          expression (utils/binutils.ml[52,2036+4]..[56,2153+21])
                            Pexp_ifthenelse
                            expression (utils/binutils.ml[52,2036+7]..[52,2036+51])
                              Pexp_apply
                              expression (utils/binutils.ml[52,2036+22]..[52,2036+24])
                                Pexp_ident "||" (utils/binutils.ml[52,2036+22]..[52,2036+24])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[52,2036+7]..[52,2036+21])
                                    Pexp_apply
                                    expression (utils/binutils.ml[52,2036+11]..[52,2036+13])
                                      Pexp_ident ">=" (utils/binutils.ml[52,2036+11]..[52,2036+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[52,2036+7]..[52,2036+10])
                                          Pexp_ident "pos" (utils/binutils.ml[52,2036+7]..[52,2036+10])
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[52,2036+14]..[52,2036+21])
                                          Pexp_ident "max_pos" (utils/binutils.ml[52,2036+14]..[52,2036+21])
                                    ]
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[52,2036+25]..[52,2036+51])
                                    Pexp_apply
                                    expression (utils/binutils.ml[52,2036+43]..[52,2036+44])
                                      Pexp_ident "=" (utils/binutils.ml[52,2036+43]..[52,2036+44])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[52,2036+25]..[52,2036+42])
                                          Pexp_apply
                                          expression (utils/binutils.ml[52,2036+25]..[52,2036+34])
                                            Pexp_ident "Bytes.get" (utils/binutils.ml[52,2036+25]..[52,2036+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[52,2036+35]..[52,2036+38])
                                                Pexp_ident "buf" (utils/binutils.ml[52,2036+35]..[52,2036+38])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[52,2036+39]..[52,2036+42])
                                                Pexp_ident "pos" (utils/binutils.ml[52,2036+39]..[52,2036+42])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[52,2036+45]..[52,2036+51])
                                          Pexp_constant PConst_char 00
                                    ]
                              ]
                            expression (utils/binutils.ml[54,2097+6]..[54,2097+46])
                              Pexp_apply
                              expression (utils/binutils.ml[54,2097+6]..[54,2097+22])
                                Pexp_ident "Bytes.sub_string" (utils/binutils.ml[54,2097+6]..[54,2097+22])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[54,2097+23]..[54,2097+26])
                                    Pexp_ident "buf" (utils/binutils.ml[54,2097+23]..[54,2097+26])
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[54,2097+27]..[54,2097+32])
                                    Pexp_ident "start" (utils/binutils.ml[54,2097+27]..[54,2097+32])
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[54,2097+33]..[54,2097+46])
                                    Pexp_apply
                                    expression (utils/binutils.ml[54,2097+38]..[54,2097+39])
                                      Pexp_ident "-" (utils/binutils.ml[54,2097+38]..[54,2097+39])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[54,2097+34]..[54,2097+37])
                                          Pexp_ident "pos" (utils/binutils.ml[54,2097+34]..[54,2097+37])
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[54,2097+40]..[54,2097+45])
                                          Pexp_ident "start" (utils/binutils.ml[54,2097+40]..[54,2097+45])
                                    ]
                              ]
                            Some
                              expression (utils/binutils.ml[56,2153+6]..[56,2153+21])
                                Pexp_apply
                                expression (utils/binutils.ml[56,2153+6]..[56,2153+10])
                                  Pexp_ident "loop" (utils/binutils.ml[56,2153+6]..[56,2153+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[56,2153+11]..[56,2153+21])
                                      Pexp_apply
                                      expression (utils/binutils.ml[56,2153+12]..[56,2153+16])
                                        Pexp_ident "succ" (utils/binutils.ml[56,2153+12]..[56,2153+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[56,2153+17]..[56,2153+20])
                                            Pexp_ident "pos" (utils/binutils.ml[56,2153+17]..[56,2153+20])
                                      ]
                                ]
                    ]
                    expression (utils/binutils.ml[58,2180+2]..[58,2180+12])
                      Pexp_apply
                      expression (utils/binutils.ml[58,2180+2]..[58,2180+6])
                        Pexp_ident "loop" (utils/binutils.ml[58,2180+2]..[58,2180+6])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[58,2180+7]..[58,2180+12])
                            Pexp_ident "start" (utils/binutils.ml[58,2180+7]..[58,2180+12])
                      ]
    ]
  structure_item (utils/binutils.ml[60,2194+0]..[69,2383+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[60,2194+4]..[60,2194+18])
          Ppat_var "array_find_map" (utils/binutils.ml[60,2194+4]..[60,2194+18])
        expression (utils/binutils.ml[60,2194+19]..[69,2383+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[60,2194+19]..[60,2194+20])
            Ppat_var "f" (utils/binutils.ml[60,2194+19]..[60,2194+20])
          expression (utils/binutils.ml[60,2194+21]..[69,2383+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/binutils.ml[60,2194+21]..[60,2194+22])
              Ppat_var "a" (utils/binutils.ml[60,2194+21]..[60,2194+22])
            expression (utils/binutils.ml[61,2219+2]..[69,2383+8])
              Pexp_let Rec
              [
                <def>
                  pattern (utils/binutils.ml[61,2219+10]..[61,2219+14])
                    Ppat_var "loop" (utils/binutils.ml[61,2219+10]..[61,2219+14])
                  expression (utils/binutils.ml[61,2219+15]..[67,2370+7]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[61,2219+15]..[61,2219+16])
                      Ppat_var "i" (utils/binutils.ml[61,2219+15]..[61,2219+16])
                    expression (utils/binutils.ml[62,2238+4]..[67,2370+7])
                      Pexp_ifthenelse
                      expression (utils/binutils.ml[62,2238+7]..[62,2238+26])
                        Pexp_apply
                        expression (utils/binutils.ml[62,2238+9]..[62,2238+11])
                          Pexp_ident ">=" (utils/binutils.ml[62,2238+9]..[62,2238+11])
                        [
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[62,2238+7]..[62,2238+8])
                              Pexp_ident "i" (utils/binutils.ml[62,2238+7]..[62,2238+8])
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[62,2238+12]..[62,2238+26])
                              Pexp_apply
                              expression (utils/binutils.ml[62,2238+12]..[62,2238+24])
                                Pexp_ident "Array.length" (utils/binutils.ml[62,2238+12]..[62,2238+24])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[62,2238+25]..[62,2238+26])
                                    Pexp_ident "a" (utils/binutils.ml[62,2238+25]..[62,2238+26])
                              ]
                        ]
                      expression (utils/binutils.ml[62,2238+32]..[62,2238+36])
                        Pexp_construct "None" (utils/binutils.ml[62,2238+32]..[62,2238+36])
                        None
                      Some
                        expression (utils/binutils.ml[63,2275+9]..[67,2370+7])
                          Pexp_match
                          expression (utils/binutils.ml[64,2290+12]..[64,2290+19])
                            Pexp_apply
                            expression (utils/binutils.ml[64,2290+12]..[64,2290+13])
                              Pexp_ident "f" (utils/binutils.ml[64,2290+12]..[64,2290+13])
                            [
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[64,2290+14]..[64,2290+19])
                                  Pexp_apply
                                  expression (utils/binutils.ml[64,2290+14]..[64,2290+19]) ghost
                                    Pexp_ident "Array.get" (utils/binutils.ml[64,2290+14]..[64,2290+19]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[64,2290+14]..[64,2290+15])
                                        Pexp_ident "a" (utils/binutils.ml[64,2290+14]..[64,2290+15])
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[64,2290+17]..[64,2290+18])
                                        Pexp_ident "i" (utils/binutils.ml[64,2290+17]..[64,2290+18])
                                  ]
                            ]
                          [
                            <case>
                              pattern (utils/binutils.ml[65,2315+8]..[65,2315+12])
                                Ppat_construct "None" (utils/binutils.ml[65,2315+8]..[65,2315+12])
                                None
                              expression (utils/binutils.ml[65,2315+16]..[65,2315+29])
                                Pexp_apply
                                expression (utils/binutils.ml[65,2315+16]..[65,2315+20])
                                  Pexp_ident "loop" (utils/binutils.ml[65,2315+16]..[65,2315+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[65,2315+21]..[65,2315+29])
                                      Pexp_apply
                                      expression (utils/binutils.ml[65,2315+22]..[65,2315+26])
                                        Pexp_ident "succ" (utils/binutils.ml[65,2315+22]..[65,2315+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[65,2315+27]..[65,2315+28])
                                            Pexp_ident "i" (utils/binutils.ml[65,2315+27]..[65,2315+28])
                                      ]
                                ]
                            <case>
                              pattern (utils/binutils.ml[66,2345+8]..[66,2345+19])
                                Ppat_alias "r" (utils/binutils.ml[66,2345+18]..[66,2345+19])
                                pattern (utils/binutils.ml[66,2345+8]..[66,2345+14])
                                  Ppat_construct "Some" (utils/binutils.ml[66,2345+8]..[66,2345+12])
                                  Some
                                    []
                                    pattern (utils/binutils.ml[66,2345+13]..[66,2345+14])
                                      Ppat_any
                              expression (utils/binutils.ml[66,2345+23]..[66,2345+24])
                                Pexp_ident "r" (utils/binutils.ml[66,2345+23]..[66,2345+24])
                          ]
              ]
              expression (utils/binutils.ml[69,2383+2]..[69,2383+8])
                Pexp_apply
                expression (utils/binutils.ml[69,2383+2]..[69,2383+6])
                  Pexp_ident "loop" (utils/binutils.ml[69,2383+2]..[69,2383+6])
                [
                  <arg>
                  Nolabel
                    expression (utils/binutils.ml[69,2383+7]..[69,2383+8])
                      Pexp_constant PConst_int (0,None)
                ]
    ]
  structure_item (utils/binutils.ml[71,2393+0]..[72,2414+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[71,2393+4]..[71,2393+14])
          Ppat_var "array_find" (utils/binutils.ml[71,2393+4]..[71,2393+14])
        expression (utils/binutils.ml[71,2393+15]..[72,2414+58]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[71,2393+15]..[71,2393+16])
            Ppat_var "f" (utils/binutils.ml[71,2393+15]..[71,2393+16])
          expression (utils/binutils.ml[71,2393+17]..[72,2414+58]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/binutils.ml[71,2393+17]..[71,2393+18])
              Ppat_var "a" (utils/binutils.ml[71,2393+17]..[71,2393+18])
            expression (utils/binutils.ml[72,2414+2]..[72,2414+58])
              Pexp_apply
              expression (utils/binutils.ml[72,2414+2]..[72,2414+16])
                Pexp_ident "array_find_map" (utils/binutils.ml[72,2414+2]..[72,2414+16])
              [
                <arg>
                Nolabel
                  expression (utils/binutils.ml[72,2414+17]..[72,2414+56])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[72,2414+22]..[72,2414+23])
                      Ppat_var "x" (utils/binutils.ml[72,2414+22]..[72,2414+23])
                    expression (utils/binutils.ml[72,2414+27]..[72,2414+55])
                      Pexp_ifthenelse
                      expression (utils/binutils.ml[72,2414+30]..[72,2414+33])
                        Pexp_apply
                        expression (utils/binutils.ml[72,2414+30]..[72,2414+31])
                          Pexp_ident "f" (utils/binutils.ml[72,2414+30]..[72,2414+31])
                        [
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[72,2414+32]..[72,2414+33])
                              Pexp_ident "x" (utils/binutils.ml[72,2414+32]..[72,2414+33])
                        ]
                      expression (utils/binutils.ml[72,2414+39]..[72,2414+45])
                        Pexp_construct "Some" (utils/binutils.ml[72,2414+39]..[72,2414+43])
                        Some
                          expression (utils/binutils.ml[72,2414+44]..[72,2414+45])
                            Pexp_ident "x" (utils/binutils.ml[72,2414+44]..[72,2414+45])
                      Some
                        expression (utils/binutils.ml[72,2414+51]..[72,2414+55])
                          Pexp_construct "None" (utils/binutils.ml[72,2414+51]..[72,2414+55])
                          None
                <arg>
                Nolabel
                  expression (utils/binutils.ml[72,2414+57]..[72,2414+58])
                    Pexp_ident "a" (utils/binutils.ml[72,2414+57]..[72,2414+58])
              ]
    ]
  structure_item (utils/binutils.ml[74,2474+0]..[77,2567+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[74,2474+4]..[74,2474+22])
          Ppat_var "really_input_bytes" (utils/binutils.ml[74,2474+4]..[74,2474+22])
        expression (utils/binutils.ml[74,2474+23]..[77,2567+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[74,2474+23]..[74,2474+25])
            Ppat_var "ic" (utils/binutils.ml[74,2474+23]..[74,2474+25])
          expression (utils/binutils.ml[74,2474+26]..[77,2567+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/binutils.ml[74,2474+26]..[74,2474+29])
              Ppat_var "len" (utils/binutils.ml[74,2474+26]..[74,2474+29])
            expression (utils/binutils.ml[75,2506+2]..[77,2567+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (utils/binutils.ml[75,2506+6]..[75,2506+9])
                    Ppat_var "buf" (utils/binutils.ml[75,2506+6]..[75,2506+9])
                  expression (utils/binutils.ml[75,2506+12]..[75,2506+28])
                    Pexp_apply
                    expression (utils/binutils.ml[75,2506+12]..[75,2506+24])
                      Pexp_ident "Bytes.create" (utils/binutils.ml[75,2506+12]..[75,2506+24])
                    [
                      <arg>
                      Nolabel
                        expression (utils/binutils.ml[75,2506+25]..[75,2506+28])
                          Pexp_ident "len" (utils/binutils.ml[75,2506+25]..[75,2506+28])
                    ]
              ]
              expression (utils/binutils.ml[76,2538+2]..[77,2567+5])
                Pexp_sequence
                expression (utils/binutils.ml[76,2538+2]..[76,2538+27])
                  Pexp_apply
                  expression (utils/binutils.ml[76,2538+2]..[76,2538+14])
                    Pexp_ident "really_input" (utils/binutils.ml[76,2538+2]..[76,2538+14])
                  [
                    <arg>
                    Nolabel
                      expression (utils/binutils.ml[76,2538+15]..[76,2538+17])
                        Pexp_ident "ic" (utils/binutils.ml[76,2538+15]..[76,2538+17])
                    <arg>
                    Nolabel
                      expression (utils/binutils.ml[76,2538+18]..[76,2538+21])
                        Pexp_ident "buf" (utils/binutils.ml[76,2538+18]..[76,2538+21])
                    <arg>
                    Nolabel
                      expression (utils/binutils.ml[76,2538+22]..[76,2538+23])
                        Pexp_constant PConst_int (0,None)
                    <arg>
                    Nolabel
                      expression (utils/binutils.ml[76,2538+24]..[76,2538+27])
                        Pexp_ident "len" (utils/binutils.ml[76,2538+24]..[76,2538+27])
                  ]
                expression (utils/binutils.ml[77,2567+2]..[77,2567+5])
                  Pexp_ident "buf" (utils/binutils.ml[77,2567+2]..[77,2567+5])
    ]
  structure_item (utils/binutils.ml[79,2574+0]..[80,2599+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[79,2574+4]..[79,2574+20])
          Ppat_var "uint64_of_uint32" (utils/binutils.ml[79,2574+4]..[79,2574+20])
        expression (utils/binutils.ml[79,2574+21]..[80,2599+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[79,2574+21]..[79,2574+22])
            Ppat_var "n" (utils/binutils.ml[79,2574+21]..[79,2574+22])
          expression (utils/binutils.ml[80,2599+2]..[80,2599+41])
            Pexp_open Fresh
            module_expr (utils/binutils.ml[80,2599+2]..[80,2599+7])
              Pmod_ident "Int64" (utils/binutils.ml[80,2599+2]..[80,2599+7])
            expression (utils/binutils.ml[80,2599+9]..[80,2599+40])
              Pexp_apply
              expression (utils/binutils.ml[80,2599+9]..[80,2599+15])
                Pexp_ident "logand" (utils/binutils.ml[80,2599+9]..[80,2599+15])
              [
                <arg>
                Nolabel
                  expression (utils/binutils.ml[80,2599+16]..[80,2599+28])
                    Pexp_apply
                    expression (utils/binutils.ml[80,2599+17]..[80,2599+25])
                      Pexp_ident "of_int32" (utils/binutils.ml[80,2599+17]..[80,2599+25])
                    [
                      <arg>
                      Nolabel
                        expression (utils/binutils.ml[80,2599+26]..[80,2599+27])
                          Pexp_ident "n" (utils/binutils.ml[80,2599+26]..[80,2599+27])
                    ]
                <arg>
                Nolabel
                  expression (utils/binutils.ml[80,2599+29]..[80,2599+40])
                    Pexp_constant PConst_int (0xffffffff,Some L)
              ]
    ]
  structure_item (utils/binutils.ml[82,2642+0]..[84,2667+6])
    Pstr_type Rec
    [
      type_declaration "endianness" (utils/binutils.ml[82,2642+5]..[82,2642+15]) (utils/binutils.ml[82,2642+0]..[84,2667+6])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (utils/binutils.ml[83,2660+2]..[83,2660+6])
                "LE" (utils/binutils.ml[83,2660+4]..[83,2660+6])
                []
                None
              (utils/binutils.ml[84,2667+2]..[84,2667+6])
                "BE" (utils/binutils.ml[84,2667+4]..[84,2667+6])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (utils/binutils.ml[86,2675+0]..[88,2698+7])
    Pstr_type Rec
    [
      type_declaration "bitness" (utils/binutils.ml[86,2675+5]..[86,2675+12]) (utils/binutils.ml[86,2675+0]..[88,2698+7])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (utils/binutils.ml[87,2690+2]..[87,2690+7])
                "B32" (utils/binutils.ml[87,2690+4]..[87,2690+7])
                []
                None
              (utils/binutils.ml[88,2698+2]..[88,2698+7])
                "B64" (utils/binutils.ml[88,2698+4]..[88,2698+7])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (utils/binutils.ml[90,2707+0]..[95,2796+3])
    Pstr_type Rec
    [
      type_declaration "decoder" (utils/binutils.ml[90,2707+5]..[90,2707+12]) (utils/binutils.ml[90,2707+0]..[95,2796+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (utils/binutils.ml[92,2726+4]..[92,2726+19])
                Immutable
                "ic" (utils/binutils.ml[92,2726+4]..[92,2726+6])                core_type (utils/binutils.ml[92,2726+8]..[92,2726+18])
                  Ptyp_constr "in_channel" (utils/binutils.ml[92,2726+8]..[92,2726+18])
                  []
              (utils/binutils.ml[93,2746+4]..[93,2746+27])
                Immutable
                "endianness" (utils/binutils.ml[93,2746+4]..[93,2746+14])                core_type (utils/binutils.ml[93,2746+16]..[93,2746+26])
                  Ptyp_constr "endianness" (utils/binutils.ml[93,2746+16]..[93,2746+26])
                  []
              (utils/binutils.ml[94,2774+4]..[94,2774+21])
                Immutable
                "bitness" (utils/binutils.ml[94,2774+4]..[94,2774+11])                core_type (utils/binutils.ml[94,2774+13]..[94,2774+20])
                  Ptyp_constr "bitness" (utils/binutils.ml[94,2774+13]..[94,2774+20])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (utils/binutils.ml[97,2801+0]..[99,2854+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[97,2801+4]..[97,2801+13])
          Ppat_var "word_size" (utils/binutils.ml[97,2801+4]..[97,2801+13])
        expression (utils/binutils.ml[97,2801+16]..[99,2854+27])
          Pexp_function
          [
            <case>
              pattern (utils/binutils.ml[98,2826+4]..[98,2826+22])
                Ppat_record Open
                [
                  "bitness" (utils/binutils.ml[98,2826+5]..[98,2826+12])
                    pattern (utils/binutils.ml[98,2826+15]..[98,2826+18])
                      Ppat_construct "B64" (utils/binutils.ml[98,2826+15]..[98,2826+18])
                      None
                ]
              expression (utils/binutils.ml[98,2826+26]..[98,2826+27])
                Pexp_constant PConst_int (8,None)
            <case>
              pattern (utils/binutils.ml[99,2854+4]..[99,2854+22])
                Ppat_record Open
                [
                  "bitness" (utils/binutils.ml[99,2854+5]..[99,2854+12])
                    pattern (utils/binutils.ml[99,2854+15]..[99,2854+18])
                      Ppat_construct "B32" (utils/binutils.ml[99,2854+15]..[99,2854+18])
                      None
                ]
              expression (utils/binutils.ml[99,2854+26]..[99,2854+27])
                Pexp_constant PConst_int (4,None)
          ]
    ]
  structure_item (utils/binutils.ml[101,2883+0]..[104,2986+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[101,2883+4]..[101,2883+14])
          Ppat_var "get_uint16" (utils/binutils.ml[101,2883+4]..[101,2883+14])
        expression (utils/binutils.ml[101,2883+15]..[104,2986+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[101,2883+15]..[101,2883+30])
            Ppat_record Open
            [
              "endianness" (utils/binutils.ml[101,2883+16]..[101,2883+26]) ghost
                pattern (utils/binutils.ml[101,2883+16]..[101,2883+26])
                  Ppat_var "endianness" (utils/binutils.ml[101,2883+16]..[101,2883+26])
            ]
          expression (utils/binutils.ml[101,2883+31]..[104,2986+37]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/binutils.ml[101,2883+31]..[101,2883+34])
              Ppat_var "buf" (utils/binutils.ml[101,2883+31]..[101,2883+34])
            expression (utils/binutils.ml[101,2883+35]..[104,2986+37]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (utils/binutils.ml[101,2883+35]..[101,2883+38])
                Ppat_var "idx" (utils/binutils.ml[101,2883+35]..[101,2883+38])
              expression (utils/binutils.ml[102,2924+2]..[104,2986+37])
                Pexp_match
                expression (utils/binutils.ml[102,2924+8]..[102,2924+18])
                  Pexp_ident "endianness" (utils/binutils.ml[102,2924+8]..[102,2924+18])
                [
                  <case>
                    pattern (utils/binutils.ml[103,2948+4]..[103,2948+6])
                      Ppat_construct "LE" (utils/binutils.ml[103,2948+4]..[103,2948+6])
                      None
                    expression (utils/binutils.ml[103,2948+10]..[103,2948+37])
                      Pexp_apply
                      expression (utils/binutils.ml[103,2948+10]..[103,2948+29])
                        Pexp_ident "Bytes.get_uint16_le" (utils/binutils.ml[103,2948+10]..[103,2948+29])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[103,2948+30]..[103,2948+33])
                            Pexp_ident "buf" (utils/binutils.ml[103,2948+30]..[103,2948+33])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[103,2948+34]..[103,2948+37])
                            Pexp_ident "idx" (utils/binutils.ml[103,2948+34]..[103,2948+37])
                      ]
                  <case>
                    pattern (utils/binutils.ml[104,2986+4]..[104,2986+6])
                      Ppat_construct "BE" (utils/binutils.ml[104,2986+4]..[104,2986+6])
                      None
                    expression (utils/binutils.ml[104,2986+10]..[104,2986+37])
                      Pexp_apply
                      expression (utils/binutils.ml[104,2986+10]..[104,2986+29])
                        Pexp_ident "Bytes.get_uint16_be" (utils/binutils.ml[104,2986+10]..[104,2986+29])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[104,2986+30]..[104,2986+33])
                            Pexp_ident "buf" (utils/binutils.ml[104,2986+30]..[104,2986+33])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[104,2986+34]..[104,2986+37])
                            Pexp_ident "idx" (utils/binutils.ml[104,2986+34]..[104,2986+37])
                      ]
                ]
    ]
  structure_item (utils/binutils.ml[106,3025+0]..[109,3127+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[106,3025+4]..[106,3025+14])
          Ppat_var "get_uint32" (utils/binutils.ml[106,3025+4]..[106,3025+14])
        expression (utils/binutils.ml[106,3025+15]..[109,3127+36]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[106,3025+15]..[106,3025+30])
            Ppat_record Open
            [
              "endianness" (utils/binutils.ml[106,3025+16]..[106,3025+26]) ghost
                pattern (utils/binutils.ml[106,3025+16]..[106,3025+26])
                  Ppat_var "endianness" (utils/binutils.ml[106,3025+16]..[106,3025+26])
            ]
          expression (utils/binutils.ml[106,3025+31]..[109,3127+36]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/binutils.ml[106,3025+31]..[106,3025+34])
              Ppat_var "buf" (utils/binutils.ml[106,3025+31]..[106,3025+34])
            expression (utils/binutils.ml[106,3025+35]..[109,3127+36]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (utils/binutils.ml[106,3025+35]..[106,3025+38])
                Ppat_var "idx" (utils/binutils.ml[106,3025+35]..[106,3025+38])
              expression (utils/binutils.ml[107,3066+2]..[109,3127+36])
                Pexp_match
                expression (utils/binutils.ml[107,3066+8]..[107,3066+18])
                  Pexp_ident "endianness" (utils/binutils.ml[107,3066+8]..[107,3066+18])
                [
                  <case>
                    pattern (utils/binutils.ml[108,3090+4]..[108,3090+6])
                      Ppat_construct "LE" (utils/binutils.ml[108,3090+4]..[108,3090+6])
                      None
                    expression (utils/binutils.ml[108,3090+10]..[108,3090+36])
                      Pexp_apply
                      expression (utils/binutils.ml[108,3090+10]..[108,3090+28])
                        Pexp_ident "Bytes.get_int32_le" (utils/binutils.ml[108,3090+10]..[108,3090+28])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[108,3090+29]..[108,3090+32])
                            Pexp_ident "buf" (utils/binutils.ml[108,3090+29]..[108,3090+32])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[108,3090+33]..[108,3090+36])
                            Pexp_ident "idx" (utils/binutils.ml[108,3090+33]..[108,3090+36])
                      ]
                  <case>
                    pattern (utils/binutils.ml[109,3127+4]..[109,3127+6])
                      Ppat_construct "BE" (utils/binutils.ml[109,3127+4]..[109,3127+6])
                      None
                    expression (utils/binutils.ml[109,3127+10]..[109,3127+36])
                      Pexp_apply
                      expression (utils/binutils.ml[109,3127+10]..[109,3127+28])
                        Pexp_ident "Bytes.get_int32_be" (utils/binutils.ml[109,3127+10]..[109,3127+28])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[109,3127+29]..[109,3127+32])
                            Pexp_ident "buf" (utils/binutils.ml[109,3127+29]..[109,3127+32])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[109,3127+33]..[109,3127+36])
                            Pexp_ident "idx" (utils/binutils.ml[109,3127+33]..[109,3127+36])
                      ]
                ]
    ]
  structure_item (utils/binutils.ml[111,3165+0]..[115,3325+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[111,3165+4]..[111,3165+12])
          Ppat_var "get_uint" (utils/binutils.ml[111,3165+4]..[111,3165+12])
        expression (utils/binutils.ml[111,3165+13]..[115,3325+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[111,3165+13]..[111,3165+14])
            Ppat_var "s" (utils/binutils.ml[111,3165+13]..[111,3165+14])
          expression (utils/binutils.ml[111,3165+15]..[115,3325+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/binutils.ml[111,3165+15]..[111,3165+16])
              Ppat_var "d" (utils/binutils.ml[111,3165+15]..[111,3165+16])
            expression (utils/binutils.ml[111,3165+17]..[115,3325+15]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (utils/binutils.ml[111,3165+17]..[111,3165+20])
                Ppat_var "buf" (utils/binutils.ml[111,3165+17]..[111,3165+20])
              expression (utils/binutils.ml[111,3165+21]..[115,3325+15]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (utils/binutils.ml[111,3165+21]..[111,3165+24])
                  Ppat_var "idx" (utils/binutils.ml[111,3165+21]..[111,3165+24])
                expression (utils/binutils.ml[112,3192+2]..[115,3325+15])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (utils/binutils.ml[112,3192+6]..[112,3192+7])
                        Ppat_var "n" (utils/binutils.ml[112,3192+6]..[112,3192+7])
                      expression (utils/binutils.ml[112,3192+10]..[112,3192+30])
                        Pexp_apply
                        expression (utils/binutils.ml[112,3192+10]..[112,3192+20])
                          Pexp_ident "get_uint32" (utils/binutils.ml[112,3192+10]..[112,3192+20])
                        [
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[112,3192+21]..[112,3192+22])
                              Pexp_ident "d" (utils/binutils.ml[112,3192+21]..[112,3192+22])
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[112,3192+23]..[112,3192+26])
                              Pexp_ident "buf" (utils/binutils.ml[112,3192+23]..[112,3192+26])
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[112,3192+27]..[112,3192+30])
                              Pexp_ident "idx" (utils/binutils.ml[112,3192+27]..[112,3192+30])
                        ]
                  ]
                  expression (utils/binutils.ml[113,3226+2]..[115,3325+15])
                    Pexp_match
                    expression (utils/binutils.ml[113,3226+8]..[113,3226+31])
                      Pexp_apply
                      expression (utils/binutils.ml[113,3226+8]..[113,3226+29])
                        Pexp_ident "Int32.unsigned_to_int" (utils/binutils.ml[113,3226+8]..[113,3226+29])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[113,3226+30]..[113,3226+31])
                            Pexp_ident "n" (utils/binutils.ml[113,3226+30]..[113,3226+31])
                      ]
                    [
                      <case>
                        pattern (utils/binutils.ml[114,3263+4]..[114,3263+8])
                          Ppat_construct "None" (utils/binutils.ml[114,3263+4]..[114,3263+8])
                          None
                        expression (utils/binutils.ml[114,3263+12]..[114,3263+61])
                          Pexp_apply
                          expression (utils/binutils.ml[114,3263+12]..[114,3263+17])
                            Pexp_ident "raise" (utils/binutils.ml[114,3263+12]..[114,3263+17])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[114,3263+18]..[114,3263+61])
                                Pexp_construct "Error" (utils/binutils.ml[114,3263+19]..[114,3263+24])
                                Some
                                  expression (utils/binutils.ml[114,3263+25]..[114,3263+60])
                                    Pexp_construct "Unsupported" (utils/binutils.ml[114,3263+26]..[114,3263+37])
                                    Some
                                      expression (utils/binutils.ml[114,3263+38]..[114,3263+59])
                                        Pexp_tuple
                                        [
                                          expression (utils/binutils.ml[114,3263+39]..[114,3263+40])
                                            Pexp_ident "s" (utils/binutils.ml[114,3263+39]..[114,3263+40])
                                          expression (utils/binutils.ml[114,3263+42]..[114,3263+58])
                                            Pexp_apply
                                            expression (utils/binutils.ml[114,3263+42]..[114,3263+56])
                                              Pexp_ident "Int64.of_int32" (utils/binutils.ml[114,3263+42]..[114,3263+56])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/binutils.ml[114,3263+57]..[114,3263+58])
                                                  Pexp_ident "n" (utils/binutils.ml[114,3263+57]..[114,3263+58])
                                            ]
                                        ]
                          ]
                      <case>
                        pattern (utils/binutils.ml[115,3325+4]..[115,3325+10])
                          Ppat_construct "Some" (utils/binutils.ml[115,3325+4]..[115,3325+8])
                          Some
                            []
                            pattern (utils/binutils.ml[115,3325+9]..[115,3325+10])
                              Ppat_var "n" (utils/binutils.ml[115,3325+9]..[115,3325+10])
                        expression (utils/binutils.ml[115,3325+14]..[115,3325+15])
                          Pexp_ident "n" (utils/binutils.ml[115,3325+14]..[115,3325+15])
                    ]
    ]
  structure_item (utils/binutils.ml[117,3342+0]..[120,3444+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[117,3342+4]..[117,3342+14])
          Ppat_var "get_uint64" (utils/binutils.ml[117,3342+4]..[117,3342+14])
        expression (utils/binutils.ml[117,3342+15]..[120,3444+36]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[117,3342+15]..[117,3342+30])
            Ppat_record Open
            [
              "endianness" (utils/binutils.ml[117,3342+16]..[117,3342+26]) ghost
                pattern (utils/binutils.ml[117,3342+16]..[117,3342+26])
                  Ppat_var "endianness" (utils/binutils.ml[117,3342+16]..[117,3342+26])
            ]
          expression (utils/binutils.ml[117,3342+31]..[120,3444+36]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/binutils.ml[117,3342+31]..[117,3342+34])
              Ppat_var "buf" (utils/binutils.ml[117,3342+31]..[117,3342+34])
            expression (utils/binutils.ml[117,3342+35]..[120,3444+36]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (utils/binutils.ml[117,3342+35]..[117,3342+38])
                Ppat_var "idx" (utils/binutils.ml[117,3342+35]..[117,3342+38])
              expression (utils/binutils.ml[118,3383+2]..[120,3444+36])
                Pexp_match
                expression (utils/binutils.ml[118,3383+8]..[118,3383+18])
                  Pexp_ident "endianness" (utils/binutils.ml[118,3383+8]..[118,3383+18])
                [
                  <case>
                    pattern (utils/binutils.ml[119,3407+4]..[119,3407+6])
                      Ppat_construct "LE" (utils/binutils.ml[119,3407+4]..[119,3407+6])
                      None
                    expression (utils/binutils.ml[119,3407+10]..[119,3407+36])
                      Pexp_apply
                      expression (utils/binutils.ml[119,3407+10]..[119,3407+28])
                        Pexp_ident "Bytes.get_int64_le" (utils/binutils.ml[119,3407+10]..[119,3407+28])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[119,3407+29]..[119,3407+32])
                            Pexp_ident "buf" (utils/binutils.ml[119,3407+29]..[119,3407+32])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[119,3407+33]..[119,3407+36])
                            Pexp_ident "idx" (utils/binutils.ml[119,3407+33]..[119,3407+36])
                      ]
                  <case>
                    pattern (utils/binutils.ml[120,3444+4]..[120,3444+6])
                      Ppat_construct "BE" (utils/binutils.ml[120,3444+4]..[120,3444+6])
                      None
                    expression (utils/binutils.ml[120,3444+10]..[120,3444+36])
                      Pexp_apply
                      expression (utils/binutils.ml[120,3444+10]..[120,3444+28])
                        Pexp_ident "Bytes.get_int64_be" (utils/binutils.ml[120,3444+10]..[120,3444+28])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[120,3444+29]..[120,3444+32])
                            Pexp_ident "buf" (utils/binutils.ml[120,3444+29]..[120,3444+32])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[120,3444+33]..[120,3444+36])
                            Pexp_ident "idx" (utils/binutils.ml[120,3444+33]..[120,3444+36])
                      ]
                ]
    ]
  structure_item (utils/binutils.ml[122,3482+0]..[125,3562+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[122,3482+4]..[122,3482+12])
          Ppat_var "get_word" (utils/binutils.ml[122,3482+4]..[122,3482+12])
        expression (utils/binutils.ml[122,3482+13]..[125,3562+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[122,3482+13]..[122,3482+14])
            Ppat_var "d" (utils/binutils.ml[122,3482+13]..[122,3482+14])
          expression (utils/binutils.ml[122,3482+15]..[125,3562+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/binutils.ml[122,3482+15]..[122,3482+18])
              Ppat_var "buf" (utils/binutils.ml[122,3482+15]..[122,3482+18])
            expression (utils/binutils.ml[122,3482+19]..[125,3562+50]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (utils/binutils.ml[122,3482+19]..[122,3482+22])
                Ppat_var "idx" (utils/binutils.ml[122,3482+19]..[122,3482+22])
              expression (utils/binutils.ml[123,3507+2]..[125,3562+50])
                Pexp_match
                expression (utils/binutils.ml[123,3507+8]..[123,3507+17])
                  Pexp_field
                  expression (utils/binutils.ml[123,3507+8]..[123,3507+9])
                    Pexp_ident "d" (utils/binutils.ml[123,3507+8]..[123,3507+9])
                  "bitness" (utils/binutils.ml[123,3507+10]..[123,3507+17])
                [
                  <case>
                    pattern (utils/binutils.ml[124,3530+4]..[124,3530+7])
                      Ppat_construct "B64" (utils/binutils.ml[124,3530+4]..[124,3530+7])
                      None
                    expression (utils/binutils.ml[124,3530+11]..[124,3530+31])
                      Pexp_apply
                      expression (utils/binutils.ml[124,3530+11]..[124,3530+21])
                        Pexp_ident "get_uint64" (utils/binutils.ml[124,3530+11]..[124,3530+21])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[124,3530+22]..[124,3530+23])
                            Pexp_ident "d" (utils/binutils.ml[124,3530+22]..[124,3530+23])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[124,3530+24]..[124,3530+27])
                            Pexp_ident "buf" (utils/binutils.ml[124,3530+24]..[124,3530+27])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[124,3530+28]..[124,3530+31])
                            Pexp_ident "idx" (utils/binutils.ml[124,3530+28]..[124,3530+31])
                      ]
                  <case>
                    pattern (utils/binutils.ml[125,3562+4]..[125,3562+7])
                      Ppat_construct "B32" (utils/binutils.ml[125,3562+4]..[125,3562+7])
                      None
                    expression (utils/binutils.ml[125,3562+11]..[125,3562+50])
                      Pexp_apply
                      expression (utils/binutils.ml[125,3562+11]..[125,3562+27])
                        Pexp_ident "uint64_of_uint32" (utils/binutils.ml[125,3562+11]..[125,3562+27])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[125,3562+28]..[125,3562+50])
                            Pexp_apply
                            expression (utils/binutils.ml[125,3562+29]..[125,3562+39])
                              Pexp_ident "get_uint32" (utils/binutils.ml[125,3562+29]..[125,3562+39])
                            [
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[125,3562+40]..[125,3562+41])
                                  Pexp_ident "d" (utils/binutils.ml[125,3562+40]..[125,3562+41])
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[125,3562+42]..[125,3562+45])
                                  Pexp_ident "buf" (utils/binutils.ml[125,3562+42]..[125,3562+45])
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[125,3562+46]..[125,3562+49])
                                  Pexp_ident "idx" (utils/binutils.ml[125,3562+46]..[125,3562+49])
                            ]
                      ]
                ]
    ]
  structure_item (utils/binutils.ml[127,3614+0]..[130,3722+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[127,3614+4]..[127,3614+17])
          Ppat_var "uint64_to_int" (utils/binutils.ml[127,3614+4]..[127,3614+17])
        expression (utils/binutils.ml[127,3614+18]..[130,3722+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[127,3614+18]..[127,3614+19])
            Ppat_var "s" (utils/binutils.ml[127,3614+18]..[127,3614+19])
          expression (utils/binutils.ml[127,3614+20]..[130,3722+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/binutils.ml[127,3614+20]..[127,3614+21])
              Ppat_var "n" (utils/binutils.ml[127,3614+20]..[127,3614+21])
            expression (utils/binutils.ml[128,3638+2]..[130,3722+15])
              Pexp_match
              expression (utils/binutils.ml[128,3638+8]..[128,3638+31])
                Pexp_apply
                expression (utils/binutils.ml[128,3638+8]..[128,3638+29])
                  Pexp_ident "Int64.unsigned_to_int" (utils/binutils.ml[128,3638+8]..[128,3638+29])
                [
                  <arg>
                  Nolabel
                    expression (utils/binutils.ml[128,3638+30]..[128,3638+31])
                      Pexp_ident "n" (utils/binutils.ml[128,3638+30]..[128,3638+31])
                ]
              [
                <case>
                  pattern (utils/binutils.ml[129,3675+4]..[129,3675+8])
                    Ppat_construct "None" (utils/binutils.ml[129,3675+4]..[129,3675+8])
                    None
                  expression (utils/binutils.ml[129,3675+12]..[129,3675+46])
                    Pexp_apply
                    expression (utils/binutils.ml[129,3675+12]..[129,3675+17])
                      Pexp_ident "raise" (utils/binutils.ml[129,3675+12]..[129,3675+17])
                    [
                      <arg>
                      Nolabel
                        expression (utils/binutils.ml[129,3675+18]..[129,3675+46])
                          Pexp_construct "Error" (utils/binutils.ml[129,3675+19]..[129,3675+24])
                          Some
                            expression (utils/binutils.ml[129,3675+25]..[129,3675+45])
                              Pexp_construct "Unsupported" (utils/binutils.ml[129,3675+26]..[129,3675+37])
                              Some
                                expression (utils/binutils.ml[129,3675+38]..[129,3675+44])
                                  Pexp_tuple
                                  [
                                    expression (utils/binutils.ml[129,3675+39]..[129,3675+40])
                                      Pexp_ident "s" (utils/binutils.ml[129,3675+39]..[129,3675+40])
                                    expression (utils/binutils.ml[129,3675+42]..[129,3675+43])
                                      Pexp_ident "n" (utils/binutils.ml[129,3675+42]..[129,3675+43])
                                  ]
                    ]
                <case>
                  pattern (utils/binutils.ml[130,3722+4]..[130,3722+10])
                    Ppat_construct "Some" (utils/binutils.ml[130,3722+4]..[130,3722+8])
                    Some
                      []
                      pattern (utils/binutils.ml[130,3722+9]..[130,3722+10])
                        Ppat_var "n" (utils/binutils.ml[130,3722+9]..[130,3722+10])
                  expression (utils/binutils.ml[130,3722+14]..[130,3722+15])
                    Pexp_ident "n" (utils/binutils.ml[130,3722+14]..[130,3722+15])
              ]
    ]
  structure_item (utils/binutils.ml[132,3739+0]..[134,3796+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[132,3739+4]..[132,3739+14])
          Ppat_var "load_bytes" (utils/binutils.ml[132,3739+4]..[132,3739+14])
        expression (utils/binutils.ml[132,3739+15]..[134,3796+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[132,3739+15]..[132,3739+16])
            Ppat_var "d" (utils/binutils.ml[132,3739+15]..[132,3739+16])
          expression (utils/binutils.ml[132,3739+17]..[134,3796+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/binutils.ml[132,3739+17]..[132,3739+20])
              Ppat_var "off" (utils/binutils.ml[132,3739+17]..[132,3739+20])
            expression (utils/binutils.ml[132,3739+21]..[134,3796+29]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (utils/binutils.ml[132,3739+21]..[132,3739+24])
                Ppat_var "len" (utils/binutils.ml[132,3739+21]..[132,3739+24])
              expression (utils/binutils.ml[133,3766+2]..[134,3796+29])
                Pexp_sequence
                expression (utils/binutils.ml[133,3766+2]..[133,3766+28])
                  Pexp_apply
                  expression (utils/binutils.ml[133,3766+2]..[133,3766+19])
                    Pexp_ident "LargeFile.seek_in" (utils/binutils.ml[133,3766+2]..[133,3766+19])
                  [
                    <arg>
                    Nolabel
                      expression (utils/binutils.ml[133,3766+20]..[133,3766+24])
                        Pexp_field
                        expression (utils/binutils.ml[133,3766+20]..[133,3766+21])
                          Pexp_ident "d" (utils/binutils.ml[133,3766+20]..[133,3766+21])
                        "ic" (utils/binutils.ml[133,3766+22]..[133,3766+24])
                    <arg>
                    Nolabel
                      expression (utils/binutils.ml[133,3766+25]..[133,3766+28])
                        Pexp_ident "off" (utils/binutils.ml[133,3766+25]..[133,3766+28])
                  ]
                expression (utils/binutils.ml[134,3796+2]..[134,3796+29])
                  Pexp_apply
                  expression (utils/binutils.ml[134,3796+2]..[134,3796+20])
                    Pexp_ident "really_input_bytes" (utils/binutils.ml[134,3796+2]..[134,3796+20])
                  [
                    <arg>
                    Nolabel
                      expression (utils/binutils.ml[134,3796+21]..[134,3796+25])
                        Pexp_field
                        expression (utils/binutils.ml[134,3796+21]..[134,3796+22])
                          Pexp_ident "d" (utils/binutils.ml[134,3796+21]..[134,3796+22])
                        "ic" (utils/binutils.ml[134,3796+23]..[134,3796+25])
                    <arg>
                    Nolabel
                      expression (utils/binutils.ml[134,3796+26]..[134,3796+29])
                        Pexp_ident "len" (utils/binutils.ml[134,3796+26]..[134,3796+29])
                  ]
    ]
  structure_item (utils/binutils.ml[136,3827+0]..[140,3919+3])
    Pstr_type Rec
    [
      type_declaration "t" (utils/binutils.ml[136,3827+5]..[136,3827+6]) (utils/binutils.ml[136,3827+0]..[140,3919+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (utils/binutils.ml[138,3840+4]..[138,3840+35])
                Immutable
                "defines_symbol" (utils/binutils.ml[138,3840+4]..[138,3840+18])                core_type (utils/binutils.ml[138,3840+20]..[138,3840+34])
                  Ptyp_arrow
                  Nolabel
                  core_type (utils/binutils.ml[138,3840+20]..[138,3840+26])
                    Ptyp_constr "string" (utils/binutils.ml[138,3840+20]..[138,3840+26])
                    []
                  core_type (utils/binutils.ml[138,3840+30]..[138,3840+34])
                    Ptyp_constr "bool" (utils/binutils.ml[138,3840+30]..[138,3840+34])
                    []
              (utils/binutils.ml[139,3876+4]..[139,3876+42])
                Immutable
                "symbol_offset" (utils/binutils.ml[139,3876+4]..[139,3876+17])                core_type (utils/binutils.ml[139,3876+19]..[139,3876+41])
                  Ptyp_arrow
                  Nolabel
                  core_type (utils/binutils.ml[139,3876+19]..[139,3876+25])
                    Ptyp_constr "string" (utils/binutils.ml[139,3876+19]..[139,3876+25])
                    []
                  core_type (utils/binutils.ml[139,3876+29]..[139,3876+41])
                    Ptyp_constr "option" (utils/binutils.ml[139,3876+35]..[139,3876+41])
                    [
                      core_type (utils/binutils.ml[139,3876+29]..[139,3876+34])
                        Ptyp_constr "int64" (utils/binutils.ml[139,3876+29]..[139,3876+34])
                        []
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (utils/binutils.ml[142,3924+0]..[330,9774+3])
    Pstr_module
    "ELF" (utils/binutils.ml[142,3924+7]..[142,3924+10])
      module_expr (utils/binutils.ml[142,3924+13]..[330,9774+3])
        Pmod_structure
        [
          structure_item (utils/binutils.ml[146,4013+2]..[147,4035+24])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[146,4013+6]..[146,4013+17])
                  Ppat_var "header_size" (utils/binutils.ml[146,4013+6]..[146,4013+17])
                expression (utils/binutils.ml[146,4013+18]..[147,4035+24]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[146,4013+18]..[146,4013+19])
                    Ppat_var "d" (utils/binutils.ml[146,4013+18]..[146,4013+19])
                  expression (utils/binutils.ml[147,4035+4]..[147,4035+24])
                    Pexp_apply
                    expression (utils/binutils.ml[147,4035+7]..[147,4035+8])
                      Pexp_ident "+" (utils/binutils.ml[147,4035+7]..[147,4035+8])
                    [
                      <arg>
                      Nolabel
                        expression (utils/binutils.ml[147,4035+4]..[147,4035+6])
                          Pexp_constant PConst_int (40,None)
                      <arg>
                      Nolabel
                        expression (utils/binutils.ml[147,4035+9]..[147,4035+24])
                          Pexp_apply
                          expression (utils/binutils.ml[147,4035+11]..[147,4035+12])
                            Pexp_ident "*" (utils/binutils.ml[147,4035+11]..[147,4035+12])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[147,4035+9]..[147,4035+10])
                                Pexp_constant PConst_int (3,None)
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[147,4035+13]..[147,4035+24])
                                Pexp_apply
                                expression (utils/binutils.ml[147,4035+13]..[147,4035+22])
                                  Pexp_ident "word_size" (utils/binutils.ml[147,4035+13]..[147,4035+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[147,4035+23]..[147,4035+24])
                                      Pexp_ident "d" (utils/binutils.ml[147,4035+23]..[147,4035+24])
                                ]
                          ]
                    ]
            ]
          structure_item (utils/binutils.ml[149,4061+2]..[155,4172+5])
            Pstr_type Rec
            [
              type_declaration "header" (utils/binutils.ml[149,4061+7]..[149,4061+13]) (utils/binutils.ml[149,4061+2]..[155,4172+5])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (utils/binutils.ml[151,4083+6]..[151,4083+21])
                        Immutable
                        "e_shoff" (utils/binutils.ml[151,4083+6]..[151,4083+13])                        core_type (utils/binutils.ml[151,4083+15]..[151,4083+20])
                          Ptyp_constr "int64" (utils/binutils.ml[151,4083+15]..[151,4083+20])
                          []
                      (utils/binutils.ml[152,4105+6]..[152,4105+23])
                        Immutable
                        "e_shentsize" (utils/binutils.ml[152,4105+6]..[152,4105+17])                        core_type (utils/binutils.ml[152,4105+19]..[152,4105+22])
                          Ptyp_constr "int" (utils/binutils.ml[152,4105+19]..[152,4105+22])
                          []
                      (utils/binutils.ml[153,4129+6]..[153,4129+19])
                        Immutable
                        "e_shnum" (utils/binutils.ml[153,4129+6]..[153,4129+13])                        core_type (utils/binutils.ml[153,4129+15]..[153,4129+18])
                          Ptyp_constr "int" (utils/binutils.ml[153,4129+15]..[153,4129+18])
                          []
                      (utils/binutils.ml[154,4149+6]..[154,4149+22])
                        Immutable
                        "e_shstrndx" (utils/binutils.ml[154,4149+6]..[154,4149+16])                        core_type (utils/binutils.ml[154,4149+18]..[154,4149+21])
                          Ptyp_constr "int" (utils/binutils.ml[154,4149+18]..[154,4149+21])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (utils/binutils.ml[157,4179+2]..[164,4526+47])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[157,4179+6]..[157,4179+17])
                  Ppat_var "read_header" (utils/binutils.ml[157,4179+6]..[157,4179+17])
                expression (utils/binutils.ml[157,4179+18]..[164,4526+47]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[157,4179+18]..[157,4179+19])
                    Ppat_var "d" (utils/binutils.ml[157,4179+18]..[157,4179+19])
                  expression (utils/binutils.ml[158,4201+4]..[164,4526+47])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (utils/binutils.ml[158,4201+8]..[158,4201+11])
                          Ppat_var "buf" (utils/binutils.ml[158,4201+8]..[158,4201+11])
                        expression (utils/binutils.ml[158,4201+14]..[158,4201+45])
                          Pexp_apply
                          expression (utils/binutils.ml[158,4201+14]..[158,4201+24])
                            Pexp_ident "load_bytes" (utils/binutils.ml[158,4201+14]..[158,4201+24])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[158,4201+25]..[158,4201+26])
                                Pexp_ident "d" (utils/binutils.ml[158,4201+25]..[158,4201+26])
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[158,4201+27]..[158,4201+29])
                                Pexp_constant PConst_int (0,Some L)
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[158,4201+30]..[158,4201+45])
                                Pexp_apply
                                expression (utils/binutils.ml[158,4201+31]..[158,4201+42])
                                  Pexp_ident "header_size" (utils/binutils.ml[158,4201+31]..[158,4201+42])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[158,4201+43]..[158,4201+44])
                                      Pexp_ident "d" (utils/binutils.ml[158,4201+43]..[158,4201+44])
                                ]
                          ]
                    ]
                    expression (utils/binutils.ml[159,4250+4]..[164,4526+47])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (utils/binutils.ml[159,4250+8]..[159,4250+17])
                            Ppat_var "word_size" (utils/binutils.ml[159,4250+8]..[159,4250+17])
                          expression (utils/binutils.ml[159,4250+20]..[159,4250+31])
                            Pexp_apply
                            expression (utils/binutils.ml[159,4250+20]..[159,4250+29])
                              Pexp_ident "word_size" (utils/binutils.ml[159,4250+20]..[159,4250+29])
                            [
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[159,4250+30]..[159,4250+31])
                                  Pexp_ident "d" (utils/binutils.ml[159,4250+30]..[159,4250+31])
                            ]
                      ]
                      expression (utils/binutils.ml[160,4285+4]..[164,4526+47])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (utils/binutils.ml[160,4285+8]..[160,4285+15])
                              Ppat_var "e_shnum" (utils/binutils.ml[160,4285+8]..[160,4285+15])
                            expression (utils/binutils.ml[160,4285+18]..[160,4285+55])
                              Pexp_apply
                              expression (utils/binutils.ml[160,4285+18]..[160,4285+28])
                                Pexp_ident "get_uint16" (utils/binutils.ml[160,4285+18]..[160,4285+28])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[160,4285+29]..[160,4285+30])
                                    Pexp_ident "d" (utils/binutils.ml[160,4285+29]..[160,4285+30])
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[160,4285+31]..[160,4285+34])
                                    Pexp_ident "buf" (utils/binutils.ml[160,4285+31]..[160,4285+34])
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[160,4285+35]..[160,4285+55])
                                    Pexp_apply
                                    expression (utils/binutils.ml[160,4285+39]..[160,4285+40])
                                      Pexp_ident "+" (utils/binutils.ml[160,4285+39]..[160,4285+40])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[160,4285+36]..[160,4285+38])
                                          Pexp_constant PConst_int (36,None)
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[160,4285+41]..[160,4285+54])
                                          Pexp_apply
                                          expression (utils/binutils.ml[160,4285+43]..[160,4285+44])
                                            Pexp_ident "*" (utils/binutils.ml[160,4285+43]..[160,4285+44])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[160,4285+41]..[160,4285+42])
                                                Pexp_constant PConst_int (3,None)
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[160,4285+45]..[160,4285+54])
                                                Pexp_ident "word_size" (utils/binutils.ml[160,4285+45]..[160,4285+54])
                                          ]
                                    ]
                              ]
                        ]
                        expression (utils/binutils.ml[161,4344+4]..[164,4526+47])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (utils/binutils.ml[161,4344+8]..[161,4344+19])
                                Ppat_var "e_shentsize" (utils/binutils.ml[161,4344+8]..[161,4344+19])
                              expression (utils/binutils.ml[161,4344+22]..[161,4344+59])
                                Pexp_apply
                                expression (utils/binutils.ml[161,4344+22]..[161,4344+32])
                                  Pexp_ident "get_uint16" (utils/binutils.ml[161,4344+22]..[161,4344+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[161,4344+33]..[161,4344+34])
                                      Pexp_ident "d" (utils/binutils.ml[161,4344+33]..[161,4344+34])
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[161,4344+35]..[161,4344+38])
                                      Pexp_ident "buf" (utils/binutils.ml[161,4344+35]..[161,4344+38])
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[161,4344+39]..[161,4344+59])
                                      Pexp_apply
                                      expression (utils/binutils.ml[161,4344+43]..[161,4344+44])
                                        Pexp_ident "+" (utils/binutils.ml[161,4344+43]..[161,4344+44])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[161,4344+40]..[161,4344+42])
                                            Pexp_constant PConst_int (34,None)
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[161,4344+45]..[161,4344+58])
                                            Pexp_apply
                                            expression (utils/binutils.ml[161,4344+47]..[161,4344+48])
                                              Pexp_ident "*" (utils/binutils.ml[161,4344+47]..[161,4344+48])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/binutils.ml[161,4344+45]..[161,4344+46])
                                                  Pexp_constant PConst_int (3,None)
                                              <arg>
                                              Nolabel
                                                expression (utils/binutils.ml[161,4344+49]..[161,4344+58])
                                                  Pexp_ident "word_size" (utils/binutils.ml[161,4344+49]..[161,4344+58])
                                            ]
                                      ]
                                ]
                          ]
                          expression (utils/binutils.ml[162,4407+4]..[164,4526+47])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (utils/binutils.ml[162,4407+8]..[162,4407+15])
                                  Ppat_var "e_shoff" (utils/binutils.ml[162,4407+8]..[162,4407+15])
                                expression (utils/binutils.ml[162,4407+18]..[162,4407+53])
                                  Pexp_apply
                                  expression (utils/binutils.ml[162,4407+18]..[162,4407+26])
                                    Pexp_ident "get_word" (utils/binutils.ml[162,4407+18]..[162,4407+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[162,4407+27]..[162,4407+28])
                                        Pexp_ident "d" (utils/binutils.ml[162,4407+27]..[162,4407+28])
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[162,4407+29]..[162,4407+32])
                                        Pexp_ident "buf" (utils/binutils.ml[162,4407+29]..[162,4407+32])
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[162,4407+33]..[162,4407+53])
                                        Pexp_apply
                                        expression (utils/binutils.ml[162,4407+37]..[162,4407+38])
                                          Pexp_ident "+" (utils/binutils.ml[162,4407+37]..[162,4407+38])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[162,4407+34]..[162,4407+36])
                                              Pexp_constant PConst_int (24,None)
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[162,4407+39]..[162,4407+52])
                                              Pexp_apply
                                              expression (utils/binutils.ml[162,4407+41]..[162,4407+42])
                                                Pexp_ident "*" (utils/binutils.ml[162,4407+41]..[162,4407+42])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[162,4407+39]..[162,4407+40])
                                                    Pexp_constant PConst_int (2,None)
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[162,4407+43]..[162,4407+52])
                                                    Pexp_ident "word_size" (utils/binutils.ml[162,4407+43]..[162,4407+52])
                                              ]
                                        ]
                                  ]
                            ]
                            expression (utils/binutils.ml[163,4464+4]..[164,4526+47])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (utils/binutils.ml[163,4464+8]..[163,4464+18])
                                    Ppat_var "e_shstrndx" (utils/binutils.ml[163,4464+8]..[163,4464+18])
                                  expression (utils/binutils.ml[163,4464+21]..[163,4464+58])
                                    Pexp_apply
                                    expression (utils/binutils.ml[163,4464+21]..[163,4464+31])
                                      Pexp_ident "get_uint16" (utils/binutils.ml[163,4464+21]..[163,4464+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[163,4464+32]..[163,4464+33])
                                          Pexp_ident "d" (utils/binutils.ml[163,4464+32]..[163,4464+33])
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[163,4464+34]..[163,4464+37])
                                          Pexp_ident "buf" (utils/binutils.ml[163,4464+34]..[163,4464+37])
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[163,4464+38]..[163,4464+58])
                                          Pexp_apply
                                          expression (utils/binutils.ml[163,4464+42]..[163,4464+43])
                                            Pexp_ident "+" (utils/binutils.ml[163,4464+42]..[163,4464+43])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[163,4464+39]..[163,4464+41])
                                                Pexp_constant PConst_int (38,None)
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[163,4464+44]..[163,4464+57])
                                                Pexp_apply
                                                expression (utils/binutils.ml[163,4464+46]..[163,4464+47])
                                                  Pexp_ident "*" (utils/binutils.ml[163,4464+46]..[163,4464+47])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[163,4464+44]..[163,4464+45])
                                                      Pexp_constant PConst_int (3,None)
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[163,4464+48]..[163,4464+57])
                                                      Pexp_ident "word_size" (utils/binutils.ml[163,4464+48]..[163,4464+57])
                                                ]
                                          ]
                                    ]
                              ]
                              expression (utils/binutils.ml[164,4526+4]..[164,4526+47])
                                Pexp_record
                                [
                                  "e_shnum" (utils/binutils.ml[164,4526+5]..[164,4526+12]) ghost
                                    expression (utils/binutils.ml[164,4526+5]..[164,4526+12])
                                      Pexp_ident "e_shnum" (utils/binutils.ml[164,4526+5]..[164,4526+12])
                                  "e_shentsize" (utils/binutils.ml[164,4526+14]..[164,4526+25]) ghost
                                    expression (utils/binutils.ml[164,4526+14]..[164,4526+25])
                                      Pexp_ident "e_shentsize" (utils/binutils.ml[164,4526+14]..[164,4526+25])
                                  "e_shoff" (utils/binutils.ml[164,4526+27]..[164,4526+34]) ghost
                                    expression (utils/binutils.ml[164,4526+27]..[164,4526+34])
                                      Pexp_ident "e_shoff" (utils/binutils.ml[164,4526+27]..[164,4526+34])
                                  "e_shstrndx" (utils/binutils.ml[164,4526+36]..[164,4526+46]) ghost
                                    expression (utils/binutils.ml[164,4526+36]..[164,4526+46])
                                      Pexp_ident "e_shstrndx" (utils/binutils.ml[164,4526+36]..[164,4526+46])
                                ]
                                None
            ]
          structure_item (utils/binutils.ml[166,4575+2]..[169,4626+15])
            Pstr_type Rec
            [
              type_declaration "sh_type" (utils/binutils.ml[166,4575+7]..[166,4575+14]) (utils/binutils.ml[166,4575+2]..[169,4626+15])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (utils/binutils.ml[167,4592+4]..[167,4592+16])
                        "SHT_STRTAB" (utils/binutils.ml[167,4592+6]..[167,4592+16])
                        []
                        None
                      (utils/binutils.ml[168,4609+4]..[168,4609+16])
                        "SHT_DYNSYM" (utils/binutils.ml[168,4609+6]..[168,4609+16])
                        []
                        None
                      (utils/binutils.ml[169,4626+4]..[169,4626+15])
                        "SHT_OTHER" (utils/binutils.ml[169,4626+6]..[169,4626+15])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (utils/binutils.ml[171,4643+2]..[180,4826+5])
            Pstr_type Rec
            [
              type_declaration "section" (utils/binutils.ml[171,4643+7]..[171,4643+14]) (utils/binutils.ml[171,4643+2]..[180,4826+5])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (utils/binutils.ml[173,4666+6]..[173,4666+19])
                        Immutable
                        "sh_name" (utils/binutils.ml[173,4666+6]..[173,4666+13])                        core_type (utils/binutils.ml[173,4666+15]..[173,4666+18])
                          Ptyp_constr "int" (utils/binutils.ml[173,4666+15]..[173,4666+18])
                          []
                      (utils/binutils.ml[174,4686+6]..[174,4686+23])
                        Immutable
                        "sh_type" (utils/binutils.ml[174,4686+6]..[174,4686+13])                        core_type (utils/binutils.ml[174,4686+15]..[174,4686+22])
                          Ptyp_constr "sh_type" (utils/binutils.ml[174,4686+15]..[174,4686+22])
                          []
                      (utils/binutils.ml[175,4710+6]..[175,4710+21])
                        Immutable
                        "sh_addr" (utils/binutils.ml[175,4710+6]..[175,4710+13])                        core_type (utils/binutils.ml[175,4710+15]..[175,4710+20])
                          Ptyp_constr "int64" (utils/binutils.ml[175,4710+15]..[175,4710+20])
                          []
                      (utils/binutils.ml[176,4732+6]..[176,4732+23])
                        Immutable
                        "sh_offset" (utils/binutils.ml[176,4732+6]..[176,4732+15])                        core_type (utils/binutils.ml[176,4732+17]..[176,4732+22])
                          Ptyp_constr "int64" (utils/binutils.ml[176,4732+17]..[176,4732+22])
                          []
                      (utils/binutils.ml[177,4756+6]..[177,4756+19])
                        Immutable
                        "sh_size" (utils/binutils.ml[177,4756+6]..[177,4756+13])                        core_type (utils/binutils.ml[177,4756+15]..[177,4756+18])
                          Ptyp_constr "int" (utils/binutils.ml[177,4756+15]..[177,4756+18])
                          []
                      (utils/binutils.ml[178,4776+6]..[178,4776+22])
                        Immutable
                        "sh_entsize" (utils/binutils.ml[178,4776+6]..[178,4776+16])                        core_type (utils/binutils.ml[178,4776+18]..[178,4776+21])
                          Ptyp_constr "int" (utils/binutils.ml[178,4776+18]..[178,4776+21])
                          []
                      (utils/binutils.ml[179,4799+6]..[179,4799+26])
                        Immutable
                        "sh_name_str" (utils/binutils.ml[179,4799+6]..[179,4799+17])                        core_type (utils/binutils.ml[179,4799+19]..[179,4799+25])
                          Ptyp_constr "string" (utils/binutils.ml[179,4799+19]..[179,4799+25])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (utils/binutils.ml[182,4833+2]..[183,4885+34])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[182,4833+6]..[182,4833+23])
                  Ppat_var "load_section_body" (utils/binutils.ml[182,4833+6]..[182,4833+23])
                expression (utils/binutils.ml[182,4833+24]..[183,4885+34]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[182,4833+24]..[182,4833+25])
                    Ppat_var "d" (utils/binutils.ml[182,4833+24]..[182,4833+25])
                  expression (utils/binutils.ml[182,4833+26]..[183,4885+34]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[182,4833+26]..[182,4833+49])
                      Ppat_record Open
                      [
                        "sh_offset" (utils/binutils.ml[182,4833+27]..[182,4833+36]) ghost
                          pattern (utils/binutils.ml[182,4833+27]..[182,4833+36])
                            Ppat_var "sh_offset" (utils/binutils.ml[182,4833+27]..[182,4833+36])
                        "sh_size" (utils/binutils.ml[182,4833+38]..[182,4833+45]) ghost
                          pattern (utils/binutils.ml[182,4833+38]..[182,4833+45])
                            Ppat_var "sh_size" (utils/binutils.ml[182,4833+38]..[182,4833+45])
                      ]
                    expression (utils/binutils.ml[183,4885+4]..[183,4885+34])
                      Pexp_apply
                      expression (utils/binutils.ml[183,4885+4]..[183,4885+14])
                        Pexp_ident "load_bytes" (utils/binutils.ml[183,4885+4]..[183,4885+14])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[183,4885+15]..[183,4885+16])
                            Pexp_ident "d" (utils/binutils.ml[183,4885+15]..[183,4885+16])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[183,4885+17]..[183,4885+26])
                            Pexp_ident "sh_offset" (utils/binutils.ml[183,4885+17]..[183,4885+26])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[183,4885+27]..[183,4885+34])
                            Pexp_ident "sh_size" (utils/binutils.ml[183,4885+27]..[183,4885+34])
                      ]
            ]
          structure_item (utils/binutils.ml[185,4921+2]..[220,6130+33])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[185,4921+6]..[185,4921+19])
                  Ppat_var "read_sections" (utils/binutils.ml[185,4921+6]..[185,4921+19])
                expression (utils/binutils.ml[185,4921+20]..[220,6130+33]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[185,4921+20]..[185,4921+21])
                    Ppat_var "d" (utils/binutils.ml[185,4921+20]..[185,4921+21])
                  expression (utils/binutils.ml[185,4921+22]..[220,6130+33]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[185,4921+22]..[185,4921+68])
                      Ppat_record Open
                      [
                        "e_shoff" (utils/binutils.ml[185,4921+23]..[185,4921+30]) ghost
                          pattern (utils/binutils.ml[185,4921+23]..[185,4921+30])
                            Ppat_var "e_shoff" (utils/binutils.ml[185,4921+23]..[185,4921+30])
                        "e_shnum" (utils/binutils.ml[185,4921+32]..[185,4921+39]) ghost
                          pattern (utils/binutils.ml[185,4921+32]..[185,4921+39])
                            Ppat_var "e_shnum" (utils/binutils.ml[185,4921+32]..[185,4921+39])
                        "e_shentsize" (utils/binutils.ml[185,4921+41]..[185,4921+52]) ghost
                          pattern (utils/binutils.ml[185,4921+41]..[185,4921+52])
                            Ppat_var "e_shentsize" (utils/binutils.ml[185,4921+41]..[185,4921+52])
                        "e_shstrndx" (utils/binutils.ml[185,4921+54]..[185,4921+64]) ghost
                          pattern (utils/binutils.ml[185,4921+54]..[185,4921+64])
                            Ppat_var "e_shstrndx" (utils/binutils.ml[185,4921+54]..[185,4921+64])
                      ]
                    expression (utils/binutils.ml[186,4992+4]..[220,6130+33])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (utils/binutils.ml[186,4992+8]..[186,4992+11])
                            Ppat_var "buf" (utils/binutils.ml[186,4992+8]..[186,4992+11])
                          expression (utils/binutils.ml[186,4992+14]..[186,4992+58])
                            Pexp_apply
                            expression (utils/binutils.ml[186,4992+14]..[186,4992+24])
                              Pexp_ident "load_bytes" (utils/binutils.ml[186,4992+14]..[186,4992+24])
                            [
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[186,4992+25]..[186,4992+26])
                                  Pexp_ident "d" (utils/binutils.ml[186,4992+25]..[186,4992+26])
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[186,4992+27]..[186,4992+34])
                                  Pexp_ident "e_shoff" (utils/binutils.ml[186,4992+27]..[186,4992+34])
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[186,4992+35]..[186,4992+58])
                                  Pexp_apply
                                  expression (utils/binutils.ml[186,4992+44]..[186,4992+45])
                                    Pexp_ident "*" (utils/binutils.ml[186,4992+44]..[186,4992+45])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[186,4992+36]..[186,4992+43])
                                        Pexp_ident "e_shnum" (utils/binutils.ml[186,4992+36]..[186,4992+43])
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[186,4992+46]..[186,4992+57])
                                        Pexp_ident "e_shentsize" (utils/binutils.ml[186,4992+46]..[186,4992+57])
                                  ]
                            ]
                      ]
                      expression (utils/binutils.ml[187,5054+4]..[220,6130+33])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (utils/binutils.ml[187,5054+8]..[187,5054+17])
                              Ppat_var "word_size" (utils/binutils.ml[187,5054+8]..[187,5054+17])
                            expression (utils/binutils.ml[187,5054+20]..[187,5054+31])
                              Pexp_apply
                              expression (utils/binutils.ml[187,5054+20]..[187,5054+29])
                                Pexp_ident "word_size" (utils/binutils.ml[187,5054+20]..[187,5054+29])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[187,5054+30]..[187,5054+31])
                                    Pexp_ident "d" (utils/binutils.ml[187,5054+30]..[187,5054+31])
                              ]
                        ]
                        expression (utils/binutils.ml[188,5089+4]..[220,6130+33])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (utils/binutils.ml[188,5089+8]..[188,5089+10])
                                Ppat_var "mk" (utils/binutils.ml[188,5089+8]..[188,5089+10])
                              expression (utils/binutils.ml[188,5089+11]..[208,5765+45]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (utils/binutils.ml[188,5089+11]..[188,5089+12])
                                  Ppat_var "i" (utils/binutils.ml[188,5089+11]..[188,5089+12])
                                expression (utils/binutils.ml[189,5104+6]..[208,5765+45])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (utils/binutils.ml[189,5104+10]..[189,5104+14])
                                        Ppat_var "base" (utils/binutils.ml[189,5104+10]..[189,5104+14])
                                      expression (utils/binutils.ml[189,5104+17]..[189,5104+32])
                                        Pexp_apply
                                        expression (utils/binutils.ml[189,5104+19]..[189,5104+20])
                                          Pexp_ident "*" (utils/binutils.ml[189,5104+19]..[189,5104+20])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[189,5104+17]..[189,5104+18])
                                              Pexp_ident "i" (utils/binutils.ml[189,5104+17]..[189,5104+18])
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[189,5104+21]..[189,5104+32])
                                              Pexp_ident "e_shentsize" (utils/binutils.ml[189,5104+21]..[189,5104+32])
                                        ]
                                  ]
                                  expression (utils/binutils.ml[190,5140+6]..[208,5765+45])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (utils/binutils.ml[190,5140+10]..[190,5140+17])
                                          Ppat_var "sh_name" (utils/binutils.ml[190,5140+10]..[190,5140+17])
                                        expression (utils/binutils.ml[190,5140+20]..[190,5140+55])
                                          Pexp_apply
                                          expression (utils/binutils.ml[190,5140+20]..[190,5140+28])
                                            Pexp_ident "get_uint" (utils/binutils.ml[190,5140+20]..[190,5140+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[190,5140+29]..[190,5140+38])
                                                Pexp_constant PConst_string("sh_name",(utils/binutils.ml[190,5140+30]..[190,5140+37]),None)
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[190,5140+39]..[190,5140+40])
                                                Pexp_ident "d" (utils/binutils.ml[190,5140+39]..[190,5140+40])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[190,5140+41]..[190,5140+44])
                                                Pexp_ident "buf" (utils/binutils.ml[190,5140+41]..[190,5140+44])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[190,5140+45]..[190,5140+55])
                                                Pexp_apply
                                                expression (utils/binutils.ml[190,5140+51]..[190,5140+52])
                                                  Pexp_ident "+" (utils/binutils.ml[190,5140+51]..[190,5140+52])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[190,5140+46]..[190,5140+50])
                                                      Pexp_ident "base" (utils/binutils.ml[190,5140+46]..[190,5140+50])
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[190,5140+53]..[190,5140+54])
                                                      Pexp_constant PConst_int (0,None)
                                                ]
                                          ]
                                    ]
                                    expression (utils/binutils.ml[191,5199+6]..[208,5765+45])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (utils/binutils.ml[191,5199+10]..[191,5199+17])
                                            Ppat_var "sh_type" (utils/binutils.ml[191,5199+10]..[191,5199+17])
                                          expression (utils/binutils.ml[192,5219+8]..[195,5321+24])
                                            Pexp_match
                                            expression (utils/binutils.ml[192,5219+14]..[192,5219+41])
                                              Pexp_apply
                                              expression (utils/binutils.ml[192,5219+14]..[192,5219+24])
                                                Pexp_ident "get_uint32" (utils/binutils.ml[192,5219+14]..[192,5219+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[192,5219+25]..[192,5219+26])
                                                    Pexp_ident "d" (utils/binutils.ml[192,5219+25]..[192,5219+26])
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[192,5219+27]..[192,5219+30])
                                                    Pexp_ident "buf" (utils/binutils.ml[192,5219+27]..[192,5219+30])
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[192,5219+31]..[192,5219+41])
                                                    Pexp_apply
                                                    expression (utils/binutils.ml[192,5219+37]..[192,5219+38])
                                                      Pexp_ident "+" (utils/binutils.ml[192,5219+37]..[192,5219+38])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[192,5219+32]..[192,5219+36])
                                                          Pexp_ident "base" (utils/binutils.ml[192,5219+32]..[192,5219+36])
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[192,5219+39]..[192,5219+40])
                                                          Pexp_constant PConst_int (4,None)
                                                    ]
                                              ]
                                            [
                                              <case>
                                                pattern (utils/binutils.ml[193,5266+10]..[193,5266+12])
                                                  Ppat_constant PConst_int (3,Some l)
                                                expression (utils/binutils.ml[193,5266+16]..[193,5266+26])
                                                  Pexp_construct "SHT_STRTAB" (utils/binutils.ml[193,5266+16]..[193,5266+26])
                                                  None
                                              <case>
                                                pattern (utils/binutils.ml[194,5293+10]..[194,5293+13])
                                                  Ppat_constant PConst_int (11,Some l)
                                                expression (utils/binutils.ml[194,5293+17]..[194,5293+27])
                                                  Pexp_construct "SHT_DYNSYM" (utils/binutils.ml[194,5293+17]..[194,5293+27])
                                                  None
                                              <case>
                                                pattern (utils/binutils.ml[195,5321+10]..[195,5321+11])
                                                  Ppat_any
                                                expression (utils/binutils.ml[195,5321+15]..[195,5321+24])
                                                  Pexp_construct "SHT_OTHER" (utils/binutils.ml[195,5321+15]..[195,5321+24])
                                                  None
                                            ]
                                      ]
                                      expression (utils/binutils.ml[197,5355+6]..[208,5765+45])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (utils/binutils.ml[197,5355+10]..[197,5355+17])
                                              Ppat_var "sh_addr" (utils/binutils.ml[197,5355+10]..[197,5355+17])
                                            expression (utils/binutils.ml[197,5355+20]..[197,5355+57])
                                              Pexp_apply
                                              expression (utils/binutils.ml[197,5355+20]..[197,5355+28])
                                                Pexp_ident "get_word" (utils/binutils.ml[197,5355+20]..[197,5355+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[197,5355+29]..[197,5355+30])
                                                    Pexp_ident "d" (utils/binutils.ml[197,5355+29]..[197,5355+30])
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[197,5355+31]..[197,5355+34])
                                                    Pexp_ident "buf" (utils/binutils.ml[197,5355+31]..[197,5355+34])
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[197,5355+35]..[197,5355+57])
                                                    Pexp_apply
                                                    expression (utils/binutils.ml[197,5355+45]..[197,5355+46])
                                                      Pexp_ident "+" (utils/binutils.ml[197,5355+45]..[197,5355+46])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[197,5355+36]..[197,5355+44])
                                                          Pexp_apply
                                                          expression (utils/binutils.ml[197,5355+41]..[197,5355+42])
                                                            Pexp_ident "+" (utils/binutils.ml[197,5355+41]..[197,5355+42])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[197,5355+36]..[197,5355+40])
                                                                Pexp_ident "base" (utils/binutils.ml[197,5355+36]..[197,5355+40])
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[197,5355+43]..[197,5355+44])
                                                                Pexp_constant PConst_int (8,None)
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[197,5355+47]..[197,5355+56])
                                                          Pexp_ident "word_size" (utils/binutils.ml[197,5355+47]..[197,5355+56])
                                                    ]
                                              ]
                                        ]
                                        expression (utils/binutils.ml[198,5416+6]..[208,5765+45])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (utils/binutils.ml[198,5416+10]..[198,5416+19])
                                                Ppat_var "sh_offset" (utils/binutils.ml[198,5416+10]..[198,5416+19])
                                              expression (utils/binutils.ml[198,5416+22]..[198,5416+63])
                                                Pexp_apply
                                                expression (utils/binutils.ml[198,5416+22]..[198,5416+30])
                                                  Pexp_ident "get_word" (utils/binutils.ml[198,5416+22]..[198,5416+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[198,5416+31]..[198,5416+32])
                                                      Pexp_ident "d" (utils/binutils.ml[198,5416+31]..[198,5416+32])
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[198,5416+33]..[198,5416+36])
                                                      Pexp_ident "buf" (utils/binutils.ml[198,5416+33]..[198,5416+36])
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[198,5416+37]..[198,5416+63])
                                                      Pexp_apply
                                                      expression (utils/binutils.ml[198,5416+47]..[198,5416+48])
                                                        Pexp_ident "+" (utils/binutils.ml[198,5416+47]..[198,5416+48])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (utils/binutils.ml[198,5416+38]..[198,5416+46])
                                                            Pexp_apply
                                                            expression (utils/binutils.ml[198,5416+43]..[198,5416+44])
                                                              Pexp_ident "+" (utils/binutils.ml[198,5416+43]..[198,5416+44])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (utils/binutils.ml[198,5416+38]..[198,5416+42])
                                                                  Pexp_ident "base" (utils/binutils.ml[198,5416+38]..[198,5416+42])
                                                              <arg>
                                                              Nolabel
                                                                expression (utils/binutils.ml[198,5416+45]..[198,5416+46])
                                                                  Pexp_constant PConst_int (8,None)
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (utils/binutils.ml[198,5416+49]..[198,5416+62])
                                                            Pexp_apply
                                                            expression (utils/binutils.ml[198,5416+51]..[198,5416+52])
                                                              Pexp_ident "*" (utils/binutils.ml[198,5416+51]..[198,5416+52])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (utils/binutils.ml[198,5416+49]..[198,5416+50])
                                                                  Pexp_constant PConst_int (2,None)
                                                              <arg>
                                                              Nolabel
                                                                expression (utils/binutils.ml[198,5416+53]..[198,5416+62])
                                                                  Pexp_ident "word_size" (utils/binutils.ml[198,5416+53]..[198,5416+62])
                                                            ]
                                                      ]
                                                ]
                                          ]
                                          expression (utils/binutils.ml[199,5483+6]..[208,5765+45])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (utils/binutils.ml[199,5483+10]..[199,5483+17])
                                                  Ppat_var "sh_size" (utils/binutils.ml[199,5483+10]..[199,5483+17])
                                                expression (utils/binutils.ml[200,5503+8]..[201,5535+53])
                                                  Pexp_apply
                                                  expression (utils/binutils.ml[200,5503+8]..[200,5503+21])
                                                    Pexp_ident "uint64_to_int" (utils/binutils.ml[200,5503+8]..[200,5503+21])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[200,5503+22]..[200,5503+31])
                                                        Pexp_constant PConst_string("sh_size",(utils/binutils.ml[200,5503+23]..[200,5503+30]),None)
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[201,5535+10]..[201,5535+53])
                                                        Pexp_apply
                                                        expression (utils/binutils.ml[201,5535+11]..[201,5535+19])
                                                          Pexp_ident "get_word" (utils/binutils.ml[201,5535+11]..[201,5535+19])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[201,5535+20]..[201,5535+21])
                                                              Pexp_ident "d" (utils/binutils.ml[201,5535+20]..[201,5535+21])
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[201,5535+22]..[201,5535+25])
                                                              Pexp_ident "buf" (utils/binutils.ml[201,5535+22]..[201,5535+25])
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[201,5535+26]..[201,5535+52])
                                                              Pexp_apply
                                                              expression (utils/binutils.ml[201,5535+36]..[201,5535+37])
                                                                Pexp_ident "+" (utils/binutils.ml[201,5535+36]..[201,5535+37])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[201,5535+27]..[201,5535+35])
                                                                    Pexp_apply
                                                                    expression (utils/binutils.ml[201,5535+32]..[201,5535+33])
                                                                      Pexp_ident "+" (utils/binutils.ml[201,5535+32]..[201,5535+33])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (utils/binutils.ml[201,5535+27]..[201,5535+31])
  Pexp_ident "base" (utils/binutils.ml[201,5535+27]..[201,5535+31])
                                                                      <arg>
                                                                      Nolabel
expression (utils/binutils.ml[201,5535+34]..[201,5535+35])
  Pexp_constant PConst_int (8,None)
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[201,5535+38]..[201,5535+51])
                                                                    Pexp_apply
                                                                    expression (utils/binutils.ml[201,5535+40]..[201,5535+41])
                                                                      Pexp_ident "*" (utils/binutils.ml[201,5535+40]..[201,5535+41])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (utils/binutils.ml[201,5535+38]..[201,5535+39])
  Pexp_constant PConst_int (3,None)
                                                                      <arg>
                                                                      Nolabel
expression (utils/binutils.ml[201,5535+42]..[201,5535+51])
  Pexp_ident "word_size" (utils/binutils.ml[201,5535+42]..[201,5535+51])
                                                                    ]
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                            expression (utils/binutils.ml[203,5598+6]..[208,5765+45])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (utils/binutils.ml[203,5598+10]..[203,5598+20])
                                                    Ppat_var "sh_entsize" (utils/binutils.ml[203,5598+10]..[203,5598+20])
                                                  expression (utils/binutils.ml[204,5621+8]..[205,5656+54])
                                                    Pexp_apply
                                                    expression (utils/binutils.ml[204,5621+8]..[204,5621+21])
                                                      Pexp_ident "uint64_to_int" (utils/binutils.ml[204,5621+8]..[204,5621+21])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[204,5621+22]..[204,5621+34])
                                                          Pexp_constant PConst_string("sh_entsize",(utils/binutils.ml[204,5621+23]..[204,5621+33]),None)
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[205,5656+10]..[205,5656+54])
                                                          Pexp_apply
                                                          expression (utils/binutils.ml[205,5656+11]..[205,5656+19])
                                                            Pexp_ident "get_word" (utils/binutils.ml[205,5656+11]..[205,5656+19])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[205,5656+20]..[205,5656+21])
                                                                Pexp_ident "d" (utils/binutils.ml[205,5656+20]..[205,5656+21])
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[205,5656+22]..[205,5656+25])
                                                                Pexp_ident "buf" (utils/binutils.ml[205,5656+22]..[205,5656+25])
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[205,5656+26]..[205,5656+53])
                                                                Pexp_apply
                                                                expression (utils/binutils.ml[205,5656+37]..[205,5656+38])
                                                                  Pexp_ident "+" (utils/binutils.ml[205,5656+37]..[205,5656+38])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (utils/binutils.ml[205,5656+27]..[205,5656+36])
                                                                      Pexp_apply
                                                                      expression (utils/binutils.ml[205,5656+32]..[205,5656+33])
Pexp_ident "+" (utils/binutils.ml[205,5656+32]..[205,5656+33])
                                                                      [
<arg>
Nolabel
  expression (utils/binutils.ml[205,5656+27]..[205,5656+31])
    Pexp_ident "base" (utils/binutils.ml[205,5656+27]..[205,5656+31])
<arg>
Nolabel
  expression (utils/binutils.ml[205,5656+34]..[205,5656+36])
    Pexp_constant PConst_int (16,None)
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (utils/binutils.ml[205,5656+39]..[205,5656+52])
                                                                      Pexp_apply
                                                                      expression (utils/binutils.ml[205,5656+41]..[205,5656+42])
Pexp_ident "*" (utils/binutils.ml[205,5656+41]..[205,5656+42])
                                                                      [
<arg>
Nolabel
  expression (utils/binutils.ml[205,5656+39]..[205,5656+40])
    Pexp_constant PConst_int (5,None)
<arg>
Nolabel
  expression (utils/binutils.ml[205,5656+43]..[205,5656+52])
    Pexp_ident "word_size" (utils/binutils.ml[205,5656+43]..[205,5656+52])
                                                                      ]
                                                                ]
                                                          ]
                                                    ]
                                              ]
                                              expression (utils/binutils.ml[207,5720+6]..[208,5765+45])
                                                Pexp_record
                                                [
                                                  "sh_name" (utils/binutils.ml[207,5720+7]..[207,5720+14]) ghost
                                                    expression (utils/binutils.ml[207,5720+7]..[207,5720+14])
                                                      Pexp_ident "sh_name" (utils/binutils.ml[207,5720+7]..[207,5720+14])
                                                  "sh_type" (utils/binutils.ml[207,5720+16]..[207,5720+23]) ghost
                                                    expression (utils/binutils.ml[207,5720+16]..[207,5720+23])
                                                      Pexp_ident "sh_type" (utils/binutils.ml[207,5720+16]..[207,5720+23])
                                                  "sh_addr" (utils/binutils.ml[207,5720+25]..[207,5720+32]) ghost
                                                    expression (utils/binutils.ml[207,5720+25]..[207,5720+32])
                                                      Pexp_ident "sh_addr" (utils/binutils.ml[207,5720+25]..[207,5720+32])
                                                  "sh_offset" (utils/binutils.ml[207,5720+34]..[207,5720+43]) ghost
                                                    expression (utils/binutils.ml[207,5720+34]..[207,5720+43])
                                                      Pexp_ident "sh_offset" (utils/binutils.ml[207,5720+34]..[207,5720+43])
                                                  "sh_size" (utils/binutils.ml[208,5765+7]..[208,5765+14]) ghost
                                                    expression (utils/binutils.ml[208,5765+7]..[208,5765+14])
                                                      Pexp_ident "sh_size" (utils/binutils.ml[208,5765+7]..[208,5765+14])
                                                  "sh_entsize" (utils/binutils.ml[208,5765+16]..[208,5765+26]) ghost
                                                    expression (utils/binutils.ml[208,5765+16]..[208,5765+26])
                                                      Pexp_ident "sh_entsize" (utils/binutils.ml[208,5765+16]..[208,5765+26])
                                                  "sh_name_str" (utils/binutils.ml[208,5765+28]..[208,5765+39])
                                                    expression (utils/binutils.ml[208,5765+42]..[208,5765+44])
                                                      Pexp_constant PConst_string("",(utils/binutils.ml[208,5765+43]..[208,5765+43]),None)
                                                ]
                                                None
                          ]
                          expression (utils/binutils.ml[210,5818+4]..[220,6130+33])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (utils/binutils.ml[210,5818+8]..[210,5818+16])
                                  Ppat_var "sections" (utils/binutils.ml[210,5818+8]..[210,5818+16])
                                expression (utils/binutils.ml[210,5818+19]..[210,5818+40])
                                  Pexp_apply
                                  expression (utils/binutils.ml[210,5818+19]..[210,5818+29])
                                    Pexp_ident "Array.init" (utils/binutils.ml[210,5818+19]..[210,5818+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[210,5818+30]..[210,5818+37])
                                        Pexp_ident "e_shnum" (utils/binutils.ml[210,5818+30]..[210,5818+37])
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[210,5818+38]..[210,5818+40])
                                        Pexp_ident "mk" (utils/binutils.ml[210,5818+38]..[210,5818+40])
                                  ]
                            ]
                            expression (utils/binutils.ml[211,5862+4]..[220,6130+33])
                              Pexp_ifthenelse
                              expression (utils/binutils.ml[211,5862+7]..[211,5862+21])
                                Pexp_apply
                                expression (utils/binutils.ml[211,5862+18]..[211,5862+19])
                                  Pexp_ident "=" (utils/binutils.ml[211,5862+18]..[211,5862+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[211,5862+7]..[211,5862+17])
                                      Pexp_ident "e_shstrndx" (utils/binutils.ml[211,5862+7]..[211,5862+17])
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[211,5862+20]..[211,5862+21])
                                      Pexp_constant PConst_int (0,None)
                                ]
                              expression (utils/binutils.ml[213,5917+6]..[213,5917+14])
                                Pexp_ident "sections" (utils/binutils.ml[213,5917+6]..[213,5917+14])
                              Some
                                expression (utils/binutils.ml[215,5941+6]..[220,6130+33])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (utils/binutils.ml[215,5941+10]..[215,5941+18])
                                        Ppat_var "shstrtbl" (utils/binutils.ml[215,5941+10]..[215,5941+18])
                                      expression (utils/binutils.ml[215,5941+21]..[215,5941+62])
                                        Pexp_apply
                                        expression (utils/binutils.ml[215,5941+21]..[215,5941+38])
                                          Pexp_ident "load_section_body" (utils/binutils.ml[215,5941+21]..[215,5941+38])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[215,5941+39]..[215,5941+40])
                                              Pexp_ident "d" (utils/binutils.ml[215,5941+39]..[215,5941+40])
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[215,5941+41]..[215,5941+62])
                                              Pexp_apply
                                              expression (utils/binutils.ml[215,5941+41]..[215,5941+62]) ghost
                                                Pexp_ident "Array.get" (utils/binutils.ml[215,5941+41]..[215,5941+62]) ghost
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[215,5941+41]..[215,5941+49])
                                                    Pexp_ident "sections" (utils/binutils.ml[215,5941+41]..[215,5941+49])
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[215,5941+51]..[215,5941+61])
                                                    Pexp_ident "e_shstrndx" (utils/binutils.ml[215,5941+51]..[215,5941+61])
                                              ]
                                        ]
                                  ]
                                  expression (utils/binutils.ml[216,6007+6]..[220,6130+33])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (utils/binutils.ml[216,6007+10]..[216,6007+18])
                                          Ppat_var "set_name" (utils/binutils.ml[216,6007+10]..[216,6007+18])
                                        expression (utils/binutils.ml[216,6007+19]..[218,6090+30]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (utils/binutils.ml[216,6007+19]..[216,6007+22])
                                            Ppat_var "sec" (utils/binutils.ml[216,6007+19]..[216,6007+22])
                                          expression (utils/binutils.ml[217,6032+8]..[218,6090+30])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (utils/binutils.ml[217,6032+12]..[217,6032+23])
                                                  Ppat_var "sh_name_str" (utils/binutils.ml[217,6032+12]..[217,6032+23])
                                                expression (utils/binutils.ml[217,6032+26]..[217,6032+54])
                                                  Pexp_apply
                                                  expression (utils/binutils.ml[217,6032+26]..[217,6032+33])
                                                    Pexp_ident "name_at" (utils/binutils.ml[217,6032+26]..[217,6032+33])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[217,6032+34]..[217,6032+42])
                                                        Pexp_ident "shstrtbl" (utils/binutils.ml[217,6032+34]..[217,6032+42])
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[217,6032+43]..[217,6032+54])
                                                        Pexp_field
                                                        expression (utils/binutils.ml[217,6032+43]..[217,6032+46])
                                                          Pexp_ident "sec" (utils/binutils.ml[217,6032+43]..[217,6032+46])
                                                        "sh_name" (utils/binutils.ml[217,6032+47]..[217,6032+54])
                                                  ]
                                            ]
                                            expression (utils/binutils.ml[218,6090+8]..[218,6090+30])
                                              Pexp_record
                                              [
                                                "sh_name_str" (utils/binutils.ml[218,6090+18]..[218,6090+29]) ghost
                                                  expression (utils/binutils.ml[218,6090+18]..[218,6090+29])
                                                    Pexp_ident "sh_name_str" (utils/binutils.ml[218,6090+18]..[218,6090+29])
                                              ]
                                              Some
                                                expression (utils/binutils.ml[218,6090+9]..[218,6090+12])
                                                  Pexp_ident "sec" (utils/binutils.ml[218,6090+9]..[218,6090+12])
                                    ]
                                    expression (utils/binutils.ml[220,6130+6]..[220,6130+33])
                                      Pexp_apply
                                      expression (utils/binutils.ml[220,6130+6]..[220,6130+15])
                                        Pexp_ident "Array.map" (utils/binutils.ml[220,6130+6]..[220,6130+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[220,6130+16]..[220,6130+24])
                                            Pexp_ident "set_name" (utils/binutils.ml[220,6130+16]..[220,6130+24])
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[220,6130+25]..[220,6130+33])
                                            Pexp_ident "sections" (utils/binutils.ml[220,6130+25]..[220,6130+33])
                                      ]
            ]
          structure_item (utils/binutils.ml[222,6165+2]..[245,6951+7])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[222,6165+6]..[222,6165+19])
                  Ppat_var "read_sections" (utils/binutils.ml[222,6165+6]..[222,6165+19])
                expression (utils/binutils.ml[222,6165+20]..[245,6951+7]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[222,6165+20]..[222,6165+21])
                    Ppat_var "d" (utils/binutils.ml[222,6165+20]..[222,6165+21])
                  expression (utils/binutils.ml[222,6165+22]..[245,6951+7]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[222,6165+22]..[222,6165+23])
                      Ppat_var "h" (utils/binutils.ml[222,6165+22]..[222,6165+23])
                    expression (utils/binutils.ml[223,6191+4]..[245,6951+7])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (utils/binutils.ml[223,6191+8]..[223,6191+51])
                            Ppat_record Closed
                            [
                              "e_shoff" (utils/binutils.ml[223,6191+9]..[223,6191+16]) ghost
                                pattern (utils/binutils.ml[223,6191+9]..[223,6191+16])
                                  Ppat_var "e_shoff" (utils/binutils.ml[223,6191+9]..[223,6191+16])
                              "e_shentsize" (utils/binutils.ml[223,6191+18]..[223,6191+29]) ghost
                                pattern (utils/binutils.ml[223,6191+18]..[223,6191+29])
                                  Ppat_var "e_shentsize" (utils/binutils.ml[223,6191+18]..[223,6191+29])
                              "e_shnum" (utils/binutils.ml[223,6191+31]..[223,6191+38]) ghost
                                pattern (utils/binutils.ml[223,6191+31]..[223,6191+38])
                                  Ppat_var "e_shnum" (utils/binutils.ml[223,6191+31]..[223,6191+38])
                              "e_shstrndx" (utils/binutils.ml[223,6191+40]..[223,6191+50]) ghost
                                pattern (utils/binutils.ml[223,6191+40]..[223,6191+50])
                                  Ppat_var "e_shstrndx" (utils/binutils.ml[223,6191+40]..[223,6191+50])
                            ]
                          expression (utils/binutils.ml[223,6191+54]..[223,6191+55])
                            Pexp_ident "h" (utils/binutils.ml[223,6191+54]..[223,6191+55])
                      ]
                      expression (utils/binutils.ml[224,6250+4]..[245,6951+7])
                        Pexp_ifthenelse
                        expression (utils/binutils.ml[224,6250+7]..[224,6250+19])
                          Pexp_apply
                          expression (utils/binutils.ml[224,6250+15]..[224,6250+16])
                            Pexp_ident "=" (utils/binutils.ml[224,6250+15]..[224,6250+16])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[224,6250+7]..[224,6250+14])
                                Pexp_ident "e_shoff" (utils/binutils.ml[224,6250+7]..[224,6250+14])
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[224,6250+17]..[224,6250+19])
                                Pexp_constant PConst_int (0,Some L)
                          ]
                        expression (utils/binutils.ml[225,6275+6]..[225,6275+10])
                          Pexp_array
                          []
                        Some
                          expression (utils/binutils.ml[226,6286+9]..[245,6951+7])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (utils/binutils.ml[227,6301+10]..[227,6301+13])
                                  Ppat_var "buf" (utils/binutils.ml[227,6301+10]..[227,6301+13])
                                expression (utils/binutils.ml[227,6301+16]..[227,6301+55])
                                  Pexp_lazy
                                  expression (utils/binutils.ml[227,6301+21]..[227,6301+55])
                                    Pexp_apply
                                    expression (utils/binutils.ml[227,6301+22]..[227,6301+32])
                                      Pexp_ident "load_bytes" (utils/binutils.ml[227,6301+22]..[227,6301+32])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[227,6301+33]..[227,6301+34])
                                          Pexp_ident "d" (utils/binutils.ml[227,6301+33]..[227,6301+34])
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[227,6301+35]..[227,6301+42])
                                          Pexp_ident "e_shoff" (utils/binutils.ml[227,6301+35]..[227,6301+42])
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[227,6301+43]..[227,6301+54])
                                          Pexp_ident "e_shentsize" (utils/binutils.ml[227,6301+43]..[227,6301+54])
                                    ]
                            ]
                            expression (utils/binutils.ml[228,6360+6]..[244,6900+50])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (utils/binutils.ml[228,6360+10]..[228,6360+19])
                                    Ppat_var "word_size" (utils/binutils.ml[228,6360+10]..[228,6360+19])
                                  expression (utils/binutils.ml[228,6360+22]..[228,6360+33])
                                    Pexp_apply
                                    expression (utils/binutils.ml[228,6360+22]..[228,6360+31])
                                      Pexp_ident "word_size" (utils/binutils.ml[228,6360+22]..[228,6360+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[228,6360+32]..[228,6360+33])
                                          Pexp_ident "d" (utils/binutils.ml[228,6360+32]..[228,6360+33])
                                    ]
                              ]
                              expression (utils/binutils.ml[229,6397+6]..[244,6900+50])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (utils/binutils.ml[229,6397+10]..[229,6397+17])
                                      Ppat_var "e_shnum" (utils/binutils.ml[229,6397+10]..[229,6397+17])
                                    expression (utils/binutils.ml[230,6417+8]..[235,6625+17])
                                      Pexp_ifthenelse
                                      expression (utils/binutils.ml[230,6417+11]..[230,6417+22])
                                        Pexp_apply
                                        expression (utils/binutils.ml[230,6417+19]..[230,6417+20])
                                          Pexp_ident "=" (utils/binutils.ml[230,6417+19]..[230,6417+20])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[230,6417+11]..[230,6417+18])
                                              Pexp_ident "e_shnum" (utils/binutils.ml[230,6417+11]..[230,6417+18])
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[230,6417+21]..[230,6417+22])
                                              Pexp_constant PConst_int (0,None)
                                        ]
                                      expression (utils/binutils.ml[232,6516+10]..[233,6550+61])
                                        Pexp_apply
                                        expression (utils/binutils.ml[232,6516+10]..[232,6516+23])
                                          Pexp_ident "uint64_to_int" (utils/binutils.ml[232,6516+10]..[232,6516+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[232,6516+24]..[232,6516+33])
                                              Pexp_constant PConst_string("e_shnum",(utils/binutils.ml[232,6516+25]..[232,6516+32]),None)
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[233,6550+12]..[233,6550+61])
                                              Pexp_apply
                                              expression (utils/binutils.ml[233,6550+13]..[233,6550+21])
                                                Pexp_ident "get_word" (utils/binutils.ml[233,6550+13]..[233,6550+21])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[233,6550+22]..[233,6550+23])
                                                    Pexp_ident "d" (utils/binutils.ml[233,6550+22]..[233,6550+23])
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[233,6550+24]..[233,6550+40])
                                                    Pexp_apply
                                                    expression (utils/binutils.ml[233,6550+25]..[233,6550+35])
                                                      Pexp_ident "Lazy.force" (utils/binutils.ml[233,6550+25]..[233,6550+35])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[233,6550+36]..[233,6550+39])
                                                          Pexp_ident "buf" (utils/binutils.ml[233,6550+36]..[233,6550+39])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[233,6550+41]..[233,6550+60])
                                                    Pexp_apply
                                                    expression (utils/binutils.ml[233,6550+44]..[233,6550+45])
                                                      Pexp_ident "+" (utils/binutils.ml[233,6550+44]..[233,6550+45])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[233,6550+42]..[233,6550+43])
                                                          Pexp_constant PConst_int (8,None)
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[233,6550+46]..[233,6550+59])
                                                          Pexp_apply
                                                          expression (utils/binutils.ml[233,6550+48]..[233,6550+49])
                                                            Pexp_ident "*" (utils/binutils.ml[233,6550+48]..[233,6550+49])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[233,6550+46]..[233,6550+47])
                                                                Pexp_constant PConst_int (3,None)
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[233,6550+50]..[233,6550+59])
                                                                Pexp_ident "word_size" (utils/binutils.ml[233,6550+50]..[233,6550+59])
                                                          ]
                                                    ]
                                              ]
                                        ]
                                      Some
                                        expression (utils/binutils.ml[235,6625+10]..[235,6625+17])
                                          Pexp_ident "e_shnum" (utils/binutils.ml[235,6625+10]..[235,6625+17])
                                ]
                                expression (utils/binutils.ml[237,6652+6]..[244,6900+50])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (utils/binutils.ml[237,6652+10]..[237,6652+20])
                                        Ppat_var "e_shstrndx" (utils/binutils.ml[237,6652+10]..[237,6652+20])
                                      expression (utils/binutils.ml[238,6675+8]..[242,6870+20])
                                        Pexp_ifthenelse
                                        expression (utils/binutils.ml[238,6675+11]..[238,6675+30])
                                          Pexp_apply
                                          expression (utils/binutils.ml[238,6675+22]..[238,6675+23])
                                            Pexp_ident "=" (utils/binutils.ml[238,6675+22]..[238,6675+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[238,6675+11]..[238,6675+21])
                                                Pexp_ident "e_shstrndx" (utils/binutils.ml[238,6675+11]..[238,6675+21])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[238,6675+24]..[238,6675+30])
                                                Pexp_constant PConst_int (0xffff,None)
                                          ]
                                        expression (utils/binutils.ml[240,6786+10]..[240,6786+70])
                                          Pexp_apply
                                          expression (utils/binutils.ml[240,6786+10]..[240,6786+18])
                                            Pexp_ident "get_uint" (utils/binutils.ml[240,6786+10]..[240,6786+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[240,6786+19]..[240,6786+31])
                                                Pexp_constant PConst_string("e_shstrndx",(utils/binutils.ml[240,6786+20]..[240,6786+30]),None)
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[240,6786+32]..[240,6786+33])
                                                Pexp_ident "d" (utils/binutils.ml[240,6786+32]..[240,6786+33])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[240,6786+34]..[240,6786+50])
                                                Pexp_apply
                                                expression (utils/binutils.ml[240,6786+35]..[240,6786+45])
                                                  Pexp_ident "Lazy.force" (utils/binutils.ml[240,6786+35]..[240,6786+45])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[240,6786+46]..[240,6786+49])
                                                      Pexp_ident "buf" (utils/binutils.ml[240,6786+46]..[240,6786+49])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[240,6786+51]..[240,6786+70])
                                                Pexp_apply
                                                expression (utils/binutils.ml[240,6786+54]..[240,6786+55])
                                                  Pexp_ident "+" (utils/binutils.ml[240,6786+54]..[240,6786+55])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[240,6786+52]..[240,6786+53])
                                                      Pexp_constant PConst_int (8,None)
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[240,6786+56]..[240,6786+69])
                                                      Pexp_apply
                                                      expression (utils/binutils.ml[240,6786+58]..[240,6786+59])
                                                        Pexp_ident "*" (utils/binutils.ml[240,6786+58]..[240,6786+59])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (utils/binutils.ml[240,6786+56]..[240,6786+57])
                                                            Pexp_constant PConst_int (4,None)
                                                        <arg>
                                                        Nolabel
                                                          expression (utils/binutils.ml[240,6786+60]..[240,6786+69])
                                                            Pexp_ident "word_size" (utils/binutils.ml[240,6786+60]..[240,6786+69])
                                                      ]
                                                ]
                                          ]
                                        Some
                                          expression (utils/binutils.ml[242,6870+10]..[242,6870+20])
                                            Pexp_ident "e_shstrndx" (utils/binutils.ml[242,6870+10]..[242,6870+20])
                                  ]
                                  expression (utils/binutils.ml[244,6900+6]..[244,6900+50])
                                    Pexp_apply
                                    expression (utils/binutils.ml[244,6900+6]..[244,6900+19])
                                      Pexp_ident "read_sections" (utils/binutils.ml[244,6900+6]..[244,6900+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[244,6900+20]..[244,6900+21])
                                          Pexp_ident "d" (utils/binutils.ml[244,6900+20]..[244,6900+21])
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[244,6900+22]..[244,6900+50])
                                          Pexp_record
                                          [
                                            "e_shnum" (utils/binutils.ml[244,6900+30]..[244,6900+37]) ghost
                                              expression (utils/binutils.ml[244,6900+30]..[244,6900+37])
                                                Pexp_ident "e_shnum" (utils/binutils.ml[244,6900+30]..[244,6900+37])
                                            "e_shstrndx" (utils/binutils.ml[244,6900+39]..[244,6900+49]) ghost
                                              expression (utils/binutils.ml[244,6900+39]..[244,6900+49])
                                                Pexp_ident "e_shstrndx" (utils/binutils.ml[244,6900+39]..[244,6900+49])
                                          ]
                                          Some
                                            expression (utils/binutils.ml[244,6900+23]..[244,6900+24])
                                              Pexp_ident "h" (utils/binutils.ml[244,6900+23]..[244,6900+24])
                                    ]
            ]
          structure_item (utils/binutils.ml[247,6960+2]..[252,7049+5])
            Pstr_type Rec
            [
              type_declaration "symbol" (utils/binutils.ml[247,6960+7]..[247,6960+13]) (utils/binutils.ml[247,6960+2]..[252,7049+5])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (utils/binutils.ml[249,6982+6]..[249,6982+22])
                        Immutable
                        "st_name" (utils/binutils.ml[249,6982+6]..[249,6982+13])                        core_type (utils/binutils.ml[249,6982+15]..[249,6982+21])
                          Ptyp_constr "string" (utils/binutils.ml[249,6982+15]..[249,6982+21])
                          []
                      (utils/binutils.ml[250,7005+6]..[250,7005+22])
                        Immutable
                        "st_value" (utils/binutils.ml[250,7005+6]..[250,7005+14])                        core_type (utils/binutils.ml[250,7005+16]..[250,7005+21])
                          Ptyp_constr "int64" (utils/binutils.ml[250,7005+16]..[250,7005+21])
                          []
                      (utils/binutils.ml[251,7028+6]..[251,7028+20])
                        Immutable
                        "st_shndx" (utils/binutils.ml[251,7028+6]..[251,7028+14])                        core_type (utils/binutils.ml[251,7028+16]..[251,7028+19])
                          Ptyp_constr "int" (utils/binutils.ml[251,7028+16]..[251,7028+19])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (utils/binutils.ml[254,7056+2]..[258,7194+25])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[254,7056+6]..[254,7056+18])
                  Ppat_var "find_section" (utils/binutils.ml[254,7056+6]..[254,7056+18])
                expression (utils/binutils.ml[254,7056+19]..[258,7194+25]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[254,7056+19]..[254,7056+27])
                    Ppat_var "sections" (utils/binutils.ml[254,7056+19]..[254,7056+27])
                  expression (utils/binutils.ml[254,7056+28]..[258,7194+25]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[254,7056+28]..[254,7056+33])
                      Ppat_var "type_" (utils/binutils.ml[254,7056+28]..[254,7056+33])
                    expression (utils/binutils.ml[254,7056+34]..[258,7194+25]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (utils/binutils.ml[254,7056+34]..[254,7056+42])
                        Ppat_var "sectname" (utils/binutils.ml[254,7056+34]..[254,7056+42])
                      expression (utils/binutils.ml[255,7101+4]..[258,7194+25])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (utils/binutils.ml[255,7101+8]..[255,7101+9])
                              Ppat_var "f" (utils/binutils.ml[255,7101+8]..[255,7101+9])
                            expression (utils/binutils.ml[255,7101+10]..[256,7139+47]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (utils/binutils.ml[255,7101+10]..[255,7101+35])
                                Ppat_record Open
                                [
                                  "sh_type" (utils/binutils.ml[255,7101+11]..[255,7101+18]) ghost
                                    pattern (utils/binutils.ml[255,7101+11]..[255,7101+18])
                                      Ppat_var "sh_type" (utils/binutils.ml[255,7101+11]..[255,7101+18])
                                  "sh_name_str" (utils/binutils.ml[255,7101+20]..[255,7101+31]) ghost
                                    pattern (utils/binutils.ml[255,7101+20]..[255,7101+31])
                                      Ppat_var "sh_name_str" (utils/binutils.ml[255,7101+20]..[255,7101+31])
                                ]
                              expression (utils/binutils.ml[256,7139+6]..[256,7139+47])
                                Pexp_apply
                                expression (utils/binutils.ml[256,7139+22]..[256,7139+24])
                                  Pexp_ident "&&" (utils/binutils.ml[256,7139+22]..[256,7139+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[256,7139+6]..[256,7139+21])
                                      Pexp_apply
                                      expression (utils/binutils.ml[256,7139+14]..[256,7139+15])
                                        Pexp_ident "=" (utils/binutils.ml[256,7139+14]..[256,7139+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[256,7139+6]..[256,7139+13])
                                            Pexp_ident "sh_type" (utils/binutils.ml[256,7139+6]..[256,7139+13])
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[256,7139+16]..[256,7139+21])
                                            Pexp_ident "type_" (utils/binutils.ml[256,7139+16]..[256,7139+21])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[256,7139+25]..[256,7139+47])
                                      Pexp_apply
                                      expression (utils/binutils.ml[256,7139+37]..[256,7139+38])
                                        Pexp_ident "=" (utils/binutils.ml[256,7139+37]..[256,7139+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[256,7139+25]..[256,7139+36])
                                            Pexp_ident "sh_name_str" (utils/binutils.ml[256,7139+25]..[256,7139+36])
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[256,7139+39]..[256,7139+47])
                                            Pexp_ident "sectname" (utils/binutils.ml[256,7139+39]..[256,7139+47])
                                      ]
                                ]
                        ]
                        expression (utils/binutils.ml[258,7194+4]..[258,7194+25])
                          Pexp_apply
                          expression (utils/binutils.ml[258,7194+4]..[258,7194+14])
                            Pexp_ident "array_find" (utils/binutils.ml[258,7194+4]..[258,7194+14])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[258,7194+15]..[258,7194+16])
                                Pexp_ident "f" (utils/binutils.ml[258,7194+15]..[258,7194+16])
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[258,7194+17]..[258,7194+25])
                                Pexp_ident "sections" (utils/binutils.ml[258,7194+17]..[258,7194+25])
                          ]
            ]
          structure_item (utils/binutils.ml[260,7221+2]..[283,8215+11])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[260,7221+6]..[260,7221+18])
                  Ppat_var "read_symbols" (utils/binutils.ml[260,7221+6]..[260,7221+18])
                expression (utils/binutils.ml[260,7221+19]..[283,8215+11]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[260,7221+19]..[260,7221+20])
                    Ppat_var "d" (utils/binutils.ml[260,7221+19]..[260,7221+20])
                  expression (utils/binutils.ml[260,7221+21]..[283,8215+11]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[260,7221+21]..[260,7221+29])
                      Ppat_var "sections" (utils/binutils.ml[260,7221+21]..[260,7221+29])
                    expression (utils/binutils.ml[261,7253+4]..[283,8215+11])
                      Pexp_match
                      expression (utils/binutils.ml[261,7253+10]..[261,7253+52])
                        Pexp_apply
                        expression (utils/binutils.ml[261,7253+10]..[261,7253+22])
                          Pexp_ident "find_section" (utils/binutils.ml[261,7253+10]..[261,7253+22])
                        [
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[261,7253+23]..[261,7253+31])
                              Pexp_ident "sections" (utils/binutils.ml[261,7253+23]..[261,7253+31])
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[261,7253+32]..[261,7253+42])
                              Pexp_construct "SHT_DYNSYM" (utils/binutils.ml[261,7253+32]..[261,7253+42])
                              None
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[261,7253+43]..[261,7253+52])
                              Pexp_constant PConst_string(".dynsym",(utils/binutils.ml[261,7253+44]..[261,7253+51]),None)
                        ]
                      [
                        <case>
                          pattern (utils/binutils.ml[262,7311+6]..[262,7311+10])
                            Ppat_construct "None" (utils/binutils.ml[262,7311+6]..[262,7311+10])
                            None
                          expression (utils/binutils.ml[262,7311+14]..[262,7311+19])
                            Pexp_array
                            []
                        <case>
                          pattern (utils/binutils.ml[263,7331+6]..[263,7331+30])
                            Ppat_construct "Some" (utils/binutils.ml[263,7331+6]..[263,7331+10])
                            Some
                              []
                              pattern (utils/binutils.ml[263,7331+11]..[263,7331+30])
                                Ppat_record Open
                                [
                                  "sh_entsize" (utils/binutils.ml[263,7331+12]..[263,7331+22])
                                    pattern (utils/binutils.ml[263,7331+25]..[263,7331+26])
                                      Ppat_constant PConst_int (0,None)
                                ]
                          expression (utils/binutils.ml[264,7365+8]..[264,7365+51])
                            Pexp_apply
                            expression (utils/binutils.ml[264,7365+8]..[264,7365+13])
                              Pexp_ident "raise" (utils/binutils.ml[264,7365+8]..[264,7365+13])
                            [
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[264,7365+14]..[264,7365+51])
                                  Pexp_construct "Error" (utils/binutils.ml[264,7365+15]..[264,7365+20])
                                  Some
                                    expression (utils/binutils.ml[264,7365+21]..[264,7365+50])
                                      Pexp_construct "Out_of_range" (utils/binutils.ml[264,7365+22]..[264,7365+34])
                                      Some
                                        expression (utils/binutils.ml[264,7365+35]..[264,7365+49])
                                          Pexp_constant PConst_string("sh_entsize=0",(utils/binutils.ml[264,7365+36]..[264,7365+48]),None)
                            ]
                        <case>
                          pattern (utils/binutils.ml[265,7417+6]..[265,7417+17])
                            Ppat_construct "Some" (utils/binutils.ml[265,7417+6]..[265,7417+10])
                            Some
                              []
                              pattern (utils/binutils.ml[265,7417+11]..[265,7417+17])
                                Ppat_var "dynsym" (utils/binutils.ml[265,7417+11]..[265,7417+17])
                          expression (utils/binutils.ml[266,7438+8]..[283,8215+11])
                            Pexp_match
                            expression (utils/binutils.ml[266,7438+20]..[266,7438+62])
                              Pexp_apply
                              expression (utils/binutils.ml[266,7438+20]..[266,7438+32])
                                Pexp_ident "find_section" (utils/binutils.ml[266,7438+20]..[266,7438+32])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[266,7438+33]..[266,7438+41])
                                    Pexp_ident "sections" (utils/binutils.ml[266,7438+33]..[266,7438+41])
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[266,7438+42]..[266,7438+52])
                                    Pexp_construct "SHT_STRTAB" (utils/binutils.ml[266,7438+42]..[266,7438+52])
                                    None
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[266,7438+53]..[266,7438+62])
                                    Pexp_constant PConst_string(".dynstr",(utils/binutils.ml[266,7438+54]..[266,7438+61]),None)
                              ]
                            [
                              <case>
                                pattern (utils/binutils.ml[267,7506+10]..[267,7506+14])
                                  Ppat_construct "None" (utils/binutils.ml[267,7506+10]..[267,7506+14])
                                  None
                                expression (utils/binutils.ml[267,7506+18]..[267,7506+23])
                                  Pexp_array
                                  []
                              <case>
                                pattern (utils/binutils.ml[268,7530+10]..[268,7530+21])
                                  Ppat_construct "Some" (utils/binutils.ml[268,7530+10]..[268,7530+14])
                                  Some
                                    []
                                    pattern (utils/binutils.ml[268,7530+15]..[268,7530+21])
                                      Ppat_var "dynstr" (utils/binutils.ml[268,7530+15]..[268,7530+21])
                                expression (utils/binutils.ml[269,7555+12]..[282,8152+62])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (utils/binutils.ml[269,7555+16]..[269,7555+22])
                                        Ppat_var "strtbl" (utils/binutils.ml[269,7555+16]..[269,7555+22])
                                      expression (utils/binutils.ml[269,7555+25]..[269,7555+51])
                                        Pexp_apply
                                        expression (utils/binutils.ml[269,7555+25]..[269,7555+42])
                                          Pexp_ident "load_section_body" (utils/binutils.ml[269,7555+25]..[269,7555+42])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[269,7555+43]..[269,7555+44])
                                              Pexp_ident "d" (utils/binutils.ml[269,7555+43]..[269,7555+44])
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[269,7555+45]..[269,7555+51])
                                              Pexp_ident "dynstr" (utils/binutils.ml[269,7555+45]..[269,7555+51])
                                        ]
                                  ]
                                  expression (utils/binutils.ml[270,7610+12]..[282,8152+62])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (utils/binutils.ml[270,7610+16]..[270,7610+19])
                                          Ppat_var "buf" (utils/binutils.ml[270,7610+16]..[270,7610+19])
                                        expression (utils/binutils.ml[270,7610+22]..[270,7610+48])
                                          Pexp_apply
                                          expression (utils/binutils.ml[270,7610+22]..[270,7610+39])
                                            Pexp_ident "load_section_body" (utils/binutils.ml[270,7610+22]..[270,7610+39])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[270,7610+40]..[270,7610+41])
                                                Pexp_ident "d" (utils/binutils.ml[270,7610+40]..[270,7610+41])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[270,7610+42]..[270,7610+48])
                                                Pexp_ident "dynsym" (utils/binutils.ml[270,7610+42]..[270,7610+48])
                                          ]
                                    ]
                                    expression (utils/binutils.ml[271,7662+12]..[282,8152+62])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (utils/binutils.ml[271,7662+16]..[271,7662+25])
                                            Ppat_var "word_size" (utils/binutils.ml[271,7662+16]..[271,7662+25])
                                          expression (utils/binutils.ml[271,7662+28]..[271,7662+39])
                                            Pexp_apply
                                            expression (utils/binutils.ml[271,7662+28]..[271,7662+37])
                                              Pexp_ident "word_size" (utils/binutils.ml[271,7662+28]..[271,7662+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/binutils.ml[271,7662+38]..[271,7662+39])
                                                  Pexp_ident "d" (utils/binutils.ml[271,7662+38]..[271,7662+39])
                                            ]
                                      ]
                                      expression (utils/binutils.ml[272,7705+12]..[282,8152+62])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (utils/binutils.ml[272,7705+16]..[272,7705+18])
                                              Ppat_var "mk" (utils/binutils.ml[272,7705+16]..[272,7705+18])
                                            expression (utils/binutils.ml[272,7705+19]..[280,8093+43]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (utils/binutils.ml[272,7705+19]..[272,7705+20])
                                                Ppat_var "i" (utils/binutils.ml[272,7705+19]..[272,7705+20])
                                              expression (utils/binutils.ml[273,7728+14]..[280,8093+43])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (utils/binutils.ml[273,7728+18]..[273,7728+22])
                                                      Ppat_var "base" (utils/binutils.ml[273,7728+18]..[273,7728+22])
                                                    expression (utils/binutils.ml[273,7728+25]..[273,7728+46])
                                                      Pexp_apply
                                                      expression (utils/binutils.ml[273,7728+27]..[273,7728+28])
                                                        Pexp_ident "*" (utils/binutils.ml[273,7728+27]..[273,7728+28])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (utils/binutils.ml[273,7728+25]..[273,7728+26])
                                                            Pexp_ident "i" (utils/binutils.ml[273,7728+25]..[273,7728+26])
                                                        <arg>
                                                        Nolabel
                                                          expression (utils/binutils.ml[273,7728+29]..[273,7728+46])
                                                            Pexp_field
                                                            expression (utils/binutils.ml[273,7728+29]..[273,7728+35])
                                                              Pexp_ident "dynsym" (utils/binutils.ml[273,7728+29]..[273,7728+35])
                                                            "sh_entsize" (utils/binutils.ml[273,7728+36]..[273,7728+46])
                                                      ]
                                                ]
                                                expression (utils/binutils.ml[274,7778+14]..[280,8093+43])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (utils/binutils.ml[274,7778+18]..[274,7778+25])
                                                        Ppat_var "st_name" (utils/binutils.ml[274,7778+18]..[274,7778+25])
                                                      expression (utils/binutils.ml[274,7778+28]..[274,7778+74])
                                                        Pexp_apply
                                                        expression (utils/binutils.ml[274,7778+28]..[274,7778+35])
                                                          Pexp_ident "name_at" (utils/binutils.ml[274,7778+28]..[274,7778+35])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[274,7778+36]..[274,7778+42])
                                                              Pexp_ident "strtbl" (utils/binutils.ml[274,7778+36]..[274,7778+42])
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[274,7778+43]..[274,7778+74])
                                                              Pexp_apply
                                                              expression (utils/binutils.ml[274,7778+44]..[274,7778+52])
                                                                Pexp_ident "get_uint" (utils/binutils.ml[274,7778+44]..[274,7778+52])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[274,7778+53]..[274,7778+62])
                                                                    Pexp_constant PConst_string("st_name",(utils/binutils.ml[274,7778+54]..[274,7778+61]),None)
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[274,7778+63]..[274,7778+64])
                                                                    Pexp_ident "d" (utils/binutils.ml[274,7778+63]..[274,7778+64])
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[274,7778+65]..[274,7778+68])
                                                                    Pexp_ident "buf" (utils/binutils.ml[274,7778+65]..[274,7778+68])
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[274,7778+69]..[274,7778+73])
                                                                    Pexp_ident "base" (utils/binutils.ml[274,7778+69]..[274,7778+73])
                                                              ]
                                                        ]
                                                  ]
                                                  expression (utils/binutils.ml[275,7856+14]..[280,8093+43])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (utils/binutils.ml[275,7856+18]..[275,7856+26])
                                                          Ppat_var "st_value" (utils/binutils.ml[275,7856+18]..[275,7856+26])
                                                        expression (utils/binutils.ml[275,7856+29]..[275,7856+70])
                                                          Pexp_apply
                                                          expression (utils/binutils.ml[275,7856+29]..[275,7856+37])
                                                            Pexp_ident "get_word" (utils/binutils.ml[275,7856+29]..[275,7856+37])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[275,7856+38]..[275,7856+39])
                                                                Pexp_ident "d" (utils/binutils.ml[275,7856+38]..[275,7856+39])
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[275,7856+40]..[275,7856+43])
                                                                Pexp_ident "buf" (utils/binutils.ml[275,7856+40]..[275,7856+43])
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[275,7856+44]..[275,7856+70])
                                                                Pexp_apply
                                                                expression (utils/binutils.ml[275,7856+50]..[275,7856+51])
                                                                  Pexp_ident "+" (utils/binutils.ml[275,7856+50]..[275,7856+51])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (utils/binutils.ml[275,7856+45]..[275,7856+49])
                                                                      Pexp_ident "base" (utils/binutils.ml[275,7856+45]..[275,7856+49])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (utils/binutils.ml[275,7856+52]..[275,7856+61])
                                                                      Pexp_ident "word_size" (utils/binutils.ml[275,7856+52]..[275,7856+61])
                                                                ]
                                                          ]
                                                    ]
                                                    expression (utils/binutils.ml[276,7930+14]..[280,8093+43])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (utils/binutils.ml[276,7930+18]..[276,7930+26])
                                                            Ppat_var "st_shndx" (utils/binutils.ml[276,7930+18]..[276,7930+26])
                                                          expression (utils/binutils.ml[277,7959+16]..[278,8030+45])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (utils/binutils.ml[277,7959+20]..[277,7959+23])
                                                                  Ppat_var "off" (utils/binutils.ml[277,7959+20]..[277,7959+23])
                                                                expression (utils/binutils.ml[277,7959+26]..[277,7959+67])
                                                                  Pexp_match
                                                                  expression (utils/binutils.ml[277,7959+32]..[277,7959+41])
                                                                    Pexp_field
                                                                    expression (utils/binutils.ml[277,7959+32]..[277,7959+33])
                                                                      Pexp_ident "d" (utils/binutils.ml[277,7959+32]..[277,7959+33])
                                                                    "bitness" (utils/binutils.ml[277,7959+34]..[277,7959+41])
                                                                  [
                                                                    <case>
                                                                      pattern (utils/binutils.ml[277,7959+47]..[277,7959+50])
Ppat_construct "B64" (utils/binutils.ml[277,7959+47]..[277,7959+50])
None
                                                                      expression (utils/binutils.ml[277,7959+54]..[277,7959+55])
Pexp_constant PConst_int (6,None)
                                                                    <case>
                                                                      pattern (utils/binutils.ml[277,7959+58]..[277,7959+61])
Ppat_construct "B32" (utils/binutils.ml[277,7959+58]..[277,7959+61])
None
                                                                      expression (utils/binutils.ml[277,7959+65]..[277,7959+67])
Pexp_constant PConst_int (14,None)
                                                                  ]
                                                            ]
                                                            expression (utils/binutils.ml[278,8030+16]..[278,8030+45])
                                                              Pexp_apply
                                                              expression (utils/binutils.ml[278,8030+16]..[278,8030+26])
                                                                Pexp_ident "get_uint16" (utils/binutils.ml[278,8030+16]..[278,8030+26])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[278,8030+27]..[278,8030+28])
                                                                    Pexp_ident "d" (utils/binutils.ml[278,8030+27]..[278,8030+28])
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[278,8030+29]..[278,8030+32])
                                                                    Pexp_ident "buf" (utils/binutils.ml[278,8030+29]..[278,8030+32])
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[278,8030+33]..[278,8030+45])
                                                                    Pexp_apply
                                                                    expression (utils/binutils.ml[278,8030+39]..[278,8030+40])
                                                                      Pexp_ident "+" (utils/binutils.ml[278,8030+39]..[278,8030+40])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (utils/binutils.ml[278,8030+34]..[278,8030+38])
  Pexp_ident "base" (utils/binutils.ml[278,8030+34]..[278,8030+38])
                                                                      <arg>
                                                                      Nolabel
expression (utils/binutils.ml[278,8030+41]..[278,8030+44])
  Pexp_ident "off" (utils/binutils.ml[278,8030+41]..[278,8030+44])
                                                                    ]
                                                              ]
                                                      ]
                                                      expression (utils/binutils.ml[280,8093+14]..[280,8093+43])
                                                        Pexp_record
                                                        [
                                                          "st_name" (utils/binutils.ml[280,8093+15]..[280,8093+22]) ghost
                                                            expression (utils/binutils.ml[280,8093+15]..[280,8093+22])
                                                              Pexp_ident "st_name" (utils/binutils.ml[280,8093+15]..[280,8093+22])
                                                          "st_value" (utils/binutils.ml[280,8093+24]..[280,8093+32]) ghost
                                                            expression (utils/binutils.ml[280,8093+24]..[280,8093+32])
                                                              Pexp_ident "st_value" (utils/binutils.ml[280,8093+24]..[280,8093+32])
                                                          "st_shndx" (utils/binutils.ml[280,8093+34]..[280,8093+42]) ghost
                                                            expression (utils/binutils.ml[280,8093+34]..[280,8093+42])
                                                              Pexp_ident "st_shndx" (utils/binutils.ml[280,8093+34]..[280,8093+42])
                                                        ]
                                                        None
                                        ]
                                        expression (utils/binutils.ml[282,8152+12]..[282,8152+62])
                                          Pexp_apply
                                          expression (utils/binutils.ml[282,8152+12]..[282,8152+22])
                                            Pexp_ident "Array.init" (utils/binutils.ml[282,8152+12]..[282,8152+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[282,8152+23]..[282,8152+59])
                                                Pexp_apply
                                                expression (utils/binutils.ml[282,8152+39]..[282,8152+40])
                                                  Pexp_ident "/" (utils/binutils.ml[282,8152+39]..[282,8152+40])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[282,8152+24]..[282,8152+38])
                                                      Pexp_field
                                                      expression (utils/binutils.ml[282,8152+24]..[282,8152+30])
                                                        Pexp_ident "dynsym" (utils/binutils.ml[282,8152+24]..[282,8152+30])
                                                      "sh_size" (utils/binutils.ml[282,8152+31]..[282,8152+38])
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[282,8152+41]..[282,8152+58])
                                                      Pexp_field
                                                      expression (utils/binutils.ml[282,8152+41]..[282,8152+47])
                                                        Pexp_ident "dynsym" (utils/binutils.ml[282,8152+41]..[282,8152+47])
                                                      "sh_entsize" (utils/binutils.ml[282,8152+48]..[282,8152+58])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[282,8152+60]..[282,8152+62])
                                                Pexp_ident "mk" (utils/binutils.ml[282,8152+60]..[282,8152+62])
                                          ]
                            ]
                      ]
            ]
          structure_item (utils/binutils.ml[285,8228+2]..[290,8369+24])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[285,8228+6]..[285,8228+17])
                  Ppat_var "find_symbol" (utils/binutils.ml[285,8228+6]..[285,8228+17])
                expression (utils/binutils.ml[285,8228+18]..[290,8369+24]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[285,8228+18]..[285,8228+25])
                    Ppat_var "symbols" (utils/binutils.ml[285,8228+18]..[285,8228+25])
                  expression (utils/binutils.ml[285,8228+26]..[290,8369+24]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[285,8228+26]..[285,8228+33])
                      Ppat_var "symname" (utils/binutils.ml[285,8228+26]..[285,8228+33])
                    expression (utils/binutils.ml[286,8264+4]..[290,8369+24])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (utils/binutils.ml[286,8264+8]..[286,8264+9])
                            Ppat_var "f" (utils/binutils.ml[286,8264+8]..[286,8264+9])
                          expression (utils/binutils.ml[286,8264+12]..[288,8320+41])
                            Pexp_function
                            [
                              <case>
                                pattern (utils/binutils.ml[287,8285+8]..[287,8285+25])
                                  Ppat_record Open
                                  [
                                    "st_shndx" (utils/binutils.ml[287,8285+9]..[287,8285+17])
                                      pattern (utils/binutils.ml[287,8285+20]..[287,8285+21])
                                        Ppat_constant PConst_int (0,None)
                                  ]
                                expression (utils/binutils.ml[287,8285+29]..[287,8285+34])
                                  Pexp_construct "false" (utils/binutils.ml[287,8285+29]..[287,8285+34])
                                  None
                              <case>
                                pattern (utils/binutils.ml[288,8320+8]..[288,8320+20])
                                  Ppat_record Open
                                  [
                                    "st_name" (utils/binutils.ml[288,8320+9]..[288,8320+16]) ghost
                                      pattern (utils/binutils.ml[288,8320+9]..[288,8320+16])
                                        Ppat_var "st_name" (utils/binutils.ml[288,8320+9]..[288,8320+16])
                                  ]
                                expression (utils/binutils.ml[288,8320+24]..[288,8320+41])
                                  Pexp_apply
                                  expression (utils/binutils.ml[288,8320+32]..[288,8320+33])
                                    Pexp_ident "=" (utils/binutils.ml[288,8320+32]..[288,8320+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[288,8320+24]..[288,8320+31])
                                        Pexp_ident "st_name" (utils/binutils.ml[288,8320+24]..[288,8320+31])
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[288,8320+34]..[288,8320+41])
                                        Pexp_ident "symname" (utils/binutils.ml[288,8320+34]..[288,8320+41])
                                  ]
                            ]
                      ]
                      expression (utils/binutils.ml[290,8369+4]..[290,8369+24])
                        Pexp_apply
                        expression (utils/binutils.ml[290,8369+4]..[290,8369+14])
                          Pexp_ident "array_find" (utils/binutils.ml[290,8369+4]..[290,8369+14])
                        [
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[290,8369+15]..[290,8369+16])
                              Pexp_ident "f" (utils/binutils.ml[290,8369+15]..[290,8369+16])
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[290,8369+17]..[290,8369+24])
                              Pexp_ident "symbols" (utils/binutils.ml[290,8369+17]..[290,8369+24])
                        ]
            ]
          structure_item (utils/binutils.ml[292,8395+2]..[301,8801+65])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[292,8395+6]..[292,8395+19])
                  Ppat_var "symbol_offset" (utils/binutils.ml[292,8395+6]..[292,8395+19])
                expression (utils/binutils.ml[292,8395+20]..[301,8801+65]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[292,8395+20]..[292,8395+28])
                    Ppat_var "sections" (utils/binutils.ml[292,8395+20]..[292,8395+28])
                  expression (utils/binutils.ml[292,8395+29]..[301,8801+65]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[292,8395+29]..[292,8395+36])
                      Ppat_var "symbols" (utils/binutils.ml[292,8395+29]..[292,8395+36])
                    expression (utils/binutils.ml[292,8395+37]..[301,8801+65]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (utils/binutils.ml[292,8395+37]..[292,8395+44])
                        Ppat_var "symname" (utils/binutils.ml[292,8395+37]..[292,8395+44])
                      expression (utils/binutils.ml[293,8442+4]..[301,8801+65])
                        Pexp_match
                        expression (utils/binutils.ml[293,8442+10]..[293,8442+37])
                          Pexp_apply
                          expression (utils/binutils.ml[293,8442+10]..[293,8442+21])
                            Pexp_ident "find_symbol" (utils/binutils.ml[293,8442+10]..[293,8442+21])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[293,8442+22]..[293,8442+29])
                                Pexp_ident "symbols" (utils/binutils.ml[293,8442+22]..[293,8442+29])
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[293,8442+30]..[293,8442+37])
                                Pexp_ident "symname" (utils/binutils.ml[293,8442+30]..[293,8442+37])
                          ]
                        [
                          <case>
                            pattern (utils/binutils.ml[294,8485+6]..[294,8485+10])
                              Ppat_construct "None" (utils/binutils.ml[294,8485+6]..[294,8485+10])
                              None
                            expression (utils/binutils.ml[295,8499+8]..[295,8499+12])
                              Pexp_construct "None" (utils/binutils.ml[295,8499+8]..[295,8499+12])
                              None
                          <case>
                            pattern (utils/binutils.ml[296,8512+6]..[296,8512+34])
                              Ppat_construct "Some" (utils/binutils.ml[296,8512+6]..[296,8512+10])
                              Some
                                []
                                pattern (utils/binutils.ml[296,8512+11]..[296,8512+34])
                                  Ppat_record Open
                                  [
                                    "st_shndx" (utils/binutils.ml[296,8512+12]..[296,8512+20]) ghost
                                      pattern (utils/binutils.ml[296,8512+12]..[296,8512+20])
                                        Ppat_var "st_shndx" (utils/binutils.ml[296,8512+12]..[296,8512+20])
                                    "st_value" (utils/binutils.ml[296,8512+22]..[296,8512+30]) ghost
                                      pattern (utils/binutils.ml[296,8512+22]..[296,8512+30])
                                        Ppat_var "st_value" (utils/binutils.ml[296,8512+22]..[296,8512+30])
                                  ]
                            expression (utils/binutils.ml[300,8747+8]..[301,8801+65])
                              Pexp_construct "Some" (utils/binutils.ml[300,8747+8]..[300,8747+12])
                              Some
                                expression (utils/binutils.ml[300,8747+13]..[301,8801+65])
                                  Pexp_open Fresh
                                  module_expr (utils/binutils.ml[300,8747+13]..[300,8747+18])
                                    Pmod_ident "Int64" (utils/binutils.ml[300,8747+13]..[300,8747+18])
                                  expression (utils/binutils.ml[300,8747+20]..[301,8801+64])
                                    Pexp_apply
                                    expression (utils/binutils.ml[300,8747+20]..[300,8747+23])
                                      Pexp_ident "add" (utils/binutils.ml[300,8747+20]..[300,8747+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[300,8747+24]..[300,8747+53])
                                          Pexp_field
                                          expression (utils/binutils.ml[300,8747+24]..[300,8747+43])
                                            Pexp_apply
                                            expression (utils/binutils.ml[300,8747+24]..[300,8747+43]) ghost
                                              Pexp_ident "Array.get" (utils/binutils.ml[300,8747+24]..[300,8747+43]) ghost
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/binutils.ml[300,8747+24]..[300,8747+32])
                                                  Pexp_ident "sections" (utils/binutils.ml[300,8747+24]..[300,8747+32])
                                              <arg>
                                              Nolabel
                                                expression (utils/binutils.ml[300,8747+34]..[300,8747+42])
                                                  Pexp_ident "st_shndx" (utils/binutils.ml[300,8747+34]..[300,8747+42])
                                            ]
                                          "sh_offset" (utils/binutils.ml[300,8747+44]..[300,8747+53])
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[301,8801+22]..[301,8801+64])
                                          Pexp_apply
                                          expression (utils/binutils.ml[301,8801+23]..[301,8801+26])
                                            Pexp_ident "sub" (utils/binutils.ml[301,8801+23]..[301,8801+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[301,8801+27]..[301,8801+35])
                                                Pexp_ident "st_value" (utils/binutils.ml[301,8801+27]..[301,8801+35])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[301,8801+36]..[301,8801+63])
                                                Pexp_field
                                                expression (utils/binutils.ml[301,8801+36]..[301,8801+55])
                                                  Pexp_apply
                                                  expression (utils/binutils.ml[301,8801+36]..[301,8801+55]) ghost
                                                    Pexp_ident "Array.get" (utils/binutils.ml[301,8801+36]..[301,8801+55]) ghost
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[301,8801+36]..[301,8801+44])
                                                        Pexp_ident "sections" (utils/binutils.ml[301,8801+36]..[301,8801+44])
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[301,8801+46]..[301,8801+54])
                                                        Pexp_ident "st_shndx" (utils/binutils.ml[301,8801+46]..[301,8801+54])
                                                  ]
                                                "sh_addr" (utils/binutils.ml[301,8801+56]..[301,8801+63])
                                          ]
                                    ]
                        ]
            ]
          structure_item (utils/binutils.ml[303,8868+2]..[304,8907+48])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[303,8868+6]..[303,8868+20])
                  Ppat_var "defines_symbol" (utils/binutils.ml[303,8868+6]..[303,8868+20])
                expression (utils/binutils.ml[303,8868+21]..[304,8907+48]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[303,8868+21]..[303,8868+28])
                    Ppat_var "symbols" (utils/binutils.ml[303,8868+21]..[303,8868+28])
                  expression (utils/binutils.ml[303,8868+29]..[304,8907+48]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[303,8868+29]..[303,8868+36])
                      Ppat_var "symname" (utils/binutils.ml[303,8868+29]..[303,8868+36])
                    expression (utils/binutils.ml[304,8907+4]..[304,8907+48])
                      Pexp_apply
                      expression (utils/binutils.ml[304,8907+4]..[304,8907+18])
                        Pexp_ident "Option.is_some" (utils/binutils.ml[304,8907+4]..[304,8907+18])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[304,8907+19]..[304,8907+48])
                            Pexp_apply
                            expression (utils/binutils.ml[304,8907+20]..[304,8907+31])
                              Pexp_ident "find_symbol" (utils/binutils.ml[304,8907+20]..[304,8907+31])
                            [
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[304,8907+32]..[304,8907+39])
                                  Pexp_ident "symbols" (utils/binutils.ml[304,8907+32]..[304,8907+39])
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[304,8907+40]..[304,8907+47])
                                  Pexp_ident "symname" (utils/binutils.ml[304,8907+40]..[304,8907+47])
                            ]
                      ]
            ]
          structure_item (utils/binutils.ml[306,8957+2]..[329,9738+35])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[306,8957+6]..[306,8957+10])
                  Ppat_var "read" (utils/binutils.ml[306,8957+6]..[306,8957+10])
                expression (utils/binutils.ml[306,8957+11]..[329,9738+35]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[306,8957+11]..[306,8957+13])
                    Ppat_var "ic" (utils/binutils.ml[306,8957+11]..[306,8957+13])
                  expression (utils/binutils.ml[307,8973+4]..[329,9738+35])
                    Pexp_sequence
                    expression (utils/binutils.ml[307,8973+4]..[307,8973+16])
                      Pexp_apply
                      expression (utils/binutils.ml[307,8973+4]..[307,8973+11])
                        Pexp_ident "seek_in" (utils/binutils.ml[307,8973+4]..[307,8973+11])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[307,8973+12]..[307,8973+14])
                            Pexp_ident "ic" (utils/binutils.ml[307,8973+12]..[307,8973+14])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[307,8973+15]..[307,8973+16])
                            Pexp_constant PConst_int (0,None)
                      ]
                    expression (utils/binutils.ml[308,8991+4]..[329,9738+35])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (utils/binutils.ml[308,8991+8]..[308,8991+22])
                            Ppat_var "identification" (utils/binutils.ml[308,8991+8]..[308,8991+22])
                          expression (utils/binutils.ml[308,8991+25]..[308,8991+49])
                            Pexp_apply
                            expression (utils/binutils.ml[308,8991+25]..[308,8991+43])
                              Pexp_ident "really_input_bytes" (utils/binutils.ml[308,8991+25]..[308,8991+43])
                            [
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[308,8991+44]..[308,8991+46])
                                  Pexp_ident "ic" (utils/binutils.ml[308,8991+44]..[308,8991+46])
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[308,8991+47]..[308,8991+49])
                                  Pexp_constant PConst_int (16,None)
                            ]
                      ]
                      expression (utils/binutils.ml[309,9044+4]..[329,9738+35])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (utils/binutils.ml[309,9044+8]..[309,9044+15])
                              Ppat_var "bitness" (utils/binutils.ml[309,9044+8]..[309,9044+15])
                            expression (utils/binutils.ml[310,9062+6]..[314,9168+78])
                              Pexp_match
                              expression (utils/binutils.ml[310,9062+12]..[310,9062+38])
                                Pexp_apply
                                expression (utils/binutils.ml[310,9062+12]..[310,9062+21])
                                  Pexp_ident "Bytes.get" (utils/binutils.ml[310,9062+12]..[310,9062+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[310,9062+22]..[310,9062+36])
                                      Pexp_ident "identification" (utils/binutils.ml[310,9062+22]..[310,9062+36])
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[310,9062+37]..[310,9062+38])
                                      Pexp_constant PConst_int (4,None)
                                ]
                              [
                                <case>
                                  pattern (utils/binutils.ml[311,9106+8]..[311,9106+14])
                                    Ppat_constant PConst_char 01
                                  expression (utils/binutils.ml[311,9106+18]..[311,9106+21])
                                    Pexp_construct "B32" (utils/binutils.ml[311,9106+18]..[311,9106+21])
                                    None
                                <case>
                                  pattern (utils/binutils.ml[312,9128+8]..[312,9128+14])
                                    Ppat_constant PConst_char 02
                                  expression (utils/binutils.ml[312,9128+18]..[312,9128+21])
                                    Pexp_construct "B64" (utils/binutils.ml[312,9128+18]..[312,9128+21])
                                    None
                                <case>
                                  pattern (utils/binutils.ml[313,9150+8]..[313,9150+14])
                                    Ppat_alias "c" (utils/binutils.ml[313,9150+13]..[313,9150+14])
                                    pattern (utils/binutils.ml[313,9150+8]..[313,9150+9])
                                      Ppat_any
                                  expression (utils/binutils.ml[314,9168+10]..[314,9168+78])
                                    Pexp_apply
                                    expression (utils/binutils.ml[314,9168+10]..[314,9168+15])
                                      Pexp_ident "raise" (utils/binutils.ml[314,9168+10]..[314,9168+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[314,9168+16]..[314,9168+78])
                                          Pexp_construct "Error" (utils/binutils.ml[314,9168+17]..[314,9168+22])
                                          Some
                                            expression (utils/binutils.ml[314,9168+23]..[314,9168+77])
                                              Pexp_construct "Unsupported" (utils/binutils.ml[314,9168+24]..[314,9168+35])
                                              Some
                                                expression (utils/binutils.ml[314,9168+36]..[314,9168+76])
                                                  Pexp_tuple
                                                  [
                                                    expression (utils/binutils.ml[314,9168+37]..[314,9168+47])
                                                      Pexp_constant PConst_string("ELFCLASS",(utils/binutils.ml[314,9168+38]..[314,9168+46]),None)
                                                    expression (utils/binutils.ml[314,9168+49]..[314,9168+75])
                                                      Pexp_apply
                                                      expression (utils/binutils.ml[314,9168+49]..[314,9168+61])
                                                        Pexp_ident "Int64.of_int" (utils/binutils.ml[314,9168+49]..[314,9168+61])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (utils/binutils.ml[314,9168+62]..[314,9168+75])
                                                            Pexp_apply
                                                            expression (utils/binutils.ml[314,9168+63]..[314,9168+72])
                                                              Pexp_ident "Char.code" (utils/binutils.ml[314,9168+63]..[314,9168+72])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (utils/binutils.ml[314,9168+73]..[314,9168+74])
                                                                  Pexp_ident "c" (utils/binutils.ml[314,9168+73]..[314,9168+74])
                                                            ]
                                                      ]
                                                  ]
                                    ]
                              ]
                        ]
                        expression (utils/binutils.ml[316,9254+4]..[329,9738+35])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (utils/binutils.ml[316,9254+8]..[316,9254+18])
                                Ppat_var "endianness" (utils/binutils.ml[316,9254+8]..[316,9254+18])
                              expression (utils/binutils.ml[317,9275+6]..[321,9379+77])
                                Pexp_match
                                expression (utils/binutils.ml[317,9275+12]..[317,9275+38])
                                  Pexp_apply
                                  expression (utils/binutils.ml[317,9275+12]..[317,9275+21])
                                    Pexp_ident "Bytes.get" (utils/binutils.ml[317,9275+12]..[317,9275+21])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[317,9275+22]..[317,9275+36])
                                        Pexp_ident "identification" (utils/binutils.ml[317,9275+22]..[317,9275+36])
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[317,9275+37]..[317,9275+38])
                                        Pexp_constant PConst_int (5,None)
                                  ]
                                [
                                  <case>
                                    pattern (utils/binutils.ml[318,9319+8]..[318,9319+14])
                                      Ppat_constant PConst_char 01
                                    expression (utils/binutils.ml[318,9319+18]..[318,9319+20])
                                      Pexp_construct "LE" (utils/binutils.ml[318,9319+18]..[318,9319+20])
                                      None
                                  <case>
                                    pattern (utils/binutils.ml[319,9340+8]..[319,9340+14])
                                      Ppat_constant PConst_char 02
                                    expression (utils/binutils.ml[319,9340+18]..[319,9340+20])
                                      Pexp_construct "BE" (utils/binutils.ml[319,9340+18]..[319,9340+20])
                                      None
                                  <case>
                                    pattern (utils/binutils.ml[320,9361+8]..[320,9361+14])
                                      Ppat_alias "c" (utils/binutils.ml[320,9361+13]..[320,9361+14])
                                      pattern (utils/binutils.ml[320,9361+8]..[320,9361+9])
                                        Ppat_any
                                    expression (utils/binutils.ml[321,9379+10]..[321,9379+77])
                                      Pexp_apply
                                      expression (utils/binutils.ml[321,9379+10]..[321,9379+15])
                                        Pexp_ident "raise" (utils/binutils.ml[321,9379+10]..[321,9379+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[321,9379+16]..[321,9379+77])
                                            Pexp_construct "Error" (utils/binutils.ml[321,9379+17]..[321,9379+22])
                                            Some
                                              expression (utils/binutils.ml[321,9379+23]..[321,9379+76])
                                                Pexp_construct "Unsupported" (utils/binutils.ml[321,9379+24]..[321,9379+35])
                                                Some
                                                  expression (utils/binutils.ml[321,9379+36]..[321,9379+75])
                                                    Pexp_tuple
                                                    [
                                                      expression (utils/binutils.ml[321,9379+37]..[321,9379+46])
                                                        Pexp_constant PConst_string("ELFDATA",(utils/binutils.ml[321,9379+38]..[321,9379+45]),None)
                                                      expression (utils/binutils.ml[321,9379+48]..[321,9379+74])
                                                        Pexp_apply
                                                        expression (utils/binutils.ml[321,9379+48]..[321,9379+60])
                                                          Pexp_ident "Int64.of_int" (utils/binutils.ml[321,9379+48]..[321,9379+60])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[321,9379+61]..[321,9379+74])
                                                              Pexp_apply
                                                              expression (utils/binutils.ml[321,9379+62]..[321,9379+71])
                                                                Pexp_ident "Char.code" (utils/binutils.ml[321,9379+62]..[321,9379+71])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[321,9379+72]..[321,9379+73])
                                                                    Pexp_ident "c" (utils/binutils.ml[321,9379+72]..[321,9379+73])
                                                              ]
                                                        ]
                                                    ]
                                      ]
                                ]
                          ]
                          expression (utils/binutils.ml[323,9464+4]..[329,9738+35])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (utils/binutils.ml[323,9464+8]..[323,9464+9])
                                  Ppat_var "d" (utils/binutils.ml[323,9464+8]..[323,9464+9])
                                expression (utils/binutils.ml[323,9464+12]..[323,9464+37])
                                  Pexp_record
                                  [
                                    "ic" (utils/binutils.ml[323,9464+13]..[323,9464+15]) ghost
                                      expression (utils/binutils.ml[323,9464+13]..[323,9464+15])
                                        Pexp_ident "ic" (utils/binutils.ml[323,9464+13]..[323,9464+15])
                                    "bitness" (utils/binutils.ml[323,9464+17]..[323,9464+24]) ghost
                                      expression (utils/binutils.ml[323,9464+17]..[323,9464+24])
                                        Pexp_ident "bitness" (utils/binutils.ml[323,9464+17]..[323,9464+24])
                                    "endianness" (utils/binutils.ml[323,9464+26]..[323,9464+36]) ghost
                                      expression (utils/binutils.ml[323,9464+26]..[323,9464+36])
                                        Pexp_ident "endianness" (utils/binutils.ml[323,9464+26]..[323,9464+36])
                                  ]
                                  None
                            ]
                            expression (utils/binutils.ml[324,9505+4]..[329,9738+35])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (utils/binutils.ml[324,9505+8]..[324,9505+14])
                                    Ppat_var "header" (utils/binutils.ml[324,9505+8]..[324,9505+14])
                                  expression (utils/binutils.ml[324,9505+17]..[324,9505+30])
                                    Pexp_apply
                                    expression (utils/binutils.ml[324,9505+17]..[324,9505+28])
                                      Pexp_ident "read_header" (utils/binutils.ml[324,9505+17]..[324,9505+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[324,9505+29]..[324,9505+30])
                                          Pexp_ident "d" (utils/binutils.ml[324,9505+29]..[324,9505+30])
                                    ]
                              ]
                              expression (utils/binutils.ml[325,9539+4]..[329,9738+35])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (utils/binutils.ml[325,9539+8]..[325,9539+16])
                                      Ppat_var "sections" (utils/binutils.ml[325,9539+8]..[325,9539+16])
                                    expression (utils/binutils.ml[325,9539+19]..[325,9539+41])
                                      Pexp_apply
                                      expression (utils/binutils.ml[325,9539+19]..[325,9539+32])
                                        Pexp_ident "read_sections" (utils/binutils.ml[325,9539+19]..[325,9539+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[325,9539+33]..[325,9539+34])
                                            Pexp_ident "d" (utils/binutils.ml[325,9539+33]..[325,9539+34])
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[325,9539+35]..[325,9539+41])
                                            Pexp_ident "header" (utils/binutils.ml[325,9539+35]..[325,9539+41])
                                      ]
                                ]
                                expression (utils/binutils.ml[326,9584+4]..[329,9738+35])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (utils/binutils.ml[326,9584+8]..[326,9584+15])
                                        Ppat_var "symbols" (utils/binutils.ml[326,9584+8]..[326,9584+15])
                                      expression (utils/binutils.ml[326,9584+18]..[326,9584+41])
                                        Pexp_apply
                                        expression (utils/binutils.ml[326,9584+18]..[326,9584+30])
                                          Pexp_ident "read_symbols" (utils/binutils.ml[326,9584+18]..[326,9584+30])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[326,9584+31]..[326,9584+32])
                                              Pexp_ident "d" (utils/binutils.ml[326,9584+31]..[326,9584+32])
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[326,9584+33]..[326,9584+41])
                                              Pexp_ident "sections" (utils/binutils.ml[326,9584+33]..[326,9584+41])
                                        ]
                                  ]
                                  expression (utils/binutils.ml[327,9629+4]..[329,9738+35])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (utils/binutils.ml[327,9629+8]..[327,9629+21])
                                          Ppat_var "symbol_offset" (utils/binutils.ml[327,9629+8]..[327,9629+21])
                                        expression (utils/binutils.ml[327,9629+24]..[327,9629+54])
                                          Pexp_apply
                                          expression (utils/binutils.ml[327,9629+24]..[327,9629+37])
                                            Pexp_ident "symbol_offset" (utils/binutils.ml[327,9629+24]..[327,9629+37])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[327,9629+38]..[327,9629+46])
                                                Pexp_ident "sections" (utils/binutils.ml[327,9629+38]..[327,9629+46])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[327,9629+47]..[327,9629+54])
                                                Pexp_ident "symbols" (utils/binutils.ml[327,9629+47]..[327,9629+54])
                                          ]
                                    ]
                                    expression (utils/binutils.ml[328,9687+4]..[329,9738+35])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (utils/binutils.ml[328,9687+8]..[328,9687+22])
                                            Ppat_var "defines_symbol" (utils/binutils.ml[328,9687+8]..[328,9687+22])
                                          expression (utils/binutils.ml[328,9687+25]..[328,9687+47])
                                            Pexp_apply
                                            expression (utils/binutils.ml[328,9687+25]..[328,9687+39])
                                              Pexp_ident "defines_symbol" (utils/binutils.ml[328,9687+25]..[328,9687+39])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/binutils.ml[328,9687+40]..[328,9687+47])
                                                  Pexp_ident "symbols" (utils/binutils.ml[328,9687+40]..[328,9687+47])
                                            ]
                                      ]
                                      expression (utils/binutils.ml[329,9738+4]..[329,9738+35])
                                        Pexp_record
                                        [
                                          "symbol_offset" (utils/binutils.ml[329,9738+5]..[329,9738+18]) ghost
                                            expression (utils/binutils.ml[329,9738+5]..[329,9738+18])
                                              Pexp_ident "symbol_offset" (utils/binutils.ml[329,9738+5]..[329,9738+18])
                                          "defines_symbol" (utils/binutils.ml[329,9738+20]..[329,9738+34]) ghost
                                            expression (utils/binutils.ml[329,9738+20]..[329,9738+34])
                                              Pexp_ident "defines_symbol" (utils/binutils.ml[329,9738+20]..[329,9738+34])
                                        ]
                                        None
            ]
        ]
  structure_item (utils/binutils.ml[332,9779+0]..[478,13845+3])
    Pstr_module
    "Mach_O" (utils/binutils.ml[332,9779+7]..[332,9779+13])
      module_expr (utils/binutils.ml[332,9779+16]..[478,13845+3])
        Pmod_structure
        [
          structure_item (utils/binutils.ml[337,9895+2]..[337,9895+18])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[337,9895+6]..[337,9895+14])
                  Ppat_var "size_int" (utils/binutils.ml[337,9895+6]..[337,9895+14])
                expression (utils/binutils.ml[337,9895+17]..[337,9895+18])
                  Pexp_constant PConst_int (4,None)
            ]
          structure_item (utils/binutils.ml[339,9915+2]..[340,9948+63])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[339,9915+6]..[339,9915+17])
                  Ppat_var "header_size" (utils/binutils.ml[339,9915+6]..[339,9915+17])
                expression (utils/binutils.ml[339,9915+18]..[340,9948+63]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[339,9915+18]..[339,9915+30])
                    Ppat_record Open
                    [
                      "bitness" (utils/binutils.ml[339,9915+19]..[339,9915+26]) ghost
                        pattern (utils/binutils.ml[339,9915+19]..[339,9915+26])
                          Ppat_var "bitness" (utils/binutils.ml[339,9915+19]..[339,9915+26])
                    ]
                  expression (utils/binutils.ml[340,9948+4]..[340,9948+63])
                    Pexp_apply
                    expression (utils/binutils.ml[340,9948+49]..[340,9948+50])
                      Pexp_ident "+" (utils/binutils.ml[340,9948+49]..[340,9948+50])
                    [
                      <arg>
                      Nolabel
                        expression (utils/binutils.ml[340,9948+4]..[340,9948+48])
                          Pexp_apply
                          expression (utils/binutils.ml[340,9948+45]..[340,9948+46])
                            Pexp_ident "*" (utils/binutils.ml[340,9948+45]..[340,9948+46])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[340,9948+4]..[340,9948+44])
                                Pexp_match
                                expression (utils/binutils.ml[340,9948+11]..[340,9948+18])
                                  Pexp_ident "bitness" (utils/binutils.ml[340,9948+11]..[340,9948+18])
                                [
                                  <case>
                                    pattern (utils/binutils.ml[340,9948+24]..[340,9948+27])
                                      Ppat_construct "B64" (utils/binutils.ml[340,9948+24]..[340,9948+27])
                                      None
                                    expression (utils/binutils.ml[340,9948+31]..[340,9948+32])
                                      Pexp_constant PConst_int (6,None)
                                  <case>
                                    pattern (utils/binutils.ml[340,9948+35]..[340,9948+38])
                                      Ppat_construct "B32" (utils/binutils.ml[340,9948+35]..[340,9948+38])
                                      None
                                    expression (utils/binutils.ml[340,9948+42]..[340,9948+43])
                                      Pexp_constant PConst_int (5,None)
                                ]
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[340,9948+47]..[340,9948+48])
                                Pexp_constant PConst_int (4,None)
                          ]
                      <arg>
                      Nolabel
                        expression (utils/binutils.ml[340,9948+51]..[340,9948+63])
                          Pexp_apply
                          expression (utils/binutils.ml[340,9948+53]..[340,9948+54])
                            Pexp_ident "*" (utils/binutils.ml[340,9948+53]..[340,9948+54])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[340,9948+51]..[340,9948+52])
                                Pexp_constant PConst_int (2,None)
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[340,9948+55]..[340,9948+63])
                                Pexp_ident "size_int" (utils/binutils.ml[340,9948+55]..[340,9948+63])
                          ]
                    ]
            ]
          structure_item (utils/binutils.ml[342,10013+2]..[346,10076+5])
            Pstr_type Rec
            [
              type_declaration "header" (utils/binutils.ml[342,10013+7]..[342,10013+13]) (utils/binutils.ml[342,10013+2]..[346,10076+5])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (utils/binutils.ml[344,10035+6]..[344,10035+17])
                        Immutable
                        "ncmds" (utils/binutils.ml[344,10035+6]..[344,10035+11])                        core_type (utils/binutils.ml[344,10035+13]..[344,10035+16])
                          Ptyp_constr "int" (utils/binutils.ml[344,10035+13]..[344,10035+16])
                          []
                      (utils/binutils.ml[345,10053+6]..[345,10053+22])
                        Immutable
                        "sizeofcmds" (utils/binutils.ml[345,10053+6]..[345,10053+16])                        core_type (utils/binutils.ml[345,10053+18]..[345,10053+21])
                          Ptyp_constr "int" (utils/binutils.ml[345,10053+18]..[345,10053+21])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (utils/binutils.ml[348,10083+2]..[352,10287+23])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[348,10083+6]..[348,10083+17])
                  Ppat_var "read_header" (utils/binutils.ml[348,10083+6]..[348,10083+17])
                expression (utils/binutils.ml[348,10083+18]..[352,10287+23]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[348,10083+18]..[348,10083+19])
                    Ppat_var "d" (utils/binutils.ml[348,10083+18]..[348,10083+19])
                  expression (utils/binutils.ml[349,10105+4]..[352,10287+23])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (utils/binutils.ml[349,10105+8]..[349,10105+11])
                          Ppat_var "buf" (utils/binutils.ml[349,10105+8]..[349,10105+11])
                        expression (utils/binutils.ml[349,10105+14]..[349,10105+45])
                          Pexp_apply
                          expression (utils/binutils.ml[349,10105+14]..[349,10105+24])
                            Pexp_ident "load_bytes" (utils/binutils.ml[349,10105+14]..[349,10105+24])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[349,10105+25]..[349,10105+26])
                                Pexp_ident "d" (utils/binutils.ml[349,10105+25]..[349,10105+26])
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[349,10105+27]..[349,10105+29])
                                Pexp_constant PConst_int (0,Some L)
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[349,10105+30]..[349,10105+45])
                                Pexp_apply
                                expression (utils/binutils.ml[349,10105+31]..[349,10105+42])
                                  Pexp_ident "header_size" (utils/binutils.ml[349,10105+31]..[349,10105+42])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[349,10105+43]..[349,10105+44])
                                      Pexp_ident "d" (utils/binutils.ml[349,10105+43]..[349,10105+44])
                                ]
                          ]
                    ]
                    expression (utils/binutils.ml[350,10154+4]..[352,10287+23])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (utils/binutils.ml[350,10154+8]..[350,10154+13])
                            Ppat_var "ncmds" (utils/binutils.ml[350,10154+8]..[350,10154+13])
                          expression (utils/binutils.ml[350,10154+16]..[350,10154+57])
                            Pexp_apply
                            expression (utils/binutils.ml[350,10154+16]..[350,10154+24])
                              Pexp_ident "get_uint" (utils/binutils.ml[350,10154+16]..[350,10154+24])
                            [
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[350,10154+25]..[350,10154+32])
                                  Pexp_constant PConst_string("ncmds",(utils/binutils.ml[350,10154+26]..[350,10154+31]),None)
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[350,10154+33]..[350,10154+34])
                                  Pexp_ident "d" (utils/binutils.ml[350,10154+33]..[350,10154+34])
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[350,10154+35]..[350,10154+38])
                                  Pexp_ident "buf" (utils/binutils.ml[350,10154+35]..[350,10154+38])
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[350,10154+39]..[350,10154+57])
                                  Pexp_apply
                                  expression (utils/binutils.ml[350,10154+42]..[350,10154+43])
                                    Pexp_ident "+" (utils/binutils.ml[350,10154+42]..[350,10154+43])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[350,10154+40]..[350,10154+41])
                                        Pexp_constant PConst_int (8,None)
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[350,10154+44]..[350,10154+56])
                                        Pexp_apply
                                        expression (utils/binutils.ml[350,10154+46]..[350,10154+47])
                                          Pexp_ident "*" (utils/binutils.ml[350,10154+46]..[350,10154+47])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[350,10154+44]..[350,10154+45])
                                              Pexp_constant PConst_int (2,None)
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[350,10154+48]..[350,10154+56])
                                              Pexp_ident "size_int" (utils/binutils.ml[350,10154+48]..[350,10154+56])
                                        ]
                                  ]
                            ]
                      ]
                      expression (utils/binutils.ml[351,10215+4]..[352,10287+23])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (utils/binutils.ml[351,10215+8]..[351,10215+18])
                              Ppat_var "sizeofcmds" (utils/binutils.ml[351,10215+8]..[351,10215+18])
                            expression (utils/binutils.ml[351,10215+21]..[351,10215+68])
                              Pexp_apply
                              expression (utils/binutils.ml[351,10215+21]..[351,10215+29])
                                Pexp_ident "get_uint" (utils/binutils.ml[351,10215+21]..[351,10215+29])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[351,10215+30]..[351,10215+42])
                                    Pexp_constant PConst_string("sizeofcmds",(utils/binutils.ml[351,10215+31]..[351,10215+41]),None)
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[351,10215+43]..[351,10215+44])
                                    Pexp_ident "d" (utils/binutils.ml[351,10215+43]..[351,10215+44])
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[351,10215+45]..[351,10215+48])
                                    Pexp_ident "buf" (utils/binutils.ml[351,10215+45]..[351,10215+48])
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[351,10215+49]..[351,10215+68])
                                    Pexp_apply
                                    expression (utils/binutils.ml[351,10215+53]..[351,10215+54])
                                      Pexp_ident "+" (utils/binutils.ml[351,10215+53]..[351,10215+54])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[351,10215+50]..[351,10215+52])
                                          Pexp_constant PConst_int (12,None)
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[351,10215+55]..[351,10215+67])
                                          Pexp_apply
                                          expression (utils/binutils.ml[351,10215+57]..[351,10215+58])
                                            Pexp_ident "*" (utils/binutils.ml[351,10215+57]..[351,10215+58])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[351,10215+55]..[351,10215+56])
                                                Pexp_constant PConst_int (2,None)
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[351,10215+59]..[351,10215+67])
                                                Pexp_ident "size_int" (utils/binutils.ml[351,10215+59]..[351,10215+67])
                                          ]
                                    ]
                              ]
                        ]
                        expression (utils/binutils.ml[352,10287+4]..[352,10287+23])
                          Pexp_record
                          [
                            "ncmds" (utils/binutils.ml[352,10287+5]..[352,10287+10]) ghost
                              expression (utils/binutils.ml[352,10287+5]..[352,10287+10])
                                Pexp_ident "ncmds" (utils/binutils.ml[352,10287+5]..[352,10287+10])
                            "sizeofcmds" (utils/binutils.ml[352,10287+12]..[352,10287+22]) ghost
                              expression (utils/binutils.ml[352,10287+12]..[352,10287+22])
                                Pexp_ident "sizeofcmds" (utils/binutils.ml[352,10287+12]..[352,10287+22])
                          ]
                          None
            ]
          structure_item (utils/binutils.ml[354,10312+2]..[360,10417+5])
            Pstr_type Rec
            [
              type_declaration "lc_symtab" (utils/binutils.ml[354,10312+7]..[354,10312+16]) (utils/binutils.ml[354,10312+2]..[360,10417+5])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (utils/binutils.ml[356,10337+6]..[356,10337+20])
                        Immutable
                        "symoff" (utils/binutils.ml[356,10337+6]..[356,10337+12])                        core_type (utils/binutils.ml[356,10337+14]..[356,10337+19])
                          Ptyp_constr "int32" (utils/binutils.ml[356,10337+14]..[356,10337+19])
                          []
                      (utils/binutils.ml[357,10358+6]..[357,10358+17])
                        Immutable
                        "nsyms" (utils/binutils.ml[357,10358+6]..[357,10358+11])                        core_type (utils/binutils.ml[357,10358+13]..[357,10358+16])
                          Ptyp_constr "int" (utils/binutils.ml[357,10358+13]..[357,10358+16])
                          []
                      (utils/binutils.ml[358,10376+6]..[358,10376+20])
                        Immutable
                        "stroff" (utils/binutils.ml[358,10376+6]..[358,10376+12])                        core_type (utils/binutils.ml[358,10376+14]..[358,10376+19])
                          Ptyp_constr "int32" (utils/binutils.ml[358,10376+14]..[358,10376+19])
                          []
                      (utils/binutils.ml[359,10397+6]..[359,10397+19])
                        Immutable
                        "strsize" (utils/binutils.ml[359,10397+6]..[359,10397+13])                        core_type (utils/binutils.ml[359,10397+15]..[359,10397+18])
                          Ptyp_constr "int" (utils/binutils.ml[359,10397+15]..[359,10397+18])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (utils/binutils.ml[362,10424+2]..[364,10475+11])
            Pstr_type Rec
            [
              type_declaration "load_command" (utils/binutils.ml[362,10424+7]..[362,10424+19]) (utils/binutils.ml[362,10424+2]..[364,10475+11])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (utils/binutils.ml[363,10446+4]..[363,10446+28])
                        "LC_SYMTAB" (utils/binutils.ml[363,10446+6]..[363,10446+15])
                        [
                          core_type (utils/binutils.ml[363,10446+19]..[363,10446+28])
                            Ptyp_constr "lc_symtab" (utils/binutils.ml[363,10446+19]..[363,10446+28])
                            []
                        ]
                        None
                      (utils/binutils.ml[364,10475+4]..[364,10475+11])
                        "OTHER" (utils/binutils.ml[364,10475+6]..[364,10475+11])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (utils/binutils.ml[366,10488+2]..[386,11201+23])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[366,10488+6]..[366,10488+24])
                  Ppat_var "read_load_commands" (utils/binutils.ml[366,10488+6]..[366,10488+24])
                expression (utils/binutils.ml[366,10488+25]..[386,11201+23]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[366,10488+25]..[366,10488+26])
                    Ppat_var "d" (utils/binutils.ml[366,10488+25]..[366,10488+26])
                  expression (utils/binutils.ml[366,10488+27]..[386,11201+23]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[366,10488+27]..[366,10488+46])
                      Ppat_record Closed
                      [
                        "ncmds" (utils/binutils.ml[366,10488+28]..[366,10488+33]) ghost
                          pattern (utils/binutils.ml[366,10488+28]..[366,10488+33])
                            Ppat_var "ncmds" (utils/binutils.ml[366,10488+28]..[366,10488+33])
                        "sizeofcmds" (utils/binutils.ml[366,10488+35]..[366,10488+45]) ghost
                          pattern (utils/binutils.ml[366,10488+35]..[366,10488+45])
                            Ppat_var "sizeofcmds" (utils/binutils.ml[366,10488+35]..[366,10488+45])
                      ]
                    expression (utils/binutils.ml[367,10537+4]..[386,11201+23])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (utils/binutils.ml[367,10537+8]..[367,10537+11])
                            Ppat_var "buf" (utils/binutils.ml[367,10537+8]..[367,10537+11])
                          expression (utils/binutils.ml[367,10537+14]..[367,10537+68])
                            Pexp_apply
                            expression (utils/binutils.ml[367,10537+14]..[367,10537+24])
                              Pexp_ident "load_bytes" (utils/binutils.ml[367,10537+14]..[367,10537+24])
                            [
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[367,10537+25]..[367,10537+26])
                                  Pexp_ident "d" (utils/binutils.ml[367,10537+25]..[367,10537+26])
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[367,10537+27]..[367,10537+57])
                                  Pexp_apply
                                  expression (utils/binutils.ml[367,10537+28]..[367,10537+40])
                                    Pexp_ident "Int64.of_int" (utils/binutils.ml[367,10537+28]..[367,10537+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[367,10537+41]..[367,10537+56])
                                        Pexp_apply
                                        expression (utils/binutils.ml[367,10537+42]..[367,10537+53])
                                          Pexp_ident "header_size" (utils/binutils.ml[367,10537+42]..[367,10537+53])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[367,10537+54]..[367,10537+55])
                                              Pexp_ident "d" (utils/binutils.ml[367,10537+54]..[367,10537+55])
                                        ]
                                  ]
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[367,10537+58]..[367,10537+68])
                                  Pexp_ident "sizeofcmds" (utils/binutils.ml[367,10537+58]..[367,10537+68])
                            ]
                      ]
                      expression (utils/binutils.ml[368,10609+4]..[386,11201+23])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (utils/binutils.ml[368,10609+8]..[368,10609+12])
                              Ppat_var "base" (utils/binutils.ml[368,10609+8]..[368,10609+12])
                            expression (utils/binutils.ml[368,10609+15]..[368,10609+20])
                              Pexp_apply
                              expression (utils/binutils.ml[368,10609+15]..[368,10609+18])
                                Pexp_ident "ref" (utils/binutils.ml[368,10609+15]..[368,10609+18])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[368,10609+19]..[368,10609+20])
                                    Pexp_constant PConst_int (0,None)
                              ]
                        ]
                        expression (utils/binutils.ml[369,10633+4]..[386,11201+23])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (utils/binutils.ml[369,10633+8]..[369,10633+10])
                                Ppat_var "mk" (utils/binutils.ml[369,10633+8]..[369,10633+10])
                              expression (utils/binutils.ml[369,10633+11]..[384,11185+8]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (utils/binutils.ml[369,10633+11]..[369,10633+12])
                                  Ppat_any
                                expression (utils/binutils.ml[370,10648+6]..[384,11185+8])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (utils/binutils.ml[370,10648+10]..[370,10648+13])
                                        Ppat_var "cmd" (utils/binutils.ml[370,10648+10]..[370,10648+13])
                                      expression (utils/binutils.ml[370,10648+16]..[370,10648+44])
                                        Pexp_apply
                                        expression (utils/binutils.ml[370,10648+16]..[370,10648+26])
                                          Pexp_ident "get_uint32" (utils/binutils.ml[370,10648+16]..[370,10648+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[370,10648+27]..[370,10648+28])
                                              Pexp_ident "d" (utils/binutils.ml[370,10648+27]..[370,10648+28])
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[370,10648+29]..[370,10648+32])
                                              Pexp_ident "buf" (utils/binutils.ml[370,10648+29]..[370,10648+32])
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[370,10648+33]..[370,10648+44])
                                              Pexp_apply
                                              expression (utils/binutils.ml[370,10648+40]..[370,10648+41])
                                                Pexp_ident "+" (utils/binutils.ml[370,10648+40]..[370,10648+41])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[370,10648+34]..[370,10648+39])
                                                    Pexp_apply
                                                    expression (utils/binutils.ml[370,10648+34]..[370,10648+35])
                                                      Pexp_ident "!" (utils/binutils.ml[370,10648+34]..[370,10648+35])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[370,10648+35]..[370,10648+39])
                                                          Pexp_ident "base" (utils/binutils.ml[370,10648+35]..[370,10648+39])
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[370,10648+42]..[370,10648+43])
                                                    Pexp_constant PConst_int (0,None)
                                              ]
                                        ]
                                  ]
                                  expression (utils/binutils.ml[371,10696+6]..[384,11185+8])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (utils/binutils.ml[371,10696+10]..[371,10696+17])
                                          Ppat_var "cmdsize" (utils/binutils.ml[371,10696+10]..[371,10696+17])
                                        expression (utils/binutils.ml[371,10696+20]..[371,10696+56])
                                          Pexp_apply
                                          expression (utils/binutils.ml[371,10696+20]..[371,10696+28])
                                            Pexp_ident "get_uint" (utils/binutils.ml[371,10696+20]..[371,10696+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[371,10696+29]..[371,10696+38])
                                                Pexp_constant PConst_string("cmdsize",(utils/binutils.ml[371,10696+30]..[371,10696+37]),None)
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[371,10696+39]..[371,10696+40])
                                                Pexp_ident "d" (utils/binutils.ml[371,10696+39]..[371,10696+40])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[371,10696+41]..[371,10696+44])
                                                Pexp_ident "buf" (utils/binutils.ml[371,10696+41]..[371,10696+44])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[371,10696+45]..[371,10696+56])
                                                Pexp_apply
                                                expression (utils/binutils.ml[371,10696+52]..[371,10696+53])
                                                  Pexp_ident "+" (utils/binutils.ml[371,10696+52]..[371,10696+53])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[371,10696+46]..[371,10696+51])
                                                      Pexp_apply
                                                      expression (utils/binutils.ml[371,10696+46]..[371,10696+47])
                                                        Pexp_ident "!" (utils/binutils.ml[371,10696+46]..[371,10696+47])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (utils/binutils.ml[371,10696+47]..[371,10696+51])
                                                            Pexp_ident "base" (utils/binutils.ml[371,10696+47]..[371,10696+51])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[371,10696+54]..[371,10696+55])
                                                      Pexp_constant PConst_int (4,None)
                                                ]
                                          ]
                                    ]
                                    expression (utils/binutils.ml[372,10756+6]..[384,11185+8])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (utils/binutils.ml[372,10756+10]..[372,10756+12])
                                            Ppat_var "lc" (utils/binutils.ml[372,10756+10]..[372,10756+12])
                                          expression (utils/binutils.ml[373,10771+8]..[381,11127+17])
                                            Pexp_match
                                            expression (utils/binutils.ml[373,10771+14]..[373,10771+17])
                                              Pexp_ident "cmd" (utils/binutils.ml[373,10771+14]..[373,10771+17])
                                            [
                                              <case>
                                                pattern (utils/binutils.ml[374,10794+10]..[374,10794+14])
                                                  Ppat_constant PConst_int (0x2,Some l)
                                                expression (utils/binutils.ml[375,10812+12]..[379,11057+54])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (utils/binutils.ml[375,10812+16]..[375,10812+22])
                                                        Ppat_var "symoff" (utils/binutils.ml[375,10812+16]..[375,10812+22])
                                                      expression (utils/binutils.ml[375,10812+25]..[375,10812+53])
                                                        Pexp_apply
                                                        expression (utils/binutils.ml[375,10812+25]..[375,10812+35])
                                                          Pexp_ident "get_uint32" (utils/binutils.ml[375,10812+25]..[375,10812+35])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[375,10812+36]..[375,10812+37])
                                                              Pexp_ident "d" (utils/binutils.ml[375,10812+36]..[375,10812+37])
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[375,10812+38]..[375,10812+41])
                                                              Pexp_ident "buf" (utils/binutils.ml[375,10812+38]..[375,10812+41])
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[375,10812+42]..[375,10812+53])
                                                              Pexp_apply
                                                              expression (utils/binutils.ml[375,10812+49]..[375,10812+50])
                                                                Pexp_ident "+" (utils/binutils.ml[375,10812+49]..[375,10812+50])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[375,10812+43]..[375,10812+48])
                                                                    Pexp_apply
                                                                    expression (utils/binutils.ml[375,10812+43]..[375,10812+44])
                                                                      Pexp_ident "!" (utils/binutils.ml[375,10812+43]..[375,10812+44])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (utils/binutils.ml[375,10812+44]..[375,10812+48])
  Pexp_ident "base" (utils/binutils.ml[375,10812+44]..[375,10812+48])
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[375,10812+51]..[375,10812+52])
                                                                    Pexp_constant PConst_int (8,None)
                                                              ]
                                                        ]
                                                  ]
                                                  expression (utils/binutils.ml[376,10869+12]..[379,11057+54])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (utils/binutils.ml[376,10869+16]..[376,10869+21])
                                                          Ppat_var "nsyms" (utils/binutils.ml[376,10869+16]..[376,10869+21])
                                                        expression (utils/binutils.ml[376,10869+24]..[376,10869+59])
                                                          Pexp_apply
                                                          expression (utils/binutils.ml[376,10869+24]..[376,10869+32])
                                                            Pexp_ident "get_uint" (utils/binutils.ml[376,10869+24]..[376,10869+32])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[376,10869+33]..[376,10869+40])
                                                                Pexp_constant PConst_string("nsyms",(utils/binutils.ml[376,10869+34]..[376,10869+39]),None)
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[376,10869+41]..[376,10869+42])
                                                                Pexp_ident "d" (utils/binutils.ml[376,10869+41]..[376,10869+42])
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[376,10869+43]..[376,10869+46])
                                                                Pexp_ident "buf" (utils/binutils.ml[376,10869+43]..[376,10869+46])
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[376,10869+47]..[376,10869+59])
                                                                Pexp_apply
                                                                expression (utils/binutils.ml[376,10869+54]..[376,10869+55])
                                                                  Pexp_ident "+" (utils/binutils.ml[376,10869+54]..[376,10869+55])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (utils/binutils.ml[376,10869+48]..[376,10869+53])
                                                                      Pexp_apply
                                                                      expression (utils/binutils.ml[376,10869+48]..[376,10869+49])
Pexp_ident "!" (utils/binutils.ml[376,10869+48]..[376,10869+49])
                                                                      [
<arg>
Nolabel
  expression (utils/binutils.ml[376,10869+49]..[376,10869+53])
    Pexp_ident "base" (utils/binutils.ml[376,10869+49]..[376,10869+53])
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (utils/binutils.ml[376,10869+56]..[376,10869+58])
                                                                      Pexp_constant PConst_int (12,None)
                                                                ]
                                                          ]
                                                    ]
                                                    expression (utils/binutils.ml[377,10932+12]..[379,11057+54])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (utils/binutils.ml[377,10932+16]..[377,10932+22])
                                                            Ppat_var "stroff" (utils/binutils.ml[377,10932+16]..[377,10932+22])
                                                          expression (utils/binutils.ml[377,10932+25]..[377,10932+54])
                                                            Pexp_apply
                                                            expression (utils/binutils.ml[377,10932+25]..[377,10932+35])
                                                              Pexp_ident "get_uint32" (utils/binutils.ml[377,10932+25]..[377,10932+35])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (utils/binutils.ml[377,10932+36]..[377,10932+37])
                                                                  Pexp_ident "d" (utils/binutils.ml[377,10932+36]..[377,10932+37])
                                                              <arg>
                                                              Nolabel
                                                                expression (utils/binutils.ml[377,10932+38]..[377,10932+41])
                                                                  Pexp_ident "buf" (utils/binutils.ml[377,10932+38]..[377,10932+41])
                                                              <arg>
                                                              Nolabel
                                                                expression (utils/binutils.ml[377,10932+42]..[377,10932+54])
                                                                  Pexp_apply
                                                                  expression (utils/binutils.ml[377,10932+49]..[377,10932+50])
                                                                    Pexp_ident "+" (utils/binutils.ml[377,10932+49]..[377,10932+50])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (utils/binutils.ml[377,10932+43]..[377,10932+48])
Pexp_apply
expression (utils/binutils.ml[377,10932+43]..[377,10932+44])
  Pexp_ident "!" (utils/binutils.ml[377,10932+43]..[377,10932+44])
[
  <arg>
  Nolabel
    expression (utils/binutils.ml[377,10932+44]..[377,10932+48])
      Pexp_ident "base" (utils/binutils.ml[377,10932+44]..[377,10932+48])
]
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (utils/binutils.ml[377,10932+51]..[377,10932+53])
Pexp_constant PConst_int (16,None)
                                                                  ]
                                                            ]
                                                      ]
                                                      expression (utils/binutils.ml[378,10990+12]..[379,11057+54])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (utils/binutils.ml[378,10990+16]..[378,10990+23])
                                                              Ppat_var "strsize" (utils/binutils.ml[378,10990+16]..[378,10990+23])
                                                            expression (utils/binutils.ml[378,10990+26]..[378,10990+63])
                                                              Pexp_apply
                                                              expression (utils/binutils.ml[378,10990+26]..[378,10990+34])
                                                                Pexp_ident "get_uint" (utils/binutils.ml[378,10990+26]..[378,10990+34])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[378,10990+35]..[378,10990+44])
                                                                    Pexp_constant PConst_string("strsize",(utils/binutils.ml[378,10990+36]..[378,10990+43]),None)
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[378,10990+45]..[378,10990+46])
                                                                    Pexp_ident "d" (utils/binutils.ml[378,10990+45]..[378,10990+46])
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[378,10990+47]..[378,10990+50])
                                                                    Pexp_ident "buf" (utils/binutils.ml[378,10990+47]..[378,10990+50])
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[378,10990+51]..[378,10990+63])
                                                                    Pexp_apply
                                                                    expression (utils/binutils.ml[378,10990+58]..[378,10990+59])
                                                                      Pexp_ident "+" (utils/binutils.ml[378,10990+58]..[378,10990+59])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (utils/binutils.ml[378,10990+52]..[378,10990+57])
  Pexp_apply
  expression (utils/binutils.ml[378,10990+52]..[378,10990+53])
    Pexp_ident "!" (utils/binutils.ml[378,10990+52]..[378,10990+53])
  [
    <arg>
    Nolabel
      expression (utils/binutils.ml[378,10990+53]..[378,10990+57])
        Pexp_ident "base" (utils/binutils.ml[378,10990+53]..[378,10990+57])
  ]
                                                                      <arg>
                                                                      Nolabel
expression (utils/binutils.ml[378,10990+60]..[378,10990+62])
  Pexp_constant PConst_int (20,None)
                                                                    ]
                                                              ]
                                                        ]
                                                        expression (utils/binutils.ml[379,11057+12]..[379,11057+54])
                                                          Pexp_construct "LC_SYMTAB" (utils/binutils.ml[379,11057+12]..[379,11057+21])
                                                          Some
                                                            expression (utils/binutils.ml[379,11057+22]..[379,11057+54])
                                                              Pexp_record
                                                              [
                                                                "symoff" (utils/binutils.ml[379,11057+23]..[379,11057+29]) ghost
                                                                  expression (utils/binutils.ml[379,11057+23]..[379,11057+29])
                                                                    Pexp_ident "symoff" (utils/binutils.ml[379,11057+23]..[379,11057+29])
                                                                "nsyms" (utils/binutils.ml[379,11057+31]..[379,11057+36]) ghost
                                                                  expression (utils/binutils.ml[379,11057+31]..[379,11057+36])
                                                                    Pexp_ident "nsyms" (utils/binutils.ml[379,11057+31]..[379,11057+36])
                                                                "stroff" (utils/binutils.ml[379,11057+38]..[379,11057+44]) ghost
                                                                  expression (utils/binutils.ml[379,11057+38]..[379,11057+44])
                                                                    Pexp_ident "stroff" (utils/binutils.ml[379,11057+38]..[379,11057+44])
                                                                "strsize" (utils/binutils.ml[379,11057+46]..[379,11057+53]) ghost
                                                                  expression (utils/binutils.ml[379,11057+46]..[379,11057+53])
                                                                    Pexp_ident "strsize" (utils/binutils.ml[379,11057+46]..[379,11057+53])
                                                              ]
                                                              None
                                              <case>
                                                pattern (utils/binutils.ml[380,11112+10]..[380,11112+11])
                                                  Ppat_any
                                                expression (utils/binutils.ml[381,11127+12]..[381,11127+17])
                                                  Pexp_construct "OTHER" (utils/binutils.ml[381,11127+12]..[381,11127+17])
                                                  None
                                            ]
                                      ]
                                      expression (utils/binutils.ml[383,11154+6]..[384,11185+8])
                                        Pexp_sequence
                                        expression (utils/binutils.ml[383,11154+6]..[383,11154+29])
                                          Pexp_apply
                                          expression (utils/binutils.ml[383,11154+11]..[383,11154+13])
                                            Pexp_ident ":=" (utils/binutils.ml[383,11154+11]..[383,11154+13])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[383,11154+6]..[383,11154+10])
                                                Pexp_ident "base" (utils/binutils.ml[383,11154+6]..[383,11154+10])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[383,11154+14]..[383,11154+29])
                                                Pexp_apply
                                                expression (utils/binutils.ml[383,11154+20]..[383,11154+21])
                                                  Pexp_ident "+" (utils/binutils.ml[383,11154+20]..[383,11154+21])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[383,11154+14]..[383,11154+19])
                                                      Pexp_apply
                                                      expression (utils/binutils.ml[383,11154+14]..[383,11154+15])
                                                        Pexp_ident "!" (utils/binutils.ml[383,11154+14]..[383,11154+15])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (utils/binutils.ml[383,11154+15]..[383,11154+19])
                                                            Pexp_ident "base" (utils/binutils.ml[383,11154+15]..[383,11154+19])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[383,11154+22]..[383,11154+29])
                                                      Pexp_ident "cmdsize" (utils/binutils.ml[383,11154+22]..[383,11154+29])
                                                ]
                                          ]
                                        expression (utils/binutils.ml[384,11185+6]..[384,11185+8])
                                          Pexp_ident "lc" (utils/binutils.ml[384,11185+6]..[384,11185+8])
                          ]
                          expression (utils/binutils.ml[386,11201+4]..[386,11201+23])
                            Pexp_apply
                            expression (utils/binutils.ml[386,11201+4]..[386,11201+14])
                              Pexp_ident "Array.init" (utils/binutils.ml[386,11201+4]..[386,11201+14])
                            [
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[386,11201+15]..[386,11201+20])
                                  Pexp_ident "ncmds" (utils/binutils.ml[386,11201+15]..[386,11201+20])
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[386,11201+21]..[386,11201+23])
                                  Pexp_ident "mk" (utils/binutils.ml[386,11201+21]..[386,11201+23])
                            ]
            ]
          structure_item (utils/binutils.ml[388,11226+2]..[393,11311+5])
            Pstr_type Rec
            [
              type_declaration "symbol" (utils/binutils.ml[388,11226+7]..[388,11226+13]) (utils/binutils.ml[388,11226+2]..[393,11311+5])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (utils/binutils.ml[390,11248+6]..[390,11248+21])
                        Immutable
                        "n_name" (utils/binutils.ml[390,11248+6]..[390,11248+12])                        core_type (utils/binutils.ml[390,11248+14]..[390,11248+20])
                          Ptyp_constr "string" (utils/binutils.ml[390,11248+14]..[390,11248+20])
                          []
                      (utils/binutils.ml[391,11270+6]..[391,11270+18])
                        Immutable
                        "n_type" (utils/binutils.ml[391,11270+6]..[391,11270+12])                        core_type (utils/binutils.ml[391,11270+14]..[391,11270+17])
                          Ptyp_constr "int" (utils/binutils.ml[391,11270+14]..[391,11270+17])
                          []
                      (utils/binutils.ml[392,11289+6]..[392,11289+21])
                        Immutable
                        "n_value" (utils/binutils.ml[392,11289+6]..[392,11289+13])                        core_type (utils/binutils.ml[392,11289+15]..[392,11289+20])
                          Ptyp_constr "int64" (utils/binutils.ml[392,11289+15]..[392,11289+20])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (utils/binutils.ml[395,11318+2]..[396,11339+19])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[395,11318+6]..[395,11318+16])
                  Ppat_var "size_nlist" (utils/binutils.ml[395,11318+6]..[395,11318+16])
                expression (utils/binutils.ml[395,11318+17]..[396,11339+19]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[395,11318+17]..[395,11318+18])
                    Ppat_var "d" (utils/binutils.ml[395,11318+17]..[395,11318+18])
                  expression (utils/binutils.ml[396,11339+4]..[396,11339+19])
                    Pexp_apply
                    expression (utils/binutils.ml[396,11339+6]..[396,11339+7])
                      Pexp_ident "+" (utils/binutils.ml[396,11339+6]..[396,11339+7])
                    [
                      <arg>
                      Nolabel
                        expression (utils/binutils.ml[396,11339+4]..[396,11339+5])
                          Pexp_constant PConst_int (8,None)
                      <arg>
                      Nolabel
                        expression (utils/binutils.ml[396,11339+8]..[396,11339+19])
                          Pexp_apply
                          expression (utils/binutils.ml[396,11339+8]..[396,11339+17])
                            Pexp_ident "word_size" (utils/binutils.ml[396,11339+8]..[396,11339+17])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[396,11339+18]..[396,11339+19])
                                Pexp_ident "d" (utils/binutils.ml[396,11339+18]..[396,11339+19])
                          ]
                    ]
            ]
          structure_item (utils/binutils.ml[398,11360+2]..[419,12162+27])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[398,11360+6]..[398,11360+18])
                  Ppat_var "read_symbols" (utils/binutils.ml[398,11360+6]..[398,11360+18])
                expression (utils/binutils.ml[398,11360+19]..[419,12162+27]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[398,11360+19]..[398,11360+20])
                    Ppat_var "d" (utils/binutils.ml[398,11360+19]..[398,11360+20])
                  expression (utils/binutils.ml[398,11360+21]..[419,12162+27]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[398,11360+21]..[398,11360+34])
                      Ppat_var "load_commands" (utils/binutils.ml[398,11360+21]..[398,11360+34])
                    expression (utils/binutils.ml[399,11397+4]..[419,12162+27])
                      Pexp_match
                      expression (utils/binutils.ml[401,11467+6]..[404,11564+23])
                        Pexp_apply
                        expression (utils/binutils.ml[401,11467+6]..[401,11467+20])
                          Pexp_ident "array_find_map" (utils/binutils.ml[401,11467+6]..[401,11467+20])
                        [
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[401,11467+21]..[404,11564+9])
                              Pexp_function
                              [
                                <case>
                                  pattern (utils/binutils.ml[402,11498+12]..[402,11498+28])
                                    Ppat_construct "LC_SYMTAB" (utils/binutils.ml[402,11498+12]..[402,11498+21])
                                    Some
                                      []
                                      pattern (utils/binutils.ml[402,11498+22]..[402,11498+28])
                                        Ppat_var "symtab" (utils/binutils.ml[402,11498+22]..[402,11498+28])
                                  expression (utils/binutils.ml[402,11498+32]..[402,11498+43])
                                    Pexp_construct "Some" (utils/binutils.ml[402,11498+32]..[402,11498+36])
                                    Some
                                      expression (utils/binutils.ml[402,11498+37]..[402,11498+43])
                                        Pexp_ident "symtab" (utils/binutils.ml[402,11498+37]..[402,11498+43])
                                <case>
                                  pattern (utils/binutils.ml[403,11542+12]..[403,11542+13])
                                    Ppat_any
                                  expression (utils/binutils.ml[403,11542+17]..[403,11542+21])
                                    Pexp_construct "None" (utils/binutils.ml[403,11542+17]..[403,11542+21])
                                    None
                              ]
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[404,11564+10]..[404,11564+23])
                              Pexp_ident "load_commands" (utils/binutils.ml[404,11564+10]..[404,11564+23])
                        ]
                      [
                        <case>
                          pattern (utils/binutils.ml[406,11597+6]..[406,11597+10])
                            Ppat_construct "None" (utils/binutils.ml[406,11597+6]..[406,11597+10])
                            None
                          expression (utils/binutils.ml[406,11597+14]..[406,11597+19])
                            Pexp_array
                            []
                        <case>
                          pattern (utils/binutils.ml[407,11617+6]..[407,11617+43])
                            Ppat_construct "Some" (utils/binutils.ml[407,11617+6]..[407,11617+10])
                            Some
                              []
                              pattern (utils/binutils.ml[407,11617+11]..[407,11617+43])
                                Ppat_record Closed
                                [
                                  "symoff" (utils/binutils.ml[407,11617+12]..[407,11617+18]) ghost
                                    pattern (utils/binutils.ml[407,11617+12]..[407,11617+18])
                                      Ppat_var "symoff" (utils/binutils.ml[407,11617+12]..[407,11617+18])
                                  "nsyms" (utils/binutils.ml[407,11617+20]..[407,11617+25]) ghost
                                    pattern (utils/binutils.ml[407,11617+20]..[407,11617+25])
                                      Ppat_var "nsyms" (utils/binutils.ml[407,11617+20]..[407,11617+25])
                                  "stroff" (utils/binutils.ml[407,11617+27]..[407,11617+33]) ghost
                                    pattern (utils/binutils.ml[407,11617+27]..[407,11617+33])
                                      Ppat_var "stroff" (utils/binutils.ml[407,11617+27]..[407,11617+33])
                                  "strsize" (utils/binutils.ml[407,11617+35]..[407,11617+42]) ghost
                                    pattern (utils/binutils.ml[407,11617+35]..[407,11617+42])
                                      Ppat_var "strsize" (utils/binutils.ml[407,11617+35]..[407,11617+42])
                                ]
                          expression (utils/binutils.ml[408,11664+8]..[419,12162+27])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (utils/binutils.ml[408,11664+12]..[408,11664+18])
                                  Ppat_var "strtbl" (utils/binutils.ml[408,11664+12]..[408,11664+18])
                                expression (utils/binutils.ml[408,11664+21]..[408,11664+67])
                                  Pexp_apply
                                  expression (utils/binutils.ml[408,11664+21]..[408,11664+31])
                                    Pexp_ident "load_bytes" (utils/binutils.ml[408,11664+21]..[408,11664+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[408,11664+32]..[408,11664+33])
                                        Pexp_ident "d" (utils/binutils.ml[408,11664+32]..[408,11664+33])
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[408,11664+34]..[408,11664+59])
                                        Pexp_apply
                                        expression (utils/binutils.ml[408,11664+35]..[408,11664+51])
                                          Pexp_ident "uint64_of_uint32" (utils/binutils.ml[408,11664+35]..[408,11664+51])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[408,11664+52]..[408,11664+58])
                                              Pexp_ident "stroff" (utils/binutils.ml[408,11664+52]..[408,11664+58])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[408,11664+60]..[408,11664+67])
                                        Pexp_ident "strsize" (utils/binutils.ml[408,11664+60]..[408,11664+67])
                                  ]
                            ]
                            expression (utils/binutils.ml[409,11735+8]..[419,12162+27])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (utils/binutils.ml[409,11735+12]..[409,11735+15])
                                    Ppat_var "buf" (utils/binutils.ml[409,11735+12]..[409,11735+15])
                                  expression (utils/binutils.ml[410,11753+10]..[410,11753+71])
                                    Pexp_apply
                                    expression (utils/binutils.ml[410,11753+10]..[410,11753+20])
                                      Pexp_ident "load_bytes" (utils/binutils.ml[410,11753+10]..[410,11753+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[410,11753+21]..[410,11753+22])
                                          Pexp_ident "d" (utils/binutils.ml[410,11753+21]..[410,11753+22])
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[410,11753+23]..[410,11753+48])
                                          Pexp_apply
                                          expression (utils/binutils.ml[410,11753+24]..[410,11753+40])
                                            Pexp_ident "uint64_of_uint32" (utils/binutils.ml[410,11753+24]..[410,11753+40])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[410,11753+41]..[410,11753+47])
                                                Pexp_ident "symoff" (utils/binutils.ml[410,11753+41]..[410,11753+47])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[410,11753+49]..[410,11753+71])
                                          Pexp_apply
                                          expression (utils/binutils.ml[410,11753+56]..[410,11753+57])
                                            Pexp_ident "*" (utils/binutils.ml[410,11753+56]..[410,11753+57])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[410,11753+50]..[410,11753+55])
                                                Pexp_ident "nsyms" (utils/binutils.ml[410,11753+50]..[410,11753+55])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[410,11753+58]..[410,11753+70])
                                                Pexp_apply
                                                expression (utils/binutils.ml[410,11753+58]..[410,11753+68])
                                                  Pexp_ident "size_nlist" (utils/binutils.ml[410,11753+58]..[410,11753+68])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[410,11753+69]..[410,11753+70])
                                                      Pexp_ident "d" (utils/binutils.ml[410,11753+69]..[410,11753+70])
                                                ]
                                          ]
                                    ]
                              ]
                              expression (utils/binutils.ml[411,11828+8]..[419,12162+27])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (utils/binutils.ml[411,11828+12]..[411,11828+22])
                                      Ppat_var "size_nlist" (utils/binutils.ml[411,11828+12]..[411,11828+22])
                                    expression (utils/binutils.ml[411,11828+25]..[411,11828+37])
                                      Pexp_apply
                                      expression (utils/binutils.ml[411,11828+25]..[411,11828+35])
                                        Pexp_ident "size_nlist" (utils/binutils.ml[411,11828+25]..[411,11828+35])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[411,11828+36]..[411,11828+37])
                                            Pexp_ident "d" (utils/binutils.ml[411,11828+36]..[411,11828+37])
                                      ]
                                ]
                                expression (utils/binutils.ml[412,11869+8]..[419,12162+27])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (utils/binutils.ml[412,11869+12]..[412,11869+14])
                                        Ppat_var "mk" (utils/binutils.ml[412,11869+12]..[412,11869+14])
                                      expression (utils/binutils.ml[412,11869+15]..[417,12115+35]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (utils/binutils.ml[412,11869+15]..[412,11869+16])
                                          Ppat_var "i" (utils/binutils.ml[412,11869+15]..[412,11869+16])
                                        expression (utils/binutils.ml[413,11888+10]..[417,12115+35])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (utils/binutils.ml[413,11888+14]..[413,11888+18])
                                                Ppat_var "base" (utils/binutils.ml[413,11888+14]..[413,11888+18])
                                              expression (utils/binutils.ml[413,11888+21]..[413,11888+35])
                                                Pexp_apply
                                                expression (utils/binutils.ml[413,11888+23]..[413,11888+24])
                                                  Pexp_ident "*" (utils/binutils.ml[413,11888+23]..[413,11888+24])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[413,11888+21]..[413,11888+22])
                                                      Pexp_ident "i" (utils/binutils.ml[413,11888+21]..[413,11888+22])
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[413,11888+25]..[413,11888+35])
                                                      Pexp_ident "size_nlist" (utils/binutils.ml[413,11888+25]..[413,11888+35])
                                                ]
                                          ]
                                          expression (utils/binutils.ml[414,11927+10]..[417,12115+35])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (utils/binutils.ml[414,11927+14]..[414,11927+20])
                                                  Ppat_var "n_name" (utils/binutils.ml[414,11927+14]..[414,11927+20])
                                                expression (utils/binutils.ml[414,11927+23]..[414,11927+74])
                                                  Pexp_apply
                                                  expression (utils/binutils.ml[414,11927+23]..[414,11927+30])
                                                    Pexp_ident "name_at" (utils/binutils.ml[414,11927+23]..[414,11927+30])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[414,11927+31]..[414,11927+37])
                                                        Pexp_ident "strtbl" (utils/binutils.ml[414,11927+31]..[414,11927+37])
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[414,11927+38]..[414,11927+74])
                                                        Pexp_apply
                                                        expression (utils/binutils.ml[414,11927+39]..[414,11927+47])
                                                          Pexp_ident "get_uint" (utils/binutils.ml[414,11927+39]..[414,11927+47])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[414,11927+48]..[414,11927+56])
                                                              Pexp_constant PConst_string("n_name",(utils/binutils.ml[414,11927+49]..[414,11927+55]),None)
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[414,11927+57]..[414,11927+58])
                                                              Pexp_ident "d" (utils/binutils.ml[414,11927+57]..[414,11927+58])
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[414,11927+59]..[414,11927+62])
                                                              Pexp_ident "buf" (utils/binutils.ml[414,11927+59]..[414,11927+62])
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[414,11927+63]..[414,11927+73])
                                                              Pexp_apply
                                                              expression (utils/binutils.ml[414,11927+69]..[414,11927+70])
                                                                Pexp_ident "+" (utils/binutils.ml[414,11927+69]..[414,11927+70])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[414,11927+64]..[414,11927+68])
                                                                    Pexp_ident "base" (utils/binutils.ml[414,11927+64]..[414,11927+68])
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[414,11927+71]..[414,11927+72])
                                                                    Pexp_constant PConst_int (0,None)
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                            expression (utils/binutils.ml[415,12005+10]..[417,12115+35])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (utils/binutils.ml[415,12005+14]..[415,12005+20])
                                                    Ppat_var "n_type" (utils/binutils.ml[415,12005+14]..[415,12005+20])
                                                  expression (utils/binutils.ml[415,12005+23]..[415,12005+53])
                                                    Pexp_apply
                                                    expression (utils/binutils.ml[415,12005+23]..[415,12005+38])
                                                      Pexp_ident "Bytes.get_uint8" (utils/binutils.ml[415,12005+23]..[415,12005+38])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[415,12005+39]..[415,12005+42])
                                                          Pexp_ident "buf" (utils/binutils.ml[415,12005+39]..[415,12005+42])
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[415,12005+43]..[415,12005+53])
                                                          Pexp_apply
                                                          expression (utils/binutils.ml[415,12005+49]..[415,12005+50])
                                                            Pexp_ident "+" (utils/binutils.ml[415,12005+49]..[415,12005+50])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[415,12005+44]..[415,12005+48])
                                                                Pexp_ident "base" (utils/binutils.ml[415,12005+44]..[415,12005+48])
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[415,12005+51]..[415,12005+52])
                                                                Pexp_constant PConst_int (4,None)
                                                          ]
                                                    ]
                                              ]
                                              expression (utils/binutils.ml[416,12062+10]..[417,12115+35])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (utils/binutils.ml[416,12062+14]..[416,12062+21])
                                                      Ppat_var "n_value" (utils/binutils.ml[416,12062+14]..[416,12062+21])
                                                    expression (utils/binutils.ml[416,12062+24]..[416,12062+49])
                                                      Pexp_apply
                                                      expression (utils/binutils.ml[416,12062+24]..[416,12062+32])
                                                        Pexp_ident "get_word" (utils/binutils.ml[416,12062+24]..[416,12062+32])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (utils/binutils.ml[416,12062+33]..[416,12062+34])
                                                            Pexp_ident "d" (utils/binutils.ml[416,12062+33]..[416,12062+34])
                                                        <arg>
                                                        Nolabel
                                                          expression (utils/binutils.ml[416,12062+35]..[416,12062+38])
                                                            Pexp_ident "buf" (utils/binutils.ml[416,12062+35]..[416,12062+38])
                                                        <arg>
                                                        Nolabel
                                                          expression (utils/binutils.ml[416,12062+39]..[416,12062+49])
                                                            Pexp_apply
                                                            expression (utils/binutils.ml[416,12062+45]..[416,12062+46])
                                                              Pexp_ident "+" (utils/binutils.ml[416,12062+45]..[416,12062+46])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (utils/binutils.ml[416,12062+40]..[416,12062+44])
                                                                  Pexp_ident "base" (utils/binutils.ml[416,12062+40]..[416,12062+44])
                                                              <arg>
                                                              Nolabel
                                                                expression (utils/binutils.ml[416,12062+47]..[416,12062+48])
                                                                  Pexp_constant PConst_int (8,None)
                                                            ]
                                                      ]
                                                ]
                                                expression (utils/binutils.ml[417,12115+10]..[417,12115+35])
                                                  Pexp_record
                                                  [
                                                    "n_name" (utils/binutils.ml[417,12115+11]..[417,12115+17]) ghost
                                                      expression (utils/binutils.ml[417,12115+11]..[417,12115+17])
                                                        Pexp_ident "n_name" (utils/binutils.ml[417,12115+11]..[417,12115+17])
                                                    "n_type" (utils/binutils.ml[417,12115+19]..[417,12115+25]) ghost
                                                      expression (utils/binutils.ml[417,12115+19]..[417,12115+25])
                                                        Pexp_ident "n_type" (utils/binutils.ml[417,12115+19]..[417,12115+25])
                                                    "n_value" (utils/binutils.ml[417,12115+27]..[417,12115+34]) ghost
                                                      expression (utils/binutils.ml[417,12115+27]..[417,12115+34])
                                                        Pexp_ident "n_value" (utils/binutils.ml[417,12115+27]..[417,12115+34])
                                                  ]
                                                  None
                                  ]
                                  expression (utils/binutils.ml[419,12162+8]..[419,12162+27])
                                    Pexp_apply
                                    expression (utils/binutils.ml[419,12162+8]..[419,12162+18])
                                      Pexp_ident "Array.init" (utils/binutils.ml[419,12162+8]..[419,12162+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[419,12162+19]..[419,12162+24])
                                          Pexp_ident "nsyms" (utils/binutils.ml[419,12162+19]..[419,12162+24])
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[419,12162+25]..[419,12162+27])
                                          Pexp_ident "mk" (utils/binutils.ml[419,12162+25]..[419,12162+27])
                                    ]
                      ]
            ]
          structure_item (utils/binutils.ml[421,12191+2]..[422,12211+17])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[421,12191+6]..[421,12191+9])
                  Ppat_var "fix" (utils/binutils.ml[421,12191+6]..[421,12191+9])
                expression (utils/binutils.ml[421,12191+10]..[422,12211+17]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[421,12191+10]..[421,12191+17])
                    Ppat_var "symname" (utils/binutils.ml[421,12191+10]..[421,12191+17])
                  expression (utils/binutils.ml[422,12211+4]..[422,12211+17])
                    Pexp_apply
                    expression (utils/binutils.ml[422,12211+8]..[422,12211+9])
                      Pexp_ident "^" (utils/binutils.ml[422,12211+8]..[422,12211+9])
                    [
                      <arg>
                      Nolabel
                        expression (utils/binutils.ml[422,12211+4]..[422,12211+7])
                          Pexp_constant PConst_string("_",(utils/binutils.ml[422,12211+5]..[422,12211+6]),None)
                      <arg>
                      Nolabel
                        expression (utils/binutils.ml[422,12211+10]..[422,12211+17])
                          Pexp_ident "symname" (utils/binutils.ml[422,12211+10]..[422,12211+17])
                    ]
            ]
          structure_item (utils/binutils.ml[424,12230+2]..[429,12386+24])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[424,12230+6]..[424,12230+17])
                  Ppat_var "find_symbol" (utils/binutils.ml[424,12230+6]..[424,12230+17])
                expression (utils/binutils.ml[424,12230+18]..[429,12386+24]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[424,12230+18]..[424,12230+25])
                    Ppat_var "symbols" (utils/binutils.ml[424,12230+18]..[424,12230+25])
                  expression (utils/binutils.ml[424,12230+26]..[429,12386+24]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[424,12230+26]..[424,12230+33])
                      Ppat_var "symname" (utils/binutils.ml[424,12230+26]..[424,12230+33])
                    expression (utils/binutils.ml[425,12266+4]..[429,12386+24])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (utils/binutils.ml[425,12266+8]..[425,12266+9])
                            Ppat_var "f" (utils/binutils.ml[425,12266+8]..[425,12266+9])
                          expression (utils/binutils.ml[425,12266+10]..[427,12356+22]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (utils/binutils.ml[425,12266+10]..[425,12266+29])
                              Ppat_record Open
                              [
                                "n_name" (utils/binutils.ml[425,12266+11]..[425,12266+17]) ghost
                                  pattern (utils/binutils.ml[425,12266+11]..[425,12266+17])
                                    Ppat_var "n_name" (utils/binutils.ml[425,12266+11]..[425,12266+17])
                                "n_type" (utils/binutils.ml[425,12266+19]..[425,12266+25]) ghost
                                  pattern (utils/binutils.ml[425,12266+19]..[425,12266+25])
                                    Ppat_var "n_type" (utils/binutils.ml[425,12266+19]..[425,12266+25])
                              ]
                            expression (utils/binutils.ml[426,12298+6]..[427,12356+22])
                              Pexp_apply
                              expression (utils/binutils.ml[426,12298+55]..[426,12298+57])
                                Pexp_ident "&&" (utils/binutils.ml[426,12298+55]..[426,12298+57])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[426,12298+6]..[426,12298+33])
                                    Pexp_apply
                                    expression (utils/binutils.ml[426,12298+25]..[426,12298+26])
                                      Pexp_ident "=" (utils/binutils.ml[426,12298+25]..[426,12298+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[426,12298+6]..[426,12298+24])
                                          Pexp_apply
                                          expression (utils/binutils.ml[426,12298+13]..[426,12298+17])
                                            Pexp_ident "land" (utils/binutils.ml[426,12298+13]..[426,12298+17])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[426,12298+6]..[426,12298+12])
                                                Pexp_ident "n_type" (utils/binutils.ml[426,12298+6]..[426,12298+12])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[426,12298+18]..[426,12298+24])
                                                Pexp_constant PConst_int (0b1111,None)
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[426,12298+27]..[426,12298+33])
                                          Pexp_constant PConst_int (0b1111,None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[427,12356+6]..[427,12356+22])
                                    Pexp_apply
                                    expression (utils/binutils.ml[427,12356+13]..[427,12356+14])
                                      Pexp_ident "=" (utils/binutils.ml[427,12356+13]..[427,12356+14])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[427,12356+6]..[427,12356+12])
                                          Pexp_ident "n_name" (utils/binutils.ml[427,12356+6]..[427,12356+12])
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[427,12356+15]..[427,12356+22])
                                          Pexp_ident "symname" (utils/binutils.ml[427,12356+15]..[427,12356+22])
                                    ]
                              ]
                      ]
                      expression (utils/binutils.ml[429,12386+4]..[429,12386+24])
                        Pexp_apply
                        expression (utils/binutils.ml[429,12386+4]..[429,12386+14])
                          Pexp_ident "array_find" (utils/binutils.ml[429,12386+4]..[429,12386+14])
                        [
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[429,12386+15]..[429,12386+16])
                              Pexp_ident "f" (utils/binutils.ml[429,12386+15]..[429,12386+16])
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[429,12386+17]..[429,12386+24])
                              Pexp_ident "symbols" (utils/binutils.ml[429,12386+17]..[429,12386+24])
                        ]
            ]
          structure_item (utils/binutils.ml[431,12412+2]..[435,12545+39])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[431,12412+6]..[431,12412+19])
                  Ppat_var "symbol_offset" (utils/binutils.ml[431,12412+6]..[431,12412+19])
                expression (utils/binutils.ml[431,12412+20]..[435,12545+39]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[431,12412+20]..[431,12412+27])
                    Ppat_var "symbols" (utils/binutils.ml[431,12412+20]..[431,12412+27])
                  expression (utils/binutils.ml[431,12412+28]..[435,12545+39]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[431,12412+28]..[431,12412+35])
                      Ppat_var "symname" (utils/binutils.ml[431,12412+28]..[431,12412+35])
                    expression (utils/binutils.ml[432,12450+4]..[435,12545+39])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (utils/binutils.ml[432,12450+8]..[432,12450+15])
                            Ppat_var "symname" (utils/binutils.ml[432,12450+8]..[432,12450+15])
                          expression (utils/binutils.ml[432,12450+18]..[432,12450+29])
                            Pexp_apply
                            expression (utils/binutils.ml[432,12450+18]..[432,12450+21])
                              Pexp_ident "fix" (utils/binutils.ml[432,12450+18]..[432,12450+21])
                            [
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[432,12450+22]..[432,12450+29])
                                  Pexp_ident "symname" (utils/binutils.ml[432,12450+22]..[432,12450+29])
                            ]
                      ]
                      expression (utils/binutils.ml[433,12483+4]..[435,12545+39])
                        Pexp_match
                        expression (utils/binutils.ml[433,12483+10]..[433,12483+37])
                          Pexp_apply
                          expression (utils/binutils.ml[433,12483+10]..[433,12483+21])
                            Pexp_ident "find_symbol" (utils/binutils.ml[433,12483+10]..[433,12483+21])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[433,12483+22]..[433,12483+29])
                                Pexp_ident "symbols" (utils/binutils.ml[433,12483+22]..[433,12483+29])
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[433,12483+30]..[433,12483+37])
                                Pexp_ident "symname" (utils/binutils.ml[433,12483+30]..[433,12483+37])
                          ]
                        [
                          <case>
                            pattern (utils/binutils.ml[434,12526+6]..[434,12526+10])
                              Ppat_construct "None" (utils/binutils.ml[434,12526+6]..[434,12526+10])
                              None
                            expression (utils/binutils.ml[434,12526+14]..[434,12526+18])
                              Pexp_construct "None" (utils/binutils.ml[434,12526+14]..[434,12526+18])
                              None
                          <case>
                            pattern (utils/binutils.ml[435,12545+6]..[435,12545+23])
                              Ppat_construct "Some" (utils/binutils.ml[435,12545+6]..[435,12545+10])
                              Some
                                []
                                pattern (utils/binutils.ml[435,12545+11]..[435,12545+23])
                                  Ppat_record Open
                                  [
                                    "n_value" (utils/binutils.ml[435,12545+12]..[435,12545+19]) ghost
                                      pattern (utils/binutils.ml[435,12545+12]..[435,12545+19])
                                        Ppat_var "n_value" (utils/binutils.ml[435,12545+12]..[435,12545+19])
                                  ]
                            expression (utils/binutils.ml[435,12545+27]..[435,12545+39])
                              Pexp_construct "Some" (utils/binutils.ml[435,12545+27]..[435,12545+31])
                              Some
                                expression (utils/binutils.ml[435,12545+32]..[435,12545+39])
                                  Pexp_ident "n_value" (utils/binutils.ml[435,12545+32]..[435,12545+39])
                        ]
            ]
          structure_item (utils/binutils.ml[437,12586+2]..[439,12658+48])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[437,12586+6]..[437,12586+20])
                  Ppat_var "defines_symbol" (utils/binutils.ml[437,12586+6]..[437,12586+20])
                expression (utils/binutils.ml[437,12586+21]..[439,12658+48]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[437,12586+21]..[437,12586+28])
                    Ppat_var "symbols" (utils/binutils.ml[437,12586+21]..[437,12586+28])
                  expression (utils/binutils.ml[437,12586+29]..[439,12658+48]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[437,12586+29]..[437,12586+36])
                      Ppat_var "symname" (utils/binutils.ml[437,12586+29]..[437,12586+36])
                    expression (utils/binutils.ml[438,12625+4]..[439,12658+48])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (utils/binutils.ml[438,12625+8]..[438,12625+15])
                            Ppat_var "symname" (utils/binutils.ml[438,12625+8]..[438,12625+15])
                          expression (utils/binutils.ml[438,12625+18]..[438,12625+29])
                            Pexp_apply
                            expression (utils/binutils.ml[438,12625+18]..[438,12625+21])
                              Pexp_ident "fix" (utils/binutils.ml[438,12625+18]..[438,12625+21])
                            [
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[438,12625+22]..[438,12625+29])
                                  Pexp_ident "symname" (utils/binutils.ml[438,12625+22]..[438,12625+29])
                            ]
                      ]
                      expression (utils/binutils.ml[439,12658+4]..[439,12658+48])
                        Pexp_apply
                        expression (utils/binutils.ml[439,12658+4]..[439,12658+18])
                          Pexp_ident "Option.is_some" (utils/binutils.ml[439,12658+4]..[439,12658+18])
                        [
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[439,12658+19]..[439,12658+48])
                              Pexp_apply
                              expression (utils/binutils.ml[439,12658+20]..[439,12658+31])
                                Pexp_ident "find_symbol" (utils/binutils.ml[439,12658+20]..[439,12658+31])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[439,12658+32]..[439,12658+39])
                                    Pexp_ident "symbols" (utils/binutils.ml[439,12658+32]..[439,12658+39])
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[439,12658+40]..[439,12658+47])
                                    Pexp_ident "symname" (utils/binutils.ml[439,12658+40]..[439,12658+47])
                              ]
                        ]
            ]
          structure_item (utils/binutils.ml[441,12708+2]..[445,12771+17])
            Pstr_type Rec
            [
              type_declaration "magic" (utils/binutils.ml[441,12708+7]..[441,12708+12]) (utils/binutils.ml[441,12708+2]..[445,12771+17])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (utils/binutils.ml[442,12723+4]..[442,12723+14])
                        "MH_MAGIC" (utils/binutils.ml[442,12723+6]..[442,12723+14])
                        []
                        None
                      (utils/binutils.ml[443,12738+4]..[443,12738+14])
                        "MH_CIGAM" (utils/binutils.ml[443,12738+6]..[443,12738+14])
                        []
                        None
                      (utils/binutils.ml[444,12753+4]..[444,12753+17])
                        "MH_MAGIC_64" (utils/binutils.ml[444,12753+6]..[444,12753+17])
                        []
                        None
                      (utils/binutils.ml[445,12771+4]..[445,12771+17])
                        "MH_CIGAM_64" (utils/binutils.ml[445,12771+6]..[445,12771+17])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (utils/binutils.ml[447,12790+2]..[477,13809+35])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[447,12790+6]..[447,12790+10])
                  Ppat_var "read" (utils/binutils.ml[447,12790+6]..[447,12790+10])
                expression (utils/binutils.ml[447,12790+11]..[477,13809+35]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[447,12790+11]..[447,12790+13])
                    Ppat_var "ic" (utils/binutils.ml[447,12790+11]..[447,12790+13])
                  expression (utils/binutils.ml[448,12806+4]..[477,13809+35])
                    Pexp_sequence
                    expression (utils/binutils.ml[448,12806+4]..[448,12806+16])
                      Pexp_apply
                      expression (utils/binutils.ml[448,12806+4]..[448,12806+11])
                        Pexp_ident "seek_in" (utils/binutils.ml[448,12806+4]..[448,12806+11])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[448,12806+12]..[448,12806+14])
                            Pexp_ident "ic" (utils/binutils.ml[448,12806+12]..[448,12806+14])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[448,12806+15]..[448,12806+16])
                            Pexp_constant PConst_int (0,None)
                      ]
                    expression (utils/binutils.ml[449,12824+4]..[477,13809+35])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (utils/binutils.ml[449,12824+8]..[449,12824+13])
                            Ppat_var "magic" (utils/binutils.ml[449,12824+8]..[449,12824+13])
                          expression (utils/binutils.ml[449,12824+16]..[449,12824+39])
                            Pexp_apply
                            expression (utils/binutils.ml[449,12824+16]..[449,12824+34])
                              Pexp_ident "really_input_bytes" (utils/binutils.ml[449,12824+16]..[449,12824+34])
                            [
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[449,12824+35]..[449,12824+37])
                                  Pexp_ident "ic" (utils/binutils.ml[449,12824+35]..[449,12824+37])
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[449,12824+38]..[449,12824+39])
                                  Pexp_constant PConst_int (4,None)
                            ]
                      ]
                      expression (utils/binutils.ml[450,12867+4]..[477,13809+35])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (utils/binutils.ml[450,12867+8]..[450,12867+13])
                              Ppat_var "magic" (utils/binutils.ml[450,12867+8]..[450,12867+13])
                            expression (utils/binutils.ml[451,12883+6]..[457,13098+62])
                              Pexp_match
                              expression (utils/binutils.ml[451,12883+12]..[451,12883+38])
                                Pexp_apply
                                expression (utils/binutils.ml[451,12883+12]..[451,12883+30])
                                  Pexp_ident "Bytes.get_int32_ne" (utils/binutils.ml[451,12883+12]..[451,12883+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[451,12883+31]..[451,12883+36])
                                      Pexp_ident "magic" (utils/binutils.ml[451,12883+31]..[451,12883+36])
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[451,12883+37]..[451,12883+38])
                                      Pexp_constant PConst_int (0,None)
                                ]
                              [
                                <case>
                                  pattern (utils/binutils.ml[452,12927+8]..[452,12927+19])
                                    Ppat_constant PConst_int (0xFEEDFACE,Some l)
                                  expression (utils/binutils.ml[452,12927+23]..[452,12927+31])
                                    Pexp_construct "MH_MAGIC" (utils/binutils.ml[452,12927+23]..[452,12927+31])
                                    None
                                <case>
                                  pattern (utils/binutils.ml[453,12959+8]..[453,12959+19])
                                    Ppat_constant PConst_int (0xCEFAEDFE,Some l)
                                  expression (utils/binutils.ml[453,12959+23]..[453,12959+31])
                                    Pexp_construct "MH_CIGAM" (utils/binutils.ml[453,12959+23]..[453,12959+31])
                                    None
                                <case>
                                  pattern (utils/binutils.ml[454,12991+8]..[454,12991+19])
                                    Ppat_constant PConst_int (0xFEEDFACF,Some l)
                                  expression (utils/binutils.ml[454,12991+23]..[454,12991+34])
                                    Pexp_construct "MH_MAGIC_64" (utils/binutils.ml[454,12991+23]..[454,12991+34])
                                    None
                                <case>
                                  pattern (utils/binutils.ml[455,13026+8]..[455,13026+19])
                                    Ppat_constant PConst_int (0xCFFAEDFE,Some l)
                                  expression (utils/binutils.ml[455,13026+23]..[455,13026+34])
                                    Pexp_construct "MH_CIGAM_64" (utils/binutils.ml[455,13026+23]..[455,13026+34])
                                    None
                                <case>
                                  pattern (utils/binutils.ml[456,13061+8]..[456,13061+9])
                                    Ppat_any
                                  expression (utils/binutils.ml[457,13098+10]..[457,13098+62])
                                    Pexp_apply
                                    expression (utils/binutils.ml[457,13098+10]..[457,13098+15])
                                      Pexp_ident "raise" (utils/binutils.ml[457,13098+10]..[457,13098+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[457,13098+16]..[457,13098+62])
                                          Pexp_construct "Error" (utils/binutils.ml[457,13098+17]..[457,13098+22])
                                          Some
                                            expression (utils/binutils.ml[457,13098+23]..[457,13098+61])
                                              Pexp_construct "Unrecognized" (utils/binutils.ml[457,13098+24]..[457,13098+36])
                                              Some
                                                expression (utils/binutils.ml[457,13098+37]..[457,13098+60])
                                                  Pexp_apply
                                                  expression (utils/binutils.ml[457,13098+38]..[457,13098+53])
                                                    Pexp_ident "Bytes.to_string" (utils/binutils.ml[457,13098+38]..[457,13098+53])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[457,13098+54]..[457,13098+59])
                                                        Pexp_ident "magic" (utils/binutils.ml[457,13098+54]..[457,13098+59])
                                                  ]
                                    ]
                              ]
                        ]
                        expression (utils/binutils.ml[459,13168+4]..[477,13809+35])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (utils/binutils.ml[459,13168+8]..[459,13168+15])
                                Ppat_var "bitness" (utils/binutils.ml[459,13168+8]..[459,13168+15])
                              expression (utils/binutils.ml[460,13186+6]..[462,13244+40])
                                Pexp_match
                                expression (utils/binutils.ml[460,13186+12]..[460,13186+17])
                                  Pexp_ident "magic" (utils/binutils.ml[460,13186+12]..[460,13186+17])
                                [
                                  <case>
                                    pattern (utils/binutils.ml[461,13209+8]..[461,13209+27])
                                      Ppat_or
                                      pattern (utils/binutils.ml[461,13209+8]..[461,13209+16])
                                        Ppat_construct "MH_MAGIC" (utils/binutils.ml[461,13209+8]..[461,13209+16])
                                        None
                                      pattern (utils/binutils.ml[461,13209+19]..[461,13209+27])
                                        Ppat_construct "MH_CIGAM" (utils/binutils.ml[461,13209+19]..[461,13209+27])
                                        None
                                    expression (utils/binutils.ml[461,13209+31]..[461,13209+34])
                                      Pexp_construct "B32" (utils/binutils.ml[461,13209+31]..[461,13209+34])
                                      None
                                  <case>
                                    pattern (utils/binutils.ml[462,13244+8]..[462,13244+33])
                                      Ppat_or
                                      pattern (utils/binutils.ml[462,13244+8]..[462,13244+19])
                                        Ppat_construct "MH_MAGIC_64" (utils/binutils.ml[462,13244+8]..[462,13244+19])
                                        None
                                      pattern (utils/binutils.ml[462,13244+22]..[462,13244+33])
                                        Ppat_construct "MH_CIGAM_64" (utils/binutils.ml[462,13244+22]..[462,13244+33])
                                        None
                                    expression (utils/binutils.ml[462,13244+37]..[462,13244+40])
                                      Pexp_construct "B64" (utils/binutils.ml[462,13244+37]..[462,13244+40])
                                      None
                                ]
                          ]
                          expression (utils/binutils.ml[464,13292+4]..[477,13809+35])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (utils/binutils.ml[464,13292+8]..[464,13292+18])
                                  Ppat_var "endianness" (utils/binutils.ml[464,13292+8]..[464,13292+18])
                                expression (utils/binutils.ml[465,13313+6]..[469,13476+45])
                                  Pexp_match
                                  expression (utils/binutils.ml[465,13313+12]..[465,13313+33])
                                    Pexp_tuple
                                    [
                                      expression (utils/binutils.ml[465,13313+12]..[465,13313+17])
                                        Pexp_ident "magic" (utils/binutils.ml[465,13313+12]..[465,13313+17])
                                      expression (utils/binutils.ml[465,13313+19]..[465,13313+33])
                                        Pexp_ident "Sys.big_endian" (utils/binutils.ml[465,13313+19]..[465,13313+33])
                                    ]
                                  [
                                    <case>
                                      pattern (utils/binutils.ml[466,13352+8]..[467,13392+38])
                                        Ppat_or
                                        pattern (utils/binutils.ml[466,13352+8]..[466,13352+39])
                                          Ppat_tuple
                                          [
                                            pattern (utils/binutils.ml[466,13352+8]..[466,13352+32])
                                              Ppat_or
                                              pattern (utils/binutils.ml[466,13352+9]..[466,13352+17])
                                                Ppat_construct "MH_MAGIC" (utils/binutils.ml[466,13352+9]..[466,13352+17])
                                                None
                                              pattern (utils/binutils.ml[466,13352+20]..[466,13352+31])
                                                Ppat_construct "MH_MAGIC_64" (utils/binutils.ml[466,13352+20]..[466,13352+31])
                                                None
                                            pattern (utils/binutils.ml[466,13352+34]..[466,13352+39])
                                              Ppat_construct "false" (utils/binutils.ml[466,13352+34]..[466,13352+39])
                                              None
                                          ]
                                        pattern (utils/binutils.ml[467,13392+8]..[467,13392+38])
                                          Ppat_tuple
                                          [
                                            pattern (utils/binutils.ml[467,13392+8]..[467,13392+32])
                                              Ppat_or
                                              pattern (utils/binutils.ml[467,13392+9]..[467,13392+17])
                                                Ppat_construct "MH_CIGAM" (utils/binutils.ml[467,13392+9]..[467,13392+17])
                                                None
                                              pattern (utils/binutils.ml[467,13392+20]..[467,13392+31])
                                                Ppat_construct "MH_CIGAM_64" (utils/binutils.ml[467,13392+20]..[467,13392+31])
                                                None
                                            pattern (utils/binutils.ml[467,13392+34]..[467,13392+38])
                                              Ppat_construct "true" (utils/binutils.ml[467,13392+34]..[467,13392+38])
                                              None
                                          ]
                                      expression (utils/binutils.ml[467,13392+42]..[467,13392+44])
                                        Pexp_construct "LE" (utils/binutils.ml[467,13392+42]..[467,13392+44])
                                        None
                                    <case>
                                      pattern (utils/binutils.ml[468,13437+8]..[469,13476+39])
                                        Ppat_or
                                        pattern (utils/binutils.ml[468,13437+8]..[468,13437+38])
                                          Ppat_tuple
                                          [
                                            pattern (utils/binutils.ml[468,13437+8]..[468,13437+32])
                                              Ppat_or
                                              pattern (utils/binutils.ml[468,13437+9]..[468,13437+17])
                                                Ppat_construct "MH_MAGIC" (utils/binutils.ml[468,13437+9]..[468,13437+17])
                                                None
                                              pattern (utils/binutils.ml[468,13437+20]..[468,13437+31])
                                                Ppat_construct "MH_MAGIC_64" (utils/binutils.ml[468,13437+20]..[468,13437+31])
                                                None
                                            pattern (utils/binutils.ml[468,13437+34]..[468,13437+38])
                                              Ppat_construct "true" (utils/binutils.ml[468,13437+34]..[468,13437+38])
                                              None
                                          ]
                                        pattern (utils/binutils.ml[469,13476+8]..[469,13476+39])
                                          Ppat_tuple
                                          [
                                            pattern (utils/binutils.ml[469,13476+8]..[469,13476+32])
                                              Ppat_or
                                              pattern (utils/binutils.ml[469,13476+9]..[469,13476+17])
                                                Ppat_construct "MH_CIGAM" (utils/binutils.ml[469,13476+9]..[469,13476+17])
                                                None
                                              pattern (utils/binutils.ml[469,13476+20]..[469,13476+31])
                                                Ppat_construct "MH_CIGAM_64" (utils/binutils.ml[469,13476+20]..[469,13476+31])
                                                None
                                            pattern (utils/binutils.ml[469,13476+34]..[469,13476+39])
                                              Ppat_construct "false" (utils/binutils.ml[469,13476+34]..[469,13476+39])
                                              None
                                          ]
                                      expression (utils/binutils.ml[469,13476+43]..[469,13476+45])
                                        Pexp_construct "BE" (utils/binutils.ml[469,13476+43]..[469,13476+45])
                                        None
                                  ]
                            ]
                            expression (utils/binutils.ml[471,13529+4]..[477,13809+35])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (utils/binutils.ml[471,13529+8]..[471,13529+9])
                                    Ppat_var "d" (utils/binutils.ml[471,13529+8]..[471,13529+9])
                                  expression (utils/binutils.ml[471,13529+12]..[471,13529+37])
                                    Pexp_record
                                    [
                                      "ic" (utils/binutils.ml[471,13529+13]..[471,13529+15]) ghost
                                        expression (utils/binutils.ml[471,13529+13]..[471,13529+15])
                                          Pexp_ident "ic" (utils/binutils.ml[471,13529+13]..[471,13529+15])
                                      "endianness" (utils/binutils.ml[471,13529+17]..[471,13529+27]) ghost
                                        expression (utils/binutils.ml[471,13529+17]..[471,13529+27])
                                          Pexp_ident "endianness" (utils/binutils.ml[471,13529+17]..[471,13529+27])
                                      "bitness" (utils/binutils.ml[471,13529+29]..[471,13529+36]) ghost
                                        expression (utils/binutils.ml[471,13529+29]..[471,13529+36])
                                          Pexp_ident "bitness" (utils/binutils.ml[471,13529+29]..[471,13529+36])
                                    ]
                                    None
                              ]
                              expression (utils/binutils.ml[472,13570+4]..[477,13809+35])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (utils/binutils.ml[472,13570+8]..[472,13570+14])
                                      Ppat_var "header" (utils/binutils.ml[472,13570+8]..[472,13570+14])
                                    expression (utils/binutils.ml[472,13570+17]..[472,13570+30])
                                      Pexp_apply
                                      expression (utils/binutils.ml[472,13570+17]..[472,13570+28])
                                        Pexp_ident "read_header" (utils/binutils.ml[472,13570+17]..[472,13570+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[472,13570+29]..[472,13570+30])
                                            Pexp_ident "d" (utils/binutils.ml[472,13570+29]..[472,13570+30])
                                      ]
                                ]
                                expression (utils/binutils.ml[473,13604+4]..[477,13809+35])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (utils/binutils.ml[473,13604+8]..[473,13604+21])
                                        Ppat_var "load_commands" (utils/binutils.ml[473,13604+8]..[473,13604+21])
                                      expression (utils/binutils.ml[473,13604+24]..[473,13604+51])
                                        Pexp_apply
                                        expression (utils/binutils.ml[473,13604+24]..[473,13604+42])
                                          Pexp_ident "read_load_commands" (utils/binutils.ml[473,13604+24]..[473,13604+42])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[473,13604+43]..[473,13604+44])
                                              Pexp_ident "d" (utils/binutils.ml[473,13604+43]..[473,13604+44])
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[473,13604+45]..[473,13604+51])
                                              Pexp_ident "header" (utils/binutils.ml[473,13604+45]..[473,13604+51])
                                        ]
                                  ]
                                  expression (utils/binutils.ml[474,13659+4]..[477,13809+35])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (utils/binutils.ml[474,13659+8]..[474,13659+15])
                                          Ppat_var "symbols" (utils/binutils.ml[474,13659+8]..[474,13659+15])
                                        expression (utils/binutils.ml[474,13659+18]..[474,13659+46])
                                          Pexp_apply
                                          expression (utils/binutils.ml[474,13659+18]..[474,13659+30])
                                            Pexp_ident "read_symbols" (utils/binutils.ml[474,13659+18]..[474,13659+30])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[474,13659+31]..[474,13659+32])
                                                Pexp_ident "d" (utils/binutils.ml[474,13659+31]..[474,13659+32])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[474,13659+33]..[474,13659+46])
                                                Pexp_ident "load_commands" (utils/binutils.ml[474,13659+33]..[474,13659+46])
                                          ]
                                    ]
                                    expression (utils/binutils.ml[475,13709+4]..[477,13809+35])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (utils/binutils.ml[475,13709+8]..[475,13709+21])
                                            Ppat_var "symbol_offset" (utils/binutils.ml[475,13709+8]..[475,13709+21])
                                          expression (utils/binutils.ml[475,13709+24]..[475,13709+45])
                                            Pexp_apply
                                            expression (utils/binutils.ml[475,13709+24]..[475,13709+37])
                                              Pexp_ident "symbol_offset" (utils/binutils.ml[475,13709+24]..[475,13709+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/binutils.ml[475,13709+38]..[475,13709+45])
                                                  Pexp_ident "symbols" (utils/binutils.ml[475,13709+38]..[475,13709+45])
                                            ]
                                      ]
                                      expression (utils/binutils.ml[476,13758+4]..[477,13809+35])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (utils/binutils.ml[476,13758+8]..[476,13758+22])
                                              Ppat_var "defines_symbol" (utils/binutils.ml[476,13758+8]..[476,13758+22])
                                            expression (utils/binutils.ml[476,13758+25]..[476,13758+47])
                                              Pexp_apply
                                              expression (utils/binutils.ml[476,13758+25]..[476,13758+39])
                                                Pexp_ident "defines_symbol" (utils/binutils.ml[476,13758+25]..[476,13758+39])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[476,13758+40]..[476,13758+47])
                                                    Pexp_ident "symbols" (utils/binutils.ml[476,13758+40]..[476,13758+47])
                                              ]
                                        ]
                                        expression (utils/binutils.ml[477,13809+4]..[477,13809+35])
                                          Pexp_record
                                          [
                                            "symbol_offset" (utils/binutils.ml[477,13809+5]..[477,13809+18]) ghost
                                              expression (utils/binutils.ml[477,13809+5]..[477,13809+18])
                                                Pexp_ident "symbol_offset" (utils/binutils.ml[477,13809+5]..[477,13809+18])
                                            "defines_symbol" (utils/binutils.ml[477,13809+20]..[477,13809+34]) ghost
                                              expression (utils/binutils.ml[477,13809+20]..[477,13809+34])
                                                Pexp_ident "defines_symbol" (utils/binutils.ml[477,13809+20]..[477,13809+34])
                                          ]
                                          None
            ]
        ]
  structure_item (utils/binutils.ml[480,13850+0]..[650,19445+3])
    Pstr_module
    "FlexDLL" (utils/binutils.ml[480,13850+7]..[480,13850+14])
      module_expr (utils/binutils.ml[480,13850+17]..[650,19445+3])
        Pmod_structure
        [
          structure_item (utils/binutils.ml[485,13963+2]..[485,13963+22])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[485,13963+6]..[485,13963+17])
                  Ppat_var "header_size" (utils/binutils.ml[485,13963+6]..[485,13963+17])
                expression (utils/binutils.ml[485,13963+20]..[485,13963+22])
                  Pexp_constant PConst_int (24,None)
            ]
          structure_item (utils/binutils.ml[487,13987+2]..[493,14128+5])
            Pstr_type Rec
            [
              type_declaration "header" (utils/binutils.ml[487,13987+7]..[487,13987+13]) (utils/binutils.ml[487,13987+2]..[493,14128+5])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (utils/binutils.ml[489,14009+6]..[489,14009+22])
                        Immutable
                        "e_lfanew" (utils/binutils.ml[489,14009+6]..[489,14009+14])                        core_type (utils/binutils.ml[489,14009+16]..[489,14009+21])
                          Ptyp_constr "int64" (utils/binutils.ml[489,14009+16]..[489,14009+21])
                          []
                      (utils/binutils.ml[490,14032+6]..[490,14032+30])
                        Immutable
                        "number_of_sections" (utils/binutils.ml[490,14032+6]..[490,14032+24])                        core_type (utils/binutils.ml[490,14032+26]..[490,14032+29])
                          Ptyp_constr "int" (utils/binutils.ml[490,14032+26]..[490,14032+29])
                          []
                      (utils/binutils.ml[491,14063+6]..[491,14063+35])
                        Immutable
                        "size_of_optional_header" (utils/binutils.ml[491,14063+6]..[491,14063+29])                        core_type (utils/binutils.ml[491,14063+31]..[491,14063+34])
                          Ptyp_constr "int" (utils/binutils.ml[491,14063+31]..[491,14063+34])
                          []
                      (utils/binutils.ml[492,14099+6]..[492,14099+28])
                        Immutable
                        "_characteristics" (utils/binutils.ml[492,14099+6]..[492,14099+22])                        core_type (utils/binutils.ml[492,14099+24]..[492,14099+27])
                          Ptyp_constr "int" (utils/binutils.ml[492,14099+24]..[492,14099+27])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (utils/binutils.ml[495,14135+2]..[499,14328+77])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[495,14135+6]..[495,14135+17])
                  Ppat_var "read_header" (utils/binutils.ml[495,14135+6]..[495,14135+17])
                expression (utils/binutils.ml[495,14135+18]..[499,14328+77]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[495,14135+18]..[495,14135+26])
                    Ppat_var "e_lfanew" (utils/binutils.ml[495,14135+18]..[495,14135+26])
                  expression (utils/binutils.ml[495,14135+27]..[499,14328+77]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[495,14135+27]..[495,14135+28])
                      Ppat_var "d" (utils/binutils.ml[495,14135+27]..[495,14135+28])
                    expression (utils/binutils.ml[495,14135+29]..[499,14328+77]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (utils/binutils.ml[495,14135+29]..[495,14135+32])
                        Ppat_var "buf" (utils/binutils.ml[495,14135+29]..[495,14135+32])
                      expression (utils/binutils.ml[496,14170+4]..[499,14328+77])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (utils/binutils.ml[496,14170+8]..[496,14170+26])
                              Ppat_var "number_of_sections" (utils/binutils.ml[496,14170+8]..[496,14170+26])
                            expression (utils/binutils.ml[496,14170+29]..[496,14170+47])
                              Pexp_apply
                              expression (utils/binutils.ml[496,14170+29]..[496,14170+39])
                                Pexp_ident "get_uint16" (utils/binutils.ml[496,14170+29]..[496,14170+39])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[496,14170+40]..[496,14170+41])
                                    Pexp_ident "d" (utils/binutils.ml[496,14170+40]..[496,14170+41])
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[496,14170+42]..[496,14170+45])
                                    Pexp_ident "buf" (utils/binutils.ml[496,14170+42]..[496,14170+45])
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[496,14170+46]..[496,14170+47])
                                    Pexp_constant PConst_int (6,None)
                              ]
                        ]
                        expression (utils/binutils.ml[497,14221+4]..[499,14328+77])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (utils/binutils.ml[497,14221+8]..[497,14221+31])
                                Ppat_var "size_of_optional_header" (utils/binutils.ml[497,14221+8]..[497,14221+31])
                              expression (utils/binutils.ml[497,14221+34]..[497,14221+53])
                                Pexp_apply
                                expression (utils/binutils.ml[497,14221+34]..[497,14221+44])
                                  Pexp_ident "get_uint16" (utils/binutils.ml[497,14221+34]..[497,14221+44])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[497,14221+45]..[497,14221+46])
                                      Pexp_ident "d" (utils/binutils.ml[497,14221+45]..[497,14221+46])
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[497,14221+47]..[497,14221+50])
                                      Pexp_ident "buf" (utils/binutils.ml[497,14221+47]..[497,14221+50])
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[497,14221+51]..[497,14221+53])
                                      Pexp_constant PConst_int (20,None)
                                ]
                          ]
                          expression (utils/binutils.ml[498,14278+4]..[499,14328+77])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (utils/binutils.ml[498,14278+8]..[498,14278+24])
                                  Ppat_var "_characteristics" (utils/binutils.ml[498,14278+8]..[498,14278+24])
                                expression (utils/binutils.ml[498,14278+27]..[498,14278+46])
                                  Pexp_apply
                                  expression (utils/binutils.ml[498,14278+27]..[498,14278+37])
                                    Pexp_ident "get_uint16" (utils/binutils.ml[498,14278+27]..[498,14278+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[498,14278+38]..[498,14278+39])
                                        Pexp_ident "d" (utils/binutils.ml[498,14278+38]..[498,14278+39])
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[498,14278+40]..[498,14278+43])
                                        Pexp_ident "buf" (utils/binutils.ml[498,14278+40]..[498,14278+43])
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[498,14278+44]..[498,14278+46])
                                        Pexp_constant PConst_int (22,None)
                                  ]
                            ]
                            expression (utils/binutils.ml[499,14328+4]..[499,14328+77])
                              Pexp_record
                              [
                                "e_lfanew" (utils/binutils.ml[499,14328+5]..[499,14328+13]) ghost
                                  expression (utils/binutils.ml[499,14328+5]..[499,14328+13])
                                    Pexp_ident "e_lfanew" (utils/binutils.ml[499,14328+5]..[499,14328+13])
                                "number_of_sections" (utils/binutils.ml[499,14328+15]..[499,14328+33]) ghost
                                  expression (utils/binutils.ml[499,14328+15]..[499,14328+33])
                                    Pexp_ident "number_of_sections" (utils/binutils.ml[499,14328+15]..[499,14328+33])
                                "size_of_optional_header" (utils/binutils.ml[499,14328+35]..[499,14328+58]) ghost
                                  expression (utils/binutils.ml[499,14328+35]..[499,14328+58])
                                    Pexp_ident "size_of_optional_header" (utils/binutils.ml[499,14328+35]..[499,14328+58])
                                "_characteristics" (utils/binutils.ml[499,14328+60]..[499,14328+76]) ghost
                                  expression (utils/binutils.ml[499,14328+60]..[499,14328+76])
                                    Pexp_ident "_characteristics" (utils/binutils.ml[499,14328+60]..[499,14328+76])
                              ]
                              None
            ]
          structure_item (utils/binutils.ml[501,14407+2]..[503,14449+14])
            Pstr_type Rec
            [
              type_declaration "optional_header_magic" (utils/binutils.ml[501,14407+7]..[501,14407+28]) (utils/binutils.ml[501,14407+2]..[503,14449+14])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (utils/binutils.ml[502,14438+4]..[502,14438+10])
                        "PE32" (utils/binutils.ml[502,14438+6]..[502,14438+10])
                        []
                        None
                      (utils/binutils.ml[503,14449+4]..[503,14449+14])
                        "PE32PLUS" (utils/binutils.ml[503,14449+6]..[503,14449+14])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (utils/binutils.ml[505,14465+2]..[509,14558+5])
            Pstr_type Rec
            [
              type_declaration "optional_header" (utils/binutils.ml[505,14465+7]..[505,14465+22]) (utils/binutils.ml[505,14465+2]..[509,14558+5])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (utils/binutils.ml[507,14496+6]..[507,14496+36])
                        Immutable
                        "_magic" (utils/binutils.ml[507,14496+6]..[507,14496+12])                        core_type (utils/binutils.ml[507,14496+14]..[507,14496+35])
                          Ptyp_constr "optional_header_magic" (utils/binutils.ml[507,14496+14]..[507,14496+35])
                          []
                      (utils/binutils.ml[508,14533+6]..[508,14533+24])
                        Immutable
                        "image_base" (utils/binutils.ml[508,14533+6]..[508,14533+16])                        core_type (utils/binutils.ml[508,14533+18]..[508,14533+23])
                          Ptyp_constr "int64" (utils/binutils.ml[508,14533+18]..[508,14533+23])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (utils/binutils.ml[511,14565+2]..[525,15124+24])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[511,14565+6]..[511,14565+26])
                  Ppat_var "read_optional_header" (utils/binutils.ml[511,14565+6]..[511,14565+26])
                expression (utils/binutils.ml[511,14565+27]..[525,15124+24]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[511,14565+27]..[511,14565+28])
                    Ppat_var "d" (utils/binutils.ml[511,14565+27]..[511,14565+28])
                  expression (utils/binutils.ml[511,14565+29]..[525,15124+24]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[511,14565+29]..[511,14565+67])
                      Ppat_record Open
                      [
                        "e_lfanew" (utils/binutils.ml[511,14565+30]..[511,14565+38]) ghost
                          pattern (utils/binutils.ml[511,14565+30]..[511,14565+38])
                            Ppat_var "e_lfanew" (utils/binutils.ml[511,14565+30]..[511,14565+38])
                        "size_of_optional_header" (utils/binutils.ml[511,14565+40]..[511,14565+63]) ghost
                          pattern (utils/binutils.ml[511,14565+40]..[511,14565+63])
                            Ppat_var "size_of_optional_header" (utils/binutils.ml[511,14565+40]..[511,14565+63])
                      ]
                    expression (utils/binutils.ml[512,14635+4]..[525,15124+24])
                      Pexp_sequence
                      expression (utils/binutils.ml[512,14635+4]..[513,14675+59])
                        Pexp_ifthenelse
                        expression (utils/binutils.ml[512,14635+7]..[512,14635+34])
                          Pexp_apply
                          expression (utils/binutils.ml[512,14635+31]..[512,14635+32])
                            Pexp_ident "=" (utils/binutils.ml[512,14635+31]..[512,14635+32])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[512,14635+7]..[512,14635+30])
                                Pexp_ident "size_of_optional_header" (utils/binutils.ml[512,14635+7]..[512,14635+30])
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[512,14635+33]..[512,14635+34])
                                Pexp_constant PConst_int (0,None)
                          ]
                        expression (utils/binutils.ml[513,14675+6]..[513,14675+59])
                          Pexp_apply
                          expression (utils/binutils.ml[513,14675+6]..[513,14675+11])
                            Pexp_ident "raise" (utils/binutils.ml[513,14675+6]..[513,14675+11])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[513,14675+12]..[513,14675+59])
                                Pexp_construct "Error" (utils/binutils.ml[513,14675+13]..[513,14675+18])
                                Some
                                  expression (utils/binutils.ml[513,14675+19]..[513,14675+58])
                                    Pexp_construct "Unrecognized" (utils/binutils.ml[513,14675+20]..[513,14675+32])
                                    Some
                                      expression (utils/binutils.ml[513,14675+33]..[513,14675+57])
                                        Pexp_constant PConst_string("SizeOfOptionalHeader=0",(utils/binutils.ml[513,14675+34]..[513,14675+56]),None)
                          ]
                        None
                      expression (utils/binutils.ml[514,14736+4]..[525,15124+24])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (utils/binutils.ml[514,14736+8]..[514,14736+11])
                              Ppat_var "buf" (utils/binutils.ml[514,14736+8]..[514,14736+11])
                            expression (utils/binutils.ml[515,14750+6]..[516,14811+31])
                              Pexp_apply
                              expression (utils/binutils.ml[515,14750+6]..[515,14750+16])
                                Pexp_ident "load_bytes" (utils/binutils.ml[515,14750+6]..[515,14750+16])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[515,14750+17]..[515,14750+18])
                                    Pexp_ident "d" (utils/binutils.ml[515,14750+17]..[515,14750+18])
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[515,14750+19]..[515,14750+60])
                                    Pexp_open Fresh
                                    module_expr (utils/binutils.ml[515,14750+19]..[515,14750+24])
                                      Pmod_ident "Int64" (utils/binutils.ml[515,14750+19]..[515,14750+24])
                                    expression (utils/binutils.ml[515,14750+26]..[515,14750+59])
                                      Pexp_apply
                                      expression (utils/binutils.ml[515,14750+26]..[515,14750+29])
                                        Pexp_ident "add" (utils/binutils.ml[515,14750+26]..[515,14750+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[515,14750+30]..[515,14750+38])
                                            Pexp_ident "e_lfanew" (utils/binutils.ml[515,14750+30]..[515,14750+38])
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[515,14750+39]..[515,14750+59])
                                            Pexp_apply
                                            expression (utils/binutils.ml[515,14750+40]..[515,14750+46])
                                              Pexp_ident "of_int" (utils/binutils.ml[515,14750+40]..[515,14750+46])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/binutils.ml[515,14750+47]..[515,14750+58])
                                                  Pexp_ident "header_size" (utils/binutils.ml[515,14750+47]..[515,14750+58])
                                            ]
                                      ]
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[516,14811+8]..[516,14811+31])
                                    Pexp_ident "size_of_optional_header" (utils/binutils.ml[516,14811+8]..[516,14811+31])
                              ]
                        ]
                        expression (utils/binutils.ml[518,14850+4]..[525,15124+24])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (utils/binutils.ml[518,14850+8]..[518,14850+26])
                                Ppat_tuple
                                [
                                  pattern (utils/binutils.ml[518,14850+8]..[518,14850+14])
                                    Ppat_var "_magic" (utils/binutils.ml[518,14850+8]..[518,14850+14])
                                  pattern (utils/binutils.ml[518,14850+16]..[518,14850+26])
                                    Ppat_var "image_base" (utils/binutils.ml[518,14850+16]..[518,14850+26])
                                ]
                              expression (utils/binutils.ml[519,14879+6]..[523,15037+79])
                                Pexp_match
                                expression (utils/binutils.ml[519,14879+12]..[519,14879+30])
                                  Pexp_apply
                                  expression (utils/binutils.ml[519,14879+12]..[519,14879+22])
                                    Pexp_ident "get_uint16" (utils/binutils.ml[519,14879+12]..[519,14879+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[519,14879+23]..[519,14879+24])
                                        Pexp_ident "d" (utils/binutils.ml[519,14879+23]..[519,14879+24])
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[519,14879+25]..[519,14879+28])
                                        Pexp_ident "buf" (utils/binutils.ml[519,14879+25]..[519,14879+28])
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[519,14879+29]..[519,14879+30])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                                [
                                  <case>
                                    pattern (utils/binutils.ml[520,14915+8]..[520,14915+13])
                                      Ppat_constant PConst_int (0x10b,None)
                                    expression (utils/binutils.ml[520,14915+17]..[520,14915+61])
                                      Pexp_tuple
                                      [
                                        expression (utils/binutils.ml[520,14915+17]..[520,14915+21])
                                          Pexp_construct "PE32" (utils/binutils.ml[520,14915+17]..[520,14915+21])
                                          None
                                        expression (utils/binutils.ml[520,14915+23]..[520,14915+61])
                                          Pexp_apply
                                          expression (utils/binutils.ml[520,14915+23]..[520,14915+39])
                                            Pexp_ident "uint64_of_uint32" (utils/binutils.ml[520,14915+23]..[520,14915+39])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[520,14915+40]..[520,14915+61])
                                                Pexp_apply
                                                expression (utils/binutils.ml[520,14915+41]..[520,14915+51])
                                                  Pexp_ident "get_uint32" (utils/binutils.ml[520,14915+41]..[520,14915+51])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[520,14915+52]..[520,14915+53])
                                                      Pexp_ident "d" (utils/binutils.ml[520,14915+52]..[520,14915+53])
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[520,14915+54]..[520,14915+57])
                                                      Pexp_ident "buf" (utils/binutils.ml[520,14915+54]..[520,14915+57])
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[520,14915+58]..[520,14915+60])
                                                      Pexp_constant PConst_int (28,None)
                                                ]
                                          ]
                                      ]
                                  <case>
                                    pattern (utils/binutils.ml[521,14977+8]..[521,14977+13])
                                      Ppat_constant PConst_int (0x20b,None)
                                    expression (utils/binutils.ml[521,14977+17]..[521,14977+46])
                                      Pexp_tuple
                                      [
                                        expression (utils/binutils.ml[521,14977+17]..[521,14977+25])
                                          Pexp_construct "PE32PLUS" (utils/binutils.ml[521,14977+17]..[521,14977+25])
                                          None
                                        expression (utils/binutils.ml[521,14977+27]..[521,14977+46])
                                          Pexp_apply
                                          expression (utils/binutils.ml[521,14977+27]..[521,14977+37])
                                            Pexp_ident "get_uint64" (utils/binutils.ml[521,14977+27]..[521,14977+37])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[521,14977+38]..[521,14977+39])
                                                Pexp_ident "d" (utils/binutils.ml[521,14977+38]..[521,14977+39])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[521,14977+40]..[521,14977+43])
                                                Pexp_ident "buf" (utils/binutils.ml[521,14977+40]..[521,14977+43])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[521,14977+44]..[521,14977+46])
                                                Pexp_constant PConst_int (24,None)
                                          ]
                                      ]
                                  <case>
                                    pattern (utils/binutils.ml[522,15024+8]..[522,15024+9])
                                      Ppat_var "n" (utils/binutils.ml[522,15024+8]..[522,15024+9])
                                    expression (utils/binutils.ml[523,15037+10]..[523,15037+79])
                                      Pexp_apply
                                      expression (utils/binutils.ml[523,15037+10]..[523,15037+15])
                                        Pexp_ident "raise" (utils/binutils.ml[523,15037+10]..[523,15037+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[523,15037+16]..[523,15037+79])
                                            Pexp_construct "Error" (utils/binutils.ml[523,15037+17]..[523,15037+22])
                                            Some
                                              expression (utils/binutils.ml[523,15037+23]..[523,15037+78])
                                                Pexp_construct "Unsupported" (utils/binutils.ml[523,15037+24]..[523,15037+35])
                                                Some
                                                  expression (utils/binutils.ml[523,15037+36]..[523,15037+77])
                                                    Pexp_tuple
                                                    [
                                                      expression (utils/binutils.ml[523,15037+37]..[523,15037+60])
                                                        Pexp_constant PConst_string("optional_header_magic",(utils/binutils.ml[523,15037+38]..[523,15037+59]),None)
                                                      expression (utils/binutils.ml[523,15037+62]..[523,15037+76])
                                                        Pexp_apply
                                                        expression (utils/binutils.ml[523,15037+62]..[523,15037+74])
                                                          Pexp_ident "Int64.of_int" (utils/binutils.ml[523,15037+62]..[523,15037+74])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[523,15037+75]..[523,15037+76])
                                                              Pexp_ident "n" (utils/binutils.ml[523,15037+75]..[523,15037+76])
                                                        ]
                                                    ]
                                      ]
                                ]
                          ]
                          expression (utils/binutils.ml[525,15124+4]..[525,15124+24])
                            Pexp_record
                            [
                              "_magic" (utils/binutils.ml[525,15124+5]..[525,15124+11]) ghost
                                expression (utils/binutils.ml[525,15124+5]..[525,15124+11])
                                  Pexp_ident "_magic" (utils/binutils.ml[525,15124+5]..[525,15124+11])
                              "image_base" (utils/binutils.ml[525,15124+13]..[525,15124+23]) ghost
                                expression (utils/binutils.ml[525,15124+13]..[525,15124+23])
                                  Pexp_ident "image_base" (utils/binutils.ml[525,15124+13]..[525,15124+23])
                            ]
                            None
            ]
          structure_item (utils/binutils.ml[527,15150+2]..[534,15312+5])
            Pstr_type Rec
            [
              type_declaration "section" (utils/binutils.ml[527,15150+7]..[527,15150+14]) (utils/binutils.ml[527,15150+2]..[534,15312+5])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (utils/binutils.ml[529,15173+6]..[529,15173+19])
                        Immutable
                        "name" (utils/binutils.ml[529,15173+6]..[529,15173+10])                        core_type (utils/binutils.ml[529,15173+12]..[529,15173+18])
                          Ptyp_constr "string" (utils/binutils.ml[529,15173+12]..[529,15173+18])
                          []
                      (utils/binutils.ml[530,15193+6]..[530,15193+25])
                        Immutable
                        "_virtual_size" (utils/binutils.ml[530,15193+6]..[530,15193+19])                        core_type (utils/binutils.ml[530,15193+21]..[530,15193+24])
                          Ptyp_constr "int" (utils/binutils.ml[530,15193+21]..[530,15193+24])
                          []
                      (utils/binutils.ml[531,15219+6]..[531,15219+29])
                        Immutable
                        "virtual_address" (utils/binutils.ml[531,15219+6]..[531,15219+21])                        core_type (utils/binutils.ml[531,15219+23]..[531,15219+28])
                          Ptyp_constr "int64" (utils/binutils.ml[531,15219+23]..[531,15219+28])
                          []
                      (utils/binutils.ml[532,15249+6]..[532,15249+28])
                        Immutable
                        "size_of_raw_data" (utils/binutils.ml[532,15249+6]..[532,15249+22])                        core_type (utils/binutils.ml[532,15249+24]..[532,15249+27])
                          Ptyp_constr "int" (utils/binutils.ml[532,15249+24]..[532,15249+27])
                          []
                      (utils/binutils.ml[533,15278+6]..[533,15278+33])
                        Immutable
                        "pointer_to_raw_data" (utils/binutils.ml[533,15278+6]..[533,15278+25])                        core_type (utils/binutils.ml[533,15278+27]..[533,15278+32])
                          Ptyp_constr "int64" (utils/binutils.ml[533,15278+27]..[533,15278+32])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (utils/binutils.ml[536,15319+2]..[536,15319+30])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[536,15319+6]..[536,15319+25])
                  Ppat_var "section_header_size" (utils/binutils.ml[536,15319+6]..[536,15319+25])
                expression (utils/binutils.ml[536,15319+28]..[536,15319+30])
                  Pexp_constant PConst_int (40,None)
            ]
          structure_item (utils/binutils.ml[538,15351+2]..[556,16138+36])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[538,15351+6]..[538,15351+19])
                  Ppat_var "read_sections" (utils/binutils.ml[538,15351+6]..[538,15351+19])
                expression (utils/binutils.ml[538,15351+20]..[556,16138+36]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[538,15351+20]..[538,15351+21])
                    Ppat_var "d" (utils/binutils.ml[538,15351+20]..[538,15351+21])
                  expression (utils/binutils.ml[539,15373+6]..[556,16138+36]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[539,15373+6]..[539,15373+64])
                      Ppat_record Open
                      [
                        "e_lfanew" (utils/binutils.ml[539,15373+7]..[539,15373+15]) ghost
                          pattern (utils/binutils.ml[539,15373+7]..[539,15373+15])
                            Ppat_var "e_lfanew" (utils/binutils.ml[539,15373+7]..[539,15373+15])
                        "number_of_sections" (utils/binutils.ml[539,15373+17]..[539,15373+35]) ghost
                          pattern (utils/binutils.ml[539,15373+17]..[539,15373+35])
                            Ppat_var "number_of_sections" (utils/binutils.ml[539,15373+17]..[539,15373+35])
                        "size_of_optional_header" (utils/binutils.ml[539,15373+37]..[539,15373+60]) ghost
                          pattern (utils/binutils.ml[539,15373+37]..[539,15373+60])
                            Ppat_var "size_of_optional_header" (utils/binutils.ml[539,15373+37]..[539,15373+60])
                      ]
                    expression (utils/binutils.ml[540,15440+4]..[556,16138+36])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (utils/binutils.ml[540,15440+8]..[540,15440+11])
                            Ppat_var "buf" (utils/binutils.ml[540,15440+8]..[540,15440+11])
                          expression (utils/binutils.ml[541,15454+6]..[543,15551+50])
                            Pexp_apply
                            expression (utils/binutils.ml[541,15454+6]..[541,15454+16])
                              Pexp_ident "load_bytes" (utils/binutils.ml[541,15454+6]..[541,15454+16])
                            [
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[541,15454+17]..[541,15454+18])
                                  Pexp_ident "d" (utils/binutils.ml[541,15454+17]..[541,15454+18])
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[542,15473+8]..[542,15473+77])
                                  Pexp_open Fresh
                                  module_expr (utils/binutils.ml[542,15473+8]..[542,15473+13])
                                    Pmod_ident "Int64" (utils/binutils.ml[542,15473+8]..[542,15473+13])
                                  expression (utils/binutils.ml[542,15473+15]..[542,15473+76])
                                    Pexp_apply
                                    expression (utils/binutils.ml[542,15473+15]..[542,15473+18])
                                      Pexp_ident "add" (utils/binutils.ml[542,15473+15]..[542,15473+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[542,15473+19]..[542,15473+27])
                                          Pexp_ident "e_lfanew" (utils/binutils.ml[542,15473+19]..[542,15473+27])
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[542,15473+28]..[542,15473+76])
                                          Pexp_apply
                                          expression (utils/binutils.ml[542,15473+29]..[542,15473+35])
                                            Pexp_ident "of_int" (utils/binutils.ml[542,15473+29]..[542,15473+35])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[542,15473+36]..[542,15473+75])
                                                Pexp_apply
                                                expression (utils/binutils.ml[542,15473+49]..[542,15473+50])
                                                  Pexp_ident "+" (utils/binutils.ml[542,15473+49]..[542,15473+50])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[542,15473+37]..[542,15473+48])
                                                      Pexp_ident "header_size" (utils/binutils.ml[542,15473+37]..[542,15473+48])
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[542,15473+51]..[542,15473+74])
                                                      Pexp_ident "size_of_optional_header" (utils/binutils.ml[542,15473+51]..[542,15473+74])
                                                ]
                                          ]
                                    ]
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[543,15551+8]..[543,15551+50])
                                  Pexp_apply
                                  expression (utils/binutils.ml[543,15551+28]..[543,15551+29])
                                    Pexp_ident "*" (utils/binutils.ml[543,15551+28]..[543,15551+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[543,15551+9]..[543,15551+27])
                                        Pexp_ident "number_of_sections" (utils/binutils.ml[543,15551+9]..[543,15551+27])
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[543,15551+30]..[543,15551+49])
                                        Pexp_ident "section_header_size" (utils/binutils.ml[543,15551+30]..[543,15551+49])
                                  ]
                            ]
                      ]
                      expression (utils/binutils.ml[545,15609+4]..[556,16138+36])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (utils/binutils.ml[545,15609+8]..[545,15609+10])
                              Ppat_var "mk" (utils/binutils.ml[545,15609+8]..[545,15609+10])
                            expression (utils/binutils.ml[545,15609+11]..[554,16085+45]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (utils/binutils.ml[545,15609+11]..[545,15609+12])
                                Ppat_var "i" (utils/binutils.ml[545,15609+11]..[545,15609+12])
                              expression (utils/binutils.ml[546,15624+6]..[554,16085+45])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (utils/binutils.ml[546,15624+10]..[546,15624+14])
                                      Ppat_var "base" (utils/binutils.ml[546,15624+10]..[546,15624+14])
                                    expression (utils/binutils.ml[546,15624+17]..[546,15624+40])
                                      Pexp_apply
                                      expression (utils/binutils.ml[546,15624+19]..[546,15624+20])
                                        Pexp_ident "*" (utils/binutils.ml[546,15624+19]..[546,15624+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[546,15624+17]..[546,15624+18])
                                            Pexp_ident "i" (utils/binutils.ml[546,15624+17]..[546,15624+18])
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[546,15624+21]..[546,15624+40])
                                            Pexp_ident "section_header_size" (utils/binutils.ml[546,15624+21]..[546,15624+40])
                                      ]
                                ]
                                expression (utils/binutils.ml[547,15668+6]..[554,16085+45])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (utils/binutils.ml[547,15668+10]..[547,15668+14])
                                        Ppat_var "name" (utils/binutils.ml[547,15668+10]..[547,15668+14])
                                      expression (utils/binutils.ml[547,15668+17]..[547,15668+50])
                                        Pexp_apply
                                        expression (utils/binutils.ml[547,15668+17]..[547,15668+24])
                                          Pexp_ident "name_at" (utils/binutils.ml[547,15668+17]..[547,15668+24])
                                        [
                                          <arg>
                                          Labelled "max_len"
                                            expression (utils/binutils.ml[547,15668+34]..[547,15668+35])
                                              Pexp_constant PConst_int (8,None)
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[547,15668+36]..[547,15668+39])
                                              Pexp_ident "buf" (utils/binutils.ml[547,15668+36]..[547,15668+39])
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[547,15668+40]..[547,15668+50])
                                              Pexp_apply
                                              expression (utils/binutils.ml[547,15668+46]..[547,15668+47])
                                                Pexp_ident "+" (utils/binutils.ml[547,15668+46]..[547,15668+47])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[547,15668+41]..[547,15668+45])
                                                    Pexp_ident "base" (utils/binutils.ml[547,15668+41]..[547,15668+45])
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[547,15668+48]..[547,15668+49])
                                                    Pexp_constant PConst_int (0,None)
                                              ]
                                        ]
                                  ]
                                  expression (utils/binutils.ml[548,15722+6]..[554,16085+45])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (utils/binutils.ml[548,15722+10]..[548,15722+23])
                                          Ppat_var "_virtual_size" (utils/binutils.ml[548,15722+10]..[548,15722+23])
                                        expression (utils/binutils.ml[548,15722+26]..[548,15722+66])
                                          Pexp_apply
                                          expression (utils/binutils.ml[548,15722+26]..[548,15722+34])
                                            Pexp_ident "get_uint" (utils/binutils.ml[548,15722+26]..[548,15722+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[548,15722+35]..[548,15722+49])
                                                Pexp_constant PConst_string("virtual_size",(utils/binutils.ml[548,15722+36]..[548,15722+48]),None)
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[548,15722+50]..[548,15722+51])
                                                Pexp_ident "d" (utils/binutils.ml[548,15722+50]..[548,15722+51])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[548,15722+52]..[548,15722+55])
                                                Pexp_ident "buf" (utils/binutils.ml[548,15722+52]..[548,15722+55])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[548,15722+56]..[548,15722+66])
                                                Pexp_apply
                                                expression (utils/binutils.ml[548,15722+62]..[548,15722+63])
                                                  Pexp_ident "+" (utils/binutils.ml[548,15722+62]..[548,15722+63])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[548,15722+57]..[548,15722+61])
                                                      Pexp_ident "base" (utils/binutils.ml[548,15722+57]..[548,15722+61])
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[548,15722+64]..[548,15722+65])
                                                      Pexp_constant PConst_int (8,None)
                                                ]
                                          ]
                                    ]
                                    expression (utils/binutils.ml[549,15792+6]..[554,16085+45])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (utils/binutils.ml[549,15792+10]..[549,15792+25])
                                            Ppat_var "virtual_address" (utils/binutils.ml[549,15792+10]..[549,15792+25])
                                          expression (utils/binutils.ml[549,15792+28]..[549,15792+75])
                                            Pexp_apply
                                            expression (utils/binutils.ml[549,15792+28]..[549,15792+44])
                                              Pexp_ident "uint64_of_uint32" (utils/binutils.ml[549,15792+28]..[549,15792+44])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/binutils.ml[549,15792+45]..[549,15792+75])
                                                  Pexp_apply
                                                  expression (utils/binutils.ml[549,15792+46]..[549,15792+56])
                                                    Pexp_ident "get_uint32" (utils/binutils.ml[549,15792+46]..[549,15792+56])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[549,15792+57]..[549,15792+58])
                                                        Pexp_ident "d" (utils/binutils.ml[549,15792+57]..[549,15792+58])
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[549,15792+59]..[549,15792+62])
                                                        Pexp_ident "buf" (utils/binutils.ml[549,15792+59]..[549,15792+62])
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[549,15792+63]..[549,15792+74])
                                                        Pexp_apply
                                                        expression (utils/binutils.ml[549,15792+69]..[549,15792+70])
                                                          Pexp_ident "+" (utils/binutils.ml[549,15792+69]..[549,15792+70])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[549,15792+64]..[549,15792+68])
                                                              Pexp_ident "base" (utils/binutils.ml[549,15792+64]..[549,15792+68])
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[549,15792+71]..[549,15792+73])
                                                              Pexp_constant PConst_int (12,None)
                                                        ]
                                                  ]
                                            ]
                                      ]
                                      expression (utils/binutils.ml[550,15871+6]..[554,16085+45])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (utils/binutils.ml[550,15871+10]..[550,15871+26])
                                              Ppat_var "size_of_raw_data" (utils/binutils.ml[550,15871+10]..[550,15871+26])
                                            expression (utils/binutils.ml[550,15871+29]..[550,15871+74])
                                              Pexp_apply
                                              expression (utils/binutils.ml[550,15871+29]..[550,15871+37])
                                                Pexp_ident "get_uint" (utils/binutils.ml[550,15871+29]..[550,15871+37])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[550,15871+38]..[550,15871+56])
                                                    Pexp_constant PConst_string("size_of_raw_data",(utils/binutils.ml[550,15871+39]..[550,15871+55]),None)
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[550,15871+57]..[550,15871+58])
                                                    Pexp_ident "d" (utils/binutils.ml[550,15871+57]..[550,15871+58])
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[550,15871+59]..[550,15871+62])
                                                    Pexp_ident "buf" (utils/binutils.ml[550,15871+59]..[550,15871+62])
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[550,15871+63]..[550,15871+74])
                                                    Pexp_apply
                                                    expression (utils/binutils.ml[550,15871+69]..[550,15871+70])
                                                      Pexp_ident "+" (utils/binutils.ml[550,15871+69]..[550,15871+70])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[550,15871+64]..[550,15871+68])
                                                          Pexp_ident "base" (utils/binutils.ml[550,15871+64]..[550,15871+68])
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[550,15871+71]..[550,15871+73])
                                                          Pexp_constant PConst_int (16,None)
                                                    ]
                                              ]
                                        ]
                                        expression (utils/binutils.ml[551,15949+6]..[554,16085+45])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (utils/binutils.ml[551,15949+10]..[551,15949+29])
                                                Ppat_var "pointer_to_raw_data" (utils/binutils.ml[551,15949+10]..[551,15949+29])
                                              expression (utils/binutils.ml[552,15981+8]..[552,15981+55])
                                                Pexp_apply
                                                expression (utils/binutils.ml[552,15981+8]..[552,15981+24])
                                                  Pexp_ident "uint64_of_uint32" (utils/binutils.ml[552,15981+8]..[552,15981+24])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[552,15981+25]..[552,15981+55])
                                                      Pexp_apply
                                                      expression (utils/binutils.ml[552,15981+26]..[552,15981+36])
                                                        Pexp_ident "get_uint32" (utils/binutils.ml[552,15981+26]..[552,15981+36])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (utils/binutils.ml[552,15981+37]..[552,15981+38])
                                                            Pexp_ident "d" (utils/binutils.ml[552,15981+37]..[552,15981+38])
                                                        <arg>
                                                        Nolabel
                                                          expression (utils/binutils.ml[552,15981+39]..[552,15981+42])
                                                            Pexp_ident "buf" (utils/binutils.ml[552,15981+39]..[552,15981+42])
                                                        <arg>
                                                        Nolabel
                                                          expression (utils/binutils.ml[552,15981+43]..[552,15981+54])
                                                            Pexp_apply
                                                            expression (utils/binutils.ml[552,15981+49]..[552,15981+50])
                                                              Pexp_ident "+" (utils/binutils.ml[552,15981+49]..[552,15981+50])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (utils/binutils.ml[552,15981+44]..[552,15981+48])
                                                                  Pexp_ident "base" (utils/binutils.ml[552,15981+44]..[552,15981+48])
                                                              <arg>
                                                              Nolabel
                                                                expression (utils/binutils.ml[552,15981+51]..[552,15981+53])
                                                                  Pexp_constant PConst_int (20,None)
                                                            ]
                                                      ]
                                                ]
                                          ]
                                          expression (utils/binutils.ml[553,16040+6]..[554,16085+45])
                                            Pexp_record
                                            [
                                              "name" (utils/binutils.ml[553,16040+7]..[553,16040+11]) ghost
                                                expression (utils/binutils.ml[553,16040+7]..[553,16040+11])
                                                  Pexp_ident "name" (utils/binutils.ml[553,16040+7]..[553,16040+11])
                                              "_virtual_size" (utils/binutils.ml[553,16040+13]..[553,16040+26]) ghost
                                                expression (utils/binutils.ml[553,16040+13]..[553,16040+26])
                                                  Pexp_ident "_virtual_size" (utils/binutils.ml[553,16040+13]..[553,16040+26])
                                              "virtual_address" (utils/binutils.ml[553,16040+28]..[553,16040+43]) ghost
                                                expression (utils/binutils.ml[553,16040+28]..[553,16040+43])
                                                  Pexp_ident "virtual_address" (utils/binutils.ml[553,16040+28]..[553,16040+43])
                                              "size_of_raw_data" (utils/binutils.ml[554,16085+7]..[554,16085+23]) ghost
                                                expression (utils/binutils.ml[554,16085+7]..[554,16085+23])
                                                  Pexp_ident "size_of_raw_data" (utils/binutils.ml[554,16085+7]..[554,16085+23])
                                              "pointer_to_raw_data" (utils/binutils.ml[554,16085+25]..[554,16085+44]) ghost
                                                expression (utils/binutils.ml[554,16085+25]..[554,16085+44])
                                                  Pexp_ident "pointer_to_raw_data" (utils/binutils.ml[554,16085+25]..[554,16085+44])
                                            ]
                                            None
                        ]
                        expression (utils/binutils.ml[556,16138+4]..[556,16138+36])
                          Pexp_apply
                          expression (utils/binutils.ml[556,16138+4]..[556,16138+14])
                            Pexp_ident "Array.init" (utils/binutils.ml[556,16138+4]..[556,16138+14])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[556,16138+15]..[556,16138+33])
                                Pexp_ident "number_of_sections" (utils/binutils.ml[556,16138+15]..[556,16138+33])
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[556,16138+34]..[556,16138+36])
                                Pexp_ident "mk" (utils/binutils.ml[556,16138+34]..[556,16138+36])
                          ]
            ]
          structure_item (utils/binutils.ml[558,16176+2]..[562,16240+5])
            Pstr_type Rec
            [
              type_declaration "symbol" (utils/binutils.ml[558,16176+7]..[558,16176+13]) (utils/binutils.ml[558,16176+2]..[562,16240+5])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (utils/binutils.ml[560,16198+6]..[560,16198+19])
                        Immutable
                        "name" (utils/binutils.ml[560,16198+6]..[560,16198+10])                        core_type (utils/binutils.ml[560,16198+12]..[560,16198+18])
                          Ptyp_constr "string" (utils/binutils.ml[560,16198+12]..[560,16198+18])
                          []
                      (utils/binutils.ml[561,16218+6]..[561,16218+21])
                        Immutable
                        "address" (utils/binutils.ml[561,16218+6]..[561,16218+13])                        core_type (utils/binutils.ml[561,16218+15]..[561,16218+20])
                          Ptyp_constr "int64" (utils/binutils.ml[561,16218+15]..[561,16218+20])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (utils/binutils.ml[564,16247+2]..[565,16318+53])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[564,16247+6]..[564,16247+23])
                  Ppat_var "load_section_body" (utils/binutils.ml[564,16247+6]..[564,16247+23])
                expression (utils/binutils.ml[564,16247+24]..[565,16318+53]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[564,16247+24]..[564,16247+25])
                    Ppat_var "d" (utils/binutils.ml[564,16247+24]..[564,16247+25])
                  expression (utils/binutils.ml[564,16247+26]..[565,16318+53]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[564,16247+26]..[564,16247+68])
                      Ppat_record Open
                      [
                        "size_of_raw_data" (utils/binutils.ml[564,16247+27]..[564,16247+43]) ghost
                          pattern (utils/binutils.ml[564,16247+27]..[564,16247+43])
                            Ppat_var "size_of_raw_data" (utils/binutils.ml[564,16247+27]..[564,16247+43])
                        "pointer_to_raw_data" (utils/binutils.ml[564,16247+45]..[564,16247+64]) ghost
                          pattern (utils/binutils.ml[564,16247+45]..[564,16247+64])
                            Ppat_var "pointer_to_raw_data" (utils/binutils.ml[564,16247+45]..[564,16247+64])
                      ]
                    expression (utils/binutils.ml[565,16318+4]..[565,16318+53])
                      Pexp_apply
                      expression (utils/binutils.ml[565,16318+4]..[565,16318+14])
                        Pexp_ident "load_bytes" (utils/binutils.ml[565,16318+4]..[565,16318+14])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[565,16318+15]..[565,16318+16])
                            Pexp_ident "d" (utils/binutils.ml[565,16318+15]..[565,16318+16])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[565,16318+17]..[565,16318+36])
                            Pexp_ident "pointer_to_raw_data" (utils/binutils.ml[565,16318+17]..[565,16318+36])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[565,16318+37]..[565,16318+53])
                            Pexp_ident "size_of_raw_data" (utils/binutils.ml[565,16318+37]..[565,16318+53])
                      ]
            ]
          structure_item (utils/binutils.ml[567,16373+2]..[568,16412+75])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[567,16373+6]..[567,16373+18])
                  Ppat_var "find_section" (utils/binutils.ml[567,16373+6]..[567,16373+18])
                expression (utils/binutils.ml[567,16373+19]..[568,16412+75]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[567,16373+19]..[567,16373+27])
                    Ppat_var "sections" (utils/binutils.ml[567,16373+19]..[567,16373+27])
                  expression (utils/binutils.ml[567,16373+28]..[568,16412+75]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[567,16373+28]..[567,16373+36])
                      Ppat_var "sectname" (utils/binutils.ml[567,16373+28]..[567,16373+36])
                    expression (utils/binutils.ml[568,16412+4]..[568,16412+75])
                      Pexp_apply
                      expression (utils/binutils.ml[568,16412+4]..[568,16412+14])
                        Pexp_ident "array_find" (utils/binutils.ml[568,16412+4]..[568,16412+14])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[568,16412+15]..[568,16412+66])
                            Pexp_function
                            [
                              <case>
                                pattern (utils/binutils.ml[568,16412+25]..[568,16412+46])
                                  Ppat_constraint
                                  pattern (utils/binutils.ml[568,16412+26]..[568,16412+35])
                                    Ppat_record Open
                                    [
                                      "name" (utils/binutils.ml[568,16412+27]..[568,16412+31]) ghost
                                        pattern (utils/binutils.ml[568,16412+27]..[568,16412+31])
                                          Ppat_var "name" (utils/binutils.ml[568,16412+27]..[568,16412+31])
                                    ]
                                  core_type (utils/binutils.ml[568,16412+38]..[568,16412+45])
                                    Ptyp_constr "section" (utils/binutils.ml[568,16412+38]..[568,16412+45])
                                    []
                                expression (utils/binutils.ml[568,16412+50]..[568,16412+65])
                                  Pexp_apply
                                  expression (utils/binutils.ml[568,16412+55]..[568,16412+56])
                                    Pexp_ident "=" (utils/binutils.ml[568,16412+55]..[568,16412+56])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[568,16412+50]..[568,16412+54])
                                        Pexp_ident "name" (utils/binutils.ml[568,16412+50]..[568,16412+54])
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[568,16412+57]..[568,16412+65])
                                        Pexp_ident "sectname" (utils/binutils.ml[568,16412+57]..[568,16412+65])
                                  ]
                            ]
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[568,16412+67]..[568,16412+75])
                            Pexp_ident "sections" (utils/binutils.ml[568,16412+67]..[568,16412+75])
                      ]
            ]
          structure_item (utils/binutils.ml[574,16681+2]..[592,17391+32])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[574,16681+6]..[574,16681+18])
                  Ppat_var "read_symbols" (utils/binutils.ml[574,16681+6]..[574,16681+18])
                expression (utils/binutils.ml[574,16681+19]..[592,17391+32]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[574,16681+19]..[574,16681+20])
                    Ppat_var "d" (utils/binutils.ml[574,16681+19]..[574,16681+20])
                  expression (utils/binutils.ml[574,16681+21]..[592,17391+32]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[574,16681+21]..[574,16681+36])
                      Ppat_record Open
                      [
                        "image_base" (utils/binutils.ml[574,16681+22]..[574,16681+32]) ghost
                          pattern (utils/binutils.ml[574,16681+22]..[574,16681+32])
                            Ppat_var "image_base" (utils/binutils.ml[574,16681+22]..[574,16681+32])
                      ]
                    expression (utils/binutils.ml[574,16681+37]..[592,17391+32]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (utils/binutils.ml[574,16681+37]..[574,16681+45])
                        Ppat_var "sections" (utils/binutils.ml[574,16681+37]..[574,16681+45])
                      expression (utils/binutils.ml[575,16729+4]..[592,17391+32])
                        Pexp_match
                        expression (utils/binutils.ml[575,16729+10]..[575,16729+41])
                          Pexp_apply
                          expression (utils/binutils.ml[575,16729+10]..[575,16729+22])
                            Pexp_ident "find_section" (utils/binutils.ml[575,16729+10]..[575,16729+22])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[575,16729+23]..[575,16729+31])
                                Pexp_ident "sections" (utils/binutils.ml[575,16729+23]..[575,16729+31])
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[575,16729+32]..[575,16729+41])
                                Pexp_constant PConst_string(".exptbl",(utils/binutils.ml[575,16729+33]..[575,16729+40]),None)
                          ]
                        [
                          <case>
                            pattern (utils/binutils.ml[576,16776+6]..[576,16776+10])
                              Ppat_construct "None" (utils/binutils.ml[576,16776+6]..[576,16776+10])
                              None
                            expression (utils/binutils.ml[576,16776+14]..[576,16776+19])
                              Pexp_array
                              []
                          <case>
                            pattern (utils/binutils.ml[577,16796+6]..[577,16796+43])
                              Ppat_construct "Some" (utils/binutils.ml[577,16796+6]..[577,16796+10])
                              Some
                                []
                                pattern (utils/binutils.ml[577,16796+11]..[577,16796+43])
                                  Ppat_alias "exptbl" (utils/binutils.ml[577,16796+36]..[577,16796+42])
                                  pattern (utils/binutils.ml[577,16796+12]..[577,16796+32])
                                    Ppat_record Open
                                    [
                                      "virtual_address" (utils/binutils.ml[577,16796+13]..[577,16796+28]) ghost
                                        pattern (utils/binutils.ml[577,16796+13]..[577,16796+28])
                                          Ppat_var "virtual_address" (utils/binutils.ml[577,16796+13]..[577,16796+28])
                                    ]
                            expression (utils/binutils.ml[578,16843+8]..[592,17391+32])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (utils/binutils.ml[578,16843+12]..[578,16843+15])
                                    Ppat_var "buf" (utils/binutils.ml[578,16843+12]..[578,16843+15])
                                  expression (utils/binutils.ml[578,16843+18]..[578,16843+44])
                                    Pexp_apply
                                    expression (utils/binutils.ml[578,16843+18]..[578,16843+35])
                                      Pexp_ident "load_section_body" (utils/binutils.ml[578,16843+18]..[578,16843+35])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[578,16843+36]..[578,16843+37])
                                          Pexp_ident "d" (utils/binutils.ml[578,16843+36]..[578,16843+37])
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[578,16843+38]..[578,16843+44])
                                          Pexp_ident "exptbl" (utils/binutils.ml[578,16843+38]..[578,16843+44])
                                    ]
                              ]
                              expression (utils/binutils.ml[579,16891+8]..[592,17391+32])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (utils/binutils.ml[579,16891+12]..[579,16891+22])
                                      Ppat_var "numexports" (utils/binutils.ml[579,16891+12]..[579,16891+22])
                                    expression (utils/binutils.ml[580,16916+10]..[580,16916+55])
                                      Pexp_apply
                                      expression (utils/binutils.ml[580,16916+10]..[580,16916+23])
                                        Pexp_ident "uint64_to_int" (utils/binutils.ml[580,16916+10]..[580,16916+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[580,16916+24]..[580,16916+36])
                                            Pexp_constant PConst_string("numexports",(utils/binutils.ml[580,16916+25]..[580,16916+35]),None)
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[580,16916+37]..[580,16916+55])
                                            Pexp_apply
                                            expression (utils/binutils.ml[580,16916+38]..[580,16916+46])
                                              Pexp_ident "get_word" (utils/binutils.ml[580,16916+38]..[580,16916+46])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/binutils.ml[580,16916+47]..[580,16916+48])
                                                  Pexp_ident "d" (utils/binutils.ml[580,16916+47]..[580,16916+48])
                                              <arg>
                                              Nolabel
                                                expression (utils/binutils.ml[580,16916+49]..[580,16916+52])
                                                  Pexp_ident "buf" (utils/binutils.ml[580,16916+49]..[580,16916+52])
                                              <arg>
                                              Nolabel
                                                expression (utils/binutils.ml[580,16916+53]..[580,16916+54])
                                                  Pexp_constant PConst_int (0,None)
                                            ]
                                      ]
                                ]
                                expression (utils/binutils.ml[582,16983+8]..[592,17391+32])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (utils/binutils.ml[582,16983+12]..[582,16983+21])
                                        Ppat_var "word_size" (utils/binutils.ml[582,16983+12]..[582,16983+21])
                                      expression (utils/binutils.ml[582,16983+24]..[582,16983+35])
                                        Pexp_apply
                                        expression (utils/binutils.ml[582,16983+24]..[582,16983+33])
                                          Pexp_ident "word_size" (utils/binutils.ml[582,16983+24]..[582,16983+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/binutils.ml[582,16983+34]..[582,16983+35])
                                              Pexp_ident "d" (utils/binutils.ml[582,16983+34]..[582,16983+35])
                                        ]
                                  ]
                                  expression (utils/binutils.ml[583,17022+8]..[592,17391+32])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (utils/binutils.ml[583,17022+12]..[583,17022+14])
                                          Ppat_var "mk" (utils/binutils.ml[583,17022+12]..[583,17022+14])
                                        expression (utils/binutils.ml[583,17022+15]..[590,17354+25]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (utils/binutils.ml[583,17022+15]..[583,17022+16])
                                            Ppat_var "i" (utils/binutils.ml[583,17022+15]..[583,17022+16])
                                          expression (utils/binutils.ml[584,17041+10]..[590,17354+25])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (utils/binutils.ml[584,17041+14]..[584,17041+21])
                                                  Ppat_var "address" (utils/binutils.ml[584,17041+14]..[584,17041+21])
                                                expression (utils/binutils.ml[584,17041+24]..[584,17041+64])
                                                  Pexp_apply
                                                  expression (utils/binutils.ml[584,17041+24]..[584,17041+32])
                                                    Pexp_ident "get_word" (utils/binutils.ml[584,17041+24]..[584,17041+32])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[584,17041+33]..[584,17041+34])
                                                        Pexp_ident "d" (utils/binutils.ml[584,17041+33]..[584,17041+34])
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[584,17041+35]..[584,17041+38])
                                                        Pexp_ident "buf" (utils/binutils.ml[584,17041+35]..[584,17041+38])
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[584,17041+39]..[584,17041+64])
                                                        Pexp_apply
                                                        expression (utils/binutils.ml[584,17041+50]..[584,17041+51])
                                                          Pexp_ident "*" (utils/binutils.ml[584,17041+50]..[584,17041+51])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[584,17041+40]..[584,17041+49])
                                                              Pexp_ident "word_size" (utils/binutils.ml[584,17041+40]..[584,17041+49])
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[584,17041+52]..[584,17041+63])
                                                              Pexp_apply
                                                              expression (utils/binutils.ml[584,17041+59]..[584,17041+60])
                                                                Pexp_ident "+" (utils/binutils.ml[584,17041+59]..[584,17041+60])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[584,17041+53]..[584,17041+58])
                                                                    Pexp_apply
                                                                    expression (utils/binutils.ml[584,17041+55]..[584,17041+56])
                                                                      Pexp_ident "*" (utils/binutils.ml[584,17041+55]..[584,17041+56])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (utils/binutils.ml[584,17041+53]..[584,17041+54])
  Pexp_constant PConst_int (2,None)
                                                                      <arg>
                                                                      Nolabel
expression (utils/binutils.ml[584,17041+57]..[584,17041+58])
  Pexp_ident "i" (utils/binutils.ml[584,17041+57]..[584,17041+58])
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[584,17041+61]..[584,17041+62])
                                                                    Pexp_constant PConst_int (1,None)
                                                              ]
                                                        ]
                                                  ]
                                            ]
                                            expression (utils/binutils.ml[585,17109+10]..[590,17354+25])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (utils/binutils.ml[585,17109+14]..[585,17109+21])
                                                    Ppat_var "nameoff" (utils/binutils.ml[585,17109+14]..[585,17109+21])
                                                  expression (utils/binutils.ml[585,17109+24]..[585,17109+64])
                                                    Pexp_apply
                                                    expression (utils/binutils.ml[585,17109+24]..[585,17109+32])
                                                      Pexp_ident "get_word" (utils/binutils.ml[585,17109+24]..[585,17109+32])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[585,17109+33]..[585,17109+34])
                                                          Pexp_ident "d" (utils/binutils.ml[585,17109+33]..[585,17109+34])
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[585,17109+35]..[585,17109+38])
                                                          Pexp_ident "buf" (utils/binutils.ml[585,17109+35]..[585,17109+38])
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[585,17109+39]..[585,17109+64])
                                                          Pexp_apply
                                                          expression (utils/binutils.ml[585,17109+50]..[585,17109+51])
                                                            Pexp_ident "*" (utils/binutils.ml[585,17109+50]..[585,17109+51])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[585,17109+40]..[585,17109+49])
                                                                Pexp_ident "word_size" (utils/binutils.ml[585,17109+40]..[585,17109+49])
                                                            <arg>
                                                            Nolabel
                                                              expression (utils/binutils.ml[585,17109+52]..[585,17109+63])
                                                                Pexp_apply
                                                                expression (utils/binutils.ml[585,17109+59]..[585,17109+60])
                                                                  Pexp_ident "+" (utils/binutils.ml[585,17109+59]..[585,17109+60])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (utils/binutils.ml[585,17109+53]..[585,17109+58])
                                                                      Pexp_apply
                                                                      expression (utils/binutils.ml[585,17109+55]..[585,17109+56])
Pexp_ident "*" (utils/binutils.ml[585,17109+55]..[585,17109+56])
                                                                      [
<arg>
Nolabel
  expression (utils/binutils.ml[585,17109+53]..[585,17109+54])
    Pexp_constant PConst_int (2,None)
<arg>
Nolabel
  expression (utils/binutils.ml[585,17109+57]..[585,17109+58])
    Pexp_ident "i" (utils/binutils.ml[585,17109+57]..[585,17109+58])
                                                                      ]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (utils/binutils.ml[585,17109+61]..[585,17109+62])
                                                                      Pexp_constant PConst_int (2,None)
                                                                ]
                                                          ]
                                                    ]
                                              ]
                                              expression (utils/binutils.ml[586,17177+10]..[590,17354+25])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (utils/binutils.ml[586,17177+14]..[586,17177+18])
                                                      Ppat_var "name" (utils/binutils.ml[586,17177+14]..[586,17177+18])
                                                    expression (utils/binutils.ml[587,17198+12]..[588,17276+64])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (utils/binutils.ml[587,17198+16]..[587,17198+19])
                                                            Ppat_var "off" (utils/binutils.ml[587,17198+16]..[587,17198+19])
                                                          expression (utils/binutils.ml[587,17198+22]..[587,17198+74])
                                                            Pexp_open Fresh
                                                            module_expr (utils/binutils.ml[587,17198+22]..[587,17198+27])
                                                              Pmod_ident "Int64" (utils/binutils.ml[587,17198+22]..[587,17198+27])
                                                            expression (utils/binutils.ml[587,17198+29]..[587,17198+73])
                                                              Pexp_apply
                                                              expression (utils/binutils.ml[587,17198+29]..[587,17198+32])
                                                                Pexp_ident "sub" (utils/binutils.ml[587,17198+29]..[587,17198+32])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[587,17198+33]..[587,17198+40])
                                                                    Pexp_ident "nameoff" (utils/binutils.ml[587,17198+33]..[587,17198+40])
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[587,17198+41]..[587,17198+73])
                                                                    Pexp_apply
                                                                    expression (utils/binutils.ml[587,17198+42]..[587,17198+45])
                                                                      Pexp_ident "add" (utils/binutils.ml[587,17198+42]..[587,17198+45])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (utils/binutils.ml[587,17198+46]..[587,17198+61])
  Pexp_ident "virtual_address" (utils/binutils.ml[587,17198+46]..[587,17198+61])
                                                                      <arg>
                                                                      Nolabel
expression (utils/binutils.ml[587,17198+62]..[587,17198+72])
  Pexp_ident "image_base" (utils/binutils.ml[587,17198+62]..[587,17198+72])
                                                                    ]
                                                              ]
                                                      ]
                                                      expression (utils/binutils.ml[588,17276+12]..[588,17276+64])
                                                        Pexp_apply
                                                        expression (utils/binutils.ml[588,17276+12]..[588,17276+19])
                                                          Pexp_ident "name_at" (utils/binutils.ml[588,17276+12]..[588,17276+19])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[588,17276+20]..[588,17276+23])
                                                              Pexp_ident "buf" (utils/binutils.ml[588,17276+20]..[588,17276+23])
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[588,17276+24]..[588,17276+64])
                                                              Pexp_apply
                                                              expression (utils/binutils.ml[588,17276+25]..[588,17276+38])
                                                                Pexp_ident "uint64_to_int" (utils/binutils.ml[588,17276+25]..[588,17276+38])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[588,17276+39]..[588,17276+59])
                                                                    Pexp_constant PConst_string("exptbl name offset",(utils/binutils.ml[588,17276+40]..[588,17276+58]),None)
                                                                <arg>
                                                                Nolabel
                                                                  expression (utils/binutils.ml[588,17276+60]..[588,17276+63])
                                                                    Pexp_ident "off" (utils/binutils.ml[588,17276+60]..[588,17276+63])
                                                              ]
                                                        ]
                                                ]
                                                expression (utils/binutils.ml[590,17354+10]..[590,17354+25])
                                                  Pexp_record
                                                  [
                                                    "name" (utils/binutils.ml[590,17354+11]..[590,17354+15]) ghost
                                                      expression (utils/binutils.ml[590,17354+11]..[590,17354+15])
                                                        Pexp_ident "name" (utils/binutils.ml[590,17354+11]..[590,17354+15])
                                                    "address" (utils/binutils.ml[590,17354+17]..[590,17354+24]) ghost
                                                      expression (utils/binutils.ml[590,17354+17]..[590,17354+24])
                                                        Pexp_ident "address" (utils/binutils.ml[590,17354+17]..[590,17354+24])
                                                  ]
                                                  None
                                    ]
                                    expression (utils/binutils.ml[592,17391+8]..[592,17391+32])
                                      Pexp_apply
                                      expression (utils/binutils.ml[592,17391+8]..[592,17391+18])
                                        Pexp_ident "Array.init" (utils/binutils.ml[592,17391+8]..[592,17391+18])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[592,17391+19]..[592,17391+29])
                                            Pexp_ident "numexports" (utils/binutils.ml[592,17391+19]..[592,17391+29])
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[592,17391+30]..[592,17391+32])
                                            Pexp_ident "mk" (utils/binutils.ml[592,17391+30]..[592,17391+32])
                                      ]
                        ]
            ]
          structure_item (utils/binutils.ml[594,17425+2]..[606,17924+13])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[594,17425+6]..[594,17425+19])
                  Ppat_var "symbol_offset" (utils/binutils.ml[594,17425+6]..[594,17425+19])
                expression (utils/binutils.ml[594,17425+20]..[606,17924+13]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[594,17425+20]..[594,17425+35])
                    Ppat_record Open
                    [
                      "image_base" (utils/binutils.ml[594,17425+21]..[594,17425+31]) ghost
                        pattern (utils/binutils.ml[594,17425+21]..[594,17425+31])
                          Ppat_var "image_base" (utils/binutils.ml[594,17425+21]..[594,17425+31])
                    ]
                  expression (utils/binutils.ml[594,17425+36]..[606,17924+13]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[594,17425+36]..[594,17425+44])
                      Ppat_var "sections" (utils/binutils.ml[594,17425+36]..[594,17425+44])
                    expression (utils/binutils.ml[594,17425+45]..[606,17924+13]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (utils/binutils.ml[594,17425+45]..[594,17425+52])
                        Ppat_var "symbols" (utils/binutils.ml[594,17425+45]..[594,17425+52])
                      expression (utils/binutils.ml[595,17480+4]..[606,17924+13])
                        Pexp_match
                        expression (utils/binutils.ml[595,17480+10]..[595,17480+39])
                          Pexp_apply
                          expression (utils/binutils.ml[595,17480+10]..[595,17480+22])
                            Pexp_ident "find_section" (utils/binutils.ml[595,17480+10]..[595,17480+22])
                          [
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[595,17480+23]..[595,17480+31])
                                Pexp_ident "sections" (utils/binutils.ml[595,17480+23]..[595,17480+31])
                            <arg>
                            Nolabel
                              expression (utils/binutils.ml[595,17480+32]..[595,17480+39])
                                Pexp_constant PConst_string(".data",(utils/binutils.ml[595,17480+33]..[595,17480+38]),None)
                          ]
                        [
                          <case>
                            pattern (utils/binutils.ml[596,17525+6]..[596,17525+10])
                              Ppat_construct "None" (utils/binutils.ml[596,17525+6]..[596,17525+10])
                              None
                            expression (utils/binutils.ml[596,17525+14]..[596,17525+28])
                              Pexp_apply
                              expression (utils/binutils.ml[596,17525+14]..[596,17525+23])
                                Pexp_ident "Fun.const" (utils/binutils.ml[596,17525+14]..[596,17525+23])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[596,17525+24]..[596,17525+28])
                                    Pexp_construct "None" (utils/binutils.ml[596,17525+24]..[596,17525+28])
                                    None
                              ]
                          <case>
                            pattern (utils/binutils.ml[597,17554+6]..[597,17554+52])
                              Ppat_construct "Some" (utils/binutils.ml[597,17554+6]..[597,17554+10])
                              Some
                                []
                                pattern (utils/binutils.ml[597,17554+11]..[597,17554+52])
                                  Ppat_record Open
                                  [
                                    "virtual_address" (utils/binutils.ml[597,17554+12]..[597,17554+27]) ghost
                                      pattern (utils/binutils.ml[597,17554+12]..[597,17554+27])
                                        Ppat_var "virtual_address" (utils/binutils.ml[597,17554+12]..[597,17554+27])
                                    "pointer_to_raw_data" (utils/binutils.ml[597,17554+29]..[597,17554+48]) ghost
                                      pattern (utils/binutils.ml[597,17554+29]..[597,17554+48])
                                        Ppat_var "pointer_to_raw_data" (utils/binutils.ml[597,17554+29]..[597,17554+48])
                                  ]
                            expression (utils/binutils.ml[598,17610+8]..[606,17924+13])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (utils/binutils.ml[598,17610+12]..[598,17610+19])
                                Ppat_var "symname" (utils/binutils.ml[598,17610+12]..[598,17610+19])
                              expression (utils/binutils.ml[599,17633+10]..[606,17924+13])
                                Pexp_match
                                expression (utils/binutils.ml[600,17655+12]..[600,17655+69])
                                  Pexp_apply
                                  expression (utils/binutils.ml[600,17655+12]..[600,17655+22])
                                    Pexp_ident "array_find" (utils/binutils.ml[600,17655+12]..[600,17655+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[600,17655+23]..[600,17655+61])
                                        Pexp_function
                                        [
                                          <case>
                                            pattern (utils/binutils.ml[600,17655+33]..[600,17655+42])
                                              Ppat_record Open
                                              [
                                                "name" (utils/binutils.ml[600,17655+34]..[600,17655+38]) ghost
                                                  pattern (utils/binutils.ml[600,17655+34]..[600,17655+38])
                                                    Ppat_var "name" (utils/binutils.ml[600,17655+34]..[600,17655+38])
                                              ]
                                            expression (utils/binutils.ml[600,17655+46]..[600,17655+60])
                                              Pexp_apply
                                              expression (utils/binutils.ml[600,17655+51]..[600,17655+52])
                                                Pexp_ident "=" (utils/binutils.ml[600,17655+51]..[600,17655+52])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[600,17655+46]..[600,17655+50])
                                                    Pexp_ident "name" (utils/binutils.ml[600,17655+46]..[600,17655+50])
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[600,17655+53]..[600,17655+60])
                                                    Pexp_ident "symname" (utils/binutils.ml[600,17655+53]..[600,17655+60])
                                              ]
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[600,17655+62]..[600,17655+69])
                                        Pexp_ident "symbols" (utils/binutils.ml[600,17655+62]..[600,17655+69])
                                  ]
                                [
                                  <case>
                                    pattern (utils/binutils.ml[602,17740+12]..[602,17740+16])
                                      Ppat_construct "None" (utils/binutils.ml[602,17740+12]..[602,17740+16])
                                      None
                                    expression (utils/binutils.ml[602,17740+20]..[602,17740+24])
                                      Pexp_construct "None" (utils/binutils.ml[602,17740+20]..[602,17740+24])
                                      None
                                  <case>
                                    pattern (utils/binutils.ml[603,17765+12]..[603,17765+29])
                                      Ppat_construct "Some" (utils/binutils.ml[603,17765+12]..[603,17765+16])
                                      Some
                                        []
                                        pattern (utils/binutils.ml[603,17765+17]..[603,17765+29])
                                          Ppat_record Open
                                          [
                                            "address" (utils/binutils.ml[603,17765+18]..[603,17765+25]) ghost
                                              pattern (utils/binutils.ml[603,17765+18]..[603,17765+25])
                                                Ppat_var "address" (utils/binutils.ml[603,17765+18]..[603,17765+25])
                                          ]
                                    expression (utils/binutils.ml[604,17798+14]..[605,17848+75])
                                      Pexp_construct "Some" (utils/binutils.ml[604,17798+14]..[604,17798+18])
                                      Some
                                        expression (utils/binutils.ml[604,17798+19]..[605,17848+75])
                                          Pexp_open Fresh
                                          module_expr (utils/binutils.ml[604,17798+19]..[604,17798+24])
                                            Pmod_ident "Int64" (utils/binutils.ml[604,17798+19]..[604,17798+24])
                                          expression (utils/binutils.ml[604,17798+26]..[605,17848+74])
                                            Pexp_apply
                                            expression (utils/binutils.ml[604,17798+26]..[604,17798+29])
                                              Pexp_ident "add" (utils/binutils.ml[604,17798+26]..[604,17798+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/binutils.ml[604,17798+30]..[604,17798+49])
                                                  Pexp_ident "pointer_to_raw_data" (utils/binutils.ml[604,17798+30]..[604,17798+49])
                                              <arg>
                                              Nolabel
                                                expression (utils/binutils.ml[605,17848+28]..[605,17848+74])
                                                  Pexp_apply
                                                  expression (utils/binutils.ml[605,17848+29]..[605,17848+32])
                                                    Pexp_ident "sub" (utils/binutils.ml[605,17848+29]..[605,17848+32])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[605,17848+33]..[605,17848+40])
                                                        Pexp_ident "address" (utils/binutils.ml[605,17848+33]..[605,17848+40])
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[605,17848+41]..[605,17848+73])
                                                        Pexp_apply
                                                        expression (utils/binutils.ml[605,17848+42]..[605,17848+45])
                                                          Pexp_ident "add" (utils/binutils.ml[605,17848+42]..[605,17848+45])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[605,17848+46]..[605,17848+61])
                                                              Pexp_ident "virtual_address" (utils/binutils.ml[605,17848+46]..[605,17848+61])
                                                          <arg>
                                                          Nolabel
                                                            expression (utils/binutils.ml[605,17848+62]..[605,17848+72])
                                                              Pexp_ident "image_base" (utils/binutils.ml[605,17848+62]..[605,17848+72])
                                                        ]
                                                  ]
                                            ]
                                ]
                        ]
            ]
          structure_item (utils/binutils.ml[608,17939+2]..[609,17978+58])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[608,17939+6]..[608,17939+20])
                  Ppat_var "defines_symbol" (utils/binutils.ml[608,17939+6]..[608,17939+20])
                expression (utils/binutils.ml[608,17939+21]..[609,17978+58]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[608,17939+21]..[608,17939+28])
                    Ppat_var "symbols" (utils/binutils.ml[608,17939+21]..[608,17939+28])
                  expression (utils/binutils.ml[608,17939+29]..[609,17978+58]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/binutils.ml[608,17939+29]..[608,17939+36])
                      Ppat_var "symname" (utils/binutils.ml[608,17939+29]..[608,17939+36])
                    expression (utils/binutils.ml[609,17978+4]..[609,17978+58])
                      Pexp_apply
                      expression (utils/binutils.ml[609,17978+4]..[609,17978+16])
                        Pexp_ident "Array.exists" (utils/binutils.ml[609,17978+4]..[609,17978+16])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[609,17978+17]..[609,17978+50])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (utils/binutils.ml[609,17978+22]..[609,17978+31])
                              Ppat_record Open
                              [
                                "name" (utils/binutils.ml[609,17978+23]..[609,17978+27]) ghost
                                  pattern (utils/binutils.ml[609,17978+23]..[609,17978+27])
                                    Ppat_var "name" (utils/binutils.ml[609,17978+23]..[609,17978+27])
                              ]
                            expression (utils/binutils.ml[609,17978+35]..[609,17978+49])
                              Pexp_apply
                              expression (utils/binutils.ml[609,17978+40]..[609,17978+41])
                                Pexp_ident "=" (utils/binutils.ml[609,17978+40]..[609,17978+41])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[609,17978+35]..[609,17978+39])
                                    Pexp_ident "name" (utils/binutils.ml[609,17978+35]..[609,17978+39])
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[609,17978+42]..[609,17978+49])
                                    Pexp_ident "symname" (utils/binutils.ml[609,17978+42]..[609,17978+49])
                              ]
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[609,17978+51]..[609,17978+58])
                            Pexp_ident "symbols" (utils/binutils.ml[609,17978+51]..[609,17978+58])
                      ]
            ]
          structure_item (utils/binutils.ml[611,18038+2]..[615,18151+29])
            Pstr_type Rec
            [
              type_declaration "machine_type" (utils/binutils.ml[611,18038+7]..[611,18038+19]) (utils/binutils.ml[611,18038+2]..[615,18151+29])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (utils/binutils.ml[612,18060+4]..[612,18060+28])
                        "IMAGE_FILE_MACHINE_ARM" (utils/binutils.ml[612,18060+6]..[612,18060+28])
                        []
                        None
                      (utils/binutils.ml[613,18089+4]..[613,18089+30])
                        "IMAGE_FILE_MACHINE_ARM64" (utils/binutils.ml[613,18089+6]..[613,18089+30])
                        []
                        None
                      (utils/binutils.ml[614,18120+4]..[614,18120+30])
                        "IMAGE_FILE_MACHINE_AMD64" (utils/binutils.ml[614,18120+6]..[614,18120+30])
                        []
                        None
                      (utils/binutils.ml[615,18151+4]..[615,18151+29])
                        "IMAGE_FILE_MACHINE_I386" (utils/binutils.ml[615,18151+6]..[615,18151+29])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (utils/binutils.ml[617,18182+2]..[649,19409+35])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/binutils.ml[617,18182+6]..[617,18182+10])
                  Ppat_var "read" (utils/binutils.ml[617,18182+6]..[617,18182+10])
                expression (utils/binutils.ml[617,18182+11]..[649,19409+35]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/binutils.ml[617,18182+11]..[617,18182+13])
                    Ppat_var "ic" (utils/binutils.ml[617,18182+11]..[617,18182+13])
                  expression (utils/binutils.ml[618,18198+4]..[649,19409+35])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (utils/binutils.ml[618,18198+8]..[618,18198+16])
                          Ppat_var "e_lfanew" (utils/binutils.ml[618,18198+8]..[618,18198+16])
                        expression (utils/binutils.ml[619,18217+6]..[621,18283+49])
                          Pexp_sequence
                          expression (utils/binutils.ml[619,18217+6]..[619,18217+21])
                            Pexp_apply
                            expression (utils/binutils.ml[619,18217+6]..[619,18217+13])
                              Pexp_ident "seek_in" (utils/binutils.ml[619,18217+6]..[619,18217+13])
                            [
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[619,18217+14]..[619,18217+16])
                                  Pexp_ident "ic" (utils/binutils.ml[619,18217+14]..[619,18217+16])
                              <arg>
                              Nolabel
                                expression (utils/binutils.ml[619,18217+17]..[619,18217+21])
                                  Pexp_constant PConst_int (0x3c,None)
                            ]
                          expression (utils/binutils.ml[620,18240+6]..[621,18283+49])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (utils/binutils.ml[620,18240+10]..[620,18240+13])
                                  Ppat_var "buf" (utils/binutils.ml[620,18240+10]..[620,18240+13])
                                expression (utils/binutils.ml[620,18240+16]..[620,18240+39])
                                  Pexp_apply
                                  expression (utils/binutils.ml[620,18240+16]..[620,18240+34])
                                    Pexp_ident "really_input_bytes" (utils/binutils.ml[620,18240+16]..[620,18240+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[620,18240+35]..[620,18240+37])
                                        Pexp_ident "ic" (utils/binutils.ml[620,18240+35]..[620,18240+37])
                                    <arg>
                                    Nolabel
                                      expression (utils/binutils.ml[620,18240+38]..[620,18240+39])
                                        Pexp_constant PConst_int (4,None)
                                  ]
                            ]
                            expression (utils/binutils.ml[621,18283+6]..[621,18283+49])
                              Pexp_apply
                              expression (utils/binutils.ml[621,18283+6]..[621,18283+22])
                                Pexp_ident "uint64_of_uint32" (utils/binutils.ml[621,18283+6]..[621,18283+22])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[621,18283+23]..[621,18283+49])
                                    Pexp_apply
                                    expression (utils/binutils.ml[621,18283+24]..[621,18283+42])
                                      Pexp_ident "Bytes.get_int32_le" (utils/binutils.ml[621,18283+24]..[621,18283+42])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[621,18283+43]..[621,18283+46])
                                          Pexp_ident "buf" (utils/binutils.ml[621,18283+43]..[621,18283+46])
                                      <arg>
                                      Nolabel
                                        expression (utils/binutils.ml[621,18283+47]..[621,18283+48])
                                          Pexp_constant PConst_int (0,None)
                                    ]
                              ]
                    ]
                    expression (utils/binutils.ml[623,18340+4]..[649,19409+35])
                      Pexp_sequence
                      expression (utils/binutils.ml[623,18340+4]..[623,18340+33])
                        Pexp_apply
                        expression (utils/binutils.ml[623,18340+4]..[623,18340+21])
                          Pexp_ident "LargeFile.seek_in" (utils/binutils.ml[623,18340+4]..[623,18340+21])
                        [
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[623,18340+22]..[623,18340+24])
                              Pexp_ident "ic" (utils/binutils.ml[623,18340+22]..[623,18340+24])
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[623,18340+25]..[623,18340+33])
                              Pexp_ident "e_lfanew" (utils/binutils.ml[623,18340+25]..[623,18340+33])
                        ]
                      expression (utils/binutils.ml[624,18375+4]..[649,19409+35])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (utils/binutils.ml[624,18375+8]..[624,18375+11])
                              Ppat_var "buf" (utils/binutils.ml[624,18375+8]..[624,18375+11])
                            expression (utils/binutils.ml[624,18375+14]..[624,18375+47])
                              Pexp_apply
                              expression (utils/binutils.ml[624,18375+14]..[624,18375+32])
                                Pexp_ident "really_input_bytes" (utils/binutils.ml[624,18375+14]..[624,18375+32])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[624,18375+33]..[624,18375+35])
                                    Pexp_ident "ic" (utils/binutils.ml[624,18375+33]..[624,18375+35])
                                <arg>
                                Nolabel
                                  expression (utils/binutils.ml[624,18375+36]..[624,18375+47])
                                    Pexp_ident "header_size" (utils/binutils.ml[624,18375+36]..[624,18375+47])
                              ]
                        ]
                        expression (utils/binutils.ml[625,18426+4]..[649,19409+35])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (utils/binutils.ml[625,18426+8]..[625,18426+13])
                                Ppat_var "magic" (utils/binutils.ml[625,18426+8]..[625,18426+13])
                              expression (utils/binutils.ml[625,18426+16]..[625,18426+40])
                                Pexp_apply
                                expression (utils/binutils.ml[625,18426+16]..[625,18426+32])
                                  Pexp_ident "Bytes.sub_string" (utils/binutils.ml[625,18426+16]..[625,18426+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[625,18426+33]..[625,18426+36])
                                      Pexp_ident "buf" (utils/binutils.ml[625,18426+33]..[625,18426+36])
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[625,18426+37]..[625,18426+38])
                                      Pexp_constant PConst_int (0,None)
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[625,18426+39]..[625,18426+40])
                                      Pexp_constant PConst_int (4,None)
                                ]
                          ]
                          expression (utils/binutils.ml[626,18470+4]..[649,19409+35])
                            Pexp_sequence
                            expression (utils/binutils.ml[626,18470+4]..[626,18470+68])
                              Pexp_ifthenelse
                              expression (utils/binutils.ml[626,18470+7]..[626,18470+28])
                                Pexp_apply
                                expression (utils/binutils.ml[626,18470+13]..[626,18470+15])
                                  Pexp_ident "<>" (utils/binutils.ml[626,18470+13]..[626,18470+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[626,18470+7]..[626,18470+12])
                                      Pexp_ident "magic" (utils/binutils.ml[626,18470+7]..[626,18470+12])
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[626,18470+16]..[626,18470+28])
                                      Pexp_constant PConst_string("PE\000\000",(utils/binutils.ml[626,18470+17]..[626,18470+27]),None)
                                ]
                              expression (utils/binutils.ml[626,18470+34]..[626,18470+68])
                                Pexp_apply
                                expression (utils/binutils.ml[626,18470+34]..[626,18470+39])
                                  Pexp_ident "raise" (utils/binutils.ml[626,18470+34]..[626,18470+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/binutils.ml[626,18470+40]..[626,18470+68])
                                      Pexp_construct "Error" (utils/binutils.ml[626,18470+41]..[626,18470+46])
                                      Some
                                        expression (utils/binutils.ml[626,18470+47]..[626,18470+67])
                                          Pexp_construct "Unrecognized" (utils/binutils.ml[626,18470+48]..[626,18470+60])
                                          Some
                                            expression (utils/binutils.ml[626,18470+61]..[626,18470+66])
                                              Pexp_ident "magic" (utils/binutils.ml[626,18470+61]..[626,18470+66])
                                ]
                              None
                            expression (utils/binutils.ml[627,18540+4]..[649,19409+35])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (utils/binutils.ml[627,18540+8]..[627,18540+15])
                                    Ppat_var "machine" (utils/binutils.ml[627,18540+8]..[627,18540+15])
                                  expression (utils/binutils.ml[628,18558+6]..[633,18768+72])
                                    Pexp_match
                                    expression (utils/binutils.ml[628,18558+12]..[628,18558+37])
                                      Pexp_apply
                                      expression (utils/binutils.ml[628,18558+12]..[628,18558+31])
                                        Pexp_ident "Bytes.get_uint16_le" (utils/binutils.ml[628,18558+12]..[628,18558+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[628,18558+32]..[628,18558+35])
                                            Pexp_ident "buf" (utils/binutils.ml[628,18558+32]..[628,18558+35])
                                        <arg>
                                        Nolabel
                                          expression (utils/binutils.ml[628,18558+36]..[628,18558+37])
                                            Pexp_constant PConst_int (4,None)
                                      ]
                                    [
                                      <case>
                                        pattern (utils/binutils.ml[629,18601+8]..[629,18601+13])
                                          Ppat_constant PConst_int (0x1c0,None)
                                        expression (utils/binutils.ml[629,18601+17]..[629,18601+39])
                                          Pexp_construct "IMAGE_FILE_MACHINE_ARM" (utils/binutils.ml[629,18601+17]..[629,18601+39])
                                          None
                                      <case>
                                        pattern (utils/binutils.ml[630,18641+8]..[630,18641+14])
                                          Ppat_constant PConst_int (0xaa64,None)
                                        expression (utils/binutils.ml[630,18641+18]..[630,18641+42])
                                          Pexp_construct "IMAGE_FILE_MACHINE_ARM64" (utils/binutils.ml[630,18641+18]..[630,18641+42])
                                          None
                                      <case>
                                        pattern (utils/binutils.ml[631,18684+8]..[631,18684+14])
                                          Ppat_constant PConst_int (0x8664,None)
                                        expression (utils/binutils.ml[631,18684+18]..[631,18684+42])
                                          Pexp_construct "IMAGE_FILE_MACHINE_AMD64" (utils/binutils.ml[631,18684+18]..[631,18684+42])
                                          None
                                      <case>
                                        pattern (utils/binutils.ml[632,18727+8]..[632,18727+13])
                                          Ppat_constant PConst_int (0x14c,None)
                                        expression (utils/binutils.ml[632,18727+17]..[632,18727+40])
                                          Pexp_construct "IMAGE_FILE_MACHINE_I386" (utils/binutils.ml[632,18727+17]..[632,18727+40])
                                          None
                                      <case>
                                        pattern (utils/binutils.ml[633,18768+8]..[633,18768+9])
                                          Ppat_var "n" (utils/binutils.ml[633,18768+8]..[633,18768+9])
                                        expression (utils/binutils.ml[633,18768+13]..[633,18768+72])
                                          Pexp_apply
                                          expression (utils/binutils.ml[633,18768+13]..[633,18768+18])
                                            Pexp_ident "raise" (utils/binutils.ml[633,18768+13]..[633,18768+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[633,18768+19]..[633,18768+72])
                                                Pexp_construct "Error" (utils/binutils.ml[633,18768+20]..[633,18768+25])
                                                Some
                                                  expression (utils/binutils.ml[633,18768+26]..[633,18768+71])
                                                    Pexp_construct "Unsupported" (utils/binutils.ml[633,18768+27]..[633,18768+38])
                                                    Some
                                                      expression (utils/binutils.ml[633,18768+39]..[633,18768+70])
                                                        Pexp_tuple
                                                        [
                                                          expression (utils/binutils.ml[633,18768+40]..[633,18768+53])
                                                            Pexp_constant PConst_string("MACHINETYPE",(utils/binutils.ml[633,18768+41]..[633,18768+52]),None)
                                                          expression (utils/binutils.ml[633,18768+55]..[633,18768+69])
                                                            Pexp_apply
                                                            expression (utils/binutils.ml[633,18768+55]..[633,18768+67])
                                                              Pexp_ident "Int64.of_int" (utils/binutils.ml[633,18768+55]..[633,18768+67])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (utils/binutils.ml[633,18768+68]..[633,18768+69])
                                                                  Pexp_ident "n" (utils/binutils.ml[633,18768+68]..[633,18768+69])
                                                            ]
                                                        ]
                                          ]
                                    ]
                              ]
                              expression (utils/binutils.ml[635,18848+4]..[649,19409+35])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (utils/binutils.ml[635,18848+8]..[635,18848+15])
                                      Ppat_var "bitness" (utils/binutils.ml[635,18848+8]..[635,18848+15])
                                    expression (utils/binutils.ml[636,18866+6]..[640,18996+37])
                                      Pexp_match
                                      expression (utils/binutils.ml[636,18866+12]..[636,18866+19])
                                        Pexp_ident "machine" (utils/binutils.ml[636,18866+12]..[636,18866+19])
                                      [
                                        <case>
                                          pattern (utils/binutils.ml[637,18891+8]..[638,18924+32])
                                            Ppat_or
                                            pattern (utils/binutils.ml[637,18891+8]..[637,18891+32])
                                              Ppat_construct "IMAGE_FILE_MACHINE_AMD64" (utils/binutils.ml[637,18891+8]..[637,18891+32])
                                              None
                                            pattern (utils/binutils.ml[638,18924+8]..[638,18924+32])
                                              Ppat_construct "IMAGE_FILE_MACHINE_ARM64" (utils/binutils.ml[638,18924+8]..[638,18924+32])
                                              None
                                          expression (utils/binutils.ml[638,18924+36]..[638,18924+39])
                                            Pexp_construct "B64" (utils/binutils.ml[638,18924+36]..[638,18924+39])
                                            None
                                        <case>
                                          pattern (utils/binutils.ml[639,18964+8]..[640,18996+30])
                                            Ppat_or
                                            pattern (utils/binutils.ml[639,18964+8]..[639,18964+31])
                                              Ppat_construct "IMAGE_FILE_MACHINE_I386" (utils/binutils.ml[639,18964+8]..[639,18964+31])
                                              None
                                            pattern (utils/binutils.ml[640,18996+8]..[640,18996+30])
                                              Ppat_construct "IMAGE_FILE_MACHINE_ARM" (utils/binutils.ml[640,18996+8]..[640,18996+30])
                                              None
                                          expression (utils/binutils.ml[640,18996+34]..[640,18996+37])
                                            Pexp_construct "B32" (utils/binutils.ml[640,18996+34]..[640,18996+37])
                                            None
                                      ]
                                ]
                                expression (utils/binutils.ml[642,19041+4]..[649,19409+35])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (utils/binutils.ml[642,19041+8]..[642,19041+9])
                                        Ppat_var "d" (utils/binutils.ml[642,19041+8]..[642,19041+9])
                                      expression (utils/binutils.ml[642,19041+12]..[642,19041+42])
                                        Pexp_record
                                        [
                                          "ic" (utils/binutils.ml[642,19041+13]..[642,19041+15]) ghost
                                            expression (utils/binutils.ml[642,19041+13]..[642,19041+15])
                                              Pexp_ident "ic" (utils/binutils.ml[642,19041+13]..[642,19041+15])
                                          "endianness" (utils/binutils.ml[642,19041+17]..[642,19041+27])
                                            expression (utils/binutils.ml[642,19041+30]..[642,19041+32])
                                              Pexp_construct "LE" (utils/binutils.ml[642,19041+30]..[642,19041+32])
                                              None
                                          "bitness" (utils/binutils.ml[642,19041+34]..[642,19041+41]) ghost
                                            expression (utils/binutils.ml[642,19041+34]..[642,19041+41])
                                              Pexp_ident "bitness" (utils/binutils.ml[642,19041+34]..[642,19041+41])
                                        ]
                                        None
                                  ]
                                  expression (utils/binutils.ml[643,19087+4]..[649,19409+35])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (utils/binutils.ml[643,19087+8]..[643,19087+14])
                                          Ppat_var "header" (utils/binutils.ml[643,19087+8]..[643,19087+14])
                                        expression (utils/binutils.ml[643,19087+17]..[643,19087+43])
                                          Pexp_apply
                                          expression (utils/binutils.ml[643,19087+17]..[643,19087+28])
                                            Pexp_ident "read_header" (utils/binutils.ml[643,19087+17]..[643,19087+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[643,19087+29]..[643,19087+37])
                                                Pexp_ident "e_lfanew" (utils/binutils.ml[643,19087+29]..[643,19087+37])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[643,19087+38]..[643,19087+39])
                                                Pexp_ident "d" (utils/binutils.ml[643,19087+38]..[643,19087+39])
                                            <arg>
                                            Nolabel
                                              expression (utils/binutils.ml[643,19087+40]..[643,19087+43])
                                                Pexp_ident "buf" (utils/binutils.ml[643,19087+40]..[643,19087+43])
                                          ]
                                    ]
                                    expression (utils/binutils.ml[644,19134+4]..[649,19409+35])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (utils/binutils.ml[644,19134+8]..[644,19134+18])
                                            Ppat_var "opt_header" (utils/binutils.ml[644,19134+8]..[644,19134+18])
                                          expression (utils/binutils.ml[644,19134+21]..[644,19134+50])
                                            Pexp_apply
                                            expression (utils/binutils.ml[644,19134+21]..[644,19134+41])
                                              Pexp_ident "read_optional_header" (utils/binutils.ml[644,19134+21]..[644,19134+41])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/binutils.ml[644,19134+42]..[644,19134+43])
                                                  Pexp_ident "d" (utils/binutils.ml[644,19134+42]..[644,19134+43])
                                              <arg>
                                              Nolabel
                                                expression (utils/binutils.ml[644,19134+44]..[644,19134+50])
                                                  Pexp_ident "header" (utils/binutils.ml[644,19134+44]..[644,19134+50])
                                            ]
                                      ]
                                      expression (utils/binutils.ml[645,19188+4]..[649,19409+35])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (utils/binutils.ml[645,19188+8]..[645,19188+16])
                                              Ppat_var "sections" (utils/binutils.ml[645,19188+8]..[645,19188+16])
                                            expression (utils/binutils.ml[645,19188+19]..[645,19188+41])
                                              Pexp_apply
                                              expression (utils/binutils.ml[645,19188+19]..[645,19188+32])
                                                Pexp_ident "read_sections" (utils/binutils.ml[645,19188+19]..[645,19188+32])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[645,19188+33]..[645,19188+34])
                                                    Pexp_ident "d" (utils/binutils.ml[645,19188+33]..[645,19188+34])
                                                <arg>
                                                Nolabel
                                                  expression (utils/binutils.ml[645,19188+35]..[645,19188+41])
                                                    Pexp_ident "header" (utils/binutils.ml[645,19188+35]..[645,19188+41])
                                              ]
                                        ]
                                        expression (utils/binutils.ml[646,19233+4]..[649,19409+35])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (utils/binutils.ml[646,19233+8]..[646,19233+15])
                                                Ppat_var "symbols" (utils/binutils.ml[646,19233+8]..[646,19233+15])
                                              expression (utils/binutils.ml[646,19233+18]..[646,19233+52])
                                                Pexp_apply
                                                expression (utils/binutils.ml[646,19233+18]..[646,19233+30])
                                                  Pexp_ident "read_symbols" (utils/binutils.ml[646,19233+18]..[646,19233+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[646,19233+31]..[646,19233+32])
                                                      Pexp_ident "d" (utils/binutils.ml[646,19233+31]..[646,19233+32])
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[646,19233+33]..[646,19233+43])
                                                      Pexp_ident "opt_header" (utils/binutils.ml[646,19233+33]..[646,19233+43])
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/binutils.ml[646,19233+44]..[646,19233+52])
                                                      Pexp_ident "sections" (utils/binutils.ml[646,19233+44]..[646,19233+52])
                                                ]
                                          ]
                                          expression (utils/binutils.ml[647,19289+4]..[649,19409+35])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (utils/binutils.ml[647,19289+8]..[647,19289+21])
                                                  Ppat_var "symbol_offset" (utils/binutils.ml[647,19289+8]..[647,19289+21])
                                                expression (utils/binutils.ml[647,19289+24]..[647,19289+65])
                                                  Pexp_apply
                                                  expression (utils/binutils.ml[647,19289+24]..[647,19289+37])
                                                    Pexp_ident "symbol_offset" (utils/binutils.ml[647,19289+24]..[647,19289+37])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[647,19289+38]..[647,19289+48])
                                                        Pexp_ident "opt_header" (utils/binutils.ml[647,19289+38]..[647,19289+48])
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[647,19289+49]..[647,19289+57])
                                                        Pexp_ident "sections" (utils/binutils.ml[647,19289+49]..[647,19289+57])
                                                    <arg>
                                                    Nolabel
                                                      expression (utils/binutils.ml[647,19289+58]..[647,19289+65])
                                                        Pexp_ident "symbols" (utils/binutils.ml[647,19289+58]..[647,19289+65])
                                                  ]
                                            ]
                                            expression (utils/binutils.ml[648,19358+4]..[649,19409+35])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (utils/binutils.ml[648,19358+8]..[648,19358+22])
                                                    Ppat_var "defines_symbol" (utils/binutils.ml[648,19358+8]..[648,19358+22])
                                                  expression (utils/binutils.ml[648,19358+25]..[648,19358+47])
                                                    Pexp_apply
                                                    expression (utils/binutils.ml[648,19358+25]..[648,19358+39])
                                                      Pexp_ident "defines_symbol" (utils/binutils.ml[648,19358+25]..[648,19358+39])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/binutils.ml[648,19358+40]..[648,19358+47])
                                                          Pexp_ident "symbols" (utils/binutils.ml[648,19358+40]..[648,19358+47])
                                                    ]
                                              ]
                                              expression (utils/binutils.ml[649,19409+4]..[649,19409+35])
                                                Pexp_record
                                                [
                                                  "symbol_offset" (utils/binutils.ml[649,19409+5]..[649,19409+18]) ghost
                                                    expression (utils/binutils.ml[649,19409+5]..[649,19409+18])
                                                      Pexp_ident "symbol_offset" (utils/binutils.ml[649,19409+5]..[649,19409+18])
                                                  "defines_symbol" (utils/binutils.ml[649,19409+20]..[649,19409+34]) ghost
                                                    expression (utils/binutils.ml[649,19409+20]..[649,19409+34])
                                                      Pexp_ident "defines_symbol" (utils/binutils.ml[649,19409+20]..[649,19409+34])
                                                ]
                                                None
            ]
        ]
  structure_item (utils/binutils.ml[652,19450+0]..[666,19842+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[652,19450+4]..[652,19450+8])
          Ppat_var "read" (utils/binutils.ml[652,19450+4]..[652,19450+8])
        expression (utils/binutils.ml[652,19450+9]..[666,19842+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[652,19450+9]..[652,19450+11])
            Ppat_var "ic" (utils/binutils.ml[652,19450+9]..[652,19450+11])
          expression (utils/binutils.ml[653,19464+2]..[666,19842+40])
            Pexp_sequence
            expression (utils/binutils.ml[653,19464+2]..[653,19464+14])
              Pexp_apply
              expression (utils/binutils.ml[653,19464+2]..[653,19464+9])
                Pexp_ident "seek_in" (utils/binutils.ml[653,19464+2]..[653,19464+9])
              [
                <arg>
                Nolabel
                  expression (utils/binutils.ml[653,19464+10]..[653,19464+12])
                    Pexp_ident "ic" (utils/binutils.ml[653,19464+10]..[653,19464+12])
                <arg>
                Nolabel
                  expression (utils/binutils.ml[653,19464+13]..[653,19464+14])
                    Pexp_constant PConst_int (0,None)
              ]
            expression (utils/binutils.ml[654,19480+2]..[666,19842+40])
              Pexp_let Nonrec
              [
                <def>
                  pattern (utils/binutils.ml[654,19480+6]..[654,19480+11])
                    Ppat_var "magic" (utils/binutils.ml[654,19480+6]..[654,19480+11])
                  expression (utils/binutils.ml[654,19480+14]..[654,19480+38])
                    Pexp_apply
                    expression (utils/binutils.ml[654,19480+14]..[654,19480+33])
                      Pexp_ident "really_input_string" (utils/binutils.ml[654,19480+14]..[654,19480+33])
                    [
                      <arg>
                      Nolabel
                        expression (utils/binutils.ml[654,19480+34]..[654,19480+36])
                          Pexp_ident "ic" (utils/binutils.ml[654,19480+34]..[654,19480+36])
                      <arg>
                      Nolabel
                        expression (utils/binutils.ml[654,19480+37]..[654,19480+38])
                          Pexp_constant PConst_int (4,None)
                    ]
              ]
              expression (utils/binutils.ml[655,19522+2]..[666,19842+40])
                Pexp_match
                expression (utils/binutils.ml[655,19522+8]..[655,19522+50])
                  Pexp_tuple
                  [
                    expression (utils/binutils.ml[655,19522+8]..[655,19522+17])
                      Pexp_apply
                      expression (utils/binutils.ml[655,19522+8]..[655,19522+17]) ghost
                        Pexp_ident "String.get" (utils/binutils.ml[655,19522+8]..[655,19522+17]) ghost
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[655,19522+8]..[655,19522+13])
                            Pexp_ident "magic" (utils/binutils.ml[655,19522+8]..[655,19522+13])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[655,19522+15]..[655,19522+16])
                            Pexp_constant PConst_int (0,None)
                      ]
                    expression (utils/binutils.ml[655,19522+19]..[655,19522+28])
                      Pexp_apply
                      expression (utils/binutils.ml[655,19522+19]..[655,19522+28]) ghost
                        Pexp_ident "String.get" (utils/binutils.ml[655,19522+19]..[655,19522+28]) ghost
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[655,19522+19]..[655,19522+24])
                            Pexp_ident "magic" (utils/binutils.ml[655,19522+19]..[655,19522+24])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[655,19522+26]..[655,19522+27])
                            Pexp_constant PConst_int (1,None)
                      ]
                    expression (utils/binutils.ml[655,19522+30]..[655,19522+39])
                      Pexp_apply
                      expression (utils/binutils.ml[655,19522+30]..[655,19522+39]) ghost
                        Pexp_ident "String.get" (utils/binutils.ml[655,19522+30]..[655,19522+39]) ghost
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[655,19522+30]..[655,19522+35])
                            Pexp_ident "magic" (utils/binutils.ml[655,19522+30]..[655,19522+35])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[655,19522+37]..[655,19522+38])
                            Pexp_constant PConst_int (2,None)
                      ]
                    expression (utils/binutils.ml[655,19522+41]..[655,19522+50])
                      Pexp_apply
                      expression (utils/binutils.ml[655,19522+41]..[655,19522+50]) ghost
                        Pexp_ident "String.get" (utils/binutils.ml[655,19522+41]..[655,19522+50]) ghost
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[655,19522+41]..[655,19522+46])
                            Pexp_ident "magic" (utils/binutils.ml[655,19522+41]..[655,19522+46])
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[655,19522+48]..[655,19522+49])
                            Pexp_constant PConst_int (3,None)
                      ]
                  ]
                [
                  <case>
                    pattern (utils/binutils.ml[656,19578+4]..[656,19578+25])
                      Ppat_tuple
                      [
                        pattern (utils/binutils.ml[656,19578+4]..[656,19578+10])
                          Ppat_constant PConst_char 7f
                        pattern (utils/binutils.ml[656,19578+12]..[656,19578+15])
                          Ppat_constant PConst_char 45
                        pattern (utils/binutils.ml[656,19578+17]..[656,19578+20])
                          Ppat_constant PConst_char 4c
                        pattern (utils/binutils.ml[656,19578+22]..[656,19578+25])
                          Ppat_constant PConst_char 46
                      ]
                    expression (utils/binutils.ml[657,19607+6]..[657,19607+17])
                      Pexp_apply
                      expression (utils/binutils.ml[657,19607+6]..[657,19607+14])
                        Pexp_ident "ELF.read" (utils/binutils.ml[657,19607+6]..[657,19607+14])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[657,19607+15]..[657,19607+17])
                            Pexp_ident "ic" (utils/binutils.ml[657,19607+15]..[657,19607+17])
                      ]
                  <case>
                    pattern (utils/binutils.ml[658,19625+4]..[661,19730+34])
                      Ppat_or
                      pattern (utils/binutils.ml[658,19625+4]..[660,19695+34])
                        Ppat_or
                        pattern (utils/binutils.ml[658,19625+4]..[659,19660+34])
                          Ppat_or
                          pattern (utils/binutils.ml[658,19625+4]..[658,19625+34])
                            Ppat_tuple
                            [
                              pattern (utils/binutils.ml[658,19625+4]..[658,19625+10])
                                Ppat_constant PConst_char fe
                              pattern (utils/binutils.ml[658,19625+12]..[658,19625+18])
                                Ppat_constant PConst_char ed
                              pattern (utils/binutils.ml[658,19625+20]..[658,19625+26])
                                Ppat_constant PConst_char fa
                              pattern (utils/binutils.ml[658,19625+28]..[658,19625+34])
                                Ppat_constant PConst_char ce
                            ]
                          pattern (utils/binutils.ml[659,19660+4]..[659,19660+34])
                            Ppat_tuple
                            [
                              pattern (utils/binutils.ml[659,19660+4]..[659,19660+10])
                                Ppat_constant PConst_char ce
                              pattern (utils/binutils.ml[659,19660+12]..[659,19660+18])
                                Ppat_constant PConst_char fa
                              pattern (utils/binutils.ml[659,19660+20]..[659,19660+26])
                                Ppat_constant PConst_char ed
                              pattern (utils/binutils.ml[659,19660+28]..[659,19660+34])
                                Ppat_constant PConst_char fe
                            ]
                        pattern (utils/binutils.ml[660,19695+4]..[660,19695+34])
                          Ppat_tuple
                          [
                            pattern (utils/binutils.ml[660,19695+4]..[660,19695+10])
                              Ppat_constant PConst_char fe
                            pattern (utils/binutils.ml[660,19695+12]..[660,19695+18])
                              Ppat_constant PConst_char ed
                            pattern (utils/binutils.ml[660,19695+20]..[660,19695+26])
                              Ppat_constant PConst_char fa
                            pattern (utils/binutils.ml[660,19695+28]..[660,19695+34])
                              Ppat_constant PConst_char cf
                          ]
                      pattern (utils/binutils.ml[661,19730+4]..[661,19730+34])
                        Ppat_tuple
                        [
                          pattern (utils/binutils.ml[661,19730+4]..[661,19730+10])
                            Ppat_constant PConst_char cf
                          pattern (utils/binutils.ml[661,19730+12]..[661,19730+18])
                            Ppat_constant PConst_char fa
                          pattern (utils/binutils.ml[661,19730+20]..[661,19730+26])
                            Ppat_constant PConst_char ed
                          pattern (utils/binutils.ml[661,19730+28]..[661,19730+34])
                            Ppat_constant PConst_char fe
                        ]
                    expression (utils/binutils.ml[662,19768+6]..[662,19768+20])
                      Pexp_apply
                      expression (utils/binutils.ml[662,19768+6]..[662,19768+17])
                        Pexp_ident "Mach_O.read" (utils/binutils.ml[662,19768+6]..[662,19768+17])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[662,19768+18]..[662,19768+20])
                            Pexp_ident "ic" (utils/binutils.ml[662,19768+18]..[662,19768+20])
                      ]
                  <case>
                    pattern (utils/binutils.ml[663,19789+4]..[663,19789+18])
                      Ppat_tuple
                      [
                        pattern (utils/binutils.ml[663,19789+4]..[663,19789+7])
                          Ppat_constant PConst_char 4d
                        pattern (utils/binutils.ml[663,19789+9]..[663,19789+12])
                          Ppat_constant PConst_char 5a
                        pattern (utils/binutils.ml[663,19789+14]..[663,19789+15])
                          Ppat_any
                        pattern (utils/binutils.ml[663,19789+17]..[663,19789+18])
                          Ppat_any
                      ]
                    expression (utils/binutils.ml[664,19811+6]..[664,19811+21])
                      Pexp_apply
                      expression (utils/binutils.ml[664,19811+6]..[664,19811+18])
                        Pexp_ident "FlexDLL.read" (utils/binutils.ml[664,19811+6]..[664,19811+18])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[664,19811+19]..[664,19811+21])
                            Pexp_ident "ic" (utils/binutils.ml[664,19811+19]..[664,19811+21])
                      ]
                  <case>
                    pattern (utils/binutils.ml[665,19833+4]..[665,19833+5])
                      Ppat_any
                    expression (utils/binutils.ml[666,19842+6]..[666,19842+40])
                      Pexp_apply
                      expression (utils/binutils.ml[666,19842+6]..[666,19842+11])
                        Pexp_ident "raise" (utils/binutils.ml[666,19842+6]..[666,19842+11])
                      [
                        <arg>
                        Nolabel
                          expression (utils/binutils.ml[666,19842+12]..[666,19842+40])
                            Pexp_construct "Error" (utils/binutils.ml[666,19842+13]..[666,19842+18])
                            Some
                              expression (utils/binutils.ml[666,19842+19]..[666,19842+39])
                                Pexp_construct "Unrecognized" (utils/binutils.ml[666,19842+20]..[666,19842+32])
                                Some
                                  expression (utils/binutils.ml[666,19842+33]..[666,19842+38])
                                    Pexp_ident "magic" (utils/binutils.ml[666,19842+33]..[666,19842+38])
                      ]
                ]
    ]
  structure_item (utils/binutils.ml[668,19884+0]..[670,19937+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[668,19884+4]..[668,19884+16])
          Ppat_var "with_open_in" (utils/binutils.ml[668,19884+4]..[668,19884+16])
        expression (utils/binutils.ml[668,19884+17]..[670,19937+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[668,19884+17]..[668,19884+19])
            Ppat_var "fn" (utils/binutils.ml[668,19884+17]..[668,19884+19])
          expression (utils/binutils.ml[668,19884+20]..[670,19937+69]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/binutils.ml[668,19884+20]..[668,19884+21])
              Ppat_var "f" (utils/binutils.ml[668,19884+20]..[668,19884+21])
            expression (utils/binutils.ml[669,19908+2]..[670,19937+69])
              Pexp_let Nonrec
              [
                <def>
                  pattern (utils/binutils.ml[669,19908+6]..[669,19908+8])
                    Ppat_var "ic" (utils/binutils.ml[669,19908+6]..[669,19908+8])
                  expression (utils/binutils.ml[669,19908+11]..[669,19908+25])
                    Pexp_apply
                    expression (utils/binutils.ml[669,19908+11]..[669,19908+22])
                      Pexp_ident "open_in_bin" (utils/binutils.ml[669,19908+11]..[669,19908+22])
                    [
                      <arg>
                      Nolabel
                        expression (utils/binutils.ml[669,19908+23]..[669,19908+25])
                          Pexp_ident "fn" (utils/binutils.ml[669,19908+23]..[669,19908+25])
                    ]
              ]
              expression (utils/binutils.ml[670,19937+2]..[670,19937+69])
                Pexp_apply
                expression (utils/binutils.ml[670,19937+2]..[670,19937+13])
                  Pexp_ident "Fun.protect" (utils/binutils.ml[670,19937+2]..[670,19937+13])
                [
                  <arg>
                  Labelled "finally"
                    expression (utils/binutils.ml[670,19937+23]..[670,19937+52])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (utils/binutils.ml[670,19937+28]..[670,19937+30])
                        Ppat_construct "()" (utils/binutils.ml[670,19937+28]..[670,19937+30])
                        None
                      expression (utils/binutils.ml[670,19937+34]..[670,19937+51])
                        Pexp_apply
                        expression (utils/binutils.ml[670,19937+34]..[670,19937+48])
                          Pexp_ident "close_in_noerr" (utils/binutils.ml[670,19937+34]..[670,19937+48])
                        [
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[670,19937+49]..[670,19937+51])
                              Pexp_ident "ic" (utils/binutils.ml[670,19937+49]..[670,19937+51])
                        ]
                  <arg>
                  Nolabel
                    expression (utils/binutils.ml[670,19937+53]..[670,19937+69])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (utils/binutils.ml[670,19937+58]..[670,19937+60])
                        Ppat_construct "()" (utils/binutils.ml[670,19937+58]..[670,19937+60])
                        None
                      expression (utils/binutils.ml[670,19937+64]..[670,19937+68])
                        Pexp_apply
                        expression (utils/binutils.ml[670,19937+64]..[670,19937+65])
                          Pexp_ident "f" (utils/binutils.ml[670,19937+64]..[670,19937+65])
                        [
                          <arg>
                          Nolabel
                            expression (utils/binutils.ml[670,19937+66]..[670,19937+68])
                              Pexp_ident "ic" (utils/binutils.ml[670,19937+66]..[670,19937+68])
                        ]
                ]
    ]
  structure_item (utils/binutils.ml[672,20008+0]..[678,20172+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[672,20008+4]..[672,20008+8])
          Ppat_var "read" (utils/binutils.ml[672,20008+4]..[672,20008+8])
        expression (utils/binutils.ml[672,20008+9]..[678,20172+22]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[672,20008+9]..[672,20008+17])
            Ppat_var "filename" (utils/binutils.ml[672,20008+9]..[672,20008+17])
          expression (utils/binutils.ml[673,20028+2]..[678,20172+22])
            Pexp_match
            expression (utils/binutils.ml[673,20028+8]..[673,20028+34])
              Pexp_apply
              expression (utils/binutils.ml[673,20028+8]..[673,20028+20])
                Pexp_ident "with_open_in" (utils/binutils.ml[673,20028+8]..[673,20028+20])
              [
                <arg>
                Nolabel
                  expression (utils/binutils.ml[673,20028+21]..[673,20028+29])
                    Pexp_ident "filename" (utils/binutils.ml[673,20028+21]..[673,20028+29])
                <arg>
                Nolabel
                  expression (utils/binutils.ml[673,20028+30]..[673,20028+34])
                    Pexp_ident "read" (utils/binutils.ml[673,20028+30]..[673,20028+34])
              ]
            [
              <case>
                pattern (utils/binutils.ml[674,20068+4]..[674,20068+5])
                  Ppat_var "t" (utils/binutils.ml[674,20068+4]..[674,20068+5])
                expression (utils/binutils.ml[674,20068+9]..[674,20068+13])
                  Pexp_construct "Ok" (utils/binutils.ml[674,20068+9]..[674,20068+11])
                  Some
                    expression (utils/binutils.ml[674,20068+12]..[674,20068+13])
                      Pexp_ident "t" (utils/binutils.ml[674,20068+12]..[674,20068+13])
              <case>
                pattern (utils/binutils.ml[675,20082+4]..[675,20082+25])
                  Ppat_exception
                  pattern (utils/binutils.ml[675,20082+14]..[675,20082+25])
                    Ppat_construct "End_of_file" (utils/binutils.ml[675,20082+14]..[675,20082+25])
                    None
                expression (utils/binutils.ml[676,20111+6]..[676,20111+33])
                  Pexp_construct "Result.Error" (utils/binutils.ml[676,20111+6]..[676,20111+18])
                  Some
                    expression (utils/binutils.ml[676,20111+19]..[676,20111+33])
                      Pexp_construct "Truncated_file" (utils/binutils.ml[676,20111+19]..[676,20111+33])
                      None
              <case>
                pattern (utils/binutils.ml[677,20145+4]..[677,20145+23])
                  Ppat_exception
                  pattern (utils/binutils.ml[677,20145+14]..[677,20145+23])
                    Ppat_construct "Error" (utils/binutils.ml[677,20145+14]..[677,20145+19])
                    Some
                      []
                      pattern (utils/binutils.ml[677,20145+20]..[677,20145+23])
                        Ppat_var "err" (utils/binutils.ml[677,20145+20]..[677,20145+23])
                expression (utils/binutils.ml[678,20172+6]..[678,20172+22])
                  Pexp_construct "Result.Error" (utils/binutils.ml[678,20172+6]..[678,20172+18])
                  Some
                    expression (utils/binutils.ml[678,20172+19]..[678,20172+22])
                      Pexp_ident "err" (utils/binutils.ml[678,20172+19]..[678,20172+22])
            ]
    ]
  structure_item (utils/binutils.ml[680,20196+0]..[681,20245+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[680,20196+4]..[680,20196+18])
          Ppat_var "defines_symbol" (utils/binutils.ml[680,20196+4]..[680,20196+18])
        expression (utils/binutils.ml[680,20196+19]..[681,20245+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[680,20196+19]..[680,20196+38])
            Ppat_record Open
            [
              "defines_symbol" (utils/binutils.ml[680,20196+20]..[680,20196+34]) ghost
                pattern (utils/binutils.ml[680,20196+20]..[680,20196+34])
                  Ppat_var "defines_symbol" (utils/binutils.ml[680,20196+20]..[680,20196+34])
            ]
          expression (utils/binutils.ml[680,20196+39]..[681,20245+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/binutils.ml[680,20196+39]..[680,20196+46])
              Ppat_var "symname" (utils/binutils.ml[680,20196+39]..[680,20196+46])
            expression (utils/binutils.ml[681,20245+2]..[681,20245+24])
              Pexp_apply
              expression (utils/binutils.ml[681,20245+2]..[681,20245+16])
                Pexp_ident "defines_symbol" (utils/binutils.ml[681,20245+2]..[681,20245+16])
              [
                <arg>
                Nolabel
                  expression (utils/binutils.ml[681,20245+17]..[681,20245+24])
                    Pexp_ident "symname" (utils/binutils.ml[681,20245+17]..[681,20245+24])
              ]
    ]
  structure_item (utils/binutils.ml[683,20271+0]..[684,20318+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/binutils.ml[683,20271+4]..[683,20271+17])
          Ppat_var "symbol_offset" (utils/binutils.ml[683,20271+4]..[683,20271+17])
        expression (utils/binutils.ml[683,20271+18]..[684,20318+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/binutils.ml[683,20271+18]..[683,20271+36])
            Ppat_record Open
            [
              "symbol_offset" (utils/binutils.ml[683,20271+19]..[683,20271+32]) ghost
                pattern (utils/binutils.ml[683,20271+19]..[683,20271+32])
                  Ppat_var "symbol_offset" (utils/binutils.ml[683,20271+19]..[683,20271+32])
            ]
          expression (utils/binutils.ml[683,20271+37]..[684,20318+23]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/binutils.ml[683,20271+37]..[683,20271+44])
              Ppat_var "symname" (utils/binutils.ml[683,20271+37]..[683,20271+44])
            expression (utils/binutils.ml[684,20318+2]..[684,20318+23])
              Pexp_apply
              expression (utils/binutils.ml[684,20318+2]..[684,20318+15])
                Pexp_ident "symbol_offset" (utils/binutils.ml[684,20318+2]..[684,20318+15])
              [
                <arg>
                Nolabel
                  expression (utils/binutils.ml[684,20318+16]..[684,20318+23])
                    Pexp_ident "symname" (utils/binutils.ml[684,20318+16]..[684,20318+23])
              ]
    ]
]

