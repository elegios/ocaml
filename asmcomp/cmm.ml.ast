[
  structure_item (asmcomp/cmm.ml[16,1079+0]..[20,1130+9])
    Pstr_type Rec
    [
      type_declaration "machtype_component" (asmcomp/cmm.ml[16,1079+5]..[16,1079+23]) (asmcomp/cmm.ml[16,1079+0]..[20,1130+9])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/cmm.ml[17,1105+2]..[17,1105+7])
                "Val" (asmcomp/cmm.ml[17,1105+4]..[17,1105+7])
                []
                None
              (asmcomp/cmm.ml[18,1113+2]..[18,1113+8])
                "Addr" (asmcomp/cmm.ml[18,1113+4]..[18,1113+8])
                []
                None
              (asmcomp/cmm.ml[19,1122+2]..[19,1122+7])
                "Int" (asmcomp/cmm.ml[19,1122+4]..[19,1122+7])
                []
                None
              (asmcomp/cmm.ml[20,1130+2]..[20,1130+9])
                "Float" (asmcomp/cmm.ml[20,1130+4]..[20,1130+9])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/cmm.ml[22,1141+0]..[22,1141+40])
    Pstr_type Rec
    [
      type_declaration "machtype" (asmcomp/cmm.ml[22,1141+5]..[22,1141+13]) (asmcomp/cmm.ml[22,1141+0]..[22,1141+40])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (asmcomp/cmm.ml[22,1141+16]..[22,1141+40])
              Ptyp_constr "array" (asmcomp/cmm.ml[22,1141+35]..[22,1141+40])
              [
                core_type (asmcomp/cmm.ml[22,1141+16]..[22,1141+34])
                  Ptyp_constr "machtype_component" (asmcomp/cmm.ml[22,1141+16]..[22,1141+34])
                  []
              ]
    ]
  structure_item (asmcomp/cmm.ml[24,1183+0]..[24,1183+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[24,1183+4]..[24,1183+12])
          Ppat_var "typ_void" (asmcomp/cmm.ml[24,1183+4]..[24,1183+12])
        expression (asmcomp/cmm.ml[24,1183+15]..[24,1183+48])
          Pexp_constraint
          expression (asmcomp/cmm.ml[24,1183+16]..[24,1183+20])
            Pexp_array
            []
          core_type (asmcomp/cmm.ml[24,1183+23]..[24,1183+47])
            Ptyp_constr "array" (asmcomp/cmm.ml[24,1183+42]..[24,1183+47])
            [
              core_type (asmcomp/cmm.ml[24,1183+23]..[24,1183+41])
                Ptyp_constr "machtype_component" (asmcomp/cmm.ml[24,1183+23]..[24,1183+41])
                []
            ]
    ]
  structure_item (asmcomp/cmm.ml[25,1232+0]..[25,1232+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[25,1232+4]..[25,1232+11])
          Ppat_var "typ_val" (asmcomp/cmm.ml[25,1232+4]..[25,1232+11])
        expression (asmcomp/cmm.ml[25,1232+14]..[25,1232+21])
          Pexp_array
          [
            expression (asmcomp/cmm.ml[25,1232+16]..[25,1232+19])
              Pexp_construct "Val" (asmcomp/cmm.ml[25,1232+16]..[25,1232+19])
              None
          ]
    ]
  structure_item (asmcomp/cmm.ml[26,1254+0]..[26,1254+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[26,1254+4]..[26,1254+12])
          Ppat_var "typ_addr" (asmcomp/cmm.ml[26,1254+4]..[26,1254+12])
        expression (asmcomp/cmm.ml[26,1254+15]..[26,1254+23])
          Pexp_array
          [
            expression (asmcomp/cmm.ml[26,1254+17]..[26,1254+21])
              Pexp_construct "Addr" (asmcomp/cmm.ml[26,1254+17]..[26,1254+21])
              None
          ]
    ]
  structure_item (asmcomp/cmm.ml[27,1278+0]..[27,1278+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[27,1278+4]..[27,1278+11])
          Ppat_var "typ_int" (asmcomp/cmm.ml[27,1278+4]..[27,1278+11])
        expression (asmcomp/cmm.ml[27,1278+14]..[27,1278+21])
          Pexp_array
          [
            expression (asmcomp/cmm.ml[27,1278+16]..[27,1278+19])
              Pexp_construct "Int" (asmcomp/cmm.ml[27,1278+16]..[27,1278+19])
              None
          ]
    ]
  structure_item (asmcomp/cmm.ml[28,1300+0]..[28,1300+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[28,1300+4]..[28,1300+13])
          Ppat_var "typ_float" (asmcomp/cmm.ml[28,1300+4]..[28,1300+13])
        expression (asmcomp/cmm.ml[28,1300+16]..[28,1300+25])
          Pexp_array
          [
            expression (asmcomp/cmm.ml[28,1300+18]..[28,1300+23])
              Pexp_construct "Float" (asmcomp/cmm.ml[28,1300+18]..[28,1300+23])
              None
          ]
    ]
  structure_item (asmcomp/cmm.ml[30,1327+0]..[45,1787+2])
    Pstr_attribute "ocaml.text"
    [
      structure_item (asmcomp/cmm.ml[30,1327+0]..[45,1787+2])
        Pstr_eval
        expression (asmcomp/cmm.ml[30,1327+0]..[45,1787+2])
          Pexp_constant PConst_string(" [machtype_component]s are partially ordered as follows:\n\n      Addr     Float\n       ^\n       |\n      Val\n       ^\n       |\n      Int\n\n  In particular, [Addr] must be above [Val], to ensure that if there is\n  a join point between a code path yielding [Addr] and one yielding [Val]\n  then the result is treated as a derived pointer into the heap (i.e. [Addr]).\n  (Such a result may not be live across any call site or a fatal compiler\n  error will result.)\n",(asmcomp/cmm.ml[30,1327+0]..[45,1787+2]),None)
    ]
  structure_item (asmcomp/cmm.ml[47,1791+0]..[62,2192+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[47,1791+4]..[47,1791+17])
          Ppat_var "lub_component" (asmcomp/cmm.ml[47,1791+4]..[47,1791+17])
        expression (asmcomp/cmm.ml[47,1791+18]..[62,2192+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/cmm.ml[47,1791+18]..[47,1791+23])
            Ppat_var "comp1" (asmcomp/cmm.ml[47,1791+18]..[47,1791+23])
          expression (asmcomp/cmm.ml[47,1791+24]..[62,2192+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/cmm.ml[47,1791+24]..[47,1791+29])
              Ppat_var "comp2" (asmcomp/cmm.ml[47,1791+24]..[47,1791+29])
            expression (asmcomp/cmm.ml[48,1823+2]..[62,2192+16])
              Pexp_match
              expression (asmcomp/cmm.ml[48,1823+8]..[48,1823+20])
                Pexp_tuple
                [
                  expression (asmcomp/cmm.ml[48,1823+8]..[48,1823+13])
                    Pexp_ident "comp1" (asmcomp/cmm.ml[48,1823+8]..[48,1823+13])
                  expression (asmcomp/cmm.ml[48,1823+15]..[48,1823+20])
                    Pexp_ident "comp2" (asmcomp/cmm.ml[48,1823+15]..[48,1823+20])
                ]
              [
                <case>
                  pattern (asmcomp/cmm.ml[49,1849+4]..[49,1849+12])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[49,1849+4]..[49,1849+7])
                        Ppat_construct "Int" (asmcomp/cmm.ml[49,1849+4]..[49,1849+7])
                        None
                      pattern (asmcomp/cmm.ml[49,1849+9]..[49,1849+12])
                        Ppat_construct "Int" (asmcomp/cmm.ml[49,1849+9]..[49,1849+12])
                        None
                    ]
                  expression (asmcomp/cmm.ml[49,1849+16]..[49,1849+19])
                    Pexp_construct "Int" (asmcomp/cmm.ml[49,1849+16]..[49,1849+19])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[50,1869+4]..[50,1869+12])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[50,1869+4]..[50,1869+7])
                        Ppat_construct "Int" (asmcomp/cmm.ml[50,1869+4]..[50,1869+7])
                        None
                      pattern (asmcomp/cmm.ml[50,1869+9]..[50,1869+12])
                        Ppat_construct "Val" (asmcomp/cmm.ml[50,1869+9]..[50,1869+12])
                        None
                    ]
                  expression (asmcomp/cmm.ml[50,1869+16]..[50,1869+19])
                    Pexp_construct "Val" (asmcomp/cmm.ml[50,1869+16]..[50,1869+19])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[51,1889+4]..[51,1889+13])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[51,1889+4]..[51,1889+7])
                        Ppat_construct "Int" (asmcomp/cmm.ml[51,1889+4]..[51,1889+7])
                        None
                      pattern (asmcomp/cmm.ml[51,1889+9]..[51,1889+13])
                        Ppat_construct "Addr" (asmcomp/cmm.ml[51,1889+9]..[51,1889+13])
                        None
                    ]
                  expression (asmcomp/cmm.ml[51,1889+17]..[51,1889+21])
                    Pexp_construct "Addr" (asmcomp/cmm.ml[51,1889+17]..[51,1889+21])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[52,1911+4]..[52,1911+12])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[52,1911+4]..[52,1911+7])
                        Ppat_construct "Val" (asmcomp/cmm.ml[52,1911+4]..[52,1911+7])
                        None
                      pattern (asmcomp/cmm.ml[52,1911+9]..[52,1911+12])
                        Ppat_construct "Int" (asmcomp/cmm.ml[52,1911+9]..[52,1911+12])
                        None
                    ]
                  expression (asmcomp/cmm.ml[52,1911+16]..[52,1911+19])
                    Pexp_construct "Val" (asmcomp/cmm.ml[52,1911+16]..[52,1911+19])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[53,1931+4]..[53,1931+12])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[53,1931+4]..[53,1931+7])
                        Ppat_construct "Val" (asmcomp/cmm.ml[53,1931+4]..[53,1931+7])
                        None
                      pattern (asmcomp/cmm.ml[53,1931+9]..[53,1931+12])
                        Ppat_construct "Val" (asmcomp/cmm.ml[53,1931+9]..[53,1931+12])
                        None
                    ]
                  expression (asmcomp/cmm.ml[53,1931+16]..[53,1931+19])
                    Pexp_construct "Val" (asmcomp/cmm.ml[53,1931+16]..[53,1931+19])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[54,1951+4]..[54,1951+13])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[54,1951+4]..[54,1951+7])
                        Ppat_construct "Val" (asmcomp/cmm.ml[54,1951+4]..[54,1951+7])
                        None
                      pattern (asmcomp/cmm.ml[54,1951+9]..[54,1951+13])
                        Ppat_construct "Addr" (asmcomp/cmm.ml[54,1951+9]..[54,1951+13])
                        None
                    ]
                  expression (asmcomp/cmm.ml[54,1951+17]..[54,1951+21])
                    Pexp_construct "Addr" (asmcomp/cmm.ml[54,1951+17]..[54,1951+21])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[55,1973+4]..[55,1973+13])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[55,1973+4]..[55,1973+8])
                        Ppat_construct "Addr" (asmcomp/cmm.ml[55,1973+4]..[55,1973+8])
                        None
                      pattern (asmcomp/cmm.ml[55,1973+10]..[55,1973+13])
                        Ppat_construct "Int" (asmcomp/cmm.ml[55,1973+10]..[55,1973+13])
                        None
                    ]
                  expression (asmcomp/cmm.ml[55,1973+17]..[55,1973+21])
                    Pexp_construct "Addr" (asmcomp/cmm.ml[55,1973+17]..[55,1973+21])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[56,1995+4]..[56,1995+14])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[56,1995+4]..[56,1995+8])
                        Ppat_construct "Addr" (asmcomp/cmm.ml[56,1995+4]..[56,1995+8])
                        None
                      pattern (asmcomp/cmm.ml[56,1995+10]..[56,1995+14])
                        Ppat_construct "Addr" (asmcomp/cmm.ml[56,1995+10]..[56,1995+14])
                        None
                    ]
                  expression (asmcomp/cmm.ml[56,1995+18]..[56,1995+22])
                    Pexp_construct "Addr" (asmcomp/cmm.ml[56,1995+18]..[56,1995+22])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[57,2018+4]..[57,2018+13])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[57,2018+4]..[57,2018+8])
                        Ppat_construct "Addr" (asmcomp/cmm.ml[57,2018+4]..[57,2018+8])
                        None
                      pattern (asmcomp/cmm.ml[57,2018+10]..[57,2018+13])
                        Ppat_construct "Val" (asmcomp/cmm.ml[57,2018+10]..[57,2018+13])
                        None
                    ]
                  expression (asmcomp/cmm.ml[57,2018+17]..[57,2018+21])
                    Pexp_construct "Addr" (asmcomp/cmm.ml[57,2018+17]..[57,2018+21])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[58,2040+4]..[58,2040+16])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[58,2040+4]..[58,2040+9])
                        Ppat_construct "Float" (asmcomp/cmm.ml[58,2040+4]..[58,2040+9])
                        None
                      pattern (asmcomp/cmm.ml[58,2040+11]..[58,2040+16])
                        Ppat_construct "Float" (asmcomp/cmm.ml[58,2040+11]..[58,2040+16])
                        None
                    ]
                  expression (asmcomp/cmm.ml[58,2040+20]..[58,2040+25])
                    Pexp_construct "Float" (asmcomp/cmm.ml[58,2040+20]..[58,2040+25])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[59,2066+4]..[60,2096+29])
                    Ppat_or
                    pattern (asmcomp/cmm.ml[59,2066+4]..[59,2066+29])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[59,2066+4]..[59,2066+22])
                          Ppat_or
                          pattern (asmcomp/cmm.ml[59,2066+5]..[59,2066+15])
                            Ppat_or
                            pattern (asmcomp/cmm.ml[59,2066+5]..[59,2066+8])
                              Ppat_construct "Int" (asmcomp/cmm.ml[59,2066+5]..[59,2066+8])
                              None
                            pattern (asmcomp/cmm.ml[59,2066+11]..[59,2066+15])
                              Ppat_construct "Addr" (asmcomp/cmm.ml[59,2066+11]..[59,2066+15])
                              None
                          pattern (asmcomp/cmm.ml[59,2066+18]..[59,2066+21])
                            Ppat_construct "Val" (asmcomp/cmm.ml[59,2066+18]..[59,2066+21])
                            None
                        pattern (asmcomp/cmm.ml[59,2066+24]..[59,2066+29])
                          Ppat_construct "Float" (asmcomp/cmm.ml[59,2066+24]..[59,2066+29])
                          None
                      ]
                    pattern (asmcomp/cmm.ml[60,2096+4]..[60,2096+29])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[60,2096+4]..[60,2096+9])
                          Ppat_construct "Float" (asmcomp/cmm.ml[60,2096+4]..[60,2096+9])
                          None
                        pattern (asmcomp/cmm.ml[60,2096+11]..[60,2096+29])
                          Ppat_or
                          pattern (asmcomp/cmm.ml[60,2096+12]..[60,2096+22])
                            Ppat_or
                            pattern (asmcomp/cmm.ml[60,2096+12]..[60,2096+15])
                              Ppat_construct "Int" (asmcomp/cmm.ml[60,2096+12]..[60,2096+15])
                              None
                            pattern (asmcomp/cmm.ml[60,2096+18]..[60,2096+22])
                              Ppat_construct "Addr" (asmcomp/cmm.ml[60,2096+18]..[60,2096+22])
                              None
                          pattern (asmcomp/cmm.ml[60,2096+25]..[60,2096+28])
                            Ppat_construct "Val" (asmcomp/cmm.ml[60,2096+25]..[60,2096+28])
                            None
                      ]
                  expression (asmcomp/cmm.ml[62,2192+4]..[62,2192+16])
                    Pexp_assert
                    expression (asmcomp/cmm.ml[62,2192+11]..[62,2192+16])
                      Pexp_construct "false" (asmcomp/cmm.ml[62,2192+11]..[62,2192+16])
                      None
              ]
    ]
  structure_item (asmcomp/cmm.ml[64,2210+0]..[78,2553+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[64,2210+4]..[64,2210+16])
          Ppat_var "ge_component" (asmcomp/cmm.ml[64,2210+4]..[64,2210+16])
        expression (asmcomp/cmm.ml[64,2210+17]..[78,2553+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/cmm.ml[64,2210+17]..[64,2210+22])
            Ppat_var "comp1" (asmcomp/cmm.ml[64,2210+17]..[64,2210+22])
          expression (asmcomp/cmm.ml[64,2210+23]..[78,2553+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/cmm.ml[64,2210+23]..[64,2210+28])
              Ppat_var "comp2" (asmcomp/cmm.ml[64,2210+23]..[64,2210+28])
            expression (asmcomp/cmm.ml[65,2241+2]..[78,2553+16])
              Pexp_match
              expression (asmcomp/cmm.ml[65,2241+8]..[65,2241+20])
                Pexp_tuple
                [
                  expression (asmcomp/cmm.ml[65,2241+8]..[65,2241+13])
                    Pexp_ident "comp1" (asmcomp/cmm.ml[65,2241+8]..[65,2241+13])
                  expression (asmcomp/cmm.ml[65,2241+15]..[65,2241+20])
                    Pexp_ident "comp2" (asmcomp/cmm.ml[65,2241+15]..[65,2241+20])
                ]
              [
                <case>
                  pattern (asmcomp/cmm.ml[66,2267+4]..[66,2267+12])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[66,2267+4]..[66,2267+7])
                        Ppat_construct "Int" (asmcomp/cmm.ml[66,2267+4]..[66,2267+7])
                        None
                      pattern (asmcomp/cmm.ml[66,2267+9]..[66,2267+12])
                        Ppat_construct "Int" (asmcomp/cmm.ml[66,2267+9]..[66,2267+12])
                        None
                    ]
                  expression (asmcomp/cmm.ml[66,2267+16]..[66,2267+20])
                    Pexp_construct "true" (asmcomp/cmm.ml[66,2267+16]..[66,2267+20])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[67,2288+4]..[67,2288+13])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[67,2288+4]..[67,2288+7])
                        Ppat_construct "Int" (asmcomp/cmm.ml[67,2288+4]..[67,2288+7])
                        None
                      pattern (asmcomp/cmm.ml[67,2288+9]..[67,2288+13])
                        Ppat_construct "Addr" (asmcomp/cmm.ml[67,2288+9]..[67,2288+13])
                        None
                    ]
                  expression (asmcomp/cmm.ml[67,2288+17]..[67,2288+22])
                    Pexp_construct "false" (asmcomp/cmm.ml[67,2288+17]..[67,2288+22])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[68,2311+4]..[68,2311+12])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[68,2311+4]..[68,2311+7])
                        Ppat_construct "Int" (asmcomp/cmm.ml[68,2311+4]..[68,2311+7])
                        None
                      pattern (asmcomp/cmm.ml[68,2311+9]..[68,2311+12])
                        Ppat_construct "Val" (asmcomp/cmm.ml[68,2311+9]..[68,2311+12])
                        None
                    ]
                  expression (asmcomp/cmm.ml[68,2311+16]..[68,2311+21])
                    Pexp_construct "false" (asmcomp/cmm.ml[68,2311+16]..[68,2311+21])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[69,2333+4]..[69,2333+12])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[69,2333+4]..[69,2333+7])
                        Ppat_construct "Val" (asmcomp/cmm.ml[69,2333+4]..[69,2333+7])
                        None
                      pattern (asmcomp/cmm.ml[69,2333+9]..[69,2333+12])
                        Ppat_construct "Int" (asmcomp/cmm.ml[69,2333+9]..[69,2333+12])
                        None
                    ]
                  expression (asmcomp/cmm.ml[69,2333+16]..[69,2333+20])
                    Pexp_construct "true" (asmcomp/cmm.ml[69,2333+16]..[69,2333+20])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[70,2354+4]..[70,2354+12])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[70,2354+4]..[70,2354+7])
                        Ppat_construct "Val" (asmcomp/cmm.ml[70,2354+4]..[70,2354+7])
                        None
                      pattern (asmcomp/cmm.ml[70,2354+9]..[70,2354+12])
                        Ppat_construct "Val" (asmcomp/cmm.ml[70,2354+9]..[70,2354+12])
                        None
                    ]
                  expression (asmcomp/cmm.ml[70,2354+16]..[70,2354+20])
                    Pexp_construct "true" (asmcomp/cmm.ml[70,2354+16]..[70,2354+20])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[71,2375+4]..[71,2375+13])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[71,2375+4]..[71,2375+7])
                        Ppat_construct "Val" (asmcomp/cmm.ml[71,2375+4]..[71,2375+7])
                        None
                      pattern (asmcomp/cmm.ml[71,2375+9]..[71,2375+13])
                        Ppat_construct "Addr" (asmcomp/cmm.ml[71,2375+9]..[71,2375+13])
                        None
                    ]
                  expression (asmcomp/cmm.ml[71,2375+17]..[71,2375+22])
                    Pexp_construct "false" (asmcomp/cmm.ml[71,2375+17]..[71,2375+22])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[72,2398+4]..[72,2398+13])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[72,2398+4]..[72,2398+8])
                        Ppat_construct "Addr" (asmcomp/cmm.ml[72,2398+4]..[72,2398+8])
                        None
                      pattern (asmcomp/cmm.ml[72,2398+10]..[72,2398+13])
                        Ppat_construct "Int" (asmcomp/cmm.ml[72,2398+10]..[72,2398+13])
                        None
                    ]
                  expression (asmcomp/cmm.ml[72,2398+17]..[72,2398+21])
                    Pexp_construct "true" (asmcomp/cmm.ml[72,2398+17]..[72,2398+21])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[73,2420+4]..[73,2420+14])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[73,2420+4]..[73,2420+8])
                        Ppat_construct "Addr" (asmcomp/cmm.ml[73,2420+4]..[73,2420+8])
                        None
                      pattern (asmcomp/cmm.ml[73,2420+10]..[73,2420+14])
                        Ppat_construct "Addr" (asmcomp/cmm.ml[73,2420+10]..[73,2420+14])
                        None
                    ]
                  expression (asmcomp/cmm.ml[73,2420+18]..[73,2420+22])
                    Pexp_construct "true" (asmcomp/cmm.ml[73,2420+18]..[73,2420+22])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[74,2443+4]..[74,2443+13])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[74,2443+4]..[74,2443+8])
                        Ppat_construct "Addr" (asmcomp/cmm.ml[74,2443+4]..[74,2443+8])
                        None
                      pattern (asmcomp/cmm.ml[74,2443+10]..[74,2443+13])
                        Ppat_construct "Val" (asmcomp/cmm.ml[74,2443+10]..[74,2443+13])
                        None
                    ]
                  expression (asmcomp/cmm.ml[74,2443+17]..[74,2443+21])
                    Pexp_construct "true" (asmcomp/cmm.ml[74,2443+17]..[74,2443+21])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[75,2465+4]..[75,2465+16])
                    Ppat_tuple
                    [
                      pattern (asmcomp/cmm.ml[75,2465+4]..[75,2465+9])
                        Ppat_construct "Float" (asmcomp/cmm.ml[75,2465+4]..[75,2465+9])
                        None
                      pattern (asmcomp/cmm.ml[75,2465+11]..[75,2465+16])
                        Ppat_construct "Float" (asmcomp/cmm.ml[75,2465+11]..[75,2465+16])
                        None
                    ]
                  expression (asmcomp/cmm.ml[75,2465+20]..[75,2465+24])
                    Pexp_construct "true" (asmcomp/cmm.ml[75,2465+20]..[75,2465+24])
                    None
                <case>
                  pattern (asmcomp/cmm.ml[76,2490+4]..[77,2520+29])
                    Ppat_or
                    pattern (asmcomp/cmm.ml[76,2490+4]..[76,2490+29])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[76,2490+4]..[76,2490+22])
                          Ppat_or
                          pattern (asmcomp/cmm.ml[76,2490+5]..[76,2490+15])
                            Ppat_or
                            pattern (asmcomp/cmm.ml[76,2490+5]..[76,2490+8])
                              Ppat_construct "Int" (asmcomp/cmm.ml[76,2490+5]..[76,2490+8])
                              None
                            pattern (asmcomp/cmm.ml[76,2490+11]..[76,2490+15])
                              Ppat_construct "Addr" (asmcomp/cmm.ml[76,2490+11]..[76,2490+15])
                              None
                          pattern (asmcomp/cmm.ml[76,2490+18]..[76,2490+21])
                            Ppat_construct "Val" (asmcomp/cmm.ml[76,2490+18]..[76,2490+21])
                            None
                        pattern (asmcomp/cmm.ml[76,2490+24]..[76,2490+29])
                          Ppat_construct "Float" (asmcomp/cmm.ml[76,2490+24]..[76,2490+29])
                          None
                      ]
                    pattern (asmcomp/cmm.ml[77,2520+4]..[77,2520+29])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[77,2520+4]..[77,2520+9])
                          Ppat_construct "Float" (asmcomp/cmm.ml[77,2520+4]..[77,2520+9])
                          None
                        pattern (asmcomp/cmm.ml[77,2520+11]..[77,2520+29])
                          Ppat_or
                          pattern (asmcomp/cmm.ml[77,2520+12]..[77,2520+22])
                            Ppat_or
                            pattern (asmcomp/cmm.ml[77,2520+12]..[77,2520+15])
                              Ppat_construct "Int" (asmcomp/cmm.ml[77,2520+12]..[77,2520+15])
                              None
                            pattern (asmcomp/cmm.ml[77,2520+18]..[77,2520+22])
                              Ppat_construct "Addr" (asmcomp/cmm.ml[77,2520+18]..[77,2520+22])
                              None
                          pattern (asmcomp/cmm.ml[77,2520+25]..[77,2520+28])
                            Ppat_construct "Val" (asmcomp/cmm.ml[77,2520+25]..[77,2520+28])
                            None
                      ]
                  expression (asmcomp/cmm.ml[78,2553+4]..[78,2553+16])
                    Pexp_assert
                    expression (asmcomp/cmm.ml[78,2553+11]..[78,2553+16])
                      Pexp_construct "false" (asmcomp/cmm.ml[78,2553+11]..[78,2553+16])
                      None
              ]
    ]
  structure_item (asmcomp/cmm.ml[80,2571+0]..[84,2617+10])
    Pstr_type Rec
    [
      type_declaration "exttype" (asmcomp/cmm.ml[80,2571+5]..[80,2571+12]) (asmcomp/cmm.ml[80,2571+0]..[84,2617+10])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/cmm.ml[81,2586+2]..[81,2586+8])
                "XInt" (asmcomp/cmm.ml[81,2586+4]..[81,2586+8])
                []
                None
              (asmcomp/cmm.ml[82,2595+2]..[82,2595+10])
                "XInt32" (asmcomp/cmm.ml[82,2595+4]..[82,2595+10])
                []
                None
              (asmcomp/cmm.ml[83,2606+2]..[83,2606+10])
                "XInt64" (asmcomp/cmm.ml[83,2606+4]..[83,2606+10])
                []
                None
              (asmcomp/cmm.ml[84,2617+2]..[84,2617+10])
                "XFloat" (asmcomp/cmm.ml[84,2617+4]..[84,2617+10])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/cmm.ml[86,2629+0]..[90,2771+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[86,2629+4]..[86,2629+23])
          Ppat_var "machtype_of_exttype" (asmcomp/cmm.ml[86,2629+4]..[86,2629+23])
        expression (asmcomp/cmm.ml[86,2629+26]..[90,2771+23])
          Pexp_function
          [
            <case>
              pattern (asmcomp/cmm.ml[87,2664+4]..[87,2664+8])
                Ppat_construct "XInt" (asmcomp/cmm.ml[87,2664+4]..[87,2664+8])
                None
              expression (asmcomp/cmm.ml[87,2664+12]..[87,2664+19])
                Pexp_ident "typ_int" (asmcomp/cmm.ml[87,2664+12]..[87,2664+19])
            <case>
              pattern (asmcomp/cmm.ml[88,2684+4]..[88,2684+10])
                Ppat_construct "XInt32" (asmcomp/cmm.ml[88,2684+4]..[88,2684+10])
                None
              expression (asmcomp/cmm.ml[88,2684+14]..[88,2684+21])
                Pexp_ident "typ_int" (asmcomp/cmm.ml[88,2684+14]..[88,2684+21])
            <case>
              pattern (asmcomp/cmm.ml[89,2706+4]..[89,2706+10])
                Ppat_construct "XInt64" (asmcomp/cmm.ml[89,2706+4]..[89,2706+10])
                None
              expression (asmcomp/cmm.ml[89,2706+14]..[89,2706+64])
                Pexp_ifthenelse
                expression (asmcomp/cmm.ml[89,2706+17]..[89,2706+34])
                  Pexp_apply
                  expression (asmcomp/cmm.ml[89,2706+31]..[89,2706+32])
                    Pexp_ident "=" (asmcomp/cmm.ml[89,2706+31]..[89,2706+32])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/cmm.ml[89,2706+17]..[89,2706+30])
                        Pexp_ident "Arch.size_int" (asmcomp/cmm.ml[89,2706+17]..[89,2706+30])
                    <arg>
                    Nolabel
                      expression (asmcomp/cmm.ml[89,2706+33]..[89,2706+34])
                        Pexp_constant PConst_int (4,None)
                  ]
                expression (asmcomp/cmm.ml[89,2706+40]..[89,2706+51])
                  Pexp_array
                  [
                    expression (asmcomp/cmm.ml[89,2706+42]..[89,2706+45])
                      Pexp_construct "Int" (asmcomp/cmm.ml[89,2706+42]..[89,2706+45])
                      None
                    expression (asmcomp/cmm.ml[89,2706+46]..[89,2706+49])
                      Pexp_construct "Int" (asmcomp/cmm.ml[89,2706+46]..[89,2706+49])
                      None
                  ]
                Some
                  expression (asmcomp/cmm.ml[89,2706+57]..[89,2706+64])
                    Pexp_ident "typ_int" (asmcomp/cmm.ml[89,2706+57]..[89,2706+64])
            <case>
              pattern (asmcomp/cmm.ml[90,2771+4]..[90,2771+10])
                Ppat_construct "XFloat" (asmcomp/cmm.ml[90,2771+4]..[90,2771+10])
                None
              expression (asmcomp/cmm.ml[90,2771+14]..[90,2771+23])
                Pexp_ident "typ_float" (asmcomp/cmm.ml[90,2771+14]..[90,2771+23])
          ]
    ]
  structure_item (asmcomp/cmm.ml[92,2796+0]..[93,2831+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[92,2796+4]..[92,2796+28])
          Ppat_var "machtype_of_exttype_list" (asmcomp/cmm.ml[92,2796+4]..[92,2796+28])
        expression (asmcomp/cmm.ml[92,2796+29]..[93,2831+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/cmm.ml[92,2796+29]..[92,2796+32])
            Ppat_var "xtl" (asmcomp/cmm.ml[92,2796+29]..[92,2796+32])
          expression (asmcomp/cmm.ml[93,2831+2]..[93,2831+49])
            Pexp_apply
            expression (asmcomp/cmm.ml[93,2831+2]..[93,2831+14])
              Pexp_ident "Array.concat" (asmcomp/cmm.ml[93,2831+2]..[93,2831+14])
            [
              <arg>
              Nolabel
                expression (asmcomp/cmm.ml[93,2831+15]..[93,2831+49])
                  Pexp_apply
                  expression (asmcomp/cmm.ml[93,2831+16]..[93,2831+24])
                    Pexp_ident "List.map" (asmcomp/cmm.ml[93,2831+16]..[93,2831+24])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/cmm.ml[93,2831+25]..[93,2831+44])
                        Pexp_ident "machtype_of_exttype" (asmcomp/cmm.ml[93,2831+25]..[93,2831+44])
                    <arg>
                    Nolabel
                      expression (asmcomp/cmm.ml[93,2831+45]..[93,2831+48])
                        Pexp_ident "xtl" (asmcomp/cmm.ml[93,2831+45]..[93,2831+48])
                  ]
            ]
    ]
  structure_item (asmcomp/cmm.ml[95,2882+0]..[96,2936+37])
    Pstr_type Rec
    [
      type_declaration "integer_comparison" (asmcomp/cmm.ml[95,2882+5]..[95,2882+23]) (asmcomp/cmm.ml[95,2882+0]..[96,2936+37])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/cmm.ml[96,2936+2]..[96,2936+7])
                "Ceq" (asmcomp/cmm.ml[96,2936+4]..[96,2936+7])
                []
                None
              (asmcomp/cmm.ml[96,2936+8]..[96,2936+13])
                "Cne" (asmcomp/cmm.ml[96,2936+10]..[96,2936+13])
                []
                None
              (asmcomp/cmm.ml[96,2936+14]..[96,2936+19])
                "Clt" (asmcomp/cmm.ml[96,2936+16]..[96,2936+19])
                []
                None
              (asmcomp/cmm.ml[96,2936+20]..[96,2936+25])
                "Cgt" (asmcomp/cmm.ml[96,2936+22]..[96,2936+25])
                []
                None
              (asmcomp/cmm.ml[96,2936+26]..[96,2936+31])
                "Cle" (asmcomp/cmm.ml[96,2936+28]..[96,2936+31])
                []
                None
              (asmcomp/cmm.ml[96,2936+32]..[96,2936+37])
                "Cge" (asmcomp/cmm.ml[96,2936+34]..[96,2936+37])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (asmcomp/cmm.ml[95,2882+26]..[95,2882+51])
              Ptyp_constr "Lambda.integer_comparison" (asmcomp/cmm.ml[95,2882+26]..[95,2882+51])
              []
    ]
  structure_item (asmcomp/cmm.ml[98,2975+0]..[98,2975+64])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[98,2975+4]..[98,2975+29])
          Ppat_var "negate_integer_comparison" (asmcomp/cmm.ml[98,2975+4]..[98,2975+29])
        expression (asmcomp/cmm.ml[98,2975+32]..[98,2975+64])
          Pexp_ident "Lambda.negate_integer_comparison" (asmcomp/cmm.ml[98,2975+32]..[98,2975+64])
    ]
  structure_item (asmcomp/cmm.ml[100,3041+0]..[100,3041+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[100,3041+4]..[100,3041+27])
          Ppat_var "swap_integer_comparison" (asmcomp/cmm.ml[100,3041+4]..[100,3041+27])
        expression (asmcomp/cmm.ml[100,3041+30]..[100,3041+60])
          Pexp_ident "Lambda.swap_integer_comparison" (asmcomp/cmm.ml[100,3041+30]..[100,3041+60])
    ]
  structure_item (asmcomp/cmm.ml[104,3243+0]..[105,3293+76])
    Pstr_type Rec
    [
      type_declaration "float_comparison" (asmcomp/cmm.ml[104,3243+5]..[104,3243+21]) (asmcomp/cmm.ml[104,3243+0]..[105,3293+76])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/cmm.ml[105,3293+2]..[105,3293+8])
                "CFeq" (asmcomp/cmm.ml[105,3293+4]..[105,3293+8])
                []
                None
              (asmcomp/cmm.ml[105,3293+9]..[105,3293+16])
                "CFneq" (asmcomp/cmm.ml[105,3293+11]..[105,3293+16])
                []
                None
              (asmcomp/cmm.ml[105,3293+17]..[105,3293+23])
                "CFlt" (asmcomp/cmm.ml[105,3293+19]..[105,3293+23])
                []
                None
              (asmcomp/cmm.ml[105,3293+24]..[105,3293+31])
                "CFnlt" (asmcomp/cmm.ml[105,3293+26]..[105,3293+31])
                []
                None
              (asmcomp/cmm.ml[105,3293+32]..[105,3293+38])
                "CFgt" (asmcomp/cmm.ml[105,3293+34]..[105,3293+38])
                []
                None
              (asmcomp/cmm.ml[105,3293+39]..[105,3293+46])
                "CFngt" (asmcomp/cmm.ml[105,3293+41]..[105,3293+46])
                []
                None
              (asmcomp/cmm.ml[105,3293+47]..[105,3293+53])
                "CFle" (asmcomp/cmm.ml[105,3293+49]..[105,3293+53])
                []
                None
              (asmcomp/cmm.ml[105,3293+54]..[105,3293+61])
                "CFnle" (asmcomp/cmm.ml[105,3293+56]..[105,3293+61])
                []
                None
              (asmcomp/cmm.ml[105,3293+62]..[105,3293+68])
                "CFge" (asmcomp/cmm.ml[105,3293+64]..[105,3293+68])
                []
                None
              (asmcomp/cmm.ml[105,3293+69]..[105,3293+76])
                "CFnge" (asmcomp/cmm.ml[105,3293+71]..[105,3293+76])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (asmcomp/cmm.ml[104,3243+24]..[104,3243+47])
              Ptyp_constr "Lambda.float_comparison" (asmcomp/cmm.ml[104,3243+24]..[104,3243+47])
              []
    ]
  structure_item (asmcomp/cmm.ml[107,3371+0]..[107,3371+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[107,3371+4]..[107,3371+27])
          Ppat_var "negate_float_comparison" (asmcomp/cmm.ml[107,3371+4]..[107,3371+27])
        expression (asmcomp/cmm.ml[107,3371+30]..[107,3371+60])
          Pexp_ident "Lambda.negate_float_comparison" (asmcomp/cmm.ml[107,3371+30]..[107,3371+60])
    ]
  structure_item (asmcomp/cmm.ml[109,3433+0]..[109,3433+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[109,3433+4]..[109,3433+25])
          Ppat_var "swap_float_comparison" (asmcomp/cmm.ml[109,3433+4]..[109,3433+25])
        expression (asmcomp/cmm.ml[109,3433+28]..[109,3433+56])
          Pexp_ident "Lambda.swap_float_comparison" (asmcomp/cmm.ml[109,3433+28]..[109,3433+56])
    ]
  structure_item (asmcomp/cmm.ml[110,3490+0]..[110,3490+16])
    Pstr_type Rec
    [
      type_declaration "label" (asmcomp/cmm.ml[110,3490+5]..[110,3490+10]) (asmcomp/cmm.ml[110,3490+0]..[110,3490+16])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (asmcomp/cmm.ml[110,3490+13]..[110,3490+16])
              Ptyp_constr "int" (asmcomp/cmm.ml[110,3490+13]..[110,3490+16])
              []
    ]
  structure_item (asmcomp/cmm.ml[112,3508+0]..[112,3508+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[112,3508+4]..[112,3508+14])
          Ppat_var "init_label" (asmcomp/cmm.ml[112,3508+4]..[112,3508+14])
        expression (asmcomp/cmm.ml[112,3508+17]..[112,3508+19])
          Pexp_constant PConst_int (99,None)
    ]
  structure_item (asmcomp/cmm.ml[114,3529+0]..[114,3529+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[114,3529+4]..[114,3529+17])
          Ppat_var "label_counter" (asmcomp/cmm.ml[114,3529+4]..[114,3529+17])
        expression (asmcomp/cmm.ml[114,3529+20]..[114,3529+34])
          Pexp_apply
          expression (asmcomp/cmm.ml[114,3529+20]..[114,3529+23])
            Pexp_ident "ref" (asmcomp/cmm.ml[114,3529+20]..[114,3529+23])
          [
            <arg>
            Nolabel
              expression (asmcomp/cmm.ml[114,3529+24]..[114,3529+34])
                Pexp_ident "init_label" (asmcomp/cmm.ml[114,3529+24]..[114,3529+34])
          ]
    ]
  structure_item (asmcomp/cmm.ml[116,3565+0]..[121,3726+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[116,3565+4]..[116,3565+13])
          Ppat_var "set_label" (asmcomp/cmm.ml[116,3565+4]..[116,3565+13])
        expression (asmcomp/cmm.ml[116,3565+14]..[121,3726+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/cmm.ml[116,3565+14]..[116,3565+15])
            Ppat_var "l" (asmcomp/cmm.ml[116,3565+14]..[116,3565+15])
          expression (asmcomp/cmm.ml[117,3583+2]..[121,3726+20])
            Pexp_sequence
            expression (asmcomp/cmm.ml[117,3583+2]..[120,3719+5])
              Pexp_ifthenelse
              expression (asmcomp/cmm.ml[117,3583+5]..[117,3583+25])
                Pexp_apply
                expression (asmcomp/cmm.ml[117,3583+8]..[117,3583+9])
                  Pexp_ident "<" (asmcomp/cmm.ml[117,3583+8]..[117,3583+9])
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/cmm.ml[117,3583+6]..[117,3583+7])
                      Pexp_ident "l" (asmcomp/cmm.ml[117,3583+6]..[117,3583+7])
                  <arg>
                  Nolabel
                    expression (asmcomp/cmm.ml[117,3583+10]..[117,3583+24])
                      Pexp_apply
                      expression (asmcomp/cmm.ml[117,3583+10]..[117,3583+11])
                        Pexp_ident "!" (asmcomp/cmm.ml[117,3583+10]..[117,3583+11])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/cmm.ml[117,3583+11]..[117,3583+24])
                            Pexp_ident "label_counter" (asmcomp/cmm.ml[117,3583+11]..[117,3583+24])
                      ]
                ]
              expression (asmcomp/cmm.ml[117,3583+31]..[120,3719+5])
                Pexp_apply
                expression (asmcomp/cmm.ml[118,3620+4]..[118,3620+21])
                  Pexp_ident "Misc.fatal_errorf" (asmcomp/cmm.ml[118,3620+4]..[118,3620+21])
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/cmm.ml[118,3620+22]..[118,3620+72])
                      Pexp_constant PConst_string("Cannot set label counter to %d, it must be >= %d",(asmcomp/cmm.ml[118,3620+23]..[118,3620+71]),None)
                  <arg>
                  Nolabel
                    expression (asmcomp/cmm.ml[119,3693+6]..[119,3693+7])
                      Pexp_ident "l" (asmcomp/cmm.ml[119,3693+6]..[119,3693+7])
                  <arg>
                  Nolabel
                    expression (asmcomp/cmm.ml[119,3693+8]..[119,3693+22])
                      Pexp_apply
                      expression (asmcomp/cmm.ml[119,3693+8]..[119,3693+9])
                        Pexp_ident "!" (asmcomp/cmm.ml[119,3693+8]..[119,3693+9])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/cmm.ml[119,3693+9]..[119,3693+22])
                            Pexp_ident "label_counter" (asmcomp/cmm.ml[119,3693+9]..[119,3693+22])
                      ]
                  <arg>
                  Nolabel
                    expression (asmcomp/cmm.ml[119,3693+23]..[119,3693+25])
                      Pexp_construct "()" (asmcomp/cmm.ml[119,3693+23]..[119,3693+25])
                      None
                ]
              None
            expression (asmcomp/cmm.ml[121,3726+2]..[121,3726+20])
              Pexp_apply
              expression (asmcomp/cmm.ml[121,3726+16]..[121,3726+18])
                Pexp_ident ":=" (asmcomp/cmm.ml[121,3726+16]..[121,3726+18])
              [
                <arg>
                Nolabel
                  expression (asmcomp/cmm.ml[121,3726+2]..[121,3726+15])
                    Pexp_ident "label_counter" (asmcomp/cmm.ml[121,3726+2]..[121,3726+15])
                <arg>
                Nolabel
                  expression (asmcomp/cmm.ml[121,3726+19]..[121,3726+20])
                    Pexp_ident "l" (asmcomp/cmm.ml[121,3726+19]..[121,3726+20])
              ]
    ]
  structure_item (asmcomp/cmm.ml[123,3748+0]..[123,3748+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[123,3748+4]..[123,3748+13])
          Ppat_var "cur_label" (asmcomp/cmm.ml[123,3748+4]..[123,3748+13])
        expression (asmcomp/cmm.ml[123,3748+14]..[123,3748+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/cmm.ml[123,3748+14]..[123,3748+16])
            Ppat_construct "()" (asmcomp/cmm.ml[123,3748+14]..[123,3748+16])
            None
          expression (asmcomp/cmm.ml[123,3748+19]..[123,3748+33])
            Pexp_apply
            expression (asmcomp/cmm.ml[123,3748+19]..[123,3748+20])
              Pexp_ident "!" (asmcomp/cmm.ml[123,3748+19]..[123,3748+20])
            [
              <arg>
              Nolabel
                expression (asmcomp/cmm.ml[123,3748+20]..[123,3748+33])
                  Pexp_ident "label_counter" (asmcomp/cmm.ml[123,3748+20]..[123,3748+33])
            ]
    ]
  structure_item (asmcomp/cmm.ml[125,3783+0]..[125,3783+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[125,3783+4]..[125,3783+13])
          Ppat_var "new_label" (asmcomp/cmm.ml[125,3783+4]..[125,3783+13])
        expression (asmcomp/cmm.ml[125,3783+13]..[125,3783+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/cmm.ml[125,3783+13]..[125,3783+15])
            Ppat_construct "()" (asmcomp/cmm.ml[125,3783+13]..[125,3783+15])
            None
          expression (asmcomp/cmm.ml[125,3783+18]..[125,3783+52])
            Pexp_sequence
            expression (asmcomp/cmm.ml[125,3783+18]..[125,3783+36])
              Pexp_apply
              expression (asmcomp/cmm.ml[125,3783+18]..[125,3783+22])
                Pexp_ident "incr" (asmcomp/cmm.ml[125,3783+18]..[125,3783+22])
              [
                <arg>
                Nolabel
                  expression (asmcomp/cmm.ml[125,3783+23]..[125,3783+36])
                    Pexp_ident "label_counter" (asmcomp/cmm.ml[125,3783+23]..[125,3783+36])
              ]
            expression (asmcomp/cmm.ml[125,3783+38]..[125,3783+52])
              Pexp_apply
              expression (asmcomp/cmm.ml[125,3783+38]..[125,3783+39])
                Pexp_ident "!" (asmcomp/cmm.ml[125,3783+38]..[125,3783+39])
              [
                <arg>
                Nolabel
                  expression (asmcomp/cmm.ml[125,3783+39]..[125,3783+52])
                    Pexp_ident "label_counter" (asmcomp/cmm.ml[125,3783+39]..[125,3783+52])
              ]
    ]
  structure_item (asmcomp/cmm.ml[127,3837+0]..[127,3837+40])
    Pstr_type Rec
    [
      type_declaration "rec_flag" (asmcomp/cmm.ml[127,3837+5]..[127,3837+13]) (asmcomp/cmm.ml[127,3837+0]..[127,3837+40])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/cmm.ml[127,3837+16]..[127,3837+28])
                "Nonrecursive" (asmcomp/cmm.ml[127,3837+16]..[127,3837+28])
                []
                None
              (asmcomp/cmm.ml[127,3837+29]..[127,3837+40])
                "Recursive" (asmcomp/cmm.ml[127,3837+31]..[127,3837+40])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/cmm.ml[129,3879+0]..[136,4221+65])
    Pstr_type Rec
    [
      type_declaration "phantom_defining_expr" (asmcomp/cmm.ml[129,3879+5]..[129,3879+26]) (asmcomp/cmm.ml[129,3879+0]..[136,4221+65])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/cmm.ml[130,3908+2]..[130,3908+37])
                "Cphantom_const_int" (asmcomp/cmm.ml[130,3908+4]..[130,3908+22])
                [
                  core_type (asmcomp/cmm.ml[130,3908+26]..[130,3908+37])
                    Ptyp_constr "Targetint.t" (asmcomp/cmm.ml[130,3908+26]..[130,3908+37])
                    []
                ]
                None
              (asmcomp/cmm.ml[131,3946+2]..[131,3946+35])
                "Cphantom_const_symbol" (asmcomp/cmm.ml[131,3946+4]..[131,3946+25])
                [
                  core_type (asmcomp/cmm.ml[131,3946+29]..[131,3946+35])
                    Ptyp_constr "string" (asmcomp/cmm.ml[131,3946+29]..[131,3946+35])
                    []
                ]
                None
              (asmcomp/cmm.ml[132,3982+2]..[132,3982+33])
                "Cphantom_var" (asmcomp/cmm.ml[132,3982+4]..[132,3982+16])
                [
                  core_type (asmcomp/cmm.ml[132,3982+20]..[132,3982+33])
                    Ptyp_constr "Backend_var.t" (asmcomp/cmm.ml[132,3982+20]..[132,3982+33])
                    []
                ]
                None
              (asmcomp/cmm.ml[133,4016+2]..[133,4016+74])
                "Cphantom_offset_var" (asmcomp/cmm.ml[133,4016+4]..[133,4016+23])
                [
                  (asmcomp/cmm.ml[133,4016+29]..[133,4016+49])
                    Immutable
                    "var" (asmcomp/cmm.ml[133,4016+29]..[133,4016+32])                    core_type (asmcomp/cmm.ml[133,4016+35]..[133,4016+48])
                      Ptyp_constr "Backend_var.t" (asmcomp/cmm.ml[133,4016+35]..[133,4016+48])
                      []
                  (asmcomp/cmm.ml[133,4016+50]..[133,4016+72])
                    Immutable
                    "offset_in_words" (asmcomp/cmm.ml[133,4016+50]..[133,4016+65])                    core_type (asmcomp/cmm.ml[133,4016+68]..[133,4016+71])
                      Ptyp_constr "int" (asmcomp/cmm.ml[133,4016+68]..[133,4016+71])
                      []
                ]
                None
              (asmcomp/cmm.ml[134,4091+2]..[134,4091+64])
                "Cphantom_read_field" (asmcomp/cmm.ml[134,4091+4]..[134,4091+23])
                [
                  (asmcomp/cmm.ml[134,4091+29]..[134,4091+49])
                    Immutable
                    "var" (asmcomp/cmm.ml[134,4091+29]..[134,4091+32])                    core_type (asmcomp/cmm.ml[134,4091+35]..[134,4091+48])
                      Ptyp_constr "Backend_var.t" (asmcomp/cmm.ml[134,4091+35]..[134,4091+48])
                      []
                  (asmcomp/cmm.ml[134,4091+50]..[134,4091+62])
                    Immutable
                    "field" (asmcomp/cmm.ml[134,4091+50]..[134,4091+55])                    core_type (asmcomp/cmm.ml[134,4091+58]..[134,4091+61])
                      Ptyp_constr "int" (asmcomp/cmm.ml[134,4091+58]..[134,4091+61])
                      []
                ]
                None
              (asmcomp/cmm.ml[135,4156+2]..[135,4156+64])
                "Cphantom_read_symbol_field" (asmcomp/cmm.ml[135,4156+4]..[135,4156+30])
                [
                  (asmcomp/cmm.ml[135,4156+36]..[135,4156+49])
                    Immutable
                    "sym" (asmcomp/cmm.ml[135,4156+36]..[135,4156+39])                    core_type (asmcomp/cmm.ml[135,4156+42]..[135,4156+48])
                      Ptyp_constr "string" (asmcomp/cmm.ml[135,4156+42]..[135,4156+48])
                      []
                  (asmcomp/cmm.ml[135,4156+50]..[135,4156+62])
                    Immutable
                    "field" (asmcomp/cmm.ml[135,4156+50]..[135,4156+55])                    core_type (asmcomp/cmm.ml[135,4156+58]..[135,4156+61])
                      Ptyp_constr "int" (asmcomp/cmm.ml[135,4156+58]..[135,4156+61])
                      []
                ]
                None
              (asmcomp/cmm.ml[136,4221+2]..[136,4221+65])
                "Cphantom_block" (asmcomp/cmm.ml[136,4221+4]..[136,4221+18])
                [
                  (asmcomp/cmm.ml[136,4221+24]..[136,4221+34])
                    Immutable
                    "tag" (asmcomp/cmm.ml[136,4221+24]..[136,4221+27])                    core_type (asmcomp/cmm.ml[136,4221+30]..[136,4221+33])
                      Ptyp_constr "int" (asmcomp/cmm.ml[136,4221+30]..[136,4221+33])
                      []
                  (asmcomp/cmm.ml[136,4221+35]..[136,4221+63])
                    Immutable
                    "fields" (asmcomp/cmm.ml[136,4221+35]..[136,4221+41])                    core_type (asmcomp/cmm.ml[136,4221+44]..[136,4221+62])
                      Ptyp_constr "list" (asmcomp/cmm.ml[136,4221+58]..[136,4221+62])
                      [
                        core_type (asmcomp/cmm.ml[136,4221+44]..[136,4221+57])
                          Ptyp_constr "Backend_var.t" (asmcomp/cmm.ml[136,4221+44]..[136,4221+57])
                          []
                      ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/cmm.ml[138,4288+0]..[167,5032+11])
    Pstr_type Rec
    [
      type_declaration "memory_chunk" (asmcomp/cmm.ml[138,4288+5]..[138,4288+17]) (asmcomp/cmm.ml[138,4288+0]..[148,4463+10])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/cmm.ml[139,4308+4]..[139,4308+17])
                "Byte_unsigned" (asmcomp/cmm.ml[139,4308+4]..[139,4308+17])
                []
                None
              (asmcomp/cmm.ml[140,4326+2]..[140,4326+15])
                "Byte_signed" (asmcomp/cmm.ml[140,4326+4]..[140,4326+15])
                []
                None
              (asmcomp/cmm.ml[141,4342+2]..[141,4342+20])
                "Sixteen_unsigned" (asmcomp/cmm.ml[141,4342+4]..[141,4342+20])
                []
                None
              (asmcomp/cmm.ml[142,4363+2]..[142,4363+18])
                "Sixteen_signed" (asmcomp/cmm.ml[142,4363+4]..[142,4363+18])
                []
                None
              (asmcomp/cmm.ml[143,4382+2]..[143,4382+22])
                "Thirtytwo_unsigned" (asmcomp/cmm.ml[143,4382+4]..[143,4382+22])
                []
                None
              (asmcomp/cmm.ml[144,4405+2]..[144,4405+20])
                "Thirtytwo_signed" (asmcomp/cmm.ml[144,4405+4]..[144,4405+20])
                []
                None
              (asmcomp/cmm.ml[145,4426+2]..[145,4426+12])
                "Word_int" (asmcomp/cmm.ml[145,4426+4]..[145,4426+12])
                []
                None
              (asmcomp/cmm.ml[146,4439+2]..[146,4439+12])
                "Word_val" (asmcomp/cmm.ml[146,4439+4]..[146,4439+12])
                []
                None
              (asmcomp/cmm.ml[147,4452+2]..[147,4452+10])
                "Single" (asmcomp/cmm.ml[147,4452+4]..[147,4452+10])
                []
                None
              (asmcomp/cmm.ml[148,4463+2]..[148,4463+10])
                "Double" (asmcomp/cmm.ml[148,4463+4]..[148,4463+10])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "operation" (asmcomp/cmm.ml[150,4475+4]..[150,4475+13]) (asmcomp/cmm.ml[150,4475+0]..[167,5032+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/cmm.ml[151,4491+4]..[151,4491+22])
                "Capply" (asmcomp/cmm.ml[151,4491+4]..[151,4491+10])
                [
                  core_type (asmcomp/cmm.ml[151,4491+14]..[151,4491+22])
                    Ptyp_constr "machtype" (asmcomp/cmm.ml[151,4491+14]..[151,4491+22])
                    []
                ]
                None
              (asmcomp/cmm.ml[152,4514+2]..[152,4514+55])
                "Cextcall" (asmcomp/cmm.ml[152,4514+4]..[152,4514+12])
                [
                  core_type (asmcomp/cmm.ml[152,4514+16]..[152,4514+22])
                    Ptyp_constr "string" (asmcomp/cmm.ml[152,4514+16]..[152,4514+22])
                    []
                  core_type (asmcomp/cmm.ml[152,4514+25]..[152,4514+33])
                    Ptyp_constr "machtype" (asmcomp/cmm.ml[152,4514+25]..[152,4514+33])
                    []
                  core_type (asmcomp/cmm.ml[152,4514+36]..[152,4514+48])
                    Ptyp_constr "list" (asmcomp/cmm.ml[152,4514+44]..[152,4514+48])
                    [
                      core_type (asmcomp/cmm.ml[152,4514+36]..[152,4514+43])
                        Ptyp_constr "exttype" (asmcomp/cmm.ml[152,4514+36]..[152,4514+43])
                        []
                    ]
                  core_type (asmcomp/cmm.ml[152,4514+51]..[152,4514+55])
                    Ptyp_constr "bool" (asmcomp/cmm.ml[152,4514+51]..[152,4514+55])
                    []
                ]
                None
              (asmcomp/cmm.ml[153,4570+2]..[153,4570+49])
                "Cload" (asmcomp/cmm.ml[153,4570+4]..[153,4570+9])
                [
                  core_type (asmcomp/cmm.ml[153,4570+13]..[153,4570+25])
                    Ptyp_constr "memory_chunk" (asmcomp/cmm.ml[153,4570+13]..[153,4570+25])
                    []
                  core_type (asmcomp/cmm.ml[153,4570+28]..[153,4570+49])
                    Ptyp_constr "Asttypes.mutable_flag" (asmcomp/cmm.ml[153,4570+28]..[153,4570+49])
                    []
                ]
                None
              (asmcomp/cmm.ml[154,4620+2]..[154,4620+10])
                "Calloc" (asmcomp/cmm.ml[154,4620+4]..[154,4620+10])
                []
                None
              (asmcomp/cmm.ml[155,4631+2]..[155,4631+64])
                "Cstore" (asmcomp/cmm.ml[155,4631+4]..[155,4631+10])
                [
                  core_type (asmcomp/cmm.ml[155,4631+14]..[155,4631+26])
                    Ptyp_constr "memory_chunk" (asmcomp/cmm.ml[155,4631+14]..[155,4631+26])
                    []
                  core_type (asmcomp/cmm.ml[155,4631+29]..[155,4631+64])
                    Ptyp_constr "Lambda.initialization_or_assignment" (asmcomp/cmm.ml[155,4631+29]..[155,4631+64])
                    []
                ]
                None
              (asmcomp/cmm.ml[156,4696+2]..[156,4696+9])
                "Caddi" (asmcomp/cmm.ml[156,4696+4]..[156,4696+9])
                []
                None
              (asmcomp/cmm.ml[156,4696+10]..[156,4696+17])
                "Csubi" (asmcomp/cmm.ml[156,4696+12]..[156,4696+17])
                []
                None
              (asmcomp/cmm.ml[156,4696+18]..[156,4696+25])
                "Cmuli" (asmcomp/cmm.ml[156,4696+20]..[156,4696+25])
                []
                None
              (asmcomp/cmm.ml[156,4696+26]..[156,4696+34])
                "Cmulhi" (asmcomp/cmm.ml[156,4696+28]..[156,4696+34])
                []
                None
              (asmcomp/cmm.ml[156,4696+35]..[156,4696+42])
                "Cdivi" (asmcomp/cmm.ml[156,4696+37]..[156,4696+42])
                []
                None
              (asmcomp/cmm.ml[156,4696+43]..[156,4696+50])
                "Cmodi" (asmcomp/cmm.ml[156,4696+45]..[156,4696+50])
                []
                None
              (asmcomp/cmm.ml[157,4747+2]..[157,4747+8])
                "Cand" (asmcomp/cmm.ml[157,4747+4]..[157,4747+8])
                []
                None
              (asmcomp/cmm.ml[157,4747+9]..[157,4747+14])
                "Cor" (asmcomp/cmm.ml[157,4747+11]..[157,4747+14])
                []
                None
              (asmcomp/cmm.ml[157,4747+15]..[157,4747+21])
                "Cxor" (asmcomp/cmm.ml[157,4747+17]..[157,4747+21])
                []
                None
              (asmcomp/cmm.ml[157,4747+22]..[157,4747+28])
                "Clsl" (asmcomp/cmm.ml[157,4747+24]..[157,4747+28])
                []
                None
              (asmcomp/cmm.ml[157,4747+29]..[157,4747+35])
                "Clsr" (asmcomp/cmm.ml[157,4747+31]..[157,4747+35])
                []
                None
              (asmcomp/cmm.ml[157,4747+36]..[157,4747+42])
                "Casr" (asmcomp/cmm.ml[157,4747+38]..[157,4747+42])
                []
                None
              (asmcomp/cmm.ml[158,4790+2]..[158,4790+31])
                "Ccmpi" (asmcomp/cmm.ml[158,4790+4]..[158,4790+9])
                [
                  core_type (asmcomp/cmm.ml[158,4790+13]..[158,4790+31])
                    Ptyp_constr "integer_comparison" (asmcomp/cmm.ml[158,4790+13]..[158,4790+31])
                    []
                ]
                None
              (asmcomp/cmm.ml[159,4822+2]..[159,4822+9])
                "Caddv" (asmcomp/cmm.ml[159,4822+4]..[159,4822+9])
                []
                None
              (asmcomp/cmm.ml[159,4822+10]..[159,4822+17])
                "Cadda" (asmcomp/cmm.ml[159,4822+12]..[159,4822+17])
                []
                None
              (asmcomp/cmm.ml[160,4840+2]..[160,4840+31])
                "Ccmpa" (asmcomp/cmm.ml[160,4840+4]..[160,4840+9])
                [
                  core_type (asmcomp/cmm.ml[160,4840+13]..[160,4840+31])
                    Ptyp_constr "integer_comparison" (asmcomp/cmm.ml[160,4840+13]..[160,4840+31])
                    []
                ]
                None
              (asmcomp/cmm.ml[161,4872+2]..[161,4872+9])
                "Cnegf" (asmcomp/cmm.ml[161,4872+4]..[161,4872+9])
                []
                None
              (asmcomp/cmm.ml[161,4872+10]..[161,4872+17])
                "Cabsf" (asmcomp/cmm.ml[161,4872+12]..[161,4872+17])
                []
                None
              (asmcomp/cmm.ml[162,4890+2]..[162,4890+9])
                "Caddf" (asmcomp/cmm.ml[162,4890+4]..[162,4890+9])
                []
                None
              (asmcomp/cmm.ml[162,4890+10]..[162,4890+17])
                "Csubf" (asmcomp/cmm.ml[162,4890+12]..[162,4890+17])
                []
                None
              (asmcomp/cmm.ml[162,4890+18]..[162,4890+25])
                "Cmulf" (asmcomp/cmm.ml[162,4890+20]..[162,4890+25])
                []
                None
              (asmcomp/cmm.ml[162,4890+26]..[162,4890+33])
                "Cdivf" (asmcomp/cmm.ml[162,4890+28]..[162,4890+33])
                []
                None
              (asmcomp/cmm.ml[163,4924+2]..[163,4924+15])
                "Cfloatofint" (asmcomp/cmm.ml[163,4924+4]..[163,4924+15])
                []
                None
              (asmcomp/cmm.ml[163,4924+16]..[163,4924+29])
                "Cintoffloat" (asmcomp/cmm.ml[163,4924+18]..[163,4924+29])
                []
                None
              (asmcomp/cmm.ml[164,4954+2]..[164,4954+29])
                "Ccmpf" (asmcomp/cmm.ml[164,4954+4]..[164,4954+9])
                [
                  core_type (asmcomp/cmm.ml[164,4954+13]..[164,4954+29])
                    Ptyp_constr "float_comparison" (asmcomp/cmm.ml[164,4954+13]..[164,4954+29])
                    []
                ]
                None
              (asmcomp/cmm.ml[165,4984+2]..[165,4984+31])
                "Craise" (asmcomp/cmm.ml[165,4984+4]..[165,4984+10])
                [
                  core_type (asmcomp/cmm.ml[165,4984+14]..[165,4984+31])
                    Ptyp_constr "Lambda.raise_kind" (asmcomp/cmm.ml[165,4984+14]..[165,4984+31])
                    []
                ]
                None
              (asmcomp/cmm.ml[166,5016+2]..[166,5016+15])
                "Ccheckbound" (asmcomp/cmm.ml[166,5016+4]..[166,5016+15])
                []
                None
              (asmcomp/cmm.ml[167,5032+2]..[167,5032+11])
                "Copaque" (asmcomp/cmm.ml[167,5032+4]..[167,5032+11])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/cmm.ml[169,5045+0]..[195,6147+19])
    Pstr_type Rec
    [
      type_declaration "expression" (asmcomp/cmm.ml[169,5045+5]..[169,5045+15]) (asmcomp/cmm.ml[169,5045+0]..[195,6147+19])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/cmm.ml[170,5063+4]..[170,5063+35])
                "Cconst_int" (asmcomp/cmm.ml[170,5063+4]..[170,5063+14])
                [
                  core_type (asmcomp/cmm.ml[170,5063+18]..[170,5063+21])
                    Ptyp_constr "int" (asmcomp/cmm.ml[170,5063+18]..[170,5063+21])
                    []
                  core_type (asmcomp/cmm.ml[170,5063+24]..[170,5063+35])
                    Ptyp_constr "Debuginfo.t" (asmcomp/cmm.ml[170,5063+24]..[170,5063+35])
                    []
                ]
                None
              (asmcomp/cmm.ml[171,5099+2]..[171,5099+44])
                "Cconst_natint" (asmcomp/cmm.ml[171,5099+4]..[171,5099+17])
                [
                  core_type (asmcomp/cmm.ml[171,5099+21]..[171,5099+30])
                    Ptyp_constr "nativeint" (asmcomp/cmm.ml[171,5099+21]..[171,5099+30])
                    []
                  core_type (asmcomp/cmm.ml[171,5099+33]..[171,5099+44])
                    Ptyp_constr "Debuginfo.t" (asmcomp/cmm.ml[171,5099+33]..[171,5099+44])
                    []
                ]
                None
              (asmcomp/cmm.ml[172,5144+2]..[172,5144+39])
                "Cconst_float" (asmcomp/cmm.ml[172,5144+4]..[172,5144+16])
                [
                  core_type (asmcomp/cmm.ml[172,5144+20]..[172,5144+25])
                    Ptyp_constr "float" (asmcomp/cmm.ml[172,5144+20]..[172,5144+25])
                    []
                  core_type (asmcomp/cmm.ml[172,5144+28]..[172,5144+39])
                    Ptyp_constr "Debuginfo.t" (asmcomp/cmm.ml[172,5144+28]..[172,5144+39])
                    []
                ]
                None
              (asmcomp/cmm.ml[173,5184+2]..[173,5184+41])
                "Cconst_symbol" (asmcomp/cmm.ml[173,5184+4]..[173,5184+17])
                [
                  core_type (asmcomp/cmm.ml[173,5184+21]..[173,5184+27])
                    Ptyp_constr "string" (asmcomp/cmm.ml[173,5184+21]..[173,5184+27])
                    []
                  core_type (asmcomp/cmm.ml[173,5184+30]..[173,5184+41])
                    Ptyp_constr "Debuginfo.t" (asmcomp/cmm.ml[173,5184+30]..[173,5184+41])
                    []
                ]
                None
              (asmcomp/cmm.ml[174,5226+2]..[174,5226+25])
                "Cvar" (asmcomp/cmm.ml[174,5226+4]..[174,5226+8])
                [
                  core_type (asmcomp/cmm.ml[174,5226+12]..[174,5226+25])
                    Ptyp_constr "Backend_var.t" (asmcomp/cmm.ml[174,5226+12]..[174,5226+25])
                    []
                ]
                None
              (asmcomp/cmm.ml[175,5252+2]..[175,5252+67])
                "Clet" (asmcomp/cmm.ml[175,5252+4]..[175,5252+8])
                [
                  core_type (asmcomp/cmm.ml[175,5252+12]..[175,5252+41])
                    Ptyp_constr "Backend_var.With_provenance.t" (asmcomp/cmm.ml[175,5252+12]..[175,5252+41])
                    []
                  core_type (asmcomp/cmm.ml[175,5252+44]..[175,5252+54])
                    Ptyp_constr "expression" (asmcomp/cmm.ml[175,5252+44]..[175,5252+54])
                    []
                  core_type (asmcomp/cmm.ml[175,5252+57]..[175,5252+67])
                    Ptyp_constr "expression" (asmcomp/cmm.ml[175,5252+57]..[175,5252+67])
                    []
                ]
                None
              (asmcomp/cmm.ml[176,5320+2]..[177,5377+41])
                "Clet_mut" (asmcomp/cmm.ml[176,5320+4]..[176,5320+12])
                [
                  core_type (asmcomp/cmm.ml[176,5320+16]..[176,5320+45])
                    Ptyp_constr "Backend_var.With_provenance.t" (asmcomp/cmm.ml[176,5320+16]..[176,5320+45])
                    []
                  core_type (asmcomp/cmm.ml[176,5320+48]..[176,5320+56])
                    Ptyp_constr "machtype" (asmcomp/cmm.ml[176,5320+48]..[176,5320+56])
                    []
                  core_type (asmcomp/cmm.ml[177,5377+18]..[177,5377+28])
                    Ptyp_constr "expression" (asmcomp/cmm.ml[177,5377+18]..[177,5377+28])
                    []
                  core_type (asmcomp/cmm.ml[177,5377+31]..[177,5377+41])
                    Ptyp_constr "expression" (asmcomp/cmm.ml[177,5377+31]..[177,5377+41])
                    []
                ]
                None
              (asmcomp/cmm.ml[178,5419+2]..[179,5469+49])
                "Cphantom_let" (asmcomp/cmm.ml[178,5419+4]..[178,5419+16])
                [
                  core_type (asmcomp/cmm.ml[178,5419+20]..[178,5419+49])
                    Ptyp_constr "Backend_var.With_provenance.t" (asmcomp/cmm.ml[178,5419+20]..[178,5419+49])
                    []
                  core_type (asmcomp/cmm.ml[179,5469+8]..[179,5469+36])
                    Ptyp_constr "option" (asmcomp/cmm.ml[179,5469+30]..[179,5469+36])
                    [
                      core_type (asmcomp/cmm.ml[179,5469+8]..[179,5469+29])
                        Ptyp_constr "phantom_defining_expr" (asmcomp/cmm.ml[179,5469+8]..[179,5469+29])
                        []
                    ]
                  core_type (asmcomp/cmm.ml[179,5469+39]..[179,5469+49])
                    Ptyp_constr "expression" (asmcomp/cmm.ml[179,5469+39]..[179,5469+49])
                    []
                ]
                None
              (asmcomp/cmm.ml[180,5519+2]..[180,5519+41])
                "Cassign" (asmcomp/cmm.ml[180,5519+4]..[180,5519+11])
                [
                  core_type (asmcomp/cmm.ml[180,5519+15]..[180,5519+28])
                    Ptyp_constr "Backend_var.t" (asmcomp/cmm.ml[180,5519+15]..[180,5519+28])
                    []
                  core_type (asmcomp/cmm.ml[180,5519+31]..[180,5519+41])
                    Ptyp_constr "expression" (asmcomp/cmm.ml[180,5519+31]..[180,5519+41])
                    []
                ]
                None
              (asmcomp/cmm.ml[181,5561+2]..[181,5561+29])
                "Ctuple" (asmcomp/cmm.ml[181,5561+4]..[181,5561+10])
                [
                  core_type (asmcomp/cmm.ml[181,5561+14]..[181,5561+29])
                    Ptyp_constr "list" (asmcomp/cmm.ml[181,5561+25]..[181,5561+29])
                    [
                      core_type (asmcomp/cmm.ml[181,5561+14]..[181,5561+24])
                        Ptyp_constr "expression" (asmcomp/cmm.ml[181,5561+14]..[181,5561+24])
                        []
                    ]
                ]
                None
              (asmcomp/cmm.ml[182,5591+2]..[182,5591+52])
                "Cop" (asmcomp/cmm.ml[182,5591+4]..[182,5591+7])
                [
                  core_type (asmcomp/cmm.ml[182,5591+11]..[182,5591+20])
                    Ptyp_constr "operation" (asmcomp/cmm.ml[182,5591+11]..[182,5591+20])
                    []
                  core_type (asmcomp/cmm.ml[182,5591+23]..[182,5591+38])
                    Ptyp_constr "list" (asmcomp/cmm.ml[182,5591+34]..[182,5591+38])
                    [
                      core_type (asmcomp/cmm.ml[182,5591+23]..[182,5591+33])
                        Ptyp_constr "expression" (asmcomp/cmm.ml[182,5591+23]..[182,5591+33])
                        []
                    ]
                  core_type (asmcomp/cmm.ml[182,5591+41]..[182,5591+52])
                    Ptyp_constr "Debuginfo.t" (asmcomp/cmm.ml[182,5591+41]..[182,5591+52])
                    []
                ]
                None
              (asmcomp/cmm.ml[183,5644+2]..[183,5644+40])
                "Csequence" (asmcomp/cmm.ml[183,5644+4]..[183,5644+13])
                [
                  core_type (asmcomp/cmm.ml[183,5644+17]..[183,5644+27])
                    Ptyp_constr "expression" (asmcomp/cmm.ml[183,5644+17]..[183,5644+27])
                    []
                  core_type (asmcomp/cmm.ml[183,5644+30]..[183,5644+40])
                    Ptyp_constr "expression" (asmcomp/cmm.ml[183,5644+30]..[183,5644+40])
                    []
                ]
                None
              (asmcomp/cmm.ml[184,5685+2]..[185,5742+46])
                "Cifthenelse" (asmcomp/cmm.ml[184,5685+4]..[184,5685+15])
                [
                  core_type (asmcomp/cmm.ml[184,5685+19]..[184,5685+29])
                    Ptyp_constr "expression" (asmcomp/cmm.ml[184,5685+19]..[184,5685+29])
                    []
                  core_type (asmcomp/cmm.ml[184,5685+32]..[184,5685+43])
                    Ptyp_constr "Debuginfo.t" (asmcomp/cmm.ml[184,5685+32]..[184,5685+43])
                    []
                  core_type (asmcomp/cmm.ml[184,5685+46]..[184,5685+56])
                    Ptyp_constr "expression" (asmcomp/cmm.ml[184,5685+46]..[184,5685+56])
                    []
                  core_type (asmcomp/cmm.ml[185,5742+8]..[185,5742+19])
                    Ptyp_constr "Debuginfo.t" (asmcomp/cmm.ml[185,5742+8]..[185,5742+19])
                    []
                  core_type (asmcomp/cmm.ml[185,5742+22]..[185,5742+32])
                    Ptyp_constr "expression" (asmcomp/cmm.ml[185,5742+22]..[185,5742+32])
                    []
                  core_type (asmcomp/cmm.ml[185,5742+35]..[185,5742+46])
                    Ptyp_constr "Debuginfo.t" (asmcomp/cmm.ml[185,5742+35]..[185,5742+46])
                    []
                ]
                None
              (asmcomp/cmm.ml[186,5789+2]..[187,5862+19])
                "Cswitch" (asmcomp/cmm.ml[186,5789+4]..[186,5789+11])
                [
                  core_type (asmcomp/cmm.ml[186,5789+15]..[186,5789+25])
                    Ptyp_constr "expression" (asmcomp/cmm.ml[186,5789+15]..[186,5789+25])
                    []
                  core_type (asmcomp/cmm.ml[186,5789+28]..[186,5789+37])
                    Ptyp_constr "array" (asmcomp/cmm.ml[186,5789+32]..[186,5789+37])
                    [
                      core_type (asmcomp/cmm.ml[186,5789+28]..[186,5789+31])
                        Ptyp_constr "int" (asmcomp/cmm.ml[186,5789+28]..[186,5789+31])
                        []
                    ]
                  core_type (asmcomp/cmm.ml[186,5789+40]..[186,5789+72])
                    Ptyp_constr "array" (asmcomp/cmm.ml[186,5789+67]..[186,5789+72])
                    [
                      core_type (asmcomp/cmm.ml[186,5789+41]..[186,5789+65])
                        Ptyp_tuple
                        [
                          core_type (asmcomp/cmm.ml[186,5789+41]..[186,5789+51])
                            Ptyp_constr "expression" (asmcomp/cmm.ml[186,5789+41]..[186,5789+51])
                            []
                          core_type (asmcomp/cmm.ml[186,5789+54]..[186,5789+65])
                            Ptyp_constr "Debuginfo.t" (asmcomp/cmm.ml[186,5789+54]..[186,5789+65])
                            []
                        ]
                    ]
                  core_type (asmcomp/cmm.ml[187,5862+8]..[187,5862+19])
                    Ptyp_constr "Debuginfo.t" (asmcomp/cmm.ml[187,5862+8]..[187,5862+19])
                    []
                ]
                None
              (asmcomp/cmm.ml[188,5882+2]..[192,6019+20])
                "Ccatch" (asmcomp/cmm.ml[188,5882+4]..[188,5882+10])
                [
                  core_type (asmcomp/cmm.ml[189,5896+6]..[189,5896+14])
                    Ptyp_constr "rec_flag" (asmcomp/cmm.ml[189,5896+6]..[189,5896+14])
                    []
                  core_type (asmcomp/cmm.ml[190,5911+10]..[191,5976+42])
                    Ptyp_constr "list" (asmcomp/cmm.ml[191,5976+38]..[191,5976+42])
                    [
                      core_type (asmcomp/cmm.ml[190,5911+11]..[191,5976+36])
                        Ptyp_tuple
                        [
                          core_type (asmcomp/cmm.ml[190,5911+11]..[190,5911+14])
                            Ptyp_constr "int" (asmcomp/cmm.ml[190,5911+11]..[190,5911+14])
                            []
                          core_type (asmcomp/cmm.ml[190,5911+17]..[190,5911+64])
                            Ptyp_constr "list" (asmcomp/cmm.ml[190,5911+60]..[190,5911+64])
                            [
                              core_type (asmcomp/cmm.ml[190,5911+18]..[190,5911+58])
                                Ptyp_tuple
                                [
                                  core_type (asmcomp/cmm.ml[190,5911+18]..[190,5911+47])
                                    Ptyp_constr "Backend_var.With_provenance.t" (asmcomp/cmm.ml[190,5911+18]..[190,5911+47])
                                    []
                                  core_type (asmcomp/cmm.ml[190,5911+50]..[190,5911+58])
                                    Ptyp_constr "machtype" (asmcomp/cmm.ml[190,5911+50]..[190,5911+58])
                                    []
                                ]
                            ]
                          core_type (asmcomp/cmm.ml[191,5976+12]..[191,5976+22])
                            Ptyp_constr "expression" (asmcomp/cmm.ml[191,5976+12]..[191,5976+22])
                            []
                          core_type (asmcomp/cmm.ml[191,5976+25]..[191,5976+36])
                            Ptyp_constr "Debuginfo.t" (asmcomp/cmm.ml[191,5976+25]..[191,5976+36])
                            []
                        ]
                    ]
                  core_type (asmcomp/cmm.ml[192,6019+10]..[192,6019+20])
                    Ptyp_constr "expression" (asmcomp/cmm.ml[192,6019+10]..[192,6019+20])
                    []
                ]
                None
              (asmcomp/cmm.ml[193,6040+2]..[193,6040+34])
                "Cexit" (asmcomp/cmm.ml[193,6040+4]..[193,6040+9])
                [
                  core_type (asmcomp/cmm.ml[193,6040+13]..[193,6040+16])
                    Ptyp_constr "int" (asmcomp/cmm.ml[193,6040+13]..[193,6040+16])
                    []
                  core_type (asmcomp/cmm.ml[193,6040+19]..[193,6040+34])
                    Ptyp_constr "list" (asmcomp/cmm.ml[193,6040+30]..[193,6040+34])
                    [
                      core_type (asmcomp/cmm.ml[193,6040+19]..[193,6040+29])
                        Ptyp_constr "expression" (asmcomp/cmm.ml[193,6040+19]..[193,6040+29])
                        []
                    ]
                ]
                None
              (asmcomp/cmm.ml[194,6075+2]..[195,6147+19])
                "Ctrywith" (asmcomp/cmm.ml[194,6075+4]..[194,6075+12])
                [
                  core_type (asmcomp/cmm.ml[194,6075+16]..[194,6075+26])
                    Ptyp_constr "expression" (asmcomp/cmm.ml[194,6075+16]..[194,6075+26])
                    []
                  core_type (asmcomp/cmm.ml[194,6075+29]..[194,6075+58])
                    Ptyp_constr "Backend_var.With_provenance.t" (asmcomp/cmm.ml[194,6075+29]..[194,6075+58])
                    []
                  core_type (asmcomp/cmm.ml[194,6075+61]..[194,6075+71])
                    Ptyp_constr "expression" (asmcomp/cmm.ml[194,6075+61]..[194,6075+71])
                    []
                  core_type (asmcomp/cmm.ml[195,6147+8]..[195,6147+19])
                    Ptyp_constr "Debuginfo.t" (asmcomp/cmm.ml[195,6147+8]..[195,6147+19])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/cmm.ml[197,6168+0]..[199,6211+10])
    Pstr_type Rec
    [
      type_declaration "codegen_option" (asmcomp/cmm.ml[197,6168+5]..[197,6168+19]) (asmcomp/cmm.ml[197,6168+0]..[199,6211+10])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/cmm.ml[198,6190+2]..[198,6190+20])
                "Reduce_code_size" (asmcomp/cmm.ml[198,6190+4]..[198,6190+20])
                []
                None
              (asmcomp/cmm.ml[199,6211+2]..[199,6211+10])
                "No_CSE" (asmcomp/cmm.ml[199,6211+4]..[199,6211+10])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/cmm.ml[201,6223+0]..[207,6423+3])
    Pstr_type Rec
    [
      type_declaration "fundecl" (asmcomp/cmm.ml[201,6223+5]..[201,6223+12]) (asmcomp/cmm.ml[201,6223+0]..[207,6423+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (asmcomp/cmm.ml[202,6238+4]..[202,6238+21])
                Immutable
                "fun_name" (asmcomp/cmm.ml[202,6238+4]..[202,6238+12])                core_type (asmcomp/cmm.ml[202,6238+14]..[202,6238+20])
                  Ptyp_constr "string" (asmcomp/cmm.ml[202,6238+14]..[202,6238+20])
                  []
              (asmcomp/cmm.ml[203,6260+4]..[203,6260+62])
                Immutable
                "fun_args" (asmcomp/cmm.ml[203,6260+4]..[203,6260+12])                core_type (asmcomp/cmm.ml[203,6260+14]..[203,6260+61])
                  Ptyp_constr "list" (asmcomp/cmm.ml[203,6260+57]..[203,6260+61])
                  [
                    core_type (asmcomp/cmm.ml[203,6260+15]..[203,6260+55])
                      Ptyp_tuple
                      [
                        core_type (asmcomp/cmm.ml[203,6260+15]..[203,6260+44])
                          Ptyp_constr "Backend_var.With_provenance.t" (asmcomp/cmm.ml[203,6260+15]..[203,6260+44])
                          []
                        core_type (asmcomp/cmm.ml[203,6260+47]..[203,6260+55])
                          Ptyp_constr "machtype" (asmcomp/cmm.ml[203,6260+47]..[203,6260+55])
                          []
                      ]
                  ]
              (asmcomp/cmm.ml[204,6323+4]..[204,6323+25])
                Immutable
                "fun_body" (asmcomp/cmm.ml[204,6323+4]..[204,6323+12])                core_type (asmcomp/cmm.ml[204,6323+14]..[204,6323+24])
                  Ptyp_constr "expression" (asmcomp/cmm.ml[204,6323+14]..[204,6323+24])
                  []
              (asmcomp/cmm.ml[205,6349+4]..[205,6349+46])
                Immutable
                "fun_codegen_options" (asmcomp/cmm.ml[205,6349+4]..[205,6349+23])                core_type (asmcomp/cmm.ml[205,6349+26]..[205,6349+45])
                  Ptyp_constr "list" (asmcomp/cmm.ml[205,6349+41]..[205,6349+45])
                  [
                    core_type (asmcomp/cmm.ml[205,6349+26]..[205,6349+40])
                      Ptyp_constr "codegen_option" (asmcomp/cmm.ml[205,6349+26]..[205,6349+40])
                      []
                  ]
              (asmcomp/cmm.ml[206,6396+4]..[206,6396+26])
                Immutable
                "fun_dbg" (asmcomp/cmm.ml[206,6396+4]..[206,6396+11])                core_type (asmcomp/cmm.ml[206,6396+14]..[206,6396+25])
                  Ptyp_constr "Debuginfo.t" (asmcomp/cmm.ml[206,6396+14]..[206,6396+25])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/cmm.ml[209,6428+0]..[221,6695+17])
    Pstr_type Rec
    [
      type_declaration "data_item" (asmcomp/cmm.ml[209,6428+5]..[209,6428+14]) (asmcomp/cmm.ml[209,6428+0]..[221,6695+17])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/cmm.ml[210,6445+4]..[210,6445+28])
                "Cdefine_symbol" (asmcomp/cmm.ml[210,6445+4]..[210,6445+18])
                [
                  core_type (asmcomp/cmm.ml[210,6445+22]..[210,6445+28])
                    Ptyp_constr "string" (asmcomp/cmm.ml[210,6445+22]..[210,6445+28])
                    []
                ]
                None
              (asmcomp/cmm.ml[211,6474+2]..[211,6474+28])
                "Cglobal_symbol" (asmcomp/cmm.ml[211,6474+4]..[211,6474+18])
                [
                  core_type (asmcomp/cmm.ml[211,6474+22]..[211,6474+28])
                    Ptyp_constr "string" (asmcomp/cmm.ml[211,6474+22]..[211,6474+28])
                    []
                ]
                None
              (asmcomp/cmm.ml[212,6503+2]..[212,6503+16])
                "Cint8" (asmcomp/cmm.ml[212,6503+4]..[212,6503+9])
                [
                  core_type (asmcomp/cmm.ml[212,6503+13]..[212,6503+16])
                    Ptyp_constr "int" (asmcomp/cmm.ml[212,6503+13]..[212,6503+16])
                    []
                ]
                None
              (asmcomp/cmm.ml[213,6520+2]..[213,6520+17])
                "Cint16" (asmcomp/cmm.ml[213,6520+4]..[213,6520+10])
                [
                  core_type (asmcomp/cmm.ml[213,6520+14]..[213,6520+17])
                    Ptyp_constr "int" (asmcomp/cmm.ml[213,6520+14]..[213,6520+17])
                    []
                ]
                None
              (asmcomp/cmm.ml[214,6538+2]..[214,6538+23])
                "Cint32" (asmcomp/cmm.ml[214,6538+4]..[214,6538+10])
                [
                  core_type (asmcomp/cmm.ml[214,6538+14]..[214,6538+23])
                    Ptyp_constr "nativeint" (asmcomp/cmm.ml[214,6538+14]..[214,6538+23])
                    []
                ]
                None
              (asmcomp/cmm.ml[215,6562+2]..[215,6562+21])
                "Cint" (asmcomp/cmm.ml[215,6562+4]..[215,6562+8])
                [
                  core_type (asmcomp/cmm.ml[215,6562+12]..[215,6562+21])
                    Ptyp_constr "nativeint" (asmcomp/cmm.ml[215,6562+12]..[215,6562+21])
                    []
                ]
                None
              (asmcomp/cmm.ml[216,6584+2]..[216,6584+20])
                "Csingle" (asmcomp/cmm.ml[216,6584+4]..[216,6584+11])
                [
                  core_type (asmcomp/cmm.ml[216,6584+15]..[216,6584+20])
                    Ptyp_constr "float" (asmcomp/cmm.ml[216,6584+15]..[216,6584+20])
                    []
                ]
                None
              (asmcomp/cmm.ml[217,6605+2]..[217,6605+20])
                "Cdouble" (asmcomp/cmm.ml[217,6605+4]..[217,6605+11])
                [
                  core_type (asmcomp/cmm.ml[217,6605+15]..[217,6605+20])
                    Ptyp_constr "float" (asmcomp/cmm.ml[217,6605+15]..[217,6605+20])
                    []
                ]
                None
              (asmcomp/cmm.ml[218,6626+2]..[218,6626+29])
                "Csymbol_address" (asmcomp/cmm.ml[218,6626+4]..[218,6626+19])
                [
                  core_type (asmcomp/cmm.ml[218,6626+23]..[218,6626+29])
                    Ptyp_constr "string" (asmcomp/cmm.ml[218,6626+23]..[218,6626+29])
                    []
                ]
                None
              (asmcomp/cmm.ml[219,6656+2]..[219,6656+21])
                "Cstring" (asmcomp/cmm.ml[219,6656+4]..[219,6656+11])
                [
                  core_type (asmcomp/cmm.ml[219,6656+15]..[219,6656+21])
                    Ptyp_constr "string" (asmcomp/cmm.ml[219,6656+15]..[219,6656+21])
                    []
                ]
                None
              (asmcomp/cmm.ml[220,6678+2]..[220,6678+16])
                "Cskip" (asmcomp/cmm.ml[220,6678+4]..[220,6678+9])
                [
                  core_type (asmcomp/cmm.ml[220,6678+13]..[220,6678+16])
                    Ptyp_constr "int" (asmcomp/cmm.ml[220,6678+13]..[220,6678+16])
                    []
                ]
                None
              (asmcomp/cmm.ml[221,6695+2]..[221,6695+17])
                "Calign" (asmcomp/cmm.ml[221,6695+4]..[221,6695+10])
                [
                  core_type (asmcomp/cmm.ml[221,6695+14]..[221,6695+17])
                    Ptyp_constr "int" (asmcomp/cmm.ml[221,6695+14]..[221,6695+17])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/cmm.ml[223,6714+0]..[225,6753+27])
    Pstr_type Rec
    [
      type_declaration "phrase" (asmcomp/cmm.ml[223,6714+5]..[223,6714+11]) (asmcomp/cmm.ml[223,6714+0]..[225,6753+27])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/cmm.ml[224,6728+4]..[224,6728+24])
                "Cfunction" (asmcomp/cmm.ml[224,6728+4]..[224,6728+13])
                [
                  core_type (asmcomp/cmm.ml[224,6728+17]..[224,6728+24])
                    Ptyp_constr "fundecl" (asmcomp/cmm.ml[224,6728+17]..[224,6728+24])
                    []
                ]
                None
              (asmcomp/cmm.ml[225,6753+2]..[225,6753+27])
                "Cdata" (asmcomp/cmm.ml[225,6753+4]..[225,6753+9])
                [
                  core_type (asmcomp/cmm.ml[225,6753+13]..[225,6753+27])
                    Ptyp_constr "list" (asmcomp/cmm.ml[225,6753+23]..[225,6753+27])
                    [
                      core_type (asmcomp/cmm.ml[225,6753+13]..[225,6753+22])
                        Ptyp_constr "data_item" (asmcomp/cmm.ml[225,6753+13]..[225,6753+22])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/cmm.ml[227,6782+0]..[228,6817+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[227,6782+4]..[227,6782+10])
          Ppat_var "ccatch" (asmcomp/cmm.ml[227,6782+4]..[227,6782+10])
        expression (asmcomp/cmm.ml[227,6782+11]..[228,6817+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/cmm.ml[227,6782+11]..[227,6782+32])
            Ppat_tuple
            [
              pattern (asmcomp/cmm.ml[227,6782+12]..[227,6782+13])
                Ppat_var "i" (asmcomp/cmm.ml[227,6782+12]..[227,6782+13])
              pattern (asmcomp/cmm.ml[227,6782+15]..[227,6782+18])
                Ppat_var "ids" (asmcomp/cmm.ml[227,6782+15]..[227,6782+18])
              pattern (asmcomp/cmm.ml[227,6782+20]..[227,6782+22])
                Ppat_var "e1" (asmcomp/cmm.ml[227,6782+20]..[227,6782+22])
              pattern (asmcomp/cmm.ml[227,6782+24]..[227,6782+26])
                Ppat_var "e2" (asmcomp/cmm.ml[227,6782+24]..[227,6782+26])
              pattern (asmcomp/cmm.ml[227,6782+28]..[227,6782+31])
                Ppat_var "dbg" (asmcomp/cmm.ml[227,6782+28]..[227,6782+31])
            ]
          expression (asmcomp/cmm.ml[228,6817+2]..[228,6817+45])
            Pexp_construct "Ccatch" (asmcomp/cmm.ml[228,6817+2]..[228,6817+8])
            Some
              expression (asmcomp/cmm.ml[228,6817+8]..[228,6817+45])
                Pexp_tuple
                [
                  expression (asmcomp/cmm.ml[228,6817+9]..[228,6817+21])
                    Pexp_construct "Nonrecursive" (asmcomp/cmm.ml[228,6817+9]..[228,6817+21])
                    None
                  expression (asmcomp/cmm.ml[228,6817+23]..[228,6817+40])
                    Pexp_construct "::" (asmcomp/cmm.ml[228,6817+24]..[228,6817+40]) ghost
                    Some
                      expression (asmcomp/cmm.ml[228,6817+24]..[228,6817+40]) ghost
                        Pexp_tuple
                        [
                          expression (asmcomp/cmm.ml[228,6817+24]..[228,6817+39])
                            Pexp_tuple
                            [
                              expression (asmcomp/cmm.ml[228,6817+24]..[228,6817+25])
                                Pexp_ident "i" (asmcomp/cmm.ml[228,6817+24]..[228,6817+25])
                              expression (asmcomp/cmm.ml[228,6817+27]..[228,6817+30])
                                Pexp_ident "ids" (asmcomp/cmm.ml[228,6817+27]..[228,6817+30])
                              expression (asmcomp/cmm.ml[228,6817+32]..[228,6817+34])
                                Pexp_ident "e2" (asmcomp/cmm.ml[228,6817+32]..[228,6817+34])
                              expression (asmcomp/cmm.ml[228,6817+36]..[228,6817+39])
                                Pexp_ident "dbg" (asmcomp/cmm.ml[228,6817+36]..[228,6817+39])
                            ]
                          expression (asmcomp/cmm.ml[228,6817+39]..[228,6817+40]) ghost
                            Pexp_construct "[]" (asmcomp/cmm.ml[228,6817+39]..[228,6817+40]) ghost
                            None
                        ]
                  expression (asmcomp/cmm.ml[228,6817+42]..[228,6817+44])
                    Pexp_ident "e1" (asmcomp/cmm.ml[228,6817+42]..[228,6817+44])
                ]
    ]
  structure_item (asmcomp/cmm.ml[230,6864+0]..[231,6879+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[230,6864+4]..[230,6864+9])
          Ppat_var "reset" (asmcomp/cmm.ml[230,6864+4]..[230,6864+9])
        expression (asmcomp/cmm.ml[230,6864+10]..[231,6879+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/cmm.ml[230,6864+10]..[230,6864+12])
            Ppat_construct "()" (asmcomp/cmm.ml[230,6864+10]..[230,6864+12])
            None
          expression (asmcomp/cmm.ml[231,6879+2]..[231,6879+29])
            Pexp_apply
            expression (asmcomp/cmm.ml[231,6879+16]..[231,6879+18])
              Pexp_ident ":=" (asmcomp/cmm.ml[231,6879+16]..[231,6879+18])
            [
              <arg>
              Nolabel
                expression (asmcomp/cmm.ml[231,6879+2]..[231,6879+15])
                  Pexp_ident "label_counter" (asmcomp/cmm.ml[231,6879+2]..[231,6879+15])
              <arg>
              Nolabel
                expression (asmcomp/cmm.ml[231,6879+19]..[231,6879+29])
                  Pexp_ident "init_label" (asmcomp/cmm.ml[231,6879+19]..[231,6879+29])
            ]
    ]
  structure_item (asmcomp/cmm.ml[233,6910+0]..[265,7663+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[233,6910+4]..[233,6910+21])
          Ppat_var "iter_shallow_tail" (asmcomp/cmm.ml[233,6910+4]..[233,6910+21])
        expression (asmcomp/cmm.ml[233,6910+22]..[265,7663+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/cmm.ml[233,6910+22]..[233,6910+23])
            Ppat_var "f" (asmcomp/cmm.ml[233,6910+22]..[233,6910+23])
          expression (asmcomp/cmm.ml[233,6910+26]..[265,7663+11])
            Pexp_function
            [
              <case>
                pattern (asmcomp/cmm.ml[234,6945+4]..[234,6945+74])
                  Ppat_or
                  pattern (asmcomp/cmm.ml[234,6945+4]..[234,6945+48])
                    Ppat_or
                    pattern (asmcomp/cmm.ml[234,6945+4]..[234,6945+20])
                      Ppat_construct "Clet" (asmcomp/cmm.ml[234,6945+4]..[234,6945+8])
                      Some
                        []
                        pattern (asmcomp/cmm.ml[234,6945+8]..[234,6945+20])
                          Ppat_tuple
                          [
                            pattern (asmcomp/cmm.ml[234,6945+9]..[234,6945+10])
                              Ppat_any
                            pattern (asmcomp/cmm.ml[234,6945+12]..[234,6945+13])
                              Ppat_any
                            pattern (asmcomp/cmm.ml[234,6945+15]..[234,6945+19])
                              Ppat_var "body" (asmcomp/cmm.ml[234,6945+15]..[234,6945+19])
                          ]
                    pattern (asmcomp/cmm.ml[234,6945+23]..[234,6945+48])
                      Ppat_construct "Cphantom_let" (asmcomp/cmm.ml[234,6945+23]..[234,6945+35])
                      Some
                        []
                        pattern (asmcomp/cmm.ml[234,6945+36]..[234,6945+48])
                          Ppat_tuple
                          [
                            pattern (asmcomp/cmm.ml[234,6945+37]..[234,6945+38])
                              Ppat_any
                            pattern (asmcomp/cmm.ml[234,6945+40]..[234,6945+41])
                              Ppat_any
                            pattern (asmcomp/cmm.ml[234,6945+43]..[234,6945+47])
                              Ppat_var "body" (asmcomp/cmm.ml[234,6945+43]..[234,6945+47])
                          ]
                  pattern (asmcomp/cmm.ml[234,6945+51]..[234,6945+74])
                    Ppat_construct "Clet_mut" (asmcomp/cmm.ml[234,6945+51]..[234,6945+59])
                    Some
                      []
                      pattern (asmcomp/cmm.ml[234,6945+59]..[234,6945+74])
                        Ppat_tuple
                        [
                          pattern (asmcomp/cmm.ml[234,6945+60]..[234,6945+61])
                            Ppat_any
                          pattern (asmcomp/cmm.ml[234,6945+63]..[234,6945+64])
                            Ppat_any
                          pattern (asmcomp/cmm.ml[234,6945+66]..[234,6945+67])
                            Ppat_any
                          pattern (asmcomp/cmm.ml[234,6945+69]..[234,6945+73])
                            Ppat_var "body" (asmcomp/cmm.ml[234,6945+69]..[234,6945+73])
                        ]
                expression (asmcomp/cmm.ml[235,7023+6]..[236,7037+10])
                  Pexp_sequence
                  expression (asmcomp/cmm.ml[235,7023+6]..[235,7023+12])
                    Pexp_apply
                    expression (asmcomp/cmm.ml[235,7023+6]..[235,7023+7])
                      Pexp_ident "f" (asmcomp/cmm.ml[235,7023+6]..[235,7023+7])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/cmm.ml[235,7023+8]..[235,7023+12])
                          Pexp_ident "body" (asmcomp/cmm.ml[235,7023+8]..[235,7023+12])
                    ]
                  expression (asmcomp/cmm.ml[236,7037+6]..[236,7037+10])
                    Pexp_construct "true" (asmcomp/cmm.ml[236,7037+6]..[236,7037+10])
                    None
              <case>
                pattern (asmcomp/cmm.ml[237,7048+4]..[237,7048+64])
                  Ppat_construct "Cifthenelse" (asmcomp/cmm.ml[237,7048+4]..[237,7048+15])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[237,7048+15]..[237,7048+64])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[237,7048+16]..[237,7048+21])
                          Ppat_var "_cond" (asmcomp/cmm.ml[237,7048+16]..[237,7048+21])
                        pattern (asmcomp/cmm.ml[237,7048+23]..[237,7048+32])
                          Ppat_var "_ifso_dbg" (asmcomp/cmm.ml[237,7048+23]..[237,7048+32])
                        pattern (asmcomp/cmm.ml[237,7048+34]..[237,7048+38])
                          Ppat_var "ifso" (asmcomp/cmm.ml[237,7048+34]..[237,7048+38])
                        pattern (asmcomp/cmm.ml[237,7048+40]..[237,7048+50])
                          Ppat_var "_ifnot_dbg" (asmcomp/cmm.ml[237,7048+40]..[237,7048+50])
                        pattern (asmcomp/cmm.ml[237,7048+52]..[237,7048+57])
                          Ppat_var "ifnot" (asmcomp/cmm.ml[237,7048+52]..[237,7048+57])
                        pattern (asmcomp/cmm.ml[237,7048+59]..[237,7048+63])
                          Ppat_var "_dbg" (asmcomp/cmm.ml[237,7048+59]..[237,7048+63])
                      ]
                expression (asmcomp/cmm.ml[238,7116+6]..[240,7145+10])
                  Pexp_sequence
                  expression (asmcomp/cmm.ml[238,7116+6]..[238,7116+12])
                    Pexp_apply
                    expression (asmcomp/cmm.ml[238,7116+6]..[238,7116+7])
                      Pexp_ident "f" (asmcomp/cmm.ml[238,7116+6]..[238,7116+7])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/cmm.ml[238,7116+8]..[238,7116+12])
                          Pexp_ident "ifso" (asmcomp/cmm.ml[238,7116+8]..[238,7116+12])
                    ]
                  expression (asmcomp/cmm.ml[239,7130+6]..[240,7145+10])
                    Pexp_sequence
                    expression (asmcomp/cmm.ml[239,7130+6]..[239,7130+13])
                      Pexp_apply
                      expression (asmcomp/cmm.ml[239,7130+6]..[239,7130+7])
                        Pexp_ident "f" (asmcomp/cmm.ml[239,7130+6]..[239,7130+7])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/cmm.ml[239,7130+8]..[239,7130+13])
                            Pexp_ident "ifnot" (asmcomp/cmm.ml[239,7130+8]..[239,7130+13])
                      ]
                    expression (asmcomp/cmm.ml[240,7145+6]..[240,7145+10])
                      Pexp_construct "true" (asmcomp/cmm.ml[240,7145+6]..[240,7145+10])
                      None
              <case>
                pattern (asmcomp/cmm.ml[241,7156+4]..[241,7156+22])
                  Ppat_construct "Csequence" (asmcomp/cmm.ml[241,7156+4]..[241,7156+13])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[241,7156+13]..[241,7156+22])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[241,7156+14]..[241,7156+17])
                          Ppat_var "_e1" (asmcomp/cmm.ml[241,7156+14]..[241,7156+17])
                        pattern (asmcomp/cmm.ml[241,7156+19]..[241,7156+21])
                          Ppat_var "e2" (asmcomp/cmm.ml[241,7156+19]..[241,7156+21])
                      ]
                expression (asmcomp/cmm.ml[242,7182+6]..[243,7194+10])
                  Pexp_sequence
                  expression (asmcomp/cmm.ml[242,7182+6]..[242,7182+10])
                    Pexp_apply
                    expression (asmcomp/cmm.ml[242,7182+6]..[242,7182+7])
                      Pexp_ident "f" (asmcomp/cmm.ml[242,7182+6]..[242,7182+7])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/cmm.ml[242,7182+8]..[242,7182+10])
                          Pexp_ident "e2" (asmcomp/cmm.ml[242,7182+8]..[242,7182+10])
                    ]
                  expression (asmcomp/cmm.ml[243,7194+6]..[243,7194+10])
                    Pexp_construct "true" (asmcomp/cmm.ml[243,7194+6]..[243,7194+10])
                    None
              <case>
                pattern (asmcomp/cmm.ml[244,7205+4]..[244,7205+32])
                  Ppat_construct "Cswitch" (asmcomp/cmm.ml[244,7205+4]..[244,7205+11])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[244,7205+11]..[244,7205+32])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[244,7205+12]..[244,7205+14])
                          Ppat_var "_e" (asmcomp/cmm.ml[244,7205+12]..[244,7205+14])
                        pattern (asmcomp/cmm.ml[244,7205+16]..[244,7205+20])
                          Ppat_var "_tbl" (asmcomp/cmm.ml[244,7205+16]..[244,7205+20])
                        pattern (asmcomp/cmm.ml[244,7205+22]..[244,7205+24])
                          Ppat_var "el" (asmcomp/cmm.ml[244,7205+22]..[244,7205+24])
                        pattern (asmcomp/cmm.ml[244,7205+26]..[244,7205+31])
                          Ppat_var "_dbg'" (asmcomp/cmm.ml[244,7205+26]..[244,7205+31])
                      ]
                expression (asmcomp/cmm.ml[245,7241+6]..[246,7285+10])
                  Pexp_sequence
                  expression (asmcomp/cmm.ml[245,7241+6]..[245,7241+42])
                    Pexp_apply
                    expression (asmcomp/cmm.ml[245,7241+6]..[245,7241+16])
                      Pexp_ident "Array.iter" (asmcomp/cmm.ml[245,7241+6]..[245,7241+16])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/cmm.ml[245,7241+17]..[245,7241+39])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (asmcomp/cmm.ml[245,7241+22]..[245,7241+31])
                            Ppat_tuple
                            [
                              pattern (asmcomp/cmm.ml[245,7241+23]..[245,7241+24])
                                Ppat_var "e" (asmcomp/cmm.ml[245,7241+23]..[245,7241+24])
                              pattern (asmcomp/cmm.ml[245,7241+26]..[245,7241+30])
                                Ppat_var "_dbg" (asmcomp/cmm.ml[245,7241+26]..[245,7241+30])
                            ]
                          expression (asmcomp/cmm.ml[245,7241+35]..[245,7241+38])
                            Pexp_apply
                            expression (asmcomp/cmm.ml[245,7241+35]..[245,7241+36])
                              Pexp_ident "f" (asmcomp/cmm.ml[245,7241+35]..[245,7241+36])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/cmm.ml[245,7241+37]..[245,7241+38])
                                  Pexp_ident "e" (asmcomp/cmm.ml[245,7241+37]..[245,7241+38])
                            ]
                      <arg>
                      Nolabel
                        expression (asmcomp/cmm.ml[245,7241+40]..[245,7241+42])
                          Pexp_ident "el" (asmcomp/cmm.ml[245,7241+40]..[245,7241+42])
                    ]
                  expression (asmcomp/cmm.ml[246,7285+6]..[246,7285+10])
                    Pexp_construct "true" (asmcomp/cmm.ml[246,7285+6]..[246,7285+10])
                    None
              <case>
                pattern (asmcomp/cmm.ml[247,7296+4]..[247,7296+37])
                  Ppat_construct "Ccatch" (asmcomp/cmm.ml[247,7296+4]..[247,7296+10])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[247,7296+10]..[247,7296+37])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[247,7296+11]..[247,7296+20])
                          Ppat_var "_rec_flag" (asmcomp/cmm.ml[247,7296+11]..[247,7296+20])
                        pattern (asmcomp/cmm.ml[247,7296+22]..[247,7296+30])
                          Ppat_var "handlers" (asmcomp/cmm.ml[247,7296+22]..[247,7296+30])
                        pattern (asmcomp/cmm.ml[247,7296+32]..[247,7296+36])
                          Ppat_var "body" (asmcomp/cmm.ml[247,7296+32]..[247,7296+36])
                      ]
                expression (asmcomp/cmm.ml[248,7337+6]..[250,7406+10])
                  Pexp_sequence
                  expression (asmcomp/cmm.ml[248,7337+6]..[248,7337+53])
                    Pexp_apply
                    expression (asmcomp/cmm.ml[248,7337+6]..[248,7337+15])
                      Pexp_ident "List.iter" (asmcomp/cmm.ml[248,7337+6]..[248,7337+15])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/cmm.ml[248,7337+16]..[248,7337+44])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (asmcomp/cmm.ml[248,7337+21]..[248,7337+36])
                            Ppat_tuple
                            [
                              pattern (asmcomp/cmm.ml[248,7337+22]..[248,7337+23])
                                Ppat_any
                              pattern (asmcomp/cmm.ml[248,7337+25]..[248,7337+26])
                                Ppat_any
                              pattern (asmcomp/cmm.ml[248,7337+28]..[248,7337+29])
                                Ppat_var "h" (asmcomp/cmm.ml[248,7337+28]..[248,7337+29])
                              pattern (asmcomp/cmm.ml[248,7337+31]..[248,7337+35])
                                Ppat_var "_dbg" (asmcomp/cmm.ml[248,7337+31]..[248,7337+35])
                            ]
                          expression (asmcomp/cmm.ml[248,7337+40]..[248,7337+43])
                            Pexp_apply
                            expression (asmcomp/cmm.ml[248,7337+40]..[248,7337+41])
                              Pexp_ident "f" (asmcomp/cmm.ml[248,7337+40]..[248,7337+41])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/cmm.ml[248,7337+42]..[248,7337+43])
                                  Pexp_ident "h" (asmcomp/cmm.ml[248,7337+42]..[248,7337+43])
                            ]
                      <arg>
                      Nolabel
                        expression (asmcomp/cmm.ml[248,7337+45]..[248,7337+53])
                          Pexp_ident "handlers" (asmcomp/cmm.ml[248,7337+45]..[248,7337+53])
                    ]
                  expression (asmcomp/cmm.ml[249,7392+6]..[250,7406+10])
                    Pexp_sequence
                    expression (asmcomp/cmm.ml[249,7392+6]..[249,7392+12])
                      Pexp_apply
                      expression (asmcomp/cmm.ml[249,7392+6]..[249,7392+7])
                        Pexp_ident "f" (asmcomp/cmm.ml[249,7392+6]..[249,7392+7])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/cmm.ml[249,7392+8]..[249,7392+12])
                            Pexp_ident "body" (asmcomp/cmm.ml[249,7392+8]..[249,7392+12])
                      ]
                    expression (asmcomp/cmm.ml[250,7406+6]..[250,7406+10])
                      Pexp_construct "true" (asmcomp/cmm.ml[250,7406+6]..[250,7406+10])
                      None
              <case>
                pattern (asmcomp/cmm.ml[251,7417+4]..[251,7417+31])
                  Ppat_construct "Ctrywith" (asmcomp/cmm.ml[251,7417+4]..[251,7417+12])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[251,7417+12]..[251,7417+31])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[251,7417+13]..[251,7417+15])
                          Ppat_var "e1" (asmcomp/cmm.ml[251,7417+13]..[251,7417+15])
                        pattern (asmcomp/cmm.ml[251,7417+17]..[251,7417+20])
                          Ppat_var "_id" (asmcomp/cmm.ml[251,7417+17]..[251,7417+20])
                        pattern (asmcomp/cmm.ml[251,7417+22]..[251,7417+24])
                          Ppat_var "e2" (asmcomp/cmm.ml[251,7417+22]..[251,7417+24])
                        pattern (asmcomp/cmm.ml[251,7417+26]..[251,7417+30])
                          Ppat_var "_dbg" (asmcomp/cmm.ml[251,7417+26]..[251,7417+30])
                      ]
                expression (asmcomp/cmm.ml[252,7452+6]..[254,7476+10])
                  Pexp_sequence
                  expression (asmcomp/cmm.ml[252,7452+6]..[252,7452+10])
                    Pexp_apply
                    expression (asmcomp/cmm.ml[252,7452+6]..[252,7452+7])
                      Pexp_ident "f" (asmcomp/cmm.ml[252,7452+6]..[252,7452+7])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/cmm.ml[252,7452+8]..[252,7452+10])
                          Pexp_ident "e1" (asmcomp/cmm.ml[252,7452+8]..[252,7452+10])
                    ]
                  expression (asmcomp/cmm.ml[253,7464+6]..[254,7476+10])
                    Pexp_sequence
                    expression (asmcomp/cmm.ml[253,7464+6]..[253,7464+10])
                      Pexp_apply
                      expression (asmcomp/cmm.ml[253,7464+6]..[253,7464+7])
                        Pexp_ident "f" (asmcomp/cmm.ml[253,7464+6]..[253,7464+7])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/cmm.ml[253,7464+8]..[253,7464+10])
                            Pexp_ident "e2" (asmcomp/cmm.ml[253,7464+8]..[253,7464+10])
                      ]
                    expression (asmcomp/cmm.ml[254,7476+6]..[254,7476+10])
                      Pexp_construct "true" (asmcomp/cmm.ml[254,7476+6]..[254,7476+10])
                      None
              <case>
                pattern (asmcomp/cmm.ml[255,7487+4]..[255,7487+34])
                  Ppat_or
                  pattern (asmcomp/cmm.ml[255,7487+4]..[255,7487+11])
                    Ppat_construct "Cexit" (asmcomp/cmm.ml[255,7487+4]..[255,7487+9])
                    Some
                      []
                      pattern (asmcomp/cmm.ml[255,7487+10]..[255,7487+11])
                        Ppat_any
                  pattern (asmcomp/cmm.ml[255,7487+14]..[255,7487+34])
                    Ppat_construct "Cop" (asmcomp/cmm.ml[255,7487+14]..[255,7487+17])
                    Some
                      []
                      pattern (asmcomp/cmm.ml[255,7487+18]..[255,7487+34])
                        Ppat_tuple
                        [
                          pattern (asmcomp/cmm.ml[255,7487+19]..[255,7487+27])
                            Ppat_construct "Craise" (asmcomp/cmm.ml[255,7487+19]..[255,7487+25])
                            Some
                              []
                              pattern (asmcomp/cmm.ml[255,7487+26]..[255,7487+27])
                                Ppat_any
                          pattern (asmcomp/cmm.ml[255,7487+29]..[255,7487+30])
                            Ppat_any
                          pattern (asmcomp/cmm.ml[255,7487+32]..[255,7487+33])
                            Ppat_any
                        ]
                expression (asmcomp/cmm.ml[256,7525+6]..[256,7525+10])
                  Pexp_construct "true" (asmcomp/cmm.ml[256,7525+6]..[256,7525+10])
                  None
              <case>
                pattern (asmcomp/cmm.ml[257,7536+4]..[264,7650+9])
                  Ppat_or
                  pattern (asmcomp/cmm.ml[257,7536+4]..[263,7637+12])
                    Ppat_or
                    pattern (asmcomp/cmm.ml[257,7536+4]..[262,7623+13])
                      Ppat_or
                      pattern (asmcomp/cmm.ml[257,7536+4]..[261,7612+10])
                        Ppat_or
                        pattern (asmcomp/cmm.ml[257,7536+4]..[260,7592+19])
                          Ppat_or
                          pattern (asmcomp/cmm.ml[257,7536+4]..[259,7573+18])
                            Ppat_or
                            pattern (asmcomp/cmm.ml[257,7536+4]..[258,7553+19])
                              Ppat_or
                              pattern (asmcomp/cmm.ml[257,7536+4]..[257,7536+16])
                                Ppat_construct "Cconst_int" (asmcomp/cmm.ml[257,7536+4]..[257,7536+14])
                                Some
                                  []
                                  pattern (asmcomp/cmm.ml[257,7536+15]..[257,7536+16])
                                    Ppat_any
                              pattern (asmcomp/cmm.ml[258,7553+4]..[258,7553+19])
                                Ppat_construct "Cconst_natint" (asmcomp/cmm.ml[258,7553+4]..[258,7553+17])
                                Some
                                  []
                                  pattern (asmcomp/cmm.ml[258,7553+18]..[258,7553+19])
                                    Ppat_any
                            pattern (asmcomp/cmm.ml[259,7573+4]..[259,7573+18])
                              Ppat_construct "Cconst_float" (asmcomp/cmm.ml[259,7573+4]..[259,7573+16])
                              Some
                                []
                                pattern (asmcomp/cmm.ml[259,7573+17]..[259,7573+18])
                                  Ppat_any
                          pattern (asmcomp/cmm.ml[260,7592+4]..[260,7592+19])
                            Ppat_construct "Cconst_symbol" (asmcomp/cmm.ml[260,7592+4]..[260,7592+17])
                            Some
                              []
                              pattern (asmcomp/cmm.ml[260,7592+18]..[260,7592+19])
                                Ppat_any
                        pattern (asmcomp/cmm.ml[261,7612+4]..[261,7612+10])
                          Ppat_construct "Cvar" (asmcomp/cmm.ml[261,7612+4]..[261,7612+8])
                          Some
                            []
                            pattern (asmcomp/cmm.ml[261,7612+9]..[261,7612+10])
                              Ppat_any
                      pattern (asmcomp/cmm.ml[262,7623+4]..[262,7623+13])
                        Ppat_construct "Cassign" (asmcomp/cmm.ml[262,7623+4]..[262,7623+11])
                        Some
                          []
                          pattern (asmcomp/cmm.ml[262,7623+12]..[262,7623+13])
                            Ppat_any
                    pattern (asmcomp/cmm.ml[263,7637+4]..[263,7637+12])
                      Ppat_construct "Ctuple" (asmcomp/cmm.ml[263,7637+4]..[263,7637+10])
                      Some
                        []
                        pattern (asmcomp/cmm.ml[263,7637+11]..[263,7637+12])
                          Ppat_any
                  pattern (asmcomp/cmm.ml[264,7650+4]..[264,7650+9])
                    Ppat_construct "Cop" (asmcomp/cmm.ml[264,7650+4]..[264,7650+7])
                    Some
                      []
                      pattern (asmcomp/cmm.ml[264,7650+8]..[264,7650+9])
                        Ppat_any
                expression (asmcomp/cmm.ml[265,7663+6]..[265,7663+11])
                  Pexp_construct "false" (asmcomp/cmm.ml[265,7663+6]..[265,7663+11])
                  None
            ]
    ]
  structure_item (asmcomp/cmm.ml[267,7676+0]..[301,8771+9])
    Pstr_value Rec
    [
      <def>
        pattern (asmcomp/cmm.ml[267,7676+8]..[267,7676+16])
          Ppat_var "map_tail" (asmcomp/cmm.ml[267,7676+8]..[267,7676+16])
        expression (asmcomp/cmm.ml[267,7676+17]..[301,8771+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/cmm.ml[267,7676+17]..[267,7676+18])
            Ppat_var "f" (asmcomp/cmm.ml[267,7676+17]..[267,7676+18])
          expression (asmcomp/cmm.ml[267,7676+21]..[301,8771+9])
            Pexp_function
            [
              <case>
                pattern (asmcomp/cmm.ml[268,7706+4]..[268,7706+23])
                  Ppat_construct "Clet" (asmcomp/cmm.ml[268,7706+4]..[268,7706+8])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[268,7706+8]..[268,7706+23])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[268,7706+9]..[268,7706+11])
                          Ppat_var "id" (asmcomp/cmm.ml[268,7706+9]..[268,7706+11])
                        pattern (asmcomp/cmm.ml[268,7706+13]..[268,7706+16])
                          Ppat_var "exp" (asmcomp/cmm.ml[268,7706+13]..[268,7706+16])
                        pattern (asmcomp/cmm.ml[268,7706+18]..[268,7706+22])
                          Ppat_var "body" (asmcomp/cmm.ml[268,7706+18]..[268,7706+22])
                      ]
                expression (asmcomp/cmm.ml[269,7733+6]..[269,7733+36])
                  Pexp_construct "Clet" (asmcomp/cmm.ml[269,7733+6]..[269,7733+10])
                  Some
                    expression (asmcomp/cmm.ml[269,7733+10]..[269,7733+36])
                      Pexp_tuple
                      [
                        expression (asmcomp/cmm.ml[269,7733+11]..[269,7733+13])
                          Pexp_ident "id" (asmcomp/cmm.ml[269,7733+11]..[269,7733+13])
                        expression (asmcomp/cmm.ml[269,7733+15]..[269,7733+18])
                          Pexp_ident "exp" (asmcomp/cmm.ml[269,7733+15]..[269,7733+18])
                        expression (asmcomp/cmm.ml[269,7733+20]..[269,7733+35])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[269,7733+20]..[269,7733+28])
                            Pexp_ident "map_tail" (asmcomp/cmm.ml[269,7733+20]..[269,7733+28])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[269,7733+29]..[269,7733+30])
                                Pexp_ident "f" (asmcomp/cmm.ml[269,7733+29]..[269,7733+30])
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[269,7733+31]..[269,7733+35])
                                Pexp_ident "body" (asmcomp/cmm.ml[269,7733+31]..[269,7733+35])
                          ]
                      ]
              <case>
                pattern (asmcomp/cmm.ml[270,7770+4]..[270,7770+33])
                  Ppat_construct "Clet_mut" (asmcomp/cmm.ml[270,7770+4]..[270,7770+12])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[270,7770+12]..[270,7770+33])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[270,7770+13]..[270,7770+15])
                          Ppat_var "id" (asmcomp/cmm.ml[270,7770+13]..[270,7770+15])
                        pattern (asmcomp/cmm.ml[270,7770+17]..[270,7770+21])
                          Ppat_var "kind" (asmcomp/cmm.ml[270,7770+17]..[270,7770+21])
                        pattern (asmcomp/cmm.ml[270,7770+23]..[270,7770+26])
                          Ppat_var "exp" (asmcomp/cmm.ml[270,7770+23]..[270,7770+26])
                        pattern (asmcomp/cmm.ml[270,7770+28]..[270,7770+32])
                          Ppat_var "body" (asmcomp/cmm.ml[270,7770+28]..[270,7770+32])
                      ]
                expression (asmcomp/cmm.ml[271,7807+6]..[271,7807+46])
                  Pexp_construct "Clet_mut" (asmcomp/cmm.ml[271,7807+6]..[271,7807+14])
                  Some
                    expression (asmcomp/cmm.ml[271,7807+14]..[271,7807+46])
                      Pexp_tuple
                      [
                        expression (asmcomp/cmm.ml[271,7807+15]..[271,7807+17])
                          Pexp_ident "id" (asmcomp/cmm.ml[271,7807+15]..[271,7807+17])
                        expression (asmcomp/cmm.ml[271,7807+19]..[271,7807+23])
                          Pexp_ident "kind" (asmcomp/cmm.ml[271,7807+19]..[271,7807+23])
                        expression (asmcomp/cmm.ml[271,7807+25]..[271,7807+28])
                          Pexp_ident "exp" (asmcomp/cmm.ml[271,7807+25]..[271,7807+28])
                        expression (asmcomp/cmm.ml[271,7807+30]..[271,7807+45])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[271,7807+30]..[271,7807+38])
                            Pexp_ident "map_tail" (asmcomp/cmm.ml[271,7807+30]..[271,7807+38])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[271,7807+39]..[271,7807+40])
                                Pexp_ident "f" (asmcomp/cmm.ml[271,7807+39]..[271,7807+40])
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[271,7807+41]..[271,7807+45])
                                Pexp_ident "body" (asmcomp/cmm.ml[271,7807+41]..[271,7807+45])
                          ]
                      ]
              <case>
                pattern (asmcomp/cmm.ml[272,7854+4]..[272,7854+31])
                  Ppat_construct "Cphantom_let" (asmcomp/cmm.ml[272,7854+4]..[272,7854+16])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[272,7854+16]..[272,7854+31])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[272,7854+17]..[272,7854+19])
                          Ppat_var "id" (asmcomp/cmm.ml[272,7854+17]..[272,7854+19])
                        pattern (asmcomp/cmm.ml[272,7854+21]..[272,7854+24])
                          Ppat_var "exp" (asmcomp/cmm.ml[272,7854+21]..[272,7854+24])
                        pattern (asmcomp/cmm.ml[272,7854+26]..[272,7854+30])
                          Ppat_var "body" (asmcomp/cmm.ml[272,7854+26]..[272,7854+30])
                      ]
                expression (asmcomp/cmm.ml[273,7889+6]..[273,7889+45])
                  Pexp_construct "Cphantom_let" (asmcomp/cmm.ml[273,7889+6]..[273,7889+18])
                  Some
                    expression (asmcomp/cmm.ml[273,7889+19]..[273,7889+45])
                      Pexp_tuple
                      [
                        expression (asmcomp/cmm.ml[273,7889+20]..[273,7889+22])
                          Pexp_ident "id" (asmcomp/cmm.ml[273,7889+20]..[273,7889+22])
                        expression (asmcomp/cmm.ml[273,7889+24]..[273,7889+27])
                          Pexp_ident "exp" (asmcomp/cmm.ml[273,7889+24]..[273,7889+27])
                        expression (asmcomp/cmm.ml[273,7889+29]..[273,7889+44])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[273,7889+29]..[273,7889+37])
                            Pexp_ident "map_tail" (asmcomp/cmm.ml[273,7889+29]..[273,7889+37])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[273,7889+38]..[273,7889+39])
                                Pexp_ident "f" (asmcomp/cmm.ml[273,7889+38]..[273,7889+39])
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[273,7889+40]..[273,7889+44])
                                Pexp_ident "body" (asmcomp/cmm.ml[273,7889+40]..[273,7889+44])
                          ]
                      ]
              <case>
                pattern (asmcomp/cmm.ml[274,7935+4]..[274,7935+60])
                  Ppat_construct "Cifthenelse" (asmcomp/cmm.ml[274,7935+4]..[274,7935+15])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[274,7935+15]..[274,7935+60])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[274,7935+16]..[274,7935+20])
                          Ppat_var "cond" (asmcomp/cmm.ml[274,7935+16]..[274,7935+20])
                        pattern (asmcomp/cmm.ml[274,7935+22]..[274,7935+30])
                          Ppat_var "ifso_dbg" (asmcomp/cmm.ml[274,7935+22]..[274,7935+30])
                        pattern (asmcomp/cmm.ml[274,7935+32]..[274,7935+36])
                          Ppat_var "ifso" (asmcomp/cmm.ml[274,7935+32]..[274,7935+36])
                        pattern (asmcomp/cmm.ml[274,7935+38]..[274,7935+47])
                          Ppat_var "ifnot_dbg" (asmcomp/cmm.ml[274,7935+38]..[274,7935+47])
                        pattern (asmcomp/cmm.ml[274,7935+49]..[274,7935+54])
                          Ppat_var "ifnot" (asmcomp/cmm.ml[274,7935+49]..[274,7935+54])
                        pattern (asmcomp/cmm.ml[274,7935+56]..[274,7935+59])
                          Ppat_var "dbg" (asmcomp/cmm.ml[274,7935+56]..[274,7935+59])
                      ]
                expression (asmcomp/cmm.ml[275,7999+6]..[281,8133+9])
                  Pexp_construct "Cifthenelse" (asmcomp/cmm.ml[275,7999+6]..[275,7999+17])
                  Some
                    expression (asmcomp/cmm.ml[276,8017+8]..[281,8133+9])
                      Pexp_tuple
                      [
                        expression (asmcomp/cmm.ml[277,8027+10]..[277,8027+14])
                          Pexp_ident "cond" (asmcomp/cmm.ml[277,8027+10]..[277,8027+14])
                        expression (asmcomp/cmm.ml[278,8043+10]..[278,8043+18])
                          Pexp_ident "ifso_dbg" (asmcomp/cmm.ml[278,8043+10]..[278,8043+18])
                        expression (asmcomp/cmm.ml[278,8043+20]..[278,8043+35])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[278,8043+20]..[278,8043+28])
                            Pexp_ident "map_tail" (asmcomp/cmm.ml[278,8043+20]..[278,8043+28])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[278,8043+29]..[278,8043+30])
                                Pexp_ident "f" (asmcomp/cmm.ml[278,8043+29]..[278,8043+30])
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[278,8043+31]..[278,8043+35])
                                Pexp_ident "ifso" (asmcomp/cmm.ml[278,8043+31]..[278,8043+35])
                          ]
                        expression (asmcomp/cmm.ml[279,8080+10]..[279,8080+19])
                          Pexp_ident "ifnot_dbg" (asmcomp/cmm.ml[279,8080+10]..[279,8080+19])
                        expression (asmcomp/cmm.ml[279,8080+21]..[279,8080+37])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[279,8080+21]..[279,8080+29])
                            Pexp_ident "map_tail" (asmcomp/cmm.ml[279,8080+21]..[279,8080+29])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[279,8080+30]..[279,8080+31])
                                Pexp_ident "f" (asmcomp/cmm.ml[279,8080+30]..[279,8080+31])
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[279,8080+32]..[279,8080+37])
                                Pexp_ident "ifnot" (asmcomp/cmm.ml[279,8080+32]..[279,8080+37])
                          ]
                        expression (asmcomp/cmm.ml[280,8119+10]..[280,8119+13])
                          Pexp_ident "dbg" (asmcomp/cmm.ml[280,8119+10]..[280,8119+13])
                      ]
              <case>
                pattern (asmcomp/cmm.ml[282,8143+4]..[282,8143+21])
                  Ppat_construct "Csequence" (asmcomp/cmm.ml[282,8143+4]..[282,8143+13])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[282,8143+13]..[282,8143+21])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[282,8143+14]..[282,8143+16])
                          Ppat_var "e1" (asmcomp/cmm.ml[282,8143+14]..[282,8143+16])
                        pattern (asmcomp/cmm.ml[282,8143+18]..[282,8143+20])
                          Ppat_var "e2" (asmcomp/cmm.ml[282,8143+18]..[282,8143+20])
                      ]
                expression (asmcomp/cmm.ml[283,8168+6]..[283,8168+34])
                  Pexp_construct "Csequence" (asmcomp/cmm.ml[283,8168+6]..[283,8168+15])
                  Some
                    expression (asmcomp/cmm.ml[283,8168+15]..[283,8168+34])
                      Pexp_tuple
                      [
                        expression (asmcomp/cmm.ml[283,8168+16]..[283,8168+18])
                          Pexp_ident "e1" (asmcomp/cmm.ml[283,8168+16]..[283,8168+18])
                        expression (asmcomp/cmm.ml[283,8168+20]..[283,8168+33])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[283,8168+20]..[283,8168+28])
                            Pexp_ident "map_tail" (asmcomp/cmm.ml[283,8168+20]..[283,8168+28])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[283,8168+29]..[283,8168+30])
                                Pexp_ident "f" (asmcomp/cmm.ml[283,8168+29]..[283,8168+30])
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[283,8168+31]..[283,8168+33])
                                Pexp_ident "e2" (asmcomp/cmm.ml[283,8168+31]..[283,8168+33])
                          ]
                      ]
              <case>
                pattern (asmcomp/cmm.ml[284,8203+4]..[284,8203+29])
                  Ppat_construct "Cswitch" (asmcomp/cmm.ml[284,8203+4]..[284,8203+11])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[284,8203+11]..[284,8203+29])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[284,8203+12]..[284,8203+13])
                          Ppat_var "e" (asmcomp/cmm.ml[284,8203+12]..[284,8203+13])
                        pattern (asmcomp/cmm.ml[284,8203+15]..[284,8203+18])
                          Ppat_var "tbl" (asmcomp/cmm.ml[284,8203+15]..[284,8203+18])
                        pattern (asmcomp/cmm.ml[284,8203+20]..[284,8203+22])
                          Ppat_var "el" (asmcomp/cmm.ml[284,8203+20]..[284,8203+22])
                        pattern (asmcomp/cmm.ml[284,8203+24]..[284,8203+28])
                          Ppat_var "dbg'" (asmcomp/cmm.ml[284,8203+24]..[284,8203+28])
                      ]
                expression (asmcomp/cmm.ml[285,8236+6]..[285,8236+77])
                  Pexp_construct "Cswitch" (asmcomp/cmm.ml[285,8236+6]..[285,8236+13])
                  Some
                    expression (asmcomp/cmm.ml[285,8236+13]..[285,8236+77])
                      Pexp_tuple
                      [
                        expression (asmcomp/cmm.ml[285,8236+14]..[285,8236+15])
                          Pexp_ident "e" (asmcomp/cmm.ml[285,8236+14]..[285,8236+15])
                        expression (asmcomp/cmm.ml[285,8236+17]..[285,8236+20])
                          Pexp_ident "tbl" (asmcomp/cmm.ml[285,8236+17]..[285,8236+20])
                        expression (asmcomp/cmm.ml[285,8236+22]..[285,8236+70])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[285,8236+22]..[285,8236+31])
                            Pexp_ident "Array.map" (asmcomp/cmm.ml[285,8236+22]..[285,8236+31])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[285,8236+32]..[285,8236+67])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (asmcomp/cmm.ml[285,8236+37]..[285,8236+45])
                                  Ppat_tuple
                                  [
                                    pattern (asmcomp/cmm.ml[285,8236+38]..[285,8236+39])
                                      Ppat_var "e" (asmcomp/cmm.ml[285,8236+38]..[285,8236+39])
                                    pattern (asmcomp/cmm.ml[285,8236+41]..[285,8236+44])
                                      Ppat_var "dbg" (asmcomp/cmm.ml[285,8236+41]..[285,8236+44])
                                  ]
                                expression (asmcomp/cmm.ml[285,8236+49]..[285,8236+66])
                                  Pexp_tuple
                                  [
                                    expression (asmcomp/cmm.ml[285,8236+49]..[285,8236+61])
                                      Pexp_apply
                                      expression (asmcomp/cmm.ml[285,8236+49]..[285,8236+57])
                                        Pexp_ident "map_tail" (asmcomp/cmm.ml[285,8236+49]..[285,8236+57])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/cmm.ml[285,8236+58]..[285,8236+59])
                                            Pexp_ident "f" (asmcomp/cmm.ml[285,8236+58]..[285,8236+59])
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/cmm.ml[285,8236+60]..[285,8236+61])
                                            Pexp_ident "e" (asmcomp/cmm.ml[285,8236+60]..[285,8236+61])
                                      ]
                                    expression (asmcomp/cmm.ml[285,8236+63]..[285,8236+66])
                                      Pexp_ident "dbg" (asmcomp/cmm.ml[285,8236+63]..[285,8236+66])
                                  ]
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[285,8236+68]..[285,8236+70])
                                Pexp_ident "el" (asmcomp/cmm.ml[285,8236+68]..[285,8236+70])
                          ]
                        expression (asmcomp/cmm.ml[285,8236+72]..[285,8236+76])
                          Pexp_ident "dbg'" (asmcomp/cmm.ml[285,8236+72]..[285,8236+76])
                      ]
              <case>
                pattern (asmcomp/cmm.ml[286,8314+4]..[286,8314+36])
                  Ppat_construct "Ccatch" (asmcomp/cmm.ml[286,8314+4]..[286,8314+10])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[286,8314+10]..[286,8314+36])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[286,8314+11]..[286,8314+19])
                          Ppat_var "rec_flag" (asmcomp/cmm.ml[286,8314+11]..[286,8314+19])
                        pattern (asmcomp/cmm.ml[286,8314+21]..[286,8314+29])
                          Ppat_var "handlers" (asmcomp/cmm.ml[286,8314+21]..[286,8314+29])
                        pattern (asmcomp/cmm.ml[286,8314+31]..[286,8314+35])
                          Ppat_var "body" (asmcomp/cmm.ml[286,8314+31]..[286,8314+35])
                      ]
                expression (asmcomp/cmm.ml[287,8354+6]..[288,8432+64])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (asmcomp/cmm.ml[287,8354+10]..[287,8354+15])
                        Ppat_var "map_h" (asmcomp/cmm.ml[287,8354+10]..[287,8354+15])
                      expression (asmcomp/cmm.ml[287,8354+16]..[287,8354+74]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (asmcomp/cmm.ml[287,8354+16]..[287,8354+38])
                          Ppat_tuple
                          [
                            pattern (asmcomp/cmm.ml[287,8354+17]..[287,8354+18])
                              Ppat_var "n" (asmcomp/cmm.ml[287,8354+17]..[287,8354+18])
                            pattern (asmcomp/cmm.ml[287,8354+20]..[287,8354+23])
                              Ppat_var "ids" (asmcomp/cmm.ml[287,8354+20]..[287,8354+23])
                            pattern (asmcomp/cmm.ml[287,8354+25]..[287,8354+32])
                              Ppat_var "handler" (asmcomp/cmm.ml[287,8354+25]..[287,8354+32])
                            pattern (asmcomp/cmm.ml[287,8354+34]..[287,8354+37])
                              Ppat_var "dbg" (asmcomp/cmm.ml[287,8354+34]..[287,8354+37])
                          ]
                        expression (asmcomp/cmm.ml[287,8354+41]..[287,8354+74])
                          Pexp_tuple
                          [
                            expression (asmcomp/cmm.ml[287,8354+42]..[287,8354+43])
                              Pexp_ident "n" (asmcomp/cmm.ml[287,8354+42]..[287,8354+43])
                            expression (asmcomp/cmm.ml[287,8354+45]..[287,8354+48])
                              Pexp_ident "ids" (asmcomp/cmm.ml[287,8354+45]..[287,8354+48])
                            expression (asmcomp/cmm.ml[287,8354+50]..[287,8354+68])
                              Pexp_apply
                              expression (asmcomp/cmm.ml[287,8354+50]..[287,8354+58])
                                Pexp_ident "map_tail" (asmcomp/cmm.ml[287,8354+50]..[287,8354+58])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/cmm.ml[287,8354+59]..[287,8354+60])
                                    Pexp_ident "f" (asmcomp/cmm.ml[287,8354+59]..[287,8354+60])
                                <arg>
                                Nolabel
                                  expression (asmcomp/cmm.ml[287,8354+61]..[287,8354+68])
                                    Pexp_ident "handler" (asmcomp/cmm.ml[287,8354+61]..[287,8354+68])
                              ]
                            expression (asmcomp/cmm.ml[287,8354+70]..[287,8354+73])
                              Pexp_ident "dbg" (asmcomp/cmm.ml[287,8354+70]..[287,8354+73])
                          ]
                  ]
                  expression (asmcomp/cmm.ml[288,8432+6]..[288,8432+64])
                    Pexp_construct "Ccatch" (asmcomp/cmm.ml[288,8432+6]..[288,8432+12])
                    Some
                      expression (asmcomp/cmm.ml[288,8432+12]..[288,8432+64])
                        Pexp_tuple
                        [
                          expression (asmcomp/cmm.ml[288,8432+13]..[288,8432+21])
                            Pexp_ident "rec_flag" (asmcomp/cmm.ml[288,8432+13]..[288,8432+21])
                          expression (asmcomp/cmm.ml[288,8432+23]..[288,8432+46])
                            Pexp_apply
                            expression (asmcomp/cmm.ml[288,8432+23]..[288,8432+31])
                              Pexp_ident "List.map" (asmcomp/cmm.ml[288,8432+23]..[288,8432+31])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/cmm.ml[288,8432+32]..[288,8432+37])
                                  Pexp_ident "map_h" (asmcomp/cmm.ml[288,8432+32]..[288,8432+37])
                              <arg>
                              Nolabel
                                expression (asmcomp/cmm.ml[288,8432+38]..[288,8432+46])
                                  Pexp_ident "handlers" (asmcomp/cmm.ml[288,8432+38]..[288,8432+46])
                            ]
                          expression (asmcomp/cmm.ml[288,8432+48]..[288,8432+63])
                            Pexp_apply
                            expression (asmcomp/cmm.ml[288,8432+48]..[288,8432+56])
                              Pexp_ident "map_tail" (asmcomp/cmm.ml[288,8432+48]..[288,8432+56])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/cmm.ml[288,8432+57]..[288,8432+58])
                                  Pexp_ident "f" (asmcomp/cmm.ml[288,8432+57]..[288,8432+58])
                              <arg>
                              Nolabel
                                expression (asmcomp/cmm.ml[288,8432+59]..[288,8432+63])
                                  Pexp_ident "body" (asmcomp/cmm.ml[288,8432+59]..[288,8432+63])
                            ]
                        ]
              <case>
                pattern (asmcomp/cmm.ml[289,8497+4]..[289,8497+29])
                  Ppat_construct "Ctrywith" (asmcomp/cmm.ml[289,8497+4]..[289,8497+12])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[289,8497+12]..[289,8497+29])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[289,8497+13]..[289,8497+15])
                          Ppat_var "e1" (asmcomp/cmm.ml[289,8497+13]..[289,8497+15])
                        pattern (asmcomp/cmm.ml[289,8497+17]..[289,8497+19])
                          Ppat_var "id" (asmcomp/cmm.ml[289,8497+17]..[289,8497+19])
                        pattern (asmcomp/cmm.ml[289,8497+21]..[289,8497+23])
                          Ppat_var "e2" (asmcomp/cmm.ml[289,8497+21]..[289,8497+23])
                        pattern (asmcomp/cmm.ml[289,8497+25]..[289,8497+28])
                          Ppat_var "dbg" (asmcomp/cmm.ml[289,8497+25]..[289,8497+28])
                      ]
                expression (asmcomp/cmm.ml[290,8530+6]..[290,8530+53])
                  Pexp_construct "Ctrywith" (asmcomp/cmm.ml[290,8530+6]..[290,8530+14])
                  Some
                    expression (asmcomp/cmm.ml[290,8530+14]..[290,8530+53])
                      Pexp_tuple
                      [
                        expression (asmcomp/cmm.ml[290,8530+15]..[290,8530+28])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[290,8530+15]..[290,8530+23])
                            Pexp_ident "map_tail" (asmcomp/cmm.ml[290,8530+15]..[290,8530+23])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[290,8530+24]..[290,8530+25])
                                Pexp_ident "f" (asmcomp/cmm.ml[290,8530+24]..[290,8530+25])
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[290,8530+26]..[290,8530+28])
                                Pexp_ident "e1" (asmcomp/cmm.ml[290,8530+26]..[290,8530+28])
                          ]
                        expression (asmcomp/cmm.ml[290,8530+30]..[290,8530+32])
                          Pexp_ident "id" (asmcomp/cmm.ml[290,8530+30]..[290,8530+32])
                        expression (asmcomp/cmm.ml[290,8530+34]..[290,8530+47])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[290,8530+34]..[290,8530+42])
                            Pexp_ident "map_tail" (asmcomp/cmm.ml[290,8530+34]..[290,8530+42])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[290,8530+43]..[290,8530+44])
                                Pexp_ident "f" (asmcomp/cmm.ml[290,8530+43]..[290,8530+44])
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[290,8530+45]..[290,8530+47])
                                Pexp_ident "e2" (asmcomp/cmm.ml[290,8530+45]..[290,8530+47])
                          ]
                        expression (asmcomp/cmm.ml[290,8530+49]..[290,8530+52])
                          Pexp_ident "dbg" (asmcomp/cmm.ml[290,8530+49]..[290,8530+52])
                      ]
              <case>
                pattern (asmcomp/cmm.ml[291,8584+4]..[291,8584+41])
                  Ppat_alias "cmm" (asmcomp/cmm.ml[291,8584+38]..[291,8584+41])
                  pattern (asmcomp/cmm.ml[291,8584+4]..[291,8584+34])
                    Ppat_or
                    pattern (asmcomp/cmm.ml[291,8584+4]..[291,8584+11])
                      Ppat_construct "Cexit" (asmcomp/cmm.ml[291,8584+4]..[291,8584+9])
                      Some
                        []
                        pattern (asmcomp/cmm.ml[291,8584+10]..[291,8584+11])
                          Ppat_any
                    pattern (asmcomp/cmm.ml[291,8584+14]..[291,8584+34])
                      Ppat_construct "Cop" (asmcomp/cmm.ml[291,8584+14]..[291,8584+17])
                      Some
                        []
                        pattern (asmcomp/cmm.ml[291,8584+18]..[291,8584+34])
                          Ppat_tuple
                          [
                            pattern (asmcomp/cmm.ml[291,8584+19]..[291,8584+27])
                              Ppat_construct "Craise" (asmcomp/cmm.ml[291,8584+19]..[291,8584+25])
                              Some
                                []
                                pattern (asmcomp/cmm.ml[291,8584+26]..[291,8584+27])
                                  Ppat_any
                            pattern (asmcomp/cmm.ml[291,8584+29]..[291,8584+30])
                              Ppat_any
                            pattern (asmcomp/cmm.ml[291,8584+32]..[291,8584+33])
                              Ppat_any
                          ]
                expression (asmcomp/cmm.ml[292,8629+6]..[292,8629+9])
                  Pexp_ident "cmm" (asmcomp/cmm.ml[292,8629+6]..[292,8629+9])
              <case>
                pattern (asmcomp/cmm.ml[293,8639+4]..[300,8753+14])
                  Ppat_alias "c" (asmcomp/cmm.ml[300,8753+13]..[300,8753+14])
                  pattern (asmcomp/cmm.ml[293,8639+4]..[300,8753+9])
                    Ppat_or
                    pattern (asmcomp/cmm.ml[293,8639+4]..[299,8740+12])
                      Ppat_or
                      pattern (asmcomp/cmm.ml[293,8639+4]..[298,8726+13])
                        Ppat_or
                        pattern (asmcomp/cmm.ml[293,8639+4]..[297,8715+10])
                          Ppat_or
                          pattern (asmcomp/cmm.ml[293,8639+4]..[296,8695+19])
                            Ppat_or
                            pattern (asmcomp/cmm.ml[293,8639+4]..[295,8676+18])
                              Ppat_or
                              pattern (asmcomp/cmm.ml[293,8639+4]..[294,8656+19])
                                Ppat_or
                                pattern (asmcomp/cmm.ml[293,8639+4]..[293,8639+16])
                                  Ppat_construct "Cconst_int" (asmcomp/cmm.ml[293,8639+4]..[293,8639+14])
                                  Some
                                    []
                                    pattern (asmcomp/cmm.ml[293,8639+15]..[293,8639+16])
                                      Ppat_any
                                pattern (asmcomp/cmm.ml[294,8656+4]..[294,8656+19])
                                  Ppat_construct "Cconst_natint" (asmcomp/cmm.ml[294,8656+4]..[294,8656+17])
                                  Some
                                    []
                                    pattern (asmcomp/cmm.ml[294,8656+18]..[294,8656+19])
                                      Ppat_any
                              pattern (asmcomp/cmm.ml[295,8676+4]..[295,8676+18])
                                Ppat_construct "Cconst_float" (asmcomp/cmm.ml[295,8676+4]..[295,8676+16])
                                Some
                                  []
                                  pattern (asmcomp/cmm.ml[295,8676+17]..[295,8676+18])
                                    Ppat_any
                            pattern (asmcomp/cmm.ml[296,8695+4]..[296,8695+19])
                              Ppat_construct "Cconst_symbol" (asmcomp/cmm.ml[296,8695+4]..[296,8695+17])
                              Some
                                []
                                pattern (asmcomp/cmm.ml[296,8695+18]..[296,8695+19])
                                  Ppat_any
                          pattern (asmcomp/cmm.ml[297,8715+4]..[297,8715+10])
                            Ppat_construct "Cvar" (asmcomp/cmm.ml[297,8715+4]..[297,8715+8])
                            Some
                              []
                              pattern (asmcomp/cmm.ml[297,8715+9]..[297,8715+10])
                                Ppat_any
                        pattern (asmcomp/cmm.ml[298,8726+4]..[298,8726+13])
                          Ppat_construct "Cassign" (asmcomp/cmm.ml[298,8726+4]..[298,8726+11])
                          Some
                            []
                            pattern (asmcomp/cmm.ml[298,8726+12]..[298,8726+13])
                              Ppat_any
                      pattern (asmcomp/cmm.ml[299,8740+4]..[299,8740+12])
                        Ppat_construct "Ctuple" (asmcomp/cmm.ml[299,8740+4]..[299,8740+10])
                        Some
                          []
                          pattern (asmcomp/cmm.ml[299,8740+11]..[299,8740+12])
                            Ppat_any
                    pattern (asmcomp/cmm.ml[300,8753+4]..[300,8753+9])
                      Ppat_construct "Cop" (asmcomp/cmm.ml[300,8753+4]..[300,8753+7])
                      Some
                        []
                        pattern (asmcomp/cmm.ml[300,8753+8]..[300,8753+9])
                          Ppat_any
                expression (asmcomp/cmm.ml[301,8771+6]..[301,8771+9])
                  Pexp_apply
                  expression (asmcomp/cmm.ml[301,8771+6]..[301,8771+7])
                    Pexp_ident "f" (asmcomp/cmm.ml[301,8771+6]..[301,8771+7])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/cmm.ml[301,8771+8]..[301,8771+9])
                        Pexp_ident "c" (asmcomp/cmm.ml[301,8771+8]..[301,8771+9])
                  ]
            ]
    ]
  structure_item (asmcomp/cmm.ml[303,8782+0]..[335,9808+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/cmm.ml[303,8782+4]..[303,8782+15])
          Ppat_var "map_shallow" (asmcomp/cmm.ml[303,8782+4]..[303,8782+15])
        expression (asmcomp/cmm.ml[303,8782+16]..[335,9808+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/cmm.ml[303,8782+16]..[303,8782+17])
            Ppat_var "f" (asmcomp/cmm.ml[303,8782+16]..[303,8782+17])
          expression (asmcomp/cmm.ml[303,8782+20]..[335,9808+7])
            Pexp_function
            [
              <case>
                pattern (asmcomp/cmm.ml[304,8811+4]..[304,8811+21])
                  Ppat_construct "Clet" (asmcomp/cmm.ml[304,8811+4]..[304,8811+8])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[304,8811+9]..[304,8811+21])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[304,8811+10]..[304,8811+12])
                          Ppat_var "id" (asmcomp/cmm.ml[304,8811+10]..[304,8811+12])
                        pattern (asmcomp/cmm.ml[304,8811+14]..[304,8811+16])
                          Ppat_var "e1" (asmcomp/cmm.ml[304,8811+14]..[304,8811+16])
                        pattern (asmcomp/cmm.ml[304,8811+18]..[304,8811+20])
                          Ppat_var "e2" (asmcomp/cmm.ml[304,8811+18]..[304,8811+20])
                      ]
                expression (asmcomp/cmm.ml[305,8836+6]..[305,8836+27])
                  Pexp_construct "Clet" (asmcomp/cmm.ml[305,8836+6]..[305,8836+10])
                  Some
                    expression (asmcomp/cmm.ml[305,8836+11]..[305,8836+27])
                      Pexp_tuple
                      [
                        expression (asmcomp/cmm.ml[305,8836+12]..[305,8836+14])
                          Pexp_ident "id" (asmcomp/cmm.ml[305,8836+12]..[305,8836+14])
                        expression (asmcomp/cmm.ml[305,8836+16]..[305,8836+20])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[305,8836+16]..[305,8836+17])
                            Pexp_ident "f" (asmcomp/cmm.ml[305,8836+16]..[305,8836+17])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[305,8836+18]..[305,8836+20])
                                Pexp_ident "e1" (asmcomp/cmm.ml[305,8836+18]..[305,8836+20])
                          ]
                        expression (asmcomp/cmm.ml[305,8836+22]..[305,8836+26])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[305,8836+22]..[305,8836+23])
                            Pexp_ident "f" (asmcomp/cmm.ml[305,8836+22]..[305,8836+23])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[305,8836+24]..[305,8836+26])
                                Pexp_ident "e2" (asmcomp/cmm.ml[305,8836+24]..[305,8836+26])
                          ]
                      ]
              <case>
                pattern (asmcomp/cmm.ml[306,8864+4]..[306,8864+31])
                  Ppat_construct "Clet_mut" (asmcomp/cmm.ml[306,8864+4]..[306,8864+12])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[306,8864+13]..[306,8864+31])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[306,8864+14]..[306,8864+16])
                          Ppat_var "id" (asmcomp/cmm.ml[306,8864+14]..[306,8864+16])
                        pattern (asmcomp/cmm.ml[306,8864+18]..[306,8864+22])
                          Ppat_var "kind" (asmcomp/cmm.ml[306,8864+18]..[306,8864+22])
                        pattern (asmcomp/cmm.ml[306,8864+24]..[306,8864+26])
                          Ppat_var "e1" (asmcomp/cmm.ml[306,8864+24]..[306,8864+26])
                        pattern (asmcomp/cmm.ml[306,8864+28]..[306,8864+30])
                          Ppat_var "e2" (asmcomp/cmm.ml[306,8864+28]..[306,8864+30])
                      ]
                expression (asmcomp/cmm.ml[307,8899+6]..[307,8899+37])
                  Pexp_construct "Clet_mut" (asmcomp/cmm.ml[307,8899+6]..[307,8899+14])
                  Some
                    expression (asmcomp/cmm.ml[307,8899+15]..[307,8899+37])
                      Pexp_tuple
                      [
                        expression (asmcomp/cmm.ml[307,8899+16]..[307,8899+18])
                          Pexp_ident "id" (asmcomp/cmm.ml[307,8899+16]..[307,8899+18])
                        expression (asmcomp/cmm.ml[307,8899+20]..[307,8899+24])
                          Pexp_ident "kind" (asmcomp/cmm.ml[307,8899+20]..[307,8899+24])
                        expression (asmcomp/cmm.ml[307,8899+26]..[307,8899+30])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[307,8899+26]..[307,8899+27])
                            Pexp_ident "f" (asmcomp/cmm.ml[307,8899+26]..[307,8899+27])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[307,8899+28]..[307,8899+30])
                                Pexp_ident "e1" (asmcomp/cmm.ml[307,8899+28]..[307,8899+30])
                          ]
                        expression (asmcomp/cmm.ml[307,8899+32]..[307,8899+36])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[307,8899+32]..[307,8899+33])
                            Pexp_ident "f" (asmcomp/cmm.ml[307,8899+32]..[307,8899+33])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[307,8899+34]..[307,8899+36])
                                Pexp_ident "e2" (asmcomp/cmm.ml[307,8899+34]..[307,8899+36])
                          ]
                      ]
              <case>
                pattern (asmcomp/cmm.ml[308,8937+4]..[308,8937+28])
                  Ppat_construct "Cphantom_let" (asmcomp/cmm.ml[308,8937+4]..[308,8937+16])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[308,8937+17]..[308,8937+28])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[308,8937+18]..[308,8937+20])
                          Ppat_var "id" (asmcomp/cmm.ml[308,8937+18]..[308,8937+20])
                        pattern (asmcomp/cmm.ml[308,8937+22]..[308,8937+24])
                          Ppat_var "de" (asmcomp/cmm.ml[308,8937+22]..[308,8937+24])
                        pattern (asmcomp/cmm.ml[308,8937+26]..[308,8937+27])
                          Ppat_var "e" (asmcomp/cmm.ml[308,8937+26]..[308,8937+27])
                      ]
                expression (asmcomp/cmm.ml[309,8969+6]..[309,8969+32])
                  Pexp_construct "Cphantom_let" (asmcomp/cmm.ml[309,8969+6]..[309,8969+18])
                  Some
                    expression (asmcomp/cmm.ml[309,8969+19]..[309,8969+32])
                      Pexp_tuple
                      [
                        expression (asmcomp/cmm.ml[309,8969+20]..[309,8969+22])
                          Pexp_ident "id" (asmcomp/cmm.ml[309,8969+20]..[309,8969+22])
                        expression (asmcomp/cmm.ml[309,8969+24]..[309,8969+26])
                          Pexp_ident "de" (asmcomp/cmm.ml[309,8969+24]..[309,8969+26])
                        expression (asmcomp/cmm.ml[309,8969+28]..[309,8969+31])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[309,8969+28]..[309,8969+29])
                            Pexp_ident "f" (asmcomp/cmm.ml[309,8969+28]..[309,8969+29])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[309,8969+30]..[309,8969+31])
                                Pexp_ident "e" (asmcomp/cmm.ml[309,8969+30]..[309,8969+31])
                          ]
                      ]
              <case>
                pattern (asmcomp/cmm.ml[310,9002+4]..[310,9002+19])
                  Ppat_construct "Cassign" (asmcomp/cmm.ml[310,9002+4]..[310,9002+11])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[310,9002+12]..[310,9002+19])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[310,9002+13]..[310,9002+15])
                          Ppat_var "id" (asmcomp/cmm.ml[310,9002+13]..[310,9002+15])
                        pattern (asmcomp/cmm.ml[310,9002+17]..[310,9002+18])
                          Ppat_var "e" (asmcomp/cmm.ml[310,9002+17]..[310,9002+18])
                      ]
                expression (asmcomp/cmm.ml[311,9025+6]..[311,9025+23])
                  Pexp_construct "Cassign" (asmcomp/cmm.ml[311,9025+6]..[311,9025+13])
                  Some
                    expression (asmcomp/cmm.ml[311,9025+14]..[311,9025+23])
                      Pexp_tuple
                      [
                        expression (asmcomp/cmm.ml[311,9025+15]..[311,9025+17])
                          Pexp_ident "id" (asmcomp/cmm.ml[311,9025+15]..[311,9025+17])
                        expression (asmcomp/cmm.ml[311,9025+19]..[311,9025+22])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[311,9025+19]..[311,9025+20])
                            Pexp_ident "f" (asmcomp/cmm.ml[311,9025+19]..[311,9025+20])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[311,9025+21]..[311,9025+22])
                                Pexp_ident "e" (asmcomp/cmm.ml[311,9025+21]..[311,9025+22])
                          ]
                      ]
              <case>
                pattern (asmcomp/cmm.ml[312,9049+4]..[312,9049+13])
                  Ppat_construct "Ctuple" (asmcomp/cmm.ml[312,9049+4]..[312,9049+10])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[312,9049+11]..[312,9049+13])
                      Ppat_var "el" (asmcomp/cmm.ml[312,9049+11]..[312,9049+13])
                expression (asmcomp/cmm.ml[313,9066+6]..[313,9066+28])
                  Pexp_construct "Ctuple" (asmcomp/cmm.ml[313,9066+6]..[313,9066+12])
                  Some
                    expression (asmcomp/cmm.ml[313,9066+13]..[313,9066+28])
                      Pexp_apply
                      expression (asmcomp/cmm.ml[313,9066+14]..[313,9066+22])
                        Pexp_ident "List.map" (asmcomp/cmm.ml[313,9066+14]..[313,9066+22])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/cmm.ml[313,9066+23]..[313,9066+24])
                            Pexp_ident "f" (asmcomp/cmm.ml[313,9066+23]..[313,9066+24])
                        <arg>
                        Nolabel
                          expression (asmcomp/cmm.ml[313,9066+25]..[313,9066+27])
                            Pexp_ident "el" (asmcomp/cmm.ml[313,9066+25]..[313,9066+27])
                      ]
              <case>
                pattern (asmcomp/cmm.ml[314,9095+4]..[314,9095+21])
                  Ppat_construct "Cop" (asmcomp/cmm.ml[314,9095+4]..[314,9095+7])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[314,9095+8]..[314,9095+21])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[314,9095+9]..[314,9095+11])
                          Ppat_var "op" (asmcomp/cmm.ml[314,9095+9]..[314,9095+11])
                        pattern (asmcomp/cmm.ml[314,9095+13]..[314,9095+15])
                          Ppat_var "el" (asmcomp/cmm.ml[314,9095+13]..[314,9095+15])
                        pattern (asmcomp/cmm.ml[314,9095+17]..[314,9095+20])
                          Ppat_var "dbg" (asmcomp/cmm.ml[314,9095+17]..[314,9095+20])
                      ]
                expression (asmcomp/cmm.ml[315,9120+6]..[315,9120+34])
                  Pexp_construct "Cop" (asmcomp/cmm.ml[315,9120+6]..[315,9120+9])
                  Some
                    expression (asmcomp/cmm.ml[315,9120+10]..[315,9120+34])
                      Pexp_tuple
                      [
                        expression (asmcomp/cmm.ml[315,9120+11]..[315,9120+13])
                          Pexp_ident "op" (asmcomp/cmm.ml[315,9120+11]..[315,9120+13])
                        expression (asmcomp/cmm.ml[315,9120+15]..[315,9120+28])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[315,9120+15]..[315,9120+23])
                            Pexp_ident "List.map" (asmcomp/cmm.ml[315,9120+15]..[315,9120+23])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[315,9120+24]..[315,9120+25])
                                Pexp_ident "f" (asmcomp/cmm.ml[315,9120+24]..[315,9120+25])
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[315,9120+26]..[315,9120+28])
                                Pexp_ident "el" (asmcomp/cmm.ml[315,9120+26]..[315,9120+28])
                          ]
                        expression (asmcomp/cmm.ml[315,9120+30]..[315,9120+33])
                          Pexp_ident "dbg" (asmcomp/cmm.ml[315,9120+30]..[315,9120+33])
                      ]
              <case>
                pattern (asmcomp/cmm.ml[316,9155+4]..[316,9155+22])
                  Ppat_construct "Csequence" (asmcomp/cmm.ml[316,9155+4]..[316,9155+13])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[316,9155+14]..[316,9155+22])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[316,9155+15]..[316,9155+17])
                          Ppat_var "e1" (asmcomp/cmm.ml[316,9155+15]..[316,9155+17])
                        pattern (asmcomp/cmm.ml[316,9155+19]..[316,9155+21])
                          Ppat_var "e2" (asmcomp/cmm.ml[316,9155+19]..[316,9155+21])
                      ]
                expression (asmcomp/cmm.ml[317,9181+6]..[317,9181+28])
                  Pexp_construct "Csequence" (asmcomp/cmm.ml[317,9181+6]..[317,9181+15])
                  Some
                    expression (asmcomp/cmm.ml[317,9181+16]..[317,9181+28])
                      Pexp_tuple
                      [
                        expression (asmcomp/cmm.ml[317,9181+17]..[317,9181+21])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[317,9181+17]..[317,9181+18])
                            Pexp_ident "f" (asmcomp/cmm.ml[317,9181+17]..[317,9181+18])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[317,9181+19]..[317,9181+21])
                                Pexp_ident "e1" (asmcomp/cmm.ml[317,9181+19]..[317,9181+21])
                          ]
                        expression (asmcomp/cmm.ml[317,9181+23]..[317,9181+27])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[317,9181+23]..[317,9181+24])
                            Pexp_ident "f" (asmcomp/cmm.ml[317,9181+23]..[317,9181+24])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[317,9181+25]..[317,9181+27])
                                Pexp_ident "e2" (asmcomp/cmm.ml[317,9181+25]..[317,9181+27])
                          ]
                      ]
              <case>
                pattern (asmcomp/cmm.ml[318,9210+4]..[318,9210+60])
                  Ppat_construct "Cifthenelse" (asmcomp/cmm.ml[318,9210+4]..[318,9210+15])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[318,9210+15]..[318,9210+60])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[318,9210+16]..[318,9210+20])
                          Ppat_var "cond" (asmcomp/cmm.ml[318,9210+16]..[318,9210+20])
                        pattern (asmcomp/cmm.ml[318,9210+22]..[318,9210+30])
                          Ppat_var "ifso_dbg" (asmcomp/cmm.ml[318,9210+22]..[318,9210+30])
                        pattern (asmcomp/cmm.ml[318,9210+32]..[318,9210+36])
                          Ppat_var "ifso" (asmcomp/cmm.ml[318,9210+32]..[318,9210+36])
                        pattern (asmcomp/cmm.ml[318,9210+38]..[318,9210+47])
                          Ppat_var "ifnot_dbg" (asmcomp/cmm.ml[318,9210+38]..[318,9210+47])
                        pattern (asmcomp/cmm.ml[318,9210+49]..[318,9210+54])
                          Ppat_var "ifnot" (asmcomp/cmm.ml[318,9210+49]..[318,9210+54])
                        pattern (asmcomp/cmm.ml[318,9210+56]..[318,9210+59])
                          Ppat_var "dbg" (asmcomp/cmm.ml[318,9210+56]..[318,9210+59])
                      ]
                expression (asmcomp/cmm.ml[319,9274+6]..[319,9274+68])
                  Pexp_construct "Cifthenelse" (asmcomp/cmm.ml[319,9274+6]..[319,9274+17])
                  Some
                    expression (asmcomp/cmm.ml[319,9274+17]..[319,9274+68])
                      Pexp_tuple
                      [
                        expression (asmcomp/cmm.ml[319,9274+18]..[319,9274+24])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[319,9274+18]..[319,9274+19])
                            Pexp_ident "f" (asmcomp/cmm.ml[319,9274+18]..[319,9274+19])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[319,9274+20]..[319,9274+24])
                                Pexp_ident "cond" (asmcomp/cmm.ml[319,9274+20]..[319,9274+24])
                          ]
                        expression (asmcomp/cmm.ml[319,9274+26]..[319,9274+34])
                          Pexp_ident "ifso_dbg" (asmcomp/cmm.ml[319,9274+26]..[319,9274+34])
                        expression (asmcomp/cmm.ml[319,9274+36]..[319,9274+42])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[319,9274+36]..[319,9274+37])
                            Pexp_ident "f" (asmcomp/cmm.ml[319,9274+36]..[319,9274+37])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[319,9274+38]..[319,9274+42])
                                Pexp_ident "ifso" (asmcomp/cmm.ml[319,9274+38]..[319,9274+42])
                          ]
                        expression (asmcomp/cmm.ml[319,9274+44]..[319,9274+53])
                          Pexp_ident "ifnot_dbg" (asmcomp/cmm.ml[319,9274+44]..[319,9274+53])
                        expression (asmcomp/cmm.ml[319,9274+55]..[319,9274+62])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[319,9274+55]..[319,9274+56])
                            Pexp_ident "f" (asmcomp/cmm.ml[319,9274+55]..[319,9274+56])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[319,9274+57]..[319,9274+62])
                                Pexp_ident "ifnot" (asmcomp/cmm.ml[319,9274+57]..[319,9274+62])
                          ]
                        expression (asmcomp/cmm.ml[319,9274+64]..[319,9274+67])
                          Pexp_ident "dbg" (asmcomp/cmm.ml[319,9274+64]..[319,9274+67])
                      ]
              <case>
                pattern (asmcomp/cmm.ml[320,9343+4]..[320,9343+28])
                  Ppat_construct "Cswitch" (asmcomp/cmm.ml[320,9343+4]..[320,9343+11])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[320,9343+12]..[320,9343+28])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[320,9343+13]..[320,9343+14])
                          Ppat_var "e" (asmcomp/cmm.ml[320,9343+13]..[320,9343+14])
                        pattern (asmcomp/cmm.ml[320,9343+16]..[320,9343+18])
                          Ppat_var "ia" (asmcomp/cmm.ml[320,9343+16]..[320,9343+18])
                        pattern (asmcomp/cmm.ml[320,9343+20]..[320,9343+22])
                          Ppat_var "ea" (asmcomp/cmm.ml[320,9343+20]..[320,9343+22])
                        pattern (asmcomp/cmm.ml[320,9343+24]..[320,9343+27])
                          Ppat_var "dbg" (asmcomp/cmm.ml[320,9343+24]..[320,9343+27])
                      ]
                expression (asmcomp/cmm.ml[321,9375+6]..[321,9375+67])
                  Pexp_construct "Cswitch" (asmcomp/cmm.ml[321,9375+6]..[321,9375+13])
                  Some
                    expression (asmcomp/cmm.ml[321,9375+14]..[321,9375+67])
                      Pexp_tuple
                      [
                        expression (asmcomp/cmm.ml[321,9375+15]..[321,9375+16])
                          Pexp_ident "e" (asmcomp/cmm.ml[321,9375+15]..[321,9375+16])
                        expression (asmcomp/cmm.ml[321,9375+18]..[321,9375+20])
                          Pexp_ident "ia" (asmcomp/cmm.ml[321,9375+18]..[321,9375+20])
                        expression (asmcomp/cmm.ml[321,9375+22]..[321,9375+61])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[321,9375+22]..[321,9375+31])
                            Pexp_ident "Array.map" (asmcomp/cmm.ml[321,9375+22]..[321,9375+31])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[321,9375+32]..[321,9375+58])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (asmcomp/cmm.ml[321,9375+37]..[321,9375+45])
                                  Ppat_tuple
                                  [
                                    pattern (asmcomp/cmm.ml[321,9375+38]..[321,9375+39])
                                      Ppat_var "e" (asmcomp/cmm.ml[321,9375+38]..[321,9375+39])
                                    pattern (asmcomp/cmm.ml[321,9375+41]..[321,9375+44])
                                      Ppat_var "dbg" (asmcomp/cmm.ml[321,9375+41]..[321,9375+44])
                                  ]
                                expression (asmcomp/cmm.ml[321,9375+49]..[321,9375+57])
                                  Pexp_tuple
                                  [
                                    expression (asmcomp/cmm.ml[321,9375+49]..[321,9375+52])
                                      Pexp_apply
                                      expression (asmcomp/cmm.ml[321,9375+49]..[321,9375+50])
                                        Pexp_ident "f" (asmcomp/cmm.ml[321,9375+49]..[321,9375+50])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/cmm.ml[321,9375+51]..[321,9375+52])
                                            Pexp_ident "e" (asmcomp/cmm.ml[321,9375+51]..[321,9375+52])
                                      ]
                                    expression (asmcomp/cmm.ml[321,9375+54]..[321,9375+57])
                                      Pexp_ident "dbg" (asmcomp/cmm.ml[321,9375+54]..[321,9375+57])
                                  ]
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[321,9375+59]..[321,9375+61])
                                Pexp_ident "ea" (asmcomp/cmm.ml[321,9375+59]..[321,9375+61])
                          ]
                        expression (asmcomp/cmm.ml[321,9375+63]..[321,9375+66])
                          Pexp_ident "dbg" (asmcomp/cmm.ml[321,9375+63]..[321,9375+66])
                      ]
              <case>
                pattern (asmcomp/cmm.ml[322,9443+4]..[322,9443+25])
                  Ppat_construct "Ccatch" (asmcomp/cmm.ml[322,9443+4]..[322,9443+10])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[322,9443+11]..[322,9443+25])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[322,9443+12]..[322,9443+14])
                          Ppat_var "rf" (asmcomp/cmm.ml[322,9443+12]..[322,9443+14])
                        pattern (asmcomp/cmm.ml[322,9443+16]..[322,9443+18])
                          Ppat_var "hl" (asmcomp/cmm.ml[322,9443+16]..[322,9443+18])
                        pattern (asmcomp/cmm.ml[322,9443+20]..[322,9443+24])
                          Ppat_var "body" (asmcomp/cmm.ml[322,9443+20]..[322,9443+24])
                      ]
                expression (asmcomp/cmm.ml[323,9472+6]..[324,9541+44])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (asmcomp/cmm.ml[323,9472+10]..[323,9472+15])
                        Ppat_var "map_h" (asmcomp/cmm.ml[323,9472+10]..[323,9472+15])
                      expression (asmcomp/cmm.ml[323,9472+16]..[323,9472+65]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (asmcomp/cmm.ml[323,9472+16]..[323,9472+38])
                          Ppat_tuple
                          [
                            pattern (asmcomp/cmm.ml[323,9472+17]..[323,9472+18])
                              Ppat_var "n" (asmcomp/cmm.ml[323,9472+17]..[323,9472+18])
                            pattern (asmcomp/cmm.ml[323,9472+20]..[323,9472+23])
                              Ppat_var "ids" (asmcomp/cmm.ml[323,9472+20]..[323,9472+23])
                            pattern (asmcomp/cmm.ml[323,9472+25]..[323,9472+32])
                              Ppat_var "handler" (asmcomp/cmm.ml[323,9472+25]..[323,9472+32])
                            pattern (asmcomp/cmm.ml[323,9472+34]..[323,9472+37])
                              Ppat_var "dbg" (asmcomp/cmm.ml[323,9472+34]..[323,9472+37])
                          ]
                        expression (asmcomp/cmm.ml[323,9472+41]..[323,9472+65])
                          Pexp_tuple
                          [
                            expression (asmcomp/cmm.ml[323,9472+42]..[323,9472+43])
                              Pexp_ident "n" (asmcomp/cmm.ml[323,9472+42]..[323,9472+43])
                            expression (asmcomp/cmm.ml[323,9472+45]..[323,9472+48])
                              Pexp_ident "ids" (asmcomp/cmm.ml[323,9472+45]..[323,9472+48])
                            expression (asmcomp/cmm.ml[323,9472+50]..[323,9472+59])
                              Pexp_apply
                              expression (asmcomp/cmm.ml[323,9472+50]..[323,9472+51])
                                Pexp_ident "f" (asmcomp/cmm.ml[323,9472+50]..[323,9472+51])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/cmm.ml[323,9472+52]..[323,9472+59])
                                    Pexp_ident "handler" (asmcomp/cmm.ml[323,9472+52]..[323,9472+59])
                              ]
                            expression (asmcomp/cmm.ml[323,9472+61]..[323,9472+64])
                              Pexp_ident "dbg" (asmcomp/cmm.ml[323,9472+61]..[323,9472+64])
                          ]
                  ]
                  expression (asmcomp/cmm.ml[324,9541+6]..[324,9541+44])
                    Pexp_construct "Ccatch" (asmcomp/cmm.ml[324,9541+6]..[324,9541+12])
                    Some
                      expression (asmcomp/cmm.ml[324,9541+13]..[324,9541+44])
                        Pexp_tuple
                        [
                          expression (asmcomp/cmm.ml[324,9541+14]..[324,9541+16])
                            Pexp_ident "rf" (asmcomp/cmm.ml[324,9541+14]..[324,9541+16])
                          expression (asmcomp/cmm.ml[324,9541+18]..[324,9541+35])
                            Pexp_apply
                            expression (asmcomp/cmm.ml[324,9541+18]..[324,9541+26])
                              Pexp_ident "List.map" (asmcomp/cmm.ml[324,9541+18]..[324,9541+26])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/cmm.ml[324,9541+27]..[324,9541+32])
                                  Pexp_ident "map_h" (asmcomp/cmm.ml[324,9541+27]..[324,9541+32])
                              <arg>
                              Nolabel
                                expression (asmcomp/cmm.ml[324,9541+33]..[324,9541+35])
                                  Pexp_ident "hl" (asmcomp/cmm.ml[324,9541+33]..[324,9541+35])
                            ]
                          expression (asmcomp/cmm.ml[324,9541+37]..[324,9541+43])
                            Pexp_apply
                            expression (asmcomp/cmm.ml[324,9541+37]..[324,9541+38])
                              Pexp_ident "f" (asmcomp/cmm.ml[324,9541+37]..[324,9541+38])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/cmm.ml[324,9541+39]..[324,9541+43])
                                  Pexp_ident "body" (asmcomp/cmm.ml[324,9541+39]..[324,9541+43])
                            ]
                        ]
              <case>
                pattern (asmcomp/cmm.ml[325,9586+4]..[325,9586+17])
                  Ppat_construct "Cexit" (asmcomp/cmm.ml[325,9586+4]..[325,9586+9])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[325,9586+10]..[325,9586+17])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[325,9586+11]..[325,9586+12])
                          Ppat_var "n" (asmcomp/cmm.ml[325,9586+11]..[325,9586+12])
                        pattern (asmcomp/cmm.ml[325,9586+14]..[325,9586+16])
                          Ppat_var "el" (asmcomp/cmm.ml[325,9586+14]..[325,9586+16])
                      ]
                expression (asmcomp/cmm.ml[326,9607+6]..[326,9607+30])
                  Pexp_construct "Cexit" (asmcomp/cmm.ml[326,9607+6]..[326,9607+11])
                  Some
                    expression (asmcomp/cmm.ml[326,9607+12]..[326,9607+30])
                      Pexp_tuple
                      [
                        expression (asmcomp/cmm.ml[326,9607+13]..[326,9607+14])
                          Pexp_ident "n" (asmcomp/cmm.ml[326,9607+13]..[326,9607+14])
                        expression (asmcomp/cmm.ml[326,9607+16]..[326,9607+29])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[326,9607+16]..[326,9607+24])
                            Pexp_ident "List.map" (asmcomp/cmm.ml[326,9607+16]..[326,9607+24])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[326,9607+25]..[326,9607+26])
                                Pexp_ident "f" (asmcomp/cmm.ml[326,9607+25]..[326,9607+26])
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[326,9607+27]..[326,9607+29])
                                Pexp_ident "el" (asmcomp/cmm.ml[326,9607+27]..[326,9607+29])
                          ]
                      ]
              <case>
                pattern (asmcomp/cmm.ml[327,9638+4]..[327,9638+30])
                  Ppat_construct "Ctrywith" (asmcomp/cmm.ml[327,9638+4]..[327,9638+12])
                  Some
                    []
                    pattern (asmcomp/cmm.ml[327,9638+13]..[327,9638+30])
                      Ppat_tuple
                      [
                        pattern (asmcomp/cmm.ml[327,9638+14]..[327,9638+16])
                          Ppat_var "e1" (asmcomp/cmm.ml[327,9638+14]..[327,9638+16])
                        pattern (asmcomp/cmm.ml[327,9638+18]..[327,9638+20])
                          Ppat_var "id" (asmcomp/cmm.ml[327,9638+18]..[327,9638+20])
                        pattern (asmcomp/cmm.ml[327,9638+22]..[327,9638+24])
                          Ppat_var "e2" (asmcomp/cmm.ml[327,9638+22]..[327,9638+24])
                        pattern (asmcomp/cmm.ml[327,9638+26]..[327,9638+29])
                          Ppat_var "dbg" (asmcomp/cmm.ml[327,9638+26]..[327,9638+29])
                      ]
                expression (asmcomp/cmm.ml[328,9672+6]..[328,9672+36])
                  Pexp_construct "Ctrywith" (asmcomp/cmm.ml[328,9672+6]..[328,9672+14])
                  Some
                    expression (asmcomp/cmm.ml[328,9672+15]..[328,9672+36])
                      Pexp_tuple
                      [
                        expression (asmcomp/cmm.ml[328,9672+16]..[328,9672+20])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[328,9672+16]..[328,9672+17])
                            Pexp_ident "f" (asmcomp/cmm.ml[328,9672+16]..[328,9672+17])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[328,9672+18]..[328,9672+20])
                                Pexp_ident "e1" (asmcomp/cmm.ml[328,9672+18]..[328,9672+20])
                          ]
                        expression (asmcomp/cmm.ml[328,9672+22]..[328,9672+24])
                          Pexp_ident "id" (asmcomp/cmm.ml[328,9672+22]..[328,9672+24])
                        expression (asmcomp/cmm.ml[328,9672+26]..[328,9672+30])
                          Pexp_apply
                          expression (asmcomp/cmm.ml[328,9672+26]..[328,9672+27])
                            Pexp_ident "f" (asmcomp/cmm.ml[328,9672+26]..[328,9672+27])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/cmm.ml[328,9672+28]..[328,9672+30])
                                Pexp_ident "e2" (asmcomp/cmm.ml[328,9672+28]..[328,9672+30])
                          ]
                        expression (asmcomp/cmm.ml[328,9672+32]..[328,9672+35])
                          Pexp_ident "dbg" (asmcomp/cmm.ml[328,9672+32]..[328,9672+35])
                      ]
              <case>
                pattern (asmcomp/cmm.ml[329,9709+4]..[334,9796+8])
                  Ppat_alias "c" (asmcomp/cmm.ml[334,9796+7]..[334,9796+8])
                  pattern (asmcomp/cmm.ml[329,9709+4]..[333,9785+10])
                    Ppat_or
                    pattern (asmcomp/cmm.ml[329,9709+4]..[332,9765+19])
                      Ppat_or
                      pattern (asmcomp/cmm.ml[329,9709+4]..[331,9746+18])
                        Ppat_or
                        pattern (asmcomp/cmm.ml[329,9709+4]..[330,9726+19])
                          Ppat_or
                          pattern (asmcomp/cmm.ml[329,9709+4]..[329,9709+16])
                            Ppat_construct "Cconst_int" (asmcomp/cmm.ml[329,9709+4]..[329,9709+14])
                            Some
                              []
                              pattern (asmcomp/cmm.ml[329,9709+15]..[329,9709+16])
                                Ppat_any
                          pattern (asmcomp/cmm.ml[330,9726+4]..[330,9726+19])
                            Ppat_construct "Cconst_natint" (asmcomp/cmm.ml[330,9726+4]..[330,9726+17])
                            Some
                              []
                              pattern (asmcomp/cmm.ml[330,9726+18]..[330,9726+19])
                                Ppat_any
                        pattern (asmcomp/cmm.ml[331,9746+4]..[331,9746+18])
                          Ppat_construct "Cconst_float" (asmcomp/cmm.ml[331,9746+4]..[331,9746+16])
                          Some
                            []
                            pattern (asmcomp/cmm.ml[331,9746+17]..[331,9746+18])
                              Ppat_any
                      pattern (asmcomp/cmm.ml[332,9765+4]..[332,9765+19])
                        Ppat_construct "Cconst_symbol" (asmcomp/cmm.ml[332,9765+4]..[332,9765+17])
                        Some
                          []
                          pattern (asmcomp/cmm.ml[332,9765+18]..[332,9765+19])
                            Ppat_any
                    pattern (asmcomp/cmm.ml[333,9785+4]..[333,9785+10])
                      Ppat_construct "Cvar" (asmcomp/cmm.ml[333,9785+4]..[333,9785+8])
                      Some
                        []
                        pattern (asmcomp/cmm.ml[333,9785+9]..[333,9785+10])
                          Ppat_any
                expression (asmcomp/cmm.ml[335,9808+6]..[335,9808+7])
                  Pexp_ident "c" (asmcomp/cmm.ml[335,9808+6]..[335,9808+7])
            ]
    ]
]

