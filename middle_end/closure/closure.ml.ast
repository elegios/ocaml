[
  structure_item (middle_end/closure/closure.ml[18,1152+0]..[18,1152+9])
    Pstr_open Fresh
    module_expr (middle_end/closure/closure.ml[18,1152+5]..[18,1152+9])
      Pmod_ident "Misc" (middle_end/closure/closure.ml[18,1152+5]..[18,1152+9])
  structure_item (middle_end/closure/closure.ml[19,1162+0]..[19,1162+13])
    Pstr_open Fresh
    module_expr (middle_end/closure/closure.ml[19,1162+5]..[19,1162+13])
      Pmod_ident "Asttypes" (middle_end/closure/closure.ml[19,1162+5]..[19,1162+13])
  structure_item (middle_end/closure/closure.ml[20,1176+0]..[20,1176+14])
    Pstr_open Fresh
    module_expr (middle_end/closure/closure.ml[20,1176+5]..[20,1176+14])
      Pmod_ident "Primitive" (middle_end/closure/closure.ml[20,1176+5]..[20,1176+14])
  structure_item (middle_end/closure/closure.ml[21,1191+0]..[21,1191+11])
    Pstr_open Fresh
    module_expr (middle_end/closure/closure.ml[21,1191+5]..[21,1191+11])
      Pmod_ident "Lambda" (middle_end/closure/closure.ml[21,1191+5]..[21,1191+11])
  structure_item (middle_end/closure/closure.ml[22,1203+0]..[22,1203+11])
    Pstr_open Fresh
    module_expr (middle_end/closure/closure.ml[22,1203+5]..[22,1203+11])
      Pmod_ident "Switch" (middle_end/closure/closure.ml[22,1203+5]..[22,1203+11])
  structure_item (middle_end/closure/closure.ml[23,1215+0]..[23,1215+12])
    Pstr_open Fresh
    module_expr (middle_end/closure/closure.ml[23,1215+5]..[23,1215+12])
      Pmod_ident "Clambda" (middle_end/closure/closure.ml[23,1215+5]..[23,1215+12])
  structure_item (middle_end/closure/closure.ml[24,1228+0]..[24,1228+29])
    Pstr_module
    "P" (middle_end/closure/closure.ml[24,1228+7]..[24,1228+8])
      module_expr (middle_end/closure/closure.ml[24,1228+11]..[24,1228+29])
        Pmod_ident "Clambda_primitives" (middle_end/closure/closure.ml[24,1228+11]..[24,1228+29])
  structure_item (middle_end/closure/closure.ml[26,1259+0]..[26,1259+24])
    Pstr_module
    "Int" (middle_end/closure/closure.ml[26,1259+7]..[26,1259+10])
      module_expr (middle_end/closure/closure.ml[26,1259+13]..[26,1259+24])
        Pmod_ident "Numbers.Int" (middle_end/closure/closure.ml[26,1259+13]..[26,1259+24])
  structure_item (middle_end/closure/closure.ml[27,1284+0]..[34,1450+8])
    Pstr_module
    "Storer" (middle_end/closure/closure.ml[27,1284+7]..[27,1284+13])
      module_expr (middle_end/closure/closure.ml[28,1300+2]..[34,1450+8])
        Pmod_apply
        module_expr (middle_end/closure/closure.ml[28,1300+2]..[28,1300+14])
          Pmod_ident "Switch.Store" (middle_end/closure/closure.ml[28,1300+2]..[28,1300+14])
        module_expr (middle_end/closure/closure.ml[29,1315+5]..[34,1450+7])
          Pmod_structure
          [
            structure_item (middle_end/closure/closure.ml[30,1327+6]..[30,1327+21])
              Pstr_type Rec
              [
                type_declaration "t" (middle_end/closure/closure.ml[30,1327+11]..[30,1327+12]) (middle_end/closure/closure.ml[30,1327+6]..[30,1327+21])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (middle_end/closure/closure.ml[30,1327+15]..[30,1327+21])
                        Ptyp_constr "lambda" (middle_end/closure/closure.ml[30,1327+15]..[30,1327+21])
                        []
              ]
            structure_item (middle_end/closure/closure.ml[31,1349+6]..[31,1349+23])
              Pstr_type Rec
              [
                type_declaration "key" (middle_end/closure/closure.ml[31,1349+11]..[31,1349+14]) (middle_end/closure/closure.ml[31,1349+6]..[31,1349+23])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (middle_end/closure/closure.ml[31,1349+17]..[31,1349+23])
                        Ptyp_constr "lambda" (middle_end/closure/closure.ml[31,1349+17]..[31,1349+23])
                        []
              ]
            structure_item (middle_end/closure/closure.ml[32,1373+6]..[32,1373+37])
              Pstr_value Nonrec
              [
                <def>
                  pattern (middle_end/closure/closure.ml[32,1373+10]..[32,1373+18])
                    Ppat_var "make_key" (middle_end/closure/closure.ml[32,1373+10]..[32,1373+18])
                  expression (middle_end/closure/closure.ml[32,1373+22]..[32,1373+37])
                    Pexp_ident "Lambda.make_key" (middle_end/closure/closure.ml[32,1373+22]..[32,1373+37])
              ]
            structure_item (middle_end/closure/closure.ml[33,1411+6]..[33,1411+38])
              Pstr_value Nonrec
              [
                <def>
                  pattern (middle_end/closure/closure.ml[33,1411+10]..[33,1411+21])
                    Ppat_var "compare_key" (middle_end/closure/closure.ml[33,1411+10]..[33,1411+21])
                  expression (middle_end/closure/closure.ml[33,1411+24]..[33,1411+38])
                    Pexp_ident "Stdlib.compare" (middle_end/closure/closure.ml[33,1411+24]..[33,1411+38])
              ]
          ]
  structure_item (middle_end/closure/closure.ml[36,1460+0]..[36,1460+22])
    Pstr_module
    "V" (middle_end/closure/closure.ml[36,1460+7]..[36,1460+8])
      module_expr (middle_end/closure/closure.ml[36,1460+11]..[36,1460+22])
        Pmod_ident "Backend_var" (middle_end/closure/closure.ml[36,1460+11]..[36,1460+22])
  structure_item (middle_end/closure/closure.ml[37,1483+0]..[37,1483+39])
    Pstr_module
    "VP" (middle_end/closure/closure.ml[37,1483+7]..[37,1483+9])
      module_expr (middle_end/closure/closure.ml[37,1483+12]..[37,1483+39])
        Pmod_ident "Backend_var.With_provenance" (middle_end/closure/closure.ml[37,1483+12]..[37,1483+39])
  structure_item (middle_end/closure/closure.ml[41,1551+0]..[42,1576+68])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[41,1551+4]..[41,1551+19])
          Ppat_var "no_phantom_lets" (middle_end/closure/closure.ml[41,1551+4]..[41,1551+19])
        expression (middle_end/closure/closure.ml[41,1551+20]..[42,1576+68]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[41,1551+20]..[41,1551+22])
            Ppat_construct "()" (middle_end/closure/closure.ml[41,1551+20]..[41,1551+22])
            None
          expression (middle_end/closure/closure.ml[42,1576+2]..[42,1576+68])
            Pexp_apply
            expression (middle_end/closure/closure.ml[42,1576+2]..[42,1576+18])
              Pexp_ident "Misc.fatal_error" (middle_end/closure/closure.ml[42,1576+2]..[42,1576+18])
            [
              <arg>
              Nolabel
                expression (middle_end/closure/closure.ml[42,1576+19]..[42,1576+68])
                  Pexp_constant PConst_string("Closure does not support phantom let generation",(middle_end/closure/closure.ml[42,1576+20]..[42,1576+67]),None)
            ]
    ]
  structure_item (middle_end/closure/closure.ml[46,1689+0]..[51,1875+5])
    Pstr_value Rec
    [
      <def>
        pattern (middle_end/closure/closure.ml[46,1689+8]..[46,1689+18])
          Ppat_var "split_list" (middle_end/closure/closure.ml[46,1689+8]..[46,1689+18])
        expression (middle_end/closure/closure.ml[46,1689+19]..[51,1875+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[46,1689+19]..[46,1689+20])
            Ppat_var "n" (middle_end/closure/closure.ml[46,1689+19]..[46,1689+20])
          expression (middle_end/closure/closure.ml[46,1689+21]..[51,1875+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[46,1689+21]..[46,1689+22])
              Ppat_var "l" (middle_end/closure/closure.ml[46,1689+21]..[46,1689+22])
            expression (middle_end/closure/closure.ml[47,1714+2]..[51,1875+5])
              Pexp_ifthenelse
              expression (middle_end/closure/closure.ml[47,1714+5]..[47,1714+11])
                Pexp_apply
                expression (middle_end/closure/closure.ml[47,1714+7]..[47,1714+9])
                  Pexp_ident "<=" (middle_end/closure/closure.ml[47,1714+7]..[47,1714+9])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/closure/closure.ml[47,1714+5]..[47,1714+6])
                      Pexp_ident "n" (middle_end/closure/closure.ml[47,1714+5]..[47,1714+6])
                  <arg>
                  Nolabel
                    expression (middle_end/closure/closure.ml[47,1714+10]..[47,1714+11])
                      Pexp_constant PConst_int (0,None)
                ]
              expression (middle_end/closure/closure.ml[47,1714+17]..[47,1714+24])
                Pexp_tuple
                [
                  expression (middle_end/closure/closure.ml[47,1714+18]..[47,1714+20])
                    Pexp_construct "[]" (middle_end/closure/closure.ml[47,1714+18]..[47,1714+20])
                    None
                  expression (middle_end/closure/closure.ml[47,1714+22]..[47,1714+23])
                    Pexp_ident "l" (middle_end/closure/closure.ml[47,1714+22]..[47,1714+23])
                ]
              Some
                expression (middle_end/closure/closure.ml[47,1714+30]..[51,1875+5])
                  Pexp_match
                  expression (middle_end/closure/closure.ml[48,1750+10]..[48,1750+11])
                    Pexp_ident "l" (middle_end/closure/closure.ml[48,1750+10]..[48,1750+11])
                  [
                    <case>
                      pattern (middle_end/closure/closure.ml[49,1767+6]..[49,1767+8])
                        Ppat_construct "[]" (middle_end/closure/closure.ml[49,1767+6]..[49,1767+8])
                        None
                      expression (middle_end/closure/closure.ml[49,1767+12]..[49,1767+44])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[49,1767+12]..[49,1767+23])
                          Pexp_ident "fatal_error" (middle_end/closure/closure.ml[49,1767+12]..[49,1767+23])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[49,1767+24]..[49,1767+44])
                              Pexp_constant PConst_string("Closure.split_list",(middle_end/closure/closure.ml[49,1767+25]..[49,1767+43]),None)
                        ]
                    <case>
                      pattern (middle_end/closure/closure.ml[50,1812+6]..[50,1812+10])
                        Ppat_construct "::" (middle_end/closure/closure.ml[50,1812+7]..[50,1812+9])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[50,1812+6]..[50,1812+10]) ghost
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[50,1812+6]..[50,1812+7])
                                Ppat_var "a" (middle_end/closure/closure.ml[50,1812+6]..[50,1812+7])
                              pattern (middle_end/closure/closure.ml[50,1812+9]..[50,1812+10])
                                Ppat_var "l" (middle_end/closure/closure.ml[50,1812+9]..[50,1812+10])
                            ]
                      expression (middle_end/closure/closure.ml[50,1812+14]..[50,1812+62])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[50,1812+18]..[50,1812+26])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[50,1812+19]..[50,1812+21])
                                  Ppat_var "l1" (middle_end/closure/closure.ml[50,1812+19]..[50,1812+21])
                                pattern (middle_end/closure/closure.ml[50,1812+23]..[50,1812+25])
                                  Ppat_var "l2" (middle_end/closure/closure.ml[50,1812+23]..[50,1812+25])
                              ]
                            expression (middle_end/closure/closure.ml[50,1812+29]..[50,1812+47])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[50,1812+29]..[50,1812+39])
                                Pexp_ident "split_list" (middle_end/closure/closure.ml[50,1812+29]..[50,1812+39])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[50,1812+40]..[50,1812+45])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[50,1812+42]..[50,1812+43])
                                      Pexp_ident "-" (middle_end/closure/closure.ml[50,1812+42]..[50,1812+43])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[50,1812+41]..[50,1812+42])
                                          Pexp_ident "n" (middle_end/closure/closure.ml[50,1812+41]..[50,1812+42])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[50,1812+43]..[50,1812+44])
                                          Pexp_constant PConst_int (1,None)
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[50,1812+46]..[50,1812+47])
                                    Pexp_ident "l" (middle_end/closure/closure.ml[50,1812+46]..[50,1812+47])
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[50,1812+51]..[50,1812+62])
                          Pexp_tuple
                          [
                            expression (middle_end/closure/closure.ml[50,1812+52]..[50,1812+57])
                              Pexp_construct "::" (middle_end/closure/closure.ml[50,1812+53]..[50,1812+55])
                              Some
                                expression (middle_end/closure/closure.ml[50,1812+52]..[50,1812+57]) ghost
                                  Pexp_tuple
                                  [
                                    expression (middle_end/closure/closure.ml[50,1812+52]..[50,1812+53])
                                      Pexp_ident "a" (middle_end/closure/closure.ml[50,1812+52]..[50,1812+53])
                                    expression (middle_end/closure/closure.ml[50,1812+55]..[50,1812+57])
                                      Pexp_ident "l1" (middle_end/closure/closure.ml[50,1812+55]..[50,1812+57])
                                  ]
                            expression (middle_end/closure/closure.ml[50,1812+59]..[50,1812+61])
                              Pexp_ident "l2" (middle_end/closure/closure.ml[50,1812+59]..[50,1812+61])
                          ]
                  ]
    ]
  structure_item (middle_end/closure/closure.ml[53,1882+0]..[58,2055+51])
    Pstr_value Rec
    [
      <def>
        pattern (middle_end/closure/closure.ml[53,1882+8]..[53,1882+25])
          Ppat_var "build_closure_env" (middle_end/closure/closure.ml[53,1882+8]..[53,1882+25])
        expression (middle_end/closure/closure.ml[53,1882+26]..[58,2055+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[53,1882+26]..[53,1882+35])
            Ppat_var "env_param" (middle_end/closure/closure.ml[53,1882+26]..[53,1882+35])
          expression (middle_end/closure/closure.ml[53,1882+36]..[58,2055+51]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[53,1882+36]..[53,1882+39])
              Ppat_var "pos" (middle_end/closure/closure.ml[53,1882+36]..[53,1882+39])
            expression (middle_end/closure/closure.ml[53,1882+42]..[58,2055+51])
              Pexp_function
              [
                <case>
                  pattern (middle_end/closure/closure.ml[54,1933+4]..[54,1933+6])
                    Ppat_construct "[]" (middle_end/closure/closure.ml[54,1933+4]..[54,1933+6])
                    None
                  expression (middle_end/closure/closure.ml[54,1933+10]..[54,1933+21])
                    Pexp_ident "V.Map.empty" (middle_end/closure/closure.ml[54,1933+10]..[54,1933+21])
                <case>
                  pattern (middle_end/closure/closure.ml[55,1955+4]..[55,1955+13])
                    Ppat_construct "::" (middle_end/closure/closure.ml[55,1955+7]..[55,1955+9])
                    Some
                      []
                      pattern (middle_end/closure/closure.ml[55,1955+4]..[55,1955+13]) ghost
                        Ppat_tuple
                        [
                          pattern (middle_end/closure/closure.ml[55,1955+4]..[55,1955+6])
                            Ppat_var "id" (middle_end/closure/closure.ml[55,1955+4]..[55,1955+6])
                          pattern (middle_end/closure/closure.ml[55,1955+10]..[55,1955+13])
                            Ppat_var "rem" (middle_end/closure/closure.ml[55,1955+10]..[55,1955+13])
                        ]
                  expression (middle_end/closure/closure.ml[56,1972+6]..[58,2055+51])
                    Pexp_apply
                    expression (middle_end/closure/closure.ml[56,1972+6]..[56,1972+15])
                      Pexp_ident "V.Map.add" (middle_end/closure/closure.ml[56,1972+6]..[56,1972+15])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[56,1972+16]..[56,1972+18])
                          Pexp_ident "id" (middle_end/closure/closure.ml[56,1972+16]..[56,1972+18])
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[57,1991+8]..[57,1991+63])
                          Pexp_construct "Uprim" (middle_end/closure/closure.ml[57,1991+9]..[57,1991+14])
                          Some
                            expression (middle_end/closure/closure.ml[57,1991+14]..[57,1991+62])
                              Pexp_tuple
                              [
                                expression (middle_end/closure/closure.ml[57,1991+15]..[57,1991+27])
                                  Pexp_construct "P.Pfield" (middle_end/closure/closure.ml[57,1991+15]..[57,1991+23])
                                  Some
                                    expression (middle_end/closure/closure.ml[57,1991+24]..[57,1991+27])
                                      Pexp_ident "pos" (middle_end/closure/closure.ml[57,1991+24]..[57,1991+27])
                                expression (middle_end/closure/closure.ml[57,1991+29]..[57,1991+45])
                                  Pexp_construct "::" (middle_end/closure/closure.ml[57,1991+30]..[57,1991+45]) ghost
                                  Some
                                    expression (middle_end/closure/closure.ml[57,1991+30]..[57,1991+45]) ghost
                                      Pexp_tuple
                                      [
                                        expression (middle_end/closure/closure.ml[57,1991+30]..[57,1991+44])
                                          Pexp_construct "Uvar" (middle_end/closure/closure.ml[57,1991+30]..[57,1991+34])
                                          Some
                                            expression (middle_end/closure/closure.ml[57,1991+35]..[57,1991+44])
                                              Pexp_ident "env_param" (middle_end/closure/closure.ml[57,1991+35]..[57,1991+44])
                                        expression (middle_end/closure/closure.ml[57,1991+44]..[57,1991+45]) ghost
                                          Pexp_construct "[]" (middle_end/closure/closure.ml[57,1991+44]..[57,1991+45]) ghost
                                          None
                                      ]
                                expression (middle_end/closure/closure.ml[57,1991+47]..[57,1991+61])
                                  Pexp_ident "Debuginfo.none" (middle_end/closure/closure.ml[57,1991+47]..[57,1991+61])
                              ]
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[58,2055+10]..[58,2055+51])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[58,2055+11]..[58,2055+28])
                            Pexp_ident "build_closure_env" (middle_end/closure/closure.ml[58,2055+11]..[58,2055+28])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[58,2055+29]..[58,2055+38])
                                Pexp_ident "env_param" (middle_end/closure/closure.ml[58,2055+29]..[58,2055+38])
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[58,2055+39]..[58,2055+46])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[58,2055+43]..[58,2055+44])
                                  Pexp_ident "+" (middle_end/closure/closure.ml[58,2055+43]..[58,2055+44])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[58,2055+40]..[58,2055+43])
                                      Pexp_ident "pos" (middle_end/closure/closure.ml[58,2055+40]..[58,2055+43])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[58,2055+44]..[58,2055+45])
                                      Pexp_constant PConst_int (1,None)
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[58,2055+47]..[58,2055+50])
                                Pexp_ident "rem" (middle_end/closure/closure.ml[58,2055+47]..[58,2055+50])
                          ]
                    ]
              ]
    ]
  structure_item (middle_end/closure/closure.ml[65,2382+0]..[66,2405+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[65,2382+4]..[65,2382+13])
          Ppat_var "getglobal" (middle_end/closure/closure.ml[65,2382+4]..[65,2382+13])
        expression (middle_end/closure/closure.ml[65,2382+14]..[66,2405+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[65,2382+14]..[65,2382+17])
            Ppat_var "dbg" (middle_end/closure/closure.ml[65,2382+14]..[65,2382+17])
          expression (middle_end/closure/closure.ml[65,2382+18]..[66,2405+65]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[65,2382+18]..[65,2382+20])
              Ppat_var "id" (middle_end/closure/closure.ml[65,2382+18]..[65,2382+20])
            expression (middle_end/closure/closure.ml[66,2405+2]..[66,2405+65])
              Pexp_construct "Uprim" (middle_end/closure/closure.ml[66,2405+2]..[66,2405+7])
              Some
                expression (middle_end/closure/closure.ml[66,2405+7]..[66,2405+65])
                  Pexp_tuple
                  [
                    expression (middle_end/closure/closure.ml[66,2405+8]..[66,2405+55])
                      Pexp_construct "P.Pread_symbol" (middle_end/closure/closure.ml[66,2405+8]..[66,2405+22])
                      Some
                        expression (middle_end/closure/closure.ml[66,2405+23]..[66,2405+55])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[66,2405+24]..[66,2405+51])
                            Pexp_ident "Compilenv.symbol_for_global" (middle_end/closure/closure.ml[66,2405+24]..[66,2405+51])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[66,2405+52]..[66,2405+54])
                                Pexp_ident "id" (middle_end/closure/closure.ml[66,2405+52]..[66,2405+54])
                          ]
                    expression (middle_end/closure/closure.ml[66,2405+57]..[66,2405+59])
                      Pexp_construct "[]" (middle_end/closure/closure.ml[66,2405+57]..[66,2405+59])
                      None
                    expression (middle_end/closure/closure.ml[66,2405+61]..[66,2405+64])
                      Pexp_ident "dbg" (middle_end/closure/closure.ml[66,2405+61]..[66,2405+64])
                  ]
    ]
  structure_item (middle_end/closure/closure.ml[70,2527+0]..[110,4203+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[70,2527+4]..[70,2527+14])
          Ppat_var "occurs_var" (middle_end/closure/closure.ml[70,2527+4]..[70,2527+14])
        expression (middle_end/closure/closure.ml[70,2527+15]..[110,4203+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[70,2527+15]..[70,2527+18])
            Ppat_var "var" (middle_end/closure/closure.ml[70,2527+15]..[70,2527+18])
          expression (middle_end/closure/closure.ml[70,2527+19]..[110,4203+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[70,2527+19]..[70,2527+20])
              Ppat_var "u" (middle_end/closure/closure.ml[70,2527+19]..[70,2527+20])
            expression (middle_end/closure/closure.ml[71,2550+2]..[110,4203+13])
              Pexp_let Rec
              [
                <def>
                  pattern (middle_end/closure/closure.ml[71,2550+10]..[71,2550+16])
                    Ppat_var "occurs" (middle_end/closure/closure.ml[71,2550+10]..[71,2550+16])
                  expression (middle_end/closure/closure.ml[71,2550+19]..[101,4011+27])
                    Pexp_function
                    [
                      <case>
                        pattern (middle_end/closure/closure.ml[72,2578+6]..[72,2578+12])
                          Ppat_construct "Uvar" (middle_end/closure/closure.ml[72,2578+6]..[72,2578+10])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[72,2578+11]..[72,2578+12])
                              Ppat_var "v" (middle_end/closure/closure.ml[72,2578+11]..[72,2578+12])
                        expression (middle_end/closure/closure.ml[72,2578+16]..[72,2578+23])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[72,2578+18]..[72,2578+19])
                            Pexp_ident "=" (middle_end/closure/closure.ml[72,2578+18]..[72,2578+19])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[72,2578+16]..[72,2578+17])
                                Pexp_ident "v" (middle_end/closure/closure.ml[72,2578+16]..[72,2578+17])
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[72,2578+20]..[72,2578+23])
                                Pexp_ident "var" (middle_end/closure/closure.ml[72,2578+20]..[72,2578+23])
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[73,2602+6]..[73,2602+14])
                          Ppat_construct "Uconst" (middle_end/closure/closure.ml[73,2602+6]..[73,2602+12])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[73,2602+13]..[73,2602+14])
                              Ppat_any
                        expression (middle_end/closure/closure.ml[73,2602+18]..[73,2602+23])
                          Pexp_construct "false" (middle_end/closure/closure.ml[73,2602+18]..[73,2602+23])
                          None
                      <case>
                        pattern (middle_end/closure/closure.ml[74,2626+6]..[74,2626+34])
                          Ppat_construct "Udirect_apply" (middle_end/closure/closure.ml[74,2626+6]..[74,2626+19])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[74,2626+19]..[74,2626+34])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[74,2626+20]..[74,2626+24])
                                  Ppat_var "_lbl" (middle_end/closure/closure.ml[74,2626+20]..[74,2626+24])
                                pattern (middle_end/closure/closure.ml[74,2626+26]..[74,2626+30])
                                  Ppat_var "args" (middle_end/closure/closure.ml[74,2626+26]..[74,2626+30])
                                pattern (middle_end/closure/closure.ml[74,2626+32]..[74,2626+33])
                                  Ppat_any
                              ]
                        expression (middle_end/closure/closure.ml[74,2626+38]..[74,2626+61])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[74,2626+38]..[74,2626+49])
                            Pexp_ident "List.exists" (middle_end/closure/closure.ml[74,2626+38]..[74,2626+49])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[74,2626+50]..[74,2626+56])
                                Pexp_ident "occurs" (middle_end/closure/closure.ml[74,2626+50]..[74,2626+56])
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[74,2626+57]..[74,2626+61])
                                Pexp_ident "args" (middle_end/closure/closure.ml[74,2626+57]..[74,2626+61])
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[75,2688+6]..[75,2688+36])
                          Ppat_construct "Ugeneric_apply" (middle_end/closure/closure.ml[75,2688+6]..[75,2688+20])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[75,2688+20]..[75,2688+36])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[75,2688+21]..[75,2688+26])
                                  Ppat_var "funct" (middle_end/closure/closure.ml[75,2688+21]..[75,2688+26])
                                pattern (middle_end/closure/closure.ml[75,2688+28]..[75,2688+32])
                                  Ppat_var "args" (middle_end/closure/closure.ml[75,2688+28]..[75,2688+32])
                                pattern (middle_end/closure/closure.ml[75,2688+34]..[75,2688+35])
                                  Ppat_any
                              ]
                        expression (middle_end/closure/closure.ml[75,2688+40]..[75,2688+79])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[75,2688+53]..[75,2688+55])
                            Pexp_ident "||" (middle_end/closure/closure.ml[75,2688+53]..[75,2688+55])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[75,2688+40]..[75,2688+52])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[75,2688+40]..[75,2688+46])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[75,2688+40]..[75,2688+46])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[75,2688+47]..[75,2688+52])
                                      Pexp_ident "funct" (middle_end/closure/closure.ml[75,2688+47]..[75,2688+52])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[75,2688+56]..[75,2688+79])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[75,2688+56]..[75,2688+67])
                                  Pexp_ident "List.exists" (middle_end/closure/closure.ml[75,2688+56]..[75,2688+67])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[75,2688+68]..[75,2688+74])
                                      Pexp_ident "occurs" (middle_end/closure/closure.ml[75,2688+68]..[75,2688+74])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[75,2688+75]..[75,2688+79])
                                      Pexp_ident "args" (middle_end/closure/closure.ml[75,2688+75]..[75,2688+79])
                                ]
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[76,2768+6]..[76,2768+31])
                          Ppat_construct "Uclosure" (middle_end/closure/closure.ml[76,2768+6]..[76,2768+14])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[76,2768+14]..[76,2768+31])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[76,2768+15]..[76,2768+24])
                                  Ppat_var "_fundecls" (middle_end/closure/closure.ml[76,2768+15]..[76,2768+24])
                                pattern (middle_end/closure/closure.ml[76,2768+26]..[76,2768+30])
                                  Ppat_var "clos" (middle_end/closure/closure.ml[76,2768+26]..[76,2768+30])
                              ]
                        expression (middle_end/closure/closure.ml[76,2768+35]..[76,2768+58])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[76,2768+35]..[76,2768+46])
                            Pexp_ident "List.exists" (middle_end/closure/closure.ml[76,2768+35]..[76,2768+46])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[76,2768+47]..[76,2768+53])
                                Pexp_ident "occurs" (middle_end/closure/closure.ml[76,2768+47]..[76,2768+53])
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[76,2768+54]..[76,2768+58])
                                Pexp_ident "clos" (middle_end/closure/closure.ml[76,2768+54]..[76,2768+58])
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[77,2827+6]..[77,2827+22])
                          Ppat_construct "Uoffset" (middle_end/closure/closure.ml[77,2827+6]..[77,2827+13])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[77,2827+13]..[77,2827+22])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[77,2827+14]..[77,2827+15])
                                  Ppat_var "u" (middle_end/closure/closure.ml[77,2827+14]..[77,2827+15])
                                pattern (middle_end/closure/closure.ml[77,2827+17]..[77,2827+21])
                                  Ppat_var "_ofs" (middle_end/closure/closure.ml[77,2827+17]..[77,2827+21])
                              ]
                        expression (middle_end/closure/closure.ml[77,2827+26]..[77,2827+34])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[77,2827+26]..[77,2827+32])
                            Pexp_ident "occurs" (middle_end/closure/closure.ml[77,2827+26]..[77,2827+32])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[77,2827+33]..[77,2827+34])
                                Pexp_ident "u" (middle_end/closure/closure.ml[77,2827+33]..[77,2827+34])
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[78,2862+6]..[78,2862+39])
                          Ppat_construct "Ulet" (middle_end/closure/closure.ml[78,2862+6]..[78,2862+10])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[78,2862+10]..[78,2862+39])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[78,2862+11]..[78,2862+15])
                                  Ppat_var "_str" (middle_end/closure/closure.ml[78,2862+11]..[78,2862+15])
                                pattern (middle_end/closure/closure.ml[78,2862+17]..[78,2862+22])
                                  Ppat_var "_kind" (middle_end/closure/closure.ml[78,2862+17]..[78,2862+22])
                                pattern (middle_end/closure/closure.ml[78,2862+24]..[78,2862+27])
                                  Ppat_var "_id" (middle_end/closure/closure.ml[78,2862+24]..[78,2862+27])
                                pattern (middle_end/closure/closure.ml[78,2862+29]..[78,2862+32])
                                  Ppat_var "def" (middle_end/closure/closure.ml[78,2862+29]..[78,2862+32])
                                pattern (middle_end/closure/closure.ml[78,2862+34]..[78,2862+38])
                                  Ppat_var "body" (middle_end/closure/closure.ml[78,2862+34]..[78,2862+38])
                              ]
                        expression (middle_end/closure/closure.ml[78,2862+43]..[78,2862+68])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[78,2862+54]..[78,2862+56])
                            Pexp_ident "||" (middle_end/closure/closure.ml[78,2862+54]..[78,2862+56])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[78,2862+43]..[78,2862+53])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[78,2862+43]..[78,2862+49])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[78,2862+43]..[78,2862+49])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[78,2862+50]..[78,2862+53])
                                      Pexp_ident "def" (middle_end/closure/closure.ml[78,2862+50]..[78,2862+53])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[78,2862+57]..[78,2862+68])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[78,2862+57]..[78,2862+63])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[78,2862+57]..[78,2862+63])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[78,2862+64]..[78,2862+68])
                                      Pexp_ident "body" (middle_end/closure/closure.ml[78,2862+64]..[78,2862+68])
                                ]
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[79,2931+6]..[79,2931+20])
                          Ppat_construct "Uphantom_let" (middle_end/closure/closure.ml[79,2931+6]..[79,2931+18])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[79,2931+19]..[79,2931+20])
                              Ppat_any
                        expression (middle_end/closure/closure.ml[79,2931+24]..[79,2931+42])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[79,2931+24]..[79,2931+39])
                            Pexp_ident "no_phantom_lets" (middle_end/closure/closure.ml[79,2931+24]..[79,2931+39])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[79,2931+40]..[79,2931+42])
                                Pexp_construct "()" (middle_end/closure/closure.ml[79,2931+40]..[79,2931+42])
                                None
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[80,2974+6]..[80,2974+26])
                          Ppat_construct "Uletrec" (middle_end/closure/closure.ml[80,2974+6]..[80,2974+13])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[80,2974+13]..[80,2974+26])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[80,2974+14]..[80,2974+19])
                                  Ppat_var "decls" (middle_end/closure/closure.ml[80,2974+14]..[80,2974+19])
                                pattern (middle_end/closure/closure.ml[80,2974+21]..[80,2974+25])
                                  Ppat_var "body" (middle_end/closure/closure.ml[80,2974+21]..[80,2974+25])
                              ]
                        expression (middle_end/closure/closure.ml[81,3004+8]..[81,3004+67])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[81,3004+53]..[81,3004+55])
                            Pexp_ident "||" (middle_end/closure/closure.ml[81,3004+53]..[81,3004+55])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[81,3004+8]..[81,3004+52])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[81,3004+8]..[81,3004+19])
                                  Pexp_ident "List.exists" (middle_end/closure/closure.ml[81,3004+8]..[81,3004+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[81,3004+20]..[81,3004+46])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/closure/closure.ml[81,3004+25]..[81,3004+33])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/closure/closure.ml[81,3004+26]..[81,3004+29])
                                            Ppat_var "_id" (middle_end/closure/closure.ml[81,3004+26]..[81,3004+29])
                                          pattern (middle_end/closure/closure.ml[81,3004+31]..[81,3004+32])
                                            Ppat_var "u" (middle_end/closure/closure.ml[81,3004+31]..[81,3004+32])
                                        ]
                                      expression (middle_end/closure/closure.ml[81,3004+37]..[81,3004+45])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[81,3004+37]..[81,3004+43])
                                          Pexp_ident "occurs" (middle_end/closure/closure.ml[81,3004+37]..[81,3004+43])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[81,3004+44]..[81,3004+45])
                                              Pexp_ident "u" (middle_end/closure/closure.ml[81,3004+44]..[81,3004+45])
                                        ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[81,3004+47]..[81,3004+52])
                                      Pexp_ident "decls" (middle_end/closure/closure.ml[81,3004+47]..[81,3004+52])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[81,3004+56]..[81,3004+67])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[81,3004+56]..[81,3004+62])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[81,3004+56]..[81,3004+62])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[81,3004+63]..[81,3004+67])
                                      Pexp_ident "body" (middle_end/closure/closure.ml[81,3004+63]..[81,3004+67])
                                ]
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[82,3072+6]..[82,3072+24])
                          Ppat_construct "Uprim" (middle_end/closure/closure.ml[82,3072+6]..[82,3072+11])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[82,3072+11]..[82,3072+24])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[82,3072+12]..[82,3072+14])
                                  Ppat_var "_p" (middle_end/closure/closure.ml[82,3072+12]..[82,3072+14])
                                pattern (middle_end/closure/closure.ml[82,3072+16]..[82,3072+20])
                                  Ppat_var "args" (middle_end/closure/closure.ml[82,3072+16]..[82,3072+20])
                                pattern (middle_end/closure/closure.ml[82,3072+22]..[82,3072+23])
                                  Ppat_any
                              ]
                        expression (middle_end/closure/closure.ml[82,3072+28]..[82,3072+51])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[82,3072+28]..[82,3072+39])
                            Pexp_ident "List.exists" (middle_end/closure/closure.ml[82,3072+28]..[82,3072+39])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[82,3072+40]..[82,3072+46])
                                Pexp_ident "occurs" (middle_end/closure/closure.ml[82,3072+40]..[82,3072+46])
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[82,3072+47]..[82,3072+51])
                                Pexp_ident "args" (middle_end/closure/closure.ml[82,3072+47]..[82,3072+51])
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[83,3124+6]..[83,3124+27])
                          Ppat_construct "Uswitch" (middle_end/closure/closure.ml[83,3124+6]..[83,3124+13])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[83,3124+13]..[83,3124+27])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[83,3124+14]..[83,3124+17])
                                  Ppat_var "arg" (middle_end/closure/closure.ml[83,3124+14]..[83,3124+17])
                                pattern (middle_end/closure/closure.ml[83,3124+19]..[83,3124+20])
                                  Ppat_var "s" (middle_end/closure/closure.ml[83,3124+19]..[83,3124+20])
                                pattern (middle_end/closure/closure.ml[83,3124+22]..[83,3124+26])
                                  Ppat_var "_dbg" (middle_end/closure/closure.ml[83,3124+22]..[83,3124+26])
                              ]
                        expression (middle_end/closure/closure.ml[84,3155+8]..[85,3177+76])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[84,3155+19]..[84,3155+21])
                            Pexp_ident "||" (middle_end/closure/closure.ml[84,3155+19]..[84,3155+21])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[84,3155+8]..[84,3155+18])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[84,3155+8]..[84,3155+14])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[84,3155+8]..[84,3155+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[84,3155+15]..[84,3155+18])
                                      Pexp_ident "arg" (middle_end/closure/closure.ml[84,3155+15]..[84,3155+18])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[85,3177+8]..[85,3177+76])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[85,3177+41]..[85,3177+43])
                                  Pexp_ident "||" (middle_end/closure/closure.ml[85,3177+41]..[85,3177+43])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[85,3177+8]..[85,3177+40])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[85,3177+8]..[85,3177+20])
                                        Pexp_ident "occurs_array" (middle_end/closure/closure.ml[85,3177+8]..[85,3177+20])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[85,3177+21]..[85,3177+40])
                                            Pexp_field
                                            expression (middle_end/closure/closure.ml[85,3177+21]..[85,3177+22])
                                              Pexp_ident "s" (middle_end/closure/closure.ml[85,3177+21]..[85,3177+22])
                                            "us_actions_consts" (middle_end/closure/closure.ml[85,3177+23]..[85,3177+40])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[85,3177+44]..[85,3177+76])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[85,3177+44]..[85,3177+56])
                                        Pexp_ident "occurs_array" (middle_end/closure/closure.ml[85,3177+44]..[85,3177+56])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[85,3177+57]..[85,3177+76])
                                            Pexp_field
                                            expression (middle_end/closure/closure.ml[85,3177+57]..[85,3177+58])
                                              Pexp_ident "s" (middle_end/closure/closure.ml[85,3177+57]..[85,3177+58])
                                            "us_actions_blocks" (middle_end/closure/closure.ml[85,3177+59]..[85,3177+76])
                                      ]
                                ]
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[86,3254+6]..[86,3254+29])
                          Ppat_construct "Ustringswitch" (middle_end/closure/closure.ml[86,3254+6]..[86,3254+19])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[86,3254+19]..[86,3254+29])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[86,3254+20]..[86,3254+23])
                                  Ppat_var "arg" (middle_end/closure/closure.ml[86,3254+20]..[86,3254+23])
                                pattern (middle_end/closure/closure.ml[86,3254+24]..[86,3254+26])
                                  Ppat_var "sw" (middle_end/closure/closure.ml[86,3254+24]..[86,3254+26])
                                pattern (middle_end/closure/closure.ml[86,3254+27]..[86,3254+28])
                                  Ppat_var "d" (middle_end/closure/closure.ml[86,3254+27]..[86,3254+28])
                              ]
                        expression (middle_end/closure/closure.ml[87,3287+8]..[89,3359+57])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[87,3287+19]..[87,3287+21])
                            Pexp_ident "||" (middle_end/closure/closure.ml[87,3287+19]..[87,3287+21])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[87,3287+8]..[87,3287+18])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[87,3287+8]..[87,3287+14])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[87,3287+8]..[87,3287+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[87,3287+15]..[87,3287+18])
                                      Pexp_ident "arg" (middle_end/closure/closure.ml[87,3287+15]..[87,3287+18])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[88,3309+8]..[89,3359+57])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[88,3309+47]..[88,3309+49])
                                  Pexp_ident "||" (middle_end/closure/closure.ml[88,3309+47]..[88,3309+49])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[88,3309+8]..[88,3309+46])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[88,3309+8]..[88,3309+19])
                                        Pexp_ident "List.exists" (middle_end/closure/closure.ml[88,3309+8]..[88,3309+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[88,3309+20]..[88,3309+43])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/closure/closure.ml[88,3309+25]..[88,3309+30])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/closure/closure.ml[88,3309+26]..[88,3309+27])
                                                  Ppat_any
                                                pattern (middle_end/closure/closure.ml[88,3309+28]..[88,3309+29])
                                                  Ppat_var "e" (middle_end/closure/closure.ml[88,3309+28]..[88,3309+29])
                                              ]
                                            expression (middle_end/closure/closure.ml[88,3309+34]..[88,3309+42])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[88,3309+34]..[88,3309+40])
                                                Pexp_ident "occurs" (middle_end/closure/closure.ml[88,3309+34]..[88,3309+40])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[88,3309+41]..[88,3309+42])
                                                    Pexp_ident "e" (middle_end/closure/closure.ml[88,3309+41]..[88,3309+42])
                                              ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[88,3309+44]..[88,3309+46])
                                            Pexp_ident "sw" (middle_end/closure/closure.ml[88,3309+44]..[88,3309+46])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[89,3359+8]..[89,3359+57])
                                      Pexp_match
                                      expression (middle_end/closure/closure.ml[89,3359+15]..[89,3359+16])
                                        Pexp_ident "d" (middle_end/closure/closure.ml[89,3359+15]..[89,3359+16])
                                      [
                                        <case>
                                          pattern (middle_end/closure/closure.ml[89,3359+22]..[89,3359+26])
                                            Ppat_construct "None" (middle_end/closure/closure.ml[89,3359+22]..[89,3359+26])
                                            None
                                          expression (middle_end/closure/closure.ml[89,3359+30]..[89,3359+35])
                                            Pexp_construct "false" (middle_end/closure/closure.ml[89,3359+30]..[89,3359+35])
                                            None
                                        <case>
                                          pattern (middle_end/closure/closure.ml[89,3359+38]..[89,3359+44])
                                            Ppat_construct "Some" (middle_end/closure/closure.ml[89,3359+38]..[89,3359+42])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[89,3359+43]..[89,3359+44])
                                                Ppat_var "d" (middle_end/closure/closure.ml[89,3359+43]..[89,3359+44])
                                          expression (middle_end/closure/closure.ml[89,3359+48]..[89,3359+56])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[89,3359+48]..[89,3359+54])
                                              Pexp_ident "occurs" (middle_end/closure/closure.ml[89,3359+48]..[89,3359+54])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[89,3359+55]..[89,3359+56])
                                                  Pexp_ident "d" (middle_end/closure/closure.ml[89,3359+55]..[89,3359+56])
                                            ]
                                      ]
                                ]
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[90,3417+6]..[90,3417+27])
                          Ppat_construct "Ustaticfail" (middle_end/closure/closure.ml[90,3417+6]..[90,3417+17])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[90,3417+18]..[90,3417+27])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[90,3417+19]..[90,3417+20])
                                  Ppat_any
                                pattern (middle_end/closure/closure.ml[90,3417+22]..[90,3417+26])
                                  Ppat_var "args" (middle_end/closure/closure.ml[90,3417+22]..[90,3417+26])
                              ]
                        expression (middle_end/closure/closure.ml[90,3417+31]..[90,3417+54])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[90,3417+31]..[90,3417+42])
                            Pexp_ident "List.exists" (middle_end/closure/closure.ml[90,3417+31]..[90,3417+42])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[90,3417+43]..[90,3417+49])
                                Pexp_ident "occurs" (middle_end/closure/closure.ml[90,3417+43]..[90,3417+49])
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[90,3417+50]..[90,3417+54])
                                Pexp_ident "args" (middle_end/closure/closure.ml[90,3417+50]..[90,3417+54])
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[91,3472+6]..[91,3472+30])
                          Ppat_construct "Ucatch" (middle_end/closure/closure.ml[91,3472+6]..[91,3472+12])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[91,3472+12]..[91,3472+30])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[91,3472+13]..[91,3472+14])
                                  Ppat_any
                                pattern (middle_end/closure/closure.ml[91,3472+16]..[91,3472+17])
                                  Ppat_any
                                pattern (middle_end/closure/closure.ml[91,3472+19]..[91,3472+23])
                                  Ppat_var "body" (middle_end/closure/closure.ml[91,3472+19]..[91,3472+23])
                                pattern (middle_end/closure/closure.ml[91,3472+25]..[91,3472+29])
                                  Ppat_var "hdlr" (middle_end/closure/closure.ml[91,3472+25]..[91,3472+29])
                              ]
                        expression (middle_end/closure/closure.ml[91,3472+34]..[91,3472+60])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[91,3472+46]..[91,3472+48])
                            Pexp_ident "||" (middle_end/closure/closure.ml[91,3472+46]..[91,3472+48])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[91,3472+34]..[91,3472+45])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[91,3472+34]..[91,3472+40])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[91,3472+34]..[91,3472+40])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[91,3472+41]..[91,3472+45])
                                      Pexp_ident "body" (middle_end/closure/closure.ml[91,3472+41]..[91,3472+45])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[91,3472+49]..[91,3472+60])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[91,3472+49]..[91,3472+55])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[91,3472+49]..[91,3472+55])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[91,3472+56]..[91,3472+60])
                                      Pexp_ident "hdlr" (middle_end/closure/closure.ml[91,3472+56]..[91,3472+60])
                                ]
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[92,3533+6]..[92,3533+32])
                          Ppat_construct "Utrywith" (middle_end/closure/closure.ml[92,3533+6]..[92,3533+14])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[92,3533+14]..[92,3533+32])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[92,3533+15]..[92,3533+19])
                                  Ppat_var "body" (middle_end/closure/closure.ml[92,3533+15]..[92,3533+19])
                                pattern (middle_end/closure/closure.ml[92,3533+21]..[92,3533+25])
                                  Ppat_var "_exn" (middle_end/closure/closure.ml[92,3533+21]..[92,3533+25])
                                pattern (middle_end/closure/closure.ml[92,3533+27]..[92,3533+31])
                                  Ppat_var "hdlr" (middle_end/closure/closure.ml[92,3533+27]..[92,3533+31])
                              ]
                        expression (middle_end/closure/closure.ml[92,3533+36]..[92,3533+62])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[92,3533+48]..[92,3533+50])
                            Pexp_ident "||" (middle_end/closure/closure.ml[92,3533+48]..[92,3533+50])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[92,3533+36]..[92,3533+47])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[92,3533+36]..[92,3533+42])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[92,3533+36]..[92,3533+42])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[92,3533+43]..[92,3533+47])
                                      Pexp_ident "body" (middle_end/closure/closure.ml[92,3533+43]..[92,3533+47])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[92,3533+51]..[92,3533+62])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[92,3533+51]..[92,3533+57])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[92,3533+51]..[92,3533+57])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[92,3533+58]..[92,3533+62])
                                      Pexp_ident "hdlr" (middle_end/closure/closure.ml[92,3533+58]..[92,3533+62])
                                ]
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[93,3596+6]..[93,3596+36])
                          Ppat_construct "Uifthenelse" (middle_end/closure/closure.ml[93,3596+6]..[93,3596+17])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[93,3596+17]..[93,3596+36])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[93,3596+18]..[93,3596+22])
                                  Ppat_var "cond" (middle_end/closure/closure.ml[93,3596+18]..[93,3596+22])
                                pattern (middle_end/closure/closure.ml[93,3596+24]..[93,3596+28])
                                  Ppat_var "ifso" (middle_end/closure/closure.ml[93,3596+24]..[93,3596+28])
                                pattern (middle_end/closure/closure.ml[93,3596+30]..[93,3596+35])
                                  Ppat_var "ifnot" (middle_end/closure/closure.ml[93,3596+30]..[93,3596+35])
                              ]
                        expression (middle_end/closure/closure.ml[94,3636+8]..[94,3636+50])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[94,3636+20]..[94,3636+22])
                            Pexp_ident "||" (middle_end/closure/closure.ml[94,3636+20]..[94,3636+22])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[94,3636+8]..[94,3636+19])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[94,3636+8]..[94,3636+14])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[94,3636+8]..[94,3636+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[94,3636+15]..[94,3636+19])
                                      Pexp_ident "cond" (middle_end/closure/closure.ml[94,3636+15]..[94,3636+19])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[94,3636+23]..[94,3636+50])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[94,3636+35]..[94,3636+37])
                                  Pexp_ident "||" (middle_end/closure/closure.ml[94,3636+35]..[94,3636+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[94,3636+23]..[94,3636+34])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[94,3636+23]..[94,3636+29])
                                        Pexp_ident "occurs" (middle_end/closure/closure.ml[94,3636+23]..[94,3636+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[94,3636+30]..[94,3636+34])
                                            Pexp_ident "ifso" (middle_end/closure/closure.ml[94,3636+30]..[94,3636+34])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[94,3636+38]..[94,3636+50])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[94,3636+38]..[94,3636+44])
                                        Pexp_ident "occurs" (middle_end/closure/closure.ml[94,3636+38]..[94,3636+44])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[94,3636+45]..[94,3636+50])
                                            Pexp_ident "ifnot" (middle_end/closure/closure.ml[94,3636+45]..[94,3636+50])
                                      ]
                                ]
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[95,3687+6]..[95,3687+23])
                          Ppat_construct "Usequence" (middle_end/closure/closure.ml[95,3687+6]..[95,3687+15])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[95,3687+15]..[95,3687+23])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[95,3687+16]..[95,3687+18])
                                  Ppat_var "u1" (middle_end/closure/closure.ml[95,3687+16]..[95,3687+18])
                                pattern (middle_end/closure/closure.ml[95,3687+20]..[95,3687+22])
                                  Ppat_var "u2" (middle_end/closure/closure.ml[95,3687+20]..[95,3687+22])
                              ]
                        expression (middle_end/closure/closure.ml[95,3687+27]..[95,3687+49])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[95,3687+37]..[95,3687+39])
                            Pexp_ident "||" (middle_end/closure/closure.ml[95,3687+37]..[95,3687+39])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[95,3687+27]..[95,3687+36])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[95,3687+27]..[95,3687+33])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[95,3687+27]..[95,3687+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[95,3687+34]..[95,3687+36])
                                      Pexp_ident "u1" (middle_end/closure/closure.ml[95,3687+34]..[95,3687+36])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[95,3687+40]..[95,3687+49])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[95,3687+40]..[95,3687+46])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[95,3687+40]..[95,3687+46])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[95,3687+47]..[95,3687+49])
                                      Pexp_ident "u2" (middle_end/closure/closure.ml[95,3687+47]..[95,3687+49])
                                ]
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[96,3737+6]..[96,3737+24])
                          Ppat_construct "Uwhile" (middle_end/closure/closure.ml[96,3737+6]..[96,3737+12])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[96,3737+12]..[96,3737+24])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[96,3737+13]..[96,3737+17])
                                  Ppat_var "cond" (middle_end/closure/closure.ml[96,3737+13]..[96,3737+17])
                                pattern (middle_end/closure/closure.ml[96,3737+19]..[96,3737+23])
                                  Ppat_var "body" (middle_end/closure/closure.ml[96,3737+19]..[96,3737+23])
                              ]
                        expression (middle_end/closure/closure.ml[96,3737+28]..[96,3737+54])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[96,3737+40]..[96,3737+42])
                            Pexp_ident "||" (middle_end/closure/closure.ml[96,3737+40]..[96,3737+42])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[96,3737+28]..[96,3737+39])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[96,3737+28]..[96,3737+34])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[96,3737+28]..[96,3737+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[96,3737+35]..[96,3737+39])
                                      Pexp_ident "cond" (middle_end/closure/closure.ml[96,3737+35]..[96,3737+39])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[96,3737+43]..[96,3737+54])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[96,3737+43]..[96,3737+49])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[96,3737+43]..[96,3737+49])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[96,3737+50]..[96,3737+54])
                                      Pexp_ident "body" (middle_end/closure/closure.ml[96,3737+50]..[96,3737+54])
                                ]
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[97,3792+6]..[97,3792+35])
                          Ppat_construct "Ufor" (middle_end/closure/closure.ml[97,3792+6]..[97,3792+10])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[97,3792+10]..[97,3792+35])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[97,3792+11]..[97,3792+14])
                                  Ppat_var "_id" (middle_end/closure/closure.ml[97,3792+11]..[97,3792+14])
                                pattern (middle_end/closure/closure.ml[97,3792+16]..[97,3792+18])
                                  Ppat_var "lo" (middle_end/closure/closure.ml[97,3792+16]..[97,3792+18])
                                pattern (middle_end/closure/closure.ml[97,3792+20]..[97,3792+22])
                                  Ppat_var "hi" (middle_end/closure/closure.ml[97,3792+20]..[97,3792+22])
                                pattern (middle_end/closure/closure.ml[97,3792+24]..[97,3792+28])
                                  Ppat_var "_dir" (middle_end/closure/closure.ml[97,3792+24]..[97,3792+28])
                                pattern (middle_end/closure/closure.ml[97,3792+30]..[97,3792+34])
                                  Ppat_var "body" (middle_end/closure/closure.ml[97,3792+30]..[97,3792+34])
                              ]
                        expression (middle_end/closure/closure.ml[97,3792+39]..[97,3792+76])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[97,3792+49]..[97,3792+51])
                            Pexp_ident "||" (middle_end/closure/closure.ml[97,3792+49]..[97,3792+51])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[97,3792+39]..[97,3792+48])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[97,3792+39]..[97,3792+45])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[97,3792+39]..[97,3792+45])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[97,3792+46]..[97,3792+48])
                                      Pexp_ident "lo" (middle_end/closure/closure.ml[97,3792+46]..[97,3792+48])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[97,3792+52]..[97,3792+76])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[97,3792+62]..[97,3792+64])
                                  Pexp_ident "||" (middle_end/closure/closure.ml[97,3792+62]..[97,3792+64])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[97,3792+52]..[97,3792+61])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[97,3792+52]..[97,3792+58])
                                        Pexp_ident "occurs" (middle_end/closure/closure.ml[97,3792+52]..[97,3792+58])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[97,3792+59]..[97,3792+61])
                                            Pexp_ident "hi" (middle_end/closure/closure.ml[97,3792+59]..[97,3792+61])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[97,3792+65]..[97,3792+76])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[97,3792+65]..[97,3792+71])
                                        Pexp_ident "occurs" (middle_end/closure/closure.ml[97,3792+65]..[97,3792+71])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[97,3792+72]..[97,3792+76])
                                            Pexp_ident "body" (middle_end/closure/closure.ml[97,3792+72]..[97,3792+76])
                                      ]
                                ]
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[98,3869+6]..[98,3869+20])
                          Ppat_construct "Uassign" (middle_end/closure/closure.ml[98,3869+6]..[98,3869+13])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[98,3869+13]..[98,3869+20])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[98,3869+14]..[98,3869+16])
                                  Ppat_var "id" (middle_end/closure/closure.ml[98,3869+14]..[98,3869+16])
                                pattern (middle_end/closure/closure.ml[98,3869+18]..[98,3869+19])
                                  Ppat_var "u" (middle_end/closure/closure.ml[98,3869+18]..[98,3869+19])
                              ]
                        expression (middle_end/closure/closure.ml[98,3869+24]..[98,3869+44])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[98,3869+33]..[98,3869+35])
                            Pexp_ident "||" (middle_end/closure/closure.ml[98,3869+33]..[98,3869+35])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[98,3869+24]..[98,3869+32])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[98,3869+27]..[98,3869+28])
                                  Pexp_ident "=" (middle_end/closure/closure.ml[98,3869+27]..[98,3869+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[98,3869+24]..[98,3869+26])
                                      Pexp_ident "id" (middle_end/closure/closure.ml[98,3869+24]..[98,3869+26])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[98,3869+29]..[98,3869+32])
                                      Pexp_ident "var" (middle_end/closure/closure.ml[98,3869+29]..[98,3869+32])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[98,3869+36]..[98,3869+44])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[98,3869+36]..[98,3869+42])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[98,3869+36]..[98,3869+42])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[98,3869+43]..[98,3869+44])
                                      Pexp_ident "u" (middle_end/closure/closure.ml[98,3869+43]..[98,3869+44])
                                ]
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[99,3914+6]..[99,3914+33])
                          Ppat_construct "Usend" (middle_end/closure/closure.ml[99,3914+6]..[99,3914+11])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[99,3914+11]..[99,3914+33])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[99,3914+12]..[99,3914+13])
                                  Ppat_any
                                pattern (middle_end/closure/closure.ml[99,3914+15]..[99,3914+18])
                                  Ppat_var "met" (middle_end/closure/closure.ml[99,3914+15]..[99,3914+18])
                                pattern (middle_end/closure/closure.ml[99,3914+20]..[99,3914+23])
                                  Ppat_var "obj" (middle_end/closure/closure.ml[99,3914+20]..[99,3914+23])
                                pattern (middle_end/closure/closure.ml[99,3914+25]..[99,3914+29])
                                  Ppat_var "args" (middle_end/closure/closure.ml[99,3914+25]..[99,3914+29])
                                pattern (middle_end/closure/closure.ml[99,3914+31]..[99,3914+32])
                                  Ppat_any
                              ]
                        expression (middle_end/closure/closure.ml[100,3951+8]..[100,3951+59])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[100,3951+19]..[100,3951+21])
                            Pexp_ident "||" (middle_end/closure/closure.ml[100,3951+19]..[100,3951+21])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[100,3951+8]..[100,3951+18])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[100,3951+8]..[100,3951+14])
                                  Pexp_ident "occurs" (middle_end/closure/closure.ml[100,3951+8]..[100,3951+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[100,3951+15]..[100,3951+18])
                                      Pexp_ident "met" (middle_end/closure/closure.ml[100,3951+15]..[100,3951+18])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[100,3951+22]..[100,3951+59])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[100,3951+33]..[100,3951+35])
                                  Pexp_ident "||" (middle_end/closure/closure.ml[100,3951+33]..[100,3951+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[100,3951+22]..[100,3951+32])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[100,3951+22]..[100,3951+28])
                                        Pexp_ident "occurs" (middle_end/closure/closure.ml[100,3951+22]..[100,3951+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[100,3951+29]..[100,3951+32])
                                            Pexp_ident "obj" (middle_end/closure/closure.ml[100,3951+29]..[100,3951+32])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[100,3951+36]..[100,3951+59])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[100,3951+36]..[100,3951+47])
                                        Pexp_ident "List.exists" (middle_end/closure/closure.ml[100,3951+36]..[100,3951+47])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[100,3951+48]..[100,3951+54])
                                            Pexp_ident "occurs" (middle_end/closure/closure.ml[100,3951+48]..[100,3951+54])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[100,3951+55]..[100,3951+59])
                                            Pexp_ident "args" (middle_end/closure/closure.ml[100,3951+55]..[100,3951+59])
                                      ]
                                ]
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[101,4011+6]..[101,4011+18])
                          Ppat_construct "Uunreachable" (middle_end/closure/closure.ml[101,4011+6]..[101,4011+18])
                          None
                        expression (middle_end/closure/closure.ml[101,4011+22]..[101,4011+27])
                          Pexp_construct "false" (middle_end/closure/closure.ml[101,4011+22]..[101,4011+27])
                          None
                    ]
                <def>
                  pattern (middle_end/closure/closure.ml[102,4039+6]..[102,4039+18])
                    Ppat_var "occurs_array" (middle_end/closure/closure.ml[102,4039+6]..[102,4039+18])
                  expression (middle_end/closure/closure.ml[102,4039+19]..[109,4192+10]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/closure/closure.ml[102,4039+19]..[102,4039+20])
                      Ppat_var "a" (middle_end/closure/closure.ml[102,4039+19]..[102,4039+20])
                    expression (middle_end/closure/closure.ml[103,4062+4]..[109,4192+10])
                      Pexp_try
                      expression (middle_end/closure/closure.ml[104,4070+6]..[107,4163+11])
                        Pexp_sequence
                        expression (middle_end/closure/closure.ml[104,4070+6]..[106,4151+10])
                          Pexp_for Up
                          pattern (middle_end/closure/closure.ml[104,4070+10]..[104,4070+11])
                            Ppat_var "i" (middle_end/closure/closure.ml[104,4070+10]..[104,4070+11])
                          expression (middle_end/closure/closure.ml[104,4070+14]..[104,4070+15])
                            Pexp_constant PConst_int (0,None)
                          expression (middle_end/closure/closure.ml[104,4070+19]..[104,4070+37])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[104,4070+34]..[104,4070+35])
                              Pexp_ident "-" (middle_end/closure/closure.ml[104,4070+34]..[104,4070+35])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[104,4070+19]..[104,4070+33])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[104,4070+19]..[104,4070+31])
                                    Pexp_ident "Array.length" (middle_end/closure/closure.ml[104,4070+19]..[104,4070+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[104,4070+32]..[104,4070+33])
                                        Pexp_ident "a" (middle_end/closure/closure.ml[104,4070+32]..[104,4070+33])
                                  ]
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[104,4070+36]..[104,4070+37])
                                  Pexp_constant PConst_int (1,None)
                            ]
                          expression (middle_end/closure/closure.ml[105,4111+8]..[105,4111+39])
                            Pexp_ifthenelse
                            expression (middle_end/closure/closure.ml[105,4111+11]..[105,4111+23])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[105,4111+11]..[105,4111+17])
                                Pexp_ident "occurs" (middle_end/closure/closure.ml[105,4111+11]..[105,4111+17])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[105,4111+18]..[105,4111+23])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[105,4111+18]..[105,4111+23]) ghost
                                      Pexp_ident "Array.get" (middle_end/closure/closure.ml[105,4111+18]..[105,4111+23]) ghost
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[105,4111+18]..[105,4111+19])
                                          Pexp_ident "a" (middle_end/closure/closure.ml[105,4111+18]..[105,4111+19])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[105,4111+21]..[105,4111+22])
                                          Pexp_ident "i" (middle_end/closure/closure.ml[105,4111+21]..[105,4111+22])
                                    ]
                              ]
                            expression (middle_end/closure/closure.ml[105,4111+29]..[105,4111+39])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[105,4111+29]..[105,4111+34])
                                Pexp_ident "raise" (middle_end/closure/closure.ml[105,4111+29]..[105,4111+34])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[105,4111+35]..[105,4111+39])
                                    Pexp_construct "Exit" (middle_end/closure/closure.ml[105,4111+35]..[105,4111+39])
                                    None
                              ]
                            None
                        expression (middle_end/closure/closure.ml[107,4163+6]..[107,4163+11])
                          Pexp_construct "false" (middle_end/closure/closure.ml[107,4163+6]..[107,4163+11])
                          None
                      [
                        <case>
                          pattern (middle_end/closure/closure.ml[108,4175+9]..[108,4175+13])
                            Ppat_construct "Exit" (middle_end/closure/closure.ml[108,4175+9]..[108,4175+13])
                            None
                          expression (middle_end/closure/closure.ml[109,4192+6]..[109,4192+10])
                            Pexp_construct "true" (middle_end/closure/closure.ml[109,4192+6]..[109,4192+10])
                            None
                      ]
              ]
              expression (middle_end/closure/closure.ml[110,4203+5]..[110,4203+13])
                Pexp_apply
                expression (middle_end/closure/closure.ml[110,4203+5]..[110,4203+11])
                  Pexp_ident "occurs" (middle_end/closure/closure.ml[110,4203+5]..[110,4203+11])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/closure/closure.ml[110,4203+12]..[110,4203+13])
                      Pexp_ident "u" (middle_end/closure/closure.ml[110,4203+12]..[110,4203+13])
                ]
    ]
  structure_item (middle_end/closure/closure.ml[115,4307+0]..[146,5425+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[115,4307+4]..[115,4307+13])
          Ppat_var "prim_size" (middle_end/closure/closure.ml[115,4307+4]..[115,4307+13])
        expression (middle_end/closure/closure.ml[115,4307+14]..[146,5425+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[115,4307+14]..[115,4307+18])
            Ppat_var "prim" (middle_end/closure/closure.ml[115,4307+14]..[115,4307+18])
          expression (middle_end/closure/closure.ml[115,4307+19]..[146,5425+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[115,4307+19]..[115,4307+23])
              Ppat_var "args" (middle_end/closure/closure.ml[115,4307+19]..[115,4307+23])
            expression (middle_end/closure/closure.ml[116,4333+2]..[146,5425+10])
              Pexp_open Fresh
              module_expr (middle_end/closure/closure.ml[116,4333+11]..[116,4333+29])
                Pmod_ident "Clambda_primitives" (middle_end/closure/closure.ml[116,4333+11]..[116,4333+29])
              expression (middle_end/closure/closure.ml[117,4366+2]..[146,5425+10])
                Pexp_match
                expression (middle_end/closure/closure.ml[117,4366+8]..[117,4366+12])
                  Pexp_ident "prim" (middle_end/closure/closure.ml[117,4366+8]..[117,4366+12])
                [
                  <case>
                    pattern (middle_end/closure/closure.ml[118,4384+4]..[118,4384+18])
                      Ppat_construct "Pread_symbol" (middle_end/closure/closure.ml[118,4384+4]..[118,4384+16])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[118,4384+17]..[118,4384+18])
                          Ppat_any
                    expression (middle_end/closure/closure.ml[118,4384+22]..[118,4384+23])
                      Pexp_constant PConst_int (1,None)
                  <case>
                    pattern (middle_end/closure/closure.ml[119,4408+4]..[119,4408+16])
                      Ppat_construct "Pmakeblock" (middle_end/closure/closure.ml[119,4408+4]..[119,4408+14])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[119,4408+15]..[119,4408+16])
                          Ppat_any
                    expression (middle_end/closure/closure.ml[119,4408+20]..[119,4408+40])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[119,4408+22]..[119,4408+23])
                        Pexp_ident "+" (middle_end/closure/closure.ml[119,4408+22]..[119,4408+23])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[119,4408+20]..[119,4408+21])
                            Pexp_constant PConst_int (5,None)
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[119,4408+24]..[119,4408+40])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[119,4408+24]..[119,4408+35])
                              Pexp_ident "List.length" (middle_end/closure/closure.ml[119,4408+24]..[119,4408+35])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[119,4408+36]..[119,4408+40])
                                  Pexp_ident "args" (middle_end/closure/closure.ml[119,4408+36]..[119,4408+40])
                            ]
                      ]
                  <case>
                    pattern (middle_end/closure/closure.ml[120,4449+4]..[120,4449+12])
                      Ppat_construct "Pfield" (middle_end/closure/closure.ml[120,4449+4]..[120,4449+10])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[120,4449+11]..[120,4449+12])
                          Ppat_any
                    expression (middle_end/closure/closure.ml[120,4449+16]..[120,4449+17])
                      Pexp_constant PConst_int (1,None)
                  <case>
                    pattern (middle_end/closure/closure.ml[121,4467+4]..[121,4467+30])
                      Ppat_construct "Psetfield" (middle_end/closure/closure.ml[121,4467+4]..[121,4467+13])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[121,4467+13]..[121,4467+30])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[121,4467+14]..[121,4467+16])
                              Ppat_var "_f" (middle_end/closure/closure.ml[121,4467+14]..[121,4467+16])
                            pattern (middle_end/closure/closure.ml[121,4467+18]..[121,4467+23])
                              Ppat_var "isptr" (middle_end/closure/closure.ml[121,4467+18]..[121,4467+23])
                            pattern (middle_end/closure/closure.ml[121,4467+25]..[121,4467+29])
                              Ppat_var "init" (middle_end/closure/closure.ml[121,4467+25]..[121,4467+29])
                          ]
                    expression (middle_end/closure/closure.ml[122,4501+4]..[128,4707+7])
                      Pexp_match
                      expression (middle_end/closure/closure.ml[122,4501+16]..[122,4501+20])
                        Pexp_ident "init" (middle_end/closure/closure.ml[122,4501+16]..[122,4501+20])
                      [
                        <case>
                          pattern (middle_end/closure/closure.ml[123,4527+6]..[123,4527+25])
                            Ppat_construct "Root_initialization" (middle_end/closure/closure.ml[123,4527+6]..[123,4527+25])
                            None
                          expression (middle_end/closure/closure.ml[123,4527+29]..[123,4527+30])
                            Pexp_constant PConst_int (1,None)
                        <case>
                          pattern (middle_end/closure/closure.ml[124,4598+6]..[124,4598+38])
                            Ppat_or
                            pattern (middle_end/closure/closure.ml[124,4598+6]..[124,4598+16])
                              Ppat_construct "Assignment" (middle_end/closure/closure.ml[124,4598+6]..[124,4598+16])
                              None
                            pattern (middle_end/closure/closure.ml[124,4598+19]..[124,4598+38])
                              Ppat_construct "Heap_initialization" (middle_end/closure/closure.ml[124,4598+19]..[124,4598+38])
                              None
                          expression (middle_end/closure/closure.ml[125,4640+6]..[127,4684+22])
                            Pexp_match
                            expression (middle_end/closure/closure.ml[125,4640+12]..[125,4640+17])
                              Pexp_ident "isptr" (middle_end/closure/closure.ml[125,4640+12]..[125,4640+17])
                            [
                              <case>
                                pattern (middle_end/closure/closure.ml[126,4663+8]..[126,4663+15])
                                  Ppat_construct "Pointer" (middle_end/closure/closure.ml[126,4663+8]..[126,4663+15])
                                  None
                                expression (middle_end/closure/closure.ml[126,4663+19]..[126,4663+20])
                                  Pexp_constant PConst_int (4,None)
                              <case>
                                pattern (middle_end/closure/closure.ml[127,4684+8]..[127,4684+17])
                                  Ppat_construct "Immediate" (middle_end/closure/closure.ml[127,4684+8]..[127,4684+17])
                                  None
                                expression (middle_end/closure/closure.ml[127,4684+21]..[127,4684+22])
                                  Pexp_constant PConst_int (1,None)
                            ]
                      ]
                  <case>
                    pattern (middle_end/closure/closure.ml[129,4715+4]..[129,4715+17])
                      Ppat_construct "Pfloatfield" (middle_end/closure/closure.ml[129,4715+4]..[129,4715+15])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[129,4715+16]..[129,4715+17])
                          Ppat_any
                    expression (middle_end/closure/closure.ml[129,4715+21]..[129,4715+22])
                      Pexp_constant PConst_int (1,None)
                  <case>
                    pattern (middle_end/closure/closure.ml[130,4738+4]..[130,4738+20])
                      Ppat_construct "Psetfloatfield" (middle_end/closure/closure.ml[130,4738+4]..[130,4738+18])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[130,4738+19]..[130,4738+20])
                          Ppat_any
                    expression (middle_end/closure/closure.ml[130,4738+24]..[130,4738+25])
                      Pexp_constant PConst_int (1,None)
                  <case>
                    pattern (middle_end/closure/closure.ml[131,4764+4]..[131,4764+16])
                      Ppat_construct "Pduprecord" (middle_end/closure/closure.ml[131,4764+4]..[131,4764+14])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[131,4764+15]..[131,4764+16])
                          Ppat_any
                    expression (middle_end/closure/closure.ml[131,4764+20]..[131,4764+41])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[131,4764+23]..[131,4764+24])
                        Pexp_ident "+" (middle_end/closure/closure.ml[131,4764+23]..[131,4764+24])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[131,4764+20]..[131,4764+22])
                            Pexp_constant PConst_int (10,None)
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[131,4764+25]..[131,4764+41])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[131,4764+25]..[131,4764+36])
                              Pexp_ident "List.length" (middle_end/closure/closure.ml[131,4764+25]..[131,4764+36])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[131,4764+37]..[131,4764+41])
                                  Pexp_ident "args" (middle_end/closure/closure.ml[131,4764+37]..[131,4764+41])
                            ]
                      ]
                  <case>
                    pattern (middle_end/closure/closure.ml[132,4806+4]..[132,4806+12])
                      Ppat_construct "Pccall" (middle_end/closure/closure.ml[132,4806+4]..[132,4806+10])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[132,4806+11]..[132,4806+12])
                          Ppat_var "p" (middle_end/closure/closure.ml[132,4806+11]..[132,4806+12])
                    expression (middle_end/closure/closure.ml[132,4806+16]..[132,4806+67])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[132,4806+49]..[132,4806+50])
                        Pexp_ident "+" (middle_end/closure/closure.ml[132,4806+49]..[132,4806+50])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[132,4806+16]..[132,4806+48])
                            Pexp_ifthenelse
                            expression (middle_end/closure/closure.ml[132,4806+20]..[132,4806+32])
                              Pexp_field
                              expression (middle_end/closure/closure.ml[132,4806+20]..[132,4806+21])
                                Pexp_ident "p" (middle_end/closure/closure.ml[132,4806+20]..[132,4806+21])
                              "prim_alloc" (middle_end/closure/closure.ml[132,4806+22]..[132,4806+32])
                            expression (middle_end/closure/closure.ml[132,4806+38]..[132,4806+40])
                              Pexp_constant PConst_int (10,None)
                            Some
                              expression (middle_end/closure/closure.ml[132,4806+46]..[132,4806+47])
                                Pexp_constant PConst_int (4,None)
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[132,4806+51]..[132,4806+67])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[132,4806+51]..[132,4806+62])
                              Pexp_ident "List.length" (middle_end/closure/closure.ml[132,4806+51]..[132,4806+62])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[132,4806+63]..[132,4806+67])
                                  Pexp_ident "args" (middle_end/closure/closure.ml[132,4806+63]..[132,4806+67])
                            ]
                      ]
                  <case>
                    pattern (middle_end/closure/closure.ml[133,4874+4]..[133,4874+12])
                      Ppat_construct "Praise" (middle_end/closure/closure.ml[133,4874+4]..[133,4874+10])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[133,4874+11]..[133,4874+12])
                          Ppat_any
                    expression (middle_end/closure/closure.ml[133,4874+16]..[133,4874+17])
                      Pexp_constant PConst_int (4,None)
                  <case>
                    pattern (middle_end/closure/closure.ml[134,4892+4]..[134,4892+17])
                      Ppat_construct "Pstringlength" (middle_end/closure/closure.ml[134,4892+4]..[134,4892+17])
                      None
                    expression (middle_end/closure/closure.ml[134,4892+21]..[134,4892+22])
                      Pexp_constant PConst_int (5,None)
                  <case>
                    pattern (middle_end/closure/closure.ml[135,4915+4]..[135,4915+16])
                      Ppat_construct "Pbyteslength" (middle_end/closure/closure.ml[135,4915+4]..[135,4915+16])
                      None
                    expression (middle_end/closure/closure.ml[135,4915+20]..[135,4915+21])
                      Pexp_constant PConst_int (5,None)
                  <case>
                    pattern (middle_end/closure/closure.ml[136,4937+4]..[136,4937+15])
                      Ppat_construct "Pstringrefs" (middle_end/closure/closure.ml[136,4937+4]..[136,4937+15])
                      None
                    expression (middle_end/closure/closure.ml[136,4937+20]..[136,4937+21])
                      Pexp_constant PConst_int (6,None)
                  <case>
                    pattern (middle_end/closure/closure.ml[137,4959+4]..[137,4959+27])
                      Ppat_or
                      pattern (middle_end/closure/closure.ml[137,4959+4]..[137,4959+14])
                        Ppat_construct "Pbytesrefs" (middle_end/closure/closure.ml[137,4959+4]..[137,4959+14])
                        None
                      pattern (middle_end/closure/closure.ml[137,4959+17]..[137,4959+27])
                        Ppat_construct "Pbytessets" (middle_end/closure/closure.ml[137,4959+17]..[137,4959+27])
                        None
                    expression (middle_end/closure/closure.ml[137,4959+31]..[137,4959+32])
                      Pexp_constant PConst_int (6,None)
                  <case>
                    pattern (middle_end/closure/closure.ml[138,4992+4]..[138,4992+16])
                      Ppat_construct "Pmakearray" (middle_end/closure/closure.ml[138,4992+4]..[138,4992+14])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[138,4992+15]..[138,4992+16])
                          Ppat_any
                    expression (middle_end/closure/closure.ml[138,4992+20]..[138,4992+40])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[138,4992+22]..[138,4992+23])
                        Pexp_ident "+" (middle_end/closure/closure.ml[138,4992+22]..[138,4992+23])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[138,4992+20]..[138,4992+21])
                            Pexp_constant PConst_int (5,None)
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[138,4992+24]..[138,4992+40])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[138,4992+24]..[138,4992+35])
                              Pexp_ident "List.length" (middle_end/closure/closure.ml[138,4992+24]..[138,4992+35])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[138,4992+36]..[138,4992+40])
                                  Pexp_ident "args" (middle_end/closure/closure.ml[138,4992+36]..[138,4992+40])
                            ]
                      ]
                  <case>
                    pattern (middle_end/closure/closure.ml[139,5033+4]..[139,5033+21])
                      Ppat_construct "Parraylength" (middle_end/closure/closure.ml[139,5033+4]..[139,5033+16])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[139,5033+17]..[139,5033+21])
                          Ppat_var "kind" (middle_end/closure/closure.ml[139,5033+17]..[139,5033+21])
                    expression (middle_end/closure/closure.ml[139,5033+25]..[139,5033+58])
                      Pexp_ifthenelse
                      expression (middle_end/closure/closure.ml[139,5033+28]..[139,5033+44])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[139,5033+33]..[139,5033+34])
                          Pexp_ident "=" (middle_end/closure/closure.ml[139,5033+33]..[139,5033+34])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[139,5033+28]..[139,5033+32])
                              Pexp_ident "kind" (middle_end/closure/closure.ml[139,5033+28]..[139,5033+32])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[139,5033+35]..[139,5033+44])
                              Pexp_construct "Pgenarray" (middle_end/closure/closure.ml[139,5033+35]..[139,5033+44])
                              None
                        ]
                      expression (middle_end/closure/closure.ml[139,5033+50]..[139,5033+51])
                        Pexp_constant PConst_int (6,None)
                      Some
                        expression (middle_end/closure/closure.ml[139,5033+57]..[139,5033+58])
                          Pexp_constant PConst_int (2,None)
                  <case>
                    pattern (middle_end/closure/closure.ml[140,5092+4]..[140,5092+19])
                      Ppat_construct "Parrayrefu" (middle_end/closure/closure.ml[140,5092+4]..[140,5092+14])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[140,5092+15]..[140,5092+19])
                          Ppat_var "kind" (middle_end/closure/closure.ml[140,5092+15]..[140,5092+19])
                    expression (middle_end/closure/closure.ml[140,5092+23]..[140,5092+57])
                      Pexp_ifthenelse
                      expression (middle_end/closure/closure.ml[140,5092+26]..[140,5092+42])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[140,5092+31]..[140,5092+32])
                          Pexp_ident "=" (middle_end/closure/closure.ml[140,5092+31]..[140,5092+32])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[140,5092+26]..[140,5092+30])
                              Pexp_ident "kind" (middle_end/closure/closure.ml[140,5092+26]..[140,5092+30])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[140,5092+33]..[140,5092+42])
                              Pexp_construct "Pgenarray" (middle_end/closure/closure.ml[140,5092+33]..[140,5092+42])
                              None
                        ]
                      expression (middle_end/closure/closure.ml[140,5092+48]..[140,5092+50])
                        Pexp_constant PConst_int (12,None)
                      Some
                        expression (middle_end/closure/closure.ml[140,5092+56]..[140,5092+57])
                          Pexp_constant PConst_int (2,None)
                  <case>
                    pattern (middle_end/closure/closure.ml[141,5150+4]..[141,5150+19])
                      Ppat_construct "Parraysetu" (middle_end/closure/closure.ml[141,5150+4]..[141,5150+14])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[141,5150+15]..[141,5150+19])
                          Ppat_var "kind" (middle_end/closure/closure.ml[141,5150+15]..[141,5150+19])
                    expression (middle_end/closure/closure.ml[141,5150+23]..[141,5150+57])
                      Pexp_ifthenelse
                      expression (middle_end/closure/closure.ml[141,5150+26]..[141,5150+42])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[141,5150+31]..[141,5150+32])
                          Pexp_ident "=" (middle_end/closure/closure.ml[141,5150+31]..[141,5150+32])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[141,5150+26]..[141,5150+30])
                              Pexp_ident "kind" (middle_end/closure/closure.ml[141,5150+26]..[141,5150+30])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[141,5150+33]..[141,5150+42])
                              Pexp_construct "Pgenarray" (middle_end/closure/closure.ml[141,5150+33]..[141,5150+42])
                              None
                        ]
                      expression (middle_end/closure/closure.ml[141,5150+48]..[141,5150+50])
                        Pexp_constant PConst_int (16,None)
                      Some
                        expression (middle_end/closure/closure.ml[141,5150+56]..[141,5150+57])
                          Pexp_constant PConst_int (4,None)
                  <case>
                    pattern (middle_end/closure/closure.ml[142,5208+4]..[142,5208+19])
                      Ppat_construct "Parrayrefs" (middle_end/closure/closure.ml[142,5208+4]..[142,5208+14])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[142,5208+15]..[142,5208+19])
                          Ppat_var "kind" (middle_end/closure/closure.ml[142,5208+15]..[142,5208+19])
                    expression (middle_end/closure/closure.ml[142,5208+23]..[142,5208+57])
                      Pexp_ifthenelse
                      expression (middle_end/closure/closure.ml[142,5208+26]..[142,5208+42])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[142,5208+31]..[142,5208+32])
                          Pexp_ident "=" (middle_end/closure/closure.ml[142,5208+31]..[142,5208+32])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[142,5208+26]..[142,5208+30])
                              Pexp_ident "kind" (middle_end/closure/closure.ml[142,5208+26]..[142,5208+30])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[142,5208+33]..[142,5208+42])
                              Pexp_construct "Pgenarray" (middle_end/closure/closure.ml[142,5208+33]..[142,5208+42])
                              None
                        ]
                      expression (middle_end/closure/closure.ml[142,5208+48]..[142,5208+50])
                        Pexp_constant PConst_int (18,None)
                      Some
                        expression (middle_end/closure/closure.ml[142,5208+56]..[142,5208+57])
                          Pexp_constant PConst_int (8,None)
                  <case>
                    pattern (middle_end/closure/closure.ml[143,5266+4]..[143,5266+19])
                      Ppat_construct "Parraysets" (middle_end/closure/closure.ml[143,5266+4]..[143,5266+14])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[143,5266+15]..[143,5266+19])
                          Ppat_var "kind" (middle_end/closure/closure.ml[143,5266+15]..[143,5266+19])
                    expression (middle_end/closure/closure.ml[143,5266+23]..[143,5266+58])
                      Pexp_ifthenelse
                      expression (middle_end/closure/closure.ml[143,5266+26]..[143,5266+42])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[143,5266+31]..[143,5266+32])
                          Pexp_ident "=" (middle_end/closure/closure.ml[143,5266+31]..[143,5266+32])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[143,5266+26]..[143,5266+30])
                              Pexp_ident "kind" (middle_end/closure/closure.ml[143,5266+26]..[143,5266+30])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[143,5266+33]..[143,5266+42])
                              Pexp_construct "Pgenarray" (middle_end/closure/closure.ml[143,5266+33]..[143,5266+42])
                              None
                        ]
                      expression (middle_end/closure/closure.ml[143,5266+48]..[143,5266+50])
                        Pexp_constant PConst_int (22,None)
                      Some
                        expression (middle_end/closure/closure.ml[143,5266+56]..[143,5266+58])
                          Pexp_constant PConst_int (10,None)
                  <case>
                    pattern (middle_end/closure/closure.ml[144,5325+4]..[144,5325+32])
                      Ppat_construct "Pbigarrayref" (middle_end/closure/closure.ml[144,5325+4]..[144,5325+16])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[144,5325+16]..[144,5325+32])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[144,5325+17]..[144,5325+18])
                              Ppat_any
                            pattern (middle_end/closure/closure.ml[144,5325+20]..[144,5325+25])
                              Ppat_var "ndims" (middle_end/closure/closure.ml[144,5325+20]..[144,5325+25])
                            pattern (middle_end/closure/closure.ml[144,5325+27]..[144,5325+28])
                              Ppat_any
                            pattern (middle_end/closure/closure.ml[144,5325+30]..[144,5325+31])
                              Ppat_any
                          ]
                    expression (middle_end/closure/closure.ml[144,5325+36]..[144,5325+49])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[144,5325+38]..[144,5325+39])
                        Pexp_ident "+" (middle_end/closure/closure.ml[144,5325+38]..[144,5325+39])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[144,5325+36]..[144,5325+37])
                            Pexp_constant PConst_int (4,None)
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[144,5325+40]..[144,5325+49])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[144,5325+46]..[144,5325+47])
                              Pexp_ident "*" (middle_end/closure/closure.ml[144,5325+46]..[144,5325+47])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[144,5325+40]..[144,5325+45])
                                  Pexp_ident "ndims" (middle_end/closure/closure.ml[144,5325+40]..[144,5325+45])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[144,5325+48]..[144,5325+49])
                                  Pexp_constant PConst_int (6,None)
                            ]
                      ]
                  <case>
                    pattern (middle_end/closure/closure.ml[145,5375+4]..[145,5375+32])
                      Ppat_construct "Pbigarrayset" (middle_end/closure/closure.ml[145,5375+4]..[145,5375+16])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[145,5375+16]..[145,5375+32])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[145,5375+17]..[145,5375+18])
                              Ppat_any
                            pattern (middle_end/closure/closure.ml[145,5375+20]..[145,5375+25])
                              Ppat_var "ndims" (middle_end/closure/closure.ml[145,5375+20]..[145,5375+25])
                            pattern (middle_end/closure/closure.ml[145,5375+27]..[145,5375+28])
                              Ppat_any
                            pattern (middle_end/closure/closure.ml[145,5375+30]..[145,5375+31])
                              Ppat_any
                          ]
                    expression (middle_end/closure/closure.ml[145,5375+36]..[145,5375+49])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[145,5375+38]..[145,5375+39])
                        Pexp_ident "+" (middle_end/closure/closure.ml[145,5375+38]..[145,5375+39])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[145,5375+36]..[145,5375+37])
                            Pexp_constant PConst_int (4,None)
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[145,5375+40]..[145,5375+49])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[145,5375+46]..[145,5375+47])
                              Pexp_ident "*" (middle_end/closure/closure.ml[145,5375+46]..[145,5375+47])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[145,5375+40]..[145,5375+45])
                                  Pexp_ident "ndims" (middle_end/closure/closure.ml[145,5375+40]..[145,5375+45])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[145,5375+48]..[145,5375+49])
                                  Pexp_constant PConst_int (6,None)
                            ]
                      ]
                  <case>
                    pattern (middle_end/closure/closure.ml[146,5425+4]..[146,5425+5])
                      Ppat_any
                    expression (middle_end/closure/closure.ml[146,5425+9]..[146,5425+10])
                      Pexp_constant PConst_int (2,None)
                ]
    ]
  structure_item (middle_end/closure/closure.ml[150,5515+0]..[213,7945+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[150,5515+4]..[150,5515+18])
          Ppat_var "lambda_smaller" (middle_end/closure/closure.ml[150,5515+4]..[150,5515+18])
        expression (middle_end/closure/closure.ml[150,5515+19]..[213,7945+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[150,5515+19]..[150,5515+22])
            Ppat_var "lam" (middle_end/closure/closure.ml[150,5515+19]..[150,5515+22])
          expression (middle_end/closure/closure.ml[150,5515+23]..[213,7945+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[150,5515+23]..[150,5515+32])
              Ppat_var "threshold" (middle_end/closure/closure.ml[150,5515+23]..[150,5515+32])
            expression (middle_end/closure/closure.ml[151,5550+2]..[213,7945+9])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/closure/closure.ml[151,5550+6]..[151,5550+10])
                    Ppat_var "size" (middle_end/closure/closure.ml[151,5550+6]..[151,5550+10])
                  expression (middle_end/closure/closure.ml[151,5550+13]..[151,5550+18])
                    Pexp_apply
                    expression (middle_end/closure/closure.ml[151,5550+13]..[151,5550+16])
                      Pexp_ident "ref" (middle_end/closure/closure.ml[151,5550+13]..[151,5550+16])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[151,5550+17]..[151,5550+18])
                          Pexp_constant PConst_int (0,None)
                    ]
              ]
              expression (middle_end/closure/closure.ml[152,5572+2]..[213,7945+9])
                Pexp_let Rec
                [
                  <def>
                    pattern (middle_end/closure/closure.ml[152,5572+10]..[152,5572+21])
                      Ppat_var "lambda_size" (middle_end/closure/closure.ml[152,5572+10]..[152,5572+21])
                    expression (middle_end/closure/closure.ml[152,5572+22]..[207,7752+24]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/closure/closure.ml[152,5572+22]..[152,5572+25])
                        Ppat_var "lam" (middle_end/closure/closure.ml[152,5572+22]..[152,5572+25])
                      expression (middle_end/closure/closure.ml[153,5600+4]..[207,7752+24])
                        Pexp_sequence
                        expression (middle_end/closure/closure.ml[153,5600+4]..[153,5600+40])
                          Pexp_ifthenelse
                          expression (middle_end/closure/closure.ml[153,5600+7]..[153,5600+24])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[153,5600+13]..[153,5600+14])
                              Pexp_ident ">" (middle_end/closure/closure.ml[153,5600+13]..[153,5600+14])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[153,5600+7]..[153,5600+12])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[153,5600+7]..[153,5600+8])
                                    Pexp_ident "!" (middle_end/closure/closure.ml[153,5600+7]..[153,5600+8])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[153,5600+8]..[153,5600+12])
                                        Pexp_ident "size" (middle_end/closure/closure.ml[153,5600+8]..[153,5600+12])
                                  ]
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[153,5600+15]..[153,5600+24])
                                  Pexp_ident "threshold" (middle_end/closure/closure.ml[153,5600+15]..[153,5600+24])
                            ]
                          expression (middle_end/closure/closure.ml[153,5600+30]..[153,5600+40])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[153,5600+30]..[153,5600+35])
                              Pexp_ident "raise" (middle_end/closure/closure.ml[153,5600+30]..[153,5600+35])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[153,5600+36]..[153,5600+40])
                                  Pexp_construct "Exit" (middle_end/closure/closure.ml[153,5600+36]..[153,5600+40])
                                  None
                            ]
                          None
                        expression (middle_end/closure/closure.ml[154,5642+4]..[207,7752+24])
                          Pexp_match
                          expression (middle_end/closure/closure.ml[154,5642+10]..[154,5642+13])
                            Pexp_ident "lam" (middle_end/closure/closure.ml[154,5642+10]..[154,5642+13])
                          [
                            <case>
                              pattern (middle_end/closure/closure.ml[155,5661+6]..[155,5661+12])
                                Ppat_construct "Uvar" (middle_end/closure/closure.ml[155,5661+6]..[155,5661+10])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[155,5661+11]..[155,5661+12])
                                    Ppat_any
                              expression (middle_end/closure/closure.ml[155,5661+16]..[155,5661+18])
                                Pexp_construct "()" (middle_end/closure/closure.ml[155,5661+16]..[155,5661+18])
                                None
                            <case>
                              pattern (middle_end/closure/closure.ml[156,5680+6]..[156,5680+14])
                                Ppat_construct "Uconst" (middle_end/closure/closure.ml[156,5680+6]..[156,5680+12])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[156,5680+13]..[156,5680+14])
                                    Ppat_any
                              expression (middle_end/closure/closure.ml[156,5680+18]..[156,5680+27])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[156,5680+18]..[156,5680+22])
                                  Pexp_ident "incr" (middle_end/closure/closure.ml[156,5680+18]..[156,5680+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[156,5680+23]..[156,5680+27])
                                      Pexp_ident "size" (middle_end/closure/closure.ml[156,5680+23]..[156,5680+27])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[157,5708+6]..[157,5708+31])
                                Ppat_construct "Udirect_apply" (middle_end/closure/closure.ml[157,5708+6]..[157,5708+19])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[157,5708+19]..[157,5708+31])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[157,5708+20]..[157,5708+21])
                                        Ppat_any
                                      pattern (middle_end/closure/closure.ml[157,5708+23]..[157,5708+27])
                                        Ppat_var "args" (middle_end/closure/closure.ml[157,5708+23]..[157,5708+27])
                                      pattern (middle_end/closure/closure.ml[157,5708+29]..[157,5708+30])
                                        Ppat_any
                                    ]
                              expression (middle_end/closure/closure.ml[158,5743+8]..[158,5743+48])
                                Pexp_sequence
                                expression (middle_end/closure/closure.ml[158,5743+8]..[158,5743+25])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[158,5743+13]..[158,5743+15])
                                    Pexp_ident ":=" (middle_end/closure/closure.ml[158,5743+13]..[158,5743+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[158,5743+8]..[158,5743+12])
                                        Pexp_ident "size" (middle_end/closure/closure.ml[158,5743+8]..[158,5743+12])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[158,5743+16]..[158,5743+25])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[158,5743+22]..[158,5743+23])
                                          Pexp_ident "+" (middle_end/closure/closure.ml[158,5743+22]..[158,5743+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[158,5743+16]..[158,5743+21])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[158,5743+16]..[158,5743+17])
                                                Pexp_ident "!" (middle_end/closure/closure.ml[158,5743+16]..[158,5743+17])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[158,5743+17]..[158,5743+21])
                                                    Pexp_ident "size" (middle_end/closure/closure.ml[158,5743+17]..[158,5743+21])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[158,5743+24]..[158,5743+25])
                                              Pexp_constant PConst_int (4,None)
                                        ]
                                  ]
                                expression (middle_end/closure/closure.ml[158,5743+27]..[158,5743+48])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[158,5743+27]..[158,5743+43])
                                    Pexp_ident "lambda_list_size" (middle_end/closure/closure.ml[158,5743+27]..[158,5743+43])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[158,5743+44]..[158,5743+48])
                                        Pexp_ident "args" (middle_end/closure/closure.ml[158,5743+44]..[158,5743+48])
                                  ]
                            <case>
                              pattern (middle_end/closure/closure.ml[159,5792+6]..[159,5792+33])
                                Ppat_construct "Ugeneric_apply" (middle_end/closure/closure.ml[159,5792+6]..[159,5792+20])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[159,5792+20]..[159,5792+33])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[159,5792+21]..[159,5792+23])
                                        Ppat_var "fn" (middle_end/closure/closure.ml[159,5792+21]..[159,5792+23])
                                      pattern (middle_end/closure/closure.ml[159,5792+25]..[159,5792+29])
                                        Ppat_var "args" (middle_end/closure/closure.ml[159,5792+25]..[159,5792+29])
                                      pattern (middle_end/closure/closure.ml[159,5792+31]..[159,5792+32])
                                        Ppat_any
                                    ]
                              expression (middle_end/closure/closure.ml[160,5829+8]..[160,5829+64])
                                Pexp_sequence
                                expression (middle_end/closure/closure.ml[160,5829+8]..[160,5829+25])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[160,5829+13]..[160,5829+15])
                                    Pexp_ident ":=" (middle_end/closure/closure.ml[160,5829+13]..[160,5829+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[160,5829+8]..[160,5829+12])
                                        Pexp_ident "size" (middle_end/closure/closure.ml[160,5829+8]..[160,5829+12])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[160,5829+16]..[160,5829+25])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[160,5829+22]..[160,5829+23])
                                          Pexp_ident "+" (middle_end/closure/closure.ml[160,5829+22]..[160,5829+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[160,5829+16]..[160,5829+21])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[160,5829+16]..[160,5829+17])
                                                Pexp_ident "!" (middle_end/closure/closure.ml[160,5829+16]..[160,5829+17])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[160,5829+17]..[160,5829+21])
                                                    Pexp_ident "size" (middle_end/closure/closure.ml[160,5829+17]..[160,5829+21])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[160,5829+24]..[160,5829+25])
                                              Pexp_constant PConst_int (6,None)
                                        ]
                                  ]
                                expression (middle_end/closure/closure.ml[160,5829+27]..[160,5829+64])
                                  Pexp_sequence
                                  expression (middle_end/closure/closure.ml[160,5829+27]..[160,5829+41])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[160,5829+27]..[160,5829+38])
                                      Pexp_ident "lambda_size" (middle_end/closure/closure.ml[160,5829+27]..[160,5829+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[160,5829+39]..[160,5829+41])
                                          Pexp_ident "fn" (middle_end/closure/closure.ml[160,5829+39]..[160,5829+41])
                                    ]
                                  expression (middle_end/closure/closure.ml[160,5829+43]..[160,5829+64])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[160,5829+43]..[160,5829+59])
                                      Pexp_ident "lambda_list_size" (middle_end/closure/closure.ml[160,5829+43]..[160,5829+59])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[160,5829+60]..[160,5829+64])
                                          Pexp_ident "args" (middle_end/closure/closure.ml[160,5829+60]..[160,5829+64])
                                    ]
                            <case>
                              pattern (middle_end/closure/closure.ml[161,5894+6]..[161,5894+16])
                                Ppat_construct "Uclosure" (middle_end/closure/closure.ml[161,5894+6]..[161,5894+14])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[161,5894+15]..[161,5894+16])
                                    Ppat_any
                              expression (middle_end/closure/closure.ml[162,5914+8]..[162,5914+18])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[162,5914+8]..[162,5914+13])
                                  Pexp_ident "raise" (middle_end/closure/closure.ml[162,5914+8]..[162,5914+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[162,5914+14]..[162,5914+18])
                                      Pexp_construct "Exit" (middle_end/closure/closure.ml[162,5914+14]..[162,5914+18])
                                      None
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[163,5985+6]..[163,5985+24])
                                Ppat_construct "Uoffset" (middle_end/closure/closure.ml[163,5985+6]..[163,5985+13])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[163,5985+13]..[163,5985+24])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[163,5985+14]..[163,5985+17])
                                        Ppat_var "lam" (middle_end/closure/closure.ml[163,5985+14]..[163,5985+17])
                                      pattern (middle_end/closure/closure.ml[163,5985+19]..[163,5985+23])
                                        Ppat_var "_ofs" (middle_end/closure/closure.ml[163,5985+19]..[163,5985+23])
                                    ]
                              expression (middle_end/closure/closure.ml[164,6013+8]..[164,6013+34])
                                Pexp_sequence
                                expression (middle_end/closure/closure.ml[164,6013+8]..[164,6013+17])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[164,6013+8]..[164,6013+12])
                                    Pexp_ident "incr" (middle_end/closure/closure.ml[164,6013+8]..[164,6013+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[164,6013+13]..[164,6013+17])
                                        Pexp_ident "size" (middle_end/closure/closure.ml[164,6013+13]..[164,6013+17])
                                  ]
                                expression (middle_end/closure/closure.ml[164,6013+19]..[164,6013+34])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[164,6013+19]..[164,6013+30])
                                    Pexp_ident "lambda_size" (middle_end/closure/closure.ml[164,6013+19]..[164,6013+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[164,6013+31]..[164,6013+34])
                                        Pexp_ident "lam" (middle_end/closure/closure.ml[164,6013+31]..[164,6013+34])
                                  ]
                            <case>
                              pattern (middle_end/closure/closure.ml[165,6048+6]..[165,6048+39])
                                Ppat_construct "Ulet" (middle_end/closure/closure.ml[165,6048+6]..[165,6048+10])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[165,6048+10]..[165,6048+39])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[165,6048+11]..[165,6048+15])
                                        Ppat_var "_str" (middle_end/closure/closure.ml[165,6048+11]..[165,6048+15])
                                      pattern (middle_end/closure/closure.ml[165,6048+17]..[165,6048+22])
                                        Ppat_var "_kind" (middle_end/closure/closure.ml[165,6048+17]..[165,6048+22])
                                      pattern (middle_end/closure/closure.ml[165,6048+24]..[165,6048+27])
                                        Ppat_var "_id" (middle_end/closure/closure.ml[165,6048+24]..[165,6048+27])
                                      pattern (middle_end/closure/closure.ml[165,6048+29]..[165,6048+32])
                                        Ppat_var "lam" (middle_end/closure/closure.ml[165,6048+29]..[165,6048+32])
                                      pattern (middle_end/closure/closure.ml[165,6048+34]..[165,6048+38])
                                        Ppat_var "body" (middle_end/closure/closure.ml[165,6048+34]..[165,6048+38])
                                    ]
                              expression (middle_end/closure/closure.ml[166,6091+8]..[166,6091+41])
                                Pexp_sequence
                                expression (middle_end/closure/closure.ml[166,6091+8]..[166,6091+23])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[166,6091+8]..[166,6091+19])
                                    Pexp_ident "lambda_size" (middle_end/closure/closure.ml[166,6091+8]..[166,6091+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[166,6091+20]..[166,6091+23])
                                        Pexp_ident "lam" (middle_end/closure/closure.ml[166,6091+20]..[166,6091+23])
                                  ]
                                expression (middle_end/closure/closure.ml[166,6091+25]..[166,6091+41])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[166,6091+25]..[166,6091+36])
                                    Pexp_ident "lambda_size" (middle_end/closure/closure.ml[166,6091+25]..[166,6091+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[166,6091+37]..[166,6091+41])
                                        Pexp_ident "body" (middle_end/closure/closure.ml[166,6091+37]..[166,6091+41])
                                  ]
                            <case>
                              pattern (middle_end/closure/closure.ml[167,6133+6]..[167,6133+20])
                                Ppat_construct "Uphantom_let" (middle_end/closure/closure.ml[167,6133+6]..[167,6133+18])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[167,6133+19]..[167,6133+20])
                                    Ppat_any
                              expression (middle_end/closure/closure.ml[167,6133+24]..[167,6133+42])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[167,6133+24]..[167,6133+39])
                                  Pexp_ident "no_phantom_lets" (middle_end/closure/closure.ml[167,6133+24]..[167,6133+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[167,6133+40]..[167,6133+42])
                                      Pexp_construct "()" (middle_end/closure/closure.ml[167,6133+40]..[167,6133+42])
                                      None
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[168,6176+6]..[168,6176+15])
                                Ppat_construct "Uletrec" (middle_end/closure/closure.ml[168,6176+6]..[168,6176+13])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[168,6176+14]..[168,6176+15])
                                    Ppat_any
                              expression (middle_end/closure/closure.ml[169,6195+8]..[169,6195+18])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[169,6195+8]..[169,6195+13])
                                  Pexp_ident "raise" (middle_end/closure/closure.ml[169,6195+8]..[169,6195+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[169,6195+14]..[169,6195+18])
                                      Pexp_construct "Exit" (middle_end/closure/closure.ml[169,6195+14]..[169,6195+18])
                                      None
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[170,6238+6]..[170,6238+26])
                                Ppat_construct "Uprim" (middle_end/closure/closure.ml[170,6238+6]..[170,6238+11])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[170,6238+11]..[170,6238+26])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[170,6238+12]..[170,6238+16])
                                        Ppat_var "prim" (middle_end/closure/closure.ml[170,6238+12]..[170,6238+16])
                                      pattern (middle_end/closure/closure.ml[170,6238+18]..[170,6238+22])
                                        Ppat_var "args" (middle_end/closure/closure.ml[170,6238+18]..[170,6238+22])
                                      pattern (middle_end/closure/closure.ml[170,6238+24]..[170,6238+25])
                                        Ppat_any
                                    ]
                              expression (middle_end/closure/closure.ml[171,6268+8]..[172,6313+29])
                                Pexp_sequence
                                expression (middle_end/closure/closure.ml[171,6268+8]..[171,6268+43])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[171,6268+13]..[171,6268+15])
                                    Pexp_ident ":=" (middle_end/closure/closure.ml[171,6268+13]..[171,6268+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[171,6268+8]..[171,6268+12])
                                        Pexp_ident "size" (middle_end/closure/closure.ml[171,6268+8]..[171,6268+12])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[171,6268+16]..[171,6268+43])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[171,6268+22]..[171,6268+23])
                                          Pexp_ident "+" (middle_end/closure/closure.ml[171,6268+22]..[171,6268+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[171,6268+16]..[171,6268+21])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[171,6268+16]..[171,6268+17])
                                                Pexp_ident "!" (middle_end/closure/closure.ml[171,6268+16]..[171,6268+17])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[171,6268+17]..[171,6268+21])
                                                    Pexp_ident "size" (middle_end/closure/closure.ml[171,6268+17]..[171,6268+21])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[171,6268+24]..[171,6268+43])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[171,6268+24]..[171,6268+33])
                                                Pexp_ident "prim_size" (middle_end/closure/closure.ml[171,6268+24]..[171,6268+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[171,6268+34]..[171,6268+38])
                                                    Pexp_ident "prim" (middle_end/closure/closure.ml[171,6268+34]..[171,6268+38])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[171,6268+39]..[171,6268+43])
                                                    Pexp_ident "args" (middle_end/closure/closure.ml[171,6268+39]..[171,6268+43])
                                              ]
                                        ]
                                  ]
                                expression (middle_end/closure/closure.ml[172,6313+8]..[172,6313+29])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[172,6313+8]..[172,6313+24])
                                    Pexp_ident "lambda_list_size" (middle_end/closure/closure.ml[172,6313+8]..[172,6313+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[172,6313+25]..[172,6313+29])
                                        Pexp_ident "args" (middle_end/closure/closure.ml[172,6313+25]..[172,6313+29])
                                  ]
                            <case>
                              pattern (middle_end/closure/closure.ml[173,6343+6]..[173,6343+31])
                                Ppat_construct "Uswitch" (middle_end/closure/closure.ml[173,6343+6]..[173,6343+13])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[173,6343+13]..[173,6343+31])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[173,6343+14]..[173,6343+17])
                                        Ppat_var "lam" (middle_end/closure/closure.ml[173,6343+14]..[173,6343+17])
                                      pattern (middle_end/closure/closure.ml[173,6343+19]..[173,6343+24])
                                        Ppat_var "cases" (middle_end/closure/closure.ml[173,6343+19]..[173,6343+24])
                                      pattern (middle_end/closure/closure.ml[173,6343+26]..[173,6343+30])
                                        Ppat_var "_dbg" (middle_end/closure/closure.ml[173,6343+26]..[173,6343+30])
                                    ]
                              expression (middle_end/closure/closure.ml[174,6378+8]..[178,6609+49])
                                Pexp_sequence
                                expression (middle_end/closure/closure.ml[174,6378+8]..[174,6378+74])
                                  Pexp_ifthenelse
                                  expression (middle_end/closure/closure.ml[174,6378+11]..[174,6378+51])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[174,6378+48]..[174,6378+49])
                                      Pexp_ident ">" (middle_end/closure/closure.ml[174,6378+48]..[174,6378+49])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[174,6378+11]..[174,6378+47])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[174,6378+11]..[174,6378+23])
                                            Pexp_ident "Array.length" (middle_end/closure/closure.ml[174,6378+11]..[174,6378+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[174,6378+24]..[174,6378+47])
                                                Pexp_field
                                                expression (middle_end/closure/closure.ml[174,6378+24]..[174,6378+29])
                                                  Pexp_ident "cases" (middle_end/closure/closure.ml[174,6378+24]..[174,6378+29])
                                                "us_actions_consts" (middle_end/closure/closure.ml[174,6378+30]..[174,6378+47])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[174,6378+50]..[174,6378+51])
                                          Pexp_constant PConst_int (1,None)
                                    ]
                                  expression (middle_end/closure/closure.ml[174,6378+57]..[174,6378+74])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[174,6378+62]..[174,6378+64])
                                      Pexp_ident ":=" (middle_end/closure/closure.ml[174,6378+62]..[174,6378+64])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[174,6378+57]..[174,6378+61])
                                          Pexp_ident "size" (middle_end/closure/closure.ml[174,6378+57]..[174,6378+61])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[174,6378+65]..[174,6378+74])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[174,6378+71]..[174,6378+72])
                                            Pexp_ident "+" (middle_end/closure/closure.ml[174,6378+71]..[174,6378+72])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[174,6378+65]..[174,6378+70])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[174,6378+65]..[174,6378+66])
                                                  Pexp_ident "!" (middle_end/closure/closure.ml[174,6378+65]..[174,6378+66])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[174,6378+66]..[174,6378+70])
                                                      Pexp_ident "size" (middle_end/closure/closure.ml[174,6378+66]..[174,6378+70])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[174,6378+73]..[174,6378+74])
                                                Pexp_constant PConst_int (5,None)
                                          ]
                                    ]
                                  None
                                expression (middle_end/closure/closure.ml[175,6455+8]..[178,6609+49])
                                  Pexp_sequence
                                  expression (middle_end/closure/closure.ml[175,6455+8]..[175,6455+74])
                                    Pexp_ifthenelse
                                    expression (middle_end/closure/closure.ml[175,6455+11]..[175,6455+51])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[175,6455+48]..[175,6455+49])
                                        Pexp_ident ">" (middle_end/closure/closure.ml[175,6455+48]..[175,6455+49])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[175,6455+11]..[175,6455+47])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[175,6455+11]..[175,6455+23])
                                              Pexp_ident "Array.length" (middle_end/closure/closure.ml[175,6455+11]..[175,6455+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[175,6455+24]..[175,6455+47])
                                                  Pexp_field
                                                  expression (middle_end/closure/closure.ml[175,6455+24]..[175,6455+29])
                                                    Pexp_ident "cases" (middle_end/closure/closure.ml[175,6455+24]..[175,6455+29])
                                                  "us_actions_blocks" (middle_end/closure/closure.ml[175,6455+30]..[175,6455+47])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[175,6455+50]..[175,6455+51])
                                            Pexp_constant PConst_int (1,None)
                                      ]
                                    expression (middle_end/closure/closure.ml[175,6455+57]..[175,6455+74])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[175,6455+62]..[175,6455+64])
                                        Pexp_ident ":=" (middle_end/closure/closure.ml[175,6455+62]..[175,6455+64])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[175,6455+57]..[175,6455+61])
                                            Pexp_ident "size" (middle_end/closure/closure.ml[175,6455+57]..[175,6455+61])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[175,6455+65]..[175,6455+74])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[175,6455+71]..[175,6455+72])
                                              Pexp_ident "+" (middle_end/closure/closure.ml[175,6455+71]..[175,6455+72])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[175,6455+65]..[175,6455+70])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[175,6455+65]..[175,6455+66])
                                                    Pexp_ident "!" (middle_end/closure/closure.ml[175,6455+65]..[175,6455+66])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[175,6455+66]..[175,6455+70])
                                                        Pexp_ident "size" (middle_end/closure/closure.ml[175,6455+66]..[175,6455+70])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[175,6455+73]..[175,6455+74])
                                                  Pexp_constant PConst_int (5,None)
                                            ]
                                      ]
                                    None
                                  expression (middle_end/closure/closure.ml[176,6532+8]..[178,6609+49])
                                    Pexp_sequence
                                    expression (middle_end/closure/closure.ml[176,6532+8]..[176,6532+23])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[176,6532+8]..[176,6532+19])
                                        Pexp_ident "lambda_size" (middle_end/closure/closure.ml[176,6532+8]..[176,6532+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[176,6532+20]..[176,6532+23])
                                            Pexp_ident "lam" (middle_end/closure/closure.ml[176,6532+20]..[176,6532+23])
                                      ]
                                    expression (middle_end/closure/closure.ml[177,6557+8]..[178,6609+49])
                                      Pexp_sequence
                                      expression (middle_end/closure/closure.ml[177,6557+8]..[177,6557+49])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[177,6557+8]..[177,6557+25])
                                          Pexp_ident "lambda_array_size" (middle_end/closure/closure.ml[177,6557+8]..[177,6557+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[177,6557+26]..[177,6557+49])
                                              Pexp_field
                                              expression (middle_end/closure/closure.ml[177,6557+26]..[177,6557+31])
                                                Pexp_ident "cases" (middle_end/closure/closure.ml[177,6557+26]..[177,6557+31])
                                              "us_actions_consts" (middle_end/closure/closure.ml[177,6557+32]..[177,6557+49])
                                        ]
                                      expression (middle_end/closure/closure.ml[178,6609+8]..[178,6609+49])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[178,6609+8]..[178,6609+25])
                                          Pexp_ident "lambda_array_size" (middle_end/closure/closure.ml[178,6609+8]..[178,6609+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[178,6609+26]..[178,6609+49])
                                              Pexp_field
                                              expression (middle_end/closure/closure.ml[178,6609+26]..[178,6609+31])
                                                Pexp_ident "cases" (middle_end/closure/closure.ml[178,6609+26]..[178,6609+31])
                                              "us_actions_blocks" (middle_end/closure/closure.ml[178,6609+32]..[178,6609+49])
                                        ]
                            <case>
                              pattern (middle_end/closure/closure.ml[179,6659+6]..[179,6659+30])
                                Ppat_construct "Ustringswitch" (middle_end/closure/closure.ml[179,6659+6]..[179,6659+19])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[179,6659+20]..[179,6659+30])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[179,6659+21]..[179,6659+24])
                                        Ppat_var "lam" (middle_end/closure/closure.ml[179,6659+21]..[179,6659+24])
                                      pattern (middle_end/closure/closure.ml[179,6659+25]..[179,6659+27])
                                        Ppat_var "sw" (middle_end/closure/closure.ml[179,6659+25]..[179,6659+27])
                                      pattern (middle_end/closure/closure.ml[179,6659+28]..[179,6659+29])
                                        Ppat_var "d" (middle_end/closure/closure.ml[179,6659+28]..[179,6659+29])
                                    ]
                              expression (middle_end/closure/closure.ml[180,6693+8]..[187,6864+33])
                                Pexp_sequence
                                expression (middle_end/closure/closure.ml[180,6693+8]..[180,6693+23])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[180,6693+8]..[180,6693+19])
                                    Pexp_ident "lambda_size" (middle_end/closure/closure.ml[180,6693+8]..[180,6693+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[180,6693+20]..[180,6693+23])
                                        Pexp_ident "lam" (middle_end/closure/closure.ml[180,6693+20]..[180,6693+23])
                                  ]
                                expression (middle_end/closure/closure.ml[182,6746+8]..[187,6864+33])
                                  Pexp_sequence
                                  expression (middle_end/closure/closure.ml[182,6746+8]..[186,6849+12])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[182,6746+8]..[182,6746+17])
                                      Pexp_ident "List.iter" (middle_end/closure/closure.ml[182,6746+8]..[182,6746+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[183,6764+10]..[185,6820+28])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/closure/closure.ml[183,6764+15]..[183,6764+22])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[183,6764+16]..[183,6764+17])
                                                Ppat_any
                                              pattern (middle_end/closure/closure.ml[183,6764+18]..[183,6764+21])
                                                Ppat_var "lam" (middle_end/closure/closure.ml[183,6764+18]..[183,6764+21])
                                            ]
                                          expression (middle_end/closure/closure.ml[184,6790+12]..[185,6820+27])
                                            Pexp_sequence
                                            expression (middle_end/closure/closure.ml[184,6790+12]..[184,6790+27])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[184,6790+17]..[184,6790+19])
                                                Pexp_ident ":=" (middle_end/closure/closure.ml[184,6790+17]..[184,6790+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[184,6790+12]..[184,6790+16])
                                                    Pexp_ident "size" (middle_end/closure/closure.ml[184,6790+12]..[184,6790+16])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[184,6790+20]..[184,6790+27])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[184,6790+25]..[184,6790+26])
                                                      Pexp_ident "+" (middle_end/closure/closure.ml[184,6790+25]..[184,6790+26])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[184,6790+20]..[184,6790+25])
                                                          Pexp_apply
                                                          expression (middle_end/closure/closure.ml[184,6790+20]..[184,6790+21])
                                                            Pexp_ident "!" (middle_end/closure/closure.ml[184,6790+20]..[184,6790+21])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[184,6790+21]..[184,6790+25])
                                                                Pexp_ident "size" (middle_end/closure/closure.ml[184,6790+21]..[184,6790+25])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[184,6790+26]..[184,6790+27])
                                                          Pexp_constant PConst_int (2,None)
                                                    ]
                                              ]
                                            expression (middle_end/closure/closure.ml[185,6820+12]..[185,6820+27])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[185,6820+12]..[185,6820+23])
                                                Pexp_ident "lambda_size" (middle_end/closure/closure.ml[185,6820+12]..[185,6820+23])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[185,6820+24]..[185,6820+27])
                                                    Pexp_ident "lam" (middle_end/closure/closure.ml[185,6820+24]..[185,6820+27])
                                              ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[186,6849+10]..[186,6849+12])
                                          Pexp_ident "sw" (middle_end/closure/closure.ml[186,6849+10]..[186,6849+12])
                                    ]
                                  expression (middle_end/closure/closure.ml[187,6864+8]..[187,6864+33])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[187,6864+8]..[187,6864+19])
                                      Pexp_ident "Option.iter" (middle_end/closure/closure.ml[187,6864+8]..[187,6864+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[187,6864+20]..[187,6864+31])
                                          Pexp_ident "lambda_size" (middle_end/closure/closure.ml[187,6864+20]..[187,6864+31])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[187,6864+32]..[187,6864+33])
                                          Pexp_ident "d" (middle_end/closure/closure.ml[187,6864+32]..[187,6864+33])
                                    ]
                            <case>
                              pattern (middle_end/closure/closure.ml[188,6898+6]..[188,6898+26])
                                Ppat_construct "Ustaticfail" (middle_end/closure/closure.ml[188,6898+6]..[188,6898+17])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[188,6898+18]..[188,6898+26])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[188,6898+19]..[188,6898+20])
                                        Ppat_any
                                      pattern (middle_end/closure/closure.ml[188,6898+21]..[188,6898+25])
                                        Ppat_var "args" (middle_end/closure/closure.ml[188,6898+21]..[188,6898+25])
                                    ]
                              expression (middle_end/closure/closure.ml[188,6898+30]..[188,6898+51])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[188,6898+30]..[188,6898+46])
                                  Pexp_ident "lambda_list_size" (middle_end/closure/closure.ml[188,6898+30]..[188,6898+46])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[188,6898+47]..[188,6898+51])
                                      Pexp_ident "args" (middle_end/closure/closure.ml[188,6898+47]..[188,6898+51])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[189,6950+6]..[189,6950+33])
                                Ppat_construct "Ucatch" (middle_end/closure/closure.ml[189,6950+6]..[189,6950+12])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[189,6950+12]..[189,6950+33])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[189,6950+13]..[189,6950+14])
                                        Ppat_any
                                      pattern (middle_end/closure/closure.ml[189,6950+16]..[189,6950+17])
                                        Ppat_any
                                      pattern (middle_end/closure/closure.ml[189,6950+19]..[189,6950+23])
                                        Ppat_var "body" (middle_end/closure/closure.ml[189,6950+19]..[189,6950+23])
                                      pattern (middle_end/closure/closure.ml[189,6950+25]..[189,6950+32])
                                        Ppat_var "handler" (middle_end/closure/closure.ml[189,6950+25]..[189,6950+32])
                                    ]
                              expression (middle_end/closure/closure.ml[190,6987+8]..[190,6987+56])
                                Pexp_sequence
                                expression (middle_end/closure/closure.ml[190,6987+8]..[190,6987+17])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[190,6987+8]..[190,6987+12])
                                    Pexp_ident "incr" (middle_end/closure/closure.ml[190,6987+8]..[190,6987+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[190,6987+13]..[190,6987+17])
                                        Pexp_ident "size" (middle_end/closure/closure.ml[190,6987+13]..[190,6987+17])
                                  ]
                                expression (middle_end/closure/closure.ml[190,6987+19]..[190,6987+56])
                                  Pexp_sequence
                                  expression (middle_end/closure/closure.ml[190,6987+19]..[190,6987+35])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[190,6987+19]..[190,6987+30])
                                      Pexp_ident "lambda_size" (middle_end/closure/closure.ml[190,6987+19]..[190,6987+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[190,6987+31]..[190,6987+35])
                                          Pexp_ident "body" (middle_end/closure/closure.ml[190,6987+31]..[190,6987+35])
                                    ]
                                  expression (middle_end/closure/closure.ml[190,6987+37]..[190,6987+56])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[190,6987+37]..[190,6987+48])
                                      Pexp_ident "lambda_size" (middle_end/closure/closure.ml[190,6987+37]..[190,6987+48])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[190,6987+49]..[190,6987+56])
                                          Pexp_ident "handler" (middle_end/closure/closure.ml[190,6987+49]..[190,6987+56])
                                    ]
                            <case>
                              pattern (middle_end/closure/closure.ml[191,7044+6]..[191,7044+34])
                                Ppat_construct "Utrywith" (middle_end/closure/closure.ml[191,7044+6]..[191,7044+14])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[191,7044+14]..[191,7044+34])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[191,7044+15]..[191,7044+19])
                                        Ppat_var "body" (middle_end/closure/closure.ml[191,7044+15]..[191,7044+19])
                                      pattern (middle_end/closure/closure.ml[191,7044+21]..[191,7044+24])
                                        Ppat_var "_id" (middle_end/closure/closure.ml[191,7044+21]..[191,7044+24])
                                      pattern (middle_end/closure/closure.ml[191,7044+26]..[191,7044+33])
                                        Ppat_var "handler" (middle_end/closure/closure.ml[191,7044+26]..[191,7044+33])
                                    ]
                              expression (middle_end/closure/closure.ml[192,7082+8]..[192,7082+64])
                                Pexp_sequence
                                expression (middle_end/closure/closure.ml[192,7082+8]..[192,7082+25])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[192,7082+13]..[192,7082+15])
                                    Pexp_ident ":=" (middle_end/closure/closure.ml[192,7082+13]..[192,7082+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[192,7082+8]..[192,7082+12])
                                        Pexp_ident "size" (middle_end/closure/closure.ml[192,7082+8]..[192,7082+12])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[192,7082+16]..[192,7082+25])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[192,7082+22]..[192,7082+23])
                                          Pexp_ident "+" (middle_end/closure/closure.ml[192,7082+22]..[192,7082+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[192,7082+16]..[192,7082+21])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[192,7082+16]..[192,7082+17])
                                                Pexp_ident "!" (middle_end/closure/closure.ml[192,7082+16]..[192,7082+17])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[192,7082+17]..[192,7082+21])
                                                    Pexp_ident "size" (middle_end/closure/closure.ml[192,7082+17]..[192,7082+21])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[192,7082+24]..[192,7082+25])
                                              Pexp_constant PConst_int (8,None)
                                        ]
                                  ]
                                expression (middle_end/closure/closure.ml[192,7082+27]..[192,7082+64])
                                  Pexp_sequence
                                  expression (middle_end/closure/closure.ml[192,7082+27]..[192,7082+43])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[192,7082+27]..[192,7082+38])
                                      Pexp_ident "lambda_size" (middle_end/closure/closure.ml[192,7082+27]..[192,7082+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[192,7082+39]..[192,7082+43])
                                          Pexp_ident "body" (middle_end/closure/closure.ml[192,7082+39]..[192,7082+43])
                                    ]
                                  expression (middle_end/closure/closure.ml[192,7082+45]..[192,7082+64])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[192,7082+45]..[192,7082+56])
                                      Pexp_ident "lambda_size" (middle_end/closure/closure.ml[192,7082+45]..[192,7082+56])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[192,7082+57]..[192,7082+64])
                                          Pexp_ident "handler" (middle_end/closure/closure.ml[192,7082+57]..[192,7082+64])
                                    ]
                            <case>
                              pattern (middle_end/closure/closure.ml[193,7147+6]..[193,7147+36])
                                Ppat_construct "Uifthenelse" (middle_end/closure/closure.ml[193,7147+6]..[193,7147+17])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[193,7147+17]..[193,7147+36])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[193,7147+18]..[193,7147+22])
                                        Ppat_var "cond" (middle_end/closure/closure.ml[193,7147+18]..[193,7147+22])
                                      pattern (middle_end/closure/closure.ml[193,7147+24]..[193,7147+28])
                                        Ppat_var "ifso" (middle_end/closure/closure.ml[193,7147+24]..[193,7147+28])
                                      pattern (middle_end/closure/closure.ml[193,7147+30]..[193,7147+35])
                                        Ppat_var "ifnot" (middle_end/closure/closure.ml[193,7147+30]..[193,7147+35])
                                    ]
                              expression (middle_end/closure/closure.ml[194,7187+8]..[195,7214+61])
                                Pexp_sequence
                                expression (middle_end/closure/closure.ml[194,7187+8]..[194,7187+25])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[194,7187+13]..[194,7187+15])
                                    Pexp_ident ":=" (middle_end/closure/closure.ml[194,7187+13]..[194,7187+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[194,7187+8]..[194,7187+12])
                                        Pexp_ident "size" (middle_end/closure/closure.ml[194,7187+8]..[194,7187+12])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[194,7187+16]..[194,7187+25])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[194,7187+22]..[194,7187+23])
                                          Pexp_ident "+" (middle_end/closure/closure.ml[194,7187+22]..[194,7187+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[194,7187+16]..[194,7187+21])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[194,7187+16]..[194,7187+17])
                                                Pexp_ident "!" (middle_end/closure/closure.ml[194,7187+16]..[194,7187+17])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[194,7187+17]..[194,7187+21])
                                                    Pexp_ident "size" (middle_end/closure/closure.ml[194,7187+17]..[194,7187+21])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[194,7187+24]..[194,7187+25])
                                              Pexp_constant PConst_int (2,None)
                                        ]
                                  ]
                                expression (middle_end/closure/closure.ml[195,7214+8]..[195,7214+61])
                                  Pexp_sequence
                                  expression (middle_end/closure/closure.ml[195,7214+8]..[195,7214+24])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[195,7214+8]..[195,7214+19])
                                      Pexp_ident "lambda_size" (middle_end/closure/closure.ml[195,7214+8]..[195,7214+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[195,7214+20]..[195,7214+24])
                                          Pexp_ident "cond" (middle_end/closure/closure.ml[195,7214+20]..[195,7214+24])
                                    ]
                                  expression (middle_end/closure/closure.ml[195,7214+26]..[195,7214+61])
                                    Pexp_sequence
                                    expression (middle_end/closure/closure.ml[195,7214+26]..[195,7214+42])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[195,7214+26]..[195,7214+37])
                                        Pexp_ident "lambda_size" (middle_end/closure/closure.ml[195,7214+26]..[195,7214+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[195,7214+38]..[195,7214+42])
                                            Pexp_ident "ifso" (middle_end/closure/closure.ml[195,7214+38]..[195,7214+42])
                                      ]
                                    expression (middle_end/closure/closure.ml[195,7214+44]..[195,7214+61])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[195,7214+44]..[195,7214+55])
                                        Pexp_ident "lambda_size" (middle_end/closure/closure.ml[195,7214+44]..[195,7214+55])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[195,7214+56]..[195,7214+61])
                                            Pexp_ident "ifnot" (middle_end/closure/closure.ml[195,7214+56]..[195,7214+61])
                                      ]
                            <case>
                              pattern (middle_end/closure/closure.ml[196,7276+6]..[196,7276+27])
                                Ppat_construct "Usequence" (middle_end/closure/closure.ml[196,7276+6]..[196,7276+15])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[196,7276+15]..[196,7276+27])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[196,7276+16]..[196,7276+20])
                                        Ppat_var "lam1" (middle_end/closure/closure.ml[196,7276+16]..[196,7276+20])
                                      pattern (middle_end/closure/closure.ml[196,7276+22]..[196,7276+26])
                                        Ppat_var "lam2" (middle_end/closure/closure.ml[196,7276+22]..[196,7276+26])
                                    ]
                              expression (middle_end/closure/closure.ml[197,7307+8]..[197,7307+42])
                                Pexp_sequence
                                expression (middle_end/closure/closure.ml[197,7307+8]..[197,7307+24])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[197,7307+8]..[197,7307+19])
                                    Pexp_ident "lambda_size" (middle_end/closure/closure.ml[197,7307+8]..[197,7307+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[197,7307+20]..[197,7307+24])
                                        Pexp_ident "lam1" (middle_end/closure/closure.ml[197,7307+20]..[197,7307+24])
                                  ]
                                expression (middle_end/closure/closure.ml[197,7307+26]..[197,7307+42])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[197,7307+26]..[197,7307+37])
                                    Pexp_ident "lambda_size" (middle_end/closure/closure.ml[197,7307+26]..[197,7307+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[197,7307+38]..[197,7307+42])
                                        Pexp_ident "lam2" (middle_end/closure/closure.ml[197,7307+38]..[197,7307+42])
                                  ]
                            <case>
                              pattern (middle_end/closure/closure.ml[198,7350+6]..[198,7350+24])
                                Ppat_construct "Uwhile" (middle_end/closure/closure.ml[198,7350+6]..[198,7350+12])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[198,7350+12]..[198,7350+24])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[198,7350+13]..[198,7350+17])
                                        Ppat_var "cond" (middle_end/closure/closure.ml[198,7350+13]..[198,7350+17])
                                      pattern (middle_end/closure/closure.ml[198,7350+19]..[198,7350+23])
                                        Ppat_var "body" (middle_end/closure/closure.ml[198,7350+19]..[198,7350+23])
                                    ]
                              expression (middle_end/closure/closure.ml[199,7378+8]..[199,7378+61])
                                Pexp_sequence
                                expression (middle_end/closure/closure.ml[199,7378+8]..[199,7378+25])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[199,7378+13]..[199,7378+15])
                                    Pexp_ident ":=" (middle_end/closure/closure.ml[199,7378+13]..[199,7378+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[199,7378+8]..[199,7378+12])
                                        Pexp_ident "size" (middle_end/closure/closure.ml[199,7378+8]..[199,7378+12])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[199,7378+16]..[199,7378+25])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[199,7378+22]..[199,7378+23])
                                          Pexp_ident "+" (middle_end/closure/closure.ml[199,7378+22]..[199,7378+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[199,7378+16]..[199,7378+21])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[199,7378+16]..[199,7378+17])
                                                Pexp_ident "!" (middle_end/closure/closure.ml[199,7378+16]..[199,7378+17])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[199,7378+17]..[199,7378+21])
                                                    Pexp_ident "size" (middle_end/closure/closure.ml[199,7378+17]..[199,7378+21])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[199,7378+24]..[199,7378+25])
                                              Pexp_constant PConst_int (2,None)
                                        ]
                                  ]
                                expression (middle_end/closure/closure.ml[199,7378+27]..[199,7378+61])
                                  Pexp_sequence
                                  expression (middle_end/closure/closure.ml[199,7378+27]..[199,7378+43])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[199,7378+27]..[199,7378+38])
                                      Pexp_ident "lambda_size" (middle_end/closure/closure.ml[199,7378+27]..[199,7378+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[199,7378+39]..[199,7378+43])
                                          Pexp_ident "cond" (middle_end/closure/closure.ml[199,7378+39]..[199,7378+43])
                                    ]
                                  expression (middle_end/closure/closure.ml[199,7378+45]..[199,7378+61])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[199,7378+45]..[199,7378+56])
                                      Pexp_ident "lambda_size" (middle_end/closure/closure.ml[199,7378+45]..[199,7378+56])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[199,7378+57]..[199,7378+61])
                                          Pexp_ident "body" (middle_end/closure/closure.ml[199,7378+57]..[199,7378+61])
                                    ]
                            <case>
                              pattern (middle_end/closure/closure.ml[200,7440+6]..[200,7440+38])
                                Ppat_construct "Ufor" (middle_end/closure/closure.ml[200,7440+6]..[200,7440+10])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[200,7440+10]..[200,7440+38])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[200,7440+11]..[200,7440+14])
                                        Ppat_var "_id" (middle_end/closure/closure.ml[200,7440+11]..[200,7440+14])
                                      pattern (middle_end/closure/closure.ml[200,7440+16]..[200,7440+19])
                                        Ppat_var "low" (middle_end/closure/closure.ml[200,7440+16]..[200,7440+19])
                                      pattern (middle_end/closure/closure.ml[200,7440+21]..[200,7440+25])
                                        Ppat_var "high" (middle_end/closure/closure.ml[200,7440+21]..[200,7440+25])
                                      pattern (middle_end/closure/closure.ml[200,7440+27]..[200,7440+31])
                                        Ppat_var "_dir" (middle_end/closure/closure.ml[200,7440+27]..[200,7440+31])
                                      pattern (middle_end/closure/closure.ml[200,7440+33]..[200,7440+37])
                                        Ppat_var "body" (middle_end/closure/closure.ml[200,7440+33]..[200,7440+37])
                                    ]
                              expression (middle_end/closure/closure.ml[201,7482+8]..[201,7482+78])
                                Pexp_sequence
                                expression (middle_end/closure/closure.ml[201,7482+8]..[201,7482+25])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[201,7482+13]..[201,7482+15])
                                    Pexp_ident ":=" (middle_end/closure/closure.ml[201,7482+13]..[201,7482+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[201,7482+8]..[201,7482+12])
                                        Pexp_ident "size" (middle_end/closure/closure.ml[201,7482+8]..[201,7482+12])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[201,7482+16]..[201,7482+25])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[201,7482+22]..[201,7482+23])
                                          Pexp_ident "+" (middle_end/closure/closure.ml[201,7482+22]..[201,7482+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[201,7482+16]..[201,7482+21])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[201,7482+16]..[201,7482+17])
                                                Pexp_ident "!" (middle_end/closure/closure.ml[201,7482+16]..[201,7482+17])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[201,7482+17]..[201,7482+21])
                                                    Pexp_ident "size" (middle_end/closure/closure.ml[201,7482+17]..[201,7482+21])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[201,7482+24]..[201,7482+25])
                                              Pexp_constant PConst_int (4,None)
                                        ]
                                  ]
                                expression (middle_end/closure/closure.ml[201,7482+27]..[201,7482+78])
                                  Pexp_sequence
                                  expression (middle_end/closure/closure.ml[201,7482+27]..[201,7482+42])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[201,7482+27]..[201,7482+38])
                                      Pexp_ident "lambda_size" (middle_end/closure/closure.ml[201,7482+27]..[201,7482+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[201,7482+39]..[201,7482+42])
                                          Pexp_ident "low" (middle_end/closure/closure.ml[201,7482+39]..[201,7482+42])
                                    ]
                                  expression (middle_end/closure/closure.ml[201,7482+44]..[201,7482+78])
                                    Pexp_sequence
                                    expression (middle_end/closure/closure.ml[201,7482+44]..[201,7482+60])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[201,7482+44]..[201,7482+55])
                                        Pexp_ident "lambda_size" (middle_end/closure/closure.ml[201,7482+44]..[201,7482+55])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[201,7482+56]..[201,7482+60])
                                            Pexp_ident "high" (middle_end/closure/closure.ml[201,7482+56]..[201,7482+60])
                                      ]
                                    expression (middle_end/closure/closure.ml[201,7482+62]..[201,7482+78])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[201,7482+62]..[201,7482+73])
                                        Pexp_ident "lambda_size" (middle_end/closure/closure.ml[201,7482+62]..[201,7482+73])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[201,7482+74]..[201,7482+78])
                                            Pexp_ident "body" (middle_end/closure/closure.ml[201,7482+74]..[201,7482+78])
                                      ]
                            <case>
                              pattern (middle_end/closure/closure.ml[202,7561+6]..[202,7561+23])
                                Ppat_construct "Uassign" (middle_end/closure/closure.ml[202,7561+6]..[202,7561+13])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[202,7561+13]..[202,7561+23])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[202,7561+14]..[202,7561+17])
                                        Ppat_var "_id" (middle_end/closure/closure.ml[202,7561+14]..[202,7561+17])
                                      pattern (middle_end/closure/closure.ml[202,7561+19]..[202,7561+22])
                                        Ppat_var "lam" (middle_end/closure/closure.ml[202,7561+19]..[202,7561+22])
                                    ]
                              expression (middle_end/closure/closure.ml[203,7588+8]..[203,7588+35])
                                Pexp_sequence
                                expression (middle_end/closure/closure.ml[203,7588+8]..[203,7588+17])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[203,7588+8]..[203,7588+12])
                                    Pexp_ident "incr" (middle_end/closure/closure.ml[203,7588+8]..[203,7588+12])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[203,7588+13]..[203,7588+17])
                                        Pexp_ident "size" (middle_end/closure/closure.ml[203,7588+13]..[203,7588+17])
                                  ]
                                expression (middle_end/closure/closure.ml[203,7588+20]..[203,7588+35])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[203,7588+20]..[203,7588+31])
                                    Pexp_ident "lambda_size" (middle_end/closure/closure.ml[203,7588+20]..[203,7588+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[203,7588+32]..[203,7588+35])
                                        Pexp_ident "lam" (middle_end/closure/closure.ml[203,7588+32]..[203,7588+35])
                                  ]
                            <case>
                              pattern (middle_end/closure/closure.ml[204,7624+6]..[204,7624+33])
                                Ppat_construct "Usend" (middle_end/closure/closure.ml[204,7624+6]..[204,7624+11])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[204,7624+11]..[204,7624+33])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[204,7624+12]..[204,7624+13])
                                        Ppat_any
                                      pattern (middle_end/closure/closure.ml[204,7624+15]..[204,7624+18])
                                        Ppat_var "met" (middle_end/closure/closure.ml[204,7624+15]..[204,7624+18])
                                      pattern (middle_end/closure/closure.ml[204,7624+20]..[204,7624+23])
                                        Ppat_var "obj" (middle_end/closure/closure.ml[204,7624+20]..[204,7624+23])
                                      pattern (middle_end/closure/closure.ml[204,7624+25]..[204,7624+29])
                                        Ppat_var "args" (middle_end/closure/closure.ml[204,7624+25]..[204,7624+29])
                                      pattern (middle_end/closure/closure.ml[204,7624+31]..[204,7624+32])
                                        Ppat_any
                                    ]
                              expression (middle_end/closure/closure.ml[205,7661+8]..[206,7688+63])
                                Pexp_sequence
                                expression (middle_end/closure/closure.ml[205,7661+8]..[205,7661+25])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[205,7661+13]..[205,7661+15])
                                    Pexp_ident ":=" (middle_end/closure/closure.ml[205,7661+13]..[205,7661+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[205,7661+8]..[205,7661+12])
                                        Pexp_ident "size" (middle_end/closure/closure.ml[205,7661+8]..[205,7661+12])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[205,7661+16]..[205,7661+25])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[205,7661+22]..[205,7661+23])
                                          Pexp_ident "+" (middle_end/closure/closure.ml[205,7661+22]..[205,7661+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[205,7661+16]..[205,7661+21])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[205,7661+16]..[205,7661+17])
                                                Pexp_ident "!" (middle_end/closure/closure.ml[205,7661+16]..[205,7661+17])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[205,7661+17]..[205,7661+21])
                                                    Pexp_ident "size" (middle_end/closure/closure.ml[205,7661+17]..[205,7661+21])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[205,7661+24]..[205,7661+25])
                                              Pexp_constant PConst_int (8,None)
                                        ]
                                  ]
                                expression (middle_end/closure/closure.ml[206,7688+8]..[206,7688+63])
                                  Pexp_sequence
                                  expression (middle_end/closure/closure.ml[206,7688+8]..[206,7688+23])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[206,7688+8]..[206,7688+19])
                                      Pexp_ident "lambda_size" (middle_end/closure/closure.ml[206,7688+8]..[206,7688+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[206,7688+20]..[206,7688+23])
                                          Pexp_ident "met" (middle_end/closure/closure.ml[206,7688+20]..[206,7688+23])
                                    ]
                                  expression (middle_end/closure/closure.ml[206,7688+25]..[206,7688+63])
                                    Pexp_sequence
                                    expression (middle_end/closure/closure.ml[206,7688+25]..[206,7688+40])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[206,7688+25]..[206,7688+36])
                                        Pexp_ident "lambda_size" (middle_end/closure/closure.ml[206,7688+25]..[206,7688+36])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[206,7688+37]..[206,7688+40])
                                            Pexp_ident "obj" (middle_end/closure/closure.ml[206,7688+37]..[206,7688+40])
                                      ]
                                    expression (middle_end/closure/closure.ml[206,7688+42]..[206,7688+63])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[206,7688+42]..[206,7688+58])
                                        Pexp_ident "lambda_list_size" (middle_end/closure/closure.ml[206,7688+42]..[206,7688+58])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[206,7688+59]..[206,7688+63])
                                            Pexp_ident "args" (middle_end/closure/closure.ml[206,7688+59]..[206,7688+63])
                                      ]
                            <case>
                              pattern (middle_end/closure/closure.ml[207,7752+6]..[207,7752+18])
                                Ppat_construct "Uunreachable" (middle_end/closure/closure.ml[207,7752+6]..[207,7752+18])
                                None
                              expression (middle_end/closure/closure.ml[207,7752+22]..[207,7752+24])
                                Pexp_construct "()" (middle_end/closure/closure.ml[207,7752+22]..[207,7752+24])
                                None
                          ]
                  <def>
                    pattern (middle_end/closure/closure.ml[208,7777+6]..[208,7777+22])
                      Ppat_var "lambda_list_size" (middle_end/closure/closure.ml[208,7777+6]..[208,7777+22])
                    expression (middle_end/closure/closure.ml[208,7777+23]..[208,7777+50]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/closure/closure.ml[208,7777+23]..[208,7777+24])
                        Ppat_var "l" (middle_end/closure/closure.ml[208,7777+23]..[208,7777+24])
                      expression (middle_end/closure/closure.ml[208,7777+27]..[208,7777+50])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[208,7777+27]..[208,7777+36])
                          Pexp_ident "List.iter" (middle_end/closure/closure.ml[208,7777+27]..[208,7777+36])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[208,7777+37]..[208,7777+48])
                              Pexp_ident "lambda_size" (middle_end/closure/closure.ml[208,7777+37]..[208,7777+48])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[208,7777+49]..[208,7777+50])
                              Pexp_ident "l" (middle_end/closure/closure.ml[208,7777+49]..[208,7777+50])
                        ]
                  <def>
                    pattern (middle_end/closure/closure.ml[209,7828+6]..[209,7828+23])
                      Ppat_var "lambda_array_size" (middle_end/closure/closure.ml[209,7828+6]..[209,7828+23])
                    expression (middle_end/closure/closure.ml[209,7828+24]..[209,7828+52]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/closure/closure.ml[209,7828+24]..[209,7828+25])
                        Ppat_var "a" (middle_end/closure/closure.ml[209,7828+24]..[209,7828+25])
                      expression (middle_end/closure/closure.ml[209,7828+28]..[209,7828+52])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[209,7828+28]..[209,7828+38])
                          Pexp_ident "Array.iter" (middle_end/closure/closure.ml[209,7828+28]..[209,7828+38])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[209,7828+39]..[209,7828+50])
                              Pexp_ident "lambda_size" (middle_end/closure/closure.ml[209,7828+39]..[209,7828+50])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[209,7828+51]..[209,7828+52])
                              Pexp_ident "a" (middle_end/closure/closure.ml[209,7828+51]..[209,7828+52])
                        ]
                ]
                expression (middle_end/closure/closure.ml[210,7884+2]..[213,7945+9])
                  Pexp_try
                  expression (middle_end/closure/closure.ml[211,7890+4]..[211,7890+39])
                    Pexp_sequence
                    expression (middle_end/closure/closure.ml[211,7890+4]..[211,7890+19])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[211,7890+4]..[211,7890+15])
                        Pexp_ident "lambda_size" (middle_end/closure/closure.ml[211,7890+4]..[211,7890+15])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[211,7890+16]..[211,7890+19])
                            Pexp_ident "lam" (middle_end/closure/closure.ml[211,7890+16]..[211,7890+19])
                      ]
                    expression (middle_end/closure/closure.ml[211,7890+21]..[211,7890+39])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[211,7890+27]..[211,7890+29])
                        Pexp_ident "<=" (middle_end/closure/closure.ml[211,7890+27]..[211,7890+29])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[211,7890+21]..[211,7890+26])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[211,7890+21]..[211,7890+22])
                              Pexp_ident "!" (middle_end/closure/closure.ml[211,7890+21]..[211,7890+22])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[211,7890+22]..[211,7890+26])
                                  Pexp_ident "size" (middle_end/closure/closure.ml[211,7890+22]..[211,7890+26])
                            ]
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[211,7890+30]..[211,7890+39])
                            Pexp_ident "threshold" (middle_end/closure/closure.ml[211,7890+30]..[211,7890+39])
                      ]
                  [
                    <case>
                      pattern (middle_end/closure/closure.ml[212,7930+7]..[212,7930+11])
                        Ppat_construct "Exit" (middle_end/closure/closure.ml[212,7930+7]..[212,7930+11])
                        None
                      expression (middle_end/closure/closure.ml[213,7945+4]..[213,7945+9])
                        Pexp_construct "false" (middle_end/closure/closure.ml[213,7945+4]..[213,7945+9])
                        None
                  ]
    ]
  structure_item (middle_end/closure/closure.ml[215,7956+0]..[219,8122+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[215,7956+4]..[215,7956+16])
          Ppat_var "is_pure_prim" (middle_end/closure/closure.ml[215,7956+4]..[215,7956+16])
        expression (middle_end/closure/closure.ml[215,7956+17]..[219,8122+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[215,7956+17]..[215,7956+18])
            Ppat_var "p" (middle_end/closure/closure.ml[215,7956+17]..[215,7956+18])
          expression (middle_end/closure/closure.ml[216,7977+2]..[219,8122+33])
            Pexp_open Fresh
            module_expr (middle_end/closure/closure.ml[216,7977+11]..[216,7977+34])
              Pmod_ident "Semantics_of_primitives" (middle_end/closure/closure.ml[216,7977+11]..[216,7977+34])
            expression (middle_end/closure/closure.ml[217,8015+2]..[219,8122+33])
              Pexp_match
              expression (middle_end/closure/closure.ml[217,8015+8]..[217,8015+47])
                Pexp_apply
                expression (middle_end/closure/closure.ml[217,8015+8]..[217,8015+45])
                  Pexp_ident "Semantics_of_primitives.for_primitive" (middle_end/closure/closure.ml[217,8015+8]..[217,8015+45])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/closure/closure.ml[217,8015+46]..[217,8015+47])
                      Pexp_ident "p" (middle_end/closure/closure.ml[217,8015+46]..[217,8015+47])
                ]
              [
                <case>
                  pattern (middle_end/closure/closure.ml[218,8068+4]..[218,8068+45])
                    Ppat_tuple
                    [
                      pattern (middle_end/closure/closure.ml[218,8068+4]..[218,8068+42])
                        Ppat_or
                        pattern (middle_end/closure/closure.ml[218,8068+5]..[218,8068+15])
                          Ppat_construct "No_effects" (middle_end/closure/closure.ml[218,8068+5]..[218,8068+15])
                          None
                        pattern (middle_end/closure/closure.ml[218,8068+18]..[218,8068+41])
                          Ppat_construct "Only_generative_effects" (middle_end/closure/closure.ml[218,8068+18]..[218,8068+41])
                          None
                      pattern (middle_end/closure/closure.ml[218,8068+44]..[218,8068+45])
                        Ppat_any
                    ]
                  expression (middle_end/closure/closure.ml[218,8068+49]..[218,8068+53])
                    Pexp_construct "true" (middle_end/closure/closure.ml[218,8068+49]..[218,8068+53])
                    None
                <case>
                  pattern (middle_end/closure/closure.ml[219,8122+4]..[219,8122+24])
                    Ppat_tuple
                    [
                      pattern (middle_end/closure/closure.ml[219,8122+4]..[219,8122+21])
                        Ppat_construct "Arbitrary_effects" (middle_end/closure/closure.ml[219,8122+4]..[219,8122+21])
                        None
                      pattern (middle_end/closure/closure.ml[219,8122+23]..[219,8122+24])
                        Ppat_any
                    ]
                  expression (middle_end/closure/closure.ml[219,8122+28]..[219,8122+33])
                    Pexp_construct "false" (middle_end/closure/closure.ml[219,8122+28]..[219,8122+33])
                    None
              ]
    ]
  structure_item (middle_end/closure/closure.ml[224,8275+0]..[231,8523+14])
    Pstr_value Rec
    [
      <def>
        pattern (middle_end/closure/closure.ml[224,8275+8]..[224,8275+15])
          Ppat_var "is_pure" (middle_end/closure/closure.ml[224,8275+8]..[224,8275+15])
        expression (middle_end/closure/closure.ml[224,8275+18]..[231,8523+14])
          Pexp_function
          [
            <case>
              pattern (middle_end/closure/closure.ml[225,8302+4]..[225,8302+10])
                Ppat_construct "Uvar" (middle_end/closure/closure.ml[225,8302+4]..[225,8302+8])
                Some
                  []
                  pattern (middle_end/closure/closure.ml[225,8302+9]..[225,8302+10])
                    Ppat_any
              expression (middle_end/closure/closure.ml[225,8302+14]..[225,8302+18])
                Pexp_construct "true" (middle_end/closure/closure.ml[225,8302+14]..[225,8302+18])
                None
            <case>
              pattern (middle_end/closure/closure.ml[226,8321+4]..[226,8321+12])
                Ppat_construct "Uconst" (middle_end/closure/closure.ml[226,8321+4]..[226,8321+10])
                Some
                  []
                  pattern (middle_end/closure/closure.ml[226,8321+11]..[226,8321+12])
                    Ppat_any
              expression (middle_end/closure/closure.ml[226,8321+16]..[226,8321+20])
                Pexp_construct "true" (middle_end/closure/closure.ml[226,8321+16]..[226,8321+20])
                None
            <case>
              pattern (middle_end/closure/closure.ml[227,8342+4]..[227,8342+21])
                Ppat_construct "Uprim" (middle_end/closure/closure.ml[227,8342+4]..[227,8342+9])
                Some
                  []
                  pattern (middle_end/closure/closure.ml[227,8342+9]..[227,8342+21])
                    Ppat_tuple
                    [
                      pattern (middle_end/closure/closure.ml[227,8342+10]..[227,8342+11])
                        Ppat_var "p" (middle_end/closure/closure.ml[227,8342+10]..[227,8342+11])
                      pattern (middle_end/closure/closure.ml[227,8342+13]..[227,8342+17])
                        Ppat_var "args" (middle_end/closure/closure.ml[227,8342+13]..[227,8342+17])
                      pattern (middle_end/closure/closure.ml[227,8342+19]..[227,8342+20])
                        Ppat_any
                    ]
              expression (middle_end/closure/closure.ml[227,8342+25]..[227,8342+68])
                Pexp_apply
                expression (middle_end/closure/closure.ml[227,8342+40]..[227,8342+42])
                  Pexp_ident "&&" (middle_end/closure/closure.ml[227,8342+40]..[227,8342+42])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/closure/closure.ml[227,8342+25]..[227,8342+39])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[227,8342+25]..[227,8342+37])
                        Pexp_ident "is_pure_prim" (middle_end/closure/closure.ml[227,8342+25]..[227,8342+37])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[227,8342+38]..[227,8342+39])
                            Pexp_ident "p" (middle_end/closure/closure.ml[227,8342+38]..[227,8342+39])
                      ]
                  <arg>
                  Nolabel
                    expression (middle_end/closure/closure.ml[227,8342+43]..[227,8342+68])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[227,8342+43]..[227,8342+55])
                        Pexp_ident "List.for_all" (middle_end/closure/closure.ml[227,8342+43]..[227,8342+55])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[227,8342+56]..[227,8342+63])
                            Pexp_ident "is_pure" (middle_end/closure/closure.ml[227,8342+56]..[227,8342+63])
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[227,8342+64]..[227,8342+68])
                            Pexp_ident "args" (middle_end/closure/closure.ml[227,8342+64]..[227,8342+68])
                      ]
                ]
            <case>
              pattern (middle_end/closure/closure.ml[228,8411+4]..[228,8411+19])
                Ppat_construct "Uoffset" (middle_end/closure/closure.ml[228,8411+4]..[228,8411+11])
                Some
                  []
                  pattern (middle_end/closure/closure.ml[228,8411+11]..[228,8411+19])
                    Ppat_tuple
                    [
                      pattern (middle_end/closure/closure.ml[228,8411+12]..[228,8411+15])
                        Ppat_var "arg" (middle_end/closure/closure.ml[228,8411+12]..[228,8411+15])
                      pattern (middle_end/closure/closure.ml[228,8411+17]..[228,8411+18])
                        Ppat_any
                    ]
              expression (middle_end/closure/closure.ml[228,8411+23]..[228,8411+34])
                Pexp_apply
                expression (middle_end/closure/closure.ml[228,8411+23]..[228,8411+30])
                  Pexp_ident "is_pure" (middle_end/closure/closure.ml[228,8411+23]..[228,8411+30])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/closure/closure.ml[228,8411+31]..[228,8411+34])
                      Pexp_ident "arg" (middle_end/closure/closure.ml[228,8411+31]..[228,8411+34])
                ]
            <case>
              pattern (middle_end/closure/closure.ml[229,8446+4]..[229,8446+39])
                Ppat_construct "Ulet" (middle_end/closure/closure.ml[229,8446+4]..[229,8446+8])
                Some
                  []
                  pattern (middle_end/closure/closure.ml[229,8446+8]..[229,8446+39])
                    Ppat_tuple
                    [
                      pattern (middle_end/closure/closure.ml[229,8446+9]..[229,8446+18])
                        Ppat_construct "Immutable" (middle_end/closure/closure.ml[229,8446+9]..[229,8446+18])
                        None
                      pattern (middle_end/closure/closure.ml[229,8446+20]..[229,8446+21])
                        Ppat_any
                      pattern (middle_end/closure/closure.ml[229,8446+23]..[229,8446+27])
                        Ppat_var "_var" (middle_end/closure/closure.ml[229,8446+23]..[229,8446+27])
                      pattern (middle_end/closure/closure.ml[229,8446+29]..[229,8446+32])
                        Ppat_var "def" (middle_end/closure/closure.ml[229,8446+29]..[229,8446+32])
                      pattern (middle_end/closure/closure.ml[229,8446+34]..[229,8446+38])
                        Ppat_var "body" (middle_end/closure/closure.ml[229,8446+34]..[229,8446+38])
                    ]
              expression (middle_end/closure/closure.ml[230,8489+6]..[230,8489+33])
                Pexp_apply
                expression (middle_end/closure/closure.ml[230,8489+18]..[230,8489+20])
                  Pexp_ident "&&" (middle_end/closure/closure.ml[230,8489+18]..[230,8489+20])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/closure/closure.ml[230,8489+6]..[230,8489+17])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[230,8489+6]..[230,8489+13])
                        Pexp_ident "is_pure" (middle_end/closure/closure.ml[230,8489+6]..[230,8489+13])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[230,8489+14]..[230,8489+17])
                            Pexp_ident "def" (middle_end/closure/closure.ml[230,8489+14]..[230,8489+17])
                      ]
                  <arg>
                  Nolabel
                    expression (middle_end/closure/closure.ml[230,8489+21]..[230,8489+33])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[230,8489+21]..[230,8489+28])
                        Pexp_ident "is_pure" (middle_end/closure/closure.ml[230,8489+21]..[230,8489+28])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[230,8489+29]..[230,8489+33])
                            Pexp_ident "body" (middle_end/closure/closure.ml[230,8489+29]..[230,8489+33])
                      ]
                ]
            <case>
              pattern (middle_end/closure/closure.ml[231,8523+4]..[231,8523+5])
                Ppat_any
              expression (middle_end/closure/closure.ml[231,8523+9]..[231,8523+14])
                Pexp_construct "false" (middle_end/closure/closure.ml[231,8523+9]..[231,8523+14])
                None
          ]
    ]
  structure_item (middle_end/closure/closure.ml[235,8595+0]..[235,8595+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[235,8595+4]..[235,8595+14])
          Ppat_var "make_const" (middle_end/closure/closure.ml[235,8595+4]..[235,8595+14])
        expression (middle_end/closure/closure.ml[235,8595+15]..[235,8595+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[235,8595+15]..[235,8595+16])
            Ppat_var "c" (middle_end/closure/closure.ml[235,8595+15]..[235,8595+16])
          expression (middle_end/closure/closure.ml[235,8595+19]..[235,8595+44])
            Pexp_tuple
            [
              expression (middle_end/closure/closure.ml[235,8595+20]..[235,8595+28])
                Pexp_construct "Uconst" (middle_end/closure/closure.ml[235,8595+20]..[235,8595+26])
                Some
                  expression (middle_end/closure/closure.ml[235,8595+27]..[235,8595+28])
                    Pexp_ident "c" (middle_end/closure/closure.ml[235,8595+27]..[235,8595+28])
              expression (middle_end/closure/closure.ml[235,8595+30]..[235,8595+43])
                Pexp_construct "Value_const" (middle_end/closure/closure.ml[235,8595+30]..[235,8595+41])
                Some
                  expression (middle_end/closure/closure.ml[235,8595+42]..[235,8595+43])
                    Pexp_ident "c" (middle_end/closure/closure.ml[235,8595+42]..[235,8595+43])
            ]
    ]
  structure_item (middle_end/closure/closure.ml[236,8640+0]..[238,8737+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[236,8640+4]..[236,8640+18])
          Ppat_var "make_const_ref" (middle_end/closure/closure.ml[236,8640+4]..[236,8640+18])
        expression (middle_end/closure/closure.ml[236,8640+19]..[238,8737+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[236,8640+19]..[236,8640+20])
            Ppat_var "c" (middle_end/closure/closure.ml[236,8640+19]..[236,8640+20])
          expression (middle_end/closure/closure.ml[237,8663+2]..[238,8737+12])
            Pexp_apply
            expression (middle_end/closure/closure.ml[237,8663+2]..[237,8663+12])
              Pexp_ident "make_const" (middle_end/closure/closure.ml[237,8663+2]..[237,8663+12])
            [
              <arg>
              Nolabel
                expression (middle_end/closure/closure.ml[237,8663+12]..[238,8737+12])
                  Pexp_construct "Uconst_ref" (middle_end/closure/closure.ml[237,8663+13]..[237,8663+23])
                  Some
                    expression (middle_end/closure/closure.ml[237,8663+23]..[238,8737+11])
                      Pexp_tuple
                      [
                        expression (middle_end/closure/closure.ml[237,8663+24]..[237,8663+72])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[237,8663+24]..[237,8663+57])
                            Pexp_ident "Compilenv.new_structured_constant" (middle_end/closure/closure.ml[237,8663+24]..[237,8663+57])
                          [
                            <arg>
                            Labelled "shared"
                              expression (middle_end/closure/closure.ml[237,8663+66]..[237,8663+70])
                                Pexp_construct "true" (middle_end/closure/closure.ml[237,8663+66]..[237,8663+70])
                                None
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[237,8663+71]..[237,8663+72])
                                Pexp_ident "c" (middle_end/closure/closure.ml[237,8663+71]..[237,8663+72])
                          ]
                        expression (middle_end/closure/closure.ml[238,8737+4]..[238,8737+10])
                          Pexp_construct "Some" (middle_end/closure/closure.ml[238,8737+4]..[238,8737+8])
                          Some
                            expression (middle_end/closure/closure.ml[238,8737+9]..[238,8737+10])
                              Pexp_ident "c" (middle_end/closure/closure.ml[238,8737+9]..[238,8737+10])
                      ]
            ]
    ]
  structure_item (middle_end/closure/closure.ml[239,8750+0]..[239,8750+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[239,8750+4]..[239,8750+18])
          Ppat_var "make_const_int" (middle_end/closure/closure.ml[239,8750+4]..[239,8750+18])
        expression (middle_end/closure/closure.ml[239,8750+19]..[239,8750+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[239,8750+19]..[239,8750+20])
            Ppat_var "n" (middle_end/closure/closure.ml[239,8750+19]..[239,8750+20])
          expression (middle_end/closure/closure.ml[239,8750+23]..[239,8750+48])
            Pexp_apply
            expression (middle_end/closure/closure.ml[239,8750+23]..[239,8750+33])
              Pexp_ident "make_const" (middle_end/closure/closure.ml[239,8750+23]..[239,8750+33])
            [
              <arg>
              Nolabel
                expression (middle_end/closure/closure.ml[239,8750+34]..[239,8750+48])
                  Pexp_construct "Uconst_int" (middle_end/closure/closure.ml[239,8750+35]..[239,8750+45])
                  Some
                    expression (middle_end/closure/closure.ml[239,8750+46]..[239,8750+47])
                      Pexp_ident "n" (middle_end/closure/closure.ml[239,8750+46]..[239,8750+47])
            ]
    ]
  structure_item (middle_end/closure/closure.ml[240,8799+0]..[240,8799+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[240,8799+4]..[240,8799+19])
          Ppat_var "make_const_bool" (middle_end/closure/closure.ml[240,8799+4]..[240,8799+19])
        expression (middle_end/closure/closure.ml[240,8799+20]..[240,8799+58]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[240,8799+20]..[240,8799+21])
            Ppat_var "b" (middle_end/closure/closure.ml[240,8799+20]..[240,8799+21])
          expression (middle_end/closure/closure.ml[240,8799+24]..[240,8799+58])
            Pexp_apply
            expression (middle_end/closure/closure.ml[240,8799+24]..[240,8799+38])
              Pexp_ident "make_const_int" (middle_end/closure/closure.ml[240,8799+24]..[240,8799+38])
            [
              <arg>
              Nolabel
                expression (middle_end/closure/closure.ml[240,8799+38]..[240,8799+58])
                  Pexp_ifthenelse
                  expression (middle_end/closure/closure.ml[240,8799+42]..[240,8799+43])
                    Pexp_ident "b" (middle_end/closure/closure.ml[240,8799+42]..[240,8799+43])
                  expression (middle_end/closure/closure.ml[240,8799+49]..[240,8799+50])
                    Pexp_constant PConst_int (1,None)
                  Some
                    expression (middle_end/closure/closure.ml[240,8799+56]..[240,8799+57])
                      Pexp_constant PConst_int (0,None)
            ]
    ]
  structure_item (middle_end/closure/closure.ml[242,8859+0]..[251,9070+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[242,8859+4]..[242,8859+27])
          Ppat_var "make_integer_comparison" (middle_end/closure/closure.ml[242,8859+4]..[242,8859+27])
        expression (middle_end/closure/closure.ml[242,8859+28]..[251,9070+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[242,8859+28]..[242,8859+31])
            Ppat_var "cmp" (middle_end/closure/closure.ml[242,8859+28]..[242,8859+31])
          expression (middle_end/closure/closure.ml[242,8859+32]..[251,9070+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[242,8859+32]..[242,8859+33])
              Ppat_var "x" (middle_end/closure/closure.ml[242,8859+32]..[242,8859+33])
            expression (middle_end/closure/closure.ml[242,8859+34]..[251,9070+21]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/closure/closure.ml[242,8859+34]..[242,8859+35])
                Ppat_var "y" (middle_end/closure/closure.ml[242,8859+34]..[242,8859+35])
              expression (middle_end/closure/closure.ml[243,8897+2]..[251,9070+21])
                Pexp_open Fresh
                module_expr (middle_end/closure/closure.ml[243,8897+11]..[243,8897+29])
                  Pmod_ident "Clambda_primitives" (middle_end/closure/closure.ml[243,8897+11]..[243,8897+29])
                expression (middle_end/closure/closure.ml[244,8930+2]..[251,9070+21])
                  Pexp_apply
                  expression (middle_end/closure/closure.ml[244,8930+2]..[244,8930+17])
                    Pexp_ident "make_const_bool" (middle_end/closure/closure.ml[244,8930+2]..[244,8930+17])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure.ml[245,8948+4]..[251,9070+21])
                        Pexp_match
                        expression (middle_end/closure/closure.ml[245,8948+11]..[245,8948+14])
                          Pexp_ident "cmp" (middle_end/closure/closure.ml[245,8948+11]..[245,8948+14])
                        [
                          <case>
                            pattern (middle_end/closure/closure.ml[246,8968+7]..[246,8968+10])
                              Ppat_construct "Ceq" (middle_end/closure/closure.ml[246,8968+7]..[246,8968+10])
                              None
                            expression (middle_end/closure/closure.ml[246,8968+14]..[246,8968+19])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[246,8968+16]..[246,8968+17])
                                Pexp_ident "=" (middle_end/closure/closure.ml[246,8968+16]..[246,8968+17])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[246,8968+14]..[246,8968+15])
                                    Pexp_ident "x" (middle_end/closure/closure.ml[246,8968+14]..[246,8968+15])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[246,8968+18]..[246,8968+19])
                                    Pexp_ident "y" (middle_end/closure/closure.ml[246,8968+18]..[246,8968+19])
                              ]
                          <case>
                            pattern (middle_end/closure/closure.ml[247,8988+7]..[247,8988+10])
                              Ppat_construct "Cne" (middle_end/closure/closure.ml[247,8988+7]..[247,8988+10])
                              None
                            expression (middle_end/closure/closure.ml[247,8988+14]..[247,8988+20])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[247,8988+16]..[247,8988+18])
                                Pexp_ident "<>" (middle_end/closure/closure.ml[247,8988+16]..[247,8988+18])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[247,8988+14]..[247,8988+15])
                                    Pexp_ident "x" (middle_end/closure/closure.ml[247,8988+14]..[247,8988+15])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[247,8988+19]..[247,8988+20])
                                    Pexp_ident "y" (middle_end/closure/closure.ml[247,8988+19]..[247,8988+20])
                              ]
                          <case>
                            pattern (middle_end/closure/closure.ml[248,9009+7]..[248,9009+10])
                              Ppat_construct "Clt" (middle_end/closure/closure.ml[248,9009+7]..[248,9009+10])
                              None
                            expression (middle_end/closure/closure.ml[248,9009+14]..[248,9009+19])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[248,9009+16]..[248,9009+17])
                                Pexp_ident "<" (middle_end/closure/closure.ml[248,9009+16]..[248,9009+17])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[248,9009+14]..[248,9009+15])
                                    Pexp_ident "x" (middle_end/closure/closure.ml[248,9009+14]..[248,9009+15])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[248,9009+18]..[248,9009+19])
                                    Pexp_ident "y" (middle_end/closure/closure.ml[248,9009+18]..[248,9009+19])
                              ]
                          <case>
                            pattern (middle_end/closure/closure.ml[249,9029+7]..[249,9029+10])
                              Ppat_construct "Cgt" (middle_end/closure/closure.ml[249,9029+7]..[249,9029+10])
                              None
                            expression (middle_end/closure/closure.ml[249,9029+14]..[249,9029+19])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[249,9029+16]..[249,9029+17])
                                Pexp_ident ">" (middle_end/closure/closure.ml[249,9029+16]..[249,9029+17])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[249,9029+14]..[249,9029+15])
                                    Pexp_ident "x" (middle_end/closure/closure.ml[249,9029+14]..[249,9029+15])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[249,9029+18]..[249,9029+19])
                                    Pexp_ident "y" (middle_end/closure/closure.ml[249,9029+18]..[249,9029+19])
                              ]
                          <case>
                            pattern (middle_end/closure/closure.ml[250,9049+7]..[250,9049+10])
                              Ppat_construct "Cle" (middle_end/closure/closure.ml[250,9049+7]..[250,9049+10])
                              None
                            expression (middle_end/closure/closure.ml[250,9049+14]..[250,9049+20])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[250,9049+16]..[250,9049+18])
                                Pexp_ident "<=" (middle_end/closure/closure.ml[250,9049+16]..[250,9049+18])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[250,9049+14]..[250,9049+15])
                                    Pexp_ident "x" (middle_end/closure/closure.ml[250,9049+14]..[250,9049+15])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[250,9049+19]..[250,9049+20])
                                    Pexp_ident "y" (middle_end/closure/closure.ml[250,9049+19]..[250,9049+20])
                              ]
                          <case>
                            pattern (middle_end/closure/closure.ml[251,9070+7]..[251,9070+10])
                              Ppat_construct "Cge" (middle_end/closure/closure.ml[251,9070+7]..[251,9070+10])
                              None
                            expression (middle_end/closure/closure.ml[251,9070+14]..[251,9070+20])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[251,9070+16]..[251,9070+18])
                                Pexp_ident ">=" (middle_end/closure/closure.ml[251,9070+16]..[251,9070+18])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[251,9070+14]..[251,9070+15])
                                    Pexp_ident "x" (middle_end/closure/closure.ml[251,9070+14]..[251,9070+15])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[251,9070+19]..[251,9070+20])
                                    Pexp_ident "y" (middle_end/closure/closure.ml[251,9070+19]..[251,9070+20])
                              ]
                        ]
                  ]
    ]
  structure_item (middle_end/closure/closure.ml[253,9093+0]..[265,9387+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[253,9093+4]..[253,9093+25])
          Ppat_var "make_float_comparison" (middle_end/closure/closure.ml[253,9093+4]..[253,9093+25])
        expression (middle_end/closure/closure.ml[253,9093+26]..[265,9387+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[253,9093+26]..[253,9093+29])
            Ppat_var "cmp" (middle_end/closure/closure.ml[253,9093+26]..[253,9093+29])
          expression (middle_end/closure/closure.ml[253,9093+30]..[265,9387+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[253,9093+30]..[253,9093+31])
              Ppat_var "x" (middle_end/closure/closure.ml[253,9093+30]..[253,9093+31])
            expression (middle_end/closure/closure.ml[253,9093+32]..[265,9387+29]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/closure/closure.ml[253,9093+32]..[253,9093+33])
                Ppat_var "y" (middle_end/closure/closure.ml[253,9093+32]..[253,9093+33])
              expression (middle_end/closure/closure.ml[254,9129+2]..[265,9387+29])
                Pexp_apply
                expression (middle_end/closure/closure.ml[254,9129+2]..[254,9129+17])
                  Pexp_ident "make_const_bool" (middle_end/closure/closure.ml[254,9129+2]..[254,9129+17])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/closure/closure.ml[255,9147+4]..[265,9387+29])
                      Pexp_match
                      expression (middle_end/closure/closure.ml[255,9147+11]..[255,9147+14])
                        Pexp_ident "cmp" (middle_end/closure/closure.ml[255,9147+11]..[255,9147+14])
                      [
                        <case>
                          pattern (middle_end/closure/closure.ml[256,9167+7]..[256,9167+11])
                            Ppat_construct "CFeq" (middle_end/closure/closure.ml[256,9167+7]..[256,9167+11])
                            None
                          expression (middle_end/closure/closure.ml[256,9167+15]..[256,9167+20])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[256,9167+17]..[256,9167+18])
                              Pexp_ident "=" (middle_end/closure/closure.ml[256,9167+17]..[256,9167+18])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[256,9167+15]..[256,9167+16])
                                  Pexp_ident "x" (middle_end/closure/closure.ml[256,9167+15]..[256,9167+16])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[256,9167+19]..[256,9167+20])
                                  Pexp_ident "y" (middle_end/closure/closure.ml[256,9167+19]..[256,9167+20])
                            ]
                        <case>
                          pattern (middle_end/closure/closure.ml[257,9188+7]..[257,9188+12])
                            Ppat_construct "CFneq" (middle_end/closure/closure.ml[257,9188+7]..[257,9188+12])
                            None
                          expression (middle_end/closure/closure.ml[257,9188+16]..[257,9188+27])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[257,9188+16]..[257,9188+19])
                              Pexp_ident "not" (middle_end/closure/closure.ml[257,9188+16]..[257,9188+19])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[257,9188+20]..[257,9188+27])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[257,9188+23]..[257,9188+24])
                                    Pexp_ident "=" (middle_end/closure/closure.ml[257,9188+23]..[257,9188+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[257,9188+21]..[257,9188+22])
                                        Pexp_ident "x" (middle_end/closure/closure.ml[257,9188+21]..[257,9188+22])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[257,9188+25]..[257,9188+26])
                                        Pexp_ident "y" (middle_end/closure/closure.ml[257,9188+25]..[257,9188+26])
                                  ]
                            ]
                        <case>
                          pattern (middle_end/closure/closure.ml[258,9216+7]..[258,9216+11])
                            Ppat_construct "CFlt" (middle_end/closure/closure.ml[258,9216+7]..[258,9216+11])
                            None
                          expression (middle_end/closure/closure.ml[258,9216+15]..[258,9216+20])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[258,9216+17]..[258,9216+18])
                              Pexp_ident "<" (middle_end/closure/closure.ml[258,9216+17]..[258,9216+18])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[258,9216+15]..[258,9216+16])
                                  Pexp_ident "x" (middle_end/closure/closure.ml[258,9216+15]..[258,9216+16])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[258,9216+19]..[258,9216+20])
                                  Pexp_ident "y" (middle_end/closure/closure.ml[258,9216+19]..[258,9216+20])
                            ]
                        <case>
                          pattern (middle_end/closure/closure.ml[259,9237+7]..[259,9237+12])
                            Ppat_construct "CFnlt" (middle_end/closure/closure.ml[259,9237+7]..[259,9237+12])
                            None
                          expression (middle_end/closure/closure.ml[259,9237+16]..[259,9237+27])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[259,9237+16]..[259,9237+19])
                              Pexp_ident "not" (middle_end/closure/closure.ml[259,9237+16]..[259,9237+19])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[259,9237+20]..[259,9237+27])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[259,9237+23]..[259,9237+24])
                                    Pexp_ident "<" (middle_end/closure/closure.ml[259,9237+23]..[259,9237+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[259,9237+21]..[259,9237+22])
                                        Pexp_ident "x" (middle_end/closure/closure.ml[259,9237+21]..[259,9237+22])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[259,9237+25]..[259,9237+26])
                                        Pexp_ident "y" (middle_end/closure/closure.ml[259,9237+25]..[259,9237+26])
                                  ]
                            ]
                        <case>
                          pattern (middle_end/closure/closure.ml[260,9265+7]..[260,9265+11])
                            Ppat_construct "CFgt" (middle_end/closure/closure.ml[260,9265+7]..[260,9265+11])
                            None
                          expression (middle_end/closure/closure.ml[260,9265+15]..[260,9265+20])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[260,9265+17]..[260,9265+18])
                              Pexp_ident ">" (middle_end/closure/closure.ml[260,9265+17]..[260,9265+18])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[260,9265+15]..[260,9265+16])
                                  Pexp_ident "x" (middle_end/closure/closure.ml[260,9265+15]..[260,9265+16])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[260,9265+19]..[260,9265+20])
                                  Pexp_ident "y" (middle_end/closure/closure.ml[260,9265+19]..[260,9265+20])
                            ]
                        <case>
                          pattern (middle_end/closure/closure.ml[261,9286+7]..[261,9286+12])
                            Ppat_construct "CFngt" (middle_end/closure/closure.ml[261,9286+7]..[261,9286+12])
                            None
                          expression (middle_end/closure/closure.ml[261,9286+16]..[261,9286+27])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[261,9286+16]..[261,9286+19])
                              Pexp_ident "not" (middle_end/closure/closure.ml[261,9286+16]..[261,9286+19])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[261,9286+20]..[261,9286+27])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[261,9286+23]..[261,9286+24])
                                    Pexp_ident ">" (middle_end/closure/closure.ml[261,9286+23]..[261,9286+24])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[261,9286+21]..[261,9286+22])
                                        Pexp_ident "x" (middle_end/closure/closure.ml[261,9286+21]..[261,9286+22])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[261,9286+25]..[261,9286+26])
                                        Pexp_ident "y" (middle_end/closure/closure.ml[261,9286+25]..[261,9286+26])
                                  ]
                            ]
                        <case>
                          pattern (middle_end/closure/closure.ml[262,9314+7]..[262,9314+11])
                            Ppat_construct "CFle" (middle_end/closure/closure.ml[262,9314+7]..[262,9314+11])
                            None
                          expression (middle_end/closure/closure.ml[262,9314+15]..[262,9314+21])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[262,9314+17]..[262,9314+19])
                              Pexp_ident "<=" (middle_end/closure/closure.ml[262,9314+17]..[262,9314+19])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[262,9314+15]..[262,9314+16])
                                  Pexp_ident "x" (middle_end/closure/closure.ml[262,9314+15]..[262,9314+16])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[262,9314+20]..[262,9314+21])
                                  Pexp_ident "y" (middle_end/closure/closure.ml[262,9314+20]..[262,9314+21])
                            ]
                        <case>
                          pattern (middle_end/closure/closure.ml[263,9336+7]..[263,9336+12])
                            Ppat_construct "CFnle" (middle_end/closure/closure.ml[263,9336+7]..[263,9336+12])
                            None
                          expression (middle_end/closure/closure.ml[263,9336+16]..[263,9336+28])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[263,9336+16]..[263,9336+19])
                              Pexp_ident "not" (middle_end/closure/closure.ml[263,9336+16]..[263,9336+19])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[263,9336+20]..[263,9336+28])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[263,9336+23]..[263,9336+25])
                                    Pexp_ident "<=" (middle_end/closure/closure.ml[263,9336+23]..[263,9336+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[263,9336+21]..[263,9336+22])
                                        Pexp_ident "x" (middle_end/closure/closure.ml[263,9336+21]..[263,9336+22])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[263,9336+26]..[263,9336+27])
                                        Pexp_ident "y" (middle_end/closure/closure.ml[263,9336+26]..[263,9336+27])
                                  ]
                            ]
                        <case>
                          pattern (middle_end/closure/closure.ml[264,9365+7]..[264,9365+11])
                            Ppat_construct "CFge" (middle_end/closure/closure.ml[264,9365+7]..[264,9365+11])
                            None
                          expression (middle_end/closure/closure.ml[264,9365+15]..[264,9365+21])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[264,9365+17]..[264,9365+19])
                              Pexp_ident ">=" (middle_end/closure/closure.ml[264,9365+17]..[264,9365+19])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[264,9365+15]..[264,9365+16])
                                  Pexp_ident "x" (middle_end/closure/closure.ml[264,9365+15]..[264,9365+16])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[264,9365+20]..[264,9365+21])
                                  Pexp_ident "y" (middle_end/closure/closure.ml[264,9365+20]..[264,9365+21])
                            ]
                        <case>
                          pattern (middle_end/closure/closure.ml[265,9387+7]..[265,9387+12])
                            Ppat_construct "CFnge" (middle_end/closure/closure.ml[265,9387+7]..[265,9387+12])
                            None
                          expression (middle_end/closure/closure.ml[265,9387+16]..[265,9387+28])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[265,9387+16]..[265,9387+19])
                              Pexp_ident "not" (middle_end/closure/closure.ml[265,9387+16]..[265,9387+19])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[265,9387+20]..[265,9387+28])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[265,9387+23]..[265,9387+25])
                                    Pexp_ident ">=" (middle_end/closure/closure.ml[265,9387+23]..[265,9387+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[265,9387+21]..[265,9387+22])
                                        Pexp_ident "x" (middle_end/closure/closure.ml[265,9387+21]..[265,9387+22])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[265,9387+26]..[265,9387+27])
                                        Pexp_ident "y" (middle_end/closure/closure.ml[265,9387+26]..[265,9387+27])
                                  ]
                            ]
                      ]
                ]
    ]
  structure_item (middle_end/closure/closure.ml[267,9418+0]..[267,9418+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[267,9418+4]..[267,9418+20])
          Ppat_var "make_const_float" (middle_end/closure/closure.ml[267,9418+4]..[267,9418+20])
        expression (middle_end/closure/closure.ml[267,9418+21]..[267,9418+56]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[267,9418+21]..[267,9418+22])
            Ppat_var "n" (middle_end/closure/closure.ml[267,9418+21]..[267,9418+22])
          expression (middle_end/closure/closure.ml[267,9418+25]..[267,9418+56])
            Pexp_apply
            expression (middle_end/closure/closure.ml[267,9418+25]..[267,9418+39])
              Pexp_ident "make_const_ref" (middle_end/closure/closure.ml[267,9418+25]..[267,9418+39])
            [
              <arg>
              Nolabel
                expression (middle_end/closure/closure.ml[267,9418+40]..[267,9418+56])
                  Pexp_construct "Uconst_float" (middle_end/closure/closure.ml[267,9418+41]..[267,9418+53])
                  Some
                    expression (middle_end/closure/closure.ml[267,9418+54]..[267,9418+55])
                      Pexp_ident "n" (middle_end/closure/closure.ml[267,9418+54]..[267,9418+55])
            ]
    ]
  structure_item (middle_end/closure/closure.ml[268,9475+0]..[268,9475+61])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[268,9475+4]..[268,9475+21])
          Ppat_var "make_const_natint" (middle_end/closure/closure.ml[268,9475+4]..[268,9475+21])
        expression (middle_end/closure/closure.ml[268,9475+22]..[268,9475+61]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[268,9475+22]..[268,9475+23])
            Ppat_var "n" (middle_end/closure/closure.ml[268,9475+22]..[268,9475+23])
          expression (middle_end/closure/closure.ml[268,9475+26]..[268,9475+61])
            Pexp_apply
            expression (middle_end/closure/closure.ml[268,9475+26]..[268,9475+40])
              Pexp_ident "make_const_ref" (middle_end/closure/closure.ml[268,9475+26]..[268,9475+40])
            [
              <arg>
              Nolabel
                expression (middle_end/closure/closure.ml[268,9475+41]..[268,9475+61])
                  Pexp_construct "Uconst_nativeint" (middle_end/closure/closure.ml[268,9475+42]..[268,9475+58])
                  Some
                    expression (middle_end/closure/closure.ml[268,9475+59]..[268,9475+60])
                      Pexp_ident "n" (middle_end/closure/closure.ml[268,9475+59]..[268,9475+60])
            ]
    ]
  structure_item (middle_end/closure/closure.ml[269,9537+0]..[269,9537+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[269,9537+4]..[269,9537+20])
          Ppat_var "make_const_int32" (middle_end/closure/closure.ml[269,9537+4]..[269,9537+20])
        expression (middle_end/closure/closure.ml[269,9537+21]..[269,9537+56]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[269,9537+21]..[269,9537+22])
            Ppat_var "n" (middle_end/closure/closure.ml[269,9537+21]..[269,9537+22])
          expression (middle_end/closure/closure.ml[269,9537+25]..[269,9537+56])
            Pexp_apply
            expression (middle_end/closure/closure.ml[269,9537+25]..[269,9537+39])
              Pexp_ident "make_const_ref" (middle_end/closure/closure.ml[269,9537+25]..[269,9537+39])
            [
              <arg>
              Nolabel
                expression (middle_end/closure/closure.ml[269,9537+40]..[269,9537+56])
                  Pexp_construct "Uconst_int32" (middle_end/closure/closure.ml[269,9537+41]..[269,9537+53])
                  Some
                    expression (middle_end/closure/closure.ml[269,9537+54]..[269,9537+55])
                      Pexp_ident "n" (middle_end/closure/closure.ml[269,9537+54]..[269,9537+55])
            ]
    ]
  structure_item (middle_end/closure/closure.ml[270,9594+0]..[270,9594+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[270,9594+4]..[270,9594+20])
          Ppat_var "make_const_int64" (middle_end/closure/closure.ml[270,9594+4]..[270,9594+20])
        expression (middle_end/closure/closure.ml[270,9594+21]..[270,9594+56]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[270,9594+21]..[270,9594+22])
            Ppat_var "n" (middle_end/closure/closure.ml[270,9594+21]..[270,9594+22])
          expression (middle_end/closure/closure.ml[270,9594+25]..[270,9594+56])
            Pexp_apply
            expression (middle_end/closure/closure.ml[270,9594+25]..[270,9594+39])
              Pexp_ident "make_const_ref" (middle_end/closure/closure.ml[270,9594+25]..[270,9594+39])
            [
              <arg>
              Nolabel
                expression (middle_end/closure/closure.ml[270,9594+40]..[270,9594+56])
                  Pexp_construct "Uconst_int64" (middle_end/closure/closure.ml[270,9594+41]..[270,9594+53])
                  Some
                    expression (middle_end/closure/closure.ml[270,9594+54]..[270,9594+55])
                      Pexp_ident "n" (middle_end/closure/closure.ml[270,9594+54]..[270,9594+55])
            ]
    ]
  structure_item (middle_end/closure/closure.ml[275,9756+0]..[453,17780+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[275,9756+4]..[275,9756+27])
          Ppat_var "simplif_arith_prim_pure" (middle_end/closure/closure.ml[275,9756+4]..[275,9756+27])
        expression (middle_end/closure/closure.ml[275,9756+28]..[453,17780+12]) ghost
          Pexp_fun
          Labelled "backend"
          None
          pattern (middle_end/closure/closure.ml[275,9756+29]..[275,9756+36])
            Ppat_var "backend" (middle_end/closure/closure.ml[275,9756+29]..[275,9756+36])
          expression (middle_end/closure/closure.ml[275,9756+37]..[453,17780+12]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[275,9756+37]..[275,9756+40])
              Ppat_var "fpc" (middle_end/closure/closure.ml[275,9756+37]..[275,9756+40])
            expression (middle_end/closure/closure.ml[275,9756+41]..[453,17780+12]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/closure/closure.ml[275,9756+41]..[275,9756+42])
                Ppat_var "p" (middle_end/closure/closure.ml[275,9756+41]..[275,9756+42])
              expression (middle_end/closure/closure.ml[275,9756+43]..[453,17780+12]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (middle_end/closure/closure.ml[275,9756+43]..[275,9756+58])
                  Ppat_tuple
                  [
                    pattern (middle_end/closure/closure.ml[275,9756+44]..[275,9756+48])
                      Ppat_var "args" (middle_end/closure/closure.ml[275,9756+44]..[275,9756+48])
                    pattern (middle_end/closure/closure.ml[275,9756+50]..[275,9756+57])
                      Ppat_var "approxs" (middle_end/closure/closure.ml[275,9756+50]..[275,9756+57])
                  ]
                expression (middle_end/closure/closure.ml[275,9756+59]..[453,17780+12]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/closure/closure.ml[275,9756+59]..[275,9756+62])
                    Ppat_var "dbg" (middle_end/closure/closure.ml[275,9756+59]..[275,9756+62])
                  expression (middle_end/closure/closure.ml[276,9821+2]..[453,17780+12])
                    Pexp_letmodule "B" (middle_end/closure/closure.ml[276,9821+13]..[276,9821+14])
                    module_expr (middle_end/closure/closure.ml[276,9821+17]..[276,9821+47])
                      Pmod_unpack
                      expression (middle_end/closure/closure.ml[276,9821+22]..[276,9821+46]) ghost
                        Pexp_constraint
                        expression (middle_end/closure/closure.ml[276,9821+22]..[276,9821+29])
                          Pexp_ident "backend" (middle_end/closure/closure.ml[276,9821+22]..[276,9821+29])
                        core_type (middle_end/closure/closure.ml[276,9821+32]..[276,9821+46])
                          Ptyp_package "Backend_intf.S" (middle_end/closure/closure.ml[276,9821+32]..[276,9821+46])
                          []
                    expression (middle_end/closure/closure.ml[277,9872+2]..[453,17780+12])
                      Pexp_open Fresh
                      module_expr (middle_end/closure/closure.ml[277,9872+11]..[277,9872+29])
                        Pmod_ident "Clambda_primitives" (middle_end/closure/closure.ml[277,9872+11]..[277,9872+29])
                      expression (middle_end/closure/closure.ml[278,9905+2]..[453,17780+12])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[278,9905+6]..[278,9905+13])
                              Ppat_var "default" (middle_end/closure/closure.ml[278,9905+6]..[278,9905+13])
                            expression (middle_end/closure/closure.ml[278,9905+16]..[278,9905+52])
                              Pexp_tuple
                              [
                                expression (middle_end/closure/closure.ml[278,9905+17]..[278,9905+36])
                                  Pexp_construct "Uprim" (middle_end/closure/closure.ml[278,9905+17]..[278,9905+22])
                                  Some
                                    expression (middle_end/closure/closure.ml[278,9905+22]..[278,9905+36])
                                      Pexp_tuple
                                      [
                                        expression (middle_end/closure/closure.ml[278,9905+23]..[278,9905+24])
                                          Pexp_ident "p" (middle_end/closure/closure.ml[278,9905+23]..[278,9905+24])
                                        expression (middle_end/closure/closure.ml[278,9905+26]..[278,9905+30])
                                          Pexp_ident "args" (middle_end/closure/closure.ml[278,9905+26]..[278,9905+30])
                                        expression (middle_end/closure/closure.ml[278,9905+32]..[278,9905+35])
                                          Pexp_ident "dbg" (middle_end/closure/closure.ml[278,9905+32]..[278,9905+35])
                                      ]
                                expression (middle_end/closure/closure.ml[278,9905+38]..[278,9905+51])
                                  Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[278,9905+38]..[278,9905+51])
                                  None
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[279,9961+2]..[453,17780+12])
                          Pexp_match
                          expression (middle_end/closure/closure.ml[279,9961+8]..[279,9961+15])
                            Pexp_ident "approxs" (middle_end/closure/closure.ml[279,9961+8]..[279,9961+15])
                          [
                            <case>
                              pattern (middle_end/closure/closure.ml[281,10015+4]..[281,10015+34])
                                Ppat_construct "::" (middle_end/closure/closure.ml[281,10015+6]..[281,10015+34]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[281,10015+6]..[281,10015+34]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[281,10015+6]..[281,10015+32])
                                        Ppat_construct "Value_const" (middle_end/closure/closure.ml[281,10015+6]..[281,10015+17])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[281,10015+17]..[281,10015+32])
                                            Ppat_construct "Uconst_int" (middle_end/closure/closure.ml[281,10015+18]..[281,10015+28])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[281,10015+29]..[281,10015+31])
                                                Ppat_var "n1" (middle_end/closure/closure.ml[281,10015+29]..[281,10015+31])
                                      pattern (middle_end/closure/closure.ml[281,10015+33]..[281,10015+34]) ghost
                                        Ppat_construct "[]" (middle_end/closure/closure.ml[281,10015+33]..[281,10015+34]) ghost
                                        None
                                    ]
                              expression (middle_end/closure/closure.ml[282,10053+6]..[293,10622+9])
                                Pexp_match
                                expression (middle_end/closure/closure.ml[282,10053+18]..[282,10053+19])
                                  Pexp_ident "p" (middle_end/closure/closure.ml[282,10053+18]..[282,10053+19])
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[283,10078+8]..[283,10078+12])
                                      Ppat_construct "Pnot" (middle_end/closure/closure.ml[283,10078+8]..[283,10078+12])
                                      None
                                    expression (middle_end/closure/closure.ml[283,10078+16]..[283,10078+40])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[283,10078+16]..[283,10078+31])
                                        Pexp_ident "make_const_bool" (middle_end/closure/closure.ml[283,10078+16]..[283,10078+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[283,10078+32]..[283,10078+40])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[283,10078+36]..[283,10078+37])
                                              Pexp_ident "=" (middle_end/closure/closure.ml[283,10078+36]..[283,10078+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[283,10078+33]..[283,10078+35])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[283,10078+33]..[283,10078+35])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[283,10078+38]..[283,10078+39])
                                                  Pexp_constant PConst_int (0,None)
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[284,10119+8]..[284,10119+15])
                                      Ppat_construct "Pnegint" (middle_end/closure/closure.ml[284,10119+8]..[284,10119+15])
                                      None
                                    expression (middle_end/closure/closure.ml[284,10119+19]..[284,10119+40])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[284,10119+19]..[284,10119+33])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[284,10119+19]..[284,10119+33])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[284,10119+34]..[284,10119+40])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[284,10119+35]..[284,10119+36])
                                              Pexp_ident "~-" (middle_end/closure/closure.ml[284,10119+35]..[284,10119+36])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[284,10119+37]..[284,10119+39])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[284,10119+37]..[284,10119+39])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[285,10160+8]..[285,10160+20])
                                      Ppat_construct "Poffsetint" (middle_end/closure/closure.ml[285,10160+8]..[285,10160+18])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[285,10160+19]..[285,10160+20])
                                          Ppat_var "n" (middle_end/closure/closure.ml[285,10160+19]..[285,10160+20])
                                    expression (middle_end/closure/closure.ml[285,10160+24]..[285,10160+47])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[285,10160+24]..[285,10160+38])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[285,10160+24]..[285,10160+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[285,10160+39]..[285,10160+47])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[285,10160+42]..[285,10160+43])
                                              Pexp_ident "+" (middle_end/closure/closure.ml[285,10160+42]..[285,10160+43])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[285,10160+40]..[285,10160+41])
                                                  Pexp_ident "n" (middle_end/closure/closure.ml[285,10160+40]..[285,10160+41])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[285,10160+44]..[285,10160+46])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[285,10160+44]..[285,10160+46])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[286,10208+8]..[286,10208+19])
                                      Ppat_construct "Pfloatofint" (middle_end/closure/closure.ml[286,10208+8]..[286,10208+19])
                                      None
                                    <when>
                                      expression (middle_end/closure/closure.ml[286,10208+25]..[286,10208+28])
                                        Pexp_ident "fpc" (middle_end/closure/closure.ml[286,10208+25]..[286,10208+28])
                                    expression (middle_end/closure/closure.ml[286,10208+32]..[286,10208+66])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[286,10208+32]..[286,10208+48])
                                        Pexp_ident "make_const_float" (middle_end/closure/closure.ml[286,10208+32]..[286,10208+48])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[286,10208+49]..[286,10208+66])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[286,10208+50]..[286,10208+62])
                                              Pexp_ident "float_of_int" (middle_end/closure/closure.ml[286,10208+50]..[286,10208+62])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[286,10208+63]..[286,10208+65])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[286,10208+63]..[286,10208+65])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[287,10275+8]..[287,10275+29])
                                      Ppat_construct "Pbintofint" (middle_end/closure/closure.ml[287,10275+8]..[287,10275+18])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[287,10275+19]..[287,10275+29])
                                          Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[287,10275+19]..[287,10275+29])
                                          None
                                    expression (middle_end/closure/closure.ml[287,10275+33]..[287,10275+72])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[287,10275+33]..[287,10275+50])
                                        Pexp_ident "make_const_natint" (middle_end/closure/closure.ml[287,10275+33]..[287,10275+50])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[287,10275+51]..[287,10275+72])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[287,10275+52]..[287,10275+68])
                                              Pexp_ident "Nativeint.of_int" (middle_end/closure/closure.ml[287,10275+52]..[287,10275+68])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[287,10275+69]..[287,10275+71])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[287,10275+69]..[287,10275+71])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[288,10348+8]..[288,10348+25])
                                      Ppat_construct "Pbintofint" (middle_end/closure/closure.ml[288,10348+8]..[288,10348+18])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[288,10348+19]..[288,10348+25])
                                          Ppat_construct "Pint32" (middle_end/closure/closure.ml[288,10348+19]..[288,10348+25])
                                          None
                                    expression (middle_end/closure/closure.ml[288,10348+29]..[288,10348+63])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[288,10348+29]..[288,10348+45])
                                        Pexp_ident "make_const_int32" (middle_end/closure/closure.ml[288,10348+29]..[288,10348+45])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[288,10348+46]..[288,10348+63])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[288,10348+47]..[288,10348+59])
                                              Pexp_ident "Int32.of_int" (middle_end/closure/closure.ml[288,10348+47]..[288,10348+59])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[288,10348+60]..[288,10348+62])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[288,10348+60]..[288,10348+62])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[289,10412+8]..[289,10412+25])
                                      Ppat_construct "Pbintofint" (middle_end/closure/closure.ml[289,10412+8]..[289,10412+18])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[289,10412+19]..[289,10412+25])
                                          Ppat_construct "Pint64" (middle_end/closure/closure.ml[289,10412+19]..[289,10412+25])
                                          None
                                    expression (middle_end/closure/closure.ml[289,10412+29]..[289,10412+63])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[289,10412+29]..[289,10412+45])
                                        Pexp_ident "make_const_int64" (middle_end/closure/closure.ml[289,10412+29]..[289,10412+45])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[289,10412+46]..[289,10412+63])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[289,10412+47]..[289,10412+59])
                                              Pexp_ident "Int64.of_int" (middle_end/closure/closure.ml[289,10412+47]..[289,10412+59])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[289,10412+60]..[289,10412+62])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[289,10412+60]..[289,10412+62])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[290,10476+8]..[290,10476+16])
                                      Ppat_construct "Pbswap16" (middle_end/closure/closure.ml[290,10476+8]..[290,10476+16])
                                      None
                                    expression (middle_end/closure/closure.ml[290,10476+20]..[291,10535+65])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[290,10476+20]..[290,10476+34])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[290,10476+20]..[290,10476+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[290,10476+35]..[291,10535+65])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[291,10535+36]..[291,10535+39])
                                              Pexp_ident "lor" (middle_end/closure/closure.ml[291,10535+36]..[291,10535+39])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[290,10476+36]..[290,10476+58])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[290,10476+52]..[290,10476+55])
                                                    Pexp_ident "lsl" (middle_end/closure/closure.ml[290,10476+52]..[290,10476+55])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[290,10476+37]..[290,10476+51])
                                                        Pexp_apply
                                                        expression (middle_end/closure/closure.ml[290,10476+41]..[290,10476+45])
                                                          Pexp_ident "land" (middle_end/closure/closure.ml[290,10476+41]..[290,10476+45])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[290,10476+38]..[290,10476+40])
                                                              Pexp_ident "n1" (middle_end/closure/closure.ml[290,10476+38]..[290,10476+40])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[290,10476+46]..[290,10476+50])
                                                              Pexp_constant PConst_int (0xff,None)
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[290,10476+56]..[290,10476+57])
                                                        Pexp_constant PConst_int (8,None)
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[291,10535+40]..[291,10535+64])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[291,10535+58]..[291,10535+61])
                                                    Pexp_ident "lsr" (middle_end/closure/closure.ml[291,10535+58]..[291,10535+61])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[291,10535+41]..[291,10535+57])
                                                        Pexp_apply
                                                        expression (middle_end/closure/closure.ml[291,10535+45]..[291,10535+49])
                                                          Pexp_ident "land" (middle_end/closure/closure.ml[291,10535+45]..[291,10535+49])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[291,10535+42]..[291,10535+44])
                                                              Pexp_ident "n1" (middle_end/closure/closure.ml[291,10535+42]..[291,10535+44])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[291,10535+50]..[291,10535+56])
                                                              Pexp_constant PConst_int (0xff00,None)
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[291,10535+62]..[291,10535+63])
                                                        Pexp_constant PConst_int (8,None)
                                                  ]
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[292,10601+8]..[292,10601+9])
                                      Ppat_any
                                    expression (middle_end/closure/closure.ml[292,10601+13]..[292,10601+20])
                                      Pexp_ident "default" (middle_end/closure/closure.ml[292,10601+13]..[292,10601+20])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[295,10691+4]..[296,10725+34])
                                Ppat_construct "::" (middle_end/closure/closure.ml[295,10691+6]..[296,10725+34]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[295,10691+6]..[296,10725+34]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[295,10691+6]..[295,10691+32])
                                        Ppat_construct "Value_const" (middle_end/closure/closure.ml[295,10691+6]..[295,10691+17])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[295,10691+17]..[295,10691+32])
                                            Ppat_construct "Uconst_int" (middle_end/closure/closure.ml[295,10691+18]..[295,10691+28])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[295,10691+29]..[295,10691+31])
                                                Ppat_var "n1" (middle_end/closure/closure.ml[295,10691+29]..[295,10691+31])
                                      pattern (middle_end/closure/closure.ml[296,10725+6]..[296,10725+34]) ghost
                                        Ppat_construct "::" (middle_end/closure/closure.ml[296,10725+6]..[296,10725+34]) ghost
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[296,10725+6]..[296,10725+34]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[296,10725+6]..[296,10725+32])
                                                Ppat_construct "Value_const" (middle_end/closure/closure.ml[296,10725+6]..[296,10725+17])
                                                Some
                                                  []
                                                  pattern (middle_end/closure/closure.ml[296,10725+17]..[296,10725+32])
                                                    Ppat_construct "Uconst_int" (middle_end/closure/closure.ml[296,10725+18]..[296,10725+28])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[296,10725+29]..[296,10725+31])
                                                        Ppat_var "n2" (middle_end/closure/closure.ml[296,10725+29]..[296,10725+31])
                                              pattern (middle_end/closure/closure.ml[296,10725+33]..[296,10725+34]) ghost
                                                Ppat_construct "[]" (middle_end/closure/closure.ml[296,10725+33]..[296,10725+34]) ghost
                                                None
                                            ]
                                    ]
                              expression (middle_end/closure/closure.ml[297,10763+6]..[316,11643+9])
                                Pexp_match
                                expression (middle_end/closure/closure.ml[297,10763+18]..[297,10763+19])
                                  Pexp_ident "p" (middle_end/closure/closure.ml[297,10763+18]..[297,10763+19])
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[298,10788+8]..[298,10788+16])
                                      Ppat_construct "Psequand" (middle_end/closure/closure.ml[298,10788+8]..[298,10788+16])
                                      None
                                    expression (middle_end/closure/closure.ml[298,10788+20]..[298,10788+56])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[298,10788+20]..[298,10788+35])
                                        Pexp_ident "make_const_bool" (middle_end/closure/closure.ml[298,10788+20]..[298,10788+35])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[298,10788+36]..[298,10788+56])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[298,10788+45]..[298,10788+47])
                                              Pexp_ident "&&" (middle_end/closure/closure.ml[298,10788+45]..[298,10788+47])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[298,10788+37]..[298,10788+44])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[298,10788+40]..[298,10788+42])
                                                    Pexp_ident "<>" (middle_end/closure/closure.ml[298,10788+40]..[298,10788+42])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[298,10788+37]..[298,10788+39])
                                                        Pexp_ident "n1" (middle_end/closure/closure.ml[298,10788+37]..[298,10788+39])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[298,10788+43]..[298,10788+44])
                                                        Pexp_constant PConst_int (0,None)
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[298,10788+48]..[298,10788+55])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[298,10788+51]..[298,10788+53])
                                                    Pexp_ident "<>" (middle_end/closure/closure.ml[298,10788+51]..[298,10788+53])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[298,10788+48]..[298,10788+50])
                                                        Pexp_ident "n2" (middle_end/closure/closure.ml[298,10788+48]..[298,10788+50])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[298,10788+54]..[298,10788+55])
                                                        Pexp_constant PConst_int (0,None)
                                                  ]
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[299,10845+8]..[299,10845+15])
                                      Ppat_construct "Psequor" (middle_end/closure/closure.ml[299,10845+8]..[299,10845+15])
                                      None
                                    expression (middle_end/closure/closure.ml[299,10845+19]..[299,10845+55])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[299,10845+19]..[299,10845+34])
                                        Pexp_ident "make_const_bool" (middle_end/closure/closure.ml[299,10845+19]..[299,10845+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[299,10845+35]..[299,10845+55])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[299,10845+44]..[299,10845+46])
                                              Pexp_ident "||" (middle_end/closure/closure.ml[299,10845+44]..[299,10845+46])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[299,10845+36]..[299,10845+43])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[299,10845+39]..[299,10845+41])
                                                    Pexp_ident "<>" (middle_end/closure/closure.ml[299,10845+39]..[299,10845+41])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[299,10845+36]..[299,10845+38])
                                                        Pexp_ident "n1" (middle_end/closure/closure.ml[299,10845+36]..[299,10845+38])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[299,10845+42]..[299,10845+43])
                                                        Pexp_constant PConst_int (0,None)
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[299,10845+47]..[299,10845+54])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[299,10845+50]..[299,10845+52])
                                                    Pexp_ident "<>" (middle_end/closure/closure.ml[299,10845+50]..[299,10845+52])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[299,10845+47]..[299,10845+49])
                                                        Pexp_ident "n2" (middle_end/closure/closure.ml[299,10845+47]..[299,10845+49])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[299,10845+53]..[299,10845+54])
                                                        Pexp_constant PConst_int (0,None)
                                                  ]
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[300,10901+8]..[300,10901+15])
                                      Ppat_construct "Paddint" (middle_end/closure/closure.ml[300,10901+8]..[300,10901+15])
                                      None
                                    expression (middle_end/closure/closure.ml[300,10901+19]..[300,10901+43])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[300,10901+19]..[300,10901+33])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[300,10901+19]..[300,10901+33])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[300,10901+34]..[300,10901+43])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[300,10901+38]..[300,10901+39])
                                              Pexp_ident "+" (middle_end/closure/closure.ml[300,10901+38]..[300,10901+39])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[300,10901+35]..[300,10901+37])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[300,10901+35]..[300,10901+37])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[300,10901+40]..[300,10901+42])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[300,10901+40]..[300,10901+42])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[301,10945+8]..[301,10945+15])
                                      Ppat_construct "Psubint" (middle_end/closure/closure.ml[301,10945+8]..[301,10945+15])
                                      None
                                    expression (middle_end/closure/closure.ml[301,10945+19]..[301,10945+43])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[301,10945+19]..[301,10945+33])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[301,10945+19]..[301,10945+33])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[301,10945+34]..[301,10945+43])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[301,10945+38]..[301,10945+39])
                                              Pexp_ident "-" (middle_end/closure/closure.ml[301,10945+38]..[301,10945+39])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[301,10945+35]..[301,10945+37])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[301,10945+35]..[301,10945+37])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[301,10945+40]..[301,10945+42])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[301,10945+40]..[301,10945+42])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[302,10989+8]..[302,10989+15])
                                      Ppat_construct "Pmulint" (middle_end/closure/closure.ml[302,10989+8]..[302,10989+15])
                                      None
                                    expression (middle_end/closure/closure.ml[302,10989+19]..[302,10989+43])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[302,10989+19]..[302,10989+33])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[302,10989+19]..[302,10989+33])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[302,10989+34]..[302,10989+43])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[302,10989+38]..[302,10989+39])
                                              Pexp_ident "*" (middle_end/closure/closure.ml[302,10989+38]..[302,10989+39])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[302,10989+35]..[302,10989+37])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[302,10989+35]..[302,10989+37])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[302,10989+40]..[302,10989+42])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[302,10989+40]..[302,10989+42])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[303,11033+8]..[303,11033+17])
                                      Ppat_construct "Pdivint" (middle_end/closure/closure.ml[303,11033+8]..[303,11033+15])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[303,11033+16]..[303,11033+17])
                                          Ppat_any
                                    <when>
                                      expression (middle_end/closure/closure.ml[303,11033+23]..[303,11033+30])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[303,11033+26]..[303,11033+28])
                                          Pexp_ident "<>" (middle_end/closure/closure.ml[303,11033+26]..[303,11033+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[303,11033+23]..[303,11033+25])
                                              Pexp_ident "n2" (middle_end/closure/closure.ml[303,11033+23]..[303,11033+25])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[303,11033+29]..[303,11033+30])
                                              Pexp_constant PConst_int (0,None)
                                        ]
                                    expression (middle_end/closure/closure.ml[303,11033+34]..[303,11033+58])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[303,11033+34]..[303,11033+48])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[303,11033+34]..[303,11033+48])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[303,11033+49]..[303,11033+58])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[303,11033+53]..[303,11033+54])
                                              Pexp_ident "/" (middle_end/closure/closure.ml[303,11033+53]..[303,11033+54])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[303,11033+50]..[303,11033+52])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[303,11033+50]..[303,11033+52])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[303,11033+55]..[303,11033+57])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[303,11033+55]..[303,11033+57])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[304,11092+8]..[304,11092+17])
                                      Ppat_construct "Pmodint" (middle_end/closure/closure.ml[304,11092+8]..[304,11092+15])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[304,11092+16]..[304,11092+17])
                                          Ppat_any
                                    <when>
                                      expression (middle_end/closure/closure.ml[304,11092+23]..[304,11092+30])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[304,11092+26]..[304,11092+28])
                                          Pexp_ident "<>" (middle_end/closure/closure.ml[304,11092+26]..[304,11092+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[304,11092+23]..[304,11092+25])
                                              Pexp_ident "n2" (middle_end/closure/closure.ml[304,11092+23]..[304,11092+25])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[304,11092+29]..[304,11092+30])
                                              Pexp_constant PConst_int (0,None)
                                        ]
                                    expression (middle_end/closure/closure.ml[304,11092+34]..[304,11092+60])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[304,11092+34]..[304,11092+48])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[304,11092+34]..[304,11092+48])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[304,11092+49]..[304,11092+60])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[304,11092+53]..[304,11092+56])
                                              Pexp_ident "mod" (middle_end/closure/closure.ml[304,11092+53]..[304,11092+56])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[304,11092+50]..[304,11092+52])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[304,11092+50]..[304,11092+52])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[304,11092+57]..[304,11092+59])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[304,11092+57]..[304,11092+59])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[305,11153+8]..[305,11153+15])
                                      Ppat_construct "Pandint" (middle_end/closure/closure.ml[305,11153+8]..[305,11153+15])
                                      None
                                    expression (middle_end/closure/closure.ml[305,11153+19]..[305,11153+46])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[305,11153+19]..[305,11153+33])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[305,11153+19]..[305,11153+33])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[305,11153+34]..[305,11153+46])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[305,11153+38]..[305,11153+42])
                                              Pexp_ident "land" (middle_end/closure/closure.ml[305,11153+38]..[305,11153+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[305,11153+35]..[305,11153+37])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[305,11153+35]..[305,11153+37])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[305,11153+43]..[305,11153+45])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[305,11153+43]..[305,11153+45])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[306,11200+8]..[306,11200+14])
                                      Ppat_construct "Porint" (middle_end/closure/closure.ml[306,11200+8]..[306,11200+14])
                                      None
                                    expression (middle_end/closure/closure.ml[306,11200+18]..[306,11200+44])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[306,11200+18]..[306,11200+32])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[306,11200+18]..[306,11200+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[306,11200+33]..[306,11200+44])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[306,11200+37]..[306,11200+40])
                                              Pexp_ident "lor" (middle_end/closure/closure.ml[306,11200+37]..[306,11200+40])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[306,11200+34]..[306,11200+36])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[306,11200+34]..[306,11200+36])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[306,11200+41]..[306,11200+43])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[306,11200+41]..[306,11200+43])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[307,11245+8]..[307,11245+15])
                                      Ppat_construct "Pxorint" (middle_end/closure/closure.ml[307,11245+8]..[307,11245+15])
                                      None
                                    expression (middle_end/closure/closure.ml[307,11245+19]..[307,11245+46])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[307,11245+19]..[307,11245+33])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[307,11245+19]..[307,11245+33])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[307,11245+34]..[307,11245+46])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[307,11245+38]..[307,11245+42])
                                              Pexp_ident "lxor" (middle_end/closure/closure.ml[307,11245+38]..[307,11245+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[307,11245+35]..[307,11245+37])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[307,11245+35]..[307,11245+37])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[307,11245+43]..[307,11245+45])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[307,11245+43]..[307,11245+45])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[308,11292+8]..[308,11292+15])
                                      Ppat_construct "Plslint" (middle_end/closure/closure.ml[308,11292+8]..[308,11292+15])
                                      None
                                    <when>
                                      expression (middle_end/closure/closure.ml[308,11292+21]..[308,11292+51])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[308,11292+29]..[308,11292+31])
                                          Pexp_ident "&&" (middle_end/closure/closure.ml[308,11292+29]..[308,11292+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[308,11292+21]..[308,11292+28])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[308,11292+23]..[308,11292+25])
                                                Pexp_ident "<=" (middle_end/closure/closure.ml[308,11292+23]..[308,11292+25])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[308,11292+21]..[308,11292+22])
                                                    Pexp_constant PConst_int (0,None)
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[308,11292+26]..[308,11292+28])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[308,11292+26]..[308,11292+28])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[308,11292+32]..[308,11292+51])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[308,11292+35]..[308,11292+36])
                                                Pexp_ident "<" (middle_end/closure/closure.ml[308,11292+35]..[308,11292+36])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[308,11292+32]..[308,11292+34])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[308,11292+32]..[308,11292+34])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[308,11292+37]..[308,11292+51])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[308,11292+39]..[308,11292+40])
                                                      Pexp_ident "*" (middle_end/closure/closure.ml[308,11292+39]..[308,11292+40])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[308,11292+37]..[308,11292+38])
                                                          Pexp_constant PConst_int (8,None)
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[308,11292+41]..[308,11292+51])
                                                          Pexp_ident "B.size_int" (middle_end/closure/closure.ml[308,11292+41]..[308,11292+51])
                                                    ]
                                              ]
                                        ]
                                    expression (middle_end/closure/closure.ml[309,11347+10]..[309,11347+36])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[309,11347+10]..[309,11347+24])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[309,11347+10]..[309,11347+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[309,11347+25]..[309,11347+36])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[309,11347+29]..[309,11347+32])
                                              Pexp_ident "lsl" (middle_end/closure/closure.ml[309,11347+29]..[309,11347+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[309,11347+26]..[309,11347+28])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[309,11347+26]..[309,11347+28])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[309,11347+33]..[309,11347+35])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[309,11347+33]..[309,11347+35])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[310,11384+8]..[310,11384+15])
                                      Ppat_construct "Plsrint" (middle_end/closure/closure.ml[310,11384+8]..[310,11384+15])
                                      None
                                    <when>
                                      expression (middle_end/closure/closure.ml[310,11384+21]..[310,11384+51])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[310,11384+29]..[310,11384+31])
                                          Pexp_ident "&&" (middle_end/closure/closure.ml[310,11384+29]..[310,11384+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[310,11384+21]..[310,11384+28])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[310,11384+23]..[310,11384+25])
                                                Pexp_ident "<=" (middle_end/closure/closure.ml[310,11384+23]..[310,11384+25])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[310,11384+21]..[310,11384+22])
                                                    Pexp_constant PConst_int (0,None)
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[310,11384+26]..[310,11384+28])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[310,11384+26]..[310,11384+28])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[310,11384+32]..[310,11384+51])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[310,11384+35]..[310,11384+36])
                                                Pexp_ident "<" (middle_end/closure/closure.ml[310,11384+35]..[310,11384+36])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[310,11384+32]..[310,11384+34])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[310,11384+32]..[310,11384+34])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[310,11384+37]..[310,11384+51])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[310,11384+39]..[310,11384+40])
                                                      Pexp_ident "*" (middle_end/closure/closure.ml[310,11384+39]..[310,11384+40])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[310,11384+37]..[310,11384+38])
                                                          Pexp_constant PConst_int (8,None)
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[310,11384+41]..[310,11384+51])
                                                          Pexp_ident "B.size_int" (middle_end/closure/closure.ml[310,11384+41]..[310,11384+51])
                                                    ]
                                              ]
                                        ]
                                    expression (middle_end/closure/closure.ml[311,11439+10]..[311,11439+36])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[311,11439+10]..[311,11439+24])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[311,11439+10]..[311,11439+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[311,11439+25]..[311,11439+36])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[311,11439+29]..[311,11439+32])
                                              Pexp_ident "lsr" (middle_end/closure/closure.ml[311,11439+29]..[311,11439+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[311,11439+26]..[311,11439+28])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[311,11439+26]..[311,11439+28])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[311,11439+33]..[311,11439+35])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[311,11439+33]..[311,11439+35])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[312,11476+8]..[312,11476+15])
                                      Ppat_construct "Pasrint" (middle_end/closure/closure.ml[312,11476+8]..[312,11476+15])
                                      None
                                    <when>
                                      expression (middle_end/closure/closure.ml[312,11476+21]..[312,11476+51])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[312,11476+29]..[312,11476+31])
                                          Pexp_ident "&&" (middle_end/closure/closure.ml[312,11476+29]..[312,11476+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[312,11476+21]..[312,11476+28])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[312,11476+23]..[312,11476+25])
                                                Pexp_ident "<=" (middle_end/closure/closure.ml[312,11476+23]..[312,11476+25])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[312,11476+21]..[312,11476+22])
                                                    Pexp_constant PConst_int (0,None)
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[312,11476+26]..[312,11476+28])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[312,11476+26]..[312,11476+28])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[312,11476+32]..[312,11476+51])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[312,11476+35]..[312,11476+36])
                                                Pexp_ident "<" (middle_end/closure/closure.ml[312,11476+35]..[312,11476+36])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[312,11476+32]..[312,11476+34])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[312,11476+32]..[312,11476+34])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[312,11476+37]..[312,11476+51])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[312,11476+39]..[312,11476+40])
                                                      Pexp_ident "*" (middle_end/closure/closure.ml[312,11476+39]..[312,11476+40])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[312,11476+37]..[312,11476+38])
                                                          Pexp_constant PConst_int (8,None)
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[312,11476+41]..[312,11476+51])
                                                          Pexp_ident "B.size_int" (middle_end/closure/closure.ml[312,11476+41]..[312,11476+51])
                                                    ]
                                              ]
                                        ]
                                    expression (middle_end/closure/closure.ml[313,11531+10]..[313,11531+36])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[313,11531+10]..[313,11531+24])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[313,11531+10]..[313,11531+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[313,11531+25]..[313,11531+36])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[313,11531+29]..[313,11531+32])
                                              Pexp_ident "asr" (middle_end/closure/closure.ml[313,11531+29]..[313,11531+32])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[313,11531+26]..[313,11531+28])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[313,11531+26]..[313,11531+28])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[313,11531+33]..[313,11531+35])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[313,11531+33]..[313,11531+35])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[314,11568+8]..[314,11568+18])
                                      Ppat_construct "Pintcomp" (middle_end/closure/closure.ml[314,11568+8]..[314,11568+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[314,11568+17]..[314,11568+18])
                                          Ppat_var "c" (middle_end/closure/closure.ml[314,11568+17]..[314,11568+18])
                                    expression (middle_end/closure/closure.ml[314,11568+22]..[314,11568+53])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[314,11568+22]..[314,11568+45])
                                        Pexp_ident "make_integer_comparison" (middle_end/closure/closure.ml[314,11568+22]..[314,11568+45])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[314,11568+46]..[314,11568+47])
                                            Pexp_ident "c" (middle_end/closure/closure.ml[314,11568+46]..[314,11568+47])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[314,11568+48]..[314,11568+50])
                                            Pexp_ident "n1" (middle_end/closure/closure.ml[314,11568+48]..[314,11568+50])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[314,11568+51]..[314,11568+53])
                                            Pexp_ident "n2" (middle_end/closure/closure.ml[314,11568+51]..[314,11568+53])
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[315,11622+8]..[315,11622+9])
                                      Ppat_any
                                    expression (middle_end/closure/closure.ml[315,11622+13]..[315,11622+20])
                                      Pexp_ident "default" (middle_end/closure/closure.ml[315,11622+13]..[315,11622+20])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[318,11667+4]..[318,11667+56])
                                Ppat_construct "::" (middle_end/closure/closure.ml[318,11667+5]..[318,11667+56]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[318,11667+5]..[318,11667+56]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[318,11667+5]..[318,11667+55])
                                        Ppat_construct "Value_const" (middle_end/closure/closure.ml[318,11667+5]..[318,11667+16])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[318,11667+16]..[318,11667+55])
                                            Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[318,11667+17]..[318,11667+27])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[318,11667+27]..[318,11667+54])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/closure/closure.ml[318,11667+28]..[318,11667+29])
                                                    Ppat_any
                                                  pattern (middle_end/closure/closure.ml[318,11667+31]..[318,11667+53])
                                                    Ppat_construct "Some" (middle_end/closure/closure.ml[318,11667+31]..[318,11667+35])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[318,11667+36]..[318,11667+53])
                                                        Ppat_construct "Uconst_float" (middle_end/closure/closure.ml[318,11667+37]..[318,11667+49])
                                                        Some
                                                          []
                                                          pattern (middle_end/closure/closure.ml[318,11667+50]..[318,11667+52])
                                                            Ppat_var "n1" (middle_end/closure/closure.ml[318,11667+50]..[318,11667+52])
                                                ]
                                      pattern (middle_end/closure/closure.ml[318,11667+55]..[318,11667+56]) ghost
                                        Ppat_construct "[]" (middle_end/closure/closure.ml[318,11667+55]..[318,11667+56]) ghost
                                        None
                                    ]
                              <when>
                                expression (middle_end/closure/closure.ml[318,11667+62]..[318,11667+65])
                                  Pexp_ident "fpc" (middle_end/closure/closure.ml[318,11667+62]..[318,11667+65])
                              expression (middle_end/closure/closure.ml[319,11736+6]..[324,11937+9])
                                Pexp_match
                                expression (middle_end/closure/closure.ml[319,11736+18]..[319,11736+19])
                                  Pexp_ident "p" (middle_end/closure/closure.ml[319,11736+18]..[319,11736+19])
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[320,11761+8]..[320,11761+19])
                                      Ppat_construct "Pintoffloat" (middle_end/closure/closure.ml[320,11761+8]..[320,11761+19])
                                      None
                                    expression (middle_end/closure/closure.ml[320,11761+23]..[320,11761+55])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[320,11761+23]..[320,11761+37])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[320,11761+23]..[320,11761+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[320,11761+38]..[320,11761+55])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[320,11761+39]..[320,11761+51])
                                              Pexp_ident "int_of_float" (middle_end/closure/closure.ml[320,11761+39]..[320,11761+51])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[320,11761+52]..[320,11761+54])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[320,11761+52]..[320,11761+54])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[321,11817+8]..[321,11817+17])
                                      Ppat_construct "Pnegfloat" (middle_end/closure/closure.ml[321,11817+8]..[321,11817+17])
                                      None
                                    expression (middle_end/closure/closure.ml[321,11817+21]..[321,11817+45])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[321,11817+21]..[321,11817+37])
                                        Pexp_ident "make_const_float" (middle_end/closure/closure.ml[321,11817+21]..[321,11817+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[321,11817+38]..[321,11817+45])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[321,11817+39]..[321,11817+41])
                                              Pexp_ident "~-." (middle_end/closure/closure.ml[321,11817+39]..[321,11817+41])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[321,11817+42]..[321,11817+44])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[321,11817+42]..[321,11817+44])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[322,11863+8]..[322,11863+17])
                                      Ppat_construct "Pabsfloat" (middle_end/closure/closure.ml[322,11863+8]..[322,11863+17])
                                      None
                                    expression (middle_end/closure/closure.ml[322,11863+21]..[322,11863+52])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[322,11863+21]..[322,11863+37])
                                        Pexp_ident "make_const_float" (middle_end/closure/closure.ml[322,11863+21]..[322,11863+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[322,11863+38]..[322,11863+52])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[322,11863+39]..[322,11863+48])
                                              Pexp_ident "abs_float" (middle_end/closure/closure.ml[322,11863+39]..[322,11863+48])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[322,11863+49]..[322,11863+51])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[322,11863+49]..[322,11863+51])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[323,11916+8]..[323,11916+9])
                                      Ppat_any
                                    expression (middle_end/closure/closure.ml[323,11916+13]..[323,11916+20])
                                      Pexp_ident "default" (middle_end/closure/closure.ml[323,11916+13]..[323,11916+20])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[326,11968+4]..[327,12025+56])
                                Ppat_construct "::" (middle_end/closure/closure.ml[326,11968+5]..[327,12025+56]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[326,11968+5]..[327,12025+56]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[326,11968+5]..[326,11968+55])
                                        Ppat_construct "Value_const" (middle_end/closure/closure.ml[326,11968+5]..[326,11968+16])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[326,11968+16]..[326,11968+55])
                                            Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[326,11968+17]..[326,11968+27])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[326,11968+27]..[326,11968+54])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/closure/closure.ml[326,11968+28]..[326,11968+29])
                                                    Ppat_any
                                                  pattern (middle_end/closure/closure.ml[326,11968+31]..[326,11968+53])
                                                    Ppat_construct "Some" (middle_end/closure/closure.ml[326,11968+31]..[326,11968+35])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[326,11968+36]..[326,11968+53])
                                                        Ppat_construct "Uconst_float" (middle_end/closure/closure.ml[326,11968+37]..[326,11968+49])
                                                        Some
                                                          []
                                                          pattern (middle_end/closure/closure.ml[326,11968+50]..[326,11968+52])
                                                            Ppat_var "n1" (middle_end/closure/closure.ml[326,11968+50]..[326,11968+52])
                                                ]
                                      pattern (middle_end/closure/closure.ml[327,12025+5]..[327,12025+56]) ghost
                                        Ppat_construct "::" (middle_end/closure/closure.ml[327,12025+5]..[327,12025+56]) ghost
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[327,12025+5]..[327,12025+56]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[327,12025+5]..[327,12025+55])
                                                Ppat_construct "Value_const" (middle_end/closure/closure.ml[327,12025+5]..[327,12025+16])
                                                Some
                                                  []
                                                  pattern (middle_end/closure/closure.ml[327,12025+16]..[327,12025+55])
                                                    Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[327,12025+17]..[327,12025+27])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[327,12025+27]..[327,12025+54])
                                                        Ppat_tuple
                                                        [
                                                          pattern (middle_end/closure/closure.ml[327,12025+28]..[327,12025+29])
                                                            Ppat_any
                                                          pattern (middle_end/closure/closure.ml[327,12025+31]..[327,12025+53])
                                                            Ppat_construct "Some" (middle_end/closure/closure.ml[327,12025+31]..[327,12025+35])
                                                            Some
                                                              []
                                                              pattern (middle_end/closure/closure.ml[327,12025+36]..[327,12025+53])
                                                                Ppat_construct "Uconst_float" (middle_end/closure/closure.ml[327,12025+37]..[327,12025+49])
                                                                Some
                                                                  []
                                                                  pattern (middle_end/closure/closure.ml[327,12025+50]..[327,12025+52])
                                                                    Ppat_var "n2" (middle_end/closure/closure.ml[327,12025+50]..[327,12025+52])
                                                        ]
                                              pattern (middle_end/closure/closure.ml[327,12025+55]..[327,12025+56]) ghost
                                                Ppat_construct "[]" (middle_end/closure/closure.ml[327,12025+55]..[327,12025+56]) ghost
                                                None
                                            ]
                                    ]
                              <when>
                                expression (middle_end/closure/closure.ml[327,12025+62]..[327,12025+65])
                                  Pexp_ident "fpc" (middle_end/closure/closure.ml[327,12025+62]..[327,12025+65])
                              expression (middle_end/closure/closure.ml[328,12094+6]..[335,12391+9])
                                Pexp_match
                                expression (middle_end/closure/closure.ml[328,12094+18]..[328,12094+19])
                                  Pexp_ident "p" (middle_end/closure/closure.ml[328,12094+18]..[328,12094+19])
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[329,12119+8]..[329,12119+17])
                                      Ppat_construct "Paddfloat" (middle_end/closure/closure.ml[329,12119+8]..[329,12119+17])
                                      None
                                    expression (middle_end/closure/closure.ml[329,12119+21]..[329,12119+48])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[329,12119+21]..[329,12119+37])
                                        Pexp_ident "make_const_float" (middle_end/closure/closure.ml[329,12119+21]..[329,12119+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[329,12119+38]..[329,12119+48])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[329,12119+42]..[329,12119+44])
                                              Pexp_ident "+." (middle_end/closure/closure.ml[329,12119+42]..[329,12119+44])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[329,12119+39]..[329,12119+41])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[329,12119+39]..[329,12119+41])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[329,12119+45]..[329,12119+47])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[329,12119+45]..[329,12119+47])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[330,12168+8]..[330,12168+17])
                                      Ppat_construct "Psubfloat" (middle_end/closure/closure.ml[330,12168+8]..[330,12168+17])
                                      None
                                    expression (middle_end/closure/closure.ml[330,12168+21]..[330,12168+48])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[330,12168+21]..[330,12168+37])
                                        Pexp_ident "make_const_float" (middle_end/closure/closure.ml[330,12168+21]..[330,12168+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[330,12168+38]..[330,12168+48])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[330,12168+42]..[330,12168+44])
                                              Pexp_ident "-." (middle_end/closure/closure.ml[330,12168+42]..[330,12168+44])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[330,12168+39]..[330,12168+41])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[330,12168+39]..[330,12168+41])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[330,12168+45]..[330,12168+47])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[330,12168+45]..[330,12168+47])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[331,12217+8]..[331,12217+17])
                                      Ppat_construct "Pmulfloat" (middle_end/closure/closure.ml[331,12217+8]..[331,12217+17])
                                      None
                                    expression (middle_end/closure/closure.ml[331,12217+21]..[331,12217+48])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[331,12217+21]..[331,12217+37])
                                        Pexp_ident "make_const_float" (middle_end/closure/closure.ml[331,12217+21]..[331,12217+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[331,12217+38]..[331,12217+48])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[331,12217+42]..[331,12217+44])
                                              Pexp_ident "*." (middle_end/closure/closure.ml[331,12217+42]..[331,12217+44])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[331,12217+39]..[331,12217+41])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[331,12217+39]..[331,12217+41])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[331,12217+45]..[331,12217+47])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[331,12217+45]..[331,12217+47])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[332,12266+8]..[332,12266+17])
                                      Ppat_construct "Pdivfloat" (middle_end/closure/closure.ml[332,12266+8]..[332,12266+17])
                                      None
                                    expression (middle_end/closure/closure.ml[332,12266+21]..[332,12266+48])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[332,12266+21]..[332,12266+37])
                                        Pexp_ident "make_const_float" (middle_end/closure/closure.ml[332,12266+21]..[332,12266+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[332,12266+38]..[332,12266+48])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[332,12266+42]..[332,12266+44])
                                              Pexp_ident "/." (middle_end/closure/closure.ml[332,12266+42]..[332,12266+44])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[332,12266+39]..[332,12266+41])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[332,12266+39]..[332,12266+41])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[332,12266+45]..[332,12266+47])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[332,12266+45]..[332,12266+47])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[333,12315+8]..[333,12315+20])
                                      Ppat_construct "Pfloatcomp" (middle_end/closure/closure.ml[333,12315+8]..[333,12315+18])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[333,12315+19]..[333,12315+20])
                                          Ppat_var "c" (middle_end/closure/closure.ml[333,12315+19]..[333,12315+20])
                                    expression (middle_end/closure/closure.ml[333,12315+25]..[333,12315+54])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[333,12315+25]..[333,12315+46])
                                        Pexp_ident "make_float_comparison" (middle_end/closure/closure.ml[333,12315+25]..[333,12315+46])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[333,12315+47]..[333,12315+48])
                                            Pexp_ident "c" (middle_end/closure/closure.ml[333,12315+47]..[333,12315+48])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[333,12315+49]..[333,12315+51])
                                            Pexp_ident "n1" (middle_end/closure/closure.ml[333,12315+49]..[333,12315+51])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[333,12315+52]..[333,12315+54])
                                            Pexp_ident "n2" (middle_end/closure/closure.ml[333,12315+52]..[333,12315+54])
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[334,12370+8]..[334,12370+9])
                                      Ppat_any
                                    expression (middle_end/closure/closure.ml[334,12370+13]..[334,12370+20])
                                      Pexp_ident "default" (middle_end/closure/closure.ml[334,12370+13]..[334,12370+20])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[337,12419+4]..[337,12419+59])
                                Ppat_construct "::" (middle_end/closure/closure.ml[337,12419+5]..[337,12419+59]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[337,12419+5]..[337,12419+59]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[337,12419+5]..[337,12419+58])
                                        Ppat_construct "Value_const" (middle_end/closure/closure.ml[337,12419+5]..[337,12419+16])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[337,12419+16]..[337,12419+58])
                                            Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[337,12419+17]..[337,12419+27])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[337,12419+27]..[337,12419+57])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/closure/closure.ml[337,12419+28]..[337,12419+29])
                                                    Ppat_any
                                                  pattern (middle_end/closure/closure.ml[337,12419+31]..[337,12419+56])
                                                    Ppat_construct "Some" (middle_end/closure/closure.ml[337,12419+31]..[337,12419+35])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[337,12419+36]..[337,12419+56])
                                                        Ppat_construct "Uconst_nativeint" (middle_end/closure/closure.ml[337,12419+37]..[337,12419+53])
                                                        Some
                                                          []
                                                          pattern (middle_end/closure/closure.ml[337,12419+54]..[337,12419+55])
                                                            Ppat_var "n" (middle_end/closure/closure.ml[337,12419+54]..[337,12419+55])
                                                ]
                                      pattern (middle_end/closure/closure.ml[337,12419+58]..[337,12419+59]) ghost
                                        Ppat_construct "[]" (middle_end/closure/closure.ml[337,12419+58]..[337,12419+59]) ghost
                                        None
                                    ]
                              expression (middle_end/closure/closure.ml[338,12482+6]..[344,12824+9])
                                Pexp_match
                                expression (middle_end/closure/closure.ml[338,12482+18]..[338,12482+19])
                                  Pexp_ident "p" (middle_end/closure/closure.ml[338,12482+18]..[338,12482+19])
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[339,12507+8]..[339,12507+29])
                                      Ppat_construct "Pintofbint" (middle_end/closure/closure.ml[339,12507+8]..[339,12507+18])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[339,12507+19]..[339,12507+29])
                                          Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[339,12507+19]..[339,12507+29])
                                          None
                                    expression (middle_end/closure/closure.ml[339,12507+33]..[339,12507+68])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[339,12507+33]..[339,12507+47])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[339,12507+33]..[339,12507+47])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[339,12507+48]..[339,12507+68])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[339,12507+49]..[339,12507+65])
                                              Pexp_ident "Nativeint.to_int" (middle_end/closure/closure.ml[339,12507+49]..[339,12507+65])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[339,12507+66]..[339,12507+67])
                                                  Pexp_ident "n" (middle_end/closure/closure.ml[339,12507+66]..[339,12507+67])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[340,12576+8]..[340,12576+36])
                                      Ppat_construct "Pcvtbint" (middle_end/closure/closure.ml[340,12576+8]..[340,12576+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[340,12576+16]..[340,12576+36])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[340,12576+17]..[340,12576+27])
                                              Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[340,12576+17]..[340,12576+27])
                                              None
                                            pattern (middle_end/closure/closure.ml[340,12576+29]..[340,12576+35])
                                              Ppat_construct "Pint32" (middle_end/closure/closure.ml[340,12576+29]..[340,12576+35])
                                              None
                                          ]
                                    expression (middle_end/closure/closure.ml[340,12576+40]..[340,12576+79])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[340,12576+40]..[340,12576+56])
                                        Pexp_ident "make_const_int32" (middle_end/closure/closure.ml[340,12576+40]..[340,12576+56])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[340,12576+57]..[340,12576+79])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[340,12576+58]..[340,12576+76])
                                              Pexp_ident "Nativeint.to_int32" (middle_end/closure/closure.ml[340,12576+58]..[340,12576+76])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[340,12576+77]..[340,12576+78])
                                                  Pexp_ident "n" (middle_end/closure/closure.ml[340,12576+77]..[340,12576+78])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[341,12656+8]..[341,12656+36])
                                      Ppat_construct "Pcvtbint" (middle_end/closure/closure.ml[341,12656+8]..[341,12656+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[341,12656+16]..[341,12656+36])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[341,12656+17]..[341,12656+27])
                                              Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[341,12656+17]..[341,12656+27])
                                              None
                                            pattern (middle_end/closure/closure.ml[341,12656+29]..[341,12656+35])
                                              Ppat_construct "Pint64" (middle_end/closure/closure.ml[341,12656+29]..[341,12656+35])
                                              None
                                          ]
                                    expression (middle_end/closure/closure.ml[341,12656+40]..[341,12656+79])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[341,12656+40]..[341,12656+56])
                                        Pexp_ident "make_const_int64" (middle_end/closure/closure.ml[341,12656+40]..[341,12656+56])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[341,12656+57]..[341,12656+79])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[341,12656+58]..[341,12656+76])
                                              Pexp_ident "Int64.of_nativeint" (middle_end/closure/closure.ml[341,12656+58]..[341,12656+76])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[341,12656+77]..[341,12656+78])
                                                  Pexp_ident "n" (middle_end/closure/closure.ml[341,12656+77]..[341,12656+78])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[342,12736+8]..[342,12736+27])
                                      Ppat_construct "Pnegbint" (middle_end/closure/closure.ml[342,12736+8]..[342,12736+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[342,12736+17]..[342,12736+27])
                                          Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[342,12736+17]..[342,12736+27])
                                          None
                                    expression (middle_end/closure/closure.ml[342,12736+31]..[342,12736+66])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[342,12736+31]..[342,12736+48])
                                        Pexp_ident "make_const_natint" (middle_end/closure/closure.ml[342,12736+31]..[342,12736+48])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[342,12736+49]..[342,12736+66])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[342,12736+50]..[342,12736+63])
                                              Pexp_ident "Nativeint.neg" (middle_end/closure/closure.ml[342,12736+50]..[342,12736+63])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[342,12736+64]..[342,12736+65])
                                                  Pexp_ident "n" (middle_end/closure/closure.ml[342,12736+64]..[342,12736+65])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[343,12803+8]..[343,12803+9])
                                      Ppat_any
                                    expression (middle_end/closure/closure.ml[343,12803+13]..[343,12803+20])
                                      Pexp_ident "default" (middle_end/closure/closure.ml[343,12803+13]..[343,12803+20])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[346,12863+4]..[347,12924+60])
                                Ppat_construct "::" (middle_end/closure/closure.ml[346,12863+5]..[347,12924+60]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[346,12863+5]..[347,12924+60]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[346,12863+5]..[346,12863+59])
                                        Ppat_construct "Value_const" (middle_end/closure/closure.ml[346,12863+5]..[346,12863+16])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[346,12863+16]..[346,12863+59])
                                            Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[346,12863+17]..[346,12863+27])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[346,12863+27]..[346,12863+58])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/closure/closure.ml[346,12863+28]..[346,12863+29])
                                                    Ppat_any
                                                  pattern (middle_end/closure/closure.ml[346,12863+31]..[346,12863+57])
                                                    Ppat_construct "Some" (middle_end/closure/closure.ml[346,12863+31]..[346,12863+35])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[346,12863+36]..[346,12863+57])
                                                        Ppat_construct "Uconst_nativeint" (middle_end/closure/closure.ml[346,12863+37]..[346,12863+53])
                                                        Some
                                                          []
                                                          pattern (middle_end/closure/closure.ml[346,12863+54]..[346,12863+56])
                                                            Ppat_var "n1" (middle_end/closure/closure.ml[346,12863+54]..[346,12863+56])
                                                ]
                                      pattern (middle_end/closure/closure.ml[347,12924+5]..[347,12924+60]) ghost
                                        Ppat_construct "::" (middle_end/closure/closure.ml[347,12924+5]..[347,12924+60]) ghost
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[347,12924+5]..[347,12924+60]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[347,12924+5]..[347,12924+59])
                                                Ppat_construct "Value_const" (middle_end/closure/closure.ml[347,12924+5]..[347,12924+16])
                                                Some
                                                  []
                                                  pattern (middle_end/closure/closure.ml[347,12924+16]..[347,12924+59])
                                                    Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[347,12924+17]..[347,12924+27])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[347,12924+27]..[347,12924+58])
                                                        Ppat_tuple
                                                        [
                                                          pattern (middle_end/closure/closure.ml[347,12924+28]..[347,12924+29])
                                                            Ppat_any
                                                          pattern (middle_end/closure/closure.ml[347,12924+31]..[347,12924+57])
                                                            Ppat_construct "Some" (middle_end/closure/closure.ml[347,12924+31]..[347,12924+35])
                                                            Some
                                                              []
                                                              pattern (middle_end/closure/closure.ml[347,12924+36]..[347,12924+57])
                                                                Ppat_construct "Uconst_nativeint" (middle_end/closure/closure.ml[347,12924+37]..[347,12924+53])
                                                                Some
                                                                  []
                                                                  pattern (middle_end/closure/closure.ml[347,12924+54]..[347,12924+56])
                                                                    Ppat_var "n2" (middle_end/closure/closure.ml[347,12924+54]..[347,12924+56])
                                                        ]
                                              pattern (middle_end/closure/closure.ml[347,12924+59]..[347,12924+60]) ghost
                                                Ppat_construct "[]" (middle_end/closure/closure.ml[347,12924+59]..[347,12924+60]) ghost
                                                None
                                            ]
                                    ]
                              expression (middle_end/closure/closure.ml[348,12988+6]..[361,13741+9])
                                Pexp_match
                                expression (middle_end/closure/closure.ml[348,12988+18]..[348,12988+19])
                                  Pexp_ident "p" (middle_end/closure/closure.ml[348,12988+18]..[348,12988+19])
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[349,13013+8]..[349,13013+27])
                                      Ppat_construct "Paddbint" (middle_end/closure/closure.ml[349,13013+8]..[349,13013+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[349,13013+17]..[349,13013+27])
                                          Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[349,13013+17]..[349,13013+27])
                                          None
                                    expression (middle_end/closure/closure.ml[349,13013+31]..[349,13013+70])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[349,13013+31]..[349,13013+48])
                                        Pexp_ident "make_const_natint" (middle_end/closure/closure.ml[349,13013+31]..[349,13013+48])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[349,13013+49]..[349,13013+70])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[349,13013+50]..[349,13013+63])
                                              Pexp_ident "Nativeint.add" (middle_end/closure/closure.ml[349,13013+50]..[349,13013+63])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[349,13013+64]..[349,13013+66])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[349,13013+64]..[349,13013+66])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[349,13013+67]..[349,13013+69])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[349,13013+67]..[349,13013+69])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[350,13084+8]..[350,13084+27])
                                      Ppat_construct "Psubbint" (middle_end/closure/closure.ml[350,13084+8]..[350,13084+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[350,13084+17]..[350,13084+27])
                                          Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[350,13084+17]..[350,13084+27])
                                          None
                                    expression (middle_end/closure/closure.ml[350,13084+31]..[350,13084+70])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[350,13084+31]..[350,13084+48])
                                        Pexp_ident "make_const_natint" (middle_end/closure/closure.ml[350,13084+31]..[350,13084+48])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[350,13084+49]..[350,13084+70])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[350,13084+50]..[350,13084+63])
                                              Pexp_ident "Nativeint.sub" (middle_end/closure/closure.ml[350,13084+50]..[350,13084+63])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[350,13084+64]..[350,13084+66])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[350,13084+64]..[350,13084+66])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[350,13084+67]..[350,13084+69])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[350,13084+67]..[350,13084+69])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[351,13155+8]..[351,13155+27])
                                      Ppat_construct "Pmulbint" (middle_end/closure/closure.ml[351,13155+8]..[351,13155+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[351,13155+17]..[351,13155+27])
                                          Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[351,13155+17]..[351,13155+27])
                                          None
                                    expression (middle_end/closure/closure.ml[351,13155+31]..[351,13155+70])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[351,13155+31]..[351,13155+48])
                                        Pexp_ident "make_const_natint" (middle_end/closure/closure.ml[351,13155+31]..[351,13155+48])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[351,13155+49]..[351,13155+70])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[351,13155+50]..[351,13155+63])
                                              Pexp_ident "Nativeint.mul" (middle_end/closure/closure.ml[351,13155+50]..[351,13155+63])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[351,13155+64]..[351,13155+66])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[351,13155+64]..[351,13155+66])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[351,13155+67]..[351,13155+69])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[351,13155+67]..[351,13155+69])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[352,13226+8]..[352,13226+34])
                                      Ppat_construct "Pdivbint" (middle_end/closure/closure.ml[352,13226+8]..[352,13226+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[352,13226+17]..[352,13226+34])
                                          Ppat_record Closed
                                          [
                                            "size" (middle_end/closure/closure.ml[352,13226+18]..[352,13226+22])
                                              pattern (middle_end/closure/closure.ml[352,13226+23]..[352,13226+33])
                                                Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[352,13226+23]..[352,13226+33])
                                                None
                                          ]
                                    <when>
                                      expression (middle_end/closure/closure.ml[352,13226+40]..[352,13226+48])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[352,13226+43]..[352,13226+45])
                                          Pexp_ident "<>" (middle_end/closure/closure.ml[352,13226+43]..[352,13226+45])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[352,13226+40]..[352,13226+42])
                                              Pexp_ident "n2" (middle_end/closure/closure.ml[352,13226+40]..[352,13226+42])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[352,13226+46]..[352,13226+48])
                                              Pexp_constant PConst_int (0,Some n)
                                        ]
                                    expression (middle_end/closure/closure.ml[353,13278+10]..[353,13278+49])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[353,13278+10]..[353,13278+27])
                                        Pexp_ident "make_const_natint" (middle_end/closure/closure.ml[353,13278+10]..[353,13278+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[353,13278+28]..[353,13278+49])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[353,13278+29]..[353,13278+42])
                                              Pexp_ident "Nativeint.div" (middle_end/closure/closure.ml[353,13278+29]..[353,13278+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[353,13278+43]..[353,13278+45])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[353,13278+43]..[353,13278+45])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[353,13278+46]..[353,13278+48])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[353,13278+46]..[353,13278+48])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[354,13328+8]..[354,13328+34])
                                      Ppat_construct "Pmodbint" (middle_end/closure/closure.ml[354,13328+8]..[354,13328+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[354,13328+17]..[354,13328+34])
                                          Ppat_record Closed
                                          [
                                            "size" (middle_end/closure/closure.ml[354,13328+18]..[354,13328+22])
                                              pattern (middle_end/closure/closure.ml[354,13328+23]..[354,13328+33])
                                                Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[354,13328+23]..[354,13328+33])
                                                None
                                          ]
                                    <when>
                                      expression (middle_end/closure/closure.ml[354,13328+40]..[354,13328+48])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[354,13328+43]..[354,13328+45])
                                          Pexp_ident "<>" (middle_end/closure/closure.ml[354,13328+43]..[354,13328+45])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[354,13328+40]..[354,13328+42])
                                              Pexp_ident "n2" (middle_end/closure/closure.ml[354,13328+40]..[354,13328+42])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[354,13328+46]..[354,13328+48])
                                              Pexp_constant PConst_int (0,Some n)
                                        ]
                                    expression (middle_end/closure/closure.ml[355,13380+10]..[355,13380+49])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[355,13380+10]..[355,13380+27])
                                        Pexp_ident "make_const_natint" (middle_end/closure/closure.ml[355,13380+10]..[355,13380+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[355,13380+28]..[355,13380+49])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[355,13380+29]..[355,13380+42])
                                              Pexp_ident "Nativeint.rem" (middle_end/closure/closure.ml[355,13380+29]..[355,13380+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[355,13380+43]..[355,13380+45])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[355,13380+43]..[355,13380+45])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[355,13380+46]..[355,13380+48])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[355,13380+46]..[355,13380+48])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[356,13430+8]..[356,13430+27])
                                      Ppat_construct "Pandbint" (middle_end/closure/closure.ml[356,13430+8]..[356,13430+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[356,13430+17]..[356,13430+27])
                                          Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[356,13430+17]..[356,13430+27])
                                          None
                                    expression (middle_end/closure/closure.ml[356,13430+31]..[356,13430+73])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[356,13430+31]..[356,13430+48])
                                        Pexp_ident "make_const_natint" (middle_end/closure/closure.ml[356,13430+31]..[356,13430+48])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[356,13430+49]..[356,13430+73])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[356,13430+50]..[356,13430+66])
                                              Pexp_ident "Nativeint.logand" (middle_end/closure/closure.ml[356,13430+50]..[356,13430+66])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[356,13430+67]..[356,13430+69])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[356,13430+67]..[356,13430+69])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[356,13430+70]..[356,13430+72])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[356,13430+70]..[356,13430+72])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[357,13504+8]..[357,13504+26])
                                      Ppat_construct "Porbint" (middle_end/closure/closure.ml[357,13504+8]..[357,13504+15])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[357,13504+16]..[357,13504+26])
                                          Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[357,13504+16]..[357,13504+26])
                                          None
                                    expression (middle_end/closure/closure.ml[357,13504+31]..[357,13504+72])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[357,13504+31]..[357,13504+48])
                                        Pexp_ident "make_const_natint" (middle_end/closure/closure.ml[357,13504+31]..[357,13504+48])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[357,13504+49]..[357,13504+72])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[357,13504+50]..[357,13504+65])
                                              Pexp_ident "Nativeint.logor" (middle_end/closure/closure.ml[357,13504+50]..[357,13504+65])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[357,13504+66]..[357,13504+68])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[357,13504+66]..[357,13504+68])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[357,13504+69]..[357,13504+71])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[357,13504+69]..[357,13504+71])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[358,13577+8]..[358,13577+27])
                                      Ppat_construct "Pxorbint" (middle_end/closure/closure.ml[358,13577+8]..[358,13577+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[358,13577+17]..[358,13577+27])
                                          Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[358,13577+17]..[358,13577+27])
                                          None
                                    expression (middle_end/closure/closure.ml[358,13577+31]..[358,13577+73])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[358,13577+31]..[358,13577+48])
                                        Pexp_ident "make_const_natint" (middle_end/closure/closure.ml[358,13577+31]..[358,13577+48])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[358,13577+49]..[358,13577+73])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[358,13577+50]..[358,13577+66])
                                              Pexp_ident "Nativeint.logxor" (middle_end/closure/closure.ml[358,13577+50]..[358,13577+66])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[358,13577+67]..[358,13577+69])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[358,13577+67]..[358,13577+69])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[358,13577+70]..[358,13577+72])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[358,13577+70]..[358,13577+72])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[359,13651+8]..[359,13651+32])
                                      Ppat_construct "Pbintcomp" (middle_end/closure/closure.ml[359,13651+8]..[359,13651+17])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[359,13651+17]..[359,13651+32])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[359,13651+18]..[359,13651+28])
                                              Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[359,13651+18]..[359,13651+28])
                                              None
                                            pattern (middle_end/closure/closure.ml[359,13651+30]..[359,13651+31])
                                              Ppat_var "c" (middle_end/closure/closure.ml[359,13651+30]..[359,13651+31])
                                          ]
                                    expression (middle_end/closure/closure.ml[359,13651+37]..[359,13651+68])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[359,13651+37]..[359,13651+60])
                                        Pexp_ident "make_integer_comparison" (middle_end/closure/closure.ml[359,13651+37]..[359,13651+60])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[359,13651+61]..[359,13651+62])
                                            Pexp_ident "c" (middle_end/closure/closure.ml[359,13651+61]..[359,13651+62])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[359,13651+63]..[359,13651+65])
                                            Pexp_ident "n1" (middle_end/closure/closure.ml[359,13651+63]..[359,13651+65])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[359,13651+66]..[359,13651+68])
                                            Pexp_ident "n2" (middle_end/closure/closure.ml[359,13651+66]..[359,13651+68])
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[360,13720+8]..[360,13720+9])
                                      Ppat_any
                                    expression (middle_end/closure/closure.ml[360,13720+13]..[360,13720+20])
                                      Pexp_ident "default" (middle_end/closure/closure.ml[360,13720+13]..[360,13720+20])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[363,13774+4]..[364,13835+32])
                                Ppat_construct "::" (middle_end/closure/closure.ml[363,13774+5]..[364,13835+32]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[363,13774+5]..[364,13835+32]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[363,13774+5]..[363,13774+59])
                                        Ppat_construct "Value_const" (middle_end/closure/closure.ml[363,13774+5]..[363,13774+16])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[363,13774+16]..[363,13774+59])
                                            Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[363,13774+17]..[363,13774+27])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[363,13774+27]..[363,13774+58])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/closure/closure.ml[363,13774+28]..[363,13774+29])
                                                    Ppat_any
                                                  pattern (middle_end/closure/closure.ml[363,13774+31]..[363,13774+57])
                                                    Ppat_construct "Some" (middle_end/closure/closure.ml[363,13774+31]..[363,13774+35])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[363,13774+36]..[363,13774+57])
                                                        Ppat_construct "Uconst_nativeint" (middle_end/closure/closure.ml[363,13774+37]..[363,13774+53])
                                                        Some
                                                          []
                                                          pattern (middle_end/closure/closure.ml[363,13774+54]..[363,13774+56])
                                                            Ppat_var "n1" (middle_end/closure/closure.ml[363,13774+54]..[363,13774+56])
                                                ]
                                      pattern (middle_end/closure/closure.ml[364,13835+5]..[364,13835+32]) ghost
                                        Ppat_construct "::" (middle_end/closure/closure.ml[364,13835+5]..[364,13835+32]) ghost
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[364,13835+5]..[364,13835+32]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[364,13835+5]..[364,13835+31])
                                                Ppat_construct "Value_const" (middle_end/closure/closure.ml[364,13835+5]..[364,13835+16])
                                                Some
                                                  []
                                                  pattern (middle_end/closure/closure.ml[364,13835+16]..[364,13835+31])
                                                    Ppat_construct "Uconst_int" (middle_end/closure/closure.ml[364,13835+17]..[364,13835+27])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[364,13835+28]..[364,13835+30])
                                                        Ppat_var "n2" (middle_end/closure/closure.ml[364,13835+28]..[364,13835+30])
                                              pattern (middle_end/closure/closure.ml[364,13835+31]..[364,13835+32]) ghost
                                                Ppat_construct "[]" (middle_end/closure/closure.ml[364,13835+31]..[364,13835+32]) ghost
                                                None
                                            ]
                                    ]
                              expression (middle_end/closure/closure.ml[365,13871+6]..[373,14299+9])
                                Pexp_match
                                expression (middle_end/closure/closure.ml[365,13871+18]..[365,13871+19])
                                  Pexp_ident "p" (middle_end/closure/closure.ml[365,13871+18]..[365,13871+19])
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[366,13896+8]..[366,13896+27])
                                      Ppat_construct "Plslbint" (middle_end/closure/closure.ml[366,13896+8]..[366,13896+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[366,13896+17]..[366,13896+27])
                                          Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[366,13896+17]..[366,13896+27])
                                          None
                                    <when>
                                      expression (middle_end/closure/closure.ml[366,13896+33]..[366,13896+63])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[366,13896+41]..[366,13896+43])
                                          Pexp_ident "&&" (middle_end/closure/closure.ml[366,13896+41]..[366,13896+43])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[366,13896+33]..[366,13896+40])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[366,13896+35]..[366,13896+37])
                                                Pexp_ident "<=" (middle_end/closure/closure.ml[366,13896+35]..[366,13896+37])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[366,13896+33]..[366,13896+34])
                                                    Pexp_constant PConst_int (0,None)
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[366,13896+38]..[366,13896+40])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[366,13896+38]..[366,13896+40])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[366,13896+44]..[366,13896+63])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[366,13896+47]..[366,13896+48])
                                                Pexp_ident "<" (middle_end/closure/closure.ml[366,13896+47]..[366,13896+48])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[366,13896+44]..[366,13896+46])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[366,13896+44]..[366,13896+46])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[366,13896+49]..[366,13896+63])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[366,13896+51]..[366,13896+52])
                                                      Pexp_ident "*" (middle_end/closure/closure.ml[366,13896+51]..[366,13896+52])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[366,13896+49]..[366,13896+50])
                                                          Pexp_constant PConst_int (8,None)
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[366,13896+53]..[366,13896+63])
                                                          Pexp_ident "B.size_int" (middle_end/closure/closure.ml[366,13896+53]..[366,13896+63])
                                                    ]
                                              ]
                                        ]
                                    expression (middle_end/closure/closure.ml[367,13963+10]..[367,13963+56])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[367,13963+10]..[367,13963+27])
                                        Pexp_ident "make_const_natint" (middle_end/closure/closure.ml[367,13963+10]..[367,13963+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[367,13963+28]..[367,13963+56])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[367,13963+29]..[367,13963+49])
                                              Pexp_ident "Nativeint.shift_left" (middle_end/closure/closure.ml[367,13963+29]..[367,13963+49])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[367,13963+50]..[367,13963+52])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[367,13963+50]..[367,13963+52])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[367,13963+53]..[367,13963+55])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[367,13963+53]..[367,13963+55])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[368,14020+8]..[368,14020+27])
                                      Ppat_construct "Plsrbint" (middle_end/closure/closure.ml[368,14020+8]..[368,14020+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[368,14020+17]..[368,14020+27])
                                          Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[368,14020+17]..[368,14020+27])
                                          None
                                    <when>
                                      expression (middle_end/closure/closure.ml[368,14020+33]..[368,14020+63])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[368,14020+41]..[368,14020+43])
                                          Pexp_ident "&&" (middle_end/closure/closure.ml[368,14020+41]..[368,14020+43])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[368,14020+33]..[368,14020+40])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[368,14020+35]..[368,14020+37])
                                                Pexp_ident "<=" (middle_end/closure/closure.ml[368,14020+35]..[368,14020+37])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[368,14020+33]..[368,14020+34])
                                                    Pexp_constant PConst_int (0,None)
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[368,14020+38]..[368,14020+40])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[368,14020+38]..[368,14020+40])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[368,14020+44]..[368,14020+63])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[368,14020+47]..[368,14020+48])
                                                Pexp_ident "<" (middle_end/closure/closure.ml[368,14020+47]..[368,14020+48])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[368,14020+44]..[368,14020+46])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[368,14020+44]..[368,14020+46])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[368,14020+49]..[368,14020+63])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[368,14020+51]..[368,14020+52])
                                                      Pexp_ident "*" (middle_end/closure/closure.ml[368,14020+51]..[368,14020+52])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[368,14020+49]..[368,14020+50])
                                                          Pexp_constant PConst_int (8,None)
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[368,14020+53]..[368,14020+63])
                                                          Pexp_ident "B.size_int" (middle_end/closure/closure.ml[368,14020+53]..[368,14020+63])
                                                    ]
                                              ]
                                        ]
                                    expression (middle_end/closure/closure.ml[369,14087+10]..[369,14087+65])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[369,14087+10]..[369,14087+27])
                                        Pexp_ident "make_const_natint" (middle_end/closure/closure.ml[369,14087+10]..[369,14087+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[369,14087+28]..[369,14087+65])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[369,14087+29]..[369,14087+58])
                                              Pexp_ident "Nativeint.shift_right_logical" (middle_end/closure/closure.ml[369,14087+29]..[369,14087+58])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[369,14087+59]..[369,14087+61])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[369,14087+59]..[369,14087+61])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[369,14087+62]..[369,14087+64])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[369,14087+62]..[369,14087+64])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[370,14153+8]..[370,14153+27])
                                      Ppat_construct "Pasrbint" (middle_end/closure/closure.ml[370,14153+8]..[370,14153+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[370,14153+17]..[370,14153+27])
                                          Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[370,14153+17]..[370,14153+27])
                                          None
                                    <when>
                                      expression (middle_end/closure/closure.ml[370,14153+33]..[370,14153+63])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[370,14153+41]..[370,14153+43])
                                          Pexp_ident "&&" (middle_end/closure/closure.ml[370,14153+41]..[370,14153+43])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[370,14153+33]..[370,14153+40])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[370,14153+35]..[370,14153+37])
                                                Pexp_ident "<=" (middle_end/closure/closure.ml[370,14153+35]..[370,14153+37])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[370,14153+33]..[370,14153+34])
                                                    Pexp_constant PConst_int (0,None)
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[370,14153+38]..[370,14153+40])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[370,14153+38]..[370,14153+40])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[370,14153+44]..[370,14153+63])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[370,14153+47]..[370,14153+48])
                                                Pexp_ident "<" (middle_end/closure/closure.ml[370,14153+47]..[370,14153+48])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[370,14153+44]..[370,14153+46])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[370,14153+44]..[370,14153+46])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[370,14153+49]..[370,14153+63])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[370,14153+51]..[370,14153+52])
                                                      Pexp_ident "*" (middle_end/closure/closure.ml[370,14153+51]..[370,14153+52])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[370,14153+49]..[370,14153+50])
                                                          Pexp_constant PConst_int (8,None)
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[370,14153+53]..[370,14153+63])
                                                          Pexp_ident "B.size_int" (middle_end/closure/closure.ml[370,14153+53]..[370,14153+63])
                                                    ]
                                              ]
                                        ]
                                    expression (middle_end/closure/closure.ml[371,14220+10]..[371,14220+57])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[371,14220+10]..[371,14220+27])
                                        Pexp_ident "make_const_natint" (middle_end/closure/closure.ml[371,14220+10]..[371,14220+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[371,14220+28]..[371,14220+57])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[371,14220+29]..[371,14220+50])
                                              Pexp_ident "Nativeint.shift_right" (middle_end/closure/closure.ml[371,14220+29]..[371,14220+50])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[371,14220+51]..[371,14220+53])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[371,14220+51]..[371,14220+53])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[371,14220+54]..[371,14220+56])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[371,14220+54]..[371,14220+56])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[372,14278+8]..[372,14278+9])
                                      Ppat_any
                                    expression (middle_end/closure/closure.ml[372,14278+13]..[372,14278+20])
                                      Pexp_ident "default" (middle_end/closure/closure.ml[372,14278+13]..[372,14278+20])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[375,14323+4]..[375,14323+55])
                                Ppat_construct "::" (middle_end/closure/closure.ml[375,14323+5]..[375,14323+55]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[375,14323+5]..[375,14323+55]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[375,14323+5]..[375,14323+54])
                                        Ppat_construct "Value_const" (middle_end/closure/closure.ml[375,14323+5]..[375,14323+16])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[375,14323+16]..[375,14323+54])
                                            Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[375,14323+17]..[375,14323+27])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[375,14323+27]..[375,14323+53])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/closure/closure.ml[375,14323+28]..[375,14323+29])
                                                    Ppat_any
                                                  pattern (middle_end/closure/closure.ml[375,14323+31]..[375,14323+52])
                                                    Ppat_construct "Some" (middle_end/closure/closure.ml[375,14323+31]..[375,14323+35])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[375,14323+36]..[375,14323+52])
                                                        Ppat_construct "Uconst_int32" (middle_end/closure/closure.ml[375,14323+37]..[375,14323+49])
                                                        Some
                                                          []
                                                          pattern (middle_end/closure/closure.ml[375,14323+50]..[375,14323+51])
                                                            Ppat_var "n" (middle_end/closure/closure.ml[375,14323+50]..[375,14323+51])
                                                ]
                                      pattern (middle_end/closure/closure.ml[375,14323+54]..[375,14323+55]) ghost
                                        Ppat_construct "[]" (middle_end/closure/closure.ml[375,14323+54]..[375,14323+55]) ghost
                                        None
                                    ]
                              expression (middle_end/closure/closure.ml[376,14382+6]..[382,14700+9])
                                Pexp_match
                                expression (middle_end/closure/closure.ml[376,14382+18]..[376,14382+19])
                                  Pexp_ident "p" (middle_end/closure/closure.ml[376,14382+18]..[376,14382+19])
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[377,14407+8]..[377,14407+25])
                                      Ppat_construct "Pintofbint" (middle_end/closure/closure.ml[377,14407+8]..[377,14407+18])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[377,14407+19]..[377,14407+25])
                                          Ppat_construct "Pint32" (middle_end/closure/closure.ml[377,14407+19]..[377,14407+25])
                                          None
                                    expression (middle_end/closure/closure.ml[377,14407+29]..[377,14407+60])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[377,14407+29]..[377,14407+43])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[377,14407+29]..[377,14407+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[377,14407+44]..[377,14407+60])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[377,14407+45]..[377,14407+57])
                                              Pexp_ident "Int32.to_int" (middle_end/closure/closure.ml[377,14407+45]..[377,14407+57])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[377,14407+58]..[377,14407+59])
                                                  Pexp_ident "n" (middle_end/closure/closure.ml[377,14407+58]..[377,14407+59])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[378,14468+8]..[378,14468+36])
                                      Ppat_construct "Pcvtbint" (middle_end/closure/closure.ml[378,14468+8]..[378,14468+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[378,14468+16]..[378,14468+36])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[378,14468+17]..[378,14468+23])
                                              Ppat_construct "Pint32" (middle_end/closure/closure.ml[378,14468+17]..[378,14468+23])
                                              None
                                            pattern (middle_end/closure/closure.ml[378,14468+25]..[378,14468+35])
                                              Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[378,14468+25]..[378,14468+35])
                                              None
                                          ]
                                    expression (middle_end/closure/closure.ml[378,14468+40]..[378,14468+80])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[378,14468+40]..[378,14468+57])
                                        Pexp_ident "make_const_natint" (middle_end/closure/closure.ml[378,14468+40]..[378,14468+57])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[378,14468+58]..[378,14468+80])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[378,14468+59]..[378,14468+77])
                                              Pexp_ident "Nativeint.of_int32" (middle_end/closure/closure.ml[378,14468+59]..[378,14468+77])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[378,14468+78]..[378,14468+79])
                                                  Pexp_ident "n" (middle_end/closure/closure.ml[378,14468+78]..[378,14468+79])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[379,14549+8]..[379,14549+32])
                                      Ppat_construct "Pcvtbint" (middle_end/closure/closure.ml[379,14549+8]..[379,14549+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[379,14549+16]..[379,14549+32])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[379,14549+17]..[379,14549+23])
                                              Ppat_construct "Pint32" (middle_end/closure/closure.ml[379,14549+17]..[379,14549+23])
                                              None
                                            pattern (middle_end/closure/closure.ml[379,14549+25]..[379,14549+31])
                                              Ppat_construct "Pint64" (middle_end/closure/closure.ml[379,14549+25]..[379,14549+31])
                                              None
                                          ]
                                    expression (middle_end/closure/closure.ml[379,14549+36]..[379,14549+71])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[379,14549+36]..[379,14549+52])
                                        Pexp_ident "make_const_int64" (middle_end/closure/closure.ml[379,14549+36]..[379,14549+52])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[379,14549+53]..[379,14549+71])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[379,14549+54]..[379,14549+68])
                                              Pexp_ident "Int64.of_int32" (middle_end/closure/closure.ml[379,14549+54]..[379,14549+68])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[379,14549+69]..[379,14549+70])
                                                  Pexp_ident "n" (middle_end/closure/closure.ml[379,14549+69]..[379,14549+70])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[380,14621+8]..[380,14621+23])
                                      Ppat_construct "Pnegbint" (middle_end/closure/closure.ml[380,14621+8]..[380,14621+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[380,14621+17]..[380,14621+23])
                                          Ppat_construct "Pint32" (middle_end/closure/closure.ml[380,14621+17]..[380,14621+23])
                                          None
                                    expression (middle_end/closure/closure.ml[380,14621+27]..[380,14621+57])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[380,14621+27]..[380,14621+43])
                                        Pexp_ident "make_const_int32" (middle_end/closure/closure.ml[380,14621+27]..[380,14621+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[380,14621+44]..[380,14621+57])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[380,14621+45]..[380,14621+54])
                                              Pexp_ident "Int32.neg" (middle_end/closure/closure.ml[380,14621+45]..[380,14621+54])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[380,14621+55]..[380,14621+56])
                                                  Pexp_ident "n" (middle_end/closure/closure.ml[380,14621+55]..[380,14621+56])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[381,14679+8]..[381,14679+9])
                                      Ppat_any
                                    expression (middle_end/closure/closure.ml[381,14679+13]..[381,14679+20])
                                      Pexp_ident "default" (middle_end/closure/closure.ml[381,14679+13]..[381,14679+20])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[384,14731+4]..[385,14788+56])
                                Ppat_construct "::" (middle_end/closure/closure.ml[384,14731+5]..[385,14788+56]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[384,14731+5]..[385,14788+56]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[384,14731+5]..[384,14731+55])
                                        Ppat_construct "Value_const" (middle_end/closure/closure.ml[384,14731+5]..[384,14731+16])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[384,14731+16]..[384,14731+55])
                                            Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[384,14731+17]..[384,14731+27])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[384,14731+27]..[384,14731+54])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/closure/closure.ml[384,14731+28]..[384,14731+29])
                                                    Ppat_any
                                                  pattern (middle_end/closure/closure.ml[384,14731+31]..[384,14731+53])
                                                    Ppat_construct "Some" (middle_end/closure/closure.ml[384,14731+31]..[384,14731+35])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[384,14731+36]..[384,14731+53])
                                                        Ppat_construct "Uconst_int32" (middle_end/closure/closure.ml[384,14731+37]..[384,14731+49])
                                                        Some
                                                          []
                                                          pattern (middle_end/closure/closure.ml[384,14731+50]..[384,14731+52])
                                                            Ppat_var "n1" (middle_end/closure/closure.ml[384,14731+50]..[384,14731+52])
                                                ]
                                      pattern (middle_end/closure/closure.ml[385,14788+5]..[385,14788+56]) ghost
                                        Ppat_construct "::" (middle_end/closure/closure.ml[385,14788+5]..[385,14788+56]) ghost
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[385,14788+5]..[385,14788+56]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[385,14788+5]..[385,14788+55])
                                                Ppat_construct "Value_const" (middle_end/closure/closure.ml[385,14788+5]..[385,14788+16])
                                                Some
                                                  []
                                                  pattern (middle_end/closure/closure.ml[385,14788+16]..[385,14788+55])
                                                    Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[385,14788+17]..[385,14788+27])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[385,14788+27]..[385,14788+54])
                                                        Ppat_tuple
                                                        [
                                                          pattern (middle_end/closure/closure.ml[385,14788+28]..[385,14788+29])
                                                            Ppat_any
                                                          pattern (middle_end/closure/closure.ml[385,14788+31]..[385,14788+53])
                                                            Ppat_construct "Some" (middle_end/closure/closure.ml[385,14788+31]..[385,14788+35])
                                                            Some
                                                              []
                                                              pattern (middle_end/closure/closure.ml[385,14788+36]..[385,14788+53])
                                                                Ppat_construct "Uconst_int32" (middle_end/closure/closure.ml[385,14788+37]..[385,14788+49])
                                                                Some
                                                                  []
                                                                  pattern (middle_end/closure/closure.ml[385,14788+50]..[385,14788+52])
                                                                    Ppat_var "n2" (middle_end/closure/closure.ml[385,14788+50]..[385,14788+52])
                                                        ]
                                              pattern (middle_end/closure/closure.ml[385,14788+55]..[385,14788+56]) ghost
                                                Ppat_construct "[]" (middle_end/closure/closure.ml[385,14788+55]..[385,14788+56]) ghost
                                                None
                                            ]
                                    ]
                              expression (middle_end/closure/closure.ml[386,14848+6]..[399,15523+9])
                                Pexp_match
                                expression (middle_end/closure/closure.ml[386,14848+18]..[386,14848+19])
                                  Pexp_ident "p" (middle_end/closure/closure.ml[386,14848+18]..[386,14848+19])
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[387,14873+8]..[387,14873+23])
                                      Ppat_construct "Paddbint" (middle_end/closure/closure.ml[387,14873+8]..[387,14873+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[387,14873+17]..[387,14873+23])
                                          Ppat_construct "Pint32" (middle_end/closure/closure.ml[387,14873+17]..[387,14873+23])
                                          None
                                    expression (middle_end/closure/closure.ml[387,14873+27]..[387,14873+61])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[387,14873+27]..[387,14873+43])
                                        Pexp_ident "make_const_int32" (middle_end/closure/closure.ml[387,14873+27]..[387,14873+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[387,14873+44]..[387,14873+61])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[387,14873+45]..[387,14873+54])
                                              Pexp_ident "Int32.add" (middle_end/closure/closure.ml[387,14873+45]..[387,14873+54])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[387,14873+55]..[387,14873+57])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[387,14873+55]..[387,14873+57])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[387,14873+58]..[387,14873+60])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[387,14873+58]..[387,14873+60])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[388,14935+8]..[388,14935+23])
                                      Ppat_construct "Psubbint" (middle_end/closure/closure.ml[388,14935+8]..[388,14935+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[388,14935+17]..[388,14935+23])
                                          Ppat_construct "Pint32" (middle_end/closure/closure.ml[388,14935+17]..[388,14935+23])
                                          None
                                    expression (middle_end/closure/closure.ml[388,14935+27]..[388,14935+61])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[388,14935+27]..[388,14935+43])
                                        Pexp_ident "make_const_int32" (middle_end/closure/closure.ml[388,14935+27]..[388,14935+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[388,14935+44]..[388,14935+61])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[388,14935+45]..[388,14935+54])
                                              Pexp_ident "Int32.sub" (middle_end/closure/closure.ml[388,14935+45]..[388,14935+54])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[388,14935+55]..[388,14935+57])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[388,14935+55]..[388,14935+57])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[388,14935+58]..[388,14935+60])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[388,14935+58]..[388,14935+60])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[389,14997+8]..[389,14997+23])
                                      Ppat_construct "Pmulbint" (middle_end/closure/closure.ml[389,14997+8]..[389,14997+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[389,14997+17]..[389,14997+23])
                                          Ppat_construct "Pint32" (middle_end/closure/closure.ml[389,14997+17]..[389,14997+23])
                                          None
                                    expression (middle_end/closure/closure.ml[389,14997+27]..[389,14997+61])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[389,14997+27]..[389,14997+43])
                                        Pexp_ident "make_const_int32" (middle_end/closure/closure.ml[389,14997+27]..[389,14997+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[389,14997+44]..[389,14997+61])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[389,14997+45]..[389,14997+54])
                                              Pexp_ident "Int32.mul" (middle_end/closure/closure.ml[389,14997+45]..[389,14997+54])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[389,14997+55]..[389,14997+57])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[389,14997+55]..[389,14997+57])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[389,14997+58]..[389,14997+60])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[389,14997+58]..[389,14997+60])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[390,15059+8]..[390,15059+30])
                                      Ppat_construct "Pdivbint" (middle_end/closure/closure.ml[390,15059+8]..[390,15059+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[390,15059+17]..[390,15059+30])
                                          Ppat_record Closed
                                          [
                                            "size" (middle_end/closure/closure.ml[390,15059+18]..[390,15059+22])
                                              pattern (middle_end/closure/closure.ml[390,15059+23]..[390,15059+29])
                                                Ppat_construct "Pint32" (middle_end/closure/closure.ml[390,15059+23]..[390,15059+29])
                                                None
                                          ]
                                    <when>
                                      expression (middle_end/closure/closure.ml[390,15059+36]..[390,15059+44])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[390,15059+39]..[390,15059+41])
                                          Pexp_ident "<>" (middle_end/closure/closure.ml[390,15059+39]..[390,15059+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[390,15059+36]..[390,15059+38])
                                              Pexp_ident "n2" (middle_end/closure/closure.ml[390,15059+36]..[390,15059+38])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[390,15059+42]..[390,15059+44])
                                              Pexp_constant PConst_int (0,Some l)
                                        ]
                                    expression (middle_end/closure/closure.ml[391,15107+10]..[391,15107+44])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[391,15107+10]..[391,15107+26])
                                        Pexp_ident "make_const_int32" (middle_end/closure/closure.ml[391,15107+10]..[391,15107+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[391,15107+27]..[391,15107+44])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[391,15107+28]..[391,15107+37])
                                              Pexp_ident "Int32.div" (middle_end/closure/closure.ml[391,15107+28]..[391,15107+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[391,15107+38]..[391,15107+40])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[391,15107+38]..[391,15107+40])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[391,15107+41]..[391,15107+43])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[391,15107+41]..[391,15107+43])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[392,15152+8]..[392,15152+30])
                                      Ppat_construct "Pmodbint" (middle_end/closure/closure.ml[392,15152+8]..[392,15152+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[392,15152+17]..[392,15152+30])
                                          Ppat_record Closed
                                          [
                                            "size" (middle_end/closure/closure.ml[392,15152+18]..[392,15152+22])
                                              pattern (middle_end/closure/closure.ml[392,15152+23]..[392,15152+29])
                                                Ppat_construct "Pint32" (middle_end/closure/closure.ml[392,15152+23]..[392,15152+29])
                                                None
                                          ]
                                    <when>
                                      expression (middle_end/closure/closure.ml[392,15152+36]..[392,15152+44])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[392,15152+39]..[392,15152+41])
                                          Pexp_ident "<>" (middle_end/closure/closure.ml[392,15152+39]..[392,15152+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[392,15152+36]..[392,15152+38])
                                              Pexp_ident "n2" (middle_end/closure/closure.ml[392,15152+36]..[392,15152+38])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[392,15152+42]..[392,15152+44])
                                              Pexp_constant PConst_int (0,Some l)
                                        ]
                                    expression (middle_end/closure/closure.ml[393,15200+10]..[393,15200+44])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[393,15200+10]..[393,15200+26])
                                        Pexp_ident "make_const_int32" (middle_end/closure/closure.ml[393,15200+10]..[393,15200+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[393,15200+27]..[393,15200+44])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[393,15200+28]..[393,15200+37])
                                              Pexp_ident "Int32.rem" (middle_end/closure/closure.ml[393,15200+28]..[393,15200+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[393,15200+38]..[393,15200+40])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[393,15200+38]..[393,15200+40])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[393,15200+41]..[393,15200+43])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[393,15200+41]..[393,15200+43])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[394,15245+8]..[394,15245+23])
                                      Ppat_construct "Pandbint" (middle_end/closure/closure.ml[394,15245+8]..[394,15245+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[394,15245+17]..[394,15245+23])
                                          Ppat_construct "Pint32" (middle_end/closure/closure.ml[394,15245+17]..[394,15245+23])
                                          None
                                    expression (middle_end/closure/closure.ml[394,15245+27]..[394,15245+64])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[394,15245+27]..[394,15245+43])
                                        Pexp_ident "make_const_int32" (middle_end/closure/closure.ml[394,15245+27]..[394,15245+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[394,15245+44]..[394,15245+64])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[394,15245+45]..[394,15245+57])
                                              Pexp_ident "Int32.logand" (middle_end/closure/closure.ml[394,15245+45]..[394,15245+57])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[394,15245+58]..[394,15245+60])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[394,15245+58]..[394,15245+60])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[394,15245+61]..[394,15245+63])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[394,15245+61]..[394,15245+63])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[395,15310+8]..[395,15310+22])
                                      Ppat_construct "Porbint" (middle_end/closure/closure.ml[395,15310+8]..[395,15310+15])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[395,15310+16]..[395,15310+22])
                                          Ppat_construct "Pint32" (middle_end/closure/closure.ml[395,15310+16]..[395,15310+22])
                                          None
                                    expression (middle_end/closure/closure.ml[395,15310+26]..[395,15310+62])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[395,15310+26]..[395,15310+42])
                                        Pexp_ident "make_const_int32" (middle_end/closure/closure.ml[395,15310+26]..[395,15310+42])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[395,15310+43]..[395,15310+62])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[395,15310+44]..[395,15310+55])
                                              Pexp_ident "Int32.logor" (middle_end/closure/closure.ml[395,15310+44]..[395,15310+55])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[395,15310+56]..[395,15310+58])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[395,15310+56]..[395,15310+58])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[395,15310+59]..[395,15310+61])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[395,15310+59]..[395,15310+61])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[396,15373+8]..[396,15373+23])
                                      Ppat_construct "Pxorbint" (middle_end/closure/closure.ml[396,15373+8]..[396,15373+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[396,15373+17]..[396,15373+23])
                                          Ppat_construct "Pint32" (middle_end/closure/closure.ml[396,15373+17]..[396,15373+23])
                                          None
                                    expression (middle_end/closure/closure.ml[396,15373+27]..[396,15373+64])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[396,15373+27]..[396,15373+43])
                                        Pexp_ident "make_const_int32" (middle_end/closure/closure.ml[396,15373+27]..[396,15373+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[396,15373+44]..[396,15373+64])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[396,15373+45]..[396,15373+57])
                                              Pexp_ident "Int32.logxor" (middle_end/closure/closure.ml[396,15373+45]..[396,15373+57])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[396,15373+58]..[396,15373+60])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[396,15373+58]..[396,15373+60])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[396,15373+61]..[396,15373+63])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[396,15373+61]..[396,15373+63])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[397,15438+8]..[397,15438+28])
                                      Ppat_construct "Pbintcomp" (middle_end/closure/closure.ml[397,15438+8]..[397,15438+17])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[397,15438+17]..[397,15438+28])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[397,15438+18]..[397,15438+24])
                                              Ppat_construct "Pint32" (middle_end/closure/closure.ml[397,15438+18]..[397,15438+24])
                                              None
                                            pattern (middle_end/closure/closure.ml[397,15438+26]..[397,15438+27])
                                              Ppat_var "c" (middle_end/closure/closure.ml[397,15438+26]..[397,15438+27])
                                          ]
                                    expression (middle_end/closure/closure.ml[397,15438+32]..[397,15438+63])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[397,15438+32]..[397,15438+55])
                                        Pexp_ident "make_integer_comparison" (middle_end/closure/closure.ml[397,15438+32]..[397,15438+55])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[397,15438+56]..[397,15438+57])
                                            Pexp_ident "c" (middle_end/closure/closure.ml[397,15438+56]..[397,15438+57])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[397,15438+58]..[397,15438+60])
                                            Pexp_ident "n1" (middle_end/closure/closure.ml[397,15438+58]..[397,15438+60])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[397,15438+61]..[397,15438+63])
                                            Pexp_ident "n2" (middle_end/closure/closure.ml[397,15438+61]..[397,15438+63])
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[398,15502+8]..[398,15502+9])
                                      Ppat_any
                                    expression (middle_end/closure/closure.ml[398,15502+13]..[398,15502+20])
                                      Pexp_ident "default" (middle_end/closure/closure.ml[398,15502+13]..[398,15502+20])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[401,15552+4]..[402,15609+32])
                                Ppat_construct "::" (middle_end/closure/closure.ml[401,15552+5]..[402,15609+32]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[401,15552+5]..[402,15609+32]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[401,15552+5]..[401,15552+55])
                                        Ppat_construct "Value_const" (middle_end/closure/closure.ml[401,15552+5]..[401,15552+16])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[401,15552+16]..[401,15552+55])
                                            Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[401,15552+17]..[401,15552+27])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[401,15552+27]..[401,15552+54])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/closure/closure.ml[401,15552+28]..[401,15552+29])
                                                    Ppat_any
                                                  pattern (middle_end/closure/closure.ml[401,15552+31]..[401,15552+53])
                                                    Ppat_construct "Some" (middle_end/closure/closure.ml[401,15552+31]..[401,15552+35])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[401,15552+36]..[401,15552+53])
                                                        Ppat_construct "Uconst_int32" (middle_end/closure/closure.ml[401,15552+37]..[401,15552+49])
                                                        Some
                                                          []
                                                          pattern (middle_end/closure/closure.ml[401,15552+50]..[401,15552+52])
                                                            Ppat_var "n1" (middle_end/closure/closure.ml[401,15552+50]..[401,15552+52])
                                                ]
                                      pattern (middle_end/closure/closure.ml[402,15609+5]..[402,15609+32]) ghost
                                        Ppat_construct "::" (middle_end/closure/closure.ml[402,15609+5]..[402,15609+32]) ghost
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[402,15609+5]..[402,15609+32]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[402,15609+5]..[402,15609+31])
                                                Ppat_construct "Value_const" (middle_end/closure/closure.ml[402,15609+5]..[402,15609+16])
                                                Some
                                                  []
                                                  pattern (middle_end/closure/closure.ml[402,15609+16]..[402,15609+31])
                                                    Ppat_construct "Uconst_int" (middle_end/closure/closure.ml[402,15609+17]..[402,15609+27])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[402,15609+28]..[402,15609+30])
                                                        Ppat_var "n2" (middle_end/closure/closure.ml[402,15609+28]..[402,15609+30])
                                              pattern (middle_end/closure/closure.ml[402,15609+31]..[402,15609+32]) ghost
                                                Ppat_construct "[]" (middle_end/closure/closure.ml[402,15609+31]..[402,15609+32]) ghost
                                                None
                                            ]
                                    ]
                              expression (middle_end/closure/closure.ml[403,15645+6]..[411,16010+9])
                                Pexp_match
                                expression (middle_end/closure/closure.ml[403,15645+18]..[403,15645+19])
                                  Pexp_ident "p" (middle_end/closure/closure.ml[403,15645+18]..[403,15645+19])
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[404,15670+8]..[404,15670+23])
                                      Ppat_construct "Plslbint" (middle_end/closure/closure.ml[404,15670+8]..[404,15670+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[404,15670+17]..[404,15670+23])
                                          Ppat_construct "Pint32" (middle_end/closure/closure.ml[404,15670+17]..[404,15670+23])
                                          None
                                    <when>
                                      expression (middle_end/closure/closure.ml[404,15670+29]..[404,15670+47])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[404,15670+37]..[404,15670+39])
                                          Pexp_ident "&&" (middle_end/closure/closure.ml[404,15670+37]..[404,15670+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[404,15670+29]..[404,15670+36])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[404,15670+31]..[404,15670+33])
                                                Pexp_ident "<=" (middle_end/closure/closure.ml[404,15670+31]..[404,15670+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[404,15670+29]..[404,15670+30])
                                                    Pexp_constant PConst_int (0,None)
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[404,15670+34]..[404,15670+36])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[404,15670+34]..[404,15670+36])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[404,15670+40]..[404,15670+47])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[404,15670+43]..[404,15670+44])
                                                Pexp_ident "<" (middle_end/closure/closure.ml[404,15670+43]..[404,15670+44])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[404,15670+40]..[404,15670+42])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[404,15670+40]..[404,15670+42])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[404,15670+45]..[404,15670+47])
                                                    Pexp_constant PConst_int (32,None)
                                              ]
                                        ]
                                    expression (middle_end/closure/closure.ml[405,15721+10]..[405,15721+51])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[405,15721+10]..[405,15721+26])
                                        Pexp_ident "make_const_int32" (middle_end/closure/closure.ml[405,15721+10]..[405,15721+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[405,15721+27]..[405,15721+51])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[405,15721+28]..[405,15721+44])
                                              Pexp_ident "Int32.shift_left" (middle_end/closure/closure.ml[405,15721+28]..[405,15721+44])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[405,15721+45]..[405,15721+47])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[405,15721+45]..[405,15721+47])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[405,15721+48]..[405,15721+50])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[405,15721+48]..[405,15721+50])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[406,15773+8]..[406,15773+23])
                                      Ppat_construct "Plsrbint" (middle_end/closure/closure.ml[406,15773+8]..[406,15773+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[406,15773+17]..[406,15773+23])
                                          Ppat_construct "Pint32" (middle_end/closure/closure.ml[406,15773+17]..[406,15773+23])
                                          None
                                    <when>
                                      expression (middle_end/closure/closure.ml[406,15773+29]..[406,15773+47])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[406,15773+37]..[406,15773+39])
                                          Pexp_ident "&&" (middle_end/closure/closure.ml[406,15773+37]..[406,15773+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[406,15773+29]..[406,15773+36])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[406,15773+31]..[406,15773+33])
                                                Pexp_ident "<=" (middle_end/closure/closure.ml[406,15773+31]..[406,15773+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[406,15773+29]..[406,15773+30])
                                                    Pexp_constant PConst_int (0,None)
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[406,15773+34]..[406,15773+36])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[406,15773+34]..[406,15773+36])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[406,15773+40]..[406,15773+47])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[406,15773+43]..[406,15773+44])
                                                Pexp_ident "<" (middle_end/closure/closure.ml[406,15773+43]..[406,15773+44])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[406,15773+40]..[406,15773+42])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[406,15773+40]..[406,15773+42])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[406,15773+45]..[406,15773+47])
                                                    Pexp_constant PConst_int (32,None)
                                              ]
                                        ]
                                    expression (middle_end/closure/closure.ml[407,15824+10]..[407,15824+60])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[407,15824+10]..[407,15824+26])
                                        Pexp_ident "make_const_int32" (middle_end/closure/closure.ml[407,15824+10]..[407,15824+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[407,15824+27]..[407,15824+60])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[407,15824+28]..[407,15824+53])
                                              Pexp_ident "Int32.shift_right_logical" (middle_end/closure/closure.ml[407,15824+28]..[407,15824+53])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[407,15824+54]..[407,15824+56])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[407,15824+54]..[407,15824+56])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[407,15824+57]..[407,15824+59])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[407,15824+57]..[407,15824+59])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[408,15885+8]..[408,15885+23])
                                      Ppat_construct "Pasrbint" (middle_end/closure/closure.ml[408,15885+8]..[408,15885+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[408,15885+17]..[408,15885+23])
                                          Ppat_construct "Pint32" (middle_end/closure/closure.ml[408,15885+17]..[408,15885+23])
                                          None
                                    <when>
                                      expression (middle_end/closure/closure.ml[408,15885+29]..[408,15885+47])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[408,15885+37]..[408,15885+39])
                                          Pexp_ident "&&" (middle_end/closure/closure.ml[408,15885+37]..[408,15885+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[408,15885+29]..[408,15885+36])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[408,15885+31]..[408,15885+33])
                                                Pexp_ident "<=" (middle_end/closure/closure.ml[408,15885+31]..[408,15885+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[408,15885+29]..[408,15885+30])
                                                    Pexp_constant PConst_int (0,None)
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[408,15885+34]..[408,15885+36])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[408,15885+34]..[408,15885+36])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[408,15885+40]..[408,15885+47])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[408,15885+43]..[408,15885+44])
                                                Pexp_ident "<" (middle_end/closure/closure.ml[408,15885+43]..[408,15885+44])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[408,15885+40]..[408,15885+42])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[408,15885+40]..[408,15885+42])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[408,15885+45]..[408,15885+47])
                                                    Pexp_constant PConst_int (32,None)
                                              ]
                                        ]
                                    expression (middle_end/closure/closure.ml[409,15936+10]..[409,15936+52])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[409,15936+10]..[409,15936+26])
                                        Pexp_ident "make_const_int32" (middle_end/closure/closure.ml[409,15936+10]..[409,15936+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[409,15936+27]..[409,15936+52])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[409,15936+28]..[409,15936+45])
                                              Pexp_ident "Int32.shift_right" (middle_end/closure/closure.ml[409,15936+28]..[409,15936+45])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[409,15936+46]..[409,15936+48])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[409,15936+46]..[409,15936+48])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[409,15936+49]..[409,15936+51])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[409,15936+49]..[409,15936+51])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[410,15989+8]..[410,15989+9])
                                      Ppat_any
                                    expression (middle_end/closure/closure.ml[410,15989+13]..[410,15989+20])
                                      Pexp_ident "default" (middle_end/closure/closure.ml[410,15989+13]..[410,15989+20])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[413,16034+4]..[413,16034+55])
                                Ppat_construct "::" (middle_end/closure/closure.ml[413,16034+5]..[413,16034+55]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[413,16034+5]..[413,16034+55]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[413,16034+5]..[413,16034+54])
                                        Ppat_construct "Value_const" (middle_end/closure/closure.ml[413,16034+5]..[413,16034+16])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[413,16034+16]..[413,16034+54])
                                            Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[413,16034+17]..[413,16034+27])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[413,16034+27]..[413,16034+53])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/closure/closure.ml[413,16034+28]..[413,16034+29])
                                                    Ppat_any
                                                  pattern (middle_end/closure/closure.ml[413,16034+31]..[413,16034+52])
                                                    Ppat_construct "Some" (middle_end/closure/closure.ml[413,16034+31]..[413,16034+35])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[413,16034+36]..[413,16034+52])
                                                        Ppat_construct "Uconst_int64" (middle_end/closure/closure.ml[413,16034+37]..[413,16034+49])
                                                        Some
                                                          []
                                                          pattern (middle_end/closure/closure.ml[413,16034+50]..[413,16034+51])
                                                            Ppat_var "n" (middle_end/closure/closure.ml[413,16034+50]..[413,16034+51])
                                                ]
                                      pattern (middle_end/closure/closure.ml[413,16034+54]..[413,16034+55]) ghost
                                        Ppat_construct "[]" (middle_end/closure/closure.ml[413,16034+54]..[413,16034+55]) ghost
                                        None
                                    ]
                              expression (middle_end/closure/closure.ml[414,16093+6]..[420,16411+9])
                                Pexp_match
                                expression (middle_end/closure/closure.ml[414,16093+18]..[414,16093+19])
                                  Pexp_ident "p" (middle_end/closure/closure.ml[414,16093+18]..[414,16093+19])
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[415,16118+8]..[415,16118+25])
                                      Ppat_construct "Pintofbint" (middle_end/closure/closure.ml[415,16118+8]..[415,16118+18])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[415,16118+19]..[415,16118+25])
                                          Ppat_construct "Pint64" (middle_end/closure/closure.ml[415,16118+19]..[415,16118+25])
                                          None
                                    expression (middle_end/closure/closure.ml[415,16118+29]..[415,16118+60])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[415,16118+29]..[415,16118+43])
                                        Pexp_ident "make_const_int" (middle_end/closure/closure.ml[415,16118+29]..[415,16118+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[415,16118+44]..[415,16118+60])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[415,16118+45]..[415,16118+57])
                                              Pexp_ident "Int64.to_int" (middle_end/closure/closure.ml[415,16118+45]..[415,16118+57])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[415,16118+58]..[415,16118+59])
                                                  Pexp_ident "n" (middle_end/closure/closure.ml[415,16118+58]..[415,16118+59])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[416,16179+8]..[416,16179+32])
                                      Ppat_construct "Pcvtbint" (middle_end/closure/closure.ml[416,16179+8]..[416,16179+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[416,16179+16]..[416,16179+32])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[416,16179+17]..[416,16179+23])
                                              Ppat_construct "Pint64" (middle_end/closure/closure.ml[416,16179+17]..[416,16179+23])
                                              None
                                            pattern (middle_end/closure/closure.ml[416,16179+25]..[416,16179+31])
                                              Ppat_construct "Pint32" (middle_end/closure/closure.ml[416,16179+25]..[416,16179+31])
                                              None
                                          ]
                                    expression (middle_end/closure/closure.ml[416,16179+36]..[416,16179+71])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[416,16179+36]..[416,16179+52])
                                        Pexp_ident "make_const_int32" (middle_end/closure/closure.ml[416,16179+36]..[416,16179+52])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[416,16179+53]..[416,16179+71])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[416,16179+54]..[416,16179+68])
                                              Pexp_ident "Int64.to_int32" (middle_end/closure/closure.ml[416,16179+54]..[416,16179+68])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[416,16179+69]..[416,16179+70])
                                                  Pexp_ident "n" (middle_end/closure/closure.ml[416,16179+69]..[416,16179+70])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[417,16251+8]..[417,16251+36])
                                      Ppat_construct "Pcvtbint" (middle_end/closure/closure.ml[417,16251+8]..[417,16251+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[417,16251+16]..[417,16251+36])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[417,16251+17]..[417,16251+23])
                                              Ppat_construct "Pint64" (middle_end/closure/closure.ml[417,16251+17]..[417,16251+23])
                                              None
                                            pattern (middle_end/closure/closure.ml[417,16251+25]..[417,16251+35])
                                              Ppat_construct "Pnativeint" (middle_end/closure/closure.ml[417,16251+25]..[417,16251+35])
                                              None
                                          ]
                                    expression (middle_end/closure/closure.ml[417,16251+40]..[417,16251+80])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[417,16251+40]..[417,16251+57])
                                        Pexp_ident "make_const_natint" (middle_end/closure/closure.ml[417,16251+40]..[417,16251+57])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[417,16251+58]..[417,16251+80])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[417,16251+59]..[417,16251+77])
                                              Pexp_ident "Int64.to_nativeint" (middle_end/closure/closure.ml[417,16251+59]..[417,16251+77])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[417,16251+78]..[417,16251+79])
                                                  Pexp_ident "n" (middle_end/closure/closure.ml[417,16251+78]..[417,16251+79])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[418,16332+8]..[418,16332+23])
                                      Ppat_construct "Pnegbint" (middle_end/closure/closure.ml[418,16332+8]..[418,16332+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[418,16332+17]..[418,16332+23])
                                          Ppat_construct "Pint64" (middle_end/closure/closure.ml[418,16332+17]..[418,16332+23])
                                          None
                                    expression (middle_end/closure/closure.ml[418,16332+27]..[418,16332+57])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[418,16332+27]..[418,16332+43])
                                        Pexp_ident "make_const_int64" (middle_end/closure/closure.ml[418,16332+27]..[418,16332+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[418,16332+44]..[418,16332+57])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[418,16332+45]..[418,16332+54])
                                              Pexp_ident "Int64.neg" (middle_end/closure/closure.ml[418,16332+45]..[418,16332+54])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[418,16332+55]..[418,16332+56])
                                                  Pexp_ident "n" (middle_end/closure/closure.ml[418,16332+55]..[418,16332+56])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[419,16390+8]..[419,16390+9])
                                      Ppat_any
                                    expression (middle_end/closure/closure.ml[419,16390+13]..[419,16390+20])
                                      Pexp_ident "default" (middle_end/closure/closure.ml[419,16390+13]..[419,16390+20])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[422,16442+4]..[423,16499+56])
                                Ppat_construct "::" (middle_end/closure/closure.ml[422,16442+5]..[423,16499+56]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[422,16442+5]..[423,16499+56]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[422,16442+5]..[422,16442+55])
                                        Ppat_construct "Value_const" (middle_end/closure/closure.ml[422,16442+5]..[422,16442+16])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[422,16442+16]..[422,16442+55])
                                            Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[422,16442+17]..[422,16442+27])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[422,16442+27]..[422,16442+54])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/closure/closure.ml[422,16442+28]..[422,16442+29])
                                                    Ppat_any
                                                  pattern (middle_end/closure/closure.ml[422,16442+31]..[422,16442+53])
                                                    Ppat_construct "Some" (middle_end/closure/closure.ml[422,16442+31]..[422,16442+35])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[422,16442+36]..[422,16442+53])
                                                        Ppat_construct "Uconst_int64" (middle_end/closure/closure.ml[422,16442+37]..[422,16442+49])
                                                        Some
                                                          []
                                                          pattern (middle_end/closure/closure.ml[422,16442+50]..[422,16442+52])
                                                            Ppat_var "n1" (middle_end/closure/closure.ml[422,16442+50]..[422,16442+52])
                                                ]
                                      pattern (middle_end/closure/closure.ml[423,16499+5]..[423,16499+56]) ghost
                                        Ppat_construct "::" (middle_end/closure/closure.ml[423,16499+5]..[423,16499+56]) ghost
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[423,16499+5]..[423,16499+56]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[423,16499+5]..[423,16499+55])
                                                Ppat_construct "Value_const" (middle_end/closure/closure.ml[423,16499+5]..[423,16499+16])
                                                Some
                                                  []
                                                  pattern (middle_end/closure/closure.ml[423,16499+16]..[423,16499+55])
                                                    Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[423,16499+17]..[423,16499+27])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[423,16499+27]..[423,16499+54])
                                                        Ppat_tuple
                                                        [
                                                          pattern (middle_end/closure/closure.ml[423,16499+28]..[423,16499+29])
                                                            Ppat_any
                                                          pattern (middle_end/closure/closure.ml[423,16499+31]..[423,16499+53])
                                                            Ppat_construct "Some" (middle_end/closure/closure.ml[423,16499+31]..[423,16499+35])
                                                            Some
                                                              []
                                                              pattern (middle_end/closure/closure.ml[423,16499+36]..[423,16499+53])
                                                                Ppat_construct "Uconst_int64" (middle_end/closure/closure.ml[423,16499+37]..[423,16499+49])
                                                                Some
                                                                  []
                                                                  pattern (middle_end/closure/closure.ml[423,16499+50]..[423,16499+52])
                                                                    Ppat_var "n2" (middle_end/closure/closure.ml[423,16499+50]..[423,16499+52])
                                                        ]
                                              pattern (middle_end/closure/closure.ml[423,16499+55]..[423,16499+56]) ghost
                                                Ppat_construct "[]" (middle_end/closure/closure.ml[423,16499+55]..[423,16499+56]) ghost
                                                None
                                            ]
                                    ]
                              expression (middle_end/closure/closure.ml[424,16559+6]..[437,17234+9])
                                Pexp_match
                                expression (middle_end/closure/closure.ml[424,16559+18]..[424,16559+19])
                                  Pexp_ident "p" (middle_end/closure/closure.ml[424,16559+18]..[424,16559+19])
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[425,16584+8]..[425,16584+23])
                                      Ppat_construct "Paddbint" (middle_end/closure/closure.ml[425,16584+8]..[425,16584+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[425,16584+17]..[425,16584+23])
                                          Ppat_construct "Pint64" (middle_end/closure/closure.ml[425,16584+17]..[425,16584+23])
                                          None
                                    expression (middle_end/closure/closure.ml[425,16584+27]..[425,16584+61])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[425,16584+27]..[425,16584+43])
                                        Pexp_ident "make_const_int64" (middle_end/closure/closure.ml[425,16584+27]..[425,16584+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[425,16584+44]..[425,16584+61])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[425,16584+45]..[425,16584+54])
                                              Pexp_ident "Int64.add" (middle_end/closure/closure.ml[425,16584+45]..[425,16584+54])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[425,16584+55]..[425,16584+57])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[425,16584+55]..[425,16584+57])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[425,16584+58]..[425,16584+60])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[425,16584+58]..[425,16584+60])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[426,16646+8]..[426,16646+23])
                                      Ppat_construct "Psubbint" (middle_end/closure/closure.ml[426,16646+8]..[426,16646+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[426,16646+17]..[426,16646+23])
                                          Ppat_construct "Pint64" (middle_end/closure/closure.ml[426,16646+17]..[426,16646+23])
                                          None
                                    expression (middle_end/closure/closure.ml[426,16646+27]..[426,16646+61])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[426,16646+27]..[426,16646+43])
                                        Pexp_ident "make_const_int64" (middle_end/closure/closure.ml[426,16646+27]..[426,16646+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[426,16646+44]..[426,16646+61])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[426,16646+45]..[426,16646+54])
                                              Pexp_ident "Int64.sub" (middle_end/closure/closure.ml[426,16646+45]..[426,16646+54])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[426,16646+55]..[426,16646+57])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[426,16646+55]..[426,16646+57])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[426,16646+58]..[426,16646+60])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[426,16646+58]..[426,16646+60])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[427,16708+8]..[427,16708+23])
                                      Ppat_construct "Pmulbint" (middle_end/closure/closure.ml[427,16708+8]..[427,16708+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[427,16708+17]..[427,16708+23])
                                          Ppat_construct "Pint64" (middle_end/closure/closure.ml[427,16708+17]..[427,16708+23])
                                          None
                                    expression (middle_end/closure/closure.ml[427,16708+27]..[427,16708+61])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[427,16708+27]..[427,16708+43])
                                        Pexp_ident "make_const_int64" (middle_end/closure/closure.ml[427,16708+27]..[427,16708+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[427,16708+44]..[427,16708+61])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[427,16708+45]..[427,16708+54])
                                              Pexp_ident "Int64.mul" (middle_end/closure/closure.ml[427,16708+45]..[427,16708+54])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[427,16708+55]..[427,16708+57])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[427,16708+55]..[427,16708+57])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[427,16708+58]..[427,16708+60])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[427,16708+58]..[427,16708+60])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[428,16770+8]..[428,16770+30])
                                      Ppat_construct "Pdivbint" (middle_end/closure/closure.ml[428,16770+8]..[428,16770+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[428,16770+17]..[428,16770+30])
                                          Ppat_record Closed
                                          [
                                            "size" (middle_end/closure/closure.ml[428,16770+18]..[428,16770+22])
                                              pattern (middle_end/closure/closure.ml[428,16770+23]..[428,16770+29])
                                                Ppat_construct "Pint64" (middle_end/closure/closure.ml[428,16770+23]..[428,16770+29])
                                                None
                                          ]
                                    <when>
                                      expression (middle_end/closure/closure.ml[428,16770+36]..[428,16770+44])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[428,16770+39]..[428,16770+41])
                                          Pexp_ident "<>" (middle_end/closure/closure.ml[428,16770+39]..[428,16770+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[428,16770+36]..[428,16770+38])
                                              Pexp_ident "n2" (middle_end/closure/closure.ml[428,16770+36]..[428,16770+38])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[428,16770+42]..[428,16770+44])
                                              Pexp_constant PConst_int (0,Some L)
                                        ]
                                    expression (middle_end/closure/closure.ml[429,16818+10]..[429,16818+44])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[429,16818+10]..[429,16818+26])
                                        Pexp_ident "make_const_int64" (middle_end/closure/closure.ml[429,16818+10]..[429,16818+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[429,16818+27]..[429,16818+44])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[429,16818+28]..[429,16818+37])
                                              Pexp_ident "Int64.div" (middle_end/closure/closure.ml[429,16818+28]..[429,16818+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[429,16818+38]..[429,16818+40])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[429,16818+38]..[429,16818+40])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[429,16818+41]..[429,16818+43])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[429,16818+41]..[429,16818+43])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[430,16863+8]..[430,16863+30])
                                      Ppat_construct "Pmodbint" (middle_end/closure/closure.ml[430,16863+8]..[430,16863+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[430,16863+17]..[430,16863+30])
                                          Ppat_record Closed
                                          [
                                            "size" (middle_end/closure/closure.ml[430,16863+18]..[430,16863+22])
                                              pattern (middle_end/closure/closure.ml[430,16863+23]..[430,16863+29])
                                                Ppat_construct "Pint64" (middle_end/closure/closure.ml[430,16863+23]..[430,16863+29])
                                                None
                                          ]
                                    <when>
                                      expression (middle_end/closure/closure.ml[430,16863+36]..[430,16863+44])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[430,16863+39]..[430,16863+41])
                                          Pexp_ident "<>" (middle_end/closure/closure.ml[430,16863+39]..[430,16863+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[430,16863+36]..[430,16863+38])
                                              Pexp_ident "n2" (middle_end/closure/closure.ml[430,16863+36]..[430,16863+38])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[430,16863+42]..[430,16863+44])
                                              Pexp_constant PConst_int (0,Some L)
                                        ]
                                    expression (middle_end/closure/closure.ml[431,16911+10]..[431,16911+44])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[431,16911+10]..[431,16911+26])
                                        Pexp_ident "make_const_int64" (middle_end/closure/closure.ml[431,16911+10]..[431,16911+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[431,16911+27]..[431,16911+44])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[431,16911+28]..[431,16911+37])
                                              Pexp_ident "Int64.rem" (middle_end/closure/closure.ml[431,16911+28]..[431,16911+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[431,16911+38]..[431,16911+40])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[431,16911+38]..[431,16911+40])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[431,16911+41]..[431,16911+43])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[431,16911+41]..[431,16911+43])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[432,16956+8]..[432,16956+23])
                                      Ppat_construct "Pandbint" (middle_end/closure/closure.ml[432,16956+8]..[432,16956+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[432,16956+17]..[432,16956+23])
                                          Ppat_construct "Pint64" (middle_end/closure/closure.ml[432,16956+17]..[432,16956+23])
                                          None
                                    expression (middle_end/closure/closure.ml[432,16956+27]..[432,16956+64])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[432,16956+27]..[432,16956+43])
                                        Pexp_ident "make_const_int64" (middle_end/closure/closure.ml[432,16956+27]..[432,16956+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[432,16956+44]..[432,16956+64])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[432,16956+45]..[432,16956+57])
                                              Pexp_ident "Int64.logand" (middle_end/closure/closure.ml[432,16956+45]..[432,16956+57])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[432,16956+58]..[432,16956+60])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[432,16956+58]..[432,16956+60])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[432,16956+61]..[432,16956+63])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[432,16956+61]..[432,16956+63])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[433,17021+8]..[433,17021+22])
                                      Ppat_construct "Porbint" (middle_end/closure/closure.ml[433,17021+8]..[433,17021+15])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[433,17021+16]..[433,17021+22])
                                          Ppat_construct "Pint64" (middle_end/closure/closure.ml[433,17021+16]..[433,17021+22])
                                          None
                                    expression (middle_end/closure/closure.ml[433,17021+26]..[433,17021+62])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[433,17021+26]..[433,17021+42])
                                        Pexp_ident "make_const_int64" (middle_end/closure/closure.ml[433,17021+26]..[433,17021+42])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[433,17021+43]..[433,17021+62])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[433,17021+44]..[433,17021+55])
                                              Pexp_ident "Int64.logor" (middle_end/closure/closure.ml[433,17021+44]..[433,17021+55])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[433,17021+56]..[433,17021+58])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[433,17021+56]..[433,17021+58])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[433,17021+59]..[433,17021+61])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[433,17021+59]..[433,17021+61])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[434,17084+8]..[434,17084+23])
                                      Ppat_construct "Pxorbint" (middle_end/closure/closure.ml[434,17084+8]..[434,17084+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[434,17084+17]..[434,17084+23])
                                          Ppat_construct "Pint64" (middle_end/closure/closure.ml[434,17084+17]..[434,17084+23])
                                          None
                                    expression (middle_end/closure/closure.ml[434,17084+27]..[434,17084+64])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[434,17084+27]..[434,17084+43])
                                        Pexp_ident "make_const_int64" (middle_end/closure/closure.ml[434,17084+27]..[434,17084+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[434,17084+44]..[434,17084+64])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[434,17084+45]..[434,17084+57])
                                              Pexp_ident "Int64.logxor" (middle_end/closure/closure.ml[434,17084+45]..[434,17084+57])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[434,17084+58]..[434,17084+60])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[434,17084+58]..[434,17084+60])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[434,17084+61]..[434,17084+63])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[434,17084+61]..[434,17084+63])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[435,17149+8]..[435,17149+28])
                                      Ppat_construct "Pbintcomp" (middle_end/closure/closure.ml[435,17149+8]..[435,17149+17])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[435,17149+17]..[435,17149+28])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[435,17149+18]..[435,17149+24])
                                              Ppat_construct "Pint64" (middle_end/closure/closure.ml[435,17149+18]..[435,17149+24])
                                              None
                                            pattern (middle_end/closure/closure.ml[435,17149+26]..[435,17149+27])
                                              Ppat_var "c" (middle_end/closure/closure.ml[435,17149+26]..[435,17149+27])
                                          ]
                                    expression (middle_end/closure/closure.ml[435,17149+32]..[435,17149+63])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[435,17149+32]..[435,17149+55])
                                        Pexp_ident "make_integer_comparison" (middle_end/closure/closure.ml[435,17149+32]..[435,17149+55])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[435,17149+56]..[435,17149+57])
                                            Pexp_ident "c" (middle_end/closure/closure.ml[435,17149+56]..[435,17149+57])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[435,17149+58]..[435,17149+60])
                                            Pexp_ident "n1" (middle_end/closure/closure.ml[435,17149+58]..[435,17149+60])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[435,17149+61]..[435,17149+63])
                                            Pexp_ident "n2" (middle_end/closure/closure.ml[435,17149+61]..[435,17149+63])
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[436,17213+8]..[436,17213+9])
                                      Ppat_any
                                    expression (middle_end/closure/closure.ml[436,17213+13]..[436,17213+20])
                                      Pexp_ident "default" (middle_end/closure/closure.ml[436,17213+13]..[436,17213+20])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[439,17263+4]..[440,17320+32])
                                Ppat_construct "::" (middle_end/closure/closure.ml[439,17263+5]..[440,17320+32]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[439,17263+5]..[440,17320+32]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[439,17263+5]..[439,17263+55])
                                        Ppat_construct "Value_const" (middle_end/closure/closure.ml[439,17263+5]..[439,17263+16])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[439,17263+16]..[439,17263+55])
                                            Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[439,17263+17]..[439,17263+27])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[439,17263+27]..[439,17263+54])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/closure/closure.ml[439,17263+28]..[439,17263+29])
                                                    Ppat_any
                                                  pattern (middle_end/closure/closure.ml[439,17263+31]..[439,17263+53])
                                                    Ppat_construct "Some" (middle_end/closure/closure.ml[439,17263+31]..[439,17263+35])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[439,17263+36]..[439,17263+53])
                                                        Ppat_construct "Uconst_int64" (middle_end/closure/closure.ml[439,17263+37]..[439,17263+49])
                                                        Some
                                                          []
                                                          pattern (middle_end/closure/closure.ml[439,17263+50]..[439,17263+52])
                                                            Ppat_var "n1" (middle_end/closure/closure.ml[439,17263+50]..[439,17263+52])
                                                ]
                                      pattern (middle_end/closure/closure.ml[440,17320+5]..[440,17320+32]) ghost
                                        Ppat_construct "::" (middle_end/closure/closure.ml[440,17320+5]..[440,17320+32]) ghost
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[440,17320+5]..[440,17320+32]) ghost
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[440,17320+5]..[440,17320+31])
                                                Ppat_construct "Value_const" (middle_end/closure/closure.ml[440,17320+5]..[440,17320+16])
                                                Some
                                                  []
                                                  pattern (middle_end/closure/closure.ml[440,17320+16]..[440,17320+31])
                                                    Ppat_construct "Uconst_int" (middle_end/closure/closure.ml[440,17320+17]..[440,17320+27])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[440,17320+28]..[440,17320+30])
                                                        Ppat_var "n2" (middle_end/closure/closure.ml[440,17320+28]..[440,17320+30])
                                              pattern (middle_end/closure/closure.ml[440,17320+31]..[440,17320+32]) ghost
                                                Ppat_construct "[]" (middle_end/closure/closure.ml[440,17320+31]..[440,17320+32]) ghost
                                                None
                                            ]
                                    ]
                              expression (middle_end/closure/closure.ml[441,17356+6]..[449,17721+9])
                                Pexp_match
                                expression (middle_end/closure/closure.ml[441,17356+18]..[441,17356+19])
                                  Pexp_ident "p" (middle_end/closure/closure.ml[441,17356+18]..[441,17356+19])
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[442,17381+8]..[442,17381+23])
                                      Ppat_construct "Plslbint" (middle_end/closure/closure.ml[442,17381+8]..[442,17381+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[442,17381+17]..[442,17381+23])
                                          Ppat_construct "Pint64" (middle_end/closure/closure.ml[442,17381+17]..[442,17381+23])
                                          None
                                    <when>
                                      expression (middle_end/closure/closure.ml[442,17381+29]..[442,17381+47])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[442,17381+37]..[442,17381+39])
                                          Pexp_ident "&&" (middle_end/closure/closure.ml[442,17381+37]..[442,17381+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[442,17381+29]..[442,17381+36])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[442,17381+31]..[442,17381+33])
                                                Pexp_ident "<=" (middle_end/closure/closure.ml[442,17381+31]..[442,17381+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[442,17381+29]..[442,17381+30])
                                                    Pexp_constant PConst_int (0,None)
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[442,17381+34]..[442,17381+36])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[442,17381+34]..[442,17381+36])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[442,17381+40]..[442,17381+47])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[442,17381+43]..[442,17381+44])
                                                Pexp_ident "<" (middle_end/closure/closure.ml[442,17381+43]..[442,17381+44])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[442,17381+40]..[442,17381+42])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[442,17381+40]..[442,17381+42])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[442,17381+45]..[442,17381+47])
                                                    Pexp_constant PConst_int (64,None)
                                              ]
                                        ]
                                    expression (middle_end/closure/closure.ml[443,17432+10]..[443,17432+51])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[443,17432+10]..[443,17432+26])
                                        Pexp_ident "make_const_int64" (middle_end/closure/closure.ml[443,17432+10]..[443,17432+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[443,17432+27]..[443,17432+51])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[443,17432+28]..[443,17432+44])
                                              Pexp_ident "Int64.shift_left" (middle_end/closure/closure.ml[443,17432+28]..[443,17432+44])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[443,17432+45]..[443,17432+47])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[443,17432+45]..[443,17432+47])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[443,17432+48]..[443,17432+50])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[443,17432+48]..[443,17432+50])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[444,17484+8]..[444,17484+23])
                                      Ppat_construct "Plsrbint" (middle_end/closure/closure.ml[444,17484+8]..[444,17484+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[444,17484+17]..[444,17484+23])
                                          Ppat_construct "Pint64" (middle_end/closure/closure.ml[444,17484+17]..[444,17484+23])
                                          None
                                    <when>
                                      expression (middle_end/closure/closure.ml[444,17484+29]..[444,17484+47])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[444,17484+37]..[444,17484+39])
                                          Pexp_ident "&&" (middle_end/closure/closure.ml[444,17484+37]..[444,17484+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[444,17484+29]..[444,17484+36])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[444,17484+31]..[444,17484+33])
                                                Pexp_ident "<=" (middle_end/closure/closure.ml[444,17484+31]..[444,17484+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[444,17484+29]..[444,17484+30])
                                                    Pexp_constant PConst_int (0,None)
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[444,17484+34]..[444,17484+36])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[444,17484+34]..[444,17484+36])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[444,17484+40]..[444,17484+47])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[444,17484+43]..[444,17484+44])
                                                Pexp_ident "<" (middle_end/closure/closure.ml[444,17484+43]..[444,17484+44])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[444,17484+40]..[444,17484+42])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[444,17484+40]..[444,17484+42])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[444,17484+45]..[444,17484+47])
                                                    Pexp_constant PConst_int (64,None)
                                              ]
                                        ]
                                    expression (middle_end/closure/closure.ml[445,17535+10]..[445,17535+60])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[445,17535+10]..[445,17535+26])
                                        Pexp_ident "make_const_int64" (middle_end/closure/closure.ml[445,17535+10]..[445,17535+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[445,17535+27]..[445,17535+60])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[445,17535+28]..[445,17535+53])
                                              Pexp_ident "Int64.shift_right_logical" (middle_end/closure/closure.ml[445,17535+28]..[445,17535+53])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[445,17535+54]..[445,17535+56])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[445,17535+54]..[445,17535+56])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[445,17535+57]..[445,17535+59])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[445,17535+57]..[445,17535+59])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[446,17596+8]..[446,17596+23])
                                      Ppat_construct "Pasrbint" (middle_end/closure/closure.ml[446,17596+8]..[446,17596+16])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[446,17596+17]..[446,17596+23])
                                          Ppat_construct "Pint64" (middle_end/closure/closure.ml[446,17596+17]..[446,17596+23])
                                          None
                                    <when>
                                      expression (middle_end/closure/closure.ml[446,17596+29]..[446,17596+47])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[446,17596+37]..[446,17596+39])
                                          Pexp_ident "&&" (middle_end/closure/closure.ml[446,17596+37]..[446,17596+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[446,17596+29]..[446,17596+36])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[446,17596+31]..[446,17596+33])
                                                Pexp_ident "<=" (middle_end/closure/closure.ml[446,17596+31]..[446,17596+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[446,17596+29]..[446,17596+30])
                                                    Pexp_constant PConst_int (0,None)
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[446,17596+34]..[446,17596+36])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[446,17596+34]..[446,17596+36])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[446,17596+40]..[446,17596+47])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[446,17596+43]..[446,17596+44])
                                                Pexp_ident "<" (middle_end/closure/closure.ml[446,17596+43]..[446,17596+44])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[446,17596+40]..[446,17596+42])
                                                    Pexp_ident "n2" (middle_end/closure/closure.ml[446,17596+40]..[446,17596+42])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[446,17596+45]..[446,17596+47])
                                                    Pexp_constant PConst_int (64,None)
                                              ]
                                        ]
                                    expression (middle_end/closure/closure.ml[447,17647+10]..[447,17647+52])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[447,17647+10]..[447,17647+26])
                                        Pexp_ident "make_const_int64" (middle_end/closure/closure.ml[447,17647+10]..[447,17647+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[447,17647+27]..[447,17647+52])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[447,17647+28]..[447,17647+45])
                                              Pexp_ident "Int64.shift_right" (middle_end/closure/closure.ml[447,17647+28]..[447,17647+45])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[447,17647+46]..[447,17647+48])
                                                  Pexp_ident "n1" (middle_end/closure/closure.ml[447,17647+46]..[447,17647+48])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[447,17647+49]..[447,17647+51])
                                                  Pexp_ident "n2" (middle_end/closure/closure.ml[447,17647+49]..[447,17647+51])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[448,17700+8]..[448,17700+9])
                                      Ppat_any
                                    expression (middle_end/closure/closure.ml[448,17700+13]..[448,17700+20])
                                      Pexp_ident "default" (middle_end/closure/closure.ml[448,17700+13]..[448,17700+20])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[452,17771+4]..[452,17771+5])
                                Ppat_any
                              expression (middle_end/closure/closure.ml[453,17780+5]..[453,17780+12])
                                Pexp_ident "default" (middle_end/closure/closure.ml[453,17780+5]..[453,17780+12])
                          ]
    ]
  structure_item (middle_end/closure/closure.ml[455,17794+0]..[460,17997+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[455,17794+4]..[455,17794+16])
          Ppat_var "field_approx" (middle_end/closure/closure.ml[455,17794+4]..[455,17794+16])
        expression (middle_end/closure/closure.ml[455,17794+17]..[460,17997+22]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[455,17794+17]..[455,17794+18])
            Ppat_var "n" (middle_end/closure/closure.ml[455,17794+17]..[455,17794+18])
          expression (middle_end/closure/closure.ml[455,17794+21]..[460,17997+22])
            Pexp_function
            [
              <case>
                pattern (middle_end/closure/closure.ml[456,17824+4]..[456,17824+17])
                  Ppat_construct "Value_tuple" (middle_end/closure/closure.ml[456,17824+4]..[456,17824+15])
                  Some
                    []
                    pattern (middle_end/closure/closure.ml[456,17824+16]..[456,17824+17])
                      Ppat_var "a" (middle_end/closure/closure.ml[456,17824+16]..[456,17824+17])
                <when>
                  expression (middle_end/closure/closure.ml[456,17824+23]..[456,17824+41])
                    Pexp_apply
                    expression (middle_end/closure/closure.ml[456,17824+25]..[456,17824+26])
                      Pexp_ident "<" (middle_end/closure/closure.ml[456,17824+25]..[456,17824+26])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[456,17824+23]..[456,17824+24])
                          Pexp_ident "n" (middle_end/closure/closure.ml[456,17824+23]..[456,17824+24])
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[456,17824+27]..[456,17824+41])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[456,17824+27]..[456,17824+39])
                            Pexp_ident "Array.length" (middle_end/closure/closure.ml[456,17824+27]..[456,17824+39])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[456,17824+40]..[456,17824+41])
                                Pexp_ident "a" (middle_end/closure/closure.ml[456,17824+40]..[456,17824+41])
                          ]
                    ]
                expression (middle_end/closure/closure.ml[456,17824+45]..[456,17824+50])
                  Pexp_apply
                  expression (middle_end/closure/closure.ml[456,17824+45]..[456,17824+50]) ghost
                    Pexp_ident "Array.get" (middle_end/closure/closure.ml[456,17824+45]..[456,17824+50]) ghost
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure.ml[456,17824+45]..[456,17824+46])
                        Pexp_ident "a" (middle_end/closure/closure.ml[456,17824+45]..[456,17824+46])
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure.ml[456,17824+48]..[456,17824+49])
                        Pexp_ident "n" (middle_end/closure/closure.ml[456,17824+48]..[456,17824+49])
                  ]
              <case>
                pattern (middle_end/closure/closure.ml[457,17875+4]..[457,17875+58])
                  Ppat_construct "Value_const" (middle_end/closure/closure.ml[457,17875+4]..[457,17875+15])
                  Some
                    []
                    pattern (middle_end/closure/closure.ml[457,17875+16]..[457,17875+58])
                      Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[457,17875+17]..[457,17875+27])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[457,17875+27]..[457,17875+57])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[457,17875+28]..[457,17875+29])
                              Ppat_any
                            pattern (middle_end/closure/closure.ml[457,17875+31]..[457,17875+56])
                              Ppat_construct "Some" (middle_end/closure/closure.ml[457,17875+31]..[457,17875+35])
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[457,17875+36]..[457,17875+56])
                                  Ppat_construct "Uconst_block" (middle_end/closure/closure.ml[457,17875+37]..[457,17875+49])
                                  Some
                                    []
                                    pattern (middle_end/closure/closure.ml[457,17875+49]..[457,17875+55])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/closure/closure.ml[457,17875+50]..[457,17875+51])
                                          Ppat_any
                                        pattern (middle_end/closure/closure.ml[457,17875+53]..[457,17875+54])
                                          Ppat_var "l" (middle_end/closure/closure.ml[457,17875+53]..[457,17875+54])
                                      ]
                          ]
                <when>
                  expression (middle_end/closure/closure.ml[458,17934+9]..[458,17934+26])
                    Pexp_apply
                    expression (middle_end/closure/closure.ml[458,17934+11]..[458,17934+12])
                      Pexp_ident "<" (middle_end/closure/closure.ml[458,17934+11]..[458,17934+12])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[458,17934+9]..[458,17934+10])
                          Pexp_ident "n" (middle_end/closure/closure.ml[458,17934+9]..[458,17934+10])
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[458,17934+13]..[458,17934+26])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[458,17934+13]..[458,17934+24])
                            Pexp_ident "List.length" (middle_end/closure/closure.ml[458,17934+13]..[458,17934+24])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[458,17934+25]..[458,17934+26])
                                Pexp_ident "l" (middle_end/closure/closure.ml[458,17934+25]..[458,17934+26])
                          ]
                    ]
                expression (middle_end/closure/closure.ml[459,17964+6]..[459,17964+32])
                  Pexp_construct "Value_const" (middle_end/closure/closure.ml[459,17964+6]..[459,17964+17])
                  Some
                    expression (middle_end/closure/closure.ml[459,17964+18]..[459,17964+32])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[459,17964+19]..[459,17964+27])
                        Pexp_ident "List.nth" (middle_end/closure/closure.ml[459,17964+19]..[459,17964+27])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[459,17964+28]..[459,17964+29])
                            Pexp_ident "l" (middle_end/closure/closure.ml[459,17964+28]..[459,17964+29])
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[459,17964+30]..[459,17964+31])
                            Pexp_ident "n" (middle_end/closure/closure.ml[459,17964+30]..[459,17964+31])
                      ]
              <case>
                pattern (middle_end/closure/closure.ml[460,17997+4]..[460,17997+5])
                  Ppat_any
                expression (middle_end/closure/closure.ml[460,17997+9]..[460,17997+22])
                  Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[460,17997+9]..[460,17997+22])
                  None
            ]
    ]
  structure_item (middle_end/closure/closure.ml[462,18021+0]..[502,19413+64])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[462,18021+4]..[462,18021+21])
          Ppat_var "simplif_prim_pure" (middle_end/closure/closure.ml[462,18021+4]..[462,18021+21])
        expression (middle_end/closure/closure.ml[462,18021+22]..[502,19413+64]) ghost
          Pexp_fun
          Labelled "backend"
          None
          pattern (middle_end/closure/closure.ml[462,18021+23]..[462,18021+30])
            Ppat_var "backend" (middle_end/closure/closure.ml[462,18021+23]..[462,18021+30])
          expression (middle_end/closure/closure.ml[462,18021+31]..[502,19413+64]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[462,18021+31]..[462,18021+34])
              Ppat_var "fpc" (middle_end/closure/closure.ml[462,18021+31]..[462,18021+34])
            expression (middle_end/closure/closure.ml[462,18021+35]..[502,19413+64]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/closure/closure.ml[462,18021+35]..[462,18021+36])
                Ppat_var "p" (middle_end/closure/closure.ml[462,18021+35]..[462,18021+36])
              expression (middle_end/closure/closure.ml[462,18021+37]..[502,19413+64]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (middle_end/closure/closure.ml[462,18021+37]..[462,18021+52])
                  Ppat_tuple
                  [
                    pattern (middle_end/closure/closure.ml[462,18021+38]..[462,18021+42])
                      Ppat_var "args" (middle_end/closure/closure.ml[462,18021+38]..[462,18021+42])
                    pattern (middle_end/closure/closure.ml[462,18021+44]..[462,18021+51])
                      Ppat_var "approxs" (middle_end/closure/closure.ml[462,18021+44]..[462,18021+51])
                  ]
                expression (middle_end/closure/closure.ml[462,18021+53]..[502,19413+64]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/closure/closure.ml[462,18021+53]..[462,18021+56])
                    Ppat_var "dbg" (middle_end/closure/closure.ml[462,18021+53]..[462,18021+56])
                  expression (middle_end/closure/closure.ml[463,18080+2]..[502,19413+64])
                    Pexp_open Fresh
                    module_expr (middle_end/closure/closure.ml[463,18080+11]..[463,18080+29])
                      Pmod_ident "Clambda_primitives" (middle_end/closure/closure.ml[463,18080+11]..[463,18080+29])
                    expression (middle_end/closure/closure.ml[464,18113+2]..[502,19413+64])
                      Pexp_match
                      expression (middle_end/closure/closure.ml[464,18113+8]..[464,18113+24])
                        Pexp_tuple
                        [
                          expression (middle_end/closure/closure.ml[464,18113+8]..[464,18113+9])
                            Pexp_ident "p" (middle_end/closure/closure.ml[464,18113+8]..[464,18113+9])
                          expression (middle_end/closure/closure.ml[464,18113+11]..[464,18113+15])
                            Pexp_ident "args" (middle_end/closure/closure.ml[464,18113+11]..[464,18113+15])
                          expression (middle_end/closure/closure.ml[464,18113+17]..[464,18113+24])
                            Pexp_ident "approxs" (middle_end/closure/closure.ml[464,18113+17]..[464,18113+24])
                        ]
                      [
                        <case>
                          pattern (middle_end/closure/closure.ml[466,18170+4]..[466,18170+43])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[466,18170+4]..[466,18170+37])
                                Ppat_construct "Pmakeblock" (middle_end/closure/closure.ml[466,18170+4]..[466,18170+14])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[466,18170+14]..[466,18170+37])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[466,18170+15]..[466,18170+18])
                                        Ppat_var "tag" (middle_end/closure/closure.ml[466,18170+15]..[466,18170+18])
                                      pattern (middle_end/closure/closure.ml[466,18170+20]..[466,18170+29])
                                        Ppat_construct "Immutable" (middle_end/closure/closure.ml[466,18170+20]..[466,18170+29])
                                        None
                                      pattern (middle_end/closure/closure.ml[466,18170+31]..[466,18170+36])
                                        Ppat_var "_kind" (middle_end/closure/closure.ml[466,18170+31]..[466,18170+36])
                                    ]
                              pattern (middle_end/closure/closure.ml[466,18170+39]..[466,18170+40])
                                Ppat_any
                              pattern (middle_end/closure/closure.ml[466,18170+42]..[466,18170+43])
                                Ppat_any
                            ]
                          expression (middle_end/closure/closure.ml[467,18217+6]..[479,18614+9])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/closure/closure.ml[467,18217+10]..[467,18217+15])
                                  Ppat_var "field" (middle_end/closure/closure.ml[467,18217+10]..[467,18217+15])
                                expression (middle_end/closure/closure.ml[467,18217+18]..[469,18273+25])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (middle_end/closure/closure.ml[468,18244+10]..[468,18244+23])
                                        Ppat_construct "Value_const" (middle_end/closure/closure.ml[468,18244+10]..[468,18244+21])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[468,18244+22]..[468,18244+23])
                                            Ppat_var "c" (middle_end/closure/closure.ml[468,18244+22]..[468,18244+23])
                                      expression (middle_end/closure/closure.ml[468,18244+27]..[468,18244+28])
                                        Pexp_ident "c" (middle_end/closure/closure.ml[468,18244+27]..[468,18244+28])
                                    <case>
                                      pattern (middle_end/closure/closure.ml[469,18273+10]..[469,18273+11])
                                        Ppat_any
                                      expression (middle_end/closure/closure.ml[469,18273+15]..[469,18273+25])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[469,18273+15]..[469,18273+20])
                                          Pexp_ident "raise" (middle_end/closure/closure.ml[469,18273+15]..[469,18273+20])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[469,18273+21]..[469,18273+25])
                                              Pexp_construct "Exit" (middle_end/closure/closure.ml[469,18273+21]..[469,18273+25])
                                              None
                                        ]
                                  ]
                            ]
                            expression (middle_end/closure/closure.ml[471,18308+6]..[479,18614+9])
                              Pexp_try
                              expression (middle_end/closure/closure.ml[472,18324+8]..[476,18479+48])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/closure/closure.ml[472,18324+12]..[472,18324+15])
                                      Ppat_var "cst" (middle_end/closure/closure.ml[472,18324+12]..[472,18324+15])
                                    expression (middle_end/closure/closure.ml[472,18324+18]..[472,18324+60])
                                      Pexp_construct "Uconst_block" (middle_end/closure/closure.ml[472,18324+18]..[472,18324+30])
                                      Some
                                        expression (middle_end/closure/closure.ml[472,18324+31]..[472,18324+60])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/closure/closure.ml[472,18324+32]..[472,18324+35])
                                              Pexp_ident "tag" (middle_end/closure/closure.ml[472,18324+32]..[472,18324+35])
                                            expression (middle_end/closure/closure.ml[472,18324+37]..[472,18324+59])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[472,18324+37]..[472,18324+45])
                                                Pexp_ident "List.map" (middle_end/closure/closure.ml[472,18324+37]..[472,18324+45])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[472,18324+46]..[472,18324+51])
                                                    Pexp_ident "field" (middle_end/closure/closure.ml[472,18324+46]..[472,18324+51])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[472,18324+52]..[472,18324+59])
                                                    Pexp_ident "approxs" (middle_end/closure/closure.ml[472,18324+52]..[472,18324+59])
                                              ]
                                          ]
                                ]
                                expression (middle_end/closure/closure.ml[473,18388+8]..[476,18479+48])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/closure/closure.ml[473,18388+12]..[473,18388+16])
                                        Ppat_var "name" (middle_end/closure/closure.ml[473,18388+12]..[473,18388+16])
                                      expression (middle_end/closure/closure.ml[474,18407+10]..[474,18407+60])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[474,18407+10]..[474,18407+43])
                                          Pexp_ident "Compilenv.new_structured_constant" (middle_end/closure/closure.ml[474,18407+10]..[474,18407+43])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[474,18407+44]..[474,18407+47])
                                              Pexp_ident "cst" (middle_end/closure/closure.ml[474,18407+44]..[474,18407+47])
                                          <arg>
                                          Labelled "shared"
                                            expression (middle_end/closure/closure.ml[474,18407+56]..[474,18407+60])
                                              Pexp_construct "true" (middle_end/closure/closure.ml[474,18407+56]..[474,18407+60])
                                              None
                                        ]
                                  ]
                                  expression (middle_end/closure/closure.ml[476,18479+8]..[476,18479+48])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[476,18479+8]..[476,18479+18])
                                      Pexp_ident "make_const" (middle_end/closure/closure.ml[476,18479+8]..[476,18479+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[476,18479+19]..[476,18479+48])
                                          Pexp_construct "Uconst_ref" (middle_end/closure/closure.ml[476,18479+20]..[476,18479+30])
                                          Some
                                            expression (middle_end/closure/closure.ml[476,18479+31]..[476,18479+47])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/closure/closure.ml[476,18479+32]..[476,18479+36])
                                                  Pexp_ident "name" (middle_end/closure/closure.ml[476,18479+32]..[476,18479+36])
                                                expression (middle_end/closure/closure.ml[476,18479+38]..[476,18479+46])
                                                  Pexp_construct "Some" (middle_end/closure/closure.ml[476,18479+38]..[476,18479+42])
                                                  Some
                                                    expression (middle_end/closure/closure.ml[476,18479+43]..[476,18479+46])
                                                      Pexp_ident "cst" (middle_end/closure/closure.ml[476,18479+43]..[476,18479+46])
                                              ]
                                    ]
                              [
                                <case>
                                  pattern (middle_end/closure/closure.ml[477,18528+11]..[477,18528+15])
                                    Ppat_construct "Exit" (middle_end/closure/closure.ml[477,18528+11]..[477,18528+15])
                                    None
                                  expression (middle_end/closure/closure.ml[478,18547+8]..[478,18547+66])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/closure/closure.ml[478,18547+9]..[478,18547+28])
                                        Pexp_construct "Uprim" (middle_end/closure/closure.ml[478,18547+9]..[478,18547+14])
                                        Some
                                          expression (middle_end/closure/closure.ml[478,18547+14]..[478,18547+28])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/closure/closure.ml[478,18547+15]..[478,18547+16])
                                                Pexp_ident "p" (middle_end/closure/closure.ml[478,18547+15]..[478,18547+16])
                                              expression (middle_end/closure/closure.ml[478,18547+18]..[478,18547+22])
                                                Pexp_ident "args" (middle_end/closure/closure.ml[478,18547+18]..[478,18547+22])
                                              expression (middle_end/closure/closure.ml[478,18547+24]..[478,18547+27])
                                                Pexp_ident "dbg" (middle_end/closure/closure.ml[478,18547+24]..[478,18547+27])
                                            ]
                                      expression (middle_end/closure/closure.ml[478,18547+30]..[478,18547+65])
                                        Pexp_construct "Value_tuple" (middle_end/closure/closure.ml[478,18547+30]..[478,18547+41])
                                        Some
                                          expression (middle_end/closure/closure.ml[478,18547+42]..[478,18547+65])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[478,18547+43]..[478,18547+56])
                                              Pexp_ident "Array.of_list" (middle_end/closure/closure.ml[478,18547+43]..[478,18547+56])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[478,18547+57]..[478,18547+64])
                                                  Pexp_ident "approxs" (middle_end/closure/closure.ml[478,18547+57]..[478,18547+64])
                                            ]
                                    ]
                              ]
                        <case>
                          pattern (middle_end/closure/closure.ml[481,18645+4]..[481,18645+74])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[481,18645+4]..[481,18645+12])
                                Ppat_construct "Pfield" (middle_end/closure/closure.ml[481,18645+4]..[481,18645+10])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[481,18645+11]..[481,18645+12])
                                    Ppat_var "n" (middle_end/closure/closure.ml[481,18645+11]..[481,18645+12])
                              pattern (middle_end/closure/closure.ml[481,18645+14]..[481,18645+15])
                                Ppat_any
                              pattern (middle_end/closure/closure.ml[481,18645+17]..[481,18645+74])
                                Ppat_construct "::" (middle_end/closure/closure.ml[481,18645+19]..[481,18645+74]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[481,18645+19]..[481,18645+74]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[481,18645+19]..[481,18645+72])
                                        Ppat_construct "Value_const" (middle_end/closure/closure.ml[481,18645+19]..[481,18645+30])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[481,18645+30]..[481,18645+72])
                                            Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[481,18645+31]..[481,18645+41])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[481,18645+41]..[481,18645+71])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/closure/closure.ml[481,18645+42]..[481,18645+43])
                                                    Ppat_any
                                                  pattern (middle_end/closure/closure.ml[481,18645+45]..[481,18645+70])
                                                    Ppat_construct "Some" (middle_end/closure/closure.ml[481,18645+45]..[481,18645+49])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[481,18645+50]..[481,18645+70])
                                                        Ppat_construct "Uconst_block" (middle_end/closure/closure.ml[481,18645+51]..[481,18645+63])
                                                        Some
                                                          []
                                                          pattern (middle_end/closure/closure.ml[481,18645+63]..[481,18645+69])
                                                            Ppat_tuple
                                                            [
                                                              pattern (middle_end/closure/closure.ml[481,18645+64]..[481,18645+65])
                                                                Ppat_any
                                                              pattern (middle_end/closure/closure.ml[481,18645+67]..[481,18645+68])
                                                                Ppat_var "l" (middle_end/closure/closure.ml[481,18645+67]..[481,18645+68])
                                                            ]
                                                ]
                                      pattern (middle_end/closure/closure.ml[481,18645+73]..[481,18645+74]) ghost
                                        Ppat_construct "[]" (middle_end/closure/closure.ml[481,18645+73]..[481,18645+74]) ghost
                                        None
                                    ]
                            ]
                          <when>
                            expression (middle_end/closure/closure.ml[482,18720+9]..[482,18720+26])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[482,18720+11]..[482,18720+12])
                                Pexp_ident "<" (middle_end/closure/closure.ml[482,18720+11]..[482,18720+12])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[482,18720+9]..[482,18720+10])
                                    Pexp_ident "n" (middle_end/closure/closure.ml[482,18720+9]..[482,18720+10])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[482,18720+13]..[482,18720+26])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[482,18720+13]..[482,18720+24])
                                      Pexp_ident "List.length" (middle_end/closure/closure.ml[482,18720+13]..[482,18720+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[482,18720+25]..[482,18720+26])
                                          Pexp_ident "l" (middle_end/closure/closure.ml[482,18720+25]..[482,18720+26])
                                    ]
                              ]
                          expression (middle_end/closure/closure.ml[483,18750+6]..[483,18750+31])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[483,18750+6]..[483,18750+16])
                              Pexp_ident "make_const" (middle_end/closure/closure.ml[483,18750+6]..[483,18750+16])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[483,18750+17]..[483,18750+31])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[483,18750+18]..[483,18750+26])
                                    Pexp_ident "List.nth" (middle_end/closure/closure.ml[483,18750+18]..[483,18750+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[483,18750+27]..[483,18750+28])
                                        Pexp_ident "l" (middle_end/closure/closure.ml[483,18750+27]..[483,18750+28])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[483,18750+29]..[483,18750+30])
                                        Pexp_ident "n" (middle_end/closure/closure.ml[483,18750+29]..[483,18750+30])
                                  ]
                            ]
                        <case>
                          pattern (middle_end/closure/closure.ml[484,18782+4]..[484,18782+56])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[484,18782+4]..[484,18782+12])
                                Ppat_construct "Pfield" (middle_end/closure/closure.ml[484,18782+4]..[484,18782+10])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[484,18782+11]..[484,18782+12])
                                    Ppat_var "n" (middle_end/closure/closure.ml[484,18782+11]..[484,18782+12])
                              pattern (middle_end/closure/closure.ml[484,18782+14]..[484,18782+46])
                                Ppat_construct "::" (middle_end/closure/closure.ml[484,18782+16]..[484,18782+46]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[484,18782+16]..[484,18782+46]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[484,18782+16]..[484,18782+44])
                                        Ppat_construct "Uprim" (middle_end/closure/closure.ml[484,18782+16]..[484,18782+21])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[484,18782+21]..[484,18782+44])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[484,18782+22]..[484,18782+36])
                                                Ppat_construct "P.Pmakeblock" (middle_end/closure/closure.ml[484,18782+22]..[484,18782+34])
                                                Some
                                                  []
                                                  pattern (middle_end/closure/closure.ml[484,18782+35]..[484,18782+36])
                                                    Ppat_any
                                              pattern (middle_end/closure/closure.ml[484,18782+38]..[484,18782+40])
                                                Ppat_var "ul" (middle_end/closure/closure.ml[484,18782+38]..[484,18782+40])
                                              pattern (middle_end/closure/closure.ml[484,18782+42]..[484,18782+43])
                                                Ppat_any
                                            ]
                                      pattern (middle_end/closure/closure.ml[484,18782+45]..[484,18782+46]) ghost
                                        Ppat_construct "[]" (middle_end/closure/closure.ml[484,18782+45]..[484,18782+46]) ghost
                                        None
                                    ]
                              pattern (middle_end/closure/closure.ml[484,18782+48]..[484,18782+56])
                                Ppat_construct "::" (middle_end/closure/closure.ml[484,18782+49]..[484,18782+56]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[484,18782+49]..[484,18782+56]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[484,18782+49]..[484,18782+55])
                                        Ppat_var "approx" (middle_end/closure/closure.ml[484,18782+49]..[484,18782+55])
                                      pattern (middle_end/closure/closure.ml[484,18782+55]..[484,18782+56]) ghost
                                        Ppat_construct "[]" (middle_end/closure/closure.ml[484,18782+55]..[484,18782+56]) ghost
                                        None
                                    ]
                            ]
                          <when>
                            expression (middle_end/closure/closure.ml[485,18839+9]..[485,18839+27])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[485,18839+11]..[485,18839+12])
                                Pexp_ident "<" (middle_end/closure/closure.ml[485,18839+11]..[485,18839+12])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[485,18839+9]..[485,18839+10])
                                    Pexp_ident "n" (middle_end/closure/closure.ml[485,18839+9]..[485,18839+10])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[485,18839+13]..[485,18839+27])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[485,18839+13]..[485,18839+24])
                                      Pexp_ident "List.length" (middle_end/closure/closure.ml[485,18839+13]..[485,18839+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[485,18839+25]..[485,18839+27])
                                          Pexp_ident "ul" (middle_end/closure/closure.ml[485,18839+25]..[485,18839+27])
                                    ]
                              ]
                          expression (middle_end/closure/closure.ml[486,18870+6]..[486,18870+44])
                            Pexp_tuple
                            [
                              expression (middle_end/closure/closure.ml[486,18870+7]..[486,18870+20])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[486,18870+7]..[486,18870+15])
                                  Pexp_ident "List.nth" (middle_end/closure/closure.ml[486,18870+7]..[486,18870+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[486,18870+16]..[486,18870+18])
                                      Pexp_ident "ul" (middle_end/closure/closure.ml[486,18870+16]..[486,18870+18])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[486,18870+19]..[486,18870+20])
                                      Pexp_ident "n" (middle_end/closure/closure.ml[486,18870+19]..[486,18870+20])
                                ]
                              expression (middle_end/closure/closure.ml[486,18870+22]..[486,18870+43])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[486,18870+22]..[486,18870+34])
                                  Pexp_ident "field_approx" (middle_end/closure/closure.ml[486,18870+22]..[486,18870+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[486,18870+35]..[486,18870+36])
                                      Pexp_ident "n" (middle_end/closure/closure.ml[486,18870+35]..[486,18870+36])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[486,18870+37]..[486,18870+43])
                                      Pexp_ident "approx" (middle_end/closure/closure.ml[486,18870+37]..[486,18870+43])
                                ]
                            ]
                        <case>
                          pattern (middle_end/closure/closure.ml[488,18931+4]..[490,18975+59])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[488,18931+4]..[488,18931+34])
                                Ppat_or
                                pattern (middle_end/closure/closure.ml[488,18931+5]..[488,18931+18])
                                  Ppat_construct "Pstringlength" (middle_end/closure/closure.ml[488,18931+5]..[488,18931+18])
                                  None
                                pattern (middle_end/closure/closure.ml[488,18931+21]..[488,18931+33])
                                  Ppat_construct "Pbyteslength" (middle_end/closure/closure.ml[488,18931+21]..[488,18931+33])
                                  None
                              pattern (middle_end/closure/closure.ml[489,18967+5]..[489,18967+6])
                                Ppat_any
                              pattern (middle_end/closure/closure.ml[490,18975+5]..[490,18975+59])
                                Ppat_construct "::" (middle_end/closure/closure.ml[490,18975+7]..[490,18975+59]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[490,18975+7]..[490,18975+59]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[490,18975+7]..[490,18975+57])
                                        Ppat_construct "Value_const" (middle_end/closure/closure.ml[490,18975+7]..[490,18975+18])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[490,18975+18]..[490,18975+57])
                                            Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[490,18975+19]..[490,18975+29])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[490,18975+29]..[490,18975+56])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/closure/closure.ml[490,18975+30]..[490,18975+31])
                                                    Ppat_any
                                                  pattern (middle_end/closure/closure.ml[490,18975+33]..[490,18975+55])
                                                    Ppat_construct "Some" (middle_end/closure/closure.ml[490,18975+33]..[490,18975+37])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[490,18975+38]..[490,18975+55])
                                                        Ppat_construct "Uconst_string" (middle_end/closure/closure.ml[490,18975+39]..[490,18975+52])
                                                        Some
                                                          []
                                                          pattern (middle_end/closure/closure.ml[490,18975+53]..[490,18975+54])
                                                            Ppat_var "s" (middle_end/closure/closure.ml[490,18975+53]..[490,18975+54])
                                                ]
                                      pattern (middle_end/closure/closure.ml[490,18975+58]..[490,18975+59]) ghost
                                        Ppat_construct "[]" (middle_end/closure/closure.ml[490,18975+58]..[490,18975+59]) ghost
                                        None
                                    ]
                            ]
                          expression (middle_end/closure/closure.ml[491,19038+6]..[491,19038+38])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[491,19038+6]..[491,19038+20])
                              Pexp_ident "make_const_int" (middle_end/closure/closure.ml[491,19038+6]..[491,19038+20])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[491,19038+21]..[491,19038+38])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[491,19038+22]..[491,19038+35])
                                    Pexp_ident "String.length" (middle_end/closure/closure.ml[491,19038+22]..[491,19038+35])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[491,19038+36]..[491,19038+37])
                                        Pexp_ident "s" (middle_end/closure/closure.ml[491,19038+36]..[491,19038+37])
                                  ]
                            ]
                        <case>
                          pattern (middle_end/closure/closure.ml[493,19095+4]..[493,19095+19])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[493,19095+4]..[493,19095+10])
                                Ppat_construct "Pisint" (middle_end/closure/closure.ml[493,19095+4]..[493,19095+10])
                                None
                              pattern (middle_end/closure/closure.ml[493,19095+12]..[493,19095+13])
                                Ppat_any
                              pattern (middle_end/closure/closure.ml[493,19095+15]..[493,19095+19])
                                Ppat_construct "::" (middle_end/closure/closure.ml[493,19095+16]..[493,19095+19]) ghost
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[493,19095+16]..[493,19095+19]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[493,19095+16]..[493,19095+18])
                                        Ppat_var "a1" (middle_end/closure/closure.ml[493,19095+16]..[493,19095+18])
                                      pattern (middle_end/closure/closure.ml[493,19095+18]..[493,19095+19]) ghost
                                        Ppat_construct "[]" (middle_end/closure/closure.ml[493,19095+18]..[493,19095+19]) ghost
                                        None
                                    ]
                            ]
                          expression (middle_end/closure/closure.ml[494,19118+6]..[499,19376+9])
                            Pexp_match
                            expression (middle_end/closure/closure.ml[494,19118+18]..[494,19118+20])
                              Pexp_ident "a1" (middle_end/closure/closure.ml[494,19118+18]..[494,19118+20])
                            [
                              <case>
                                pattern (middle_end/closure/closure.ml[495,19144+8]..[495,19144+33])
                                  Ppat_construct "Value_const" (middle_end/closure/closure.ml[495,19144+8]..[495,19144+19])
                                  Some
                                    []
                                    pattern (middle_end/closure/closure.ml[495,19144+19]..[495,19144+33])
                                      Ppat_construct "Uconst_int" (middle_end/closure/closure.ml[495,19144+20]..[495,19144+30])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[495,19144+31]..[495,19144+32])
                                          Ppat_any
                                expression (middle_end/closure/closure.ml[495,19144+37]..[495,19144+57])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[495,19144+37]..[495,19144+52])
                                    Pexp_ident "make_const_bool" (middle_end/closure/closure.ml[495,19144+37]..[495,19144+52])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[495,19144+53]..[495,19144+57])
                                        Pexp_construct "true" (middle_end/closure/closure.ml[495,19144+53]..[495,19144+57])
                                        None
                                  ]
                              <case>
                                pattern (middle_end/closure/closure.ml[496,19202+8]..[496,19202+33])
                                  Ppat_construct "Value_const" (middle_end/closure/closure.ml[496,19202+8]..[496,19202+19])
                                  Some
                                    []
                                    pattern (middle_end/closure/closure.ml[496,19202+19]..[496,19202+33])
                                      Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[496,19202+20]..[496,19202+30])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[496,19202+31]..[496,19202+32])
                                          Ppat_any
                                expression (middle_end/closure/closure.ml[496,19202+37]..[496,19202+58])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[496,19202+37]..[496,19202+52])
                                    Pexp_ident "make_const_bool" (middle_end/closure/closure.ml[496,19202+37]..[496,19202+52])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[496,19202+53]..[496,19202+58])
                                        Pexp_construct "false" (middle_end/closure/closure.ml[496,19202+53]..[496,19202+58])
                                        None
                                  ]
                              <case>
                                pattern (middle_end/closure/closure.ml[497,19261+8]..[497,19261+39])
                                  Ppat_or
                                  pattern (middle_end/closure/closure.ml[497,19261+8]..[497,19261+23])
                                    Ppat_construct "Value_closure" (middle_end/closure/closure.ml[497,19261+8]..[497,19261+21])
                                    Some
                                      []
                                      pattern (middle_end/closure/closure.ml[497,19261+22]..[497,19261+23])
                                        Ppat_any
                                  pattern (middle_end/closure/closure.ml[497,19261+26]..[497,19261+39])
                                    Ppat_construct "Value_tuple" (middle_end/closure/closure.ml[497,19261+26]..[497,19261+37])
                                    Some
                                      []
                                      pattern (middle_end/closure/closure.ml[497,19261+38]..[497,19261+39])
                                        Ppat_any
                                expression (middle_end/closure/closure.ml[497,19261+43]..[497,19261+64])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[497,19261+43]..[497,19261+58])
                                    Pexp_ident "make_const_bool" (middle_end/closure/closure.ml[497,19261+43]..[497,19261+58])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[497,19261+59]..[497,19261+64])
                                        Pexp_construct "false" (middle_end/closure/closure.ml[497,19261+59]..[497,19261+64])
                                        None
                                  ]
                              <case>
                                pattern (middle_end/closure/closure.ml[498,19326+8]..[498,19326+9])
                                  Ppat_any
                                expression (middle_end/closure/closure.ml[498,19326+13]..[498,19326+49])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/closure/closure.ml[498,19326+14]..[498,19326+33])
                                      Pexp_construct "Uprim" (middle_end/closure/closure.ml[498,19326+14]..[498,19326+19])
                                      Some
                                        expression (middle_end/closure/closure.ml[498,19326+19]..[498,19326+33])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/closure/closure.ml[498,19326+20]..[498,19326+21])
                                              Pexp_ident "p" (middle_end/closure/closure.ml[498,19326+20]..[498,19326+21])
                                            expression (middle_end/closure/closure.ml[498,19326+23]..[498,19326+27])
                                              Pexp_ident "args" (middle_end/closure/closure.ml[498,19326+23]..[498,19326+27])
                                            expression (middle_end/closure/closure.ml[498,19326+29]..[498,19326+32])
                                              Pexp_ident "dbg" (middle_end/closure/closure.ml[498,19326+29]..[498,19326+32])
                                          ]
                                    expression (middle_end/closure/closure.ml[498,19326+35]..[498,19326+48])
                                      Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[498,19326+35]..[498,19326+48])
                                      None
                                  ]
                            ]
                        <case>
                          pattern (middle_end/closure/closure.ml[501,19404+4]..[501,19404+5])
                            Ppat_any
                          expression (middle_end/closure/closure.ml[502,19413+6]..[502,19413+64])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[502,19413+6]..[502,19413+29])
                              Pexp_ident "simplif_arith_prim_pure" (middle_end/closure/closure.ml[502,19413+6]..[502,19413+29])
                            [
                              <arg>
                              Labelled "backend"
                                expression (middle_end/closure/closure.ml[502,19413+31]..[502,19413+38])
                                  Pexp_ident "backend" (middle_end/closure/closure.ml[502,19413+31]..[502,19413+38])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[502,19413+39]..[502,19413+42])
                                  Pexp_ident "fpc" (middle_end/closure/closure.ml[502,19413+39]..[502,19413+42])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[502,19413+43]..[502,19413+44])
                                  Pexp_ident "p" (middle_end/closure/closure.ml[502,19413+43]..[502,19413+44])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[502,19413+45]..[502,19413+60])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/closure/closure.ml[502,19413+46]..[502,19413+50])
                                      Pexp_ident "args" (middle_end/closure/closure.ml[502,19413+46]..[502,19413+50])
                                    expression (middle_end/closure/closure.ml[502,19413+52]..[502,19413+59])
                                      Pexp_ident "approxs" (middle_end/closure/closure.ml[502,19413+52]..[502,19413+59])
                                  ]
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[502,19413+61]..[502,19413+64])
                                  Pexp_ident "dbg" (middle_end/closure/closure.ml[502,19413+61]..[502,19413+64])
                            ]
                      ]
    ]
  structure_item (middle_end/closure/closure.ml[504,19479+0]..[516,19884+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[504,19479+4]..[504,19479+16])
          Ppat_var "simplif_prim" (middle_end/closure/closure.ml[504,19479+4]..[504,19479+16])
        expression (middle_end/closure/closure.ml[504,19479+17]..[516,19884+33]) ghost
          Pexp_fun
          Labelled "backend"
          None
          pattern (middle_end/closure/closure.ml[504,19479+18]..[504,19479+25])
            Ppat_var "backend" (middle_end/closure/closure.ml[504,19479+18]..[504,19479+25])
          expression (middle_end/closure/closure.ml[504,19479+26]..[516,19884+33]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[504,19479+26]..[504,19479+29])
              Ppat_var "fpc" (middle_end/closure/closure.ml[504,19479+26]..[504,19479+29])
            expression (middle_end/closure/closure.ml[504,19479+30]..[516,19884+33]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/closure/closure.ml[504,19479+30]..[504,19479+31])
                Ppat_var "p" (middle_end/closure/closure.ml[504,19479+30]..[504,19479+31])
              expression (middle_end/closure/closure.ml[504,19479+32]..[516,19884+33]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (middle_end/closure/closure.ml[504,19479+32]..[504,19479+63])
                  Ppat_alias "args_approxs" (middle_end/closure/closure.ml[504,19479+50]..[504,19479+62])
                  pattern (middle_end/closure/closure.ml[504,19479+33]..[504,19479+46])
                    Ppat_tuple
                    [
                      pattern (middle_end/closure/closure.ml[504,19479+33]..[504,19479+37])
                        Ppat_var "args" (middle_end/closure/closure.ml[504,19479+33]..[504,19479+37])
                      pattern (middle_end/closure/closure.ml[504,19479+39]..[504,19479+46])
                        Ppat_var "approxs" (middle_end/closure/closure.ml[504,19479+39]..[504,19479+46])
                    ]
                expression (middle_end/closure/closure.ml[504,19479+64]..[516,19884+33]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/closure/closure.ml[504,19479+64]..[504,19479+67])
                    Ppat_var "dbg" (middle_end/closure/closure.ml[504,19479+64]..[504,19479+67])
                  expression (middle_end/closure/closure.ml[505,19549+2]..[516,19884+33])
                    Pexp_ifthenelse
                    expression (middle_end/closure/closure.ml[505,19549+5]..[505,19549+30])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[505,19549+5]..[505,19549+17])
                        Pexp_ident "List.for_all" (middle_end/closure/closure.ml[505,19549+5]..[505,19549+17])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[505,19549+18]..[505,19549+25])
                            Pexp_ident "is_pure" (middle_end/closure/closure.ml[505,19549+18]..[505,19549+25])
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[505,19549+26]..[505,19549+30])
                            Pexp_ident "args" (middle_end/closure/closure.ml[505,19549+26]..[505,19549+30])
                      ]
                    expression (middle_end/closure/closure.ml[506,19580+7]..[506,19580+56])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[506,19580+7]..[506,19580+24])
                        Pexp_ident "simplif_prim_pure" (middle_end/closure/closure.ml[506,19580+7]..[506,19580+24])
                      [
                        <arg>
                        Labelled "backend"
                          expression (middle_end/closure/closure.ml[506,19580+26]..[506,19580+33])
                            Pexp_ident "backend" (middle_end/closure/closure.ml[506,19580+26]..[506,19580+33])
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[506,19580+34]..[506,19580+37])
                            Pexp_ident "fpc" (middle_end/closure/closure.ml[506,19580+34]..[506,19580+37])
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[506,19580+38]..[506,19580+39])
                            Pexp_ident "p" (middle_end/closure/closure.ml[506,19580+38]..[506,19580+39])
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[506,19580+40]..[506,19580+52])
                            Pexp_ident "args_approxs" (middle_end/closure/closure.ml[506,19580+40]..[506,19580+52])
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[506,19580+53]..[506,19580+56])
                            Pexp_ident "dbg" (middle_end/closure/closure.ml[506,19580+53]..[506,19580+56])
                      ]
                    Some
                      expression (middle_end/closure/closure.ml[509,19713+4]..[516,19884+33])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[509,19713+8]..[509,19713+14])
                              Ppat_var "approx" (middle_end/closure/closure.ml[509,19713+8]..[509,19713+14])
                            expression (middle_end/closure/closure.ml[510,19730+6]..[514,19853+23])
                              Pexp_match
                              expression (middle_end/closure/closure.ml[510,19730+12]..[510,19730+13])
                                Pexp_ident "p" (middle_end/closure/closure.ml[510,19730+12]..[510,19730+13])
                              [
                                <case>
                                  pattern (middle_end/closure/closure.ml[511,19749+8]..[511,19749+41])
                                    Ppat_construct "P.Pmakeblock" (middle_end/closure/closure.ml[511,19749+8]..[511,19749+20])
                                    Some
                                      []
                                      pattern (middle_end/closure/closure.ml[511,19749+20]..[511,19749+41])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/closure/closure.ml[511,19749+21]..[511,19749+22])
                                            Ppat_any
                                          pattern (middle_end/closure/closure.ml[511,19749+24]..[511,19749+33])
                                            Ppat_construct "Immutable" (middle_end/closure/closure.ml[511,19749+24]..[511,19749+33])
                                            None
                                          pattern (middle_end/closure/closure.ml[511,19749+35]..[511,19749+40])
                                            Ppat_var "_kind" (middle_end/closure/closure.ml[511,19749+35]..[511,19749+40])
                                        ]
                                  expression (middle_end/closure/closure.ml[512,19794+10]..[512,19794+45])
                                    Pexp_construct "Value_tuple" (middle_end/closure/closure.ml[512,19794+10]..[512,19794+21])
                                    Some
                                      expression (middle_end/closure/closure.ml[512,19794+22]..[512,19794+45])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[512,19794+23]..[512,19794+36])
                                          Pexp_ident "Array.of_list" (middle_end/closure/closure.ml[512,19794+23]..[512,19794+36])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[512,19794+37]..[512,19794+44])
                                              Pexp_ident "approxs" (middle_end/closure/closure.ml[512,19794+37]..[512,19794+44])
                                        ]
                                <case>
                                  pattern (middle_end/closure/closure.ml[513,19840+8]..[513,19840+9])
                                    Ppat_any
                                  expression (middle_end/closure/closure.ml[514,19853+10]..[514,19853+23])
                                    Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[514,19853+10]..[514,19853+23])
                                    None
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[516,19884+4]..[516,19884+33])
                          Pexp_tuple
                          [
                            expression (middle_end/closure/closure.ml[516,19884+5]..[516,19884+24])
                              Pexp_construct "Uprim" (middle_end/closure/closure.ml[516,19884+5]..[516,19884+10])
                              Some
                                expression (middle_end/closure/closure.ml[516,19884+10]..[516,19884+24])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/closure/closure.ml[516,19884+11]..[516,19884+12])
                                      Pexp_ident "p" (middle_end/closure/closure.ml[516,19884+11]..[516,19884+12])
                                    expression (middle_end/closure/closure.ml[516,19884+14]..[516,19884+18])
                                      Pexp_ident "args" (middle_end/closure/closure.ml[516,19884+14]..[516,19884+18])
                                    expression (middle_end/closure/closure.ml[516,19884+20]..[516,19884+23])
                                      Pexp_ident "dbg" (middle_end/closure/closure.ml[516,19884+20]..[516,19884+23])
                                  ]
                            expression (middle_end/closure/closure.ml[516,19884+26]..[516,19884+32])
                              Pexp_ident "approx" (middle_end/closure/closure.ml[516,19884+26]..[516,19884+32])
                          ]
    ]
  structure_item (middle_end/closure/closure.ml[528,20472+0]..[530,20529+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[528,20472+4]..[528,20472+15])
          Ppat_var "approx_ulam" (middle_end/closure/closure.ml[528,20472+4]..[528,20472+15])
        expression (middle_end/closure/closure.ml[528,20472+18]..[530,20529+22])
          Pexp_function
          [
            <case>
              pattern (middle_end/closure/closure.ml[529,20499+4]..[529,20499+12])
                Ppat_construct "Uconst" (middle_end/closure/closure.ml[529,20499+4]..[529,20499+10])
                Some
                  []
                  pattern (middle_end/closure/closure.ml[529,20499+11]..[529,20499+12])
                    Ppat_var "c" (middle_end/closure/closure.ml[529,20499+11]..[529,20499+12])
              expression (middle_end/closure/closure.ml[529,20499+16]..[529,20499+29])
                Pexp_construct "Value_const" (middle_end/closure/closure.ml[529,20499+16]..[529,20499+27])
                Some
                  expression (middle_end/closure/closure.ml[529,20499+28]..[529,20499+29])
                    Pexp_ident "c" (middle_end/closure/closure.ml[529,20499+28]..[529,20499+29])
            <case>
              pattern (middle_end/closure/closure.ml[530,20529+4]..[530,20529+5])
                Ppat_any
              expression (middle_end/closure/closure.ml[530,20529+9]..[530,20529+22])
                Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[530,20529+9]..[530,20529+22])
                None
          ]
    ]
  structure_item (middle_end/closure/closure.ml[532,20553+0]..[539,20772+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[532,20553+4]..[532,20553+15])
          Ppat_var "find_action" (middle_end/closure/closure.ml[532,20553+4]..[532,20553+15])
        expression (middle_end/closure/closure.ml[532,20553+16]..[539,20772+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[532,20553+16]..[532,20553+20])
            Ppat_var "idxs" (middle_end/closure/closure.ml[532,20553+16]..[532,20553+20])
          expression (middle_end/closure/closure.ml[532,20553+21]..[539,20772+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[532,20553+21]..[532,20553+25])
              Ppat_var "acts" (middle_end/closure/closure.ml[532,20553+21]..[532,20553+25])
            expression (middle_end/closure/closure.ml[532,20553+26]..[539,20772+8]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/closure/closure.ml[532,20553+26]..[532,20553+29])
                Ppat_var "tag" (middle_end/closure/closure.ml[532,20553+26]..[532,20553+29])
              expression (middle_end/closure/closure.ml[533,20585+2]..[539,20772+8])
                Pexp_ifthenelse
                expression (middle_end/closure/closure.ml[533,20585+5]..[533,20585+40])
                  Pexp_apply
                  expression (middle_end/closure/closure.ml[533,20585+14]..[533,20585+16])
                    Pexp_ident "&&" (middle_end/closure/closure.ml[533,20585+14]..[533,20585+16])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure.ml[533,20585+5]..[533,20585+13])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[533,20585+7]..[533,20585+9])
                          Pexp_ident "<=" (middle_end/closure/closure.ml[533,20585+7]..[533,20585+9])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[533,20585+5]..[533,20585+6])
                              Pexp_constant PConst_int (0,None)
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[533,20585+10]..[533,20585+13])
                              Pexp_ident "tag" (middle_end/closure/closure.ml[533,20585+10]..[533,20585+13])
                        ]
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure.ml[533,20585+17]..[533,20585+40])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[533,20585+21]..[533,20585+22])
                          Pexp_ident "<" (middle_end/closure/closure.ml[533,20585+21]..[533,20585+22])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[533,20585+17]..[533,20585+20])
                              Pexp_ident "tag" (middle_end/closure/closure.ml[533,20585+17]..[533,20585+20])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[533,20585+23]..[533,20585+40])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[533,20585+23]..[533,20585+35])
                                Pexp_ident "Array.length" (middle_end/closure/closure.ml[533,20585+23]..[533,20585+35])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[533,20585+36]..[533,20585+40])
                                    Pexp_ident "idxs" (middle_end/closure/closure.ml[533,20585+36]..[533,20585+40])
                              ]
                        ]
                  ]
                expression (middle_end/closure/closure.ml[533,20585+46]..[537,20734+5])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/closure/closure.ml[534,20637+8]..[534,20637+11])
                        Ppat_var "idx" (middle_end/closure/closure.ml[534,20637+8]..[534,20637+11])
                      expression (middle_end/closure/closure.ml[534,20637+14]..[534,20637+24])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[534,20637+14]..[534,20637+24]) ghost
                          Pexp_ident "Array.get" (middle_end/closure/closure.ml[534,20637+14]..[534,20637+24]) ghost
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[534,20637+14]..[534,20637+18])
                              Pexp_ident "idxs" (middle_end/closure/closure.ml[534,20637+14]..[534,20637+18])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[534,20637+20]..[534,20637+23])
                              Pexp_ident "tag" (middle_end/closure/closure.ml[534,20637+20]..[534,20637+23])
                        ]
                  ]
                  expression (middle_end/closure/closure.ml[535,20665+4]..[536,20714+19])
                    Pexp_sequence
                    expression (middle_end/closure/closure.ml[535,20665+4]..[535,20665+47])
                      Pexp_assert
                      expression (middle_end/closure/closure.ml[535,20665+10]..[535,20665+47])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[535,20665+20]..[535,20665+22])
                          Pexp_ident "&&" (middle_end/closure/closure.ml[535,20665+20]..[535,20665+22])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[535,20665+11]..[535,20665+19])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[535,20665+13]..[535,20665+15])
                                Pexp_ident "<=" (middle_end/closure/closure.ml[535,20665+13]..[535,20665+15])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[535,20665+11]..[535,20665+12])
                                    Pexp_constant PConst_int (0,None)
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[535,20665+16]..[535,20665+19])
                                    Pexp_ident "idx" (middle_end/closure/closure.ml[535,20665+16]..[535,20665+19])
                              ]
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[535,20665+23]..[535,20665+46])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[535,20665+27]..[535,20665+28])
                                Pexp_ident "<" (middle_end/closure/closure.ml[535,20665+27]..[535,20665+28])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[535,20665+23]..[535,20665+26])
                                    Pexp_ident "idx" (middle_end/closure/closure.ml[535,20665+23]..[535,20665+26])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[535,20665+29]..[535,20665+46])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[535,20665+29]..[535,20665+41])
                                      Pexp_ident "Array.length" (middle_end/closure/closure.ml[535,20665+29]..[535,20665+41])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[535,20665+42]..[535,20665+46])
                                          Pexp_ident "acts" (middle_end/closure/closure.ml[535,20665+42]..[535,20665+46])
                                    ]
                              ]
                        ]
                    expression (middle_end/closure/closure.ml[536,20714+4]..[536,20714+19])
                      Pexp_construct "Some" (middle_end/closure/closure.ml[536,20714+4]..[536,20714+8])
                      Some
                        expression (middle_end/closure/closure.ml[536,20714+9]..[536,20714+19])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[536,20714+9]..[536,20714+19]) ghost
                            Pexp_ident "Array.get" (middle_end/closure/closure.ml[536,20714+9]..[536,20714+19]) ghost
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[536,20714+9]..[536,20714+13])
                                Pexp_ident "acts" (middle_end/closure/closure.ml[536,20714+9]..[536,20714+13])
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[536,20714+15]..[536,20714+18])
                                Pexp_ident "idx" (middle_end/closure/closure.ml[536,20714+15]..[536,20714+18])
                          ]
                Some
                  expression (middle_end/closure/closure.ml[539,20772+4]..[539,20772+8])
                    Pexp_construct "None" (middle_end/closure/closure.ml[539,20772+4]..[539,20772+8])
                    None
    ]
  structure_item (middle_end/closure/closure.ml[541,20782+0]..[545,20873+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[541,20782+4]..[541,20782+19])
          Ppat_var "subst_debuginfo" (middle_end/closure/closure.ml[541,20782+4]..[541,20782+19])
        expression (middle_end/closure/closure.ml[541,20782+20]..[545,20873+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[541,20782+20]..[541,20782+23])
            Ppat_var "loc" (middle_end/closure/closure.ml[541,20782+20]..[541,20782+23])
          expression (middle_end/closure/closure.ml[541,20782+24]..[545,20873+7]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[541,20782+24]..[541,20782+27])
              Ppat_var "dbg" (middle_end/closure/closure.ml[541,20782+24]..[541,20782+27])
            expression (middle_end/closure/closure.ml[542,20812+2]..[545,20873+7])
              Pexp_ifthenelse
              expression (middle_end/closure/closure.ml[542,20812+5]..[542,20812+19])
                Pexp_apply
                expression (middle_end/closure/closure.ml[542,20812+5]..[542,20812+6])
                  Pexp_ident "!" (middle_end/closure/closure.ml[542,20812+5]..[542,20812+6])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/closure/closure.ml[542,20812+6]..[542,20812+19])
                      Pexp_ident "Clflags.debug" (middle_end/closure/closure.ml[542,20812+6]..[542,20812+19])
                ]
              expression (middle_end/closure/closure.ml[543,20837+4]..[543,20837+28])
                Pexp_apply
                expression (middle_end/closure/closure.ml[543,20837+4]..[543,20837+20])
                  Pexp_ident "Debuginfo.inline" (middle_end/closure/closure.ml[543,20837+4]..[543,20837+20])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/closure/closure.ml[543,20837+21]..[543,20837+24])
                      Pexp_ident "loc" (middle_end/closure/closure.ml[543,20837+21]..[543,20837+24])
                  <arg>
                  Nolabel
                    expression (middle_end/closure/closure.ml[543,20837+25]..[543,20837+28])
                      Pexp_ident "dbg" (middle_end/closure/closure.ml[543,20837+25]..[543,20837+28])
                ]
              Some
                expression (middle_end/closure/closure.ml[545,20873+4]..[545,20873+7])
                  Pexp_ident "dbg" (middle_end/closure/closure.ml[545,20873+4]..[545,20873+7])
    ]
  structure_item (middle_end/closure/closure.ml[547,20882+0]..[697,26797+18])
    Pstr_value Rec
    [
      <def>
        pattern (middle_end/closure/closure.ml[547,20882+8]..[547,20882+18])
          Ppat_var "substitute" (middle_end/closure/closure.ml[547,20882+8]..[547,20882+18])
        expression (middle_end/closure/closure.ml[547,20882+19]..[697,26797+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[547,20882+19]..[547,20882+22])
            Ppat_var "loc" (middle_end/closure/closure.ml[547,20882+19]..[547,20882+22])
          expression (middle_end/closure/closure.ml[547,20882+23]..[697,26797+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[547,20882+23]..[547,20882+45])
              Ppat_alias "st" (middle_end/closure/closure.ml[547,20882+42]..[547,20882+44])
              pattern (middle_end/closure/closure.ml[547,20882+24]..[547,20882+38])
                Ppat_tuple
                [
                  pattern (middle_end/closure/closure.ml[547,20882+25]..[547,20882+32])
                    Ppat_var "backend" (middle_end/closure/closure.ml[547,20882+25]..[547,20882+32])
                  pattern (middle_end/closure/closure.ml[547,20882+34]..[547,20882+37])
                    Ppat_var "fpc" (middle_end/closure/closure.ml[547,20882+34]..[547,20882+37])
                ]
            expression (middle_end/closure/closure.ml[547,20882+46]..[697,26797+18]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/closure/closure.ml[547,20882+46]..[547,20882+48])
                Ppat_var "sb" (middle_end/closure/closure.ml[547,20882+46]..[547,20882+48])
              expression (middle_end/closure/closure.ml[547,20882+49]..[697,26797+18]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (middle_end/closure/closure.ml[547,20882+49]..[547,20882+51])
                  Ppat_var "rn" (middle_end/closure/closure.ml[547,20882+49]..[547,20882+51])
                expression (middle_end/closure/closure.ml[547,20882+52]..[697,26797+18]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/closure/closure.ml[547,20882+52]..[547,20882+56])
                    Ppat_var "ulam" (middle_end/closure/closure.ml[547,20882+52]..[547,20882+56])
                  expression (middle_end/closure/closure.ml[548,20941+2]..[697,26797+18])
                    Pexp_match
                    expression (middle_end/closure/closure.ml[548,20941+8]..[548,20941+12])
                      Pexp_ident "ulam" (middle_end/closure/closure.ml[548,20941+8]..[548,20941+12])
                    [
                      <case>
                        pattern (middle_end/closure/closure.ml[549,20959+4]..[549,20959+10])
                          Ppat_construct "Uvar" (middle_end/closure/closure.ml[549,20959+4]..[549,20959+8])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[549,20959+9]..[549,20959+10])
                              Ppat_var "v" (middle_end/closure/closure.ml[549,20959+9]..[549,20959+10])
                        expression (middle_end/closure/closure.ml[550,20973+6]..[550,20973+58])
                          Pexp_try
                          expression (middle_end/closure/closure.ml[550,20973+16]..[550,20973+31])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[550,20973+16]..[550,20973+26])
                              Pexp_ident "V.Map.find" (middle_end/closure/closure.ml[550,20973+16]..[550,20973+26])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[550,20973+27]..[550,20973+28])
                                  Pexp_ident "v" (middle_end/closure/closure.ml[550,20973+27]..[550,20973+28])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[550,20973+29]..[550,20973+31])
                                  Pexp_ident "sb" (middle_end/closure/closure.ml[550,20973+29]..[550,20973+31])
                            ]
                          [
                            <case>
                              pattern (middle_end/closure/closure.ml[550,20973+37]..[550,20973+46])
                                Ppat_construct "Not_found" (middle_end/closure/closure.ml[550,20973+37]..[550,20973+46])
                                None
                              expression (middle_end/closure/closure.ml[550,20973+50]..[550,20973+54])
                                Pexp_ident "ulam" (middle_end/closure/closure.ml[550,20973+50]..[550,20973+54])
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[551,21032+4]..[551,21032+12])
                          Ppat_construct "Uconst" (middle_end/closure/closure.ml[551,21032+4]..[551,21032+10])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[551,21032+11]..[551,21032+12])
                              Ppat_any
                        expression (middle_end/closure/closure.ml[551,21032+16]..[551,21032+20])
                          Pexp_ident "ulam" (middle_end/closure/closure.ml[551,21032+16]..[551,21032+20])
                      <case>
                        pattern (middle_end/closure/closure.ml[552,21053+4]..[552,21053+33])
                          Ppat_construct "Udirect_apply" (middle_end/closure/closure.ml[552,21053+4]..[552,21053+17])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[552,21053+17]..[552,21053+33])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[552,21053+18]..[552,21053+21])
                                  Ppat_var "lbl" (middle_end/closure/closure.ml[552,21053+18]..[552,21053+21])
                                pattern (middle_end/closure/closure.ml[552,21053+23]..[552,21053+27])
                                  Ppat_var "args" (middle_end/closure/closure.ml[552,21053+23]..[552,21053+27])
                                pattern (middle_end/closure/closure.ml[552,21053+29]..[552,21053+32])
                                  Ppat_var "dbg" (middle_end/closure/closure.ml[552,21053+29]..[552,21053+32])
                              ]
                        expression (middle_end/closure/closure.ml[553,21090+6]..[554,21133+70])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[553,21090+10]..[553,21090+13])
                                Ppat_var "dbg" (middle_end/closure/closure.ml[553,21090+10]..[553,21090+13])
                              expression (middle_end/closure/closure.ml[553,21090+16]..[553,21090+39])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[553,21090+16]..[553,21090+31])
                                  Pexp_ident "subst_debuginfo" (middle_end/closure/closure.ml[553,21090+16]..[553,21090+31])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[553,21090+32]..[553,21090+35])
                                      Pexp_ident "loc" (middle_end/closure/closure.ml[553,21090+32]..[553,21090+35])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[553,21090+36]..[553,21090+39])
                                      Pexp_ident "dbg" (middle_end/closure/closure.ml[553,21090+36]..[553,21090+39])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[554,21133+6]..[554,21133+70])
                            Pexp_construct "Udirect_apply" (middle_end/closure/closure.ml[554,21133+6]..[554,21133+19])
                            Some
                              expression (middle_end/closure/closure.ml[554,21133+19]..[554,21133+70])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[554,21133+20]..[554,21133+23])
                                    Pexp_ident "lbl" (middle_end/closure/closure.ml[554,21133+20]..[554,21133+23])
                                  expression (middle_end/closure/closure.ml[554,21133+25]..[554,21133+64])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[554,21133+25]..[554,21133+33])
                                      Pexp_ident "List.map" (middle_end/closure/closure.ml[554,21133+25]..[554,21133+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[554,21133+34]..[554,21133+59])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[554,21133+35]..[554,21133+45])
                                            Pexp_ident "substitute" (middle_end/closure/closure.ml[554,21133+35]..[554,21133+45])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[554,21133+46]..[554,21133+49])
                                                Pexp_ident "loc" (middle_end/closure/closure.ml[554,21133+46]..[554,21133+49])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[554,21133+50]..[554,21133+52])
                                                Pexp_ident "st" (middle_end/closure/closure.ml[554,21133+50]..[554,21133+52])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[554,21133+53]..[554,21133+55])
                                                Pexp_ident "sb" (middle_end/closure/closure.ml[554,21133+53]..[554,21133+55])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[554,21133+56]..[554,21133+58])
                                                Pexp_ident "rn" (middle_end/closure/closure.ml[554,21133+56]..[554,21133+58])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[554,21133+60]..[554,21133+64])
                                          Pexp_ident "args" (middle_end/closure/closure.ml[554,21133+60]..[554,21133+64])
                                    ]
                                  expression (middle_end/closure/closure.ml[554,21133+66]..[554,21133+69])
                                    Pexp_ident "dbg" (middle_end/closure/closure.ml[554,21133+66]..[554,21133+69])
                                ]
                      <case>
                        pattern (middle_end/closure/closure.ml[555,21204+4]..[555,21204+33])
                          Ppat_construct "Ugeneric_apply" (middle_end/closure/closure.ml[555,21204+4]..[555,21204+18])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[555,21204+18]..[555,21204+33])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[555,21204+19]..[555,21204+21])
                                  Ppat_var "fn" (middle_end/closure/closure.ml[555,21204+19]..[555,21204+21])
                                pattern (middle_end/closure/closure.ml[555,21204+23]..[555,21204+27])
                                  Ppat_var "args" (middle_end/closure/closure.ml[555,21204+23]..[555,21204+27])
                                pattern (middle_end/closure/closure.ml[555,21204+29]..[555,21204+32])
                                  Ppat_var "dbg" (middle_end/closure/closure.ml[555,21204+29]..[555,21204+32])
                              ]
                        expression (middle_end/closure/closure.ml[556,21241+6]..[558,21333+66])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[556,21241+10]..[556,21241+13])
                                Ppat_var "dbg" (middle_end/closure/closure.ml[556,21241+10]..[556,21241+13])
                              expression (middle_end/closure/closure.ml[556,21241+16]..[556,21241+39])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[556,21241+16]..[556,21241+31])
                                  Pexp_ident "subst_debuginfo" (middle_end/closure/closure.ml[556,21241+16]..[556,21241+31])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[556,21241+32]..[556,21241+35])
                                      Pexp_ident "loc" (middle_end/closure/closure.ml[556,21241+32]..[556,21241+35])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[556,21241+36]..[556,21241+39])
                                      Pexp_ident "dbg" (middle_end/closure/closure.ml[556,21241+36]..[556,21241+39])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[557,21284+6]..[558,21333+66])
                            Pexp_construct "Ugeneric_apply" (middle_end/closure/closure.ml[557,21284+6]..[557,21284+20])
                            Some
                              expression (middle_end/closure/closure.ml[557,21284+20]..[558,21333+66])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[557,21284+21]..[557,21284+47])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[557,21284+21]..[557,21284+31])
                                      Pexp_ident "substitute" (middle_end/closure/closure.ml[557,21284+21]..[557,21284+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[557,21284+32]..[557,21284+35])
                                          Pexp_ident "loc" (middle_end/closure/closure.ml[557,21284+32]..[557,21284+35])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[557,21284+36]..[557,21284+38])
                                          Pexp_ident "st" (middle_end/closure/closure.ml[557,21284+36]..[557,21284+38])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[557,21284+39]..[557,21284+41])
                                          Pexp_ident "sb" (middle_end/closure/closure.ml[557,21284+39]..[557,21284+41])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[557,21284+42]..[557,21284+44])
                                          Pexp_ident "rn" (middle_end/closure/closure.ml[557,21284+42]..[557,21284+44])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[557,21284+45]..[557,21284+47])
                                          Pexp_ident "fn" (middle_end/closure/closure.ml[557,21284+45]..[557,21284+47])
                                    ]
                                  expression (middle_end/closure/closure.ml[558,21333+21]..[558,21333+60])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[558,21333+21]..[558,21333+29])
                                      Pexp_ident "List.map" (middle_end/closure/closure.ml[558,21333+21]..[558,21333+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[558,21333+30]..[558,21333+55])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[558,21333+31]..[558,21333+41])
                                            Pexp_ident "substitute" (middle_end/closure/closure.ml[558,21333+31]..[558,21333+41])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[558,21333+42]..[558,21333+45])
                                                Pexp_ident "loc" (middle_end/closure/closure.ml[558,21333+42]..[558,21333+45])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[558,21333+46]..[558,21333+48])
                                                Pexp_ident "st" (middle_end/closure/closure.ml[558,21333+46]..[558,21333+48])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[558,21333+49]..[558,21333+51])
                                                Pexp_ident "sb" (middle_end/closure/closure.ml[558,21333+49]..[558,21333+51])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[558,21333+52]..[558,21333+54])
                                                Pexp_ident "rn" (middle_end/closure/closure.ml[558,21333+52]..[558,21333+54])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[558,21333+56]..[558,21333+60])
                                          Pexp_ident "args" (middle_end/closure/closure.ml[558,21333+56]..[558,21333+60])
                                    ]
                                  expression (middle_end/closure/closure.ml[558,21333+62]..[558,21333+65])
                                    Pexp_ident "dbg" (middle_end/closure/closure.ml[558,21333+62]..[558,21333+65])
                                ]
                      <case>
                        pattern (middle_end/closure/closure.ml[559,21400+4]..[559,21400+23])
                          Ppat_construct "Uclosure" (middle_end/closure/closure.ml[559,21400+4]..[559,21400+12])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[559,21400+12]..[559,21400+23])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[559,21400+13]..[559,21400+17])
                                  Ppat_var "defs" (middle_end/closure/closure.ml[559,21400+13]..[559,21400+17])
                                pattern (middle_end/closure/closure.ml[559,21400+19]..[559,21400+22])
                                  Ppat_var "env" (middle_end/closure/closure.ml[559,21400+19]..[559,21400+22])
                              ]
                        expression (middle_end/closure/closure.ml[568,21929+6]..[568,21929+60])
                          Pexp_construct "Uclosure" (middle_end/closure/closure.ml[568,21929+6]..[568,21929+14])
                          Some
                            expression (middle_end/closure/closure.ml[568,21929+14]..[568,21929+60])
                              Pexp_tuple
                              [
                                expression (middle_end/closure/closure.ml[568,21929+15]..[568,21929+19])
                                  Pexp_ident "defs" (middle_end/closure/closure.ml[568,21929+15]..[568,21929+19])
                                expression (middle_end/closure/closure.ml[568,21929+21]..[568,21929+59])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[568,21929+21]..[568,21929+29])
                                    Pexp_ident "List.map" (middle_end/closure/closure.ml[568,21929+21]..[568,21929+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[568,21929+30]..[568,21929+55])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[568,21929+31]..[568,21929+41])
                                          Pexp_ident "substitute" (middle_end/closure/closure.ml[568,21929+31]..[568,21929+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[568,21929+42]..[568,21929+45])
                                              Pexp_ident "loc" (middle_end/closure/closure.ml[568,21929+42]..[568,21929+45])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[568,21929+46]..[568,21929+48])
                                              Pexp_ident "st" (middle_end/closure/closure.ml[568,21929+46]..[568,21929+48])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[568,21929+49]..[568,21929+51])
                                              Pexp_ident "sb" (middle_end/closure/closure.ml[568,21929+49]..[568,21929+51])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[568,21929+52]..[568,21929+54])
                                              Pexp_ident "rn" (middle_end/closure/closure.ml[568,21929+52]..[568,21929+54])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[568,21929+56]..[568,21929+59])
                                        Pexp_ident "env" (middle_end/closure/closure.ml[568,21929+56]..[568,21929+59])
                                  ]
                              ]
                      <case>
                        pattern (middle_end/closure/closure.ml[569,21990+4]..[569,21990+19])
                          Ppat_construct "Uoffset" (middle_end/closure/closure.ml[569,21990+4]..[569,21990+11])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[569,21990+11]..[569,21990+19])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[569,21990+12]..[569,21990+13])
                                  Ppat_var "u" (middle_end/closure/closure.ml[569,21990+12]..[569,21990+13])
                                pattern (middle_end/closure/closure.ml[569,21990+15]..[569,21990+18])
                                  Ppat_var "ofs" (middle_end/closure/closure.ml[569,21990+15]..[569,21990+18])
                              ]
                        expression (middle_end/closure/closure.ml[569,21990+23]..[569,21990+62])
                          Pexp_construct "Uoffset" (middle_end/closure/closure.ml[569,21990+23]..[569,21990+30])
                          Some
                            expression (middle_end/closure/closure.ml[569,21990+30]..[569,21990+62])
                              Pexp_tuple
                              [
                                expression (middle_end/closure/closure.ml[569,21990+31]..[569,21990+56])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[569,21990+31]..[569,21990+41])
                                    Pexp_ident "substitute" (middle_end/closure/closure.ml[569,21990+31]..[569,21990+41])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[569,21990+42]..[569,21990+45])
                                        Pexp_ident "loc" (middle_end/closure/closure.ml[569,21990+42]..[569,21990+45])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[569,21990+46]..[569,21990+48])
                                        Pexp_ident "st" (middle_end/closure/closure.ml[569,21990+46]..[569,21990+48])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[569,21990+49]..[569,21990+51])
                                        Pexp_ident "sb" (middle_end/closure/closure.ml[569,21990+49]..[569,21990+51])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[569,21990+52]..[569,21990+54])
                                        Pexp_ident "rn" (middle_end/closure/closure.ml[569,21990+52]..[569,21990+54])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[569,21990+55]..[569,21990+56])
                                        Pexp_ident "u" (middle_end/closure/closure.ml[569,21990+55]..[569,21990+56])
                                  ]
                                expression (middle_end/closure/closure.ml[569,21990+58]..[569,21990+61])
                                  Pexp_ident "ofs" (middle_end/closure/closure.ml[569,21990+58]..[569,21990+61])
                              ]
                      <case>
                        pattern (middle_end/closure/closure.ml[570,22053+4]..[570,22053+31])
                          Ppat_construct "Ulet" (middle_end/closure/closure.ml[570,22053+4]..[570,22053+8])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[570,22053+8]..[570,22053+31])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[570,22053+9]..[570,22053+12])
                                  Ppat_var "str" (middle_end/closure/closure.ml[570,22053+9]..[570,22053+12])
                                pattern (middle_end/closure/closure.ml[570,22053+14]..[570,22053+18])
                                  Ppat_var "kind" (middle_end/closure/closure.ml[570,22053+14]..[570,22053+18])
                                pattern (middle_end/closure/closure.ml[570,22053+20]..[570,22053+22])
                                  Ppat_var "id" (middle_end/closure/closure.ml[570,22053+20]..[570,22053+22])
                                pattern (middle_end/closure/closure.ml[570,22053+24]..[570,22053+26])
                                  Ppat_var "u1" (middle_end/closure/closure.ml[570,22053+24]..[570,22053+26])
                                pattern (middle_end/closure/closure.ml[570,22053+28]..[570,22053+30])
                                  Ppat_var "u2" (middle_end/closure/closure.ml[570,22053+28]..[570,22053+30])
                              ]
                        expression (middle_end/closure/closure.ml[571,22088+6]..[574,22204+66])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[571,22088+10]..[571,22088+13])
                                Ppat_var "id'" (middle_end/closure/closure.ml[571,22088+10]..[571,22088+13])
                              expression (middle_end/closure/closure.ml[571,22088+16]..[571,22088+28])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[571,22088+16]..[571,22088+25])
                                  Pexp_ident "VP.rename" (middle_end/closure/closure.ml[571,22088+16]..[571,22088+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[571,22088+26]..[571,22088+28])
                                      Pexp_ident "id" (middle_end/closure/closure.ml[571,22088+26]..[571,22088+28])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[572,22120+6]..[574,22204+66])
                            Pexp_construct "Ulet" (middle_end/closure/closure.ml[572,22120+6]..[572,22120+10])
                            Some
                              expression (middle_end/closure/closure.ml[572,22120+10]..[574,22204+66])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[572,22120+11]..[572,22120+14])
                                    Pexp_ident "str" (middle_end/closure/closure.ml[572,22120+11]..[572,22120+14])
                                  expression (middle_end/closure/closure.ml[572,22120+16]..[572,22120+20])
                                    Pexp_ident "kind" (middle_end/closure/closure.ml[572,22120+16]..[572,22120+20])
                                  expression (middle_end/closure/closure.ml[572,22120+22]..[572,22120+25])
                                    Pexp_ident "id'" (middle_end/closure/closure.ml[572,22120+22]..[572,22120+25])
                                  expression (middle_end/closure/closure.ml[572,22120+27]..[572,22120+53])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[572,22120+27]..[572,22120+37])
                                      Pexp_ident "substitute" (middle_end/closure/closure.ml[572,22120+27]..[572,22120+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[572,22120+38]..[572,22120+41])
                                          Pexp_ident "loc" (middle_end/closure/closure.ml[572,22120+38]..[572,22120+41])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[572,22120+42]..[572,22120+44])
                                          Pexp_ident "st" (middle_end/closure/closure.ml[572,22120+42]..[572,22120+44])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[572,22120+45]..[572,22120+47])
                                          Pexp_ident "sb" (middle_end/closure/closure.ml[572,22120+45]..[572,22120+47])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[572,22120+48]..[572,22120+50])
                                          Pexp_ident "rn" (middle_end/closure/closure.ml[572,22120+48]..[572,22120+50])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[572,22120+51]..[572,22120+53])
                                          Pexp_ident "u1" (middle_end/closure/closure.ml[572,22120+51]..[572,22120+53])
                                    ]
                                  expression (middle_end/closure/closure.ml[573,22175+11]..[574,22204+65])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[573,22175+11]..[573,22175+21])
                                      Pexp_ident "substitute" (middle_end/closure/closure.ml[573,22175+11]..[573,22175+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[573,22175+22]..[573,22175+25])
                                          Pexp_ident "loc" (middle_end/closure/closure.ml[573,22175+22]..[573,22175+25])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[573,22175+26]..[573,22175+28])
                                          Pexp_ident "st" (middle_end/closure/closure.ml[573,22175+26]..[573,22175+28])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[574,22204+13]..[574,22204+59])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[574,22204+14]..[574,22204+23])
                                            Pexp_ident "V.Map.add" (middle_end/closure/closure.ml[574,22204+14]..[574,22204+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[574,22204+24]..[574,22204+35])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[574,22204+25]..[574,22204+31])
                                                  Pexp_ident "VP.var" (middle_end/closure/closure.ml[574,22204+25]..[574,22204+31])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[574,22204+32]..[574,22204+34])
                                                      Pexp_ident "id" (middle_end/closure/closure.ml[574,22204+32]..[574,22204+34])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[574,22204+36]..[574,22204+55])
                                                Pexp_construct "Uvar" (middle_end/closure/closure.ml[574,22204+37]..[574,22204+41])
                                                Some
                                                  expression (middle_end/closure/closure.ml[574,22204+42]..[574,22204+54])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[574,22204+43]..[574,22204+49])
                                                      Pexp_ident "VP.var" (middle_end/closure/closure.ml[574,22204+43]..[574,22204+49])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[574,22204+50]..[574,22204+53])
                                                          Pexp_ident "id'" (middle_end/closure/closure.ml[574,22204+50]..[574,22204+53])
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[574,22204+56]..[574,22204+58])
                                                Pexp_ident "sb" (middle_end/closure/closure.ml[574,22204+56]..[574,22204+58])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[574,22204+60]..[574,22204+62])
                                          Pexp_ident "rn" (middle_end/closure/closure.ml[574,22204+60]..[574,22204+62])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[574,22204+63]..[574,22204+65])
                                          Pexp_ident "u2" (middle_end/closure/closure.ml[574,22204+63]..[574,22204+65])
                                    ]
                                ]
                      <case>
                        pattern (middle_end/closure/closure.ml[575,22271+4]..[575,22271+18])
                          Ppat_construct "Uphantom_let" (middle_end/closure/closure.ml[575,22271+4]..[575,22271+16])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[575,22271+17]..[575,22271+18])
                              Ppat_any
                        expression (middle_end/closure/closure.ml[575,22271+22]..[575,22271+40])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[575,22271+22]..[575,22271+37])
                            Pexp_ident "no_phantom_lets" (middle_end/closure/closure.ml[575,22271+22]..[575,22271+37])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[575,22271+38]..[575,22271+40])
                                Pexp_construct "()" (middle_end/closure/closure.ml[575,22271+38]..[575,22271+40])
                                None
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[576,22312+4]..[576,22312+27])
                          Ppat_construct "Uletrec" (middle_end/closure/closure.ml[576,22312+4]..[576,22312+11])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[576,22312+11]..[576,22312+27])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[576,22312+12]..[576,22312+20])
                                  Ppat_var "bindings" (middle_end/closure/closure.ml[576,22312+12]..[576,22312+20])
                                pattern (middle_end/closure/closure.ml[576,22312+22]..[576,22312+26])
                                  Ppat_var "body" (middle_end/closure/closure.ml[576,22312+22]..[576,22312+26])
                              ]
                        expression (middle_end/closure/closure.ml[577,22343+6]..[590,22729+38])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[577,22343+10]..[577,22343+19])
                                Ppat_var "bindings1" (middle_end/closure/closure.ml[577,22343+10]..[577,22343+19])
                              expression (middle_end/closure/closure.ml[578,22365+8]..[579,22400+50])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[578,22365+8]..[578,22365+16])
                                  Pexp_ident "List.map" (middle_end/closure/closure.ml[578,22365+8]..[578,22365+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[578,22365+17]..[579,22400+41])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/closure/closure.ml[578,22365+22]..[578,22365+31])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/closure/closure.ml[578,22365+23]..[578,22365+25])
                                            Ppat_var "id" (middle_end/closure/closure.ml[578,22365+23]..[578,22365+25])
                                          pattern (middle_end/closure/closure.ml[578,22365+27]..[578,22365+30])
                                            Ppat_var "rhs" (middle_end/closure/closure.ml[578,22365+27]..[578,22365+30])
                                        ]
                                      expression (middle_end/closure/closure.ml[579,22400+10]..[579,22400+40])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/closure/closure.ml[579,22400+11]..[579,22400+20])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[579,22400+11]..[579,22400+17])
                                              Pexp_ident "VP.var" (middle_end/closure/closure.ml[579,22400+11]..[579,22400+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[579,22400+18]..[579,22400+20])
                                                  Pexp_ident "id" (middle_end/closure/closure.ml[579,22400+18]..[579,22400+20])
                                            ]
                                          expression (middle_end/closure/closure.ml[579,22400+22]..[579,22400+34])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[579,22400+22]..[579,22400+31])
                                              Pexp_ident "VP.rename" (middle_end/closure/closure.ml[579,22400+22]..[579,22400+31])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[579,22400+32]..[579,22400+34])
                                                  Pexp_ident "id" (middle_end/closure/closure.ml[579,22400+32]..[579,22400+34])
                                            ]
                                          expression (middle_end/closure/closure.ml[579,22400+36]..[579,22400+39])
                                            Pexp_ident "rhs" (middle_end/closure/closure.ml[579,22400+36]..[579,22400+39])
                                        ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[579,22400+42]..[579,22400+50])
                                      Pexp_ident "bindings" (middle_end/closure/closure.ml[579,22400+42]..[579,22400+50])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[581,22460+6]..[590,22729+38])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/closure/closure.ml[581,22460+10]..[581,22460+13])
                                  Ppat_var "sb'" (middle_end/closure/closure.ml[581,22460+10]..[581,22460+13])
                                expression (middle_end/closure/closure.ml[582,22476+8]..[584,22571+22])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[582,22476+8]..[582,22476+23])
                                    Pexp_ident "List.fold_right" (middle_end/closure/closure.ml[582,22476+8]..[582,22476+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[582,22476+24]..[583,22523+47])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/closure/closure.ml[582,22476+29]..[582,22476+41])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[582,22476+30]..[582,22476+32])
                                              Ppat_var "id" (middle_end/closure/closure.ml[582,22476+30]..[582,22476+32])
                                            pattern (middle_end/closure/closure.ml[582,22476+34]..[582,22476+37])
                                              Ppat_var "id'" (middle_end/closure/closure.ml[582,22476+34]..[582,22476+37])
                                            pattern (middle_end/closure/closure.ml[582,22476+39]..[582,22476+40])
                                              Ppat_any
                                          ]
                                        expression (middle_end/closure/closure.ml[582,22476+42]..[583,22523+46]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/closure/closure.ml[582,22476+42]..[582,22476+43])
                                            Ppat_var "s" (middle_end/closure/closure.ml[582,22476+42]..[582,22476+43])
                                          expression (middle_end/closure/closure.ml[583,22523+12]..[583,22523+46])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[583,22523+12]..[583,22523+21])
                                              Pexp_ident "V.Map.add" (middle_end/closure/closure.ml[583,22523+12]..[583,22523+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[583,22523+22]..[583,22523+24])
                                                  Pexp_ident "id" (middle_end/closure/closure.ml[583,22523+22]..[583,22523+24])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[583,22523+25]..[583,22523+44])
                                                  Pexp_construct "Uvar" (middle_end/closure/closure.ml[583,22523+26]..[583,22523+30])
                                                  Some
                                                    expression (middle_end/closure/closure.ml[583,22523+31]..[583,22523+43])
                                                      Pexp_apply
                                                      expression (middle_end/closure/closure.ml[583,22523+32]..[583,22523+38])
                                                        Pexp_ident "VP.var" (middle_end/closure/closure.ml[583,22523+32]..[583,22523+38])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/closure/closure.ml[583,22523+39]..[583,22523+42])
                                                            Pexp_ident "id'" (middle_end/closure/closure.ml[583,22523+39]..[583,22523+42])
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[583,22523+45]..[583,22523+46])
                                                  Pexp_ident "s" (middle_end/closure/closure.ml[583,22523+45]..[583,22523+46])
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[584,22571+10]..[584,22571+19])
                                        Pexp_ident "bindings1" (middle_end/closure/closure.ml[584,22571+10]..[584,22571+19])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[584,22571+20]..[584,22571+22])
                                        Pexp_ident "sb" (middle_end/closure/closure.ml[584,22571+20]..[584,22571+22])
                                  ]
                            ]
                            expression (middle_end/closure/closure.ml[586,22603+6]..[590,22729+38])
                              Pexp_construct "Uletrec" (middle_end/closure/closure.ml[586,22603+6]..[586,22603+13])
                              Some
                                expression (middle_end/closure/closure.ml[586,22603+13]..[590,22729+38])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/closure/closure.ml[587,22618+8]..[589,22707+20])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[587,22618+8]..[587,22618+16])
                                        Pexp_ident "List.map" (middle_end/closure/closure.ml[587,22618+8]..[587,22618+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[588,22635+11]..[588,22635+71])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/closure/closure.ml[588,22635+16]..[588,22635+31])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/closure/closure.ml[588,22635+17]..[588,22635+20])
                                                  Ppat_var "_id" (middle_end/closure/closure.ml[588,22635+17]..[588,22635+20])
                                                pattern (middle_end/closure/closure.ml[588,22635+22]..[588,22635+25])
                                                  Ppat_var "id'" (middle_end/closure/closure.ml[588,22635+22]..[588,22635+25])
                                                pattern (middle_end/closure/closure.ml[588,22635+27]..[588,22635+30])
                                                  Ppat_var "rhs" (middle_end/closure/closure.ml[588,22635+27]..[588,22635+30])
                                              ]
                                            expression (middle_end/closure/closure.ml[588,22635+35]..[588,22635+70])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/closure/closure.ml[588,22635+36]..[588,22635+39])
                                                  Pexp_ident "id'" (middle_end/closure/closure.ml[588,22635+36]..[588,22635+39])
                                                expression (middle_end/closure/closure.ml[588,22635+41]..[588,22635+69])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[588,22635+41]..[588,22635+51])
                                                    Pexp_ident "substitute" (middle_end/closure/closure.ml[588,22635+41]..[588,22635+51])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[588,22635+52]..[588,22635+55])
                                                        Pexp_ident "loc" (middle_end/closure/closure.ml[588,22635+52]..[588,22635+55])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[588,22635+56]..[588,22635+58])
                                                        Pexp_ident "st" (middle_end/closure/closure.ml[588,22635+56]..[588,22635+58])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[588,22635+59]..[588,22635+62])
                                                        Pexp_ident "sb'" (middle_end/closure/closure.ml[588,22635+59]..[588,22635+62])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[588,22635+63]..[588,22635+65])
                                                        Pexp_ident "rn" (middle_end/closure/closure.ml[588,22635+63]..[588,22635+65])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[588,22635+66]..[588,22635+69])
                                                        Pexp_ident "rhs" (middle_end/closure/closure.ml[588,22635+66]..[588,22635+69])
                                                  ]
                                              ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[589,22707+11]..[589,22707+20])
                                            Pexp_ident "bindings1" (middle_end/closure/closure.ml[589,22707+11]..[589,22707+20])
                                      ]
                                    expression (middle_end/closure/closure.ml[590,22729+8]..[590,22729+37])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[590,22729+8]..[590,22729+18])
                                        Pexp_ident "substitute" (middle_end/closure/closure.ml[590,22729+8]..[590,22729+18])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[590,22729+19]..[590,22729+22])
                                            Pexp_ident "loc" (middle_end/closure/closure.ml[590,22729+19]..[590,22729+22])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[590,22729+23]..[590,22729+25])
                                            Pexp_ident "st" (middle_end/closure/closure.ml[590,22729+23]..[590,22729+25])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[590,22729+26]..[590,22729+29])
                                            Pexp_ident "sb'" (middle_end/closure/closure.ml[590,22729+26]..[590,22729+29])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[590,22729+30]..[590,22729+32])
                                            Pexp_ident "rn" (middle_end/closure/closure.ml[590,22729+30]..[590,22729+32])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[590,22729+33]..[590,22729+37])
                                            Pexp_ident "body" (middle_end/closure/closure.ml[590,22729+33]..[590,22729+37])
                                      ]
                                  ]
                      <case>
                        pattern (middle_end/closure/closure.ml[591,22768+4]..[591,22768+23])
                          Ppat_construct "Uprim" (middle_end/closure/closure.ml[591,22768+4]..[591,22768+9])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[591,22768+9]..[591,22768+23])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[591,22768+10]..[591,22768+11])
                                  Ppat_var "p" (middle_end/closure/closure.ml[591,22768+10]..[591,22768+11])
                                pattern (middle_end/closure/closure.ml[591,22768+13]..[591,22768+17])
                                  Ppat_var "args" (middle_end/closure/closure.ml[591,22768+13]..[591,22768+17])
                                pattern (middle_end/closure/closure.ml[591,22768+19]..[591,22768+22])
                                  Ppat_var "dbg" (middle_end/closure/closure.ml[591,22768+19]..[591,22768+22])
                              ]
                        expression (middle_end/closure/closure.ml[592,22795+6]..[596,22999+9])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[592,22795+10]..[592,22795+15])
                                Ppat_var "sargs" (middle_end/closure/closure.ml[592,22795+10]..[592,22795+15])
                              expression (middle_end/closure/closure.ml[592,22795+18]..[592,22795+57])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[592,22795+18]..[592,22795+26])
                                  Pexp_ident "List.map" (middle_end/closure/closure.ml[592,22795+18]..[592,22795+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[592,22795+27]..[592,22795+52])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[592,22795+28]..[592,22795+38])
                                        Pexp_ident "substitute" (middle_end/closure/closure.ml[592,22795+28]..[592,22795+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[592,22795+39]..[592,22795+42])
                                            Pexp_ident "loc" (middle_end/closure/closure.ml[592,22795+39]..[592,22795+42])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[592,22795+43]..[592,22795+45])
                                            Pexp_ident "st" (middle_end/closure/closure.ml[592,22795+43]..[592,22795+45])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[592,22795+46]..[592,22795+48])
                                            Pexp_ident "sb" (middle_end/closure/closure.ml[592,22795+46]..[592,22795+48])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[592,22795+49]..[592,22795+51])
                                            Pexp_ident "rn" (middle_end/closure/closure.ml[592,22795+49]..[592,22795+51])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[592,22795+53]..[592,22795+57])
                                      Pexp_ident "args" (middle_end/closure/closure.ml[592,22795+53]..[592,22795+57])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[593,22856+6]..[596,22999+9])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/closure/closure.ml[593,22856+10]..[593,22856+13])
                                  Ppat_var "dbg" (middle_end/closure/closure.ml[593,22856+10]..[593,22856+13])
                                expression (middle_end/closure/closure.ml[593,22856+16]..[593,22856+39])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[593,22856+16]..[593,22856+31])
                                    Pexp_ident "subst_debuginfo" (middle_end/closure/closure.ml[593,22856+16]..[593,22856+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[593,22856+32]..[593,22856+35])
                                        Pexp_ident "loc" (middle_end/closure/closure.ml[593,22856+32]..[593,22856+35])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[593,22856+36]..[593,22856+39])
                                        Pexp_ident "dbg" (middle_end/closure/closure.ml[593,22856+36]..[593,22856+39])
                                  ]
                            ]
                            expression (middle_end/closure/closure.ml[594,22899+6]..[596,22999+9])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/closure/closure.ml[594,22899+10]..[594,22899+18])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[594,22899+11]..[594,22899+14])
                                        Ppat_var "res" (middle_end/closure/closure.ml[594,22899+11]..[594,22899+14])
                                      pattern (middle_end/closure/closure.ml[594,22899+16]..[594,22899+17])
                                        Ppat_any
                                    ]
                                  expression (middle_end/closure/closure.ml[595,22920+8]..[595,22920+75])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[595,22920+8]..[595,22920+20])
                                      Pexp_ident "simplif_prim" (middle_end/closure/closure.ml[595,22920+8]..[595,22920+20])
                                    [
                                      <arg>
                                      Labelled "backend"
                                        expression (middle_end/closure/closure.ml[595,22920+22]..[595,22920+29])
                                          Pexp_ident "backend" (middle_end/closure/closure.ml[595,22920+22]..[595,22920+29])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[595,22920+30]..[595,22920+33])
                                          Pexp_ident "fpc" (middle_end/closure/closure.ml[595,22920+30]..[595,22920+33])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[595,22920+34]..[595,22920+35])
                                          Pexp_ident "p" (middle_end/closure/closure.ml[595,22920+34]..[595,22920+35])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[595,22920+36]..[595,22920+71])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/closure/closure.ml[595,22920+37]..[595,22920+42])
                                              Pexp_ident "sargs" (middle_end/closure/closure.ml[595,22920+37]..[595,22920+42])
                                            expression (middle_end/closure/closure.ml[595,22920+44]..[595,22920+70])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[595,22920+44]..[595,22920+52])
                                                Pexp_ident "List.map" (middle_end/closure/closure.ml[595,22920+44]..[595,22920+52])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[595,22920+53]..[595,22920+64])
                                                    Pexp_ident "approx_ulam" (middle_end/closure/closure.ml[595,22920+53]..[595,22920+64])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[595,22920+65]..[595,22920+70])
                                                    Pexp_ident "sargs" (middle_end/closure/closure.ml[595,22920+65]..[595,22920+70])
                                              ]
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[595,22920+72]..[595,22920+75])
                                          Pexp_ident "dbg" (middle_end/closure/closure.ml[595,22920+72]..[595,22920+75])
                                    ]
                              ]
                              expression (middle_end/closure/closure.ml[596,22999+6]..[596,22999+9])
                                Pexp_ident "res" (middle_end/closure/closure.ml[596,22999+6]..[596,22999+9])
                      <case>
                        pattern (middle_end/closure/closure.ml[597,23009+4]..[597,23009+25])
                          Ppat_construct "Uswitch" (middle_end/closure/closure.ml[597,23009+4]..[597,23009+11])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[597,23009+11]..[597,23009+25])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[597,23009+12]..[597,23009+15])
                                  Ppat_var "arg" (middle_end/closure/closure.ml[597,23009+12]..[597,23009+15])
                                pattern (middle_end/closure/closure.ml[597,23009+17]..[597,23009+19])
                                  Ppat_var "sw" (middle_end/closure/closure.ml[597,23009+17]..[597,23009+19])
                                pattern (middle_end/closure/closure.ml[597,23009+21]..[597,23009+24])
                                  Ppat_var "dbg" (middle_end/closure/closure.ml[597,23009+21]..[597,23009+24])
                              ]
                        expression (middle_end/closure/closure.ml[598,23038+6]..[624,24123+9])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[598,23038+10]..[598,23038+14])
                                Ppat_var "sarg" (middle_end/closure/closure.ml[598,23038+10]..[598,23038+14])
                              expression (middle_end/closure/closure.ml[598,23038+17]..[598,23038+44])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[598,23038+17]..[598,23038+27])
                                  Pexp_ident "substitute" (middle_end/closure/closure.ml[598,23038+17]..[598,23038+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[598,23038+28]..[598,23038+31])
                                      Pexp_ident "loc" (middle_end/closure/closure.ml[598,23038+28]..[598,23038+31])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[598,23038+32]..[598,23038+34])
                                      Pexp_ident "st" (middle_end/closure/closure.ml[598,23038+32]..[598,23038+34])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[598,23038+35]..[598,23038+37])
                                      Pexp_ident "sb" (middle_end/closure/closure.ml[598,23038+35]..[598,23038+37])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[598,23038+38]..[598,23038+40])
                                      Pexp_ident "rn" (middle_end/closure/closure.ml[598,23038+38]..[598,23038+40])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[598,23038+41]..[598,23038+44])
                                      Pexp_ident "arg" (middle_end/closure/closure.ml[598,23038+41]..[598,23038+44])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[599,23086+6]..[624,24123+9])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/closure/closure.ml[599,23086+10]..[599,23086+16])
                                  Ppat_var "action" (middle_end/closure/closure.ml[599,23086+10]..[599,23086+16])
                                expression (middle_end/closure/closure.ml[606,23403+8]..[611,23668+19])
                                  Pexp_match
                                  expression (middle_end/closure/closure.ml[606,23403+14]..[606,23403+18])
                                    Pexp_ident "sarg" (middle_end/closure/closure.ml[606,23403+14]..[606,23403+18])
                                  [
                                    <case>
                                      pattern (middle_end/closure/closure.ml[607,23427+10]..[607,23427+64])
                                        Ppat_construct "Uconst" (middle_end/closure/closure.ml[607,23427+10]..[607,23427+16])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[607,23427+17]..[607,23427+64])
                                            Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[607,23427+18]..[607,23427+28])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[607,23427+29]..[607,23427+63])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/closure/closure.ml[607,23427+30]..[607,23427+31])
                                                    Ppat_any
                                                  pattern (middle_end/closure/closure.ml[607,23427+34]..[607,23427+62])
                                                    Ppat_construct "Some" (middle_end/closure/closure.ml[607,23427+34]..[607,23427+38])
                                                    Some
                                                      []
                                                      pattern (middle_end/closure/closure.ml[607,23427+39]..[607,23427+62])
                                                        Ppat_construct "Uconst_block" (middle_end/closure/closure.ml[607,23427+40]..[607,23427+52])
                                                        Some
                                                          []
                                                          pattern (middle_end/closure/closure.ml[607,23427+53]..[607,23427+61])
                                                            Ppat_tuple
                                                            [
                                                              pattern (middle_end/closure/closure.ml[607,23427+54]..[607,23427+57])
                                                                Ppat_var "tag" (middle_end/closure/closure.ml[607,23427+54]..[607,23427+57])
                                                              pattern (middle_end/closure/closure.ml[607,23427+59]..[607,23427+60])
                                                                Ppat_any
                                                            ]
                                                ]
                                      expression (middle_end/closure/closure.ml[608,23495+12]..[608,23495+67])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[608,23495+12]..[608,23495+23])
                                          Pexp_ident "find_action" (middle_end/closure/closure.ml[608,23495+12]..[608,23495+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[608,23495+24]..[608,23495+42])
                                              Pexp_field
                                              expression (middle_end/closure/closure.ml[608,23495+24]..[608,23495+26])
                                                Pexp_ident "sw" (middle_end/closure/closure.ml[608,23495+24]..[608,23495+26])
                                              "us_index_blocks" (middle_end/closure/closure.ml[608,23495+27]..[608,23495+42])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[608,23495+43]..[608,23495+63])
                                              Pexp_field
                                              expression (middle_end/closure/closure.ml[608,23495+43]..[608,23495+45])
                                                Pexp_ident "sw" (middle_end/closure/closure.ml[608,23495+43]..[608,23495+45])
                                              "us_actions_blocks" (middle_end/closure/closure.ml[608,23495+46]..[608,23495+63])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[608,23495+64]..[608,23495+67])
                                              Pexp_ident "tag" (middle_end/closure/closure.ml[608,23495+64]..[608,23495+67])
                                        ]
                                    <case>
                                      pattern (middle_end/closure/closure.ml[609,23563+10]..[609,23563+33])
                                        Ppat_construct "Uconst" (middle_end/closure/closure.ml[609,23563+10]..[609,23563+16])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[609,23563+17]..[609,23563+33])
                                            Ppat_construct "Uconst_int" (middle_end/closure/closure.ml[609,23563+18]..[609,23563+28])
                                            Some
                                              []
                                              pattern (middle_end/closure/closure.ml[609,23563+29]..[609,23563+32])
                                                Ppat_var "tag" (middle_end/closure/closure.ml[609,23563+29]..[609,23563+32])
                                      expression (middle_end/closure/closure.ml[610,23600+12]..[610,23600+67])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[610,23600+12]..[610,23600+23])
                                          Pexp_ident "find_action" (middle_end/closure/closure.ml[610,23600+12]..[610,23600+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[610,23600+24]..[610,23600+42])
                                              Pexp_field
                                              expression (middle_end/closure/closure.ml[610,23600+24]..[610,23600+26])
                                                Pexp_ident "sw" (middle_end/closure/closure.ml[610,23600+24]..[610,23600+26])
                                              "us_index_consts" (middle_end/closure/closure.ml[610,23600+27]..[610,23600+42])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[610,23600+43]..[610,23600+63])
                                              Pexp_field
                                              expression (middle_end/closure/closure.ml[610,23600+43]..[610,23600+45])
                                                Pexp_ident "sw" (middle_end/closure/closure.ml[610,23600+43]..[610,23600+45])
                                              "us_actions_consts" (middle_end/closure/closure.ml[610,23600+46]..[610,23600+63])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[610,23600+64]..[610,23600+67])
                                              Pexp_ident "tag" (middle_end/closure/closure.ml[610,23600+64]..[610,23600+67])
                                        ]
                                    <case>
                                      pattern (middle_end/closure/closure.ml[611,23668+10]..[611,23668+11])
                                        Ppat_any
                                      expression (middle_end/closure/closure.ml[611,23668+15]..[611,23668+19])
                                        Pexp_construct "None" (middle_end/closure/closure.ml[611,23668+15]..[611,23668+19])
                                        None
                                  ]
                            ]
                            expression (middle_end/closure/closure.ml[613,23697+6]..[624,24123+9])
                              Pexp_match
                              expression (middle_end/closure/closure.ml[613,23697+18]..[613,23697+24])
                                Pexp_ident "action" (middle_end/closure/closure.ml[613,23697+18]..[613,23697+24])
                              [
                                <case>
                                  pattern (middle_end/closure/closure.ml[614,23727+8]..[614,23727+14])
                                    Ppat_construct "Some" (middle_end/closure/closure.ml[614,23727+8]..[614,23727+12])
                                    Some
                                      []
                                      pattern (middle_end/closure/closure.ml[614,23727+13]..[614,23727+14])
                                        Ppat_var "u" (middle_end/closure/closure.ml[614,23727+13]..[614,23727+14])
                                  expression (middle_end/closure/closure.ml[614,23727+18]..[614,23727+43])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[614,23727+18]..[614,23727+28])
                                      Pexp_ident "substitute" (middle_end/closure/closure.ml[614,23727+18]..[614,23727+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[614,23727+29]..[614,23727+32])
                                          Pexp_ident "loc" (middle_end/closure/closure.ml[614,23727+29]..[614,23727+32])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[614,23727+33]..[614,23727+35])
                                          Pexp_ident "st" (middle_end/closure/closure.ml[614,23727+33]..[614,23727+35])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[614,23727+36]..[614,23727+38])
                                          Pexp_ident "sb" (middle_end/closure/closure.ml[614,23727+36]..[614,23727+38])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[614,23727+39]..[614,23727+41])
                                          Pexp_ident "rn" (middle_end/closure/closure.ml[614,23727+39]..[614,23727+41])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[614,23727+42]..[614,23727+43])
                                          Pexp_ident "u" (middle_end/closure/closure.ml[614,23727+42]..[614,23727+43])
                                    ]
                                <case>
                                  pattern (middle_end/closure/closure.ml[615,23771+8]..[615,23771+12])
                                    Ppat_construct "None" (middle_end/closure/closure.ml[615,23771+8]..[615,23771+12])
                                    None
                                  expression (middle_end/closure/closure.ml[616,23787+10]..[623,24100+22])
                                    Pexp_construct "Uswitch" (middle_end/closure/closure.ml[616,23787+10]..[616,23787+17])
                                    Some
                                      expression (middle_end/closure/closure.ml[616,23787+17]..[623,24100+22])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/closure/closure.ml[616,23787+18]..[616,23787+22])
                                            Pexp_ident "sarg" (middle_end/closure/closure.ml[616,23787+18]..[616,23787+22])
                                          expression (middle_end/closure/closure.ml[617,23811+18]..[622,24079+19])
                                            Pexp_record
                                            [
                                              "us_actions_consts" (middle_end/closure/closure.ml[618,23839+20]..[618,23839+37])
                                                expression (middle_end/closure/closure.ml[619,23879+22]..[619,23879+78])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[619,23879+22]..[619,23879+31])
                                                    Pexp_ident "Array.map" (middle_end/closure/closure.ml[619,23879+22]..[619,23879+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[619,23879+32]..[619,23879+57])
                                                        Pexp_apply
                                                        expression (middle_end/closure/closure.ml[619,23879+33]..[619,23879+43])
                                                          Pexp_ident "substitute" (middle_end/closure/closure.ml[619,23879+33]..[619,23879+43])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[619,23879+44]..[619,23879+47])
                                                              Pexp_ident "loc" (middle_end/closure/closure.ml[619,23879+44]..[619,23879+47])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[619,23879+48]..[619,23879+50])
                                                              Pexp_ident "st" (middle_end/closure/closure.ml[619,23879+48]..[619,23879+50])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[619,23879+51]..[619,23879+53])
                                                              Pexp_ident "sb" (middle_end/closure/closure.ml[619,23879+51]..[619,23879+53])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[619,23879+54]..[619,23879+56])
                                                              Pexp_ident "rn" (middle_end/closure/closure.ml[619,23879+54]..[619,23879+56])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[619,23879+58]..[619,23879+78])
                                                        Pexp_field
                                                        expression (middle_end/closure/closure.ml[619,23879+58]..[619,23879+60])
                                                          Pexp_ident "sw" (middle_end/closure/closure.ml[619,23879+58]..[619,23879+60])
                                                        "us_actions_consts" (middle_end/closure/closure.ml[619,23879+61]..[619,23879+78])
                                                  ]
                                              "us_actions_blocks" (middle_end/closure/closure.ml[620,23959+20]..[620,23959+37])
                                                expression (middle_end/closure/closure.ml[621,23999+22]..[621,23999+78])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[621,23999+22]..[621,23999+31])
                                                    Pexp_ident "Array.map" (middle_end/closure/closure.ml[621,23999+22]..[621,23999+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[621,23999+32]..[621,23999+57])
                                                        Pexp_apply
                                                        expression (middle_end/closure/closure.ml[621,23999+33]..[621,23999+43])
                                                          Pexp_ident "substitute" (middle_end/closure/closure.ml[621,23999+33]..[621,23999+43])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[621,23999+44]..[621,23999+47])
                                                              Pexp_ident "loc" (middle_end/closure/closure.ml[621,23999+44]..[621,23999+47])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[621,23999+48]..[621,23999+50])
                                                              Pexp_ident "st" (middle_end/closure/closure.ml[621,23999+48]..[621,23999+50])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[621,23999+51]..[621,23999+53])
                                                              Pexp_ident "sb" (middle_end/closure/closure.ml[621,23999+51]..[621,23999+53])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[621,23999+54]..[621,23999+56])
                                                              Pexp_ident "rn" (middle_end/closure/closure.ml[621,23999+54]..[621,23999+56])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[621,23999+58]..[621,23999+78])
                                                        Pexp_field
                                                        expression (middle_end/closure/closure.ml[621,23999+58]..[621,23999+60])
                                                          Pexp_ident "sw" (middle_end/closure/closure.ml[621,23999+58]..[621,23999+60])
                                                        "us_actions_blocks" (middle_end/closure/closure.ml[621,23999+61]..[621,23999+78])
                                                  ]
                                            ]
                                            Some
                                              expression (middle_end/closure/closure.ml[617,23811+20]..[617,23811+22])
                                                Pexp_ident "sw" (middle_end/closure/closure.ml[617,23811+20]..[617,23811+22])
                                          expression (middle_end/closure/closure.ml[623,24100+18]..[623,24100+21])
                                            Pexp_ident "dbg" (middle_end/closure/closure.ml[623,24100+18]..[623,24100+21])
                                        ]
                              ]
                      <case>
                        pattern (middle_end/closure/closure.ml[625,24133+4]..[625,24133+27])
                          Ppat_construct "Ustringswitch" (middle_end/closure/closure.ml[625,24133+4]..[625,24133+17])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[625,24133+17]..[625,24133+27])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[625,24133+18]..[625,24133+21])
                                  Ppat_var "arg" (middle_end/closure/closure.ml[625,24133+18]..[625,24133+21])
                                pattern (middle_end/closure/closure.ml[625,24133+22]..[625,24133+24])
                                  Ppat_var "sw" (middle_end/closure/closure.ml[625,24133+22]..[625,24133+24])
                                pattern (middle_end/closure/closure.ml[625,24133+25]..[625,24133+26])
                                  Ppat_var "d" (middle_end/closure/closure.ml[625,24133+25]..[625,24133+26])
                              ]
                        expression (middle_end/closure/closure.ml[626,24164+6]..[629,24291+48])
                          Pexp_construct "Ustringswitch" (middle_end/closure/closure.ml[626,24164+6]..[626,24164+19])
                          Some
                            expression (middle_end/closure/closure.ml[627,24184+8]..[629,24291+48])
                              Pexp_tuple
                              [
                                expression (middle_end/closure/closure.ml[627,24184+9]..[627,24184+36])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[627,24184+9]..[627,24184+19])
                                    Pexp_ident "substitute" (middle_end/closure/closure.ml[627,24184+9]..[627,24184+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[627,24184+20]..[627,24184+23])
                                        Pexp_ident "loc" (middle_end/closure/closure.ml[627,24184+20]..[627,24184+23])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[627,24184+24]..[627,24184+26])
                                        Pexp_ident "st" (middle_end/closure/closure.ml[627,24184+24]..[627,24184+26])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[627,24184+27]..[627,24184+29])
                                        Pexp_ident "sb" (middle_end/closure/closure.ml[627,24184+27]..[627,24184+29])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[627,24184+30]..[627,24184+32])
                                        Pexp_ident "rn" (middle_end/closure/closure.ml[627,24184+30]..[627,24184+32])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[627,24184+33]..[627,24184+36])
                                        Pexp_ident "arg" (middle_end/closure/closure.ml[627,24184+33]..[627,24184+36])
                                  ]
                                expression (middle_end/closure/closure.ml[628,24222+9]..[628,24222+67])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[628,24222+9]..[628,24222+17])
                                    Pexp_ident "List.map" (middle_end/closure/closure.ml[628,24222+9]..[628,24222+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[628,24222+18]..[628,24222+64])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/closure/closure.ml[628,24222+23]..[628,24222+30])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[628,24222+24]..[628,24222+25])
                                              Ppat_var "s" (middle_end/closure/closure.ml[628,24222+24]..[628,24222+25])
                                            pattern (middle_end/closure/closure.ml[628,24222+26]..[628,24222+29])
                                              Ppat_var "act" (middle_end/closure/closure.ml[628,24222+26]..[628,24222+29])
                                          ]
                                        expression (middle_end/closure/closure.ml[628,24222+34]..[628,24222+63])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/closure/closure.ml[628,24222+34]..[628,24222+35])
                                              Pexp_ident "s" (middle_end/closure/closure.ml[628,24222+34]..[628,24222+35])
                                            expression (middle_end/closure/closure.ml[628,24222+36]..[628,24222+63])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[628,24222+36]..[628,24222+46])
                                                Pexp_ident "substitute" (middle_end/closure/closure.ml[628,24222+36]..[628,24222+46])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[628,24222+47]..[628,24222+50])
                                                    Pexp_ident "loc" (middle_end/closure/closure.ml[628,24222+47]..[628,24222+50])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[628,24222+51]..[628,24222+53])
                                                    Pexp_ident "st" (middle_end/closure/closure.ml[628,24222+51]..[628,24222+53])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[628,24222+54]..[628,24222+56])
                                                    Pexp_ident "sb" (middle_end/closure/closure.ml[628,24222+54]..[628,24222+56])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[628,24222+57]..[628,24222+59])
                                                    Pexp_ident "rn" (middle_end/closure/closure.ml[628,24222+57]..[628,24222+59])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[628,24222+60]..[628,24222+63])
                                                    Pexp_ident "act" (middle_end/closure/closure.ml[628,24222+60]..[628,24222+63])
                                              ]
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[628,24222+65]..[628,24222+67])
                                        Pexp_ident "sw" (middle_end/closure/closure.ml[628,24222+65]..[628,24222+67])
                                  ]
                                expression (middle_end/closure/closure.ml[629,24291+9]..[629,24291+47])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[629,24291+9]..[629,24291+19])
                                    Pexp_ident "Option.map" (middle_end/closure/closure.ml[629,24291+9]..[629,24291+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[629,24291+20]..[629,24291+45])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[629,24291+21]..[629,24291+31])
                                          Pexp_ident "substitute" (middle_end/closure/closure.ml[629,24291+21]..[629,24291+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[629,24291+32]..[629,24291+35])
                                              Pexp_ident "loc" (middle_end/closure/closure.ml[629,24291+32]..[629,24291+35])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[629,24291+36]..[629,24291+38])
                                              Pexp_ident "st" (middle_end/closure/closure.ml[629,24291+36]..[629,24291+38])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[629,24291+39]..[629,24291+41])
                                              Pexp_ident "sb" (middle_end/closure/closure.ml[629,24291+39]..[629,24291+41])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[629,24291+42]..[629,24291+44])
                                              Pexp_ident "rn" (middle_end/closure/closure.ml[629,24291+42]..[629,24291+44])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[629,24291+46]..[629,24291+47])
                                        Pexp_ident "d" (middle_end/closure/closure.ml[629,24291+46]..[629,24291+47])
                                  ]
                              ]
                      <case>
                        pattern (middle_end/closure/closure.ml[630,24340+4]..[630,24340+29])
                          Ppat_construct "Ustaticfail" (middle_end/closure/closure.ml[630,24340+4]..[630,24340+15])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[630,24340+16]..[630,24340+29])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[630,24340+17]..[630,24340+22])
                                  Ppat_var "nfail" (middle_end/closure/closure.ml[630,24340+17]..[630,24340+22])
                                pattern (middle_end/closure/closure.ml[630,24340+24]..[630,24340+28])
                                  Ppat_var "args" (middle_end/closure/closure.ml[630,24340+24]..[630,24340+28])
                              ]
                        expression (middle_end/closure/closure.ml[631,24373+6]..[640,24629+66])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[631,24373+10]..[631,24373+15])
                                Ppat_var "nfail" (middle_end/closure/closure.ml[631,24373+10]..[631,24373+15])
                              expression (middle_end/closure/closure.ml[632,24391+8]..[639,24602+23])
                                Pexp_match
                                expression (middle_end/closure/closure.ml[632,24391+14]..[632,24391+16])
                                  Pexp_ident "rn" (middle_end/closure/closure.ml[632,24391+14]..[632,24391+16])
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[633,24413+10]..[633,24413+17])
                                      Ppat_construct "Some" (middle_end/closure/closure.ml[633,24413+10]..[633,24413+14])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[633,24413+15]..[633,24413+17])
                                          Ppat_var "rn" (middle_end/closure/closure.ml[633,24413+15]..[633,24413+17])
                                    expression (middle_end/closure/closure.ml[634,24434+10]..[638,24588+13])
                                      Pexp_try
                                      expression (middle_end/closure/closure.ml[635,24454+12]..[635,24454+33])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[635,24454+12]..[635,24454+24])
                                          Pexp_ident "Int.Map.find" (middle_end/closure/closure.ml[635,24454+12]..[635,24454+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[635,24454+25]..[635,24454+30])
                                              Pexp_ident "nfail" (middle_end/closure/closure.ml[635,24454+25]..[635,24454+30])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[635,24454+31]..[635,24454+33])
                                              Pexp_ident "rn" (middle_end/closure/closure.ml[635,24454+31]..[635,24454+33])
                                        ]
                                      [
                                        <case>
                                          pattern (middle_end/closure/closure.ml[636,24488+15]..[636,24488+24])
                                            Ppat_construct "Not_found" (middle_end/closure/closure.ml[636,24488+15]..[636,24488+24])
                                            None
                                          expression (middle_end/closure/closure.ml[637,24516+12]..[637,24516+71])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[637,24516+12]..[637,24516+24])
                                              Pexp_ident "fatal_errorf" (middle_end/closure/closure.ml[637,24516+12]..[637,24516+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[637,24516+25]..[637,24516+65])
                                                  Pexp_constant PConst_string("Closure.split_list: invalid nfail (%d)",(middle_end/closure/closure.ml[637,24516+26]..[637,24516+64]),None)
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[637,24516+66]..[637,24516+71])
                                                  Pexp_ident "nfail" (middle_end/closure/closure.ml[637,24516+66]..[637,24516+71])
                                            ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[639,24602+10]..[639,24602+14])
                                      Ppat_construct "None" (middle_end/closure/closure.ml[639,24602+10]..[639,24602+14])
                                      None
                                    expression (middle_end/closure/closure.ml[639,24602+18]..[639,24602+23])
                                      Pexp_ident "nfail" (middle_end/closure/closure.ml[639,24602+18]..[639,24602+23])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[640,24629+6]..[640,24629+66])
                            Pexp_construct "Ustaticfail" (middle_end/closure/closure.ml[640,24629+6]..[640,24629+17])
                            Some
                              expression (middle_end/closure/closure.ml[640,24629+18]..[640,24629+66])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[640,24629+19]..[640,24629+24])
                                    Pexp_ident "nfail" (middle_end/closure/closure.ml[640,24629+19]..[640,24629+24])
                                  expression (middle_end/closure/closure.ml[640,24629+26]..[640,24629+65])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[640,24629+26]..[640,24629+34])
                                      Pexp_ident "List.map" (middle_end/closure/closure.ml[640,24629+26]..[640,24629+34])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[640,24629+35]..[640,24629+60])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[640,24629+36]..[640,24629+46])
                                            Pexp_ident "substitute" (middle_end/closure/closure.ml[640,24629+36]..[640,24629+46])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[640,24629+47]..[640,24629+50])
                                                Pexp_ident "loc" (middle_end/closure/closure.ml[640,24629+47]..[640,24629+50])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[640,24629+51]..[640,24629+53])
                                                Pexp_ident "st" (middle_end/closure/closure.ml[640,24629+51]..[640,24629+53])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[640,24629+54]..[640,24629+56])
                                                Pexp_ident "sb" (middle_end/closure/closure.ml[640,24629+54]..[640,24629+56])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[640,24629+57]..[640,24629+59])
                                                Pexp_ident "rn" (middle_end/closure/closure.ml[640,24629+57]..[640,24629+59])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[640,24629+61]..[640,24629+65])
                                          Pexp_ident "args" (middle_end/closure/closure.ml[640,24629+61]..[640,24629+65])
                                    ]
                                ]
                      <case>
                        pattern (middle_end/closure/closure.ml[641,24696+4]..[641,24696+30])
                          Ppat_construct "Ucatch" (middle_end/closure/closure.ml[641,24696+4]..[641,24696+10])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[641,24696+10]..[641,24696+30])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[641,24696+11]..[641,24696+16])
                                  Ppat_var "nfail" (middle_end/closure/closure.ml[641,24696+11]..[641,24696+16])
                                pattern (middle_end/closure/closure.ml[641,24696+18]..[641,24696+21])
                                  Ppat_var "ids" (middle_end/closure/closure.ml[641,24696+18]..[641,24696+21])
                                pattern (middle_end/closure/closure.ml[641,24696+23]..[641,24696+25])
                                  Ppat_var "u1" (middle_end/closure/closure.ml[641,24696+23]..[641,24696+25])
                                pattern (middle_end/closure/closure.ml[641,24696+27]..[641,24696+29])
                                  Ppat_var "u2" (middle_end/closure/closure.ml[641,24696+27]..[641,24696+29])
                              ]
                        expression (middle_end/closure/closure.ml[642,24730+6]..[657,25232+54])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[642,24730+10]..[642,24730+19])
                                Ppat_tuple
                                [
                                  pattern (middle_end/closure/closure.ml[642,24730+10]..[642,24730+15])
                                    Ppat_var "nfail" (middle_end/closure/closure.ml[642,24730+10]..[642,24730+15])
                                  pattern (middle_end/closure/closure.ml[642,24730+17]..[642,24730+19])
                                    Ppat_var "rn" (middle_end/closure/closure.ml[642,24730+17]..[642,24730+19])
                                ]
                              expression (middle_end/closure/closure.ml[643,24752+8]..[647,24903+27])
                                Pexp_match
                                expression (middle_end/closure/closure.ml[643,24752+14]..[643,24752+16])
                                  Pexp_ident "rn" (middle_end/closure/closure.ml[643,24752+14]..[643,24752+16])
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[644,24774+10]..[644,24774+17])
                                      Ppat_construct "Some" (middle_end/closure/closure.ml[644,24774+10]..[644,24774+14])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[644,24774+15]..[644,24774+17])
                                          Ppat_var "rn" (middle_end/closure/closure.ml[644,24774+15]..[644,24774+17])
                                    expression (middle_end/closure/closure.ml[645,24795+10]..[646,24844+58])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/closure/closure.ml[645,24795+14]..[645,24795+23])
                                            Ppat_var "new_nfail" (middle_end/closure/closure.ml[645,24795+14]..[645,24795+23])
                                          expression (middle_end/closure/closure.ml[645,24795+26]..[645,24795+45])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[645,24795+26]..[645,24795+42])
                                              Pexp_ident "next_raise_count" (middle_end/closure/closure.ml[645,24795+26]..[645,24795+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[645,24795+43]..[645,24795+45])
                                                  Pexp_construct "()" (middle_end/closure/closure.ml[645,24795+43]..[645,24795+45])
                                                  None
                                            ]
                                      ]
                                      expression (middle_end/closure/closure.ml[646,24844+10]..[646,24844+58])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/closure/closure.ml[646,24844+10]..[646,24844+19])
                                            Pexp_ident "new_nfail" (middle_end/closure/closure.ml[646,24844+10]..[646,24844+19])
                                          expression (middle_end/closure/closure.ml[646,24844+21]..[646,24844+58])
                                            Pexp_construct "Some" (middle_end/closure/closure.ml[646,24844+21]..[646,24844+25])
                                            Some
                                              expression (middle_end/closure/closure.ml[646,24844+26]..[646,24844+58])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[646,24844+27]..[646,24844+38])
                                                  Pexp_ident "Int.Map.add" (middle_end/closure/closure.ml[646,24844+27]..[646,24844+38])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[646,24844+39]..[646,24844+44])
                                                      Pexp_ident "nfail" (middle_end/closure/closure.ml[646,24844+39]..[646,24844+44])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[646,24844+45]..[646,24844+54])
                                                      Pexp_ident "new_nfail" (middle_end/closure/closure.ml[646,24844+45]..[646,24844+54])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[646,24844+55]..[646,24844+57])
                                                      Pexp_ident "rn" (middle_end/closure/closure.ml[646,24844+55]..[646,24844+57])
                                                ]
                                        ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[647,24903+10]..[647,24903+14])
                                      Ppat_construct "None" (middle_end/closure/closure.ml[647,24903+10]..[647,24903+14])
                                      None
                                    expression (middle_end/closure/closure.ml[647,24903+18]..[647,24903+27])
                                      Pexp_tuple
                                      [
                                        expression (middle_end/closure/closure.ml[647,24903+18]..[647,24903+23])
                                          Pexp_ident "nfail" (middle_end/closure/closure.ml[647,24903+18]..[647,24903+23])
                                        expression (middle_end/closure/closure.ml[647,24903+25]..[647,24903+27])
                                          Pexp_ident "rn" (middle_end/closure/closure.ml[647,24903+25]..[647,24903+27])
                                      ]
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[648,24934+6]..[657,25232+54])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/closure/closure.ml[648,24934+10]..[648,24934+14])
                                  Ppat_var "ids'" (middle_end/closure/closure.ml[648,24934+10]..[648,24934+14])
                                expression (middle_end/closure/closure.ml[648,24934+17]..[648,24934+62])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[648,24934+17]..[648,24934+25])
                                    Pexp_ident "List.map" (middle_end/closure/closure.ml[648,24934+17]..[648,24934+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[648,24934+26]..[648,24934+58])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/closure/closure.ml[648,24934+31]..[648,24934+38])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[648,24934+32]..[648,24934+34])
                                              Ppat_var "id" (middle_end/closure/closure.ml[648,24934+32]..[648,24934+34])
                                            pattern (middle_end/closure/closure.ml[648,24934+36]..[648,24934+37])
                                              Ppat_var "k" (middle_end/closure/closure.ml[648,24934+36]..[648,24934+37])
                                          ]
                                        expression (middle_end/closure/closure.ml[648,24934+42]..[648,24934+57])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/closure/closure.ml[648,24934+42]..[648,24934+54])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[648,24934+42]..[648,24934+51])
                                                Pexp_ident "VP.rename" (middle_end/closure/closure.ml[648,24934+42]..[648,24934+51])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[648,24934+52]..[648,24934+54])
                                                    Pexp_ident "id" (middle_end/closure/closure.ml[648,24934+52]..[648,24934+54])
                                              ]
                                            expression (middle_end/closure/closure.ml[648,24934+56]..[648,24934+57])
                                              Pexp_ident "k" (middle_end/closure/closure.ml[648,24934+56]..[648,24934+57])
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[648,24934+59]..[648,24934+62])
                                        Pexp_ident "ids" (middle_end/closure/closure.ml[648,24934+59]..[648,24934+62])
                                  ]
                            ]
                            expression (middle_end/closure/closure.ml[649,25000+6]..[657,25232+54])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/closure/closure.ml[649,25000+10]..[649,25000+13])
                                    Ppat_var "sb'" (middle_end/closure/closure.ml[649,25000+10]..[649,25000+13])
                                  expression (middle_end/closure/closure.ml[650,25016+8]..[654,25147+21])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[650,25016+8]..[650,25016+24])
                                      Pexp_ident "List.fold_right2" (middle_end/closure/closure.ml[650,25016+8]..[650,25016+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[651,25041+10]..[653,25135+11])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/closure/closure.ml[651,25041+15]..[651,25041+22])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[651,25041+16]..[651,25041+18])
                                                Ppat_var "id" (middle_end/closure/closure.ml[651,25041+16]..[651,25041+18])
                                              pattern (middle_end/closure/closure.ml[651,25041+20]..[651,25041+21])
                                                Ppat_any
                                            ]
                                          expression (middle_end/closure/closure.ml[651,25041+23]..[652,25078+56]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/closure/closure.ml[651,25041+23]..[651,25041+31])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/closure/closure.ml[651,25041+24]..[651,25041+27])
                                                  Ppat_var "id'" (middle_end/closure/closure.ml[651,25041+24]..[651,25041+27])
                                                pattern (middle_end/closure/closure.ml[651,25041+29]..[651,25041+30])
                                                  Ppat_any
                                              ]
                                            expression (middle_end/closure/closure.ml[651,25041+32]..[652,25078+56]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/closure/closure.ml[651,25041+32]..[651,25041+33])
                                                Ppat_var "s" (middle_end/closure/closure.ml[651,25041+32]..[651,25041+33])
                                              expression (middle_end/closure/closure.ml[652,25078+13]..[652,25078+56])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[652,25078+13]..[652,25078+22])
                                                  Pexp_ident "V.Map.add" (middle_end/closure/closure.ml[652,25078+13]..[652,25078+22])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[652,25078+23]..[652,25078+34])
                                                      Pexp_apply
                                                      expression (middle_end/closure/closure.ml[652,25078+24]..[652,25078+30])
                                                        Pexp_ident "VP.var" (middle_end/closure/closure.ml[652,25078+24]..[652,25078+30])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/closure/closure.ml[652,25078+31]..[652,25078+33])
                                                            Pexp_ident "id" (middle_end/closure/closure.ml[652,25078+31]..[652,25078+33])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[652,25078+35]..[652,25078+54])
                                                      Pexp_construct "Uvar" (middle_end/closure/closure.ml[652,25078+36]..[652,25078+40])
                                                      Some
                                                        expression (middle_end/closure/closure.ml[652,25078+41]..[652,25078+53])
                                                          Pexp_apply
                                                          expression (middle_end/closure/closure.ml[652,25078+42]..[652,25078+48])
                                                            Pexp_ident "VP.var" (middle_end/closure/closure.ml[652,25078+42]..[652,25078+48])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[652,25078+49]..[652,25078+52])
                                                                Pexp_ident "id'" (middle_end/closure/closure.ml[652,25078+49]..[652,25078+52])
                                                          ]
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[652,25078+55]..[652,25078+56])
                                                      Pexp_ident "s" (middle_end/closure/closure.ml[652,25078+55]..[652,25078+56])
                                                ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[654,25147+10]..[654,25147+13])
                                          Pexp_ident "ids" (middle_end/closure/closure.ml[654,25147+10]..[654,25147+13])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[654,25147+14]..[654,25147+18])
                                          Pexp_ident "ids'" (middle_end/closure/closure.ml[654,25147+14]..[654,25147+18])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[654,25147+19]..[654,25147+21])
                                          Pexp_ident "sb" (middle_end/closure/closure.ml[654,25147+19]..[654,25147+21])
                                    ]
                              ]
                              expression (middle_end/closure/closure.ml[656,25178+6]..[657,25232+54])
                                Pexp_construct "Ucatch" (middle_end/closure/closure.ml[656,25178+6]..[656,25178+12])
                                Some
                                  expression (middle_end/closure/closure.ml[656,25178+12]..[657,25232+54])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/closure/closure.ml[656,25178+13]..[656,25178+18])
                                        Pexp_ident "nfail" (middle_end/closure/closure.ml[656,25178+13]..[656,25178+18])
                                      expression (middle_end/closure/closure.ml[656,25178+20]..[656,25178+24])
                                        Pexp_ident "ids'" (middle_end/closure/closure.ml[656,25178+20]..[656,25178+24])
                                      expression (middle_end/closure/closure.ml[656,25178+26]..[656,25178+52])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[656,25178+26]..[656,25178+36])
                                          Pexp_ident "substitute" (middle_end/closure/closure.ml[656,25178+26]..[656,25178+36])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[656,25178+37]..[656,25178+40])
                                              Pexp_ident "loc" (middle_end/closure/closure.ml[656,25178+37]..[656,25178+40])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[656,25178+41]..[656,25178+43])
                                              Pexp_ident "st" (middle_end/closure/closure.ml[656,25178+41]..[656,25178+43])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[656,25178+44]..[656,25178+46])
                                              Pexp_ident "sb" (middle_end/closure/closure.ml[656,25178+44]..[656,25178+46])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[656,25178+47]..[656,25178+49])
                                              Pexp_ident "rn" (middle_end/closure/closure.ml[656,25178+47]..[656,25178+49])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[656,25178+50]..[656,25178+52])
                                              Pexp_ident "u1" (middle_end/closure/closure.ml[656,25178+50]..[656,25178+52])
                                        ]
                                      expression (middle_end/closure/closure.ml[657,25232+26]..[657,25232+53])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[657,25232+26]..[657,25232+36])
                                          Pexp_ident "substitute" (middle_end/closure/closure.ml[657,25232+26]..[657,25232+36])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[657,25232+37]..[657,25232+40])
                                              Pexp_ident "loc" (middle_end/closure/closure.ml[657,25232+37]..[657,25232+40])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[657,25232+41]..[657,25232+43])
                                              Pexp_ident "st" (middle_end/closure/closure.ml[657,25232+41]..[657,25232+43])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[657,25232+44]..[657,25232+47])
                                              Pexp_ident "sb'" (middle_end/closure/closure.ml[657,25232+44]..[657,25232+47])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[657,25232+48]..[657,25232+50])
                                              Pexp_ident "rn" (middle_end/closure/closure.ml[657,25232+48]..[657,25232+50])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[657,25232+51]..[657,25232+53])
                                              Pexp_ident "u2" (middle_end/closure/closure.ml[657,25232+51]..[657,25232+53])
                                        ]
                                    ]
                      <case>
                        pattern (middle_end/closure/closure.ml[658,25287+4]..[658,25287+24])
                          Ppat_construct "Utrywith" (middle_end/closure/closure.ml[658,25287+4]..[658,25287+12])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[658,25287+12]..[658,25287+24])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[658,25287+13]..[658,25287+15])
                                  Ppat_var "u1" (middle_end/closure/closure.ml[658,25287+13]..[658,25287+15])
                                pattern (middle_end/closure/closure.ml[658,25287+17]..[658,25287+19])
                                  Ppat_var "id" (middle_end/closure/closure.ml[658,25287+17]..[658,25287+19])
                                pattern (middle_end/closure/closure.ml[658,25287+21]..[658,25287+23])
                                  Ppat_var "u2" (middle_end/closure/closure.ml[658,25287+21]..[658,25287+23])
                              ]
                        expression (middle_end/closure/closure.ml[659,25315+6]..[662,25428+70])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[659,25315+10]..[659,25315+13])
                                Ppat_var "id'" (middle_end/closure/closure.ml[659,25315+10]..[659,25315+13])
                              expression (middle_end/closure/closure.ml[659,25315+16]..[659,25315+28])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[659,25315+16]..[659,25315+25])
                                  Pexp_ident "VP.rename" (middle_end/closure/closure.ml[659,25315+16]..[659,25315+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[659,25315+26]..[659,25315+28])
                                      Pexp_ident "id" (middle_end/closure/closure.ml[659,25315+26]..[659,25315+28])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[660,25347+6]..[662,25428+70])
                            Pexp_construct "Utrywith" (middle_end/closure/closure.ml[660,25347+6]..[660,25347+14])
                            Some
                              expression (middle_end/closure/closure.ml[660,25347+14]..[662,25428+70])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[660,25347+15]..[660,25347+41])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[660,25347+15]..[660,25347+25])
                                      Pexp_ident "substitute" (middle_end/closure/closure.ml[660,25347+15]..[660,25347+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[660,25347+26]..[660,25347+29])
                                          Pexp_ident "loc" (middle_end/closure/closure.ml[660,25347+26]..[660,25347+29])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[660,25347+30]..[660,25347+32])
                                          Pexp_ident "st" (middle_end/closure/closure.ml[660,25347+30]..[660,25347+32])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[660,25347+33]..[660,25347+35])
                                          Pexp_ident "sb" (middle_end/closure/closure.ml[660,25347+33]..[660,25347+35])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[660,25347+36]..[660,25347+38])
                                          Pexp_ident "rn" (middle_end/closure/closure.ml[660,25347+36]..[660,25347+38])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[660,25347+39]..[660,25347+41])
                                          Pexp_ident "u1" (middle_end/closure/closure.ml[660,25347+39]..[660,25347+41])
                                    ]
                                  expression (middle_end/closure/closure.ml[660,25347+43]..[660,25347+46])
                                    Pexp_ident "id'" (middle_end/closure/closure.ml[660,25347+43]..[660,25347+46])
                                  expression (middle_end/closure/closure.ml[661,25395+15]..[662,25428+69])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[661,25395+15]..[661,25395+25])
                                      Pexp_ident "substitute" (middle_end/closure/closure.ml[661,25395+15]..[661,25395+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[661,25395+26]..[661,25395+29])
                                          Pexp_ident "loc" (middle_end/closure/closure.ml[661,25395+26]..[661,25395+29])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[661,25395+30]..[661,25395+32])
                                          Pexp_ident "st" (middle_end/closure/closure.ml[661,25395+30]..[661,25395+32])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[662,25428+17]..[662,25428+63])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[662,25428+18]..[662,25428+27])
                                            Pexp_ident "V.Map.add" (middle_end/closure/closure.ml[662,25428+18]..[662,25428+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[662,25428+28]..[662,25428+39])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[662,25428+29]..[662,25428+35])
                                                  Pexp_ident "VP.var" (middle_end/closure/closure.ml[662,25428+29]..[662,25428+35])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[662,25428+36]..[662,25428+38])
                                                      Pexp_ident "id" (middle_end/closure/closure.ml[662,25428+36]..[662,25428+38])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[662,25428+40]..[662,25428+59])
                                                Pexp_construct "Uvar" (middle_end/closure/closure.ml[662,25428+41]..[662,25428+45])
                                                Some
                                                  expression (middle_end/closure/closure.ml[662,25428+46]..[662,25428+58])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[662,25428+47]..[662,25428+53])
                                                      Pexp_ident "VP.var" (middle_end/closure/closure.ml[662,25428+47]..[662,25428+53])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[662,25428+54]..[662,25428+57])
                                                          Pexp_ident "id'" (middle_end/closure/closure.ml[662,25428+54]..[662,25428+57])
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[662,25428+60]..[662,25428+62])
                                                Pexp_ident "sb" (middle_end/closure/closure.ml[662,25428+60]..[662,25428+62])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[662,25428+64]..[662,25428+66])
                                          Pexp_ident "rn" (middle_end/closure/closure.ml[662,25428+64]..[662,25428+66])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[662,25428+67]..[662,25428+69])
                                          Pexp_ident "u2" (middle_end/closure/closure.ml[662,25428+67]..[662,25428+69])
                                    ]
                                ]
                      <case>
                        pattern (middle_end/closure/closure.ml[663,25499+4]..[663,25499+27])
                          Ppat_construct "Uifthenelse" (middle_end/closure/closure.ml[663,25499+4]..[663,25499+15])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[663,25499+15]..[663,25499+27])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[663,25499+16]..[663,25499+18])
                                  Ppat_var "u1" (middle_end/closure/closure.ml[663,25499+16]..[663,25499+18])
                                pattern (middle_end/closure/closure.ml[663,25499+20]..[663,25499+22])
                                  Ppat_var "u2" (middle_end/closure/closure.ml[663,25499+20]..[663,25499+22])
                                pattern (middle_end/closure/closure.ml[663,25499+24]..[663,25499+26])
                                  Ppat_var "u3" (middle_end/closure/closure.ml[663,25499+24]..[663,25499+26])
                              ]
                        expression (middle_end/closure/closure.ml[664,25530+6]..[675,25932+9])
                          Pexp_match
                          expression (middle_end/closure/closure.ml[664,25530+18]..[664,25530+44])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[664,25530+18]..[664,25530+28])
                              Pexp_ident "substitute" (middle_end/closure/closure.ml[664,25530+18]..[664,25530+28])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[664,25530+29]..[664,25530+32])
                                  Pexp_ident "loc" (middle_end/closure/closure.ml[664,25530+29]..[664,25530+32])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[664,25530+33]..[664,25530+35])
                                  Pexp_ident "st" (middle_end/closure/closure.ml[664,25530+33]..[664,25530+35])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[664,25530+36]..[664,25530+38])
                                  Pexp_ident "sb" (middle_end/closure/closure.ml[664,25530+36]..[664,25530+38])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[664,25530+39]..[664,25530+41])
                                  Pexp_ident "rn" (middle_end/closure/closure.ml[664,25530+39]..[664,25530+41])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[664,25530+42]..[664,25530+44])
                                  Pexp_ident "u1" (middle_end/closure/closure.ml[664,25530+42]..[664,25530+44])
                            ]
                          [
                            <case>
                              pattern (middle_end/closure/closure.ml[665,25580+8]..[665,25580+29])
                                Ppat_construct "Uconst" (middle_end/closure/closure.ml[665,25580+8]..[665,25580+14])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[665,25580+15]..[665,25580+29])
                                    Ppat_construct "Uconst_int" (middle_end/closure/closure.ml[665,25580+16]..[665,25580+26])
                                    Some
                                      []
                                      pattern (middle_end/closure/closure.ml[665,25580+27]..[665,25580+28])
                                        Ppat_var "n" (middle_end/closure/closure.ml[665,25580+27]..[665,25580+28])
                              expression (middle_end/closure/closure.ml[666,25613+10]..[669,25692+38])
                                Pexp_ifthenelse
                                expression (middle_end/closure/closure.ml[666,25613+13]..[666,25613+19])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[666,25613+15]..[666,25613+17])
                                    Pexp_ident "<>" (middle_end/closure/closure.ml[666,25613+15]..[666,25613+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[666,25613+13]..[666,25613+14])
                                        Pexp_ident "n" (middle_end/closure/closure.ml[666,25613+13]..[666,25613+14])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[666,25613+18]..[666,25613+19])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                                expression (middle_end/closure/closure.ml[667,25638+12]..[667,25638+38])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[667,25638+12]..[667,25638+22])
                                    Pexp_ident "substitute" (middle_end/closure/closure.ml[667,25638+12]..[667,25638+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[667,25638+23]..[667,25638+26])
                                        Pexp_ident "loc" (middle_end/closure/closure.ml[667,25638+23]..[667,25638+26])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[667,25638+27]..[667,25638+29])
                                        Pexp_ident "st" (middle_end/closure/closure.ml[667,25638+27]..[667,25638+29])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[667,25638+30]..[667,25638+32])
                                        Pexp_ident "sb" (middle_end/closure/closure.ml[667,25638+30]..[667,25638+32])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[667,25638+33]..[667,25638+35])
                                        Pexp_ident "rn" (middle_end/closure/closure.ml[667,25638+33]..[667,25638+35])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[667,25638+36]..[667,25638+38])
                                        Pexp_ident "u2" (middle_end/closure/closure.ml[667,25638+36]..[667,25638+38])
                                  ]
                                Some
                                  expression (middle_end/closure/closure.ml[669,25692+12]..[669,25692+38])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[669,25692+12]..[669,25692+22])
                                      Pexp_ident "substitute" (middle_end/closure/closure.ml[669,25692+12]..[669,25692+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[669,25692+23]..[669,25692+26])
                                          Pexp_ident "loc" (middle_end/closure/closure.ml[669,25692+23]..[669,25692+26])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[669,25692+27]..[669,25692+29])
                                          Pexp_ident "st" (middle_end/closure/closure.ml[669,25692+27]..[669,25692+29])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[669,25692+30]..[669,25692+32])
                                          Pexp_ident "sb" (middle_end/closure/closure.ml[669,25692+30]..[669,25692+32])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[669,25692+33]..[669,25692+35])
                                          Pexp_ident "rn" (middle_end/closure/closure.ml[669,25692+33]..[669,25692+35])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[669,25692+36]..[669,25692+38])
                                          Pexp_ident "u3" (middle_end/closure/closure.ml[669,25692+36]..[669,25692+38])
                                    ]
                            <case>
                              pattern (middle_end/closure/closure.ml[670,25731+8]..[670,25731+35])
                                Ppat_construct "Uprim" (middle_end/closure/closure.ml[670,25731+8]..[670,25731+13])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[670,25731+13]..[670,25731+35])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[670,25731+14]..[670,25731+28])
                                        Ppat_construct "P.Pmakeblock" (middle_end/closure/closure.ml[670,25731+14]..[670,25731+26])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[670,25731+27]..[670,25731+28])
                                            Ppat_any
                                      pattern (middle_end/closure/closure.ml[670,25731+30]..[670,25731+31])
                                        Ppat_any
                                      pattern (middle_end/closure/closure.ml[670,25731+33]..[670,25731+34])
                                        Ppat_any
                                    ]
                              expression (middle_end/closure/closure.ml[671,25770+10]..[671,25770+36])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[671,25770+10]..[671,25770+20])
                                  Pexp_ident "substitute" (middle_end/closure/closure.ml[671,25770+10]..[671,25770+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[671,25770+21]..[671,25770+24])
                                      Pexp_ident "loc" (middle_end/closure/closure.ml[671,25770+21]..[671,25770+24])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[671,25770+25]..[671,25770+27])
                                      Pexp_ident "st" (middle_end/closure/closure.ml[671,25770+25]..[671,25770+27])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[671,25770+28]..[671,25770+30])
                                      Pexp_ident "sb" (middle_end/closure/closure.ml[671,25770+28]..[671,25770+30])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[671,25770+31]..[671,25770+33])
                                      Pexp_ident "rn" (middle_end/closure/closure.ml[671,25770+31]..[671,25770+33])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[671,25770+34]..[671,25770+36])
                                      Pexp_ident "u2" (middle_end/closure/closure.ml[671,25770+34]..[671,25770+36])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[672,25807+8]..[672,25807+11])
                                Ppat_var "su1" (middle_end/closure/closure.ml[672,25807+8]..[672,25807+11])
                              expression (middle_end/closure/closure.ml[673,25822+10]..[674,25877+54])
                                Pexp_construct "Uifthenelse" (middle_end/closure/closure.ml[673,25822+10]..[673,25822+21])
                                Some
                                  expression (middle_end/closure/closure.ml[673,25822+21]..[674,25877+54])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/closure/closure.ml[673,25822+22]..[673,25822+25])
                                        Pexp_ident "su1" (middle_end/closure/closure.ml[673,25822+22]..[673,25822+25])
                                      expression (middle_end/closure/closure.ml[673,25822+27]..[673,25822+53])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[673,25822+27]..[673,25822+37])
                                          Pexp_ident "substitute" (middle_end/closure/closure.ml[673,25822+27]..[673,25822+37])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[673,25822+38]..[673,25822+41])
                                              Pexp_ident "loc" (middle_end/closure/closure.ml[673,25822+38]..[673,25822+41])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[673,25822+42]..[673,25822+44])
                                              Pexp_ident "st" (middle_end/closure/closure.ml[673,25822+42]..[673,25822+44])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[673,25822+45]..[673,25822+47])
                                              Pexp_ident "sb" (middle_end/closure/closure.ml[673,25822+45]..[673,25822+47])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[673,25822+48]..[673,25822+50])
                                              Pexp_ident "rn" (middle_end/closure/closure.ml[673,25822+48]..[673,25822+50])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[673,25822+51]..[673,25822+53])
                                              Pexp_ident "u2" (middle_end/closure/closure.ml[673,25822+51]..[673,25822+53])
                                        ]
                                      expression (middle_end/closure/closure.ml[674,25877+27]..[674,25877+53])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[674,25877+27]..[674,25877+37])
                                          Pexp_ident "substitute" (middle_end/closure/closure.ml[674,25877+27]..[674,25877+37])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[674,25877+38]..[674,25877+41])
                                              Pexp_ident "loc" (middle_end/closure/closure.ml[674,25877+38]..[674,25877+41])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[674,25877+42]..[674,25877+44])
                                              Pexp_ident "st" (middle_end/closure/closure.ml[674,25877+42]..[674,25877+44])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[674,25877+45]..[674,25877+47])
                                              Pexp_ident "sb" (middle_end/closure/closure.ml[674,25877+45]..[674,25877+47])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[674,25877+48]..[674,25877+50])
                                              Pexp_ident "rn" (middle_end/closure/closure.ml[674,25877+48]..[674,25877+50])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[674,25877+51]..[674,25877+53])
                                              Pexp_ident "u3" (middle_end/closure/closure.ml[674,25877+51]..[674,25877+53])
                                        ]
                                    ]
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[676,25942+4]..[676,25942+21])
                          Ppat_construct "Usequence" (middle_end/closure/closure.ml[676,25942+4]..[676,25942+13])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[676,25942+13]..[676,25942+21])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[676,25942+14]..[676,25942+16])
                                  Ppat_var "u1" (middle_end/closure/closure.ml[676,25942+14]..[676,25942+16])
                                pattern (middle_end/closure/closure.ml[676,25942+18]..[676,25942+20])
                                  Ppat_var "u2" (middle_end/closure/closure.ml[676,25942+18]..[676,25942+20])
                              ]
                        expression (middle_end/closure/closure.ml[677,25967+6]..[677,25967+71])
                          Pexp_construct "Usequence" (middle_end/closure/closure.ml[677,25967+6]..[677,25967+15])
                          Some
                            expression (middle_end/closure/closure.ml[677,25967+15]..[677,25967+71])
                              Pexp_tuple
                              [
                                expression (middle_end/closure/closure.ml[677,25967+16]..[677,25967+42])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[677,25967+16]..[677,25967+26])
                                    Pexp_ident "substitute" (middle_end/closure/closure.ml[677,25967+16]..[677,25967+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[677,25967+27]..[677,25967+30])
                                        Pexp_ident "loc" (middle_end/closure/closure.ml[677,25967+27]..[677,25967+30])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[677,25967+31]..[677,25967+33])
                                        Pexp_ident "st" (middle_end/closure/closure.ml[677,25967+31]..[677,25967+33])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[677,25967+34]..[677,25967+36])
                                        Pexp_ident "sb" (middle_end/closure/closure.ml[677,25967+34]..[677,25967+36])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[677,25967+37]..[677,25967+39])
                                        Pexp_ident "rn" (middle_end/closure/closure.ml[677,25967+37]..[677,25967+39])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[677,25967+40]..[677,25967+42])
                                        Pexp_ident "u1" (middle_end/closure/closure.ml[677,25967+40]..[677,25967+42])
                                  ]
                                expression (middle_end/closure/closure.ml[677,25967+44]..[677,25967+70])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[677,25967+44]..[677,25967+54])
                                    Pexp_ident "substitute" (middle_end/closure/closure.ml[677,25967+44]..[677,25967+54])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[677,25967+55]..[677,25967+58])
                                        Pexp_ident "loc" (middle_end/closure/closure.ml[677,25967+55]..[677,25967+58])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[677,25967+59]..[677,25967+61])
                                        Pexp_ident "st" (middle_end/closure/closure.ml[677,25967+59]..[677,25967+61])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[677,25967+62]..[677,25967+64])
                                        Pexp_ident "sb" (middle_end/closure/closure.ml[677,25967+62]..[677,25967+64])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[677,25967+65]..[677,25967+67])
                                        Pexp_ident "rn" (middle_end/closure/closure.ml[677,25967+65]..[677,25967+67])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[677,25967+68]..[677,25967+70])
                                        Pexp_ident "u2" (middle_end/closure/closure.ml[677,25967+68]..[677,25967+70])
                                  ]
                              ]
                      <case>
                        pattern (middle_end/closure/closure.ml[678,26039+4]..[678,26039+18])
                          Ppat_construct "Uwhile" (middle_end/closure/closure.ml[678,26039+4]..[678,26039+10])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[678,26039+10]..[678,26039+18])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[678,26039+11]..[678,26039+13])
                                  Ppat_var "u1" (middle_end/closure/closure.ml[678,26039+11]..[678,26039+13])
                                pattern (middle_end/closure/closure.ml[678,26039+15]..[678,26039+17])
                                  Ppat_var "u2" (middle_end/closure/closure.ml[678,26039+15]..[678,26039+17])
                              ]
                        expression (middle_end/closure/closure.ml[679,26061+6]..[679,26061+68])
                          Pexp_construct "Uwhile" (middle_end/closure/closure.ml[679,26061+6]..[679,26061+12])
                          Some
                            expression (middle_end/closure/closure.ml[679,26061+12]..[679,26061+68])
                              Pexp_tuple
                              [
                                expression (middle_end/closure/closure.ml[679,26061+13]..[679,26061+39])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[679,26061+13]..[679,26061+23])
                                    Pexp_ident "substitute" (middle_end/closure/closure.ml[679,26061+13]..[679,26061+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[679,26061+24]..[679,26061+27])
                                        Pexp_ident "loc" (middle_end/closure/closure.ml[679,26061+24]..[679,26061+27])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[679,26061+28]..[679,26061+30])
                                        Pexp_ident "st" (middle_end/closure/closure.ml[679,26061+28]..[679,26061+30])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[679,26061+31]..[679,26061+33])
                                        Pexp_ident "sb" (middle_end/closure/closure.ml[679,26061+31]..[679,26061+33])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[679,26061+34]..[679,26061+36])
                                        Pexp_ident "rn" (middle_end/closure/closure.ml[679,26061+34]..[679,26061+36])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[679,26061+37]..[679,26061+39])
                                        Pexp_ident "u1" (middle_end/closure/closure.ml[679,26061+37]..[679,26061+39])
                                  ]
                                expression (middle_end/closure/closure.ml[679,26061+41]..[679,26061+67])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[679,26061+41]..[679,26061+51])
                                    Pexp_ident "substitute" (middle_end/closure/closure.ml[679,26061+41]..[679,26061+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[679,26061+52]..[679,26061+55])
                                        Pexp_ident "loc" (middle_end/closure/closure.ml[679,26061+52]..[679,26061+55])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[679,26061+56]..[679,26061+58])
                                        Pexp_ident "st" (middle_end/closure/closure.ml[679,26061+56]..[679,26061+58])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[679,26061+59]..[679,26061+61])
                                        Pexp_ident "sb" (middle_end/closure/closure.ml[679,26061+59]..[679,26061+61])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[679,26061+62]..[679,26061+64])
                                        Pexp_ident "rn" (middle_end/closure/closure.ml[679,26061+62]..[679,26061+64])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[679,26061+65]..[679,26061+67])
                                        Pexp_ident "u2" (middle_end/closure/closure.ml[679,26061+65]..[679,26061+67])
                                  ]
                              ]
                      <case>
                        pattern (middle_end/closure/closure.ml[680,26130+4]..[680,26130+29])
                          Ppat_construct "Ufor" (middle_end/closure/closure.ml[680,26130+4]..[680,26130+8])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[680,26130+8]..[680,26130+29])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[680,26130+9]..[680,26130+11])
                                  Ppat_var "id" (middle_end/closure/closure.ml[680,26130+9]..[680,26130+11])
                                pattern (middle_end/closure/closure.ml[680,26130+13]..[680,26130+15])
                                  Ppat_var "u1" (middle_end/closure/closure.ml[680,26130+13]..[680,26130+15])
                                pattern (middle_end/closure/closure.ml[680,26130+17]..[680,26130+19])
                                  Ppat_var "u2" (middle_end/closure/closure.ml[680,26130+17]..[680,26130+19])
                                pattern (middle_end/closure/closure.ml[680,26130+21]..[680,26130+24])
                                  Ppat_var "dir" (middle_end/closure/closure.ml[680,26130+21]..[680,26130+24])
                                pattern (middle_end/closure/closure.ml[680,26130+26]..[680,26130+28])
                                  Ppat_var "u3" (middle_end/closure/closure.ml[680,26130+26]..[680,26130+28])
                              ]
                        expression (middle_end/closure/closure.ml[681,26163+6]..[684,26301+64])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[681,26163+10]..[681,26163+13])
                                Ppat_var "id'" (middle_end/closure/closure.ml[681,26163+10]..[681,26163+13])
                              expression (middle_end/closure/closure.ml[681,26163+16]..[681,26163+28])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[681,26163+16]..[681,26163+25])
                                  Pexp_ident "VP.rename" (middle_end/closure/closure.ml[681,26163+16]..[681,26163+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[681,26163+26]..[681,26163+28])
                                      Pexp_ident "id" (middle_end/closure/closure.ml[681,26163+26]..[681,26163+28])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[682,26195+6]..[684,26301+64])
                            Pexp_construct "Ufor" (middle_end/closure/closure.ml[682,26195+6]..[682,26195+10])
                            Some
                              expression (middle_end/closure/closure.ml[682,26195+10]..[684,26301+64])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[682,26195+11]..[682,26195+14])
                                    Pexp_ident "id'" (middle_end/closure/closure.ml[682,26195+11]..[682,26195+14])
                                  expression (middle_end/closure/closure.ml[682,26195+16]..[682,26195+42])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[682,26195+16]..[682,26195+26])
                                      Pexp_ident "substitute" (middle_end/closure/closure.ml[682,26195+16]..[682,26195+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[682,26195+27]..[682,26195+30])
                                          Pexp_ident "loc" (middle_end/closure/closure.ml[682,26195+27]..[682,26195+30])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[682,26195+31]..[682,26195+33])
                                          Pexp_ident "st" (middle_end/closure/closure.ml[682,26195+31]..[682,26195+33])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[682,26195+34]..[682,26195+36])
                                          Pexp_ident "sb" (middle_end/closure/closure.ml[682,26195+34]..[682,26195+36])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[682,26195+37]..[682,26195+39])
                                          Pexp_ident "rn" (middle_end/closure/closure.ml[682,26195+37]..[682,26195+39])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[682,26195+40]..[682,26195+42])
                                          Pexp_ident "u1" (middle_end/closure/closure.ml[682,26195+40]..[682,26195+42])
                                    ]
                                  expression (middle_end/closure/closure.ml[682,26195+44]..[682,26195+70])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[682,26195+44]..[682,26195+54])
                                      Pexp_ident "substitute" (middle_end/closure/closure.ml[682,26195+44]..[682,26195+54])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[682,26195+55]..[682,26195+58])
                                          Pexp_ident "loc" (middle_end/closure/closure.ml[682,26195+55]..[682,26195+58])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[682,26195+59]..[682,26195+61])
                                          Pexp_ident "st" (middle_end/closure/closure.ml[682,26195+59]..[682,26195+61])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[682,26195+62]..[682,26195+64])
                                          Pexp_ident "sb" (middle_end/closure/closure.ml[682,26195+62]..[682,26195+64])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[682,26195+65]..[682,26195+67])
                                          Pexp_ident "rn" (middle_end/closure/closure.ml[682,26195+65]..[682,26195+67])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[682,26195+68]..[682,26195+70])
                                          Pexp_ident "u2" (middle_end/closure/closure.ml[682,26195+68]..[682,26195+70])
                                    ]
                                  expression (middle_end/closure/closure.ml[682,26195+72]..[682,26195+75])
                                    Pexp_ident "dir" (middle_end/closure/closure.ml[682,26195+72]..[682,26195+75])
                                  expression (middle_end/closure/closure.ml[683,26272+11]..[684,26301+63])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[683,26272+11]..[683,26272+21])
                                      Pexp_ident "substitute" (middle_end/closure/closure.ml[683,26272+11]..[683,26272+21])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[683,26272+22]..[683,26272+25])
                                          Pexp_ident "loc" (middle_end/closure/closure.ml[683,26272+22]..[683,26272+25])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[683,26272+26]..[683,26272+28])
                                          Pexp_ident "st" (middle_end/closure/closure.ml[683,26272+26]..[683,26272+28])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[684,26301+11]..[684,26301+57])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[684,26301+12]..[684,26301+21])
                                            Pexp_ident "V.Map.add" (middle_end/closure/closure.ml[684,26301+12]..[684,26301+21])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[684,26301+22]..[684,26301+33])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[684,26301+23]..[684,26301+29])
                                                  Pexp_ident "VP.var" (middle_end/closure/closure.ml[684,26301+23]..[684,26301+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[684,26301+30]..[684,26301+32])
                                                      Pexp_ident "id" (middle_end/closure/closure.ml[684,26301+30]..[684,26301+32])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[684,26301+34]..[684,26301+53])
                                                Pexp_construct "Uvar" (middle_end/closure/closure.ml[684,26301+35]..[684,26301+39])
                                                Some
                                                  expression (middle_end/closure/closure.ml[684,26301+40]..[684,26301+52])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[684,26301+41]..[684,26301+47])
                                                      Pexp_ident "VP.var" (middle_end/closure/closure.ml[684,26301+41]..[684,26301+47])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[684,26301+48]..[684,26301+51])
                                                          Pexp_ident "id'" (middle_end/closure/closure.ml[684,26301+48]..[684,26301+51])
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[684,26301+54]..[684,26301+56])
                                                Pexp_ident "sb" (middle_end/closure/closure.ml[684,26301+54]..[684,26301+56])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[684,26301+58]..[684,26301+60])
                                          Pexp_ident "rn" (middle_end/closure/closure.ml[684,26301+58]..[684,26301+60])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[684,26301+61]..[684,26301+63])
                                          Pexp_ident "u3" (middle_end/closure/closure.ml[684,26301+61]..[684,26301+63])
                                    ]
                                ]
                      <case>
                        pattern (middle_end/closure/closure.ml[685,26366+4]..[685,26366+18])
                          Ppat_construct "Uassign" (middle_end/closure/closure.ml[685,26366+4]..[685,26366+11])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[685,26366+11]..[685,26366+18])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[685,26366+12]..[685,26366+14])
                                  Ppat_var "id" (middle_end/closure/closure.ml[685,26366+12]..[685,26366+14])
                                pattern (middle_end/closure/closure.ml[685,26366+16]..[685,26366+17])
                                  Ppat_var "u" (middle_end/closure/closure.ml[685,26366+16]..[685,26366+17])
                              ]
                        expression (middle_end/closure/closure.ml[686,26388+6]..[691,26528+45])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[686,26388+10]..[686,26388+13])
                                Ppat_var "id'" (middle_end/closure/closure.ml[686,26388+10]..[686,26388+13])
                              expression (middle_end/closure/closure.ml[687,26404+8]..[690,26512+12])
                                Pexp_try
                                expression (middle_end/closure/closure.ml[688,26416+10]..[688,26416+69])
                                  Pexp_match
                                  expression (middle_end/closure/closure.ml[688,26416+16]..[688,26416+32])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[688,26416+16]..[688,26416+26])
                                      Pexp_ident "V.Map.find" (middle_end/closure/closure.ml[688,26416+16]..[688,26416+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[688,26416+27]..[688,26416+29])
                                          Pexp_ident "id" (middle_end/closure/closure.ml[688,26416+27]..[688,26416+29])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[688,26416+30]..[688,26416+32])
                                          Pexp_ident "sb" (middle_end/closure/closure.ml[688,26416+30]..[688,26416+32])
                                    ]
                                  [
                                    <case>
                                      pattern (middle_end/closure/closure.ml[688,26416+38]..[688,26416+44])
                                        Ppat_construct "Uvar" (middle_end/closure/closure.ml[688,26416+38]..[688,26416+42])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[688,26416+43]..[688,26416+44])
                                            Ppat_var "i" (middle_end/closure/closure.ml[688,26416+43]..[688,26416+44])
                                      expression (middle_end/closure/closure.ml[688,26416+48]..[688,26416+49])
                                        Pexp_ident "i" (middle_end/closure/closure.ml[688,26416+48]..[688,26416+49])
                                    <case>
                                      pattern (middle_end/closure/closure.ml[688,26416+52]..[688,26416+53])
                                        Ppat_any
                                      expression (middle_end/closure/closure.ml[688,26416+57]..[688,26416+69])
                                        Pexp_assert
                                        expression (middle_end/closure/closure.ml[688,26416+64]..[688,26416+69])
                                          Pexp_construct "false" (middle_end/closure/closure.ml[688,26416+64]..[688,26416+69])
                                          None
                                  ]
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[689,26486+13]..[689,26486+22])
                                      Ppat_construct "Not_found" (middle_end/closure/closure.ml[689,26486+13]..[689,26486+22])
                                      None
                                    expression (middle_end/closure/closure.ml[690,26512+10]..[690,26512+12])
                                      Pexp_ident "id" (middle_end/closure/closure.ml[690,26512+10]..[690,26512+12])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[691,26528+6]..[691,26528+45])
                            Pexp_construct "Uassign" (middle_end/closure/closure.ml[691,26528+6]..[691,26528+13])
                            Some
                              expression (middle_end/closure/closure.ml[691,26528+13]..[691,26528+45])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[691,26528+14]..[691,26528+17])
                                    Pexp_ident "id'" (middle_end/closure/closure.ml[691,26528+14]..[691,26528+17])
                                  expression (middle_end/closure/closure.ml[691,26528+19]..[691,26528+44])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[691,26528+19]..[691,26528+29])
                                      Pexp_ident "substitute" (middle_end/closure/closure.ml[691,26528+19]..[691,26528+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[691,26528+30]..[691,26528+33])
                                          Pexp_ident "loc" (middle_end/closure/closure.ml[691,26528+30]..[691,26528+33])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[691,26528+34]..[691,26528+36])
                                          Pexp_ident "st" (middle_end/closure/closure.ml[691,26528+34]..[691,26528+36])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[691,26528+37]..[691,26528+39])
                                          Pexp_ident "sb" (middle_end/closure/closure.ml[691,26528+37]..[691,26528+39])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[691,26528+40]..[691,26528+42])
                                          Pexp_ident "rn" (middle_end/closure/closure.ml[691,26528+40]..[691,26528+42])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[691,26528+43]..[691,26528+44])
                                          Pexp_ident "u" (middle_end/closure/closure.ml[691,26528+43]..[691,26528+44])
                                    ]
                                ]
                      <case>
                        pattern (middle_end/closure/closure.ml[692,26574+4]..[692,26574+29])
                          Ppat_construct "Usend" (middle_end/closure/closure.ml[692,26574+4]..[692,26574+9])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[692,26574+9]..[692,26574+29])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[692,26574+10]..[692,26574+11])
                                  Ppat_var "k" (middle_end/closure/closure.ml[692,26574+10]..[692,26574+11])
                                pattern (middle_end/closure/closure.ml[692,26574+13]..[692,26574+15])
                                  Ppat_var "u1" (middle_end/closure/closure.ml[692,26574+13]..[692,26574+15])
                                pattern (middle_end/closure/closure.ml[692,26574+17]..[692,26574+19])
                                  Ppat_var "u2" (middle_end/closure/closure.ml[692,26574+17]..[692,26574+19])
                                pattern (middle_end/closure/closure.ml[692,26574+21]..[692,26574+23])
                                  Ppat_var "ul" (middle_end/closure/closure.ml[692,26574+21]..[692,26574+23])
                                pattern (middle_end/closure/closure.ml[692,26574+25]..[692,26574+28])
                                  Ppat_var "dbg" (middle_end/closure/closure.ml[692,26574+25]..[692,26574+28])
                              ]
                        expression (middle_end/closure/closure.ml[693,26607+6]..[695,26721+55])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[693,26607+10]..[693,26607+13])
                                Ppat_var "dbg" (middle_end/closure/closure.ml[693,26607+10]..[693,26607+13])
                              expression (middle_end/closure/closure.ml[693,26607+16]..[693,26607+39])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[693,26607+16]..[693,26607+31])
                                  Pexp_ident "subst_debuginfo" (middle_end/closure/closure.ml[693,26607+16]..[693,26607+31])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[693,26607+32]..[693,26607+35])
                                      Pexp_ident "loc" (middle_end/closure/closure.ml[693,26607+32]..[693,26607+35])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[693,26607+36]..[693,26607+39])
                                      Pexp_ident "dbg" (middle_end/closure/closure.ml[693,26607+36]..[693,26607+39])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[694,26650+6]..[695,26721+55])
                            Pexp_construct "Usend" (middle_end/closure/closure.ml[694,26650+6]..[694,26650+11])
                            Some
                              expression (middle_end/closure/closure.ml[694,26650+11]..[695,26721+55])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[694,26650+12]..[694,26650+13])
                                    Pexp_ident "k" (middle_end/closure/closure.ml[694,26650+12]..[694,26650+13])
                                  expression (middle_end/closure/closure.ml[694,26650+15]..[694,26650+41])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[694,26650+15]..[694,26650+25])
                                      Pexp_ident "substitute" (middle_end/closure/closure.ml[694,26650+15]..[694,26650+25])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[694,26650+26]..[694,26650+29])
                                          Pexp_ident "loc" (middle_end/closure/closure.ml[694,26650+26]..[694,26650+29])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[694,26650+30]..[694,26650+32])
                                          Pexp_ident "st" (middle_end/closure/closure.ml[694,26650+30]..[694,26650+32])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[694,26650+33]..[694,26650+35])
                                          Pexp_ident "sb" (middle_end/closure/closure.ml[694,26650+33]..[694,26650+35])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[694,26650+36]..[694,26650+38])
                                          Pexp_ident "rn" (middle_end/closure/closure.ml[694,26650+36]..[694,26650+38])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[694,26650+39]..[694,26650+41])
                                          Pexp_ident "u1" (middle_end/closure/closure.ml[694,26650+39]..[694,26650+41])
                                    ]
                                  expression (middle_end/closure/closure.ml[694,26650+43]..[694,26650+69])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[694,26650+43]..[694,26650+53])
                                      Pexp_ident "substitute" (middle_end/closure/closure.ml[694,26650+43]..[694,26650+53])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[694,26650+54]..[694,26650+57])
                                          Pexp_ident "loc" (middle_end/closure/closure.ml[694,26650+54]..[694,26650+57])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[694,26650+58]..[694,26650+60])
                                          Pexp_ident "st" (middle_end/closure/closure.ml[694,26650+58]..[694,26650+60])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[694,26650+61]..[694,26650+63])
                                          Pexp_ident "sb" (middle_end/closure/closure.ml[694,26650+61]..[694,26650+63])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[694,26650+64]..[694,26650+66])
                                          Pexp_ident "rn" (middle_end/closure/closure.ml[694,26650+64]..[694,26650+66])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[694,26650+67]..[694,26650+69])
                                          Pexp_ident "u2" (middle_end/closure/closure.ml[694,26650+67]..[694,26650+69])
                                    ]
                                  expression (middle_end/closure/closure.ml[695,26721+12]..[695,26721+49])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[695,26721+12]..[695,26721+20])
                                      Pexp_ident "List.map" (middle_end/closure/closure.ml[695,26721+12]..[695,26721+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[695,26721+21]..[695,26721+46])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[695,26721+22]..[695,26721+32])
                                            Pexp_ident "substitute" (middle_end/closure/closure.ml[695,26721+22]..[695,26721+32])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[695,26721+33]..[695,26721+36])
                                                Pexp_ident "loc" (middle_end/closure/closure.ml[695,26721+33]..[695,26721+36])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[695,26721+37]..[695,26721+39])
                                                Pexp_ident "st" (middle_end/closure/closure.ml[695,26721+37]..[695,26721+39])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[695,26721+40]..[695,26721+42])
                                                Pexp_ident "sb" (middle_end/closure/closure.ml[695,26721+40]..[695,26721+42])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[695,26721+43]..[695,26721+45])
                                                Pexp_ident "rn" (middle_end/closure/closure.ml[695,26721+43]..[695,26721+45])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[695,26721+47]..[695,26721+49])
                                          Pexp_ident "ul" (middle_end/closure/closure.ml[695,26721+47]..[695,26721+49])
                                    ]
                                  expression (middle_end/closure/closure.ml[695,26721+51]..[695,26721+54])
                                    Pexp_ident "dbg" (middle_end/closure/closure.ml[695,26721+51]..[695,26721+54])
                                ]
                      <case>
                        pattern (middle_end/closure/closure.ml[696,26777+4]..[696,26777+16])
                          Ppat_construct "Uunreachable" (middle_end/closure/closure.ml[696,26777+4]..[696,26777+16])
                          None
                        expression (middle_end/closure/closure.ml[697,26797+6]..[697,26797+18])
                          Pexp_construct "Uunreachable" (middle_end/closure/closure.ml[697,26797+6]..[697,26797+18])
                          None
                    ]
    ]
  structure_item (middle_end/closure/closure.ml[699,26817+0]..[704,26957+1])
    Pstr_type Rec
    [
      type_declaration "env" (middle_end/closure/closure.ml[699,26817+5]..[699,26817+8]) (middle_end/closure/closure.ml[699,26817+0]..[704,26957+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (middle_end/closure/closure.ml[700,26830+2]..[700,26830+36])
                Immutable
                "backend" (middle_end/closure/closure.ml[700,26830+2]..[700,26830+9])                core_type (middle_end/closure/closure.ml[700,26830+12]..[700,26830+35])
                  Ptyp_package "Backend_intf.S" (middle_end/closure/closure.ml[700,26830+20]..[700,26830+34])
                  []
              (middle_end/closure/closure.ml[701,26867+2]..[701,26867+25])
                Immutable
                "cenv" (middle_end/closure/closure.ml[701,26867+2]..[701,26867+6])                core_type (middle_end/closure/closure.ml[701,26867+9]..[701,26867+24])
                  Ptyp_constr "V.Map.t" (middle_end/closure/closure.ml[701,26867+17]..[701,26867+24])
                  [
                    core_type (middle_end/closure/closure.ml[701,26867+9]..[701,26867+16])
                      Ptyp_constr "ulambda" (middle_end/closure/closure.ml[701,26867+9]..[701,26867+16])
                      []
                  ]
              (middle_end/closure/closure.ml[702,26893+2]..[702,26893+37])
                Immutable
                "fenv" (middle_end/closure/closure.ml[702,26893+2]..[702,26893+6])                core_type (middle_end/closure/closure.ml[702,26893+9]..[702,26893+36])
                  Ptyp_constr "V.Map.t" (middle_end/closure/closure.ml[702,26893+29]..[702,26893+36])
                  [
                    core_type (middle_end/closure/closure.ml[702,26893+9]..[702,26893+28])
                      Ptyp_constr "value_approximation" (middle_end/closure/closure.ml[702,26893+9]..[702,26893+28])
                      []
                  ]
              (middle_end/closure/closure.ml[703,26931+2]..[703,26931+25])
                Immutable
                "mutable_vars" (middle_end/closure/closure.ml[703,26931+2]..[703,26931+14])                core_type (middle_end/closure/closure.ml[703,26931+17]..[703,26931+24])
                  Ptyp_constr "V.Set.t" (middle_end/closure/closure.ml[703,26931+17]..[703,26931+24])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (middle_end/closure/closure.ml[728,27806+0]..[731,27917+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[728,27806+4]..[728,27806+19])
          Ppat_var "is_substituable" (middle_end/closure/closure.ml[728,27806+4]..[728,27806+19])
        expression (middle_end/closure/closure.ml[728,27806+20]..[731,27917+14]) ghost
          Pexp_fun
          Labelled "mutable_vars"
          None
          pattern (middle_end/closure/closure.ml[728,27806+21]..[728,27806+33])
            Ppat_var "mutable_vars" (middle_end/closure/closure.ml[728,27806+21]..[728,27806+33])
          expression (middle_end/closure/closure.ml[728,27806+36]..[731,27917+14])
            Pexp_function
            [
              <case>
                pattern (middle_end/closure/closure.ml[729,27851+4]..[729,27851+10])
                  Ppat_construct "Uvar" (middle_end/closure/closure.ml[729,27851+4]..[729,27851+8])
                  Some
                    []
                    pattern (middle_end/closure/closure.ml[729,27851+9]..[729,27851+10])
                      Ppat_var "v" (middle_end/closure/closure.ml[729,27851+9]..[729,27851+10])
                expression (middle_end/closure/closure.ml[729,27851+14]..[729,27851+44])
                  Pexp_apply
                  expression (middle_end/closure/closure.ml[729,27851+14]..[729,27851+17])
                    Pexp_ident "not" (middle_end/closure/closure.ml[729,27851+14]..[729,27851+17])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure.ml[729,27851+18]..[729,27851+44])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[729,27851+19]..[729,27851+28])
                          Pexp_ident "V.Set.mem" (middle_end/closure/closure.ml[729,27851+19]..[729,27851+28])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[729,27851+29]..[729,27851+30])
                              Pexp_ident "v" (middle_end/closure/closure.ml[729,27851+29]..[729,27851+30])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[729,27851+31]..[729,27851+43])
                              Pexp_ident "mutable_vars" (middle_end/closure/closure.ml[729,27851+31]..[729,27851+43])
                        ]
                  ]
              <case>
                pattern (middle_end/closure/closure.ml[730,27896+4]..[730,27896+12])
                  Ppat_construct "Uconst" (middle_end/closure/closure.ml[730,27896+4]..[730,27896+10])
                  Some
                    []
                    pattern (middle_end/closure/closure.ml[730,27896+11]..[730,27896+12])
                      Ppat_any
                expression (middle_end/closure/closure.ml[730,27896+16]..[730,27896+20])
                  Pexp_construct "true" (middle_end/closure/closure.ml[730,27896+16]..[730,27896+20])
                  None
              <case>
                pattern (middle_end/closure/closure.ml[731,27917+4]..[731,27917+5])
                  Ppat_any
                expression (middle_end/closure/closure.ml[731,27917+9]..[731,27917+14])
                  Pexp_construct "false" (middle_end/closure/closure.ml[731,27917+9]..[731,27917+14])
                  None
            ]
    ]
  structure_item (middle_end/closure/closure.ml[734,27978+0]..[736,28028+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[734,27978+4]..[734,27978+15])
          Ppat_var "is_erasable" (middle_end/closure/closure.ml[734,27978+4]..[734,27978+15])
        expression (middle_end/closure/closure.ml[734,27978+18]..[736,28028+18])
          Pexp_function
          [
            <case>
              pattern (middle_end/closure/closure.ml[735,28005+4]..[735,28005+14])
                Ppat_construct "Uclosure" (middle_end/closure/closure.ml[735,28005+4]..[735,28005+12])
                Some
                  []
                  pattern (middle_end/closure/closure.ml[735,28005+13]..[735,28005+14])
                    Ppat_any
              expression (middle_end/closure/closure.ml[735,28005+18]..[735,28005+22])
                Pexp_construct "true" (middle_end/closure/closure.ml[735,28005+18]..[735,28005+22])
                None
            <case>
              pattern (middle_end/closure/closure.ml[736,28028+4]..[736,28028+5])
                Ppat_var "u" (middle_end/closure/closure.ml[736,28028+4]..[736,28028+5])
              expression (middle_end/closure/closure.ml[736,28028+9]..[736,28028+18])
                Pexp_apply
                expression (middle_end/closure/closure.ml[736,28028+9]..[736,28028+16])
                  Pexp_ident "is_pure" (middle_end/closure/closure.ml[736,28028+9]..[736,28028+16])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/closure/closure.ml[736,28028+17]..[736,28028+18])
                      Pexp_ident "u" (middle_end/closure/closure.ml[736,28028+17]..[736,28028+18])
                ]
          ]
    ]
  structure_item (middle_end/closure/closure.ml[738,28048+0]..[766,29210+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[738,28048+4]..[738,28048+15])
          Ppat_var "bind_params" (middle_end/closure/closure.ml[738,28048+4]..[738,28048+15])
        expression (middle_end/closure/closure.ml[738,28048+16]..[766,29210+56]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[738,28048+16]..[738,28048+44])
            Ppat_record Open
            [
              "backend" (middle_end/closure/closure.ml[738,28048+18]..[738,28048+25]) ghost
                pattern (middle_end/closure/closure.ml[738,28048+18]..[738,28048+25])
                  Ppat_var "backend" (middle_end/closure/closure.ml[738,28048+18]..[738,28048+25])
              "mutable_vars" (middle_end/closure/closure.ml[738,28048+27]..[738,28048+39]) ghost
                pattern (middle_end/closure/closure.ml[738,28048+27]..[738,28048+39])
                  Ppat_var "mutable_vars" (middle_end/closure/closure.ml[738,28048+27]..[738,28048+39])
            ]
          expression (middle_end/closure/closure.ml[738,28048+45]..[766,29210+56]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[738,28048+45]..[738,28048+48])
              Ppat_var "loc" (middle_end/closure/closure.ml[738,28048+45]..[738,28048+48])
            expression (middle_end/closure/closure.ml[738,28048+49]..[766,29210+56]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/closure/closure.ml[738,28048+49]..[738,28048+52])
                Ppat_var "fpc" (middle_end/closure/closure.ml[738,28048+49]..[738,28048+52])
              expression (middle_end/closure/closure.ml[738,28048+53]..[766,29210+56]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (middle_end/closure/closure.ml[738,28048+53]..[738,28048+59])
                  Ppat_var "params" (middle_end/closure/closure.ml[738,28048+53]..[738,28048+59])
                expression (middle_end/closure/closure.ml[738,28048+60]..[766,29210+56]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/closure/closure.ml[738,28048+60]..[738,28048+64])
                    Ppat_var "args" (middle_end/closure/closure.ml[738,28048+60]..[738,28048+64])
                  expression (middle_end/closure/closure.ml[738,28048+65]..[766,29210+56]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/closure/closure.ml[738,28048+65]..[738,28048+69])
                      Ppat_var "body" (middle_end/closure/closure.ml[738,28048+65]..[738,28048+69])
                    expression (middle_end/closure/closure.ml[739,28120+2]..[766,29210+56])
                      Pexp_let Rec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[739,28120+10]..[739,28120+13])
                            Ppat_var "aux" (middle_end/closure/closure.ml[739,28120+10]..[739,28120+13])
                          expression (middle_end/closure/closure.ml[739,28120+14]..[762,29076+28]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/closure/closure.ml[739,28120+14]..[739,28120+19])
                              Ppat_var "subst" (middle_end/closure/closure.ml[739,28120+14]..[739,28120+19])
                            expression (middle_end/closure/closure.ml[739,28120+20]..[762,29076+28]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/closure/closure.ml[739,28120+20]..[739,28120+22])
                                Ppat_var "pl" (middle_end/closure/closure.ml[739,28120+20]..[739,28120+22])
                              expression (middle_end/closure/closure.ml[739,28120+23]..[762,29076+28]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/closure/closure.ml[739,28120+23]..[739,28120+25])
                                  Ppat_var "al" (middle_end/closure/closure.ml[739,28120+23]..[739,28120+25])
                                expression (middle_end/closure/closure.ml[739,28120+26]..[762,29076+28]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/closure/closure.ml[739,28120+26]..[739,28120+30])
                                    Ppat_var "body" (middle_end/closure/closure.ml[739,28120+26]..[739,28120+30])
                                  expression (middle_end/closure/closure.ml[740,28153+4]..[762,29076+28])
                                    Pexp_match
                                    expression (middle_end/closure/closure.ml[740,28153+10]..[740,28153+18])
                                      Pexp_tuple
                                      [
                                        expression (middle_end/closure/closure.ml[740,28153+11]..[740,28153+13])
                                          Pexp_ident "pl" (middle_end/closure/closure.ml[740,28153+11]..[740,28153+13])
                                        expression (middle_end/closure/closure.ml[740,28153+15]..[740,28153+17])
                                          Pexp_ident "al" (middle_end/closure/closure.ml[740,28153+15]..[740,28153+17])
                                      ]
                                    [
                                      <case>
                                        pattern (middle_end/closure/closure.ml[741,28177+6]..[741,28177+14])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[741,28177+7]..[741,28177+9])
                                              Ppat_construct "[]" (middle_end/closure/closure.ml[741,28177+7]..[741,28177+9])
                                              None
                                            pattern (middle_end/closure/closure.ml[741,28177+11]..[741,28177+13])
                                              Ppat_construct "[]" (middle_end/closure/closure.ml[741,28177+11]..[741,28177+13])
                                              None
                                          ]
                                        expression (middle_end/closure/closure.ml[741,28177+18]..[742,28251+51])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[741,28177+18]..[741,28177+28])
                                            Pexp_ident "substitute" (middle_end/closure/closure.ml[741,28177+18]..[741,28177+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[741,28177+29]..[741,28177+58])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[741,28177+30]..[741,28177+53])
                                                  Pexp_ident "Debuginfo.from_location" (middle_end/closure/closure.ml[741,28177+30]..[741,28177+53])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[741,28177+54]..[741,28177+57])
                                                      Pexp_ident "loc" (middle_end/closure/closure.ml[741,28177+54]..[741,28177+57])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[741,28177+59]..[741,28177+73])
                                                Pexp_tuple
                                                [
                                                  expression (middle_end/closure/closure.ml[741,28177+60]..[741,28177+67])
                                                    Pexp_ident "backend" (middle_end/closure/closure.ml[741,28177+60]..[741,28177+67])
                                                  expression (middle_end/closure/closure.ml[741,28177+69]..[741,28177+72])
                                                    Pexp_ident "fpc" (middle_end/closure/closure.ml[741,28177+69]..[741,28177+72])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[742,28251+20]..[742,28251+25])
                                                Pexp_ident "subst" (middle_end/closure/closure.ml[742,28251+20]..[742,28251+25])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[742,28251+26]..[742,28251+46])
                                                Pexp_construct "Some" (middle_end/closure/closure.ml[742,28251+27]..[742,28251+31])
                                                Some
                                                  expression (middle_end/closure/closure.ml[742,28251+32]..[742,28251+45])
                                                    Pexp_ident "Int.Map.empty" (middle_end/closure/closure.ml[742,28251+32]..[742,28251+45])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[742,28251+47]..[742,28251+51])
                                                Pexp_ident "body" (middle_end/closure/closure.ml[742,28251+47]..[742,28251+51])
                                          ]
                                      <case>
                                        pattern (middle_end/closure/closure.ml[743,28303+6]..[743,28303+26])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[743,28303+7]..[743,28303+15])
                                              Ppat_construct "::" (middle_end/closure/closure.ml[743,28303+10]..[743,28303+12])
                                              Some
                                                []
                                                pattern (middle_end/closure/closure.ml[743,28303+7]..[743,28303+15]) ghost
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/closure/closure.ml[743,28303+7]..[743,28303+9])
                                                      Ppat_var "p1" (middle_end/closure/closure.ml[743,28303+7]..[743,28303+9])
                                                    pattern (middle_end/closure/closure.ml[743,28303+13]..[743,28303+15])
                                                      Ppat_var "pl" (middle_end/closure/closure.ml[743,28303+13]..[743,28303+15])
                                                  ]
                                            pattern (middle_end/closure/closure.ml[743,28303+17]..[743,28303+25])
                                              Ppat_construct "::" (middle_end/closure/closure.ml[743,28303+20]..[743,28303+22])
                                              Some
                                                []
                                                pattern (middle_end/closure/closure.ml[743,28303+17]..[743,28303+25]) ghost
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/closure/closure.ml[743,28303+17]..[743,28303+19])
                                                      Ppat_var "a1" (middle_end/closure/closure.ml[743,28303+17]..[743,28303+19])
                                                    pattern (middle_end/closure/closure.ml[743,28303+23]..[743,28303+25])
                                                      Ppat_var "al" (middle_end/closure/closure.ml[743,28303+23]..[743,28303+25])
                                                  ]
                                          ]
                                        expression (middle_end/closure/closure.ml[744,28333+8]..[761,29064+11])
                                          Pexp_ifthenelse
                                          expression (middle_end/closure/closure.ml[744,28333+11]..[744,28333+43])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[744,28333+11]..[744,28333+26])
                                              Pexp_ident "is_substituable" (middle_end/closure/closure.ml[744,28333+11]..[744,28333+26])
                                            [
                                              <arg>
                                              Labelled "mutable_vars"
                                                expression (middle_end/closure/closure.ml[744,28333+28]..[744,28333+40])
                                                  Pexp_ident "mutable_vars" (middle_end/closure/closure.ml[744,28333+28]..[744,28333+40])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[744,28333+41]..[744,28333+43])
                                                  Pexp_ident "a1" (middle_end/closure/closure.ml[744,28333+41]..[744,28333+43])
                                            ]
                                          expression (middle_end/closure/closure.ml[745,28382+10]..[745,28382+57])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[745,28382+10]..[745,28382+13])
                                              Pexp_ident "aux" (middle_end/closure/closure.ml[745,28382+10]..[745,28382+13])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[745,28382+14]..[745,28382+46])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[745,28382+15]..[745,28382+24])
                                                    Pexp_ident "V.Map.add" (middle_end/closure/closure.ml[745,28382+15]..[745,28382+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[745,28382+25]..[745,28382+36])
                                                        Pexp_apply
                                                        expression (middle_end/closure/closure.ml[745,28382+26]..[745,28382+32])
                                                          Pexp_ident "VP.var" (middle_end/closure/closure.ml[745,28382+26]..[745,28382+32])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[745,28382+33]..[745,28382+35])
                                                              Pexp_ident "p1" (middle_end/closure/closure.ml[745,28382+33]..[745,28382+35])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[745,28382+37]..[745,28382+39])
                                                        Pexp_ident "a1" (middle_end/closure/closure.ml[745,28382+37]..[745,28382+39])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[745,28382+40]..[745,28382+45])
                                                        Pexp_ident "subst" (middle_end/closure/closure.ml[745,28382+40]..[745,28382+45])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[745,28382+47]..[745,28382+49])
                                                  Pexp_ident "pl" (middle_end/closure/closure.ml[745,28382+47]..[745,28382+49])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[745,28382+50]..[745,28382+52])
                                                  Pexp_ident "al" (middle_end/closure/closure.ml[745,28382+50]..[745,28382+52])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[745,28382+53]..[745,28382+57])
                                                  Pexp_ident "body" (middle_end/closure/closure.ml[745,28382+53]..[745,28382+57])
                                            ]
                                          Some
                                            expression (middle_end/closure/closure.ml[746,28440+13]..[761,29064+11])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/closure/closure.ml[747,28459+14]..[747,28459+17])
                                                    Ppat_var "p1'" (middle_end/closure/closure.ml[747,28459+14]..[747,28459+17])
                                                  expression (middle_end/closure/closure.ml[747,28459+20]..[747,28459+32])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[747,28459+20]..[747,28459+29])
                                                      Pexp_ident "VP.rename" (middle_end/closure/closure.ml[747,28459+20]..[747,28459+29])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[747,28459+30]..[747,28459+32])
                                                          Pexp_ident "p1" (middle_end/closure/closure.ml[747,28459+30]..[747,28459+32])
                                                    ]
                                              ]
                                              expression (middle_end/closure/closure.ml[748,28495+10]..[760,29028+35])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/closure/closure.ml[748,28495+14]..[748,28495+20])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/closure/closure.ml[748,28495+14]..[748,28495+16])
                                                          Ppat_var "u1" (middle_end/closure/closure.ml[748,28495+14]..[748,28495+16])
                                                        pattern (middle_end/closure/closure.ml[748,28495+18]..[748,28495+20])
                                                          Ppat_var "u2" (middle_end/closure/closure.ml[748,28495+18]..[748,28495+20])
                                                      ]
                                                    expression (middle_end/closure/closure.ml[749,28518+12]..[754,28761+37])
                                                      Pexp_match
                                                      expression (middle_end/closure/closure.ml[749,28518+18]..[749,28518+32])
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/closure/closure.ml[749,28518+18]..[749,28518+28])
                                                            Pexp_apply
                                                            expression (middle_end/closure/closure.ml[749,28518+18]..[749,28518+25])
                                                              Pexp_ident "VP.name" (middle_end/closure/closure.ml[749,28518+18]..[749,28518+25])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/closure/closure.ml[749,28518+26]..[749,28518+28])
                                                                  Pexp_ident "p1" (middle_end/closure/closure.ml[749,28518+26]..[749,28518+28])
                                                            ]
                                                          expression (middle_end/closure/closure.ml[749,28518+30]..[749,28518+32])
                                                            Pexp_ident "a1" (middle_end/closure/closure.ml[749,28518+30]..[749,28518+32])
                                                        ]
                                                      [
                                                        <case>
                                                          pattern (middle_end/closure/closure.ml[750,28556+14]..[750,28556+72])
                                                            Ppat_tuple
                                                            [
                                                              pattern (middle_end/closure/closure.ml[750,28556+14]..[750,28556+21])
                                                                Ppat_constant PConst_string("*opt*",(middle_end/closure/closure.ml[750,28556+15]..[750,28556+20]),None)
                                                              pattern (middle_end/closure/closure.ml[750,28556+23]..[750,28556+72])
                                                                Ppat_construct "Uprim" (middle_end/closure/closure.ml[750,28556+23]..[750,28556+28])
                                                                Some
                                                                  []
                                                                  pattern (middle_end/closure/closure.ml[750,28556+28]..[750,28556+72])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (middle_end/closure/closure.ml[750,28556+29]..[750,28556+61])
Ppat_construct "P.Pmakeblock" (middle_end/closure/closure.ml[750,28556+29]..[750,28556+41])
Some
  []
  pattern (middle_end/closure/closure.ml[750,28556+41]..[750,28556+61])
    Ppat_tuple
    [
      pattern (middle_end/closure/closure.ml[750,28556+42]..[750,28556+43])
        Ppat_constant PConst_int (0,None)
      pattern (middle_end/closure/closure.ml[750,28556+45]..[750,28556+54])
        Ppat_construct "Immutable" (middle_end/closure/closure.ml[750,28556+45]..[750,28556+54])
        None
      pattern (middle_end/closure/closure.ml[750,28556+56]..[750,28556+60])
        Ppat_var "kind" (middle_end/closure/closure.ml[750,28556+56]..[750,28556+60])
    ]
                                                                      pattern (middle_end/closure/closure.ml[750,28556+63]..[750,28556+66])
Ppat_construct "::" (middle_end/closure/closure.ml[750,28556+64]..[750,28556+66]) ghost
Some
  []
  pattern (middle_end/closure/closure.ml[750,28556+64]..[750,28556+66]) ghost
    Ppat_tuple
    [
      pattern (middle_end/closure/closure.ml[750,28556+64]..[750,28556+65])
        Ppat_var "a" (middle_end/closure/closure.ml[750,28556+64]..[750,28556+65])
      pattern (middle_end/closure/closure.ml[750,28556+65]..[750,28556+66]) ghost
        Ppat_construct "[]" (middle_end/closure/closure.ml[750,28556+65]..[750,28556+66]) ghost
        None
    ]
                                                                      pattern (middle_end/closure/closure.ml[750,28556+68]..[750,28556+71])
Ppat_var "dbg" (middle_end/closure/closure.ml[750,28556+68]..[750,28556+71])
                                                                    ]
                                                            ]
                                                          expression (middle_end/closure/closure.ml[751,28632+16]..[752,28691+50])
                                                            Pexp_tuple
                                                            [
                                                              expression (middle_end/closure/closure.ml[751,28632+16]..[751,28632+17])
                                                                Pexp_ident "a" (middle_end/closure/closure.ml[751,28632+16]..[751,28632+17])
                                                              expression (middle_end/closure/closure.ml[751,28632+19]..[752,28691+50])
                                                                Pexp_construct "Uprim" (middle_end/closure/closure.ml[751,28632+19]..[751,28632+24])
                                                                Some
                                                                  expression (middle_end/closure/closure.ml[751,28632+24]..[752,28691+50])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (middle_end/closure/closure.ml[751,28632+25]..[751,28632+57])
Pexp_construct "P.Pmakeblock" (middle_end/closure/closure.ml[751,28632+25]..[751,28632+37])
Some
  expression (middle_end/closure/closure.ml[751,28632+37]..[751,28632+57])
    Pexp_tuple
    [
      expression (middle_end/closure/closure.ml[751,28632+38]..[751,28632+39])
        Pexp_constant PConst_int (0,None)
      expression (middle_end/closure/closure.ml[751,28632+41]..[751,28632+50])
        Pexp_construct "Immutable" (middle_end/closure/closure.ml[751,28632+41]..[751,28632+50])
        None
      expression (middle_end/closure/closure.ml[751,28632+52]..[751,28632+56])
        Pexp_ident "kind" (middle_end/closure/closure.ml[751,28632+52]..[751,28632+56])
    ]
                                                                      expression (middle_end/closure/closure.ml[752,28691+25]..[752,28691+44])
Pexp_construct "::" (middle_end/closure/closure.ml[752,28691+26]..[752,28691+44]) ghost
Some
  expression (middle_end/closure/closure.ml[752,28691+26]..[752,28691+44]) ghost
    Pexp_tuple
    [
      expression (middle_end/closure/closure.ml[752,28691+26]..[752,28691+43])
        Pexp_construct "Uvar" (middle_end/closure/closure.ml[752,28691+26]..[752,28691+30])
        Some
          expression (middle_end/closure/closure.ml[752,28691+31]..[752,28691+43])
            Pexp_apply
            expression (middle_end/closure/closure.ml[752,28691+32]..[752,28691+38])
              Pexp_ident "VP.var" (middle_end/closure/closure.ml[752,28691+32]..[752,28691+38])
            [
              <arg>
              Nolabel
                expression (middle_end/closure/closure.ml[752,28691+39]..[752,28691+42])
                  Pexp_ident "p1'" (middle_end/closure/closure.ml[752,28691+39]..[752,28691+42])
            ]
      expression (middle_end/closure/closure.ml[752,28691+43]..[752,28691+44]) ghost
        Pexp_construct "[]" (middle_end/closure/closure.ml[752,28691+43]..[752,28691+44]) ghost
        None
    ]
                                                                      expression (middle_end/closure/closure.ml[752,28691+46]..[752,28691+49])
Pexp_ident "dbg" (middle_end/closure/closure.ml[752,28691+46]..[752,28691+49])
                                                                    ]
                                                            ]
                                                        <case>
                                                          pattern (middle_end/closure/closure.ml[753,28742+14]..[753,28742+15])
                                                            Ppat_any
                                                          expression (middle_end/closure/closure.ml[754,28761+16]..[754,28761+37])
                                                            Pexp_tuple
                                                            [
                                                              expression (middle_end/closure/closure.ml[754,28761+16]..[754,28761+18])
                                                                Pexp_ident "a1" (middle_end/closure/closure.ml[754,28761+16]..[754,28761+18])
                                                              expression (middle_end/closure/closure.ml[754,28761+20]..[754,28761+37])
                                                                Pexp_construct "Uvar" (middle_end/closure/closure.ml[754,28761+20]..[754,28761+24])
                                                                Some
                                                                  expression (middle_end/closure/closure.ml[754,28761+25]..[754,28761+37])
                                                                    Pexp_apply
                                                                    expression (middle_end/closure/closure.ml[754,28761+26]..[754,28761+32])
                                                                      Pexp_ident "VP.var" (middle_end/closure/closure.ml[754,28761+26]..[754,28761+32])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/closure/closure.ml[754,28761+33]..[754,28761+36])
  Pexp_ident "p1'" (middle_end/closure/closure.ml[754,28761+33]..[754,28761+36])
                                                                    ]
                                                            ]
                                                      ]
                                                ]
                                                expression (middle_end/closure/closure.ml[756,28812+10]..[760,29028+35])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/closure/closure.ml[756,28812+14]..[756,28812+19])
                                                        Ppat_var "body'" (middle_end/closure/closure.ml[756,28812+14]..[756,28812+19])
                                                      expression (middle_end/closure/closure.ml[756,28812+22]..[756,28812+69])
                                                        Pexp_apply
                                                        expression (middle_end/closure/closure.ml[756,28812+22]..[756,28812+25])
                                                          Pexp_ident "aux" (middle_end/closure/closure.ml[756,28812+22]..[756,28812+25])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[756,28812+26]..[756,28812+58])
                                                              Pexp_apply
                                                              expression (middle_end/closure/closure.ml[756,28812+27]..[756,28812+36])
                                                                Pexp_ident "V.Map.add" (middle_end/closure/closure.ml[756,28812+27]..[756,28812+36])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/closure/closure.ml[756,28812+37]..[756,28812+48])
                                                                    Pexp_apply
                                                                    expression (middle_end/closure/closure.ml[756,28812+38]..[756,28812+44])
                                                                      Pexp_ident "VP.var" (middle_end/closure/closure.ml[756,28812+38]..[756,28812+44])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/closure/closure.ml[756,28812+45]..[756,28812+47])
  Pexp_ident "p1" (middle_end/closure/closure.ml[756,28812+45]..[756,28812+47])
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/closure/closure.ml[756,28812+49]..[756,28812+51])
                                                                    Pexp_ident "u2" (middle_end/closure/closure.ml[756,28812+49]..[756,28812+51])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/closure/closure.ml[756,28812+52]..[756,28812+57])
                                                                    Pexp_ident "subst" (middle_end/closure/closure.ml[756,28812+52]..[756,28812+57])
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[756,28812+59]..[756,28812+61])
                                                              Pexp_ident "pl" (middle_end/closure/closure.ml[756,28812+59]..[756,28812+61])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[756,28812+62]..[756,28812+64])
                                                              Pexp_ident "al" (middle_end/closure/closure.ml[756,28812+62]..[756,28812+64])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[756,28812+65]..[756,28812+69])
                                                              Pexp_ident "body" (middle_end/closure/closure.ml[756,28812+65]..[756,28812+69])
                                                        ]
                                                  ]
                                                  expression (middle_end/closure/closure.ml[757,28885+10]..[760,29028+35])
                                                    Pexp_ifthenelse
                                                    expression (middle_end/closure/closure.ml[757,28885+13]..[757,28885+40])
                                                      Pexp_apply
                                                      expression (middle_end/closure/closure.ml[757,28885+13]..[757,28885+23])
                                                        Pexp_ident "occurs_var" (middle_end/closure/closure.ml[757,28885+13]..[757,28885+23])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/closure/closure.ml[757,28885+24]..[757,28885+35])
                                                            Pexp_apply
                                                            expression (middle_end/closure/closure.ml[757,28885+25]..[757,28885+31])
                                                              Pexp_ident "VP.var" (middle_end/closure/closure.ml[757,28885+25]..[757,28885+31])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/closure/closure.ml[757,28885+32]..[757,28885+34])
                                                                  Pexp_ident "p1" (middle_end/closure/closure.ml[757,28885+32]..[757,28885+34])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/closure/closure.ml[757,28885+36]..[757,28885+40])
                                                            Pexp_ident "body" (middle_end/closure/closure.ml[757,28885+36]..[757,28885+40])
                                                      ]
                                                    expression (middle_end/closure/closure.ml[758,28931+12]..[758,28931+52])
                                                      Pexp_construct "Ulet" (middle_end/closure/closure.ml[758,28931+12]..[758,28931+16])
                                                      Some
                                                        expression (middle_end/closure/closure.ml[758,28931+16]..[758,28931+52])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/closure/closure.ml[758,28931+17]..[758,28931+26])
                                                              Pexp_construct "Immutable" (middle_end/closure/closure.ml[758,28931+17]..[758,28931+26])
                                                              None
                                                            expression (middle_end/closure/closure.ml[758,28931+28]..[758,28931+35])
                                                              Pexp_construct "Pgenval" (middle_end/closure/closure.ml[758,28931+28]..[758,28931+35])
                                                              None
                                                            expression (middle_end/closure/closure.ml[758,28931+37]..[758,28931+40])
                                                              Pexp_ident "p1'" (middle_end/closure/closure.ml[758,28931+37]..[758,28931+40])
                                                            expression (middle_end/closure/closure.ml[758,28931+42]..[758,28931+44])
                                                              Pexp_ident "u1" (middle_end/closure/closure.ml[758,28931+42]..[758,28931+44])
                                                            expression (middle_end/closure/closure.ml[758,28931+46]..[758,28931+51])
                                                              Pexp_ident "body'" (middle_end/closure/closure.ml[758,28931+46]..[758,28931+51])
                                                          ]
                                                    Some
                                                      expression (middle_end/closure/closure.ml[759,28984+15]..[760,29028+35])
                                                        Pexp_ifthenelse
                                                        expression (middle_end/closure/closure.ml[759,28984+18]..[759,28984+32])
                                                          Pexp_apply
                                                          expression (middle_end/closure/closure.ml[759,28984+18]..[759,28984+29])
                                                            Pexp_ident "is_erasable" (middle_end/closure/closure.ml[759,28984+18]..[759,28984+29])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[759,28984+30]..[759,28984+32])
                                                                Pexp_ident "a1" (middle_end/closure/closure.ml[759,28984+30]..[759,28984+32])
                                                          ]
                                                        expression (middle_end/closure/closure.ml[759,28984+38]..[759,28984+43])
                                                          Pexp_ident "body'" (middle_end/closure/closure.ml[759,28984+38]..[759,28984+43])
                                                        Some
                                                          expression (middle_end/closure/closure.ml[760,29028+15]..[760,29028+35])
                                                            Pexp_construct "Usequence" (middle_end/closure/closure.ml[760,29028+15]..[760,29028+24])
                                                            Some
                                                              expression (middle_end/closure/closure.ml[760,29028+24]..[760,29028+35])
                                                                Pexp_tuple
                                                                [
                                                                  expression (middle_end/closure/closure.ml[760,29028+25]..[760,29028+27])
                                                                    Pexp_ident "a1" (middle_end/closure/closure.ml[760,29028+25]..[760,29028+27])
                                                                  expression (middle_end/closure/closure.ml[760,29028+29]..[760,29028+34])
                                                                    Pexp_ident "body'" (middle_end/closure/closure.ml[760,29028+29]..[760,29028+34])
                                                                ]
                                      <case>
                                        pattern (middle_end/closure/closure.ml[762,29076+6]..[762,29076+12])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[762,29076+7]..[762,29076+8])
                                              Ppat_any
                                            pattern (middle_end/closure/closure.ml[762,29076+10]..[762,29076+11])
                                              Ppat_any
                                          ]
                                        expression (middle_end/closure/closure.ml[762,29076+16]..[762,29076+28])
                                          Pexp_assert
                                          expression (middle_end/closure/closure.ml[762,29076+23]..[762,29076+28])
                                            Pexp_construct "false" (middle_end/closure/closure.ml[762,29076+23]..[762,29076+28])
                                            None
                                    ]
                      ]
                      expression (middle_end/closure/closure.ml[766,29210+2]..[766,29210+56])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[766,29210+2]..[766,29210+5])
                          Pexp_ident "aux" (middle_end/closure/closure.ml[766,29210+2]..[766,29210+5])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[766,29210+6]..[766,29210+17])
                              Pexp_ident "V.Map.empty" (middle_end/closure/closure.ml[766,29210+6]..[766,29210+17])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[766,29210+18]..[766,29210+35])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[766,29210+19]..[766,29210+27])
                                Pexp_ident "List.rev" (middle_end/closure/closure.ml[766,29210+19]..[766,29210+27])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[766,29210+28]..[766,29210+34])
                                    Pexp_ident "params" (middle_end/closure/closure.ml[766,29210+28]..[766,29210+34])
                              ]
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[766,29210+36]..[766,29210+51])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[766,29210+37]..[766,29210+45])
                                Pexp_ident "List.rev" (middle_end/closure/closure.ml[766,29210+37]..[766,29210+45])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[766,29210+46]..[766,29210+50])
                                    Pexp_ident "args" (middle_end/closure/closure.ml[766,29210+46]..[766,29210+50])
                              ]
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[766,29210+52]..[766,29210+56])
                              Pexp_ident "body" (middle_end/closure/closure.ml[766,29210+52]..[766,29210+56])
                        ]
    ]
  structure_item (middle_end/closure/closure.ml[771,29385+0]..[774,29547+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[771,29385+4]..[771,29385+28])
          Ppat_var "warning_if_forced_inline" (middle_end/closure/closure.ml[771,29385+4]..[771,29385+28])
        expression (middle_end/closure/closure.ml[771,29385+29]..[774,29547+44]) ghost
          Pexp_fun
          Labelled "loc"
          None
          pattern (middle_end/closure/closure.ml[771,29385+30]..[771,29385+33])
            Ppat_var "loc" (middle_end/closure/closure.ml[771,29385+30]..[771,29385+33])
          expression (middle_end/closure/closure.ml[771,29385+34]..[774,29547+44]) ghost
            Pexp_fun
            Labelled "attribute"
            None
            pattern (middle_end/closure/closure.ml[771,29385+35]..[771,29385+44])
              Ppat_var "attribute" (middle_end/closure/closure.ml[771,29385+35]..[771,29385+44])
            expression (middle_end/closure/closure.ml[771,29385+45]..[774,29547+44]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/closure/closure.ml[771,29385+45]..[771,29385+52])
                Ppat_var "warning" (middle_end/closure/closure.ml[771,29385+45]..[771,29385+52])
              expression (middle_end/closure/closure.ml[772,29440+2]..[774,29547+44])
                Pexp_ifthenelse
                expression (middle_end/closure/closure.ml[772,29440+5]..[772,29440+30])
                  Pexp_apply
                  expression (middle_end/closure/closure.ml[772,29440+15]..[772,29440+16])
                    Pexp_ident "=" (middle_end/closure/closure.ml[772,29440+15]..[772,29440+16])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure.ml[772,29440+5]..[772,29440+14])
                        Pexp_ident "attribute" (middle_end/closure/closure.ml[772,29440+5]..[772,29440+14])
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure.ml[772,29440+17]..[772,29440+30])
                        Pexp_construct "Always_inline" (middle_end/closure/closure.ml[772,29440+17]..[772,29440+30])
                        None
                  ]
                expression (middle_end/closure/closure.ml[773,29476+4]..[774,29547+44])
                  Pexp_apply
                  expression (middle_end/closure/closure.ml[773,29476+4]..[773,29476+26])
                    Pexp_ident "Location.prerr_warning" (middle_end/closure/closure.ml[773,29476+4]..[773,29476+26])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure.ml[773,29476+27]..[773,29476+70])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[773,29476+28]..[773,29476+65])
                          Pexp_ident "Debuginfo.Scoped_location.to_location" (middle_end/closure/closure.ml[773,29476+28]..[773,29476+65])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[773,29476+66]..[773,29476+69])
                              Pexp_ident "loc" (middle_end/closure/closure.ml[773,29476+66]..[773,29476+69])
                        ]
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure.ml[774,29547+6]..[774,29547+44])
                        Pexp_construct "Warnings.Inlining_impossible" (middle_end/closure/closure.ml[774,29547+7]..[774,29547+35])
                        Some
                          expression (middle_end/closure/closure.ml[774,29547+36]..[774,29547+43])
                            Pexp_ident "warning" (middle_end/closure/closure.ml[774,29547+36]..[774,29547+43])
                  ]
                None
    ]
  structure_item (middle_end/closure/closure.ml[778,29630+0]..[799,30526+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[778,29630+4]..[778,29630+16])
          Ppat_var "direct_apply" (middle_end/closure/closure.ml[778,29630+4]..[778,29630+16])
        expression (middle_end/closure/closure.ml[778,29630+17]..[799,30526+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[778,29630+17]..[778,29630+20])
            Ppat_var "env" (middle_end/closure/closure.ml[778,29630+17]..[778,29630+20])
          expression (middle_end/closure/closure.ml[778,29630+21]..[799,30526+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[778,29630+21]..[778,29630+28])
              Ppat_var "fundesc" (middle_end/closure/closure.ml[778,29630+21]..[778,29630+28])
            expression (middle_end/closure/closure.ml[778,29630+29]..[799,30526+29]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/closure/closure.ml[778,29630+29]..[778,29630+35])
                Ppat_var "ufunct" (middle_end/closure/closure.ml[778,29630+29]..[778,29630+35])
              expression (middle_end/closure/closure.ml[778,29630+36]..[799,30526+29]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (middle_end/closure/closure.ml[778,29630+36]..[778,29630+41])
                  Ppat_var "uargs" (middle_end/closure/closure.ml[778,29630+36]..[778,29630+41])
                expression (middle_end/closure/closure.ml[778,29630+42]..[799,30526+29]) ghost
                  Pexp_fun
                  Labelled "loc"
                  None
                  pattern (middle_end/closure/closure.ml[778,29630+43]..[778,29630+46])
                    Ppat_var "loc" (middle_end/closure/closure.ml[778,29630+43]..[778,29630+46])
                  expression (middle_end/closure/closure.ml[778,29630+47]..[799,30526+29]) ghost
                    Pexp_fun
                    Labelled "attribute"
                    None
                    pattern (middle_end/closure/closure.ml[778,29630+48]..[778,29630+57])
                      Ppat_var "attribute" (middle_end/closure/closure.ml[778,29630+48]..[778,29630+57])
                    expression (middle_end/closure/closure.ml[779,29690+2]..[799,30526+29])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[779,29690+6]..[779,29690+14])
                            Ppat_var "app_args" (middle_end/closure/closure.ml[779,29690+6]..[779,29690+14])
                          expression (middle_end/closure/closure.ml[780,29707+4]..[780,29707+58])
                            Pexp_ifthenelse
                            expression (middle_end/closure/closure.ml[780,29707+7]..[780,29707+25])
                              Pexp_field
                              expression (middle_end/closure/closure.ml[780,29707+7]..[780,29707+14])
                                Pexp_ident "fundesc" (middle_end/closure/closure.ml[780,29707+7]..[780,29707+14])
                              "fun_closed" (middle_end/closure/closure.ml[780,29707+15]..[780,29707+25])
                            expression (middle_end/closure/closure.ml[780,29707+31]..[780,29707+36])
                              Pexp_ident "uargs" (middle_end/closure/closure.ml[780,29707+31]..[780,29707+36])
                            Some
                              expression (middle_end/closure/closure.ml[780,29707+42]..[780,29707+58])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[780,29707+48]..[780,29707+49])
                                  Pexp_ident "@" (middle_end/closure/closure.ml[780,29707+48]..[780,29707+49])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[780,29707+42]..[780,29707+47])
                                      Pexp_ident "uargs" (middle_end/closure/closure.ml[780,29707+42]..[780,29707+47])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[780,29707+50]..[780,29707+58])
                                      Pexp_construct "::" (middle_end/closure/closure.ml[780,29707+51]..[780,29707+58]) ghost
                                      Some
                                        expression (middle_end/closure/closure.ml[780,29707+51]..[780,29707+58]) ghost
                                          Pexp_tuple
                                          [
                                            expression (middle_end/closure/closure.ml[780,29707+51]..[780,29707+57])
                                              Pexp_ident "ufunct" (middle_end/closure/closure.ml[780,29707+51]..[780,29707+57])
                                            expression (middle_end/closure/closure.ml[780,29707+57]..[780,29707+58]) ghost
                                              Pexp_construct "[]" (middle_end/closure/closure.ml[780,29707+57]..[780,29707+58]) ghost
                                              None
                                          ]
                                ]
                      ]
                      expression (middle_end/closure/closure.ml[781,29769+2]..[799,30526+29])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[781,29769+6]..[781,29769+9])
                              Ppat_var "app" (middle_end/closure/closure.ml[781,29769+6]..[781,29769+9])
                            expression (middle_end/closure/closure.ml[782,29781+4]..[790,30164+14])
                              Pexp_match
                              expression (middle_end/closure/closure.ml[782,29781+10]..[782,29781+39])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[782,29781+10]..[782,29781+28])
                                    Pexp_field
                                    expression (middle_end/closure/closure.ml[782,29781+10]..[782,29781+17])
                                      Pexp_ident "fundesc" (middle_end/closure/closure.ml[782,29781+10]..[782,29781+17])
                                    "fun_inline" (middle_end/closure/closure.ml[782,29781+18]..[782,29781+28])
                                  expression (middle_end/closure/closure.ml[782,29781+30]..[782,29781+39])
                                    Pexp_ident "attribute" (middle_end/closure/closure.ml[782,29781+30]..[782,29781+39])
                                ]
                              [
                                <case>
                                  pattern (middle_end/closure/closure.ml[783,29826+6]..[783,29826+31])
                                    Ppat_or
                                    pattern (middle_end/closure/closure.ml[783,29826+6]..[783,29826+21])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/closure/closure.ml[783,29826+6]..[783,29826+7])
                                          Ppat_any
                                        pattern (middle_end/closure/closure.ml[783,29826+9]..[783,29826+21])
                                          Ppat_construct "Never_inline" (middle_end/closure/closure.ml[783,29826+9]..[783,29826+21])
                                          None
                                      ]
                                    pattern (middle_end/closure/closure.ml[783,29826+24]..[783,29826+31])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/closure/closure.ml[783,29826+24]..[783,29826+28])
                                          Ppat_construct "None" (middle_end/closure/closure.ml[783,29826+24]..[783,29826+28])
                                          None
                                        pattern (middle_end/closure/closure.ml[783,29826+30]..[783,29826+31])
                                          Ppat_any
                                      ]
                                  expression (middle_end/closure/closure.ml[784,29861+6]..[787,30003+55])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/closure/closure.ml[784,29861+10]..[784,29861+13])
                                          Ppat_var "dbg" (middle_end/closure/closure.ml[784,29861+10]..[784,29861+13])
                                        expression (middle_end/closure/closure.ml[784,29861+16]..[784,29861+43])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[784,29861+16]..[784,29861+39])
                                            Pexp_ident "Debuginfo.from_location" (middle_end/closure/closure.ml[784,29861+16]..[784,29861+39])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[784,29861+40]..[784,29861+43])
                                                Pexp_ident "loc" (middle_end/closure/closure.ml[784,29861+40]..[784,29861+43])
                                          ]
                                    ]
                                    expression (middle_end/closure/closure.ml[785,29908+8]..[787,30003+55])
                                      Pexp_sequence
                                      expression (middle_end/closure/closure.ml[785,29908+8]..[786,29957+44])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[785,29908+8]..[785,29908+32])
                                          Pexp_ident "warning_if_forced_inline" (middle_end/closure/closure.ml[785,29908+8]..[785,29908+32])
                                        [
                                          <arg>
                                          Labelled "loc"
                                            expression (middle_end/closure/closure.ml[785,29908+34]..[785,29908+37])
                                              Pexp_ident "loc" (middle_end/closure/closure.ml[785,29908+34]..[785,29908+37])
                                          <arg>
                                          Labelled "attribute"
                                            expression (middle_end/closure/closure.ml[785,29908+39]..[785,29908+48])
                                              Pexp_ident "attribute" (middle_end/closure/closure.ml[785,29908+39]..[785,29908+48])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[786,29957+10]..[786,29957+44])
                                              Pexp_constant PConst_string("Function information unavailable",(middle_end/closure/closure.ml[786,29957+11]..[786,29957+43]),None)
                                        ]
                                      expression (middle_end/closure/closure.ml[787,30003+8]..[787,30003+55])
                                        Pexp_construct "Udirect_apply" (middle_end/closure/closure.ml[787,30003+8]..[787,30003+21])
                                        Some
                                          expression (middle_end/closure/closure.ml[787,30003+21]..[787,30003+55])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/closure/closure.ml[787,30003+22]..[787,30003+39])
                                                Pexp_field
                                                expression (middle_end/closure/closure.ml[787,30003+22]..[787,30003+29])
                                                  Pexp_ident "fundesc" (middle_end/closure/closure.ml[787,30003+22]..[787,30003+29])
                                                "fun_label" (middle_end/closure/closure.ml[787,30003+30]..[787,30003+39])
                                              expression (middle_end/closure/closure.ml[787,30003+41]..[787,30003+49])
                                                Pexp_ident "app_args" (middle_end/closure/closure.ml[787,30003+41]..[787,30003+49])
                                              expression (middle_end/closure/closure.ml[787,30003+51]..[787,30003+54])
                                                Pexp_ident "dbg" (middle_end/closure/closure.ml[787,30003+51]..[787,30003+54])
                                            ]
                                <case>
                                  pattern (middle_end/closure/closure.ml[788,30059+6]..[788,30059+27])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[788,30059+6]..[788,30059+24])
                                        Ppat_construct "Some" (middle_end/closure/closure.ml[788,30059+6]..[788,30059+10])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[788,30059+10]..[788,30059+24])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[788,30059+11]..[788,30059+17])
                                                Ppat_var "params" (middle_end/closure/closure.ml[788,30059+11]..[788,30059+17])
                                              pattern (middle_end/closure/closure.ml[788,30059+19]..[788,30059+23])
                                                Ppat_var "body" (middle_end/closure/closure.ml[788,30059+19]..[788,30059+23])
                                            ]
                                      pattern (middle_end/closure/closure.ml[788,30059+26]..[788,30059+27])
                                        Ppat_any
                                    ]
                                  expression (middle_end/closure/closure.ml[789,30091+8]..[790,30164+14])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[789,30091+8]..[789,30091+19])
                                      Pexp_ident "bind_params" (middle_end/closure/closure.ml[789,30091+8]..[789,30091+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[789,30091+20]..[789,30091+23])
                                          Pexp_ident "env" (middle_end/closure/closure.ml[789,30091+20]..[789,30091+23])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[789,30091+24]..[789,30091+27])
                                          Pexp_ident "loc" (middle_end/closure/closure.ml[789,30091+24]..[789,30091+27])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[789,30091+28]..[789,30091+56])
                                          Pexp_field
                                          expression (middle_end/closure/closure.ml[789,30091+28]..[789,30091+35])
                                            Pexp_ident "fundesc" (middle_end/closure/closure.ml[789,30091+28]..[789,30091+35])
                                          "fun_float_const_prop" (middle_end/closure/closure.ml[789,30091+36]..[789,30091+56])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[789,30091+57]..[789,30091+63])
                                          Pexp_ident "params" (middle_end/closure/closure.ml[789,30091+57]..[789,30091+63])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[789,30091+64]..[789,30091+72])
                                          Pexp_ident "app_args" (middle_end/closure/closure.ml[789,30091+64]..[789,30091+72])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[790,30164+10]..[790,30164+14])
                                          Pexp_ident "body" (middle_end/closure/closure.ml[790,30164+10]..[790,30164+14])
                                    ]
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[797,30469+2]..[799,30526+29])
                          Pexp_ifthenelse
                          expression (middle_end/closure/closure.ml[797,30469+5]..[797,30469+45])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[797,30469+28]..[797,30469+30])
                              Pexp_ident "||" (middle_end/closure/closure.ml[797,30469+28]..[797,30469+30])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[797,30469+5]..[797,30469+27])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[797,30469+5]..[797,30469+8])
                                    Pexp_ident "not" (middle_end/closure/closure.ml[797,30469+5]..[797,30469+8])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[797,30469+9]..[797,30469+27])
                                        Pexp_field
                                        expression (middle_end/closure/closure.ml[797,30469+9]..[797,30469+16])
                                          Pexp_ident "fundesc" (middle_end/closure/closure.ml[797,30469+9]..[797,30469+16])
                                        "fun_closed" (middle_end/closure/closure.ml[797,30469+17]..[797,30469+27])
                                  ]
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[797,30469+31]..[797,30469+45])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[797,30469+31]..[797,30469+38])
                                    Pexp_ident "is_pure" (middle_end/closure/closure.ml[797,30469+31]..[797,30469+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[797,30469+39]..[797,30469+45])
                                        Pexp_ident "ufunct" (middle_end/closure/closure.ml[797,30469+39]..[797,30469+45])
                                  ]
                            ]
                          expression (middle_end/closure/closure.ml[798,30515+7]..[798,30515+10])
                            Pexp_ident "app" (middle_end/closure/closure.ml[798,30515+7]..[798,30515+10])
                          Some
                            expression (middle_end/closure/closure.ml[799,30526+7]..[799,30526+29])
                              Pexp_construct "Usequence" (middle_end/closure/closure.ml[799,30526+7]..[799,30526+16])
                              Some
                                expression (middle_end/closure/closure.ml[799,30526+16]..[799,30526+29])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/closure/closure.ml[799,30526+17]..[799,30526+23])
                                      Pexp_ident "ufunct" (middle_end/closure/closure.ml[799,30526+17]..[799,30526+23])
                                    expression (middle_end/closure/closure.ml[799,30526+25]..[799,30526+28])
                                      Pexp_ident "app" (middle_end/closure/closure.ml[799,30526+25]..[799,30526+28])
                                  ]
    ]
  structure_item (middle_end/closure/closure.ml[803,30628+0]..[807,30746+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[803,30628+4]..[803,30628+21])
          Ppat_var "strengthen_approx" (middle_end/closure/closure.ml[803,30628+4]..[803,30628+21])
        expression (middle_end/closure/closure.ml[803,30628+22]..[807,30746+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[803,30628+22]..[803,30628+26])
            Ppat_var "appl" (middle_end/closure/closure.ml[803,30628+22]..[803,30628+26])
          expression (middle_end/closure/closure.ml[803,30628+27]..[807,30746+15]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[803,30628+27]..[803,30628+33])
              Ppat_var "approx" (middle_end/closure/closure.ml[803,30628+27]..[803,30628+33])
            expression (middle_end/closure/closure.ml[804,30664+2]..[807,30746+15])
              Pexp_match
              expression (middle_end/closure/closure.ml[804,30664+8]..[804,30664+24])
                Pexp_apply
                expression (middle_end/closure/closure.ml[804,30664+8]..[804,30664+19])
                  Pexp_ident "approx_ulam" (middle_end/closure/closure.ml[804,30664+8]..[804,30664+19])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/closure/closure.ml[804,30664+20]..[804,30664+24])
                      Pexp_ident "appl" (middle_end/closure/closure.ml[804,30664+20]..[804,30664+24])
                ]
              [
                <case>
                  pattern (middle_end/closure/closure.ml[805,30694+4]..[805,30694+32])
                    Ppat_alias "intapprox" (middle_end/closure/closure.ml[805,30694+23]..[805,30694+32])
                    pattern (middle_end/closure/closure.ml[805,30694+4]..[805,30694+19])
                      Ppat_construct "Value_const" (middle_end/closure/closure.ml[805,30694+5]..[805,30694+16])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[805,30694+17]..[805,30694+18])
                          Ppat_any
                  expression (middle_end/closure/closure.ml[806,30730+6]..[806,30730+15])
                    Pexp_ident "intapprox" (middle_end/closure/closure.ml[806,30730+6]..[806,30730+15])
                <case>
                  pattern (middle_end/closure/closure.ml[807,30746+4]..[807,30746+5])
                    Ppat_any
                  expression (middle_end/closure/closure.ml[807,30746+9]..[807,30746+15])
                    Pexp_ident "approx" (middle_end/closure/closure.ml[807,30746+9]..[807,30746+15])
              ]
    ]
  structure_item (middle_end/closure/closure.ml[812,30862+0]..[824,31306+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[812,30862+4]..[812,30862+25])
          Ppat_var "check_constant_result" (middle_end/closure/closure.ml[812,30862+4]..[812,30862+25])
        expression (middle_end/closure/closure.ml[812,30862+26]..[824,31306+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[812,30862+26]..[812,30862+30])
            Ppat_var "ulam" (middle_end/closure/closure.ml[812,30862+26]..[812,30862+30])
          expression (middle_end/closure/closure.ml[812,30862+31]..[824,31306+23]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[812,30862+31]..[812,30862+37])
              Ppat_var "approx" (middle_end/closure/closure.ml[812,30862+31]..[812,30862+37])
            expression (middle_end/closure/closure.ml[813,30902+2]..[824,31306+23])
              Pexp_match
              expression (middle_end/closure/closure.ml[813,30902+8]..[813,30902+14])
                Pexp_ident "approx" (middle_end/closure/closure.ml[813,30902+8]..[813,30902+14])
              [
                <case>
                  pattern (middle_end/closure/closure.ml[814,30922+4]..[814,30922+17])
                    Ppat_construct "Value_const" (middle_end/closure/closure.ml[814,30922+4]..[814,30922+15])
                    Some
                      []
                      pattern (middle_end/closure/closure.ml[814,30922+16]..[814,30922+17])
                        Ppat_var "c" (middle_end/closure/closure.ml[814,30922+16]..[814,30922+17])
                  <when>
                    expression (middle_end/closure/closure.ml[814,30922+23]..[814,30922+35])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[814,30922+23]..[814,30922+30])
                        Pexp_ident "is_pure" (middle_end/closure/closure.ml[814,30922+23]..[814,30922+30])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[814,30922+31]..[814,30922+35])
                            Pexp_ident "ulam" (middle_end/closure/closure.ml[814,30922+31]..[814,30922+35])
                      ]
                  expression (middle_end/closure/closure.ml[814,30922+39]..[814,30922+51])
                    Pexp_apply
                    expression (middle_end/closure/closure.ml[814,30922+39]..[814,30922+49])
                      Pexp_ident "make_const" (middle_end/closure/closure.ml[814,30922+39]..[814,30922+49])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[814,30922+50]..[814,30922+51])
                          Pexp_ident "c" (middle_end/closure/closure.ml[814,30922+50]..[814,30922+51])
                    ]
                <case>
                  pattern (middle_end/closure/closure.ml[815,30974+4]..[815,30974+30])
                    Ppat_construct "Value_global_field" (middle_end/closure/closure.ml[815,30974+4]..[815,30974+22])
                    Some
                      []
                      pattern (middle_end/closure/closure.ml[815,30974+23]..[815,30974+30])
                        Ppat_tuple
                        [
                          pattern (middle_end/closure/closure.ml[815,30974+24]..[815,30974+26])
                            Ppat_var "id" (middle_end/closure/closure.ml[815,30974+24]..[815,30974+26])
                          pattern (middle_end/closure/closure.ml[815,30974+28]..[815,30974+29])
                            Ppat_var "i" (middle_end/closure/closure.ml[815,30974+28]..[815,30974+29])
                        ]
                  <when>
                    expression (middle_end/closure/closure.ml[815,30974+36]..[815,30974+48])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[815,30974+36]..[815,30974+43])
                        Pexp_ident "is_pure" (middle_end/closure/closure.ml[815,30974+36]..[815,30974+43])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[815,30974+44]..[815,30974+48])
                            Pexp_ident "ulam" (middle_end/closure/closure.ml[815,30974+44]..[815,30974+48])
                      ]
                  expression (middle_end/closure/closure.ml[816,31026+6]..[823,31296+9])
                    Pexp_match
                    expression (middle_end/closure/closure.ml[816,31026+18]..[816,31026+22])
                      Pexp_ident "ulam" (middle_end/closure/closure.ml[816,31026+18]..[816,31026+22])
                    [
                      <case>
                        pattern (middle_end/closure/closure.ml[817,31054+8]..[817,31054+61])
                          Ppat_construct "Uprim" (middle_end/closure/closure.ml[817,31054+8]..[817,31054+13])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[817,31054+13]..[817,31054+61])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[817,31054+14]..[817,31054+24])
                                  Ppat_construct "P.Pfield" (middle_end/closure/closure.ml[817,31054+14]..[817,31054+22])
                                  Some
                                    []
                                    pattern (middle_end/closure/closure.ml[817,31054+23]..[817,31054+24])
                                      Ppat_any
                                pattern (middle_end/closure/closure.ml[817,31054+26]..[817,31054+57])
                                  Ppat_construct "::" (middle_end/closure/closure.ml[817,31054+27]..[817,31054+57]) ghost
                                  Some
                                    []
                                    pattern (middle_end/closure/closure.ml[817,31054+27]..[817,31054+57]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/closure/closure.ml[817,31054+27]..[817,31054+56])
                                          Ppat_construct "Uprim" (middle_end/closure/closure.ml[817,31054+27]..[817,31054+32])
                                          Some
                                            []
                                            pattern (middle_end/closure/closure.ml[817,31054+32]..[817,31054+56])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/closure/closure.ml[817,31054+33]..[817,31054+49])
                                                  Ppat_construct "P.Pread_symbol" (middle_end/closure/closure.ml[817,31054+33]..[817,31054+47])
                                                  Some
                                                    []
                                                    pattern (middle_end/closure/closure.ml[817,31054+48]..[817,31054+49])
                                                      Ppat_any
                                                pattern (middle_end/closure/closure.ml[817,31054+51]..[817,31054+52])
                                                  Ppat_any
                                                pattern (middle_end/closure/closure.ml[817,31054+54]..[817,31054+55])
                                                  Ppat_any
                                              ]
                                        pattern (middle_end/closure/closure.ml[817,31054+56]..[817,31054+57]) ghost
                                          Ppat_construct "[]" (middle_end/closure/closure.ml[817,31054+56]..[817,31054+57]) ghost
                                          None
                                      ]
                                pattern (middle_end/closure/closure.ml[817,31054+59]..[817,31054+60])
                                  Ppat_any
                              ]
                        expression (middle_end/closure/closure.ml[817,31054+65]..[817,31054+79])
                          Pexp_tuple
                          [
                            expression (middle_end/closure/closure.ml[817,31054+66]..[817,31054+70])
                              Pexp_ident "ulam" (middle_end/closure/closure.ml[817,31054+66]..[817,31054+70])
                            expression (middle_end/closure/closure.ml[817,31054+72]..[817,31054+78])
                              Pexp_ident "approx" (middle_end/closure/closure.ml[817,31054+72]..[817,31054+78])
                          ]
                      <case>
                        pattern (middle_end/closure/closure.ml[818,31134+8]..[818,31134+9])
                          Ppat_any
                        expression (middle_end/closure/closure.ml[819,31147+10]..[822,31237+58])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[819,31147+14]..[819,31147+17])
                                Ppat_var "glb" (middle_end/closure/closure.ml[819,31147+14]..[819,31147+17])
                              expression (middle_end/closure/closure.ml[820,31167+12]..[820,31167+56])
                                Pexp_construct "Uprim" (middle_end/closure/closure.ml[820,31167+12]..[820,31167+17])
                                Some
                                  expression (middle_end/closure/closure.ml[820,31167+17]..[820,31167+56])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/closure/closure.ml[820,31167+18]..[820,31167+35])
                                        Pexp_construct "P.Pread_symbol" (middle_end/closure/closure.ml[820,31167+18]..[820,31167+32])
                                        Some
                                          expression (middle_end/closure/closure.ml[820,31167+33]..[820,31167+35])
                                            Pexp_ident "id" (middle_end/closure/closure.ml[820,31167+33]..[820,31167+35])
                                      expression (middle_end/closure/closure.ml[820,31167+37]..[820,31167+39])
                                        Pexp_construct "[]" (middle_end/closure/closure.ml[820,31167+37]..[820,31167+39])
                                        None
                                      expression (middle_end/closure/closure.ml[820,31167+41]..[820,31167+55])
                                        Pexp_ident "Debuginfo.none" (middle_end/closure/closure.ml[820,31167+41]..[820,31167+55])
                                    ]
                          ]
                          expression (middle_end/closure/closure.ml[822,31237+10]..[822,31237+58])
                            Pexp_tuple
                            [
                              expression (middle_end/closure/closure.ml[822,31237+10]..[822,31237+50])
                                Pexp_construct "Uprim" (middle_end/closure/closure.ml[822,31237+10]..[822,31237+15])
                                Some
                                  expression (middle_end/closure/closure.ml[822,31237+15]..[822,31237+50])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/closure/closure.ml[822,31237+16]..[822,31237+26])
                                        Pexp_construct "P.Pfield" (middle_end/closure/closure.ml[822,31237+16]..[822,31237+24])
                                        Some
                                          expression (middle_end/closure/closure.ml[822,31237+25]..[822,31237+26])
                                            Pexp_ident "i" (middle_end/closure/closure.ml[822,31237+25]..[822,31237+26])
                                      expression (middle_end/closure/closure.ml[822,31237+28]..[822,31237+33])
                                        Pexp_construct "::" (middle_end/closure/closure.ml[822,31237+29]..[822,31237+33]) ghost
                                        Some
                                          expression (middle_end/closure/closure.ml[822,31237+29]..[822,31237+33]) ghost
                                            Pexp_tuple
                                            [
                                              expression (middle_end/closure/closure.ml[822,31237+29]..[822,31237+32])
                                                Pexp_ident "glb" (middle_end/closure/closure.ml[822,31237+29]..[822,31237+32])
                                              expression (middle_end/closure/closure.ml[822,31237+32]..[822,31237+33]) ghost
                                                Pexp_construct "[]" (middle_end/closure/closure.ml[822,31237+32]..[822,31237+33]) ghost
                                                None
                                            ]
                                      expression (middle_end/closure/closure.ml[822,31237+35]..[822,31237+49])
                                        Pexp_ident "Debuginfo.none" (middle_end/closure/closure.ml[822,31237+35]..[822,31237+49])
                                    ]
                              expression (middle_end/closure/closure.ml[822,31237+52]..[822,31237+58])
                                Pexp_ident "approx" (middle_end/closure/closure.ml[822,31237+52]..[822,31237+58])
                            ]
                    ]
                <case>
                  pattern (middle_end/closure/closure.ml[824,31306+4]..[824,31306+5])
                    Ppat_any
                  expression (middle_end/closure/closure.ml[824,31306+9]..[824,31306+23])
                    Pexp_tuple
                    [
                      expression (middle_end/closure/closure.ml[824,31306+10]..[824,31306+14])
                        Pexp_ident "ulam" (middle_end/closure/closure.ml[824,31306+10]..[824,31306+14])
                      expression (middle_end/closure/closure.ml[824,31306+16]..[824,31306+22])
                        Pexp_ident "approx" (middle_end/closure/closure.ml[824,31306+16]..[824,31306+22])
                    ]
              ]
    ]
  structure_item (middle_end/closure/closure.ml[829,31435+0]..[830,31495+68])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[829,31435+4]..[829,31435+26])
          Ppat_var "sequence_constant_expr" (middle_end/closure/closure.ml[829,31435+4]..[829,31435+26])
        expression (middle_end/closure/closure.ml[829,31435+27]..[830,31495+68]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[829,31435+27]..[829,31435+32])
            Ppat_var "ulam1" (middle_end/closure/closure.ml[829,31435+27]..[829,31435+32])
          expression (middle_end/closure/closure.ml[829,31435+33]..[830,31495+68]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[829,31435+33]..[829,31435+57])
              Ppat_alias "res2" (middle_end/closure/closure.ml[829,31435+52]..[829,31435+56])
              pattern (middle_end/closure/closure.ml[829,31435+34]..[829,31435+48])
                Ppat_tuple
                [
                  pattern (middle_end/closure/closure.ml[829,31435+34]..[829,31435+39])
                    Ppat_var "ulam2" (middle_end/closure/closure.ml[829,31435+34]..[829,31435+39])
                  pattern (middle_end/closure/closure.ml[829,31435+41]..[829,31435+48])
                    Ppat_var "approx2" (middle_end/closure/closure.ml[829,31435+41]..[829,31435+48])
                ]
            expression (middle_end/closure/closure.ml[830,31495+2]..[830,31495+68])
              Pexp_ifthenelse
              expression (middle_end/closure/closure.ml[830,31495+5]..[830,31495+18])
                Pexp_apply
                expression (middle_end/closure/closure.ml[830,31495+5]..[830,31495+12])
                  Pexp_ident "is_pure" (middle_end/closure/closure.ml[830,31495+5]..[830,31495+12])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/closure/closure.ml[830,31495+13]..[830,31495+18])
                      Pexp_ident "ulam1" (middle_end/closure/closure.ml[830,31495+13]..[830,31495+18])
                ]
              expression (middle_end/closure/closure.ml[830,31495+24]..[830,31495+28])
                Pexp_ident "res2" (middle_end/closure/closure.ml[830,31495+24]..[830,31495+28])
              Some
                expression (middle_end/closure/closure.ml[830,31495+34]..[830,31495+68])
                  Pexp_tuple
                  [
                    expression (middle_end/closure/closure.ml[830,31495+35]..[830,31495+58])
                      Pexp_construct "Usequence" (middle_end/closure/closure.ml[830,31495+35]..[830,31495+44])
                      Some
                        expression (middle_end/closure/closure.ml[830,31495+44]..[830,31495+58])
                          Pexp_tuple
                          [
                            expression (middle_end/closure/closure.ml[830,31495+45]..[830,31495+50])
                              Pexp_ident "ulam1" (middle_end/closure/closure.ml[830,31495+45]..[830,31495+50])
                            expression (middle_end/closure/closure.ml[830,31495+52]..[830,31495+57])
                              Pexp_ident "ulam2" (middle_end/closure/closure.ml[830,31495+52]..[830,31495+57])
                          ]
                    expression (middle_end/closure/closure.ml[830,31495+60]..[830,31495+67])
                      Pexp_ident "approx2" (middle_end/closure/closure.ml[830,31495+60]..[830,31495+67])
                  ]
    ]
  structure_item (middle_end/closure/closure.ml[834,31637+0]..[834,31637+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[834,31637+4]..[834,31637+17])
          Ppat_var "global_approx" (middle_end/closure/closure.ml[834,31637+4]..[834,31637+17])
        expression (middle_end/closure/closure.ml[834,31637+20]..[834,31637+57])
          Pexp_apply
          expression (middle_end/closure/closure.ml[834,31637+20]..[834,31637+23])
            Pexp_ident "ref" (middle_end/closure/closure.ml[834,31637+20]..[834,31637+23])
          [
            <arg>
            Nolabel
              expression (middle_end/closure/closure.ml[834,31637+23]..[834,31637+57])
                Pexp_constraint
                expression (middle_end/closure/closure.ml[834,31637+24]..[834,31637+28])
                  Pexp_array
                  []
                core_type (middle_end/closure/closure.ml[834,31637+31]..[834,31637+56])
                  Ptyp_constr "array" (middle_end/closure/closure.ml[834,31637+51]..[834,31637+56])
                  [
                    core_type (middle_end/closure/closure.ml[834,31637+31]..[834,31637+50])
                      Ptyp_constr "value_approximation" (middle_end/closure/closure.ml[834,31637+31]..[834,31637+50])
                      []
                  ]
          ]
    ]
  structure_item (middle_end/closure/closure.ml[838,31744+0]..[838,31744+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[838,31744+4]..[838,31744+26])
          Ppat_var "function_nesting_depth" (middle_end/closure/closure.ml[838,31744+4]..[838,31744+26])
        expression (middle_end/closure/closure.ml[838,31744+29]..[838,31744+34])
          Pexp_apply
          expression (middle_end/closure/closure.ml[838,31744+29]..[838,31744+32])
            Pexp_ident "ref" (middle_end/closure/closure.ml[838,31744+29]..[838,31744+32])
          [
            <arg>
            Nolabel
              expression (middle_end/closure/closure.ml[838,31744+33]..[838,31744+34])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (middle_end/closure/closure.ml[839,31779+0]..[839,31779+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[839,31779+4]..[839,31779+36])
          Ppat_var "excessive_function_nesting_depth" (middle_end/closure/closure.ml[839,31779+4]..[839,31779+36])
        expression (middle_end/closure/closure.ml[839,31779+39]..[839,31779+40])
          Pexp_constant PConst_int (5,None)
    ]
  structure_item (middle_end/closure/closure.ml[848,32198+0]..[848,32198+19])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (middle_end/closure/closure.ml[848,32198+0]..[848,32198+19])
          pext_name = "NotClosed"
          pext_kind =
            Pext_decl
              []
              None
  structure_item (middle_end/closure/closure.ml[850,32219+0]..[856,32471+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[850,32219+4]..[850,32219+20])
          Ppat_var "close_approx_var" (middle_end/closure/closure.ml[850,32219+4]..[850,32219+20])
        expression (middle_end/closure/closure.ml[850,32219+21]..[856,32471+21]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[850,32219+21]..[850,32219+35])
            Ppat_record Closed
            [
              "fenv" (middle_end/closure/closure.ml[850,32219+23]..[850,32219+27]) ghost
                pattern (middle_end/closure/closure.ml[850,32219+23]..[850,32219+27])
                  Ppat_var "fenv" (middle_end/closure/closure.ml[850,32219+23]..[850,32219+27])
              "cenv" (middle_end/closure/closure.ml[850,32219+29]..[850,32219+33]) ghost
                pattern (middle_end/closure/closure.ml[850,32219+29]..[850,32219+33])
                  Ppat_var "cenv" (middle_end/closure/closure.ml[850,32219+29]..[850,32219+33])
            ]
          expression (middle_end/closure/closure.ml[850,32219+36]..[856,32471+21]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[850,32219+36]..[850,32219+38])
              Ppat_var "id" (middle_end/closure/closure.ml[850,32219+36]..[850,32219+38])
            expression (middle_end/closure/closure.ml[851,32260+2]..[856,32471+21])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/closure/closure.ml[851,32260+6]..[851,32260+12])
                    Ppat_var "approx" (middle_end/closure/closure.ml[851,32260+6]..[851,32260+12])
                  expression (middle_end/closure/closure.ml[851,32260+15]..[851,32260+69])
                    Pexp_try
                    expression (middle_end/closure/closure.ml[851,32260+19]..[851,32260+37])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[851,32260+19]..[851,32260+29])
                        Pexp_ident "V.Map.find" (middle_end/closure/closure.ml[851,32260+19]..[851,32260+29])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[851,32260+30]..[851,32260+32])
                            Pexp_ident "id" (middle_end/closure/closure.ml[851,32260+30]..[851,32260+32])
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[851,32260+33]..[851,32260+37])
                            Pexp_ident "fenv" (middle_end/closure/closure.ml[851,32260+33]..[851,32260+37])
                      ]
                    [
                      <case>
                        pattern (middle_end/closure/closure.ml[851,32260+43]..[851,32260+52])
                          Ppat_construct "Not_found" (middle_end/closure/closure.ml[851,32260+43]..[851,32260+52])
                          None
                        expression (middle_end/closure/closure.ml[851,32260+56]..[851,32260+69])
                          Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[851,32260+56]..[851,32260+69])
                          None
                    ]
              ]
              expression (middle_end/closure/closure.ml[852,32333+2]..[856,32471+21])
                Pexp_match
                expression (middle_end/closure/closure.ml[852,32333+8]..[852,32333+14])
                  Pexp_ident "approx" (middle_end/closure/closure.ml[852,32333+8]..[852,32333+14])
                [
                  <case>
                    pattern (middle_end/closure/closure.ml[853,32353+4]..[853,32353+17])
                      Ppat_construct "Value_const" (middle_end/closure/closure.ml[853,32353+4]..[853,32353+15])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[853,32353+16]..[853,32353+17])
                          Ppat_var "c" (middle_end/closure/closure.ml[853,32353+16]..[853,32353+17])
                    expression (middle_end/closure/closure.ml[853,32353+21]..[853,32353+33])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[853,32353+21]..[853,32353+31])
                        Pexp_ident "make_const" (middle_end/closure/closure.ml[853,32353+21]..[853,32353+31])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[853,32353+32]..[853,32353+33])
                            Pexp_ident "c" (middle_end/closure/closure.ml[853,32353+32]..[853,32353+33])
                      ]
                  <case>
                    pattern (middle_end/closure/closure.ml[854,32387+4]..[854,32387+10])
                      Ppat_var "approx" (middle_end/closure/closure.ml[854,32387+4]..[854,32387+10])
                    expression (middle_end/closure/closure.ml[855,32401+6]..[856,32471+21])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[855,32401+10]..[855,32401+15])
                            Ppat_var "subst" (middle_end/closure/closure.ml[855,32401+10]..[855,32401+15])
                          expression (middle_end/closure/closure.ml[855,32401+18]..[855,32401+66])
                            Pexp_try
                            expression (middle_end/closure/closure.ml[855,32401+22]..[855,32401+40])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[855,32401+22]..[855,32401+32])
                                Pexp_ident "V.Map.find" (middle_end/closure/closure.ml[855,32401+22]..[855,32401+32])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[855,32401+33]..[855,32401+35])
                                    Pexp_ident "id" (middle_end/closure/closure.ml[855,32401+33]..[855,32401+35])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[855,32401+36]..[855,32401+40])
                                    Pexp_ident "cenv" (middle_end/closure/closure.ml[855,32401+36]..[855,32401+40])
                              ]
                            [
                              <case>
                                pattern (middle_end/closure/closure.ml[855,32401+46]..[855,32401+55])
                                  Ppat_construct "Not_found" (middle_end/closure/closure.ml[855,32401+46]..[855,32401+55])
                                  None
                                expression (middle_end/closure/closure.ml[855,32401+59]..[855,32401+66])
                                  Pexp_construct "Uvar" (middle_end/closure/closure.ml[855,32401+59]..[855,32401+63])
                                  Some
                                    expression (middle_end/closure/closure.ml[855,32401+64]..[855,32401+66])
                                      Pexp_ident "id" (middle_end/closure/closure.ml[855,32401+64]..[855,32401+66])
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[856,32471+6]..[856,32471+21])
                        Pexp_tuple
                        [
                          expression (middle_end/closure/closure.ml[856,32471+7]..[856,32471+12])
                            Pexp_ident "subst" (middle_end/closure/closure.ml[856,32471+7]..[856,32471+12])
                          expression (middle_end/closure/closure.ml[856,32471+14]..[856,32471+20])
                            Pexp_ident "approx" (middle_end/closure/closure.ml[856,32471+14]..[856,32471+20])
                        ]
                ]
    ]
  structure_item (middle_end/closure/closure.ml[858,32494+0]..[859,32517+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[858,32494+4]..[858,32494+13])
          Ppat_var "close_var" (middle_end/closure/closure.ml[858,32494+4]..[858,32494+13])
        expression (middle_end/closure/closure.ml[858,32494+14]..[859,32517+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[858,32494+14]..[858,32494+17])
            Ppat_var "env" (middle_end/closure/closure.ml[858,32494+14]..[858,32494+17])
          expression (middle_end/closure/closure.ml[858,32494+18]..[859,32517+52]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[858,32494+18]..[858,32494+20])
              Ppat_var "id" (middle_end/closure/closure.ml[858,32494+18]..[858,32494+20])
            expression (middle_end/closure/closure.ml[859,32517+2]..[859,32517+52])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/closure/closure.ml[859,32517+6]..[859,32517+18])
                    Ppat_tuple
                    [
                      pattern (middle_end/closure/closure.ml[859,32517+7]..[859,32517+11])
                        Ppat_var "ulam" (middle_end/closure/closure.ml[859,32517+7]..[859,32517+11])
                      pattern (middle_end/closure/closure.ml[859,32517+13]..[859,32517+17])
                        Ppat_var "_app" (middle_end/closure/closure.ml[859,32517+13]..[859,32517+17])
                    ]
                  expression (middle_end/closure/closure.ml[859,32517+21]..[859,32517+44])
                    Pexp_apply
                    expression (middle_end/closure/closure.ml[859,32517+21]..[859,32517+37])
                      Pexp_ident "close_approx_var" (middle_end/closure/closure.ml[859,32517+21]..[859,32517+37])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[859,32517+38]..[859,32517+41])
                          Pexp_ident "env" (middle_end/closure/closure.ml[859,32517+38]..[859,32517+41])
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[859,32517+42]..[859,32517+44])
                          Pexp_ident "id" (middle_end/closure/closure.ml[859,32517+42]..[859,32517+44])
                    ]
              ]
              expression (middle_end/closure/closure.ml[859,32517+48]..[859,32517+52])
                Pexp_ident "ulam" (middle_end/closure/closure.ml[859,32517+48]..[859,32517+52])
    ]
  structure_item (middle_end/closure/closure.ml[861,32571+0]..[1410,54140+32])
    Pstr_value Rec
    [
      <def>
        pattern (middle_end/closure/closure.ml[861,32571+8]..[861,32571+13])
          Ppat_var "close" (middle_end/closure/closure.ml[861,32571+8]..[861,32571+13])
        expression (middle_end/closure/closure.ml[861,32571+14]..[1184,46188+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[861,32571+14]..[861,32571+61])
            Ppat_alias "env" (middle_end/closure/closure.ml[861,32571+57]..[861,32571+60])
            pattern (middle_end/closure/closure.ml[861,32571+15]..[861,32571+53])
              Ppat_record Closed
              [
                "backend" (middle_end/closure/closure.ml[861,32571+17]..[861,32571+24]) ghost
                  pattern (middle_end/closure/closure.ml[861,32571+17]..[861,32571+24])
                    Ppat_var "backend" (middle_end/closure/closure.ml[861,32571+17]..[861,32571+24])
                "fenv" (middle_end/closure/closure.ml[861,32571+26]..[861,32571+30]) ghost
                  pattern (middle_end/closure/closure.ml[861,32571+26]..[861,32571+30])
                    Ppat_var "fenv" (middle_end/closure/closure.ml[861,32571+26]..[861,32571+30])
                "cenv" (middle_end/closure/closure.ml[861,32571+32]..[861,32571+36]) ghost
                  pattern (middle_end/closure/closure.ml[861,32571+32]..[861,32571+36])
                    Ppat_var "cenv" (middle_end/closure/closure.ml[861,32571+32]..[861,32571+36])
                "mutable_vars" (middle_end/closure/closure.ml[861,32571+39]..[861,32571+51]) ghost
                  pattern (middle_end/closure/closure.ml[861,32571+39]..[861,32571+51])
                    Ppat_var "mutable_vars" (middle_end/closure/closure.ml[861,32571+39]..[861,32571+51])
              ]
          expression (middle_end/closure/closure.ml[861,32571+62]..[1184,46188+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[861,32571+62]..[861,32571+65])
              Ppat_var "lam" (middle_end/closure/closure.ml[861,32571+62]..[861,32571+65])
            expression (middle_end/closure/closure.ml[862,32639+2]..[1184,46188+18])
              Pexp_letmodule "B" (middle_end/closure/closure.ml[862,32639+13]..[862,32639+14])
              module_expr (middle_end/closure/closure.ml[862,32639+17]..[862,32639+47])
                Pmod_unpack
                expression (middle_end/closure/closure.ml[862,32639+22]..[862,32639+46]) ghost
                  Pexp_constraint
                  expression (middle_end/closure/closure.ml[862,32639+22]..[862,32639+29])
                    Pexp_ident "backend" (middle_end/closure/closure.ml[862,32639+22]..[862,32639+29])
                  core_type (middle_end/closure/closure.ml[862,32639+32]..[862,32639+46])
                    Ptyp_package "Backend_intf.S" (middle_end/closure/closure.ml[862,32639+32]..[862,32639+46])
                    []
              expression (middle_end/closure/closure.ml[863,32690+2]..[1184,46188+18])
                Pexp_match
                expression (middle_end/closure/closure.ml[863,32690+8]..[863,32690+11])
                  Pexp_ident "lam" (middle_end/closure/closure.ml[863,32690+8]..[863,32690+11])
                [
                  <case>
                    pattern (middle_end/closure/closure.ml[864,32707+4]..[864,32707+11])
                      Ppat_construct "Lvar" (middle_end/closure/closure.ml[864,32707+4]..[864,32707+8])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[864,32707+9]..[864,32707+11])
                          Ppat_var "id" (middle_end/closure/closure.ml[864,32707+9]..[864,32707+11])
                    expression (middle_end/closure/closure.ml[865,32722+5]..[865,32722+28])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[865,32722+5]..[865,32722+21])
                        Pexp_ident "close_approx_var" (middle_end/closure/closure.ml[865,32722+5]..[865,32722+21])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[865,32722+22]..[865,32722+25])
                            Pexp_ident "env" (middle_end/closure/closure.ml[865,32722+22]..[865,32722+25])
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[865,32722+26]..[865,32722+28])
                            Pexp_ident "id" (middle_end/closure/closure.ml[865,32722+26]..[865,32722+28])
                      ]
                  <case>
                    pattern (middle_end/closure/closure.ml[866,32751+4]..[866,32751+14])
                      Ppat_construct "Lmutvar" (middle_end/closure/closure.ml[866,32751+4]..[866,32751+11])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[866,32751+12]..[866,32751+14])
                          Ppat_var "id" (middle_end/closure/closure.ml[866,32751+12]..[866,32751+14])
                    expression (middle_end/closure/closure.ml[866,32751+18]..[866,32751+42])
                      Pexp_tuple
                      [
                        expression (middle_end/closure/closure.ml[866,32751+19]..[866,32751+26])
                          Pexp_construct "Uvar" (middle_end/closure/closure.ml[866,32751+19]..[866,32751+23])
                          Some
                            expression (middle_end/closure/closure.ml[866,32751+24]..[866,32751+26])
                              Pexp_ident "id" (middle_end/closure/closure.ml[866,32751+24]..[866,32751+26])
                        expression (middle_end/closure/closure.ml[866,32751+28]..[866,32751+41])
                          Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[866,32751+28]..[866,32751+41])
                          None
                      ]
                  <case>
                    pattern (middle_end/closure/closure.ml[867,32794+4]..[867,32794+14])
                      Ppat_construct "Lconst" (middle_end/closure/closure.ml[867,32794+4]..[867,32794+10])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[867,32794+11]..[867,32794+14])
                          Ppat_var "cst" (middle_end/closure/closure.ml[867,32794+11]..[867,32794+14])
                    expression (middle_end/closure/closure.ml[868,32812+6]..[897,34243+29])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[868,32812+10]..[868,32812+13])
                            Ppat_var "str" (middle_end/closure/closure.ml[868,32812+10]..[868,32812+13])
                          expression (middle_end/closure/closure.ml[868,32812+14]..[872,32935+35]) ghost
                            Pexp_fun
                            Optional "shared"
                            Some
                              expression (middle_end/closure/closure.ml[868,32812+25]..[868,32812+29])
                                Pexp_construct "true" (middle_end/closure/closure.ml[868,32812+25]..[868,32812+29])
                                None
                            pattern (middle_end/closure/closure.ml[868,32812+16]..[868,32812+22])
                              Ppat_var "shared" (middle_end/closure/closure.ml[868,32812+16]..[868,32812+22])
                            expression (middle_end/closure/closure.ml[868,32812+31]..[872,32935+35]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/closure/closure.ml[868,32812+31]..[868,32812+34])
                                Ppat_var "cst" (middle_end/closure/closure.ml[868,32812+31]..[868,32812+34])
                              expression (middle_end/closure/closure.ml[869,32849+8]..[872,32935+35])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/closure/closure.ml[869,32849+12]..[869,32849+16])
                                      Ppat_var "name" (middle_end/closure/closure.ml[869,32849+12]..[869,32849+16])
                                    expression (middle_end/closure/closure.ml[870,32868+10]..[870,32868+55])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[870,32868+10]..[870,32868+43])
                                        Pexp_ident "Compilenv.new_structured_constant" (middle_end/closure/closure.ml[870,32868+10]..[870,32868+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[870,32868+44]..[870,32868+47])
                                            Pexp_ident "cst" (middle_end/closure/closure.ml[870,32868+44]..[870,32868+47])
                                        <arg>
                                        Labelled "shared"
                                          expression (middle_end/closure/closure.ml[870,32868+49]..[870,32868+55])
                                            Pexp_ident "shared" (middle_end/closure/closure.ml[870,32868+49]..[870,32868+55])
                                      ]
                                ]
                                expression (middle_end/closure/closure.ml[872,32935+8]..[872,32935+35])
                                  Pexp_construct "Uconst_ref" (middle_end/closure/closure.ml[872,32935+8]..[872,32935+18])
                                  Some
                                    expression (middle_end/closure/closure.ml[872,32935+19]..[872,32935+35])
                                      Pexp_tuple
                                      [
                                        expression (middle_end/closure/closure.ml[872,32935+20]..[872,32935+24])
                                          Pexp_ident "name" (middle_end/closure/closure.ml[872,32935+20]..[872,32935+24])
                                        expression (middle_end/closure/closure.ml[872,32935+26]..[872,32935+34])
                                          Pexp_construct "Some" (middle_end/closure/closure.ml[872,32935+26]..[872,32935+30])
                                          Some
                                            expression (middle_end/closure/closure.ml[872,32935+31]..[872,32935+34])
                                              Pexp_ident "cst" (middle_end/closure/closure.ml[872,32935+31]..[872,32935+34])
                                      ]
                      ]
                      expression (middle_end/closure/closure.ml[874,32980+6]..[897,34243+29])
                        Pexp_let Rec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[874,32980+14]..[874,32980+20])
                              Ppat_var "transl" (middle_end/closure/closure.ml[874,32980+14]..[874,32980+20])
                            expression (middle_end/closure/closure.ml[874,32980+23]..[895,34166+67])
                              Pexp_function
                              [
                                <case>
                                  pattern (middle_end/closure/closure.ml[875,33012+10]..[875,33012+33])
                                    Ppat_construct "Const_base" (middle_end/closure/closure.ml[875,33012+10]..[875,33012+20])
                                    Some
                                      []
                                      pattern (middle_end/closure/closure.ml[875,33012+20]..[875,33012+33])
                                        Ppat_construct "Const_int" (middle_end/closure/closure.ml[875,33012+21]..[875,33012+30])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[875,33012+31]..[875,33012+32])
                                            Ppat_var "n" (middle_end/closure/closure.ml[875,33012+31]..[875,33012+32])
                                  expression (middle_end/closure/closure.ml[875,33012+37]..[875,33012+49])
                                    Pexp_construct "Uconst_int" (middle_end/closure/closure.ml[875,33012+37]..[875,33012+47])
                                    Some
                                      expression (middle_end/closure/closure.ml[875,33012+48]..[875,33012+49])
                                        Pexp_ident "n" (middle_end/closure/closure.ml[875,33012+48]..[875,33012+49])
                                <case>
                                  pattern (middle_end/closure/closure.ml[876,33062+10]..[876,33062+34])
                                    Ppat_construct "Const_base" (middle_end/closure/closure.ml[876,33062+10]..[876,33062+20])
                                    Some
                                      []
                                      pattern (middle_end/closure/closure.ml[876,33062+20]..[876,33062+34])
                                        Ppat_construct "Const_char" (middle_end/closure/closure.ml[876,33062+21]..[876,33062+31])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[876,33062+32]..[876,33062+33])
                                            Ppat_var "c" (middle_end/closure/closure.ml[876,33062+32]..[876,33062+33])
                                  expression (middle_end/closure/closure.ml[876,33062+38]..[876,33062+62])
                                    Pexp_construct "Uconst_int" (middle_end/closure/closure.ml[876,33062+38]..[876,33062+48])
                                    Some
                                      expression (middle_end/closure/closure.ml[876,33062+49]..[876,33062+62])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[876,33062+50]..[876,33062+59])
                                          Pexp_ident "Char.code" (middle_end/closure/closure.ml[876,33062+50]..[876,33062+59])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[876,33062+60]..[876,33062+61])
                                              Pexp_ident "c" (middle_end/closure/closure.ml[876,33062+60]..[876,33062+61])
                                        ]
                                <case>
                                  pattern (middle_end/closure/closure.ml[877,33125+10]..[877,33125+35])
                                    Ppat_construct "Const_block" (middle_end/closure/closure.ml[877,33125+10]..[877,33125+21])
                                    Some
                                      []
                                      pattern (middle_end/closure/closure.ml[877,33125+22]..[877,33125+35])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/closure/closure.ml[877,33125+23]..[877,33125+26])
                                            Ppat_var "tag" (middle_end/closure/closure.ml[877,33125+23]..[877,33125+26])
                                          pattern (middle_end/closure/closure.ml[877,33125+28]..[877,33125+34])
                                            Ppat_var "fields" (middle_end/closure/closure.ml[877,33125+28]..[877,33125+34])
                                        ]
                                  expression (middle_end/closure/closure.ml[878,33164+12]..[878,33164+60])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[878,33164+12]..[878,33164+15])
                                      Pexp_ident "str" (middle_end/closure/closure.ml[878,33164+12]..[878,33164+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[878,33164+16]..[878,33164+60])
                                          Pexp_construct "Uconst_block" (middle_end/closure/closure.ml[878,33164+17]..[878,33164+29])
                                          Some
                                            expression (middle_end/closure/closure.ml[878,33164+30]..[878,33164+59])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/closure/closure.ml[878,33164+31]..[878,33164+34])
                                                  Pexp_ident "tag" (middle_end/closure/closure.ml[878,33164+31]..[878,33164+34])
                                                expression (middle_end/closure/closure.ml[878,33164+36]..[878,33164+58])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[878,33164+36]..[878,33164+44])
                                                    Pexp_ident "List.map" (middle_end/closure/closure.ml[878,33164+36]..[878,33164+44])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[878,33164+45]..[878,33164+51])
                                                        Pexp_ident "transl" (middle_end/closure/closure.ml[878,33164+45]..[878,33164+51])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[878,33164+52]..[878,33164+58])
                                                        Pexp_ident "fields" (middle_end/closure/closure.ml[878,33164+52]..[878,33164+58])
                                                  ]
                                              ]
                                    ]
                                <case>
                                  pattern (middle_end/closure/closure.ml[879,33225+10]..[879,33225+30])
                                    Ppat_construct "Const_float_array" (middle_end/closure/closure.ml[879,33225+10]..[879,33225+27])
                                    Some
                                      []
                                      pattern (middle_end/closure/closure.ml[879,33225+28]..[879,33225+30])
                                        Ppat_var "sl" (middle_end/closure/closure.ml[879,33225+28]..[879,33225+30])
                                  expression (middle_end/closure/closure.ml[881,33320+12]..[881,33320+66])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[881,33320+12]..[881,33320+15])
                                      Pexp_ident "str" (middle_end/closure/closure.ml[881,33320+12]..[881,33320+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[881,33320+16]..[881,33320+66])
                                          Pexp_construct "Uconst_float_array" (middle_end/closure/closure.ml[881,33320+17]..[881,33320+35])
                                          Some
                                            expression (middle_end/closure/closure.ml[881,33320+36]..[881,33320+65])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[881,33320+37]..[881,33320+45])
                                                Pexp_ident "List.map" (middle_end/closure/closure.ml[881,33320+37]..[881,33320+45])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[881,33320+46]..[881,33320+61])
                                                    Pexp_ident "float_of_string" (middle_end/closure/closure.ml[881,33320+46]..[881,33320+61])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[881,33320+62]..[881,33320+64])
                                                    Pexp_ident "sl" (middle_end/closure/closure.ml[881,33320+62]..[881,33320+64])
                                              ]
                                    ]
                                <case>
                                  pattern (middle_end/closure/closure.ml[882,33387+10]..[882,33387+27])
                                    Ppat_construct "Const_immstring" (middle_end/closure/closure.ml[882,33387+10]..[882,33387+25])
                                    Some
                                      []
                                      pattern (middle_end/closure/closure.ml[882,33387+26]..[882,33387+27])
                                        Ppat_var "s" (middle_end/closure/closure.ml[882,33387+26]..[882,33387+27])
                                  expression (middle_end/closure/closure.ml[883,33418+12]..[883,33418+33])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[883,33418+12]..[883,33418+15])
                                      Pexp_ident "str" (middle_end/closure/closure.ml[883,33418+12]..[883,33418+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[883,33418+16]..[883,33418+33])
                                          Pexp_construct "Uconst_string" (middle_end/closure/closure.ml[883,33418+17]..[883,33418+30])
                                          Some
                                            expression (middle_end/closure/closure.ml[883,33418+31]..[883,33418+32])
                                              Pexp_ident "s" (middle_end/closure/closure.ml[883,33418+31]..[883,33418+32])
                                    ]
                                <case>
                                  pattern (middle_end/closure/closure.ml[884,33452+10]..[884,33452+45])
                                    Ppat_construct "Const_base" (middle_end/closure/closure.ml[884,33452+10]..[884,33452+20])
                                    Some
                                      []
                                      pattern (middle_end/closure/closure.ml[884,33452+21]..[884,33452+45])
                                        Ppat_construct "Const_string" (middle_end/closure/closure.ml[884,33452+22]..[884,33452+34])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[884,33452+35]..[884,33452+44])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[884,33452+36]..[884,33452+37])
                                                Ppat_var "s" (middle_end/closure/closure.ml[884,33452+36]..[884,33452+37])
                                              pattern (middle_end/closure/closure.ml[884,33452+39]..[884,33452+40])
                                                Ppat_any
                                              pattern (middle_end/closure/closure.ml[884,33452+42]..[884,33452+43])
                                                Ppat_any
                                            ]
                                  expression (middle_end/closure/closure.ml[891,33907+12]..[891,33907+60])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[891,33907+12]..[891,33907+15])
                                      Pexp_ident "str" (middle_end/closure/closure.ml[891,33907+12]..[891,33907+15])
                                    [
                                      <arg>
                                      Labelled "shared"
                                        expression (middle_end/closure/closure.ml[891,33907+24]..[891,33907+42])
                                          Pexp_ident "Config.safe_string" (middle_end/closure/closure.ml[891,33907+24]..[891,33907+42])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[891,33907+43]..[891,33907+60])
                                          Pexp_construct "Uconst_string" (middle_end/closure/closure.ml[891,33907+44]..[891,33907+57])
                                          Some
                                            expression (middle_end/closure/closure.ml[891,33907+58]..[891,33907+59])
                                              Pexp_ident "s" (middle_end/closure/closure.ml[891,33907+58]..[891,33907+59])
                                    ]
                                <case>
                                  pattern (middle_end/closure/closure.ml[892,33968+10]..[892,33968+35])
                                    Ppat_construct "Const_base" (middle_end/closure/closure.ml[892,33968+10]..[892,33968+20])
                                    Some
                                      []
                                      pattern (middle_end/closure/closure.ml[892,33968+20]..[892,33968+35])
                                        Ppat_construct "Const_float" (middle_end/closure/closure.ml[892,33968+21]..[892,33968+32])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[892,33968+33]..[892,33968+34])
                                            Ppat_var "x" (middle_end/closure/closure.ml[892,33968+33]..[892,33968+34])
                                  expression (middle_end/closure/closure.ml[892,33968+39]..[892,33968+77])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[892,33968+39]..[892,33968+42])
                                      Pexp_ident "str" (middle_end/closure/closure.ml[892,33968+39]..[892,33968+42])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[892,33968+43]..[892,33968+77])
                                          Pexp_construct "Uconst_float" (middle_end/closure/closure.ml[892,33968+44]..[892,33968+56])
                                          Some
                                            expression (middle_end/closure/closure.ml[892,33968+57]..[892,33968+76])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[892,33968+58]..[892,33968+73])
                                                Pexp_ident "float_of_string" (middle_end/closure/closure.ml[892,33968+58]..[892,33968+73])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[892,33968+74]..[892,33968+75])
                                                    Pexp_ident "x" (middle_end/closure/closure.ml[892,33968+74]..[892,33968+75])
                                              ]
                                    ]
                                <case>
                                  pattern (middle_end/closure/closure.ml[893,34046+10]..[893,34046+35])
                                    Ppat_construct "Const_base" (middle_end/closure/closure.ml[893,34046+10]..[893,34046+20])
                                    Some
                                      []
                                      pattern (middle_end/closure/closure.ml[893,34046+20]..[893,34046+35])
                                        Ppat_construct "Const_int32" (middle_end/closure/closure.ml[893,34046+21]..[893,34046+32])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[893,34046+33]..[893,34046+34])
                                            Ppat_var "x" (middle_end/closure/closure.ml[893,34046+33]..[893,34046+34])
                                  expression (middle_end/closure/closure.ml[893,34046+39]..[893,34046+59])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[893,34046+39]..[893,34046+42])
                                      Pexp_ident "str" (middle_end/closure/closure.ml[893,34046+39]..[893,34046+42])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[893,34046+43]..[893,34046+59])
                                          Pexp_construct "Uconst_int32" (middle_end/closure/closure.ml[893,34046+44]..[893,34046+56])
                                          Some
                                            expression (middle_end/closure/closure.ml[893,34046+57]..[893,34046+58])
                                              Pexp_ident "x" (middle_end/closure/closure.ml[893,34046+57]..[893,34046+58])
                                    ]
                                <case>
                                  pattern (middle_end/closure/closure.ml[894,34106+10]..[894,34106+35])
                                    Ppat_construct "Const_base" (middle_end/closure/closure.ml[894,34106+10]..[894,34106+20])
                                    Some
                                      []
                                      pattern (middle_end/closure/closure.ml[894,34106+20]..[894,34106+35])
                                        Ppat_construct "Const_int64" (middle_end/closure/closure.ml[894,34106+21]..[894,34106+32])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[894,34106+33]..[894,34106+34])
                                            Ppat_var "x" (middle_end/closure/closure.ml[894,34106+33]..[894,34106+34])
                                  expression (middle_end/closure/closure.ml[894,34106+39]..[894,34106+59])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[894,34106+39]..[894,34106+42])
                                      Pexp_ident "str" (middle_end/closure/closure.ml[894,34106+39]..[894,34106+42])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[894,34106+43]..[894,34106+59])
                                          Pexp_construct "Uconst_int64" (middle_end/closure/closure.ml[894,34106+44]..[894,34106+56])
                                          Some
                                            expression (middle_end/closure/closure.ml[894,34106+57]..[894,34106+58])
                                              Pexp_ident "x" (middle_end/closure/closure.ml[894,34106+57]..[894,34106+58])
                                    ]
                                <case>
                                  pattern (middle_end/closure/closure.ml[895,34166+10]..[895,34166+39])
                                    Ppat_construct "Const_base" (middle_end/closure/closure.ml[895,34166+10]..[895,34166+20])
                                    Some
                                      []
                                      pattern (middle_end/closure/closure.ml[895,34166+20]..[895,34166+39])
                                        Ppat_construct "Const_nativeint" (middle_end/closure/closure.ml[895,34166+21]..[895,34166+36])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[895,34166+37]..[895,34166+38])
                                            Ppat_var "x" (middle_end/closure/closure.ml[895,34166+37]..[895,34166+38])
                                  expression (middle_end/closure/closure.ml[895,34166+43]..[895,34166+67])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[895,34166+43]..[895,34166+46])
                                      Pexp_ident "str" (middle_end/closure/closure.ml[895,34166+43]..[895,34166+46])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[895,34166+47]..[895,34166+67])
                                          Pexp_construct "Uconst_nativeint" (middle_end/closure/closure.ml[895,34166+48]..[895,34166+64])
                                          Some
                                            expression (middle_end/closure/closure.ml[895,34166+65]..[895,34166+66])
                                              Pexp_ident "x" (middle_end/closure/closure.ml[895,34166+65]..[895,34166+66])
                                    ]
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[897,34243+6]..[897,34243+29])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[897,34243+6]..[897,34243+16])
                            Pexp_ident "make_const" (middle_end/closure/closure.ml[897,34243+6]..[897,34243+16])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[897,34243+17]..[897,34243+29])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[897,34243+18]..[897,34243+24])
                                  Pexp_ident "transl" (middle_end/closure/closure.ml[897,34243+18]..[897,34243+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[897,34243+25]..[897,34243+28])
                                      Pexp_ident "cst" (middle_end/closure/closure.ml[897,34243+25]..[897,34243+28])
                                ]
                          ]
                  <case>
                    pattern (middle_end/closure/closure.ml[898,34273+4]..[898,34273+24])
                      Ppat_alias "funct" (middle_end/closure/closure.ml[898,34273+19]..[898,34273+24])
                      pattern (middle_end/closure/closure.ml[898,34273+4]..[898,34273+15])
                        Ppat_construct "Lfunction" (middle_end/closure/closure.ml[898,34273+4]..[898,34273+13])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[898,34273+14]..[898,34273+15])
                            Ppat_any
                    expression (middle_end/closure/closure.ml[899,34301+6]..[899,34301+61])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[899,34301+6]..[899,34301+24])
                        Pexp_ident "close_one_function" (middle_end/closure/closure.ml[899,34301+6]..[899,34301+24])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[899,34301+25]..[899,34301+28])
                            Pexp_ident "env" (middle_end/closure/closure.ml[899,34301+25]..[899,34301+28])
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[899,34301+29]..[899,34301+55])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[899,34301+30]..[899,34301+48])
                              Pexp_ident "Ident.create_local" (middle_end/closure/closure.ml[899,34301+30]..[899,34301+48])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[899,34301+49]..[899,34301+54])
                                  Pexp_constant PConst_string("fun",(middle_end/closure/closure.ml[899,34301+50]..[899,34301+53]),None)
                            ]
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[899,34301+56]..[899,34301+61])
                            Pexp_ident "funct" (middle_end/closure/closure.ml[899,34301+56]..[899,34301+61])
                      ]
                  <case>
                    pattern (middle_end/closure/closure.ml[903,34475+4]..[904,34533+31])
                      Ppat_construct "Lapply" (middle_end/closure/closure.ml[903,34475+4]..[903,34475+10])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[903,34475+10]..[904,34533+31])
                          Ppat_record Closed
                          [
                            "ap_func" (middle_end/closure/closure.ml[903,34475+11]..[903,34475+18])
                              pattern (middle_end/closure/closure.ml[903,34475+21]..[903,34475+26])
                                Ppat_var "funct" (middle_end/closure/closure.ml[903,34475+21]..[903,34475+26])
                            "ap_args" (middle_end/closure/closure.ml[903,34475+28]..[903,34475+35])
                              pattern (middle_end/closure/closure.ml[903,34475+38]..[903,34475+42])
                                Ppat_var "args" (middle_end/closure/closure.ml[903,34475+38]..[903,34475+42])
                            "ap_loc" (middle_end/closure/closure.ml[903,34475+44]..[903,34475+50])
                              pattern (middle_end/closure/closure.ml[903,34475+53]..[903,34475+56])
                                Ppat_var "loc" (middle_end/closure/closure.ml[903,34475+53]..[903,34475+56])
                            "ap_inlined" (middle_end/closure/closure.ml[904,34533+8]..[904,34533+18])
                              pattern (middle_end/closure/closure.ml[904,34533+21]..[904,34533+30])
                                Ppat_var "attribute" (middle_end/closure/closure.ml[904,34533+21]..[904,34533+30])
                          ]
                    expression (middle_end/closure/closure.ml[905,34568+6]..[986,38122+9])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[905,34568+10]..[905,34568+15])
                            Ppat_var "nargs" (middle_end/closure/closure.ml[905,34568+10]..[905,34568+15])
                          expression (middle_end/closure/closure.ml[905,34568+18]..[905,34568+34])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[905,34568+18]..[905,34568+29])
                              Pexp_ident "List.length" (middle_end/closure/closure.ml[905,34568+18]..[905,34568+29])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[905,34568+30]..[905,34568+34])
                                  Pexp_ident "args" (middle_end/closure/closure.ml[905,34568+30]..[905,34568+34])
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[906,34606+6]..[986,38122+9])
                        Pexp_match
                        expression (middle_end/closure/closure.ml[906,34606+18]..[906,34606+56])
                          Pexp_tuple
                          [
                            expression (middle_end/closure/closure.ml[906,34606+19]..[906,34606+34])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[906,34606+19]..[906,34606+24])
                                Pexp_ident "close" (middle_end/closure/closure.ml[906,34606+19]..[906,34606+24])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[906,34606+25]..[906,34606+28])
                                    Pexp_ident "env" (middle_end/closure/closure.ml[906,34606+25]..[906,34606+28])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[906,34606+29]..[906,34606+34])
                                    Pexp_ident "funct" (middle_end/closure/closure.ml[906,34606+29]..[906,34606+34])
                              ]
                            expression (middle_end/closure/closure.ml[906,34606+36]..[906,34606+55])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[906,34606+36]..[906,34606+46])
                                Pexp_ident "close_list" (middle_end/closure/closure.ml[906,34606+36]..[906,34606+46])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[906,34606+47]..[906,34606+50])
                                    Pexp_ident "env" (middle_end/closure/closure.ml[906,34606+47]..[906,34606+50])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[906,34606+51]..[906,34606+55])
                                    Pexp_ident "args" (middle_end/closure/closure.ml[906,34606+51]..[906,34606+55])
                              ]
                          ]
                        [
                          <case>
                            pattern (middle_end/closure/closure.ml[907,34668+8]..[908,34723+43])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[907,34668+9]..[907,34668+53])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[907,34668+10]..[907,34668+16])
                                      Ppat_var "ufunct" (middle_end/closure/closure.ml[907,34668+10]..[907,34668+16])
                                    pattern (middle_end/closure/closure.ml[907,34668+18]..[907,34668+52])
                                      Ppat_construct "Value_closure" (middle_end/closure/closure.ml[907,34668+18]..[907,34668+31])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[907,34668+31]..[907,34668+52])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[907,34668+32]..[907,34668+39])
                                              Ppat_var "fundesc" (middle_end/closure/closure.ml[907,34668+32]..[907,34668+39])
                                            pattern (middle_end/closure/closure.ml[907,34668+41]..[907,34668+51])
                                              Ppat_var "approx_res" (middle_end/closure/closure.ml[907,34668+41]..[907,34668+51])
                                          ]
                                  ]
                                pattern (middle_end/closure/closure.ml[908,34723+9]..[908,34723+42])
                                  Ppat_construct "::" (middle_end/closure/closure.ml[908,34723+10]..[908,34723+42]) ghost
                                  Some
                                    []
                                    pattern (middle_end/closure/closure.ml[908,34723+10]..[908,34723+42]) ghost
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/closure/closure.ml[908,34723+10]..[908,34723+41])
                                          Ppat_construct "Uprim" (middle_end/closure/closure.ml[908,34723+10]..[908,34723+15])
                                          Some
                                            []
                                            pattern (middle_end/closure/closure.ml[908,34723+15]..[908,34723+41])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/closure/closure.ml[908,34723+16]..[908,34723+30])
                                                  Ppat_construct "P.Pmakeblock" (middle_end/closure/closure.ml[908,34723+16]..[908,34723+28])
                                                  Some
                                                    []
                                                    pattern (middle_end/closure/closure.ml[908,34723+29]..[908,34723+30])
                                                      Ppat_any
                                                pattern (middle_end/closure/closure.ml[908,34723+32]..[908,34723+37])
                                                  Ppat_var "uargs" (middle_end/closure/closure.ml[908,34723+32]..[908,34723+37])
                                                pattern (middle_end/closure/closure.ml[908,34723+39]..[908,34723+40])
                                                  Ppat_any
                                              ]
                                        pattern (middle_end/closure/closure.ml[908,34723+41]..[908,34723+42]) ghost
                                          Ppat_construct "[]" (middle_end/closure/closure.ml[908,34723+41]..[908,34723+42]) ghost
                                          None
                                      ]
                              ]
                            <when>
                              expression (middle_end/closure/closure.ml[909,34767+13]..[909,34767+52])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[909,34767+31]..[909,34767+32])
                                  Pexp_ident "=" (middle_end/closure/closure.ml[909,34767+31]..[909,34767+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[909,34767+13]..[909,34767+30])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[909,34767+13]..[909,34767+24])
                                        Pexp_ident "List.length" (middle_end/closure/closure.ml[909,34767+13]..[909,34767+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[909,34767+25]..[909,34767+30])
                                            Pexp_ident "uargs" (middle_end/closure/closure.ml[909,34767+25]..[909,34767+30])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[909,34767+33]..[909,34767+52])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[909,34767+33]..[909,34767+34])
                                        Pexp_ident "~-" (middle_end/closure/closure.ml[909,34767+33]..[909,34767+34])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[909,34767+35]..[909,34767+52])
                                            Pexp_field
                                            expression (middle_end/closure/closure.ml[909,34767+35]..[909,34767+42])
                                              Pexp_ident "fundesc" (middle_end/closure/closure.ml[909,34767+35]..[909,34767+42])
                                            "fun_arity" (middle_end/closure/closure.ml[909,34767+43]..[909,34767+52])
                                      ]
                                ]
                            expression (middle_end/closure/closure.ml[910,34823+10]..[912,34912+49])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/closure/closure.ml[910,34823+14]..[910,34823+17])
                                    Ppat_var "app" (middle_end/closure/closure.ml[910,34823+14]..[910,34823+17])
                                  expression (middle_end/closure/closure.ml[911,34843+12]..[911,34843+65])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[911,34843+12]..[911,34843+24])
                                      Pexp_ident "direct_apply" (middle_end/closure/closure.ml[911,34843+12]..[911,34843+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[911,34843+25]..[911,34843+28])
                                          Pexp_ident "env" (middle_end/closure/closure.ml[911,34843+25]..[911,34843+28])
                                      <arg>
                                      Labelled "loc"
                                        expression (middle_end/closure/closure.ml[911,34843+30]..[911,34843+33])
                                          Pexp_ident "loc" (middle_end/closure/closure.ml[911,34843+30]..[911,34843+33])
                                      <arg>
                                      Labelled "attribute"
                                        expression (middle_end/closure/closure.ml[911,34843+35]..[911,34843+44])
                                          Pexp_ident "attribute" (middle_end/closure/closure.ml[911,34843+35]..[911,34843+44])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[911,34843+45]..[911,34843+52])
                                          Pexp_ident "fundesc" (middle_end/closure/closure.ml[911,34843+45]..[911,34843+52])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[911,34843+53]..[911,34843+59])
                                          Pexp_ident "ufunct" (middle_end/closure/closure.ml[911,34843+53]..[911,34843+59])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[911,34843+60]..[911,34843+65])
                                          Pexp_ident "uargs" (middle_end/closure/closure.ml[911,34843+60]..[911,34843+65])
                                    ]
                              ]
                              expression (middle_end/closure/closure.ml[912,34912+10]..[912,34912+49])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[912,34912+11]..[912,34912+14])
                                    Pexp_ident "app" (middle_end/closure/closure.ml[912,34912+11]..[912,34912+14])
                                  expression (middle_end/closure/closure.ml[912,34912+16]..[912,34912+48])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[912,34912+16]..[912,34912+33])
                                      Pexp_ident "strengthen_approx" (middle_end/closure/closure.ml[912,34912+16]..[912,34912+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[912,34912+34]..[912,34912+37])
                                          Pexp_ident "app" (middle_end/closure/closure.ml[912,34912+34]..[912,34912+37])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[912,34912+38]..[912,34912+48])
                                          Pexp_ident "approx_res" (middle_end/closure/closure.ml[912,34912+38]..[912,34912+48])
                                    ]
                                ]
                          <case>
                            pattern (middle_end/closure/closure.ml[913,34962+8]..[913,34962+61])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[913,34962+9]..[913,34962+53])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[913,34962+10]..[913,34962+16])
                                      Ppat_var "ufunct" (middle_end/closure/closure.ml[913,34962+10]..[913,34962+16])
                                    pattern (middle_end/closure/closure.ml[913,34962+18]..[913,34962+52])
                                      Ppat_construct "Value_closure" (middle_end/closure/closure.ml[913,34962+18]..[913,34962+31])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[913,34962+31]..[913,34962+52])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[913,34962+32]..[913,34962+39])
                                              Ppat_var "fundesc" (middle_end/closure/closure.ml[913,34962+32]..[913,34962+39])
                                            pattern (middle_end/closure/closure.ml[913,34962+41]..[913,34962+51])
                                              Ppat_var "approx_res" (middle_end/closure/closure.ml[913,34962+41]..[913,34962+51])
                                          ]
                                  ]
                                pattern (middle_end/closure/closure.ml[913,34962+55]..[913,34962+60])
                                  Ppat_var "uargs" (middle_end/closure/closure.ml[913,34962+55]..[913,34962+60])
                              ]
                            <when>
                              expression (middle_end/closure/closure.ml[914,35024+13]..[914,35024+38])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[914,35024+19]..[914,35024+20])
                                  Pexp_ident "=" (middle_end/closure/closure.ml[914,35024+19]..[914,35024+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[914,35024+13]..[914,35024+18])
                                      Pexp_ident "nargs" (middle_end/closure/closure.ml[914,35024+13]..[914,35024+18])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[914,35024+21]..[914,35024+38])
                                      Pexp_field
                                      expression (middle_end/closure/closure.ml[914,35024+21]..[914,35024+28])
                                        Pexp_ident "fundesc" (middle_end/closure/closure.ml[914,35024+21]..[914,35024+28])
                                      "fun_arity" (middle_end/closure/closure.ml[914,35024+29]..[914,35024+38])
                                ]
                            expression (middle_end/closure/closure.ml[915,35066+10]..[917,35155+49])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/closure/closure.ml[915,35066+14]..[915,35066+17])
                                    Ppat_var "app" (middle_end/closure/closure.ml[915,35066+14]..[915,35066+17])
                                  expression (middle_end/closure/closure.ml[916,35086+12]..[916,35086+65])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[916,35086+12]..[916,35086+24])
                                      Pexp_ident "direct_apply" (middle_end/closure/closure.ml[916,35086+12]..[916,35086+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[916,35086+25]..[916,35086+28])
                                          Pexp_ident "env" (middle_end/closure/closure.ml[916,35086+25]..[916,35086+28])
                                      <arg>
                                      Labelled "loc"
                                        expression (middle_end/closure/closure.ml[916,35086+30]..[916,35086+33])
                                          Pexp_ident "loc" (middle_end/closure/closure.ml[916,35086+30]..[916,35086+33])
                                      <arg>
                                      Labelled "attribute"
                                        expression (middle_end/closure/closure.ml[916,35086+35]..[916,35086+44])
                                          Pexp_ident "attribute" (middle_end/closure/closure.ml[916,35086+35]..[916,35086+44])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[916,35086+45]..[916,35086+52])
                                          Pexp_ident "fundesc" (middle_end/closure/closure.ml[916,35086+45]..[916,35086+52])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[916,35086+53]..[916,35086+59])
                                          Pexp_ident "ufunct" (middle_end/closure/closure.ml[916,35086+53]..[916,35086+59])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[916,35086+60]..[916,35086+65])
                                          Pexp_ident "uargs" (middle_end/closure/closure.ml[916,35086+60]..[916,35086+65])
                                    ]
                              ]
                              expression (middle_end/closure/closure.ml[917,35155+10]..[917,35155+49])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[917,35155+11]..[917,35155+14])
                                    Pexp_ident "app" (middle_end/closure/closure.ml[917,35155+11]..[917,35155+14])
                                  expression (middle_end/closure/closure.ml[917,35155+16]..[917,35155+48])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[917,35155+16]..[917,35155+33])
                                      Pexp_ident "strengthen_approx" (middle_end/closure/closure.ml[917,35155+16]..[917,35155+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[917,35155+34]..[917,35155+37])
                                          Pexp_ident "app" (middle_end/closure/closure.ml[917,35155+34]..[917,35155+37])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[917,35155+38]..[917,35155+48])
                                          Pexp_ident "approx_res" (middle_end/closure/closure.ml[917,35155+38]..[917,35155+48])
                                    ]
                                ]
                          <case>
                            pattern (middle_end/closure/closure.ml[919,35206+8]..[919,35206+65])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[919,35206+9]..[919,35206+57])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[919,35206+10]..[919,35206+16])
                                      Ppat_var "ufunct" (middle_end/closure/closure.ml[919,35206+10]..[919,35206+16])
                                    pattern (middle_end/closure/closure.ml[919,35206+18]..[919,35206+56])
                                      Ppat_alias "fapprox" (middle_end/closure/closure.ml[919,35206+48]..[919,35206+55])
                                      pattern (middle_end/closure/closure.ml[919,35206+19]..[919,35206+44])
                                        Ppat_construct "Value_closure" (middle_end/closure/closure.ml[919,35206+19]..[919,35206+32])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[919,35206+32]..[919,35206+44])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[919,35206+33]..[919,35206+40])
                                                Ppat_var "fundesc" (middle_end/closure/closure.ml[919,35206+33]..[919,35206+40])
                                              pattern (middle_end/closure/closure.ml[919,35206+42]..[919,35206+43])
                                                Ppat_any
                                            ]
                                  ]
                                pattern (middle_end/closure/closure.ml[919,35206+59]..[919,35206+64])
                                  Ppat_var "uargs" (middle_end/closure/closure.ml[919,35206+59]..[919,35206+64])
                              ]
                            <when>
                              expression (middle_end/closure/closure.ml[920,35272+15]..[920,35272+40])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[920,35272+21]..[920,35272+22])
                                  Pexp_ident "<" (middle_end/closure/closure.ml[920,35272+21]..[920,35272+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[920,35272+15]..[920,35272+20])
                                      Pexp_ident "nargs" (middle_end/closure/closure.ml[920,35272+15]..[920,35272+20])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[920,35272+23]..[920,35272+40])
                                      Pexp_field
                                      expression (middle_end/closure/closure.ml[920,35272+23]..[920,35272+30])
                                        Pexp_ident "fundesc" (middle_end/closure/closure.ml[920,35272+23]..[920,35272+30])
                                      "fun_arity" (middle_end/closure/closure.ml[920,35272+31]..[920,35272+40])
                                ]
                            expression (middle_end/closure/closure.ml[921,35316+8]..[960,36890+25])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/closure/closure.ml[921,35316+12]..[921,35316+22])
                                    Ppat_var "first_args" (middle_end/closure/closure.ml[921,35316+12]..[921,35316+22])
                                  expression (middle_end/closure/closure.ml[921,35316+25]..[922,35362+45])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[921,35316+25]..[921,35316+33])
                                      Pexp_ident "List.map" (middle_end/closure/closure.ml[921,35316+25]..[921,35316+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[921,35316+34]..[922,35362+39])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/closure/closure.ml[921,35316+39]..[921,35316+42])
                                            Ppat_var "arg" (middle_end/closure/closure.ml[921,35316+39]..[921,35316+42])
                                          expression (middle_end/closure/closure.ml[922,35362+10]..[922,35362+37])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/closure/closure.ml[922,35362+11]..[922,35362+31])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[922,35362+11]..[922,35362+25])
                                                  Pexp_ident "V.create_local" (middle_end/closure/closure.ml[922,35362+11]..[922,35362+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[922,35362+26]..[922,35362+31])
                                                      Pexp_constant PConst_string("arg",(middle_end/closure/closure.ml[922,35362+27]..[922,35362+30]),None)
                                                ]
                                              expression (middle_end/closure/closure.ml[922,35362+33]..[922,35362+36])
                                                Pexp_ident "arg" (middle_end/closure/closure.ml[922,35362+33]..[922,35362+36])
                                            ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[922,35362+40]..[922,35362+45])
                                          Pexp_ident "uargs" (middle_end/closure/closure.ml[922,35362+40]..[922,35362+45])
                                    ]
                              ]
                              expression (middle_end/closure/closure.ml[923,35411+8]..[960,36890+25])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/closure/closure.ml[923,35411+12]..[923,35411+22])
                                      Ppat_var "final_args" (middle_end/closure/closure.ml[923,35411+12]..[923,35411+22])
                                    expression (middle_end/closure/closure.ml[924,35436+10]..[925,35500+68])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[924,35436+10]..[924,35436+23])
                                        Pexp_ident "Array.to_list" (middle_end/closure/closure.ml[924,35436+10]..[924,35436+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[924,35436+24]..[925,35500+68])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[924,35436+25]..[924,35436+35])
                                              Pexp_ident "Array.init" (middle_end/closure/closure.ml[924,35436+25]..[924,35436+35])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[924,35436+36]..[924,35436+63])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[924,35436+55]..[924,35436+56])
                                                    Pexp_ident "-" (middle_end/closure/closure.ml[924,35436+55]..[924,35436+56])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[924,35436+37]..[924,35436+54])
                                                        Pexp_field
                                                        expression (middle_end/closure/closure.ml[924,35436+37]..[924,35436+44])
                                                          Pexp_ident "fundesc" (middle_end/closure/closure.ml[924,35436+37]..[924,35436+44])
                                                        "fun_arity" (middle_end/closure/closure.ml[924,35436+45]..[924,35436+54])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[924,35436+57]..[924,35436+62])
                                                        Pexp_ident "nargs" (middle_end/closure/closure.ml[924,35436+57]..[924,35436+62])
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[925,35500+36]..[925,35500+67])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (middle_end/closure/closure.ml[925,35500+41]..[925,35500+42])
                                                    Ppat_any
                                                  expression (middle_end/closure/closure.ml[925,35500+46]..[925,35500+66])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[925,35500+46]..[925,35500+60])
                                                      Pexp_ident "V.create_local" (middle_end/closure/closure.ml[925,35500+46]..[925,35500+60])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[925,35500+61]..[925,35500+66])
                                                          Pexp_constant PConst_string("arg",(middle_end/closure/closure.ml[925,35500+62]..[925,35500+65]),None)
                                                    ]
                                            ]
                                      ]
                                ]
                                expression (middle_end/closure/closure.ml[926,35572+8]..[960,36890+25])
                                  Pexp_let Rec
                                  [
                                    <def>
                                      pattern (middle_end/closure/closure.ml[926,35572+16]..[926,35572+20])
                                        Ppat_var "iter" (middle_end/closure/closure.ml[926,35572+16]..[926,35572+20])
                                      expression (middle_end/closure/closure.ml[926,35572+21]..[931,35718+71]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/closure/closure.ml[926,35572+21]..[926,35572+25])
                                          Ppat_var "args" (middle_end/closure/closure.ml[926,35572+21]..[926,35572+25])
                                        expression (middle_end/closure/closure.ml[926,35572+26]..[931,35718+71]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/closure/closure.ml[926,35572+26]..[926,35572+30])
                                            Ppat_var "body" (middle_end/closure/closure.ml[926,35572+26]..[926,35572+30])
                                          expression (middle_end/closure/closure.ml[927,35605+10]..[931,35718+71])
                                            Pexp_match
                                            expression (middle_end/closure/closure.ml[927,35605+16]..[927,35605+20])
                                              Pexp_ident "args" (middle_end/closure/closure.ml[927,35605+16]..[927,35605+20])
                                            [
                                              <case>
                                                pattern (middle_end/closure/closure.ml[928,35631+14]..[928,35631+16])
                                                  Ppat_construct "[]" (middle_end/closure/closure.ml[928,35631+14]..[928,35631+16])
                                                  None
                                                expression (middle_end/closure/closure.ml[928,35631+20]..[928,35631+24])
                                                  Pexp_ident "body" (middle_end/closure/closure.ml[928,35631+20]..[928,35631+24])
                                              <case>
                                                pattern (middle_end/closure/closure.ml[929,35656+14]..[929,35656+34])
                                                  Ppat_construct "::" (middle_end/closure/closure.ml[929,35656+27]..[929,35656+29])
                                                  Some
                                                    []
                                                    pattern (middle_end/closure/closure.ml[929,35656+14]..[929,35656+34]) ghost
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/closure/closure.ml[929,35656+14]..[929,35656+26])
                                                          Ppat_tuple
                                                          [
                                                            pattern (middle_end/closure/closure.ml[929,35656+15]..[929,35656+19])
                                                              Ppat_var "arg1" (middle_end/closure/closure.ml[929,35656+15]..[929,35656+19])
                                                            pattern (middle_end/closure/closure.ml[929,35656+21]..[929,35656+25])
                                                              Ppat_var "arg2" (middle_end/closure/closure.ml[929,35656+21]..[929,35656+25])
                                                          ]
                                                        pattern (middle_end/closure/closure.ml[929,35656+30]..[929,35656+34])
                                                          Ppat_var "args" (middle_end/closure/closure.ml[929,35656+30]..[929,35656+34])
                                                      ]
                                                expression (middle_end/closure/closure.ml[930,35694+14]..[931,35718+71])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[930,35694+14]..[930,35694+18])
                                                    Pexp_ident "iter" (middle_end/closure/closure.ml[930,35694+14]..[930,35694+18])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[930,35694+19]..[930,35694+23])
                                                        Pexp_ident "args" (middle_end/closure/closure.ml[930,35694+19]..[930,35694+23])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[931,35718+16]..[931,35718+71])
                                                        Pexp_construct "Ulet" (middle_end/closure/closure.ml[931,35718+17]..[931,35718+21])
                                                        Some
                                                          expression (middle_end/closure/closure.ml[931,35718+22]..[931,35718+70])
                                                            Pexp_tuple
                                                            [
                                                              expression (middle_end/closure/closure.ml[931,35718+23]..[931,35718+32])
                                                                Pexp_construct "Immutable" (middle_end/closure/closure.ml[931,35718+23]..[931,35718+32])
                                                                None
                                                              expression (middle_end/closure/closure.ml[931,35718+34]..[931,35718+41])
                                                                Pexp_construct "Pgenval" (middle_end/closure/closure.ml[931,35718+34]..[931,35718+41])
                                                                None
                                                              expression (middle_end/closure/closure.ml[931,35718+43]..[931,35718+57])
                                                                Pexp_apply
                                                                expression (middle_end/closure/closure.ml[931,35718+43]..[931,35718+52])
                                                                  Pexp_ident "VP.create" (middle_end/closure/closure.ml[931,35718+43]..[931,35718+52])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/closure/closure.ml[931,35718+53]..[931,35718+57])
                                                                      Pexp_ident "arg1" (middle_end/closure/closure.ml[931,35718+53]..[931,35718+57])
                                                                ]
                                                              expression (middle_end/closure/closure.ml[931,35718+59]..[931,35718+63])
                                                                Pexp_ident "arg2" (middle_end/closure/closure.ml[931,35718+59]..[931,35718+63])
                                                              expression (middle_end/closure/closure.ml[931,35718+65]..[931,35718+69])
                                                                Pexp_ident "body" (middle_end/closure/closure.ml[931,35718+65]..[931,35718+69])
                                                            ]
                                                  ]
                                            ]
                                  ]
                                  expression (middle_end/closure/closure.ml[933,35801+8]..[960,36890+25])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/closure/closure.ml[933,35801+12]..[933,35801+25])
                                          Ppat_var "internal_args" (middle_end/closure/closure.ml[933,35801+12]..[933,35801+25])
                                        expression (middle_end/closure/closure.ml[934,35829+10]..[935,35894+56])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[935,35894+10]..[935,35894+11])
                                            Pexp_ident "@" (middle_end/closure/closure.ml[935,35894+10]..[935,35894+11])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[934,35829+10]..[934,35829+64])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[934,35829+11]..[934,35829+19])
                                                  Pexp_ident "List.map" (middle_end/closure/closure.ml[934,35829+11]..[934,35829+19])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[934,35829+20]..[934,35829+52])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (middle_end/closure/closure.ml[934,35829+25]..[934,35829+38])
                                                        Ppat_tuple
                                                        [
                                                          pattern (middle_end/closure/closure.ml[934,35829+26]..[934,35829+30])
                                                            Ppat_var "arg1" (middle_end/closure/closure.ml[934,35829+26]..[934,35829+30])
                                                          pattern (middle_end/closure/closure.ml[934,35829+32]..[934,35829+37])
                                                            Ppat_var "_arg2" (middle_end/closure/closure.ml[934,35829+32]..[934,35829+37])
                                                        ]
                                                      expression (middle_end/closure/closure.ml[934,35829+42]..[934,35829+51])
                                                        Pexp_construct "Lvar" (middle_end/closure/closure.ml[934,35829+42]..[934,35829+46])
                                                        Some
                                                          expression (middle_end/closure/closure.ml[934,35829+47]..[934,35829+51])
                                                            Pexp_ident "arg1" (middle_end/closure/closure.ml[934,35829+47]..[934,35829+51])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[934,35829+53]..[934,35829+63])
                                                      Pexp_ident "first_args" (middle_end/closure/closure.ml[934,35829+53]..[934,35829+63])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[935,35894+12]..[935,35894+56])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[935,35894+13]..[935,35894+21])
                                                  Pexp_ident "List.map" (middle_end/closure/closure.ml[935,35894+13]..[935,35894+21])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[935,35894+22]..[935,35894+44])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (middle_end/closure/closure.ml[935,35894+27]..[935,35894+30])
                                                        Ppat_var "arg" (middle_end/closure/closure.ml[935,35894+27]..[935,35894+30])
                                                      expression (middle_end/closure/closure.ml[935,35894+34]..[935,35894+42])
                                                        Pexp_construct "Lvar" (middle_end/closure/closure.ml[935,35894+34]..[935,35894+38])
                                                        Some
                                                          expression (middle_end/closure/closure.ml[935,35894+39]..[935,35894+42])
                                                            Pexp_ident "arg" (middle_end/closure/closure.ml[935,35894+39]..[935,35894+42])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[935,35894+45]..[935,35894+55])
                                                      Pexp_ident "final_args" (middle_end/closure/closure.ml[935,35894+45]..[935,35894+55])
                                                ]
                                          ]
                                    ]
                                    expression (middle_end/closure/closure.ml[937,35962+8]..[960,36890+25])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/closure/closure.ml[937,35962+12]..[937,35962+21])
                                            Ppat_var "funct_var" (middle_end/closure/closure.ml[937,35962+12]..[937,35962+21])
                                          expression (middle_end/closure/closure.ml[937,35962+24]..[937,35962+46])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[937,35962+24]..[937,35962+38])
                                              Pexp_ident "V.create_local" (middle_end/closure/closure.ml[937,35962+24]..[937,35962+38])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[937,35962+39]..[937,35962+46])
                                                  Pexp_constant PConst_string("funct",(middle_end/closure/closure.ml[937,35962+40]..[937,35962+45]),None)
                                            ]
                                      ]
                                      expression (middle_end/closure/closure.ml[938,36012+8]..[960,36890+25])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/closure/closure.ml[938,36012+12]..[938,36012+16])
                                              Ppat_var "fenv" (middle_end/closure/closure.ml[938,36012+12]..[938,36012+16])
                                            expression (middle_end/closure/closure.ml[938,36012+19]..[938,36012+51])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[938,36012+19]..[938,36012+28])
                                                Pexp_ident "V.Map.add" (middle_end/closure/closure.ml[938,36012+19]..[938,36012+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[938,36012+29]..[938,36012+38])
                                                    Pexp_ident "funct_var" (middle_end/closure/closure.ml[938,36012+29]..[938,36012+38])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[938,36012+39]..[938,36012+46])
                                                    Pexp_ident "fapprox" (middle_end/closure/closure.ml[938,36012+39]..[938,36012+46])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[938,36012+47]..[938,36012+51])
                                                    Pexp_ident "fenv" (middle_end/closure/closure.ml[938,36012+47]..[938,36012+51])
                                              ]
                                        ]
                                        expression (middle_end/closure/closure.ml[939,36067+8]..[960,36890+25])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/closure/closure.ml[939,36067+12]..[939,36067+29])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/closure/closure.ml[939,36067+13]..[939,36067+20])
                                                    Ppat_var "new_fun" (middle_end/closure/closure.ml[939,36067+13]..[939,36067+20])
                                                  pattern (middle_end/closure/closure.ml[939,36067+22]..[939,36067+28])
                                                    Ppat_var "approx" (middle_end/closure/closure.ml[939,36067+22]..[939,36067+28])
                                                ]
                                              expression (middle_end/closure/closure.ml[939,36067+32]..[953,36619+50])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[939,36067+32]..[939,36067+37])
                                                  Pexp_ident "close" (middle_end/closure/closure.ml[939,36067+32]..[939,36067+37])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[939,36067+38]..[939,36067+75])
                                                      Pexp_record
                                                      [
                                                        "backend" (middle_end/closure/closure.ml[939,36067+40]..[939,36067+47]) ghost
                                                          expression (middle_end/closure/closure.ml[939,36067+40]..[939,36067+47])
                                                            Pexp_ident "backend" (middle_end/closure/closure.ml[939,36067+40]..[939,36067+47])
                                                        "fenv" (middle_end/closure/closure.ml[939,36067+49]..[939,36067+53]) ghost
                                                          expression (middle_end/closure/closure.ml[939,36067+49]..[939,36067+53])
                                                            Pexp_ident "fenv" (middle_end/closure/closure.ml[939,36067+49]..[939,36067+53])
                                                        "cenv" (middle_end/closure/closure.ml[939,36067+55]..[939,36067+59]) ghost
                                                          expression (middle_end/closure/closure.ml[939,36067+55]..[939,36067+59])
                                                            Pexp_ident "cenv" (middle_end/closure/closure.ml[939,36067+55]..[939,36067+59])
                                                        "mutable_vars" (middle_end/closure/closure.ml[939,36067+61]..[939,36067+73]) ghost
                                                          expression (middle_end/closure/closure.ml[939,36067+61]..[939,36067+73])
                                                            Pexp_ident "mutable_vars" (middle_end/closure/closure.ml[939,36067+61]..[939,36067+73])
                                                      ]
                                                      None
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[940,36143+10]..[953,36619+50])
                                                      Pexp_construct "Lfunction" (middle_end/closure/closure.ml[940,36143+11]..[940,36143+20])
                                                      Some
                                                        expression (middle_end/closure/closure.ml[940,36143+20]..[953,36619+49])
                                                          Pexp_record
                                                          [
                                                            "kind" (middle_end/closure/closure.ml[941,36165+15]..[941,36165+19])
                                                              expression (middle_end/closure/closure.ml[941,36165+22]..[941,36165+29])
                                                                Pexp_construct "Curried" (middle_end/closure/closure.ml[941,36165+22]..[941,36165+29])
                                                                None
                                                            "return" (middle_end/closure/closure.ml[942,36196+15]..[942,36196+21])
                                                              expression (middle_end/closure/closure.ml[942,36196+24]..[942,36196+31])
                                                                Pexp_construct "Pgenval" (middle_end/closure/closure.ml[942,36196+24]..[942,36196+31])
                                                                None
                                                            "params" (middle_end/closure/closure.ml[943,36229+15]..[943,36229+21])
                                                              expression (middle_end/closure/closure.ml[943,36229+24]..[943,36229+65])
                                                                Pexp_apply
                                                                expression (middle_end/closure/closure.ml[943,36229+24]..[943,36229+32])
                                                                  Pexp_ident "List.map" (middle_end/closure/closure.ml[943,36229+24]..[943,36229+32])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/closure/closure.ml[943,36229+33]..[943,36229+54])
                                                                      Pexp_fun
                                                                      Nolabel
                                                                      None
                                                                      pattern (middle_end/closure/closure.ml[943,36229+38]..[943,36229+39])
Ppat_var "v" (middle_end/closure/closure.ml[943,36229+38]..[943,36229+39])
                                                                      expression (middle_end/closure/closure.ml[943,36229+43]..[943,36229+53])
Pexp_tuple
[
  expression (middle_end/closure/closure.ml[943,36229+43]..[943,36229+44])
    Pexp_ident "v" (middle_end/closure/closure.ml[943,36229+43]..[943,36229+44])
  expression (middle_end/closure/closure.ml[943,36229+46]..[943,36229+53])
    Pexp_construct "Pgenval" (middle_end/closure/closure.ml[943,36229+46]..[943,36229+53])
    None
]
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/closure/closure.ml[943,36229+55]..[943,36229+65])
                                                                      Pexp_ident "final_args" (middle_end/closure/closure.ml[943,36229+55]..[943,36229+65])
                                                                ]
                                                            "body" (middle_end/closure/closure.ml[944,36296+15]..[944,36296+19])
                                                              expression (middle_end/closure/closure.ml[944,36296+22]..[951,36581+16])
                                                                Pexp_construct "Lapply" (middle_end/closure/closure.ml[944,36296+22]..[944,36296+28])
                                                                Some
                                                                  expression (middle_end/closure/closure.ml[944,36296+28]..[951,36581+16])
                                                                    Pexp_record
                                                                    [
                                                                      "ap_loc" (middle_end/closure/closure.ml[945,36326+17]..[945,36326+23])
expression (middle_end/closure/closure.ml[945,36326+24]..[945,36326+27])
  Pexp_ident "loc" (middle_end/closure/closure.ml[945,36326+24]..[945,36326+27])
                                                                      "ap_func" (middle_end/closure/closure.ml[946,36355+17]..[946,36355+24])
expression (middle_end/closure/closure.ml[946,36355+25]..[946,36355+41])
  Pexp_construct "Lvar" (middle_end/closure/closure.ml[946,36355+26]..[946,36355+30])
  Some
    expression (middle_end/closure/closure.ml[946,36355+31]..[946,36355+40])
      Pexp_ident "funct_var" (middle_end/closure/closure.ml[946,36355+31]..[946,36355+40])
                                                                      "ap_args" (middle_end/closure/closure.ml[947,36398+17]..[947,36398+24])
expression (middle_end/closure/closure.ml[947,36398+25]..[947,36398+38])
  Pexp_ident "internal_args" (middle_end/closure/closure.ml[947,36398+25]..[947,36398+38])
                                                                      "ap_tailcall" (middle_end/closure/closure.ml[948,36438+17]..[948,36438+28])
expression (middle_end/closure/closure.ml[948,36438+29]..[948,36438+45])
  Pexp_construct "Default_tailcall" (middle_end/closure/closure.ml[948,36438+29]..[948,36438+45])
  None
                                                                      "ap_inlined" (middle_end/closure/closure.ml[949,36485+17]..[949,36485+27])
expression (middle_end/closure/closure.ml[949,36485+28]..[949,36485+42])
  Pexp_construct "Default_inline" (middle_end/closure/closure.ml[949,36485+28]..[949,36485+42])
  None
                                                                      "ap_specialised" (middle_end/closure/closure.ml[950,36529+17]..[950,36529+31])
expression (middle_end/closure/closure.ml[950,36529+32]..[950,36529+50])
  Pexp_construct "Default_specialise" (middle_end/closure/closure.ml[950,36529+32]..[950,36529+50])
  None
                                                                    ]
                                                                    None
                                                            "loc" (middle_end/closure/closure.ml[952,36599+15]..[952,36599+18]) ghost
                                                              expression (middle_end/closure/closure.ml[952,36599+15]..[952,36599+18])
                                                                Pexp_ident "loc" (middle_end/closure/closure.ml[952,36599+15]..[952,36599+18])
                                                            "attr" (middle_end/closure/closure.ml[953,36619+15]..[953,36619+19])
                                                              expression (middle_end/closure/closure.ml[953,36619+22]..[953,36619+48])
                                                                Pexp_ident "default_function_attribute" (middle_end/closure/closure.ml[953,36619+22]..[953,36619+48])
                                                          ]
                                                          None
                                                ]
                                          ]
                                          expression (middle_end/closure/closure.ml[955,36681+8]..[960,36890+25])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/closure/closure.ml[955,36681+12]..[955,36681+19])
                                                  Ppat_var "new_fun" (middle_end/closure/closure.ml[955,36681+12]..[955,36681+19])
                                                expression (middle_end/closure/closure.ml[956,36703+10]..[957,36729+77])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[956,36703+10]..[956,36703+14])
                                                    Pexp_ident "iter" (middle_end/closure/closure.ml[956,36703+10]..[956,36703+14])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[956,36703+15]..[956,36703+25])
                                                        Pexp_ident "first_args" (middle_end/closure/closure.ml[956,36703+15]..[956,36703+25])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[957,36729+12]..[957,36729+77])
                                                        Pexp_construct "Ulet" (middle_end/closure/closure.ml[957,36729+13]..[957,36729+17])
                                                        Some
                                                          expression (middle_end/closure/closure.ml[957,36729+18]..[957,36729+76])
                                                            Pexp_tuple
                                                            [
                                                              expression (middle_end/closure/closure.ml[957,36729+19]..[957,36729+28])
                                                                Pexp_construct "Immutable" (middle_end/closure/closure.ml[957,36729+19]..[957,36729+28])
                                                                None
                                                              expression (middle_end/closure/closure.ml[957,36729+30]..[957,36729+37])
                                                                Pexp_construct "Pgenval" (middle_end/closure/closure.ml[957,36729+30]..[957,36729+37])
                                                                None
                                                              expression (middle_end/closure/closure.ml[957,36729+39]..[957,36729+58])
                                                                Pexp_apply
                                                                expression (middle_end/closure/closure.ml[957,36729+39]..[957,36729+48])
                                                                  Pexp_ident "VP.create" (middle_end/closure/closure.ml[957,36729+39]..[957,36729+48])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/closure/closure.ml[957,36729+49]..[957,36729+58])
                                                                      Pexp_ident "funct_var" (middle_end/closure/closure.ml[957,36729+49]..[957,36729+58])
                                                                ]
                                                              expression (middle_end/closure/closure.ml[957,36729+60]..[957,36729+66])
                                                                Pexp_ident "ufunct" (middle_end/closure/closure.ml[957,36729+60]..[957,36729+66])
                                                              expression (middle_end/closure/closure.ml[957,36729+68]..[957,36729+75])
                                                                Pexp_ident "new_fun" (middle_end/closure/closure.ml[957,36729+68]..[957,36729+75])
                                                            ]
                                                  ]
                                            ]
                                            expression (middle_end/closure/closure.ml[959,36818+8]..[960,36890+25])
                                              Pexp_sequence
                                              expression (middle_end/closure/closure.ml[959,36818+8]..[959,36818+70])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[959,36818+8]..[959,36818+32])
                                                  Pexp_ident "warning_if_forced_inline" (middle_end/closure/closure.ml[959,36818+8]..[959,36818+32])
                                                [
                                                  <arg>
                                                  Labelled "loc"
                                                    expression (middle_end/closure/closure.ml[959,36818+34]..[959,36818+37])
                                                      Pexp_ident "loc" (middle_end/closure/closure.ml[959,36818+34]..[959,36818+37])
                                                  <arg>
                                                  Labelled "attribute"
                                                    expression (middle_end/closure/closure.ml[959,36818+39]..[959,36818+48])
                                                      Pexp_ident "attribute" (middle_end/closure/closure.ml[959,36818+39]..[959,36818+48])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[959,36818+49]..[959,36818+70])
                                                      Pexp_constant PConst_string("Partial application",(middle_end/closure/closure.ml[959,36818+50]..[959,36818+69]),None)
                                                ]
                                              expression (middle_end/closure/closure.ml[960,36890+8]..[960,36890+25])
                                                Pexp_tuple
                                                [
                                                  expression (middle_end/closure/closure.ml[960,36890+9]..[960,36890+16])
                                                    Pexp_ident "new_fun" (middle_end/closure/closure.ml[960,36890+9]..[960,36890+16])
                                                  expression (middle_end/closure/closure.ml[960,36890+18]..[960,36890+24])
                                                    Pexp_ident "approx" (middle_end/closure/closure.ml[960,36890+18]..[960,36890+24])
                                                ]
                          <case>
                            pattern (middle_end/closure/closure.ml[962,36917+8]..[962,36917+62])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[962,36917+9]..[962,36917+54])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[962,36917+10]..[962,36917+16])
                                      Ppat_var "ufunct" (middle_end/closure/closure.ml[962,36917+10]..[962,36917+16])
                                    pattern (middle_end/closure/closure.ml[962,36917+18]..[962,36917+53])
                                      Ppat_construct "Value_closure" (middle_end/closure/closure.ml[962,36917+18]..[962,36917+31])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[962,36917+31]..[962,36917+53])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[962,36917+32]..[962,36917+39])
                                              Ppat_var "fundesc" (middle_end/closure/closure.ml[962,36917+32]..[962,36917+39])
                                            pattern (middle_end/closure/closure.ml[962,36917+41]..[962,36917+52])
                                              Ppat_var "_approx_res" (middle_end/closure/closure.ml[962,36917+41]..[962,36917+52])
                                          ]
                                  ]
                                pattern (middle_end/closure/closure.ml[962,36917+56]..[962,36917+61])
                                  Ppat_var "uargs" (middle_end/closure/closure.ml[962,36917+56]..[962,36917+61])
                              ]
                            <when>
                              expression (middle_end/closure/closure.ml[963,36980+13]..[963,36980+63])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[963,36980+35]..[963,36980+37])
                                  Pexp_ident "&&" (middle_end/closure/closure.ml[963,36980+35]..[963,36980+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[963,36980+13]..[963,36980+34])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[963,36980+31]..[963,36980+32])
                                        Pexp_ident ">" (middle_end/closure/closure.ml[963,36980+31]..[963,36980+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[963,36980+13]..[963,36980+30])
                                            Pexp_field
                                            expression (middle_end/closure/closure.ml[963,36980+13]..[963,36980+20])
                                              Pexp_ident "fundesc" (middle_end/closure/closure.ml[963,36980+13]..[963,36980+20])
                                            "fun_arity" (middle_end/closure/closure.ml[963,36980+21]..[963,36980+30])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[963,36980+33]..[963,36980+34])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[963,36980+38]..[963,36980+63])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[963,36980+44]..[963,36980+45])
                                        Pexp_ident ">" (middle_end/closure/closure.ml[963,36980+44]..[963,36980+45])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[963,36980+38]..[963,36980+43])
                                            Pexp_ident "nargs" (middle_end/closure/closure.ml[963,36980+38]..[963,36980+43])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[963,36980+46]..[963,36980+63])
                                            Pexp_field
                                            expression (middle_end/closure/closure.ml[963,36980+46]..[963,36980+53])
                                              Pexp_ident "fundesc" (middle_end/closure/closure.ml[963,36980+46]..[963,36980+53])
                                            "fun_arity" (middle_end/closure/closure.ml[963,36980+54]..[963,36980+63])
                                      ]
                                ]
                            expression (middle_end/closure/closure.ml[964,37047+10]..[981,37874+31])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/closure/closure.ml[964,37047+14]..[964,37047+18])
                                    Ppat_var "args" (middle_end/closure/closure.ml[964,37047+14]..[964,37047+18])
                                  expression (middle_end/closure/closure.ml[964,37047+21]..[964,37047+74])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[964,37047+21]..[964,37047+29])
                                      Pexp_ident "List.map" (middle_end/closure/closure.ml[964,37047+21]..[964,37047+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[964,37047+30]..[964,37047+68])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/closure/closure.ml[964,37047+35]..[964,37047+38])
                                            Ppat_var "arg" (middle_end/closure/closure.ml[964,37047+35]..[964,37047+38])
                                          expression (middle_end/closure/closure.ml[964,37047+42]..[964,37047+67])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/closure/closure.ml[964,37047+42]..[964,37047+62])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[964,37047+42]..[964,37047+56])
                                                  Pexp_ident "V.create_local" (middle_end/closure/closure.ml[964,37047+42]..[964,37047+56])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[964,37047+57]..[964,37047+62])
                                                      Pexp_constant PConst_string("arg",(middle_end/closure/closure.ml[964,37047+58]..[964,37047+61]),None)
                                                ]
                                              expression (middle_end/closure/closure.ml[964,37047+64]..[964,37047+67])
                                                Pexp_ident "arg" (middle_end/closure/closure.ml[964,37047+64]..[964,37047+67])
                                            ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[964,37047+69]..[964,37047+74])
                                          Pexp_ident "uargs" (middle_end/closure/closure.ml[964,37047+69]..[964,37047+74])
                                    ]
                              ]
                              expression (middle_end/closure/closure.ml[965,37125+10]..[981,37874+31])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/closure/closure.ml[965,37125+14]..[965,37125+36])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/closure/closure.ml[965,37125+15]..[965,37125+25])
                                          Ppat_var "first_args" (middle_end/closure/closure.ml[965,37125+15]..[965,37125+25])
                                        pattern (middle_end/closure/closure.ml[965,37125+27]..[965,37125+35])
                                          Ppat_var "rem_args" (middle_end/closure/closure.ml[965,37125+27]..[965,37125+35])
                                      ]
                                    expression (middle_end/closure/closure.ml[965,37125+39]..[965,37125+72])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[965,37125+39]..[965,37125+49])
                                        Pexp_ident "split_list" (middle_end/closure/closure.ml[965,37125+39]..[965,37125+49])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[965,37125+50]..[965,37125+67])
                                            Pexp_field
                                            expression (middle_end/closure/closure.ml[965,37125+50]..[965,37125+57])
                                              Pexp_ident "fundesc" (middle_end/closure/closure.ml[965,37125+50]..[965,37125+57])
                                            "fun_arity" (middle_end/closure/closure.ml[965,37125+58]..[965,37125+67])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[965,37125+68]..[965,37125+72])
                                            Pexp_ident "args" (middle_end/closure/closure.ml[965,37125+68]..[965,37125+72])
                                      ]
                                ]
                                expression (middle_end/closure/closure.ml[966,37201+10]..[981,37874+31])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/closure/closure.ml[966,37201+14]..[966,37201+24])
                                        Ppat_var "first_args" (middle_end/closure/closure.ml[966,37201+14]..[966,37201+24])
                                      expression (middle_end/closure/closure.ml[966,37201+27]..[966,37201+71])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[966,37201+27]..[966,37201+35])
                                          Pexp_ident "List.map" (middle_end/closure/closure.ml[966,37201+27]..[966,37201+35])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[966,37201+36]..[966,37201+60])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/closure/closure.ml[966,37201+41]..[966,37201+48])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/closure/closure.ml[966,37201+42]..[966,37201+44])
                                                    Ppat_var "id" (middle_end/closure/closure.ml[966,37201+42]..[966,37201+44])
                                                  pattern (middle_end/closure/closure.ml[966,37201+46]..[966,37201+47])
                                                    Ppat_any
                                                ]
                                              expression (middle_end/closure/closure.ml[966,37201+52]..[966,37201+59])
                                                Pexp_construct "Uvar" (middle_end/closure/closure.ml[966,37201+52]..[966,37201+56])
                                                Some
                                                  expression (middle_end/closure/closure.ml[966,37201+57]..[966,37201+59])
                                                    Pexp_ident "id" (middle_end/closure/closure.ml[966,37201+57]..[966,37201+59])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[966,37201+61]..[966,37201+71])
                                              Pexp_ident "first_args" (middle_end/closure/closure.ml[966,37201+61]..[966,37201+71])
                                        ]
                                  ]
                                  expression (middle_end/closure/closure.ml[967,37276+10]..[981,37874+31])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/closure/closure.ml[967,37276+14]..[967,37276+22])
                                          Ppat_var "rem_args" (middle_end/closure/closure.ml[967,37276+14]..[967,37276+22])
                                        expression (middle_end/closure/closure.ml[967,37276+25]..[967,37276+67])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[967,37276+25]..[967,37276+33])
                                            Pexp_ident "List.map" (middle_end/closure/closure.ml[967,37276+25]..[967,37276+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[967,37276+34]..[967,37276+58])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (middle_end/closure/closure.ml[967,37276+39]..[967,37276+46])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/closure/closure.ml[967,37276+40]..[967,37276+42])
                                                      Ppat_var "id" (middle_end/closure/closure.ml[967,37276+40]..[967,37276+42])
                                                    pattern (middle_end/closure/closure.ml[967,37276+44]..[967,37276+45])
                                                      Ppat_any
                                                  ]
                                                expression (middle_end/closure/closure.ml[967,37276+50]..[967,37276+57])
                                                  Pexp_construct "Uvar" (middle_end/closure/closure.ml[967,37276+50]..[967,37276+54])
                                                  Some
                                                    expression (middle_end/closure/closure.ml[967,37276+55]..[967,37276+57])
                                                      Pexp_ident "id" (middle_end/closure/closure.ml[967,37276+55]..[967,37276+57])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[967,37276+59]..[967,37276+67])
                                                Pexp_ident "rem_args" (middle_end/closure/closure.ml[967,37276+59]..[967,37276+67])
                                          ]
                                    ]
                                    expression (middle_end/closure/closure.ml[968,37347+10]..[981,37874+31])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/closure/closure.ml[968,37347+14]..[968,37347+17])
                                            Ppat_var "dbg" (middle_end/closure/closure.ml[968,37347+14]..[968,37347+17])
                                          expression (middle_end/closure/closure.ml[968,37347+20]..[968,37347+47])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[968,37347+20]..[968,37347+43])
                                              Pexp_ident "Debuginfo.from_location" (middle_end/closure/closure.ml[968,37347+20]..[968,37347+43])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[968,37347+44]..[968,37347+47])
                                                  Pexp_ident "loc" (middle_end/closure/closure.ml[968,37347+44]..[968,37347+47])
                                            ]
                                      ]
                                      expression (middle_end/closure/closure.ml[969,37398+10]..[981,37874+31])
                                        Pexp_sequence
                                        expression (middle_end/closure/closure.ml[969,37398+10]..[969,37398+69])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[969,37398+10]..[969,37398+34])
                                            Pexp_ident "warning_if_forced_inline" (middle_end/closure/closure.ml[969,37398+10]..[969,37398+34])
                                          [
                                            <arg>
                                            Labelled "loc"
                                              expression (middle_end/closure/closure.ml[969,37398+36]..[969,37398+39])
                                                Pexp_ident "loc" (middle_end/closure/closure.ml[969,37398+36]..[969,37398+39])
                                            <arg>
                                            Labelled "attribute"
                                              expression (middle_end/closure/closure.ml[969,37398+41]..[969,37398+50])
                                                Pexp_ident "attribute" (middle_end/closure/closure.ml[969,37398+41]..[969,37398+50])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[969,37398+51]..[969,37398+69])
                                                Pexp_constant PConst_string("Over-application",(middle_end/closure/closure.ml[969,37398+52]..[969,37398+68]),None)
                                          ]
                                        expression (middle_end/closure/closure.ml[970,37469+10]..[981,37874+31])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/closure/closure.ml[970,37469+14]..[970,37469+18])
                                                Ppat_var "body" (middle_end/closure/closure.ml[970,37469+14]..[970,37469+18])
                                              expression (middle_end/closure/closure.ml[971,37490+12]..[973,37607+41])
                                                Pexp_construct "Ugeneric_apply" (middle_end/closure/closure.ml[971,37490+12]..[971,37490+26])
                                                Some
                                                  expression (middle_end/closure/closure.ml[971,37490+26]..[973,37607+41])
                                                    Pexp_tuple
                                                    [
                                                      expression (middle_end/closure/closure.ml[971,37490+27]..[972,37550+55])
                                                        Pexp_apply
                                                        expression (middle_end/closure/closure.ml[971,37490+27]..[971,37490+39])
                                                          Pexp_ident "direct_apply" (middle_end/closure/closure.ml[971,37490+27]..[971,37490+39])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[971,37490+40]..[971,37490+43])
                                                              Pexp_ident "env" (middle_end/closure/closure.ml[971,37490+40]..[971,37490+43])
                                                          <arg>
                                                          Labelled "loc"
                                                            expression (middle_end/closure/closure.ml[971,37490+45]..[971,37490+48])
                                                              Pexp_ident "loc" (middle_end/closure/closure.ml[971,37490+45]..[971,37490+48])
                                                          <arg>
                                                          Labelled "attribute"
                                                            expression (middle_end/closure/closure.ml[971,37490+50]..[971,37490+59])
                                                              Pexp_ident "attribute" (middle_end/closure/closure.ml[971,37490+50]..[971,37490+59])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[972,37550+30]..[972,37550+37])
                                                              Pexp_ident "fundesc" (middle_end/closure/closure.ml[972,37550+30]..[972,37550+37])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[972,37550+38]..[972,37550+44])
                                                              Pexp_ident "ufunct" (middle_end/closure/closure.ml[972,37550+38]..[972,37550+44])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[972,37550+45]..[972,37550+55])
                                                              Pexp_ident "first_args" (middle_end/closure/closure.ml[972,37550+45]..[972,37550+55])
                                                        ]
                                                      expression (middle_end/closure/closure.ml[973,37607+27]..[973,37607+35])
                                                        Pexp_ident "rem_args" (middle_end/closure/closure.ml[973,37607+27]..[973,37607+35])
                                                      expression (middle_end/closure/closure.ml[973,37607+37]..[973,37607+40])
                                                        Pexp_ident "dbg" (middle_end/closure/closure.ml[973,37607+37]..[973,37607+40])
                                                    ]
                                          ]
                                          expression (middle_end/closure/closure.ml[975,37662+10]..[981,37874+31])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/closure/closure.ml[975,37662+14]..[975,37662+20])
                                                  Ppat_var "result" (middle_end/closure/closure.ml[975,37662+14]..[975,37662+20])
                                                expression (middle_end/closure/closure.ml[976,37685+12]..[979,37842+18])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[976,37685+12]..[976,37685+26])
                                                    Pexp_ident "List.fold_left" (middle_end/closure/closure.ml[976,37685+12]..[976,37685+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[976,37685+27]..[977,37745+77])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (middle_end/closure/closure.ml[976,37685+32]..[976,37685+36])
                                                          Ppat_var "body" (middle_end/closure/closure.ml[976,37685+32]..[976,37685+36])
                                                        expression (middle_end/closure/closure.ml[976,37685+37]..[977,37745+76]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (middle_end/closure/closure.ml[976,37685+37]..[976,37685+56])
                                                            Ppat_tuple
                                                            [
                                                              pattern (middle_end/closure/closure.ml[976,37685+38]..[976,37685+40])
                                                                Ppat_var "id" (middle_end/closure/closure.ml[976,37685+38]..[976,37685+40])
                                                              pattern (middle_end/closure/closure.ml[976,37685+42]..[976,37685+55])
                                                                Ppat_var "defining_expr" (middle_end/closure/closure.ml[976,37685+42]..[976,37685+55])
                                                            ]
                                                          expression (middle_end/closure/closure.ml[977,37745+16]..[977,37745+76])
                                                            Pexp_construct "Ulet" (middle_end/closure/closure.ml[977,37745+16]..[977,37745+20])
                                                            Some
                                                              expression (middle_end/closure/closure.ml[977,37745+21]..[977,37745+76])
                                                                Pexp_tuple
                                                                [
                                                                  expression (middle_end/closure/closure.ml[977,37745+22]..[977,37745+31])
                                                                    Pexp_construct "Immutable" (middle_end/closure/closure.ml[977,37745+22]..[977,37745+31])
                                                                    None
                                                                  expression (middle_end/closure/closure.ml[977,37745+33]..[977,37745+40])
                                                                    Pexp_construct "Pgenval" (middle_end/closure/closure.ml[977,37745+33]..[977,37745+40])
                                                                    None
                                                                  expression (middle_end/closure/closure.ml[977,37745+42]..[977,37745+54])
                                                                    Pexp_apply
                                                                    expression (middle_end/closure/closure.ml[977,37745+42]..[977,37745+51])
                                                                      Pexp_ident "VP.create" (middle_end/closure/closure.ml[977,37745+42]..[977,37745+51])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/closure/closure.ml[977,37745+52]..[977,37745+54])
  Pexp_ident "id" (middle_end/closure/closure.ml[977,37745+52]..[977,37745+54])
                                                                    ]
                                                                  expression (middle_end/closure/closure.ml[977,37745+56]..[977,37745+69])
                                                                    Pexp_ident "defining_expr" (middle_end/closure/closure.ml[977,37745+56]..[977,37745+69])
                                                                  expression (middle_end/closure/closure.ml[977,37745+71]..[977,37745+75])
                                                                    Pexp_ident "body" (middle_end/closure/closure.ml[977,37745+71]..[977,37745+75])
                                                                ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[978,37823+14]..[978,37823+18])
                                                        Pexp_ident "body" (middle_end/closure/closure.ml[978,37823+14]..[978,37823+18])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[979,37842+14]..[979,37842+18])
                                                        Pexp_ident "args" (middle_end/closure/closure.ml[979,37842+14]..[979,37842+18])
                                                  ]
                                            ]
                                            expression (middle_end/closure/closure.ml[981,37874+10]..[981,37874+31])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/closure/closure.ml[981,37874+10]..[981,37874+16])
                                                  Pexp_ident "result" (middle_end/closure/closure.ml[981,37874+10]..[981,37874+16])
                                                expression (middle_end/closure/closure.ml[981,37874+18]..[981,37874+31])
                                                  Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[981,37874+18]..[981,37874+31])
                                                  None
                                              ]
                          <case>
                            pattern (middle_end/closure/closure.ml[982,37906+8]..[982,37906+28])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[982,37906+9]..[982,37906+20])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[982,37906+10]..[982,37906+16])
                                      Ppat_var "ufunct" (middle_end/closure/closure.ml[982,37906+10]..[982,37906+16])
                                    pattern (middle_end/closure/closure.ml[982,37906+18]..[982,37906+19])
                                      Ppat_any
                                  ]
                                pattern (middle_end/closure/closure.ml[982,37906+22]..[982,37906+27])
                                  Ppat_var "uargs" (middle_end/closure/closure.ml[982,37906+22]..[982,37906+27])
                              ]
                            expression (middle_end/closure/closure.ml[983,37938+10]..[985,38060+61])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/closure/closure.ml[983,37938+14]..[983,37938+17])
                                    Ppat_var "dbg" (middle_end/closure/closure.ml[983,37938+14]..[983,37938+17])
                                  expression (middle_end/closure/closure.ml[983,37938+20]..[983,37938+47])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[983,37938+20]..[983,37938+43])
                                      Pexp_ident "Debuginfo.from_location" (middle_end/closure/closure.ml[983,37938+20]..[983,37938+43])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[983,37938+44]..[983,37938+47])
                                          Pexp_ident "loc" (middle_end/closure/closure.ml[983,37938+44]..[983,37938+47])
                                    ]
                              ]
                              expression (middle_end/closure/closure.ml[984,37989+10]..[985,38060+61])
                                Pexp_sequence
                                expression (middle_end/closure/closure.ml[984,37989+10]..[984,37989+69])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[984,37989+10]..[984,37989+34])
                                    Pexp_ident "warning_if_forced_inline" (middle_end/closure/closure.ml[984,37989+10]..[984,37989+34])
                                  [
                                    <arg>
                                    Labelled "loc"
                                      expression (middle_end/closure/closure.ml[984,37989+36]..[984,37989+39])
                                        Pexp_ident "loc" (middle_end/closure/closure.ml[984,37989+36]..[984,37989+39])
                                    <arg>
                                    Labelled "attribute"
                                      expression (middle_end/closure/closure.ml[984,37989+41]..[984,37989+50])
                                        Pexp_ident "attribute" (middle_end/closure/closure.ml[984,37989+41]..[984,37989+50])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[984,37989+51]..[984,37989+69])
                                        Pexp_constant PConst_string("Unknown function",(middle_end/closure/closure.ml[984,37989+52]..[984,37989+68]),None)
                                  ]
                                expression (middle_end/closure/closure.ml[985,38060+10]..[985,38060+61])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/closure/closure.ml[985,38060+11]..[985,38060+45])
                                      Pexp_construct "Ugeneric_apply" (middle_end/closure/closure.ml[985,38060+11]..[985,38060+25])
                                      Some
                                        expression (middle_end/closure/closure.ml[985,38060+25]..[985,38060+45])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/closure/closure.ml[985,38060+26]..[985,38060+32])
                                              Pexp_ident "ufunct" (middle_end/closure/closure.ml[985,38060+26]..[985,38060+32])
                                            expression (middle_end/closure/closure.ml[985,38060+34]..[985,38060+39])
                                              Pexp_ident "uargs" (middle_end/closure/closure.ml[985,38060+34]..[985,38060+39])
                                            expression (middle_end/closure/closure.ml[985,38060+41]..[985,38060+44])
                                              Pexp_ident "dbg" (middle_end/closure/closure.ml[985,38060+41]..[985,38060+44])
                                          ]
                                    expression (middle_end/closure/closure.ml[985,38060+47]..[985,38060+60])
                                      Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[985,38060+47]..[985,38060+60])
                                      None
                                  ]
                        ]
                  <case>
                    pattern (middle_end/closure/closure.ml[987,38132+4]..[987,38132+36])
                      Ppat_construct "Lsend" (middle_end/closure/closure.ml[987,38132+4]..[987,38132+9])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[987,38132+9]..[987,38132+36])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[987,38132+10]..[987,38132+14])
                              Ppat_var "kind" (middle_end/closure/closure.ml[987,38132+10]..[987,38132+14])
                            pattern (middle_end/closure/closure.ml[987,38132+16]..[987,38132+19])
                              Ppat_var "met" (middle_end/closure/closure.ml[987,38132+16]..[987,38132+19])
                            pattern (middle_end/closure/closure.ml[987,38132+21]..[987,38132+24])
                              Ppat_var "obj" (middle_end/closure/closure.ml[987,38132+21]..[987,38132+24])
                            pattern (middle_end/closure/closure.ml[987,38132+26]..[987,38132+30])
                              Ppat_var "args" (middle_end/closure/closure.ml[987,38132+26]..[987,38132+30])
                            pattern (middle_end/closure/closure.ml[987,38132+32]..[987,38132+35])
                              Ppat_var "loc" (middle_end/closure/closure.ml[987,38132+32]..[987,38132+35])
                          ]
                    expression (middle_end/closure/closure.ml[988,38172+6]..[992,38355+21])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[988,38172+10]..[988,38172+19])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[988,38172+11]..[988,38172+15])
                                Ppat_var "umet" (middle_end/closure/closure.ml[988,38172+11]..[988,38172+15])
                              pattern (middle_end/closure/closure.ml[988,38172+17]..[988,38172+18])
                                Ppat_any
                            ]
                          expression (middle_end/closure/closure.ml[988,38172+22]..[988,38172+35])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[988,38172+22]..[988,38172+27])
                              Pexp_ident "close" (middle_end/closure/closure.ml[988,38172+22]..[988,38172+27])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[988,38172+28]..[988,38172+31])
                                  Pexp_ident "env" (middle_end/closure/closure.ml[988,38172+28]..[988,38172+31])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[988,38172+32]..[988,38172+35])
                                  Pexp_ident "met" (middle_end/closure/closure.ml[988,38172+32]..[988,38172+35])
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[989,38211+6]..[992,38355+21])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[989,38211+10]..[989,38211+19])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[989,38211+11]..[989,38211+15])
                                  Ppat_var "uobj" (middle_end/closure/closure.ml[989,38211+11]..[989,38211+15])
                                pattern (middle_end/closure/closure.ml[989,38211+17]..[989,38211+18])
                                  Ppat_any
                              ]
                            expression (middle_end/closure/closure.ml[989,38211+22]..[989,38211+35])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[989,38211+22]..[989,38211+27])
                                Pexp_ident "close" (middle_end/closure/closure.ml[989,38211+22]..[989,38211+27])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[989,38211+28]..[989,38211+31])
                                    Pexp_ident "env" (middle_end/closure/closure.ml[989,38211+28]..[989,38211+31])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[989,38211+32]..[989,38211+35])
                                    Pexp_ident "obj" (middle_end/closure/closure.ml[989,38211+32]..[989,38211+35])
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[990,38250+6]..[992,38355+21])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[990,38250+10]..[990,38250+13])
                                Ppat_var "dbg" (middle_end/closure/closure.ml[990,38250+10]..[990,38250+13])
                              expression (middle_end/closure/closure.ml[990,38250+16]..[990,38250+43])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[990,38250+16]..[990,38250+39])
                                  Pexp_ident "Debuginfo.from_location" (middle_end/closure/closure.ml[990,38250+16]..[990,38250+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[990,38250+40]..[990,38250+43])
                                      Pexp_ident "loc" (middle_end/closure/closure.ml[990,38250+40]..[990,38250+43])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[991,38297+6]..[992,38355+21])
                            Pexp_tuple
                            [
                              expression (middle_end/closure/closure.ml[991,38297+7]..[991,38297+56])
                                Pexp_construct "Usend" (middle_end/closure/closure.ml[991,38297+7]..[991,38297+12])
                                Some
                                  expression (middle_end/closure/closure.ml[991,38297+12]..[991,38297+56])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/closure/closure.ml[991,38297+13]..[991,38297+17])
                                        Pexp_ident "kind" (middle_end/closure/closure.ml[991,38297+13]..[991,38297+17])
                                      expression (middle_end/closure/closure.ml[991,38297+19]..[991,38297+23])
                                        Pexp_ident "umet" (middle_end/closure/closure.ml[991,38297+19]..[991,38297+23])
                                      expression (middle_end/closure/closure.ml[991,38297+25]..[991,38297+29])
                                        Pexp_ident "uobj" (middle_end/closure/closure.ml[991,38297+25]..[991,38297+29])
                                      expression (middle_end/closure/closure.ml[991,38297+31]..[991,38297+50])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[991,38297+31]..[991,38297+41])
                                          Pexp_ident "close_list" (middle_end/closure/closure.ml[991,38297+31]..[991,38297+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[991,38297+42]..[991,38297+45])
                                              Pexp_ident "env" (middle_end/closure/closure.ml[991,38297+42]..[991,38297+45])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[991,38297+46]..[991,38297+50])
                                              Pexp_ident "args" (middle_end/closure/closure.ml[991,38297+46]..[991,38297+50])
                                        ]
                                      expression (middle_end/closure/closure.ml[991,38297+52]..[991,38297+55])
                                        Pexp_ident "dbg" (middle_end/closure/closure.ml[991,38297+52]..[991,38297+55])
                                    ]
                              expression (middle_end/closure/closure.ml[992,38355+7]..[992,38355+20])
                                Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[992,38355+7]..[992,38355+20])
                                None
                            ]
                  <case>
                    pattern (middle_end/closure/closure.ml[993,38377+4]..[993,38377+34])
                      Ppat_construct "Llet" (middle_end/closure/closure.ml[993,38377+4]..[993,38377+8])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[993,38377+8]..[993,38377+34])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[993,38377+9]..[993,38377+12])
                              Ppat_var "str" (middle_end/closure/closure.ml[993,38377+9]..[993,38377+12])
                            pattern (middle_end/closure/closure.ml[993,38377+14]..[993,38377+18])
                              Ppat_var "kind" (middle_end/closure/closure.ml[993,38377+14]..[993,38377+18])
                            pattern (middle_end/closure/closure.ml[993,38377+20]..[993,38377+22])
                              Ppat_var "id" (middle_end/closure/closure.ml[993,38377+20]..[993,38377+22])
                            pattern (middle_end/closure/closure.ml[993,38377+24]..[993,38377+27])
                              Ppat_var "lam" (middle_end/closure/closure.ml[993,38377+24]..[993,38377+27])
                            pattern (middle_end/closure/closure.ml[993,38377+29]..[993,38377+33])
                              Ppat_var "body" (middle_end/closure/closure.ml[993,38377+29]..[993,38377+33])
                          ]
                    expression (middle_end/closure/closure.ml[994,38415+6]..[1007,38894+9])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[994,38415+10]..[994,38415+22])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[994,38415+11]..[994,38415+15])
                                Ppat_var "ulam" (middle_end/closure/closure.ml[994,38415+11]..[994,38415+15])
                              pattern (middle_end/closure/closure.ml[994,38415+17]..[994,38415+21])
                                Ppat_var "alam" (middle_end/closure/closure.ml[994,38415+17]..[994,38415+21])
                            ]
                          expression (middle_end/closure/closure.ml[994,38415+25]..[994,38415+47])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[994,38415+25]..[994,38415+36])
                              Pexp_ident "close_named" (middle_end/closure/closure.ml[994,38415+25]..[994,38415+36])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[994,38415+37]..[994,38415+40])
                                  Pexp_ident "env" (middle_end/closure/closure.ml[994,38415+37]..[994,38415+40])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[994,38415+41]..[994,38415+43])
                                  Pexp_ident "id" (middle_end/closure/closure.ml[994,38415+41]..[994,38415+43])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[994,38415+44]..[994,38415+47])
                                  Pexp_ident "lam" (middle_end/closure/closure.ml[994,38415+44]..[994,38415+47])
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[995,38466+6]..[1007,38894+9])
                        Pexp_match
                        expression (middle_end/closure/closure.ml[995,38466+18]..[995,38466+22])
                          Pexp_ident "alam" (middle_end/closure/closure.ml[995,38466+18]..[995,38466+22])
                        [
                          <case>
                            pattern (middle_end/closure/closure.ml[996,38494+8]..[996,38494+21])
                              Ppat_construct "Value_const" (middle_end/closure/closure.ml[996,38494+8]..[996,38494+19])
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[996,38494+20]..[996,38494+21])
                                  Ppat_any
                            <when>
                              expression (middle_end/closure/closure.ml[997,38516+16]..[997,38516+43])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[997,38516+28]..[997,38516+30])
                                  Pexp_ident "||" (middle_end/closure/closure.ml[997,38516+28]..[997,38516+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[997,38516+16]..[997,38516+27])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[997,38516+20]..[997,38516+21])
                                        Pexp_ident "=" (middle_end/closure/closure.ml[997,38516+20]..[997,38516+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[997,38516+16]..[997,38516+19])
                                            Pexp_ident "str" (middle_end/closure/closure.ml[997,38516+16]..[997,38516+19])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[997,38516+22]..[997,38516+27])
                                            Pexp_construct "Alias" (middle_end/closure/closure.ml[997,38516+22]..[997,38516+27])
                                            None
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[997,38516+31]..[997,38516+43])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[997,38516+31]..[997,38516+38])
                                        Pexp_ident "is_pure" (middle_end/closure/closure.ml[997,38516+31]..[997,38516+38])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[997,38516+39]..[997,38516+43])
                                            Pexp_ident "ulam" (middle_end/closure/closure.ml[997,38516+39]..[997,38516+43])
                                      ]
                                ]
                            expression (middle_end/closure/closure.ml[998,38563+9]..[999,38643+15])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[998,38563+9]..[998,38563+14])
                                Pexp_ident "close" (middle_end/closure/closure.ml[998,38563+9]..[998,38563+14])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[998,38563+15]..[998,38563+79])
                                    Pexp_record
                                    [
                                      "backend" (middle_end/closure/closure.ml[998,38563+17]..[998,38563+24]) ghost
                                        expression (middle_end/closure/closure.ml[998,38563+17]..[998,38563+24])
                                          Pexp_ident "backend" (middle_end/closure/closure.ml[998,38563+17]..[998,38563+24])
                                      "fenv" (middle_end/closure/closure.ml[998,38563+26]..[998,38563+30])
                                        expression (middle_end/closure/closure.ml[998,38563+33]..[998,38563+57])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[998,38563+34]..[998,38563+43])
                                            Pexp_ident "V.Map.add" (middle_end/closure/closure.ml[998,38563+34]..[998,38563+43])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[998,38563+44]..[998,38563+46])
                                                Pexp_ident "id" (middle_end/closure/closure.ml[998,38563+44]..[998,38563+46])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[998,38563+47]..[998,38563+51])
                                                Pexp_ident "alam" (middle_end/closure/closure.ml[998,38563+47]..[998,38563+51])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[998,38563+52]..[998,38563+56])
                                                Pexp_ident "fenv" (middle_end/closure/closure.ml[998,38563+52]..[998,38563+56])
                                          ]
                                      "cenv" (middle_end/closure/closure.ml[998,38563+59]..[998,38563+63]) ghost
                                        expression (middle_end/closure/closure.ml[998,38563+59]..[998,38563+63])
                                          Pexp_ident "cenv" (middle_end/closure/closure.ml[998,38563+59]..[998,38563+63])
                                      "mutable_vars" (middle_end/closure/closure.ml[998,38563+65]..[998,38563+77]) ghost
                                        expression (middle_end/closure/closure.ml[998,38563+65]..[998,38563+77])
                                          Pexp_ident "mutable_vars" (middle_end/closure/closure.ml[998,38563+65]..[998,38563+77])
                                    ]
                                    None
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[999,38643+11]..[999,38643+15])
                                    Pexp_ident "body" (middle_end/closure/closure.ml[999,38643+11]..[999,38643+15])
                              ]
                          <case>
                            pattern (middle_end/closure/closure.ml[1000,38659+8]..[1000,38659+9])
                              Ppat_any
                            expression (middle_end/closure/closure.ml[1001,38672+9]..[1006,38827+66])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/closure/closure.ml[1001,38672+13]..[1001,38672+27])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[1001,38672+14]..[1001,38672+19])
                                        Ppat_var "ubody" (middle_end/closure/closure.ml[1001,38672+14]..[1001,38672+19])
                                      pattern (middle_end/closure/closure.ml[1001,38672+21]..[1001,38672+26])
                                        Ppat_var "abody" (middle_end/closure/closure.ml[1001,38672+21]..[1001,38672+26])
                                    ]
                                  expression (middle_end/closure/closure.ml[1002,38702+11]..[1004,38797+17])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[1002,38702+11]..[1002,38702+16])
                                      Pexp_ident "close" (middle_end/closure/closure.ml[1002,38702+11]..[1002,38702+16])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1003,38719+13]..[1003,38719+77])
                                          Pexp_record
                                          [
                                            "backend" (middle_end/closure/closure.ml[1003,38719+15]..[1003,38719+22]) ghost
                                              expression (middle_end/closure/closure.ml[1003,38719+15]..[1003,38719+22])
                                                Pexp_ident "backend" (middle_end/closure/closure.ml[1003,38719+15]..[1003,38719+22])
                                            "fenv" (middle_end/closure/closure.ml[1003,38719+24]..[1003,38719+28])
                                              expression (middle_end/closure/closure.ml[1003,38719+31]..[1003,38719+55])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[1003,38719+32]..[1003,38719+41])
                                                  Pexp_ident "V.Map.add" (middle_end/closure/closure.ml[1003,38719+32]..[1003,38719+41])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[1003,38719+42]..[1003,38719+44])
                                                      Pexp_ident "id" (middle_end/closure/closure.ml[1003,38719+42]..[1003,38719+44])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[1003,38719+45]..[1003,38719+49])
                                                      Pexp_ident "alam" (middle_end/closure/closure.ml[1003,38719+45]..[1003,38719+49])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[1003,38719+50]..[1003,38719+54])
                                                      Pexp_ident "fenv" (middle_end/closure/closure.ml[1003,38719+50]..[1003,38719+54])
                                                ]
                                            "cenv" (middle_end/closure/closure.ml[1003,38719+57]..[1003,38719+61]) ghost
                                              expression (middle_end/closure/closure.ml[1003,38719+57]..[1003,38719+61])
                                                Pexp_ident "cenv" (middle_end/closure/closure.ml[1003,38719+57]..[1003,38719+61])
                                            "mutable_vars" (middle_end/closure/closure.ml[1003,38719+63]..[1003,38719+75]) ghost
                                              expression (middle_end/closure/closure.ml[1003,38719+63]..[1003,38719+75])
                                                Pexp_ident "mutable_vars" (middle_end/closure/closure.ml[1003,38719+63]..[1003,38719+75])
                                          ]
                                          None
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1004,38797+13]..[1004,38797+17])
                                          Pexp_ident "body" (middle_end/closure/closure.ml[1004,38797+13]..[1004,38797+17])
                                    ]
                              ]
                              expression (middle_end/closure/closure.ml[1006,38827+9]..[1006,38827+66])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[1006,38827+10]..[1006,38827+58])
                                    Pexp_construct "Ulet" (middle_end/closure/closure.ml[1006,38827+10]..[1006,38827+14])
                                    Some
                                      expression (middle_end/closure/closure.ml[1006,38827+14]..[1006,38827+58])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/closure/closure.ml[1006,38827+15]..[1006,38827+24])
                                            Pexp_construct "Immutable" (middle_end/closure/closure.ml[1006,38827+15]..[1006,38827+24])
                                            None
                                          expression (middle_end/closure/closure.ml[1006,38827+26]..[1006,38827+30])
                                            Pexp_ident "kind" (middle_end/closure/closure.ml[1006,38827+26]..[1006,38827+30])
                                          expression (middle_end/closure/closure.ml[1006,38827+32]..[1006,38827+44])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[1006,38827+32]..[1006,38827+41])
                                              Pexp_ident "VP.create" (middle_end/closure/closure.ml[1006,38827+32]..[1006,38827+41])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[1006,38827+42]..[1006,38827+44])
                                                  Pexp_ident "id" (middle_end/closure/closure.ml[1006,38827+42]..[1006,38827+44])
                                            ]
                                          expression (middle_end/closure/closure.ml[1006,38827+46]..[1006,38827+50])
                                            Pexp_ident "ulam" (middle_end/closure/closure.ml[1006,38827+46]..[1006,38827+50])
                                          expression (middle_end/closure/closure.ml[1006,38827+52]..[1006,38827+57])
                                            Pexp_ident "ubody" (middle_end/closure/closure.ml[1006,38827+52]..[1006,38827+57])
                                        ]
                                  expression (middle_end/closure/closure.ml[1006,38827+60]..[1006,38827+65])
                                    Pexp_ident "abody" (middle_end/closure/closure.ml[1006,38827+60]..[1006,38827+65])
                                ]
                        ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1008,38904+4]..[1008,38904+32])
                      Ppat_construct "Lmutlet" (middle_end/closure/closure.ml[1008,38904+4]..[1008,38904+11])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1008,38904+11]..[1008,38904+32])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1008,38904+12]..[1008,38904+16])
                              Ppat_var "kind" (middle_end/closure/closure.ml[1008,38904+12]..[1008,38904+16])
                            pattern (middle_end/closure/closure.ml[1008,38904+18]..[1008,38904+20])
                              Ppat_var "id" (middle_end/closure/closure.ml[1008,38904+18]..[1008,38904+20])
                            pattern (middle_end/closure/closure.ml[1008,38904+22]..[1008,38904+25])
                              Ppat_var "lam" (middle_end/closure/closure.ml[1008,38904+22]..[1008,38904+25])
                            pattern (middle_end/closure/closure.ml[1008,38904+27]..[1008,38904+31])
                              Ppat_var "body" (middle_end/closure/closure.ml[1008,38904+27]..[1008,38904+31])
                          ]
                    expression (middle_end/closure/closure.ml[1009,38940+5]..[1012,39105+60])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[1009,38940+9]..[1009,38940+18])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1009,38940+10]..[1009,38940+14])
                                Ppat_var "ulam" (middle_end/closure/closure.ml[1009,38940+10]..[1009,38940+14])
                              pattern (middle_end/closure/closure.ml[1009,38940+16]..[1009,38940+17])
                                Ppat_any
                            ]
                          expression (middle_end/closure/closure.ml[1009,38940+21]..[1009,38940+43])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1009,38940+21]..[1009,38940+32])
                              Pexp_ident "close_named" (middle_end/closure/closure.ml[1009,38940+21]..[1009,38940+32])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1009,38940+33]..[1009,38940+36])
                                  Pexp_ident "env" (middle_end/closure/closure.ml[1009,38940+33]..[1009,38940+36])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1009,38940+37]..[1009,38940+39])
                                  Pexp_ident "id" (middle_end/closure/closure.ml[1009,38940+37]..[1009,38940+39])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1009,38940+40]..[1009,38940+43])
                                  Pexp_ident "lam" (middle_end/closure/closure.ml[1009,38940+40]..[1009,38940+43])
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[1010,38987+5]..[1012,39105+60])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[1010,38987+9]..[1010,38987+12])
                              Ppat_var "env" (middle_end/closure/closure.ml[1010,38987+9]..[1010,38987+12])
                            expression (middle_end/closure/closure.ml[1010,38987+15]..[1010,38987+70])
                              Pexp_record
                              [
                                "mutable_vars" (middle_end/closure/closure.ml[1010,38987+25]..[1010,38987+37])
                                  expression (middle_end/closure/closure.ml[1010,38987+40]..[1010,38987+69])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[1010,38987+40]..[1010,38987+49])
                                      Pexp_ident "V.Set.add" (middle_end/closure/closure.ml[1010,38987+40]..[1010,38987+49])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1010,38987+50]..[1010,38987+52])
                                          Pexp_ident "id" (middle_end/closure/closure.ml[1010,38987+50]..[1010,38987+52])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1010,38987+53]..[1010,38987+69])
                                          Pexp_field
                                          expression (middle_end/closure/closure.ml[1010,38987+53]..[1010,38987+56])
                                            Pexp_ident "env" (middle_end/closure/closure.ml[1010,38987+53]..[1010,38987+56])
                                          "mutable_vars" (middle_end/closure/closure.ml[1010,38987+57]..[1010,38987+69])
                                    ]
                              ]
                              Some
                                expression (middle_end/closure/closure.ml[1010,38987+16]..[1010,38987+19])
                                  Pexp_ident "env" (middle_end/closure/closure.ml[1010,38987+16]..[1010,38987+19])
                        ]
                        expression (middle_end/closure/closure.ml[1011,39061+5]..[1012,39105+60])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[1011,39061+9]..[1011,39061+23])
                                Ppat_tuple
                                [
                                  pattern (middle_end/closure/closure.ml[1011,39061+10]..[1011,39061+15])
                                    Ppat_var "ubody" (middle_end/closure/closure.ml[1011,39061+10]..[1011,39061+15])
                                  pattern (middle_end/closure/closure.ml[1011,39061+17]..[1011,39061+22])
                                    Ppat_var "abody" (middle_end/closure/closure.ml[1011,39061+17]..[1011,39061+22])
                                ]
                              expression (middle_end/closure/closure.ml[1011,39061+26]..[1011,39061+40])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1011,39061+26]..[1011,39061+31])
                                  Pexp_ident "close" (middle_end/closure/closure.ml[1011,39061+26]..[1011,39061+31])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1011,39061+32]..[1011,39061+35])
                                      Pexp_ident "env" (middle_end/closure/closure.ml[1011,39061+32]..[1011,39061+35])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1011,39061+36]..[1011,39061+40])
                                      Pexp_ident "body" (middle_end/closure/closure.ml[1011,39061+36]..[1011,39061+40])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[1012,39105+5]..[1012,39105+60])
                            Pexp_tuple
                            [
                              expression (middle_end/closure/closure.ml[1012,39105+6]..[1012,39105+52])
                                Pexp_construct "Ulet" (middle_end/closure/closure.ml[1012,39105+6]..[1012,39105+10])
                                Some
                                  expression (middle_end/closure/closure.ml[1012,39105+10]..[1012,39105+52])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/closure/closure.ml[1012,39105+11]..[1012,39105+18])
                                        Pexp_construct "Mutable" (middle_end/closure/closure.ml[1012,39105+11]..[1012,39105+18])
                                        None
                                      expression (middle_end/closure/closure.ml[1012,39105+20]..[1012,39105+24])
                                        Pexp_ident "kind" (middle_end/closure/closure.ml[1012,39105+20]..[1012,39105+24])
                                      expression (middle_end/closure/closure.ml[1012,39105+26]..[1012,39105+38])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[1012,39105+26]..[1012,39105+35])
                                          Pexp_ident "VP.create" (middle_end/closure/closure.ml[1012,39105+26]..[1012,39105+35])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1012,39105+36]..[1012,39105+38])
                                              Pexp_ident "id" (middle_end/closure/closure.ml[1012,39105+36]..[1012,39105+38])
                                        ]
                                      expression (middle_end/closure/closure.ml[1012,39105+40]..[1012,39105+44])
                                        Pexp_ident "ulam" (middle_end/closure/closure.ml[1012,39105+40]..[1012,39105+44])
                                      expression (middle_end/closure/closure.ml[1012,39105+46]..[1012,39105+51])
                                        Pexp_ident "ubody" (middle_end/closure/closure.ml[1012,39105+46]..[1012,39105+51])
                                    ]
                              expression (middle_end/closure/closure.ml[1012,39105+54]..[1012,39105+59])
                                Pexp_ident "abody" (middle_end/closure/closure.ml[1012,39105+54]..[1012,39105+59])
                            ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1013,39166+4]..[1013,39166+23])
                      Ppat_construct "Lletrec" (middle_end/closure/closure.ml[1013,39166+4]..[1013,39166+11])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1013,39166+11]..[1013,39166+23])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1013,39166+12]..[1013,39166+16])
                              Ppat_var "defs" (middle_end/closure/closure.ml[1013,39166+12]..[1013,39166+16])
                            pattern (middle_end/closure/closure.ml[1013,39166+18]..[1013,39166+22])
                              Ppat_var "body" (middle_end/closure/closure.ml[1013,39166+18]..[1013,39166+22])
                          ]
                    expression (middle_end/closure/closure.ml[1014,39193+6]..[1048,40648+9])
                      Pexp_ifthenelse
                      expression (middle_end/closure/closure.ml[1014,39193+9]..[1016,39277+15])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1014,39193+9]..[1014,39193+21])
                          Pexp_ident "List.for_all" (middle_end/closure/closure.ml[1014,39193+9]..[1014,39193+21])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1015,39215+11]..[1015,39215+61])
                              Pexp_function
                              [
                                <case>
                                  pattern (middle_end/closure/closure.ml[1015,39215+21]..[1015,39215+39])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[1015,39215+22]..[1015,39215+25])
                                        Ppat_var "_id" (middle_end/closure/closure.ml[1015,39215+22]..[1015,39215+25])
                                      pattern (middle_end/closure/closure.ml[1015,39215+27]..[1015,39215+38])
                                        Ppat_construct "Lfunction" (middle_end/closure/closure.ml[1015,39215+27]..[1015,39215+36])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[1015,39215+37]..[1015,39215+38])
                                            Ppat_any
                                    ]
                                  expression (middle_end/closure/closure.ml[1015,39215+43]..[1015,39215+47])
                                    Pexp_construct "true" (middle_end/closure/closure.ml[1015,39215+43]..[1015,39215+47])
                                    None
                                <case>
                                  pattern (middle_end/closure/closure.ml[1015,39215+50]..[1015,39215+51])
                                    Ppat_any
                                  expression (middle_end/closure/closure.ml[1015,39215+55]..[1015,39215+60])
                                    Pexp_construct "false" (middle_end/closure/closure.ml[1015,39215+55]..[1015,39215+60])
                                    None
                              ]
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1016,39277+11]..[1016,39277+15])
                              Pexp_ident "defs" (middle_end/closure/closure.ml[1016,39277+11]..[1016,39277+15])
                        ]
                      expression (middle_end/closure/closure.ml[1017,39293+11]..[1036,40088+9])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[1019,39363+12]..[1019,39363+25])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[1019,39363+13]..[1019,39363+17])
                                  Ppat_var "clos" (middle_end/closure/closure.ml[1019,39363+13]..[1019,39363+17])
                                pattern (middle_end/closure/closure.ml[1019,39363+19]..[1019,39363+24])
                                  Ppat_var "infos" (middle_end/closure/closure.ml[1019,39363+19]..[1019,39363+24])
                              ]
                            expression (middle_end/closure/closure.ml[1019,39363+28]..[1019,39363+52])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[1019,39363+28]..[1019,39363+43])
                                Pexp_ident "close_functions" (middle_end/closure/closure.ml[1019,39363+28]..[1019,39363+43])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1019,39363+44]..[1019,39363+47])
                                    Pexp_ident "env" (middle_end/closure/closure.ml[1019,39363+44]..[1019,39363+47])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1019,39363+48]..[1019,39363+52])
                                    Pexp_ident "defs" (middle_end/closure/closure.ml[1019,39363+48]..[1019,39363+52])
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[1020,39419+8]..[1035,40071+16])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[1020,39419+12]..[1020,39419+22])
                                Ppat_var "clos_ident" (middle_end/closure/closure.ml[1020,39419+12]..[1020,39419+22])
                              expression (middle_end/closure/closure.ml[1020,39419+25]..[1020,39419+46])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1020,39419+25]..[1020,39419+39])
                                  Pexp_ident "V.create_local" (middle_end/closure/closure.ml[1020,39419+25]..[1020,39419+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1020,39419+40]..[1020,39419+46])
                                      Pexp_constant PConst_string("clos",(middle_end/closure/closure.ml[1020,39419+41]..[1020,39419+45]),None)
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[1021,39469+8]..[1035,40071+16])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/closure/closure.ml[1021,39469+12]..[1021,39469+21])
                                  Ppat_var "fenv_body" (middle_end/closure/closure.ml[1021,39469+12]..[1021,39469+21])
                                expression (middle_end/closure/closure.ml[1022,39493+10]..[1024,39589+22])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1022,39493+10]..[1022,39493+25])
                                    Pexp_ident "List.fold_right" (middle_end/closure/closure.ml[1022,39493+10]..[1022,39493+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1023,39519+12]..[1023,39519+69])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/closure/closure.ml[1023,39519+17]..[1023,39519+35])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[1023,39519+18]..[1023,39519+20])
                                              Ppat_var "id" (middle_end/closure/closure.ml[1023,39519+18]..[1023,39519+20])
                                            pattern (middle_end/closure/closure.ml[1023,39519+22]..[1023,39519+26])
                                              Ppat_var "_pos" (middle_end/closure/closure.ml[1023,39519+22]..[1023,39519+26])
                                            pattern (middle_end/closure/closure.ml[1023,39519+28]..[1023,39519+34])
                                              Ppat_var "approx" (middle_end/closure/closure.ml[1023,39519+28]..[1023,39519+34])
                                          ]
                                        expression (middle_end/closure/closure.ml[1023,39519+36]..[1023,39519+68]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/closure/closure.ml[1023,39519+36]..[1023,39519+40])
                                            Ppat_var "fenv" (middle_end/closure/closure.ml[1023,39519+36]..[1023,39519+40])
                                          expression (middle_end/closure/closure.ml[1023,39519+44]..[1023,39519+68])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[1023,39519+44]..[1023,39519+53])
                                              Pexp_ident "V.Map.add" (middle_end/closure/closure.ml[1023,39519+44]..[1023,39519+53])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[1023,39519+54]..[1023,39519+56])
                                                  Pexp_ident "id" (middle_end/closure/closure.ml[1023,39519+54]..[1023,39519+56])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[1023,39519+57]..[1023,39519+63])
                                                  Pexp_ident "approx" (middle_end/closure/closure.ml[1023,39519+57]..[1023,39519+63])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[1023,39519+64]..[1023,39519+68])
                                                  Pexp_ident "fenv" (middle_end/closure/closure.ml[1023,39519+64]..[1023,39519+68])
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1024,39589+12]..[1024,39589+17])
                                        Pexp_ident "infos" (middle_end/closure/closure.ml[1024,39589+12]..[1024,39589+17])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1024,39589+18]..[1024,39589+22])
                                        Pexp_ident "fenv" (middle_end/closure/closure.ml[1024,39589+18]..[1024,39589+22])
                                  ]
                            ]
                            expression (middle_end/closure/closure.ml[1025,39615+8]..[1035,40071+16])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/closure/closure.ml[1025,39615+12]..[1025,39615+27])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[1025,39615+13]..[1025,39615+18])
                                        Ppat_var "ubody" (middle_end/closure/closure.ml[1025,39615+13]..[1025,39615+18])
                                      pattern (middle_end/closure/closure.ml[1025,39615+20]..[1025,39615+26])
                                        Ppat_var "approx" (middle_end/closure/closure.ml[1025,39615+20]..[1025,39615+26])
                                    ]
                                  expression (middle_end/closure/closure.ml[1026,39645+10]..[1026,39645+70])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[1026,39645+10]..[1026,39645+15])
                                      Pexp_ident "close" (middle_end/closure/closure.ml[1026,39645+10]..[1026,39645+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1026,39645+16]..[1026,39645+65])
                                          Pexp_record
                                          [
                                            "backend" (middle_end/closure/closure.ml[1026,39645+18]..[1026,39645+25]) ghost
                                              expression (middle_end/closure/closure.ml[1026,39645+18]..[1026,39645+25])
                                                Pexp_ident "backend" (middle_end/closure/closure.ml[1026,39645+18]..[1026,39645+25])
                                            "fenv" (middle_end/closure/closure.ml[1026,39645+27]..[1026,39645+31])
                                              expression (middle_end/closure/closure.ml[1026,39645+34]..[1026,39645+43])
                                                Pexp_ident "fenv_body" (middle_end/closure/closure.ml[1026,39645+34]..[1026,39645+43])
                                            "cenv" (middle_end/closure/closure.ml[1026,39645+45]..[1026,39645+49]) ghost
                                              expression (middle_end/closure/closure.ml[1026,39645+45]..[1026,39645+49])
                                                Pexp_ident "cenv" (middle_end/closure/closure.ml[1026,39645+45]..[1026,39645+49])
                                            "mutable_vars" (middle_end/closure/closure.ml[1026,39645+51]..[1026,39645+63]) ghost
                                              expression (middle_end/closure/closure.ml[1026,39645+51]..[1026,39645+63])
                                                Pexp_ident "mutable_vars" (middle_end/closure/closure.ml[1026,39645+51]..[1026,39645+63])
                                          ]
                                          None
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1026,39645+66]..[1026,39645+70])
                                          Pexp_ident "body" (middle_end/closure/closure.ml[1026,39645+66]..[1026,39645+70])
                                    ]
                              ]
                              expression (middle_end/closure/closure.ml[1027,39719+8]..[1035,40071+16])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/closure/closure.ml[1027,39719+12]..[1027,39719+14])
                                      Ppat_var "sb" (middle_end/closure/closure.ml[1027,39719+12]..[1027,39719+14])
                                    expression (middle_end/closure/closure.ml[1028,39736+10]..[1031,39867+29])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[1028,39736+10]..[1028,39736+25])
                                        Pexp_ident "List.fold_right" (middle_end/closure/closure.ml[1028,39736+10]..[1028,39736+25])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[1029,39762+12]..[1030,39804+62])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/closure/closure.ml[1029,39762+17]..[1029,39762+35])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/closure/closure.ml[1029,39762+18]..[1029,39762+20])
                                                  Ppat_var "id" (middle_end/closure/closure.ml[1029,39762+18]..[1029,39762+20])
                                                pattern (middle_end/closure/closure.ml[1029,39762+22]..[1029,39762+25])
                                                  Ppat_var "pos" (middle_end/closure/closure.ml[1029,39762+22]..[1029,39762+25])
                                                pattern (middle_end/closure/closure.ml[1029,39762+27]..[1029,39762+34])
                                                  Ppat_var "_approx" (middle_end/closure/closure.ml[1029,39762+27]..[1029,39762+34])
                                              ]
                                            expression (middle_end/closure/closure.ml[1029,39762+36]..[1030,39804+61]) ghost
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/closure/closure.ml[1029,39762+36]..[1029,39762+38])
                                                Ppat_var "sb" (middle_end/closure/closure.ml[1029,39762+36]..[1029,39762+38])
                                              expression (middle_end/closure/closure.ml[1030,39804+14]..[1030,39804+61])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[1030,39804+14]..[1030,39804+23])
                                                  Pexp_ident "V.Map.add" (middle_end/closure/closure.ml[1030,39804+14]..[1030,39804+23])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[1030,39804+24]..[1030,39804+26])
                                                      Pexp_ident "id" (middle_end/closure/closure.ml[1030,39804+24]..[1030,39804+26])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[1030,39804+27]..[1030,39804+58])
                                                      Pexp_construct "Uoffset" (middle_end/closure/closure.ml[1030,39804+28]..[1030,39804+35])
                                                      Some
                                                        expression (middle_end/closure/closure.ml[1030,39804+35]..[1030,39804+57])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/closure/closure.ml[1030,39804+36]..[1030,39804+51])
                                                              Pexp_construct "Uvar" (middle_end/closure/closure.ml[1030,39804+36]..[1030,39804+40])
                                                              Some
                                                                expression (middle_end/closure/closure.ml[1030,39804+41]..[1030,39804+51])
                                                                  Pexp_ident "clos_ident" (middle_end/closure/closure.ml[1030,39804+41]..[1030,39804+51])
                                                            expression (middle_end/closure/closure.ml[1030,39804+53]..[1030,39804+56])
                                                              Pexp_ident "pos" (middle_end/closure/closure.ml[1030,39804+53]..[1030,39804+56])
                                                          ]
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[1030,39804+59]..[1030,39804+61])
                                                      Pexp_ident "sb" (middle_end/closure/closure.ml[1030,39804+59]..[1030,39804+61])
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[1031,39867+12]..[1031,39867+17])
                                            Pexp_ident "infos" (middle_end/closure/closure.ml[1031,39867+12]..[1031,39867+17])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[1031,39867+18]..[1031,39867+29])
                                            Pexp_ident "V.Map.empty" (middle_end/closure/closure.ml[1031,39867+18]..[1031,39867+29])
                                      ]
                                ]
                                expression (middle_end/closure/closure.ml[1032,39900+8]..[1035,40071+16])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/closure/closure.ml[1032,39900+9]..[1034,40042+27])
                                      Pexp_construct "Ulet" (middle_end/closure/closure.ml[1032,39900+9]..[1032,39900+13])
                                      Some
                                        expression (middle_end/closure/closure.ml[1032,39900+13]..[1034,40042+27])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/closure/closure.ml[1032,39900+14]..[1032,39900+23])
                                              Pexp_construct "Immutable" (middle_end/closure/closure.ml[1032,39900+14]..[1032,39900+23])
                                              None
                                            expression (middle_end/closure/closure.ml[1032,39900+25]..[1032,39900+32])
                                              Pexp_construct "Pgenval" (middle_end/closure/closure.ml[1032,39900+25]..[1032,39900+32])
                                              None
                                            expression (middle_end/closure/closure.ml[1032,39900+34]..[1032,39900+54])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[1032,39900+34]..[1032,39900+43])
                                                Pexp_ident "VP.create" (middle_end/closure/closure.ml[1032,39900+34]..[1032,39900+43])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1032,39900+44]..[1032,39900+54])
                                                    Pexp_ident "clos_ident" (middle_end/closure/closure.ml[1032,39900+44]..[1032,39900+54])
                                              ]
                                            expression (middle_end/closure/closure.ml[1032,39900+56]..[1032,39900+60])
                                              Pexp_ident "clos" (middle_end/closure/closure.ml[1032,39900+56]..[1032,39900+60])
                                            expression (middle_end/closure/closure.ml[1033,39962+14]..[1034,40042+26])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[1033,39962+14]..[1033,39962+24])
                                                Pexp_ident "substitute" (middle_end/closure/closure.ml[1033,39962+14]..[1033,39962+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1033,39962+25]..[1033,39962+39])
                                                    Pexp_ident "Debuginfo.none" (middle_end/closure/closure.ml[1033,39962+25]..[1033,39962+39])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1033,39962+40]..[1033,39962+76])
                                                    Pexp_tuple
                                                    [
                                                      expression (middle_end/closure/closure.ml[1033,39962+41]..[1033,39962+48])
                                                        Pexp_ident "backend" (middle_end/closure/closure.ml[1033,39962+41]..[1033,39962+48])
                                                      expression (middle_end/closure/closure.ml[1033,39962+50]..[1033,39962+75])
                                                        Pexp_apply
                                                        expression (middle_end/closure/closure.ml[1033,39962+50]..[1033,39962+51])
                                                          Pexp_ident "!" (middle_end/closure/closure.ml[1033,39962+50]..[1033,39962+51])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[1033,39962+51]..[1033,39962+75])
                                                              Pexp_ident "Clflags.float_const_prop" (middle_end/closure/closure.ml[1033,39962+51]..[1033,39962+75])
                                                        ]
                                                    ]
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1033,39962+77]..[1033,39962+79])
                                                    Pexp_ident "sb" (middle_end/closure/closure.ml[1033,39962+77]..[1033,39962+79])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1034,40042+16]..[1034,40042+20])
                                                    Pexp_construct "None" (middle_end/closure/closure.ml[1034,40042+16]..[1034,40042+20])
                                                    None
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1034,40042+21]..[1034,40042+26])
                                                    Pexp_ident "ubody" (middle_end/closure/closure.ml[1034,40042+21]..[1034,40042+26])
                                              ]
                                          ]
                                    expression (middle_end/closure/closure.ml[1035,40071+9]..[1035,40071+15])
                                      Pexp_ident "approx" (middle_end/closure/closure.ml[1035,40071+9]..[1035,40071+15])
                                  ]
                      Some
                        expression (middle_end/closure/closure.ml[1036,40088+15]..[1048,40648+9])
                          Pexp_let Rec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[1038,40168+16]..[1038,40168+25])
                                Ppat_var "clos_defs" (middle_end/closure/closure.ml[1038,40168+16]..[1038,40168+25])
                              expression (middle_end/closure/closure.ml[1038,40168+28]..[1043,40375+74])
                                Pexp_function
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[1039,40205+10]..[1039,40205+12])
                                      Ppat_construct "[]" (middle_end/closure/closure.ml[1039,40205+10]..[1039,40205+12])
                                      None
                                    expression (middle_end/closure/closure.ml[1039,40205+16]..[1039,40205+26])
                                      Pexp_tuple
                                      [
                                        expression (middle_end/closure/closure.ml[1039,40205+17]..[1039,40205+19])
                                          Pexp_construct "[]" (middle_end/closure/closure.ml[1039,40205+17]..[1039,40205+19])
                                          None
                                        expression (middle_end/closure/closure.ml[1039,40205+21]..[1039,40205+25])
                                          Pexp_ident "fenv" (middle_end/closure/closure.ml[1039,40205+21]..[1039,40205+25])
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[1040,40232+10]..[1040,40232+26])
                                      Ppat_construct "::" (middle_end/closure/closure.ml[1040,40232+20]..[1040,40232+22])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[1040,40232+10]..[1040,40232+26]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[1040,40232+10]..[1040,40232+19])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/closure/closure.ml[1040,40232+11]..[1040,40232+13])
                                                  Ppat_var "id" (middle_end/closure/closure.ml[1040,40232+11]..[1040,40232+13])
                                                pattern (middle_end/closure/closure.ml[1040,40232+15]..[1040,40232+18])
                                                  Ppat_var "lam" (middle_end/closure/closure.ml[1040,40232+15]..[1040,40232+18])
                                              ]
                                            pattern (middle_end/closure/closure.ml[1040,40232+23]..[1040,40232+26])
                                              Ppat_var "rem" (middle_end/closure/closure.ml[1040,40232+23]..[1040,40232+26])
                                          ]
                                    expression (middle_end/closure/closure.ml[1041,40262+12]..[1043,40375+74])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/closure/closure.ml[1041,40262+16]..[1041,40262+34])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[1041,40262+17]..[1041,40262+22])
                                                Ppat_var "udefs" (middle_end/closure/closure.ml[1041,40262+17]..[1041,40262+22])
                                              pattern (middle_end/closure/closure.ml[1041,40262+24]..[1041,40262+33])
                                                Ppat_var "fenv_body" (middle_end/closure/closure.ml[1041,40262+24]..[1041,40262+33])
                                            ]
                                          expression (middle_end/closure/closure.ml[1041,40262+37]..[1041,40262+50])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[1041,40262+37]..[1041,40262+46])
                                              Pexp_ident "clos_defs" (middle_end/closure/closure.ml[1041,40262+37]..[1041,40262+46])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[1041,40262+47]..[1041,40262+50])
                                                  Pexp_ident "rem" (middle_end/closure/closure.ml[1041,40262+47]..[1041,40262+50])
                                            ]
                                      ]
                                      expression (middle_end/closure/closure.ml[1042,40316+12]..[1043,40375+74])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/closure/closure.ml[1042,40316+16]..[1042,40316+30])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/closure/closure.ml[1042,40316+17]..[1042,40316+21])
                                                  Ppat_var "ulam" (middle_end/closure/closure.ml[1042,40316+17]..[1042,40316+21])
                                                pattern (middle_end/closure/closure.ml[1042,40316+23]..[1042,40316+29])
                                                  Ppat_var "approx" (middle_end/closure/closure.ml[1042,40316+23]..[1042,40316+29])
                                              ]
                                            expression (middle_end/closure/closure.ml[1042,40316+33]..[1042,40316+55])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[1042,40316+33]..[1042,40316+44])
                                                Pexp_ident "close_named" (middle_end/closure/closure.ml[1042,40316+33]..[1042,40316+44])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1042,40316+45]..[1042,40316+48])
                                                    Pexp_ident "env" (middle_end/closure/closure.ml[1042,40316+45]..[1042,40316+48])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1042,40316+49]..[1042,40316+51])
                                                    Pexp_ident "id" (middle_end/closure/closure.ml[1042,40316+49]..[1042,40316+51])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1042,40316+52]..[1042,40316+55])
                                                    Pexp_ident "lam" (middle_end/closure/closure.ml[1042,40316+52]..[1042,40316+55])
                                              ]
                                        ]
                                        expression (middle_end/closure/closure.ml[1043,40375+12]..[1043,40375+74])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/closure/closure.ml[1043,40375+13]..[1043,40375+42])
                                              Pexp_construct "::" (middle_end/closure/closure.ml[1043,40375+34]..[1043,40375+36])
                                              Some
                                                expression (middle_end/closure/closure.ml[1043,40375+13]..[1043,40375+42]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (middle_end/closure/closure.ml[1043,40375+13]..[1043,40375+33])
                                                      Pexp_tuple
                                                      [
                                                        expression (middle_end/closure/closure.ml[1043,40375+14]..[1043,40375+26])
                                                          Pexp_apply
                                                          expression (middle_end/closure/closure.ml[1043,40375+14]..[1043,40375+23])
                                                            Pexp_ident "VP.create" (middle_end/closure/closure.ml[1043,40375+14]..[1043,40375+23])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[1043,40375+24]..[1043,40375+26])
                                                                Pexp_ident "id" (middle_end/closure/closure.ml[1043,40375+24]..[1043,40375+26])
                                                          ]
                                                        expression (middle_end/closure/closure.ml[1043,40375+28]..[1043,40375+32])
                                                          Pexp_ident "ulam" (middle_end/closure/closure.ml[1043,40375+28]..[1043,40375+32])
                                                      ]
                                                    expression (middle_end/closure/closure.ml[1043,40375+37]..[1043,40375+42])
                                                      Pexp_ident "udefs" (middle_end/closure/closure.ml[1043,40375+37]..[1043,40375+42])
                                                  ]
                                            expression (middle_end/closure/closure.ml[1043,40375+44]..[1043,40375+73])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[1043,40375+44]..[1043,40375+53])
                                                Pexp_ident "V.Map.add" (middle_end/closure/closure.ml[1043,40375+44]..[1043,40375+53])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1043,40375+54]..[1043,40375+56])
                                                    Pexp_ident "id" (middle_end/closure/closure.ml[1043,40375+54]..[1043,40375+56])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1043,40375+57]..[1043,40375+63])
                                                    Pexp_ident "approx" (middle_end/closure/closure.ml[1043,40375+57]..[1043,40375+63])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1043,40375+64]..[1043,40375+73])
                                                    Pexp_ident "fenv_body" (middle_end/closure/closure.ml[1043,40375+64]..[1043,40375+73])
                                              ]
                                          ]
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[1044,40453+8]..[1047,40608+39])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/closure/closure.ml[1044,40453+12]..[1044,40453+30])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[1044,40453+13]..[1044,40453+18])
                                      Ppat_var "udefs" (middle_end/closure/closure.ml[1044,40453+13]..[1044,40453+18])
                                    pattern (middle_end/closure/closure.ml[1044,40453+20]..[1044,40453+29])
                                      Ppat_var "fenv_body" (middle_end/closure/closure.ml[1044,40453+20]..[1044,40453+29])
                                  ]
                                expression (middle_end/closure/closure.ml[1044,40453+33]..[1044,40453+47])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1044,40453+33]..[1044,40453+42])
                                    Pexp_ident "clos_defs" (middle_end/closure/closure.ml[1044,40453+33]..[1044,40453+42])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1044,40453+43]..[1044,40453+47])
                                        Pexp_ident "defs" (middle_end/closure/closure.ml[1044,40453+43]..[1044,40453+47])
                                  ]
                            ]
                            expression (middle_end/closure/closure.ml[1045,40504+8]..[1047,40608+39])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/closure/closure.ml[1045,40504+12]..[1045,40504+27])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[1045,40504+13]..[1045,40504+18])
                                        Ppat_var "ubody" (middle_end/closure/closure.ml[1045,40504+13]..[1045,40504+18])
                                      pattern (middle_end/closure/closure.ml[1045,40504+20]..[1045,40504+26])
                                        Ppat_var "approx" (middle_end/closure/closure.ml[1045,40504+20]..[1045,40504+26])
                                    ]
                                  expression (middle_end/closure/closure.ml[1046,40534+10]..[1046,40534+70])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[1046,40534+10]..[1046,40534+15])
                                      Pexp_ident "close" (middle_end/closure/closure.ml[1046,40534+10]..[1046,40534+15])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1046,40534+16]..[1046,40534+65])
                                          Pexp_record
                                          [
                                            "backend" (middle_end/closure/closure.ml[1046,40534+18]..[1046,40534+25]) ghost
                                              expression (middle_end/closure/closure.ml[1046,40534+18]..[1046,40534+25])
                                                Pexp_ident "backend" (middle_end/closure/closure.ml[1046,40534+18]..[1046,40534+25])
                                            "fenv" (middle_end/closure/closure.ml[1046,40534+27]..[1046,40534+31])
                                              expression (middle_end/closure/closure.ml[1046,40534+34]..[1046,40534+43])
                                                Pexp_ident "fenv_body" (middle_end/closure/closure.ml[1046,40534+34]..[1046,40534+43])
                                            "cenv" (middle_end/closure/closure.ml[1046,40534+45]..[1046,40534+49]) ghost
                                              expression (middle_end/closure/closure.ml[1046,40534+45]..[1046,40534+49])
                                                Pexp_ident "cenv" (middle_end/closure/closure.ml[1046,40534+45]..[1046,40534+49])
                                            "mutable_vars" (middle_end/closure/closure.ml[1046,40534+51]..[1046,40534+63]) ghost
                                              expression (middle_end/closure/closure.ml[1046,40534+51]..[1046,40534+63])
                                                Pexp_ident "mutable_vars" (middle_end/closure/closure.ml[1046,40534+51]..[1046,40534+63])
                                          ]
                                          None
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1046,40534+66]..[1046,40534+70])
                                          Pexp_ident "body" (middle_end/closure/closure.ml[1046,40534+66]..[1046,40534+70])
                                    ]
                              ]
                              expression (middle_end/closure/closure.ml[1047,40608+8]..[1047,40608+39])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[1047,40608+9]..[1047,40608+30])
                                    Pexp_construct "Uletrec" (middle_end/closure/closure.ml[1047,40608+9]..[1047,40608+16])
                                    Some
                                      expression (middle_end/closure/closure.ml[1047,40608+16]..[1047,40608+30])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/closure/closure.ml[1047,40608+17]..[1047,40608+22])
                                            Pexp_ident "udefs" (middle_end/closure/closure.ml[1047,40608+17]..[1047,40608+22])
                                          expression (middle_end/closure/closure.ml[1047,40608+24]..[1047,40608+29])
                                            Pexp_ident "ubody" (middle_end/closure/closure.ml[1047,40608+24]..[1047,40608+29])
                                        ]
                                  expression (middle_end/closure/closure.ml[1047,40608+32]..[1047,40608+38])
                                    Pexp_ident "approx" (middle_end/closure/closure.ml[1047,40608+32]..[1047,40608+38])
                                ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1050,40689+4]..[1050,40689+34])
                      Ppat_construct "Lprim" (middle_end/closure/closure.ml[1050,40689+4]..[1050,40689+9])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1050,40689+9]..[1050,40689+34])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1050,40689+10]..[1050,40689+20])
                              Ppat_construct "Pctconst" (middle_end/closure/closure.ml[1050,40689+10]..[1050,40689+18])
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[1050,40689+19]..[1050,40689+20])
                                  Ppat_var "c" (middle_end/closure/closure.ml[1050,40689+19]..[1050,40689+20])
                            pattern (middle_end/closure/closure.ml[1050,40689+22]..[1050,40689+27])
                              Ppat_construct "::" (middle_end/closure/closure.ml[1050,40689+23]..[1050,40689+27]) ghost
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[1050,40689+23]..[1050,40689+27]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[1050,40689+23]..[1050,40689+26])
                                      Ppat_var "arg" (middle_end/closure/closure.ml[1050,40689+23]..[1050,40689+26])
                                    pattern (middle_end/closure/closure.ml[1050,40689+26]..[1050,40689+27]) ghost
                                      Ppat_construct "[]" (middle_end/closure/closure.ml[1050,40689+26]..[1050,40689+27]) ghost
                                      None
                                  ]
                            pattern (middle_end/closure/closure.ml[1050,40689+29]..[1050,40689+33])
                              Ppat_var "_loc" (middle_end/closure/closure.ml[1050,40689+29]..[1050,40689+33])
                          ]
                    expression (middle_end/closure/closure.ml[1051,40727+6]..[1065,41398+62])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[1051,40727+10]..[1051,40727+21])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1051,40727+10]..[1051,40727+13])
                                Ppat_var "cst" (middle_end/closure/closure.ml[1051,40727+10]..[1051,40727+13])
                              pattern (middle_end/closure/closure.ml[1051,40727+15]..[1051,40727+21])
                                Ppat_var "approx" (middle_end/closure/closure.ml[1051,40727+15]..[1051,40727+21])
                            ]
                          expression (middle_end/closure/closure.ml[1052,40751+8]..[1061,41234+28])
                            Pexp_match
                            expression (middle_end/closure/closure.ml[1052,40751+14]..[1052,40751+15])
                              Pexp_ident "c" (middle_end/closure/closure.ml[1052,40751+14]..[1052,40751+15])
                            [
                              <case>
                                pattern (middle_end/closure/closure.ml[1053,40772+10]..[1053,40772+20])
                                  Ppat_construct "Big_endian" (middle_end/closure/closure.ml[1053,40772+10]..[1053,40772+20])
                                  None
                                expression (middle_end/closure/closure.ml[1053,40772+24]..[1053,40772+52])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1053,40772+24]..[1053,40772+39])
                                    Pexp_ident "make_const_bool" (middle_end/closure/closure.ml[1053,40772+24]..[1053,40772+39])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1053,40772+40]..[1053,40772+52])
                                        Pexp_ident "B.big_endian" (middle_end/closure/closure.ml[1053,40772+40]..[1053,40772+52])
                                  ]
                              <case>
                                pattern (middle_end/closure/closure.ml[1054,40825+10]..[1054,40825+19])
                                  Ppat_construct "Word_size" (middle_end/closure/closure.ml[1054,40825+10]..[1054,40825+19])
                                  None
                                expression (middle_end/closure/closure.ml[1054,40825+23]..[1054,40825+52])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1054,40825+23]..[1054,40825+37])
                                    Pexp_ident "make_const_int" (middle_end/closure/closure.ml[1054,40825+23]..[1054,40825+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1054,40825+38]..[1054,40825+52])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[1054,40825+40]..[1054,40825+41])
                                          Pexp_ident "*" (middle_end/closure/closure.ml[1054,40825+40]..[1054,40825+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1054,40825+39]..[1054,40825+40])
                                              Pexp_constant PConst_int (8,None)
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1054,40825+41]..[1054,40825+51])
                                              Pexp_ident "B.size_int" (middle_end/closure/closure.ml[1054,40825+41]..[1054,40825+51])
                                        ]
                                  ]
                              <case>
                                pattern (middle_end/closure/closure.ml[1055,40878+10]..[1055,40878+18])
                                  Ppat_construct "Int_size" (middle_end/closure/closure.ml[1055,40878+10]..[1055,40878+18])
                                  None
                                expression (middle_end/closure/closure.ml[1055,40878+22]..[1055,40878+55])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1055,40878+22]..[1055,40878+36])
                                    Pexp_ident "make_const_int" (middle_end/closure/closure.ml[1055,40878+22]..[1055,40878+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1055,40878+37]..[1055,40878+55])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[1055,40878+51]..[1055,40878+52])
                                          Pexp_ident "-" (middle_end/closure/closure.ml[1055,40878+51]..[1055,40878+52])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1055,40878+38]..[1055,40878+50])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[1055,40878+39]..[1055,40878+40])
                                                Pexp_ident "*" (middle_end/closure/closure.ml[1055,40878+39]..[1055,40878+40])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1055,40878+38]..[1055,40878+39])
                                                    Pexp_constant PConst_int (8,None)
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1055,40878+40]..[1055,40878+50])
                                                    Pexp_ident "B.size_int" (middle_end/closure/closure.ml[1055,40878+40]..[1055,40878+50])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1055,40878+53]..[1055,40878+54])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                  ]
                              <case>
                                pattern (middle_end/closure/closure.ml[1056,40934+10]..[1056,40934+20])
                                  Ppat_construct "Max_wosize" (middle_end/closure/closure.ml[1056,40934+10]..[1056,40934+20])
                                  None
                                expression (middle_end/closure/closure.ml[1056,40934+24]..[1056,40934+75])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1056,40934+24]..[1056,40934+38])
                                    Pexp_ident "make_const_int" (middle_end/closure/closure.ml[1056,40934+24]..[1056,40934+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1056,40934+39]..[1056,40934+75])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[1056,40934+70]..[1056,40934+71])
                                          Pexp_ident "-" (middle_end/closure/closure.ml[1056,40934+70]..[1056,40934+71])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1056,40934+40]..[1056,40934+69])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[1056,40934+43]..[1056,40934+46])
                                                Pexp_ident "lsl" (middle_end/closure/closure.ml[1056,40934+43]..[1056,40934+46])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1056,40934+41]..[1056,40934+42])
                                                    Pexp_constant PConst_int (1,None)
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1056,40934+47]..[1056,40934+68])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[1056,40934+63]..[1056,40934+64])
                                                      Pexp_ident "-" (middle_end/closure/closure.ml[1056,40934+63]..[1056,40934+64])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[1056,40934+48]..[1056,40934+62])
                                                          Pexp_apply
                                                          expression (middle_end/closure/closure.ml[1056,40934+50]..[1056,40934+51])
                                                            Pexp_ident "*" (middle_end/closure/closure.ml[1056,40934+50]..[1056,40934+51])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[1056,40934+49]..[1056,40934+50])
                                                                Pexp_constant PConst_int (8,None)
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[1056,40934+51]..[1056,40934+61])
                                                                Pexp_ident "B.size_int" (middle_end/closure/closure.ml[1056,40934+51]..[1056,40934+61])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[1056,40934+65]..[1056,40934+67])
                                                          Pexp_constant PConst_int (10,None)
                                                    ]
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1056,40934+72]..[1056,40934+73])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                  ]
                              <case>
                                pattern (middle_end/closure/closure.ml[1057,41010+10]..[1057,41010+21])
                                  Ppat_construct "Ostype_unix" (middle_end/closure/closure.ml[1057,41010+10]..[1057,41010+21])
                                  None
                                expression (middle_end/closure/closure.ml[1057,41010+25]..[1057,41010+63])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1057,41010+25]..[1057,41010+40])
                                    Pexp_ident "make_const_bool" (middle_end/closure/closure.ml[1057,41010+25]..[1057,41010+40])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1057,41010+41]..[1057,41010+63])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[1057,41010+54]..[1057,41010+55])
                                          Pexp_ident "=" (middle_end/closure/closure.ml[1057,41010+54]..[1057,41010+55])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1057,41010+42]..[1057,41010+53])
                                              Pexp_ident "Sys.os_type" (middle_end/closure/closure.ml[1057,41010+42]..[1057,41010+53])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1057,41010+56]..[1057,41010+62])
                                              Pexp_constant PConst_string("Unix",(middle_end/closure/closure.ml[1057,41010+57]..[1057,41010+61]),None)
                                        ]
                                  ]
                              <case>
                                pattern (middle_end/closure/closure.ml[1058,41074+10]..[1058,41074+22])
                                  Ppat_construct "Ostype_win32" (middle_end/closure/closure.ml[1058,41074+10]..[1058,41074+22])
                                  None
                                expression (middle_end/closure/closure.ml[1058,41074+26]..[1058,41074+65])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1058,41074+26]..[1058,41074+41])
                                    Pexp_ident "make_const_bool" (middle_end/closure/closure.ml[1058,41074+26]..[1058,41074+41])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1058,41074+42]..[1058,41074+65])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[1058,41074+55]..[1058,41074+56])
                                          Pexp_ident "=" (middle_end/closure/closure.ml[1058,41074+55]..[1058,41074+56])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1058,41074+43]..[1058,41074+54])
                                              Pexp_ident "Sys.os_type" (middle_end/closure/closure.ml[1058,41074+43]..[1058,41074+54])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1058,41074+57]..[1058,41074+64])
                                              Pexp_constant PConst_string("Win32",(middle_end/closure/closure.ml[1058,41074+58]..[1058,41074+63]),None)
                                        ]
                                  ]
                              <case>
                                pattern (middle_end/closure/closure.ml[1059,41140+10]..[1059,41140+23])
                                  Ppat_construct "Ostype_cygwin" (middle_end/closure/closure.ml[1059,41140+10]..[1059,41140+23])
                                  None
                                expression (middle_end/closure/closure.ml[1059,41140+27]..[1059,41140+67])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1059,41140+27]..[1059,41140+42])
                                    Pexp_ident "make_const_bool" (middle_end/closure/closure.ml[1059,41140+27]..[1059,41140+42])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1059,41140+43]..[1059,41140+67])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[1059,41140+56]..[1059,41140+57])
                                          Pexp_ident "=" (middle_end/closure/closure.ml[1059,41140+56]..[1059,41140+57])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1059,41140+44]..[1059,41140+55])
                                              Pexp_ident "Sys.os_type" (middle_end/closure/closure.ml[1059,41140+44]..[1059,41140+55])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1059,41140+58]..[1059,41140+66])
                                              Pexp_constant PConst_string("Cygwin",(middle_end/closure/closure.ml[1059,41140+59]..[1059,41140+65]),None)
                                        ]
                                  ]
                              <case>
                                pattern (middle_end/closure/closure.ml[1060,41208+10]..[1060,41208+22])
                                  Ppat_construct "Backend_type" (middle_end/closure/closure.ml[1060,41208+10]..[1060,41208+22])
                                  None
                                expression (middle_end/closure/closure.ml[1061,41234+12]..[1061,41234+28])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1061,41234+12]..[1061,41234+26])
                                    Pexp_ident "make_const_int" (middle_end/closure/closure.ml[1061,41234+12]..[1061,41234+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1061,41234+27]..[1061,41234+28])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[1063,41311+6]..[1065,41398+62])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[1063,41311+10]..[1063,41311+22])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[1063,41311+10]..[1063,41311+13])
                                  Ppat_var "arg" (middle_end/closure/closure.ml[1063,41311+10]..[1063,41311+13])
                                pattern (middle_end/closure/closure.ml[1063,41311+15]..[1063,41311+22])
                                  Ppat_var "_approx" (middle_end/closure/closure.ml[1063,41311+15]..[1063,41311+22])
                              ]
                            expression (middle_end/closure/closure.ml[1063,41311+25]..[1063,41311+38])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[1063,41311+25]..[1063,41311+30])
                                Pexp_ident "close" (middle_end/closure/closure.ml[1063,41311+25]..[1063,41311+30])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1063,41311+31]..[1063,41311+34])
                                    Pexp_ident "env" (middle_end/closure/closure.ml[1063,41311+31]..[1063,41311+34])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1063,41311+35]..[1063,41311+38])
                                    Pexp_ident "arg" (middle_end/closure/closure.ml[1063,41311+35]..[1063,41311+38])
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[1064,41353+6]..[1065,41398+62])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[1064,41353+10]..[1064,41353+12])
                                Ppat_var "id" (middle_end/closure/closure.ml[1064,41353+10]..[1064,41353+12])
                              expression (middle_end/closure/closure.ml[1064,41353+15]..[1064,41353+41])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1064,41353+15]..[1064,41353+33])
                                  Pexp_ident "Ident.create_local" (middle_end/closure/closure.ml[1064,41353+15]..[1064,41353+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1064,41353+34]..[1064,41353+41])
                                      Pexp_constant PConst_string("dummy",(middle_end/closure/closure.ml[1064,41353+35]..[1064,41353+40]),None)
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[1065,41398+6]..[1065,41398+62])
                            Pexp_tuple
                            [
                              expression (middle_end/closure/closure.ml[1065,41398+6]..[1065,41398+54])
                                Pexp_construct "Ulet" (middle_end/closure/closure.ml[1065,41398+6]..[1065,41398+10])
                                Some
                                  expression (middle_end/closure/closure.ml[1065,41398+10]..[1065,41398+54])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/closure/closure.ml[1065,41398+11]..[1065,41398+20])
                                        Pexp_construct "Immutable" (middle_end/closure/closure.ml[1065,41398+11]..[1065,41398+20])
                                        None
                                      expression (middle_end/closure/closure.ml[1065,41398+22]..[1065,41398+29])
                                        Pexp_construct "Pgenval" (middle_end/closure/closure.ml[1065,41398+22]..[1065,41398+29])
                                        None
                                      expression (middle_end/closure/closure.ml[1065,41398+31]..[1065,41398+43])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[1065,41398+31]..[1065,41398+40])
                                          Pexp_ident "VP.create" (middle_end/closure/closure.ml[1065,41398+31]..[1065,41398+40])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1065,41398+41]..[1065,41398+43])
                                              Pexp_ident "id" (middle_end/closure/closure.ml[1065,41398+41]..[1065,41398+43])
                                        ]
                                      expression (middle_end/closure/closure.ml[1065,41398+45]..[1065,41398+48])
                                        Pexp_ident "arg" (middle_end/closure/closure.ml[1065,41398+45]..[1065,41398+48])
                                      expression (middle_end/closure/closure.ml[1065,41398+50]..[1065,41398+53])
                                        Pexp_ident "cst" (middle_end/closure/closure.ml[1065,41398+50]..[1065,41398+53])
                                    ]
                              expression (middle_end/closure/closure.ml[1065,41398+56]..[1065,41398+62])
                                Pexp_ident "approx" (middle_end/closure/closure.ml[1065,41398+56]..[1065,41398+62])
                            ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1066,41461+4]..[1066,41461+31])
                      Ppat_construct "Lprim" (middle_end/closure/closure.ml[1066,41461+4]..[1066,41461+9])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1066,41461+9]..[1066,41461+31])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1066,41461+10]..[1066,41461+17])
                              Ppat_construct "Pignore" (middle_end/closure/closure.ml[1066,41461+10]..[1066,41461+17])
                              None
                            pattern (middle_end/closure/closure.ml[1066,41461+19]..[1066,41461+24])
                              Ppat_construct "::" (middle_end/closure/closure.ml[1066,41461+20]..[1066,41461+24]) ghost
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[1066,41461+20]..[1066,41461+24]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[1066,41461+20]..[1066,41461+23])
                                      Ppat_var "arg" (middle_end/closure/closure.ml[1066,41461+20]..[1066,41461+23])
                                    pattern (middle_end/closure/closure.ml[1066,41461+23]..[1066,41461+24]) ghost
                                      Ppat_construct "[]" (middle_end/closure/closure.ml[1066,41461+23]..[1066,41461+24]) ghost
                                      None
                                  ]
                            pattern (middle_end/closure/closure.ml[1066,41461+26]..[1066,41461+30])
                              Ppat_var "_loc" (middle_end/closure/closure.ml[1066,41461+26]..[1066,41461+30])
                          ]
                    expression (middle_end/closure/closure.ml[1067,41496+6]..[1068,41541+50])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[1067,41496+10]..[1067,41496+22])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1067,41496+10]..[1067,41496+14])
                                Ppat_var "expr" (middle_end/closure/closure.ml[1067,41496+10]..[1067,41496+14])
                              pattern (middle_end/closure/closure.ml[1067,41496+16]..[1067,41496+22])
                                Ppat_var "approx" (middle_end/closure/closure.ml[1067,41496+16]..[1067,41496+22])
                            ]
                          expression (middle_end/closure/closure.ml[1067,41496+25]..[1067,41496+41])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1067,41496+25]..[1067,41496+39])
                              Pexp_ident "make_const_int" (middle_end/closure/closure.ml[1067,41496+25]..[1067,41496+39])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1067,41496+40]..[1067,41496+41])
                                  Pexp_constant PConst_int (0,None)
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[1068,41541+6]..[1068,41541+50])
                        Pexp_tuple
                        [
                          expression (middle_end/closure/closure.ml[1068,41541+6]..[1068,41541+42])
                            Pexp_construct "Usequence" (middle_end/closure/closure.ml[1068,41541+6]..[1068,41541+15])
                            Some
                              expression (middle_end/closure/closure.ml[1068,41541+15]..[1068,41541+42])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[1068,41541+16]..[1068,41541+35])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[1068,41541+16]..[1068,41541+19])
                                      Pexp_ident "fst" (middle_end/closure/closure.ml[1068,41541+16]..[1068,41541+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1068,41541+20]..[1068,41541+35])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[1068,41541+21]..[1068,41541+26])
                                            Pexp_ident "close" (middle_end/closure/closure.ml[1068,41541+21]..[1068,41541+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[1068,41541+27]..[1068,41541+30])
                                                Pexp_ident "env" (middle_end/closure/closure.ml[1068,41541+27]..[1068,41541+30])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[1068,41541+31]..[1068,41541+34])
                                                Pexp_ident "arg" (middle_end/closure/closure.ml[1068,41541+31]..[1068,41541+34])
                                          ]
                                    ]
                                  expression (middle_end/closure/closure.ml[1068,41541+37]..[1068,41541+41])
                                    Pexp_ident "expr" (middle_end/closure/closure.ml[1068,41541+37]..[1068,41541+41])
                                ]
                          expression (middle_end/closure/closure.ml[1068,41541+44]..[1068,41541+50])
                            Pexp_ident "approx" (middle_end/closure/closure.ml[1068,41541+44]..[1068,41541+50])
                        ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1069,41592+4]..[1069,41592+61])
                      Ppat_construct "Lprim" (middle_end/closure/closure.ml[1069,41592+4]..[1069,41592+9])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1069,41592+9]..[1069,41592+61])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1069,41592+10]..[1069,41592+47])
                              Ppat_or
                              pattern (middle_end/closure/closure.ml[1069,41592+11]..[1069,41592+27])
                                Ppat_construct "Pbytes_to_string" (middle_end/closure/closure.ml[1069,41592+11]..[1069,41592+27])
                                None
                              pattern (middle_end/closure/closure.ml[1069,41592+30]..[1069,41592+46])
                                Ppat_construct "Pbytes_of_string" (middle_end/closure/closure.ml[1069,41592+30]..[1069,41592+46])
                                None
                            pattern (middle_end/closure/closure.ml[1069,41592+49]..[1069,41592+54])
                              Ppat_construct "::" (middle_end/closure/closure.ml[1069,41592+50]..[1069,41592+54]) ghost
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[1069,41592+50]..[1069,41592+54]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[1069,41592+50]..[1069,41592+53])
                                      Ppat_var "arg" (middle_end/closure/closure.ml[1069,41592+50]..[1069,41592+53])
                                    pattern (middle_end/closure/closure.ml[1069,41592+53]..[1069,41592+54]) ghost
                                      Ppat_construct "[]" (middle_end/closure/closure.ml[1069,41592+53]..[1069,41592+54]) ghost
                                      None
                                  ]
                            pattern (middle_end/closure/closure.ml[1069,41592+56]..[1069,41592+60])
                              Ppat_var "_loc" (middle_end/closure/closure.ml[1069,41592+56]..[1069,41592+60])
                          ]
                    expression (middle_end/closure/closure.ml[1070,41657+6]..[1070,41657+19])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[1070,41657+6]..[1070,41657+11])
                        Pexp_ident "close" (middle_end/closure/closure.ml[1070,41657+6]..[1070,41657+11])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[1070,41657+12]..[1070,41657+15])
                            Pexp_ident "env" (middle_end/closure/closure.ml[1070,41657+12]..[1070,41657+15])
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[1070,41657+16]..[1070,41657+19])
                            Pexp_ident "arg" (middle_end/closure/closure.ml[1070,41657+16]..[1070,41657+19])
                      ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1071,41677+4]..[1071,41677+33])
                      Ppat_construct "Lprim" (middle_end/closure/closure.ml[1071,41677+4]..[1071,41677+9])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1071,41677+9]..[1071,41677+33])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1071,41677+10]..[1071,41677+23])
                              Ppat_construct "Pgetglobal" (middle_end/closure/closure.ml[1071,41677+10]..[1071,41677+20])
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[1071,41677+21]..[1071,41677+23])
                                  Ppat_var "id" (middle_end/closure/closure.ml[1071,41677+21]..[1071,41677+23])
                            pattern (middle_end/closure/closure.ml[1071,41677+25]..[1071,41677+27])
                              Ppat_construct "[]" (middle_end/closure/closure.ml[1071,41677+25]..[1071,41677+27])
                              None
                            pattern (middle_end/closure/closure.ml[1071,41677+29]..[1071,41677+32])
                              Ppat_var "loc" (middle_end/closure/closure.ml[1071,41677+29]..[1071,41677+32])
                          ]
                    expression (middle_end/closure/closure.ml[1072,41714+6]..[1074,41808+56])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[1072,41714+10]..[1072,41714+13])
                            Ppat_var "dbg" (middle_end/closure/closure.ml[1072,41714+10]..[1072,41714+13])
                          expression (middle_end/closure/closure.ml[1072,41714+16]..[1072,41714+43])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1072,41714+16]..[1072,41714+39])
                              Pexp_ident "Debuginfo.from_location" (middle_end/closure/closure.ml[1072,41714+16]..[1072,41714+39])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1072,41714+40]..[1072,41714+43])
                                  Pexp_ident "loc" (middle_end/closure/closure.ml[1072,41714+40]..[1072,41714+43])
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[1073,41761+6]..[1074,41808+56])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1073,41761+6]..[1073,41761+27])
                          Pexp_ident "check_constant_result" (middle_end/closure/closure.ml[1073,41761+6]..[1073,41761+27])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1073,41761+28]..[1073,41761+46])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[1073,41761+29]..[1073,41761+38])
                                Pexp_ident "getglobal" (middle_end/closure/closure.ml[1073,41761+29]..[1073,41761+38])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1073,41761+39]..[1073,41761+42])
                                    Pexp_ident "dbg" (middle_end/closure/closure.ml[1073,41761+39]..[1073,41761+42])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1073,41761+43]..[1073,41761+45])
                                    Pexp_ident "id" (middle_end/closure/closure.ml[1073,41761+43]..[1073,41761+45])
                              ]
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1074,41808+28]..[1074,41808+56])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[1074,41808+29]..[1074,41808+52])
                                Pexp_ident "Compilenv.global_approx" (middle_end/closure/closure.ml[1074,41808+29]..[1074,41808+52])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1074,41808+53]..[1074,41808+55])
                                    Pexp_ident "id" (middle_end/closure/closure.ml[1074,41808+53]..[1074,41808+55])
                              ]
                        ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1075,41865+4]..[1075,41865+31])
                      Ppat_construct "Lprim" (middle_end/closure/closure.ml[1075,41865+4]..[1075,41865+9])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1075,41865+9]..[1075,41865+31])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1075,41865+10]..[1075,41865+18])
                              Ppat_construct "Pfield" (middle_end/closure/closure.ml[1075,41865+10]..[1075,41865+16])
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[1075,41865+17]..[1075,41865+18])
                                  Ppat_var "n" (middle_end/closure/closure.ml[1075,41865+17]..[1075,41865+18])
                            pattern (middle_end/closure/closure.ml[1075,41865+20]..[1075,41865+25])
                              Ppat_construct "::" (middle_end/closure/closure.ml[1075,41865+21]..[1075,41865+25]) ghost
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[1075,41865+21]..[1075,41865+25]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[1075,41865+21]..[1075,41865+24])
                                      Ppat_var "lam" (middle_end/closure/closure.ml[1075,41865+21]..[1075,41865+24])
                                    pattern (middle_end/closure/closure.ml[1075,41865+24]..[1075,41865+25]) ghost
                                      Ppat_construct "[]" (middle_end/closure/closure.ml[1075,41865+24]..[1075,41865+25]) ghost
                                      None
                                  ]
                            pattern (middle_end/closure/closure.ml[1075,41865+27]..[1075,41865+30])
                              Ppat_var "loc" (middle_end/closure/closure.ml[1075,41865+27]..[1075,41865+30])
                          ]
                    expression (middle_end/closure/closure.ml[1076,41900+6]..[1079,42052+51])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[1076,41900+10]..[1076,41900+24])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1076,41900+11]..[1076,41900+15])
                                Ppat_var "ulam" (middle_end/closure/closure.ml[1076,41900+11]..[1076,41900+15])
                              pattern (middle_end/closure/closure.ml[1076,41900+17]..[1076,41900+23])
                                Ppat_var "approx" (middle_end/closure/closure.ml[1076,41900+17]..[1076,41900+23])
                            ]
                          expression (middle_end/closure/closure.ml[1076,41900+27]..[1076,41900+40])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1076,41900+27]..[1076,41900+32])
                              Pexp_ident "close" (middle_end/closure/closure.ml[1076,41900+27]..[1076,41900+32])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1076,41900+33]..[1076,41900+36])
                                  Pexp_ident "env" (middle_end/closure/closure.ml[1076,41900+33]..[1076,41900+36])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1076,41900+37]..[1076,41900+40])
                                  Pexp_ident "lam" (middle_end/closure/closure.ml[1076,41900+37]..[1076,41900+40])
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[1077,41944+6]..[1079,42052+51])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[1077,41944+10]..[1077,41944+13])
                              Ppat_var "dbg" (middle_end/closure/closure.ml[1077,41944+10]..[1077,41944+13])
                            expression (middle_end/closure/closure.ml[1077,41944+16]..[1077,41944+43])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[1077,41944+16]..[1077,41944+39])
                                Pexp_ident "Debuginfo.from_location" (middle_end/closure/closure.ml[1077,41944+16]..[1077,41944+39])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1077,41944+40]..[1077,41944+43])
                                    Pexp_ident "loc" (middle_end/closure/closure.ml[1077,41944+40]..[1077,41944+43])
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[1078,41991+6]..[1079,42052+51])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1078,41991+6]..[1078,41991+27])
                            Pexp_ident "check_constant_result" (middle_end/closure/closure.ml[1078,41991+6]..[1078,41991+27])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1078,41991+28]..[1078,41991+60])
                                Pexp_construct "Uprim" (middle_end/closure/closure.ml[1078,41991+29]..[1078,41991+34])
                                Some
                                  expression (middle_end/closure/closure.ml[1078,41991+34]..[1078,41991+59])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/closure/closure.ml[1078,41991+35]..[1078,41991+45])
                                        Pexp_construct "P.Pfield" (middle_end/closure/closure.ml[1078,41991+35]..[1078,41991+43])
                                        Some
                                          expression (middle_end/closure/closure.ml[1078,41991+44]..[1078,41991+45])
                                            Pexp_ident "n" (middle_end/closure/closure.ml[1078,41991+44]..[1078,41991+45])
                                      expression (middle_end/closure/closure.ml[1078,41991+47]..[1078,41991+53])
                                        Pexp_construct "::" (middle_end/closure/closure.ml[1078,41991+48]..[1078,41991+53]) ghost
                                        Some
                                          expression (middle_end/closure/closure.ml[1078,41991+48]..[1078,41991+53]) ghost
                                            Pexp_tuple
                                            [
                                              expression (middle_end/closure/closure.ml[1078,41991+48]..[1078,41991+52])
                                                Pexp_ident "ulam" (middle_end/closure/closure.ml[1078,41991+48]..[1078,41991+52])
                                              expression (middle_end/closure/closure.ml[1078,41991+52]..[1078,41991+53]) ghost
                                                Pexp_construct "[]" (middle_end/closure/closure.ml[1078,41991+52]..[1078,41991+53]) ghost
                                                None
                                            ]
                                      expression (middle_end/closure/closure.ml[1078,41991+55]..[1078,41991+58])
                                        Pexp_ident "dbg" (middle_end/closure/closure.ml[1078,41991+55]..[1078,41991+58])
                                    ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1079,42052+28]..[1079,42052+51])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1079,42052+29]..[1079,42052+41])
                                  Pexp_ident "field_approx" (middle_end/closure/closure.ml[1079,42052+29]..[1079,42052+41])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1079,42052+42]..[1079,42052+43])
                                      Pexp_ident "n" (middle_end/closure/closure.ml[1079,42052+42]..[1079,42052+43])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1079,42052+44]..[1079,42052+50])
                                      Pexp_ident "approx" (middle_end/closure/closure.ml[1079,42052+44]..[1079,42052+50])
                                ]
                          ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1080,42104+4]..[1080,42104+78])
                      Ppat_construct "Lprim" (middle_end/closure/closure.ml[1080,42104+4]..[1080,42104+9])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1080,42104+9]..[1080,42104+78])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1080,42104+10]..[1080,42104+36])
                              Ppat_construct "Psetfield" (middle_end/closure/closure.ml[1080,42104+10]..[1080,42104+19])
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[1080,42104+19]..[1080,42104+36])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[1080,42104+20]..[1080,42104+21])
                                      Ppat_var "n" (middle_end/closure/closure.ml[1080,42104+20]..[1080,42104+21])
                                    pattern (middle_end/closure/closure.ml[1080,42104+23]..[1080,42104+29])
                                      Ppat_var "is_ptr" (middle_end/closure/closure.ml[1080,42104+23]..[1080,42104+29])
                                    pattern (middle_end/closure/closure.ml[1080,42104+31]..[1080,42104+35])
                                      Ppat_var "init" (middle_end/closure/closure.ml[1080,42104+31]..[1080,42104+35])
                                  ]
                            pattern (middle_end/closure/closure.ml[1080,42104+38]..[1080,42104+72])
                              Ppat_construct "::" (middle_end/closure/closure.ml[1080,42104+39]..[1080,42104+72]) ghost
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[1080,42104+39]..[1080,42104+72]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[1080,42104+39]..[1080,42104+66])
                                      Ppat_construct "Lprim" (middle_end/closure/closure.ml[1080,42104+39]..[1080,42104+44])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[1080,42104+44]..[1080,42104+66])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[1080,42104+45]..[1080,42104+58])
                                              Ppat_construct "Pgetglobal" (middle_end/closure/closure.ml[1080,42104+45]..[1080,42104+55])
                                              Some
                                                []
                                                pattern (middle_end/closure/closure.ml[1080,42104+56]..[1080,42104+58])
                                                  Ppat_var "id" (middle_end/closure/closure.ml[1080,42104+56]..[1080,42104+58])
                                            pattern (middle_end/closure/closure.ml[1080,42104+60]..[1080,42104+62])
                                              Ppat_construct "[]" (middle_end/closure/closure.ml[1080,42104+60]..[1080,42104+62])
                                              None
                                            pattern (middle_end/closure/closure.ml[1080,42104+64]..[1080,42104+65])
                                              Ppat_any
                                          ]
                                    pattern (middle_end/closure/closure.ml[1080,42104+68]..[1080,42104+72]) ghost
                                      Ppat_construct "::" (middle_end/closure/closure.ml[1080,42104+68]..[1080,42104+72]) ghost
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[1080,42104+68]..[1080,42104+72]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[1080,42104+68]..[1080,42104+71])
                                              Ppat_var "lam" (middle_end/closure/closure.ml[1080,42104+68]..[1080,42104+71])
                                            pattern (middle_end/closure/closure.ml[1080,42104+71]..[1080,42104+72]) ghost
                                              Ppat_construct "[]" (middle_end/closure/closure.ml[1080,42104+71]..[1080,42104+72]) ghost
                                              None
                                          ]
                                  ]
                            pattern (middle_end/closure/closure.ml[1080,42104+74]..[1080,42104+77])
                              Ppat_var "loc" (middle_end/closure/closure.ml[1080,42104+74]..[1080,42104+77])
                          ]
                    expression (middle_end/closure/closure.ml[1081,42185+6]..[1086,42429+21])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[1081,42185+10]..[1081,42185+24])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1081,42185+11]..[1081,42185+15])
                                Ppat_var "ulam" (middle_end/closure/closure.ml[1081,42185+11]..[1081,42185+15])
                              pattern (middle_end/closure/closure.ml[1081,42185+17]..[1081,42185+23])
                                Ppat_var "approx" (middle_end/closure/closure.ml[1081,42185+17]..[1081,42185+23])
                            ]
                          expression (middle_end/closure/closure.ml[1081,42185+27]..[1081,42185+40])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1081,42185+27]..[1081,42185+32])
                              Pexp_ident "close" (middle_end/closure/closure.ml[1081,42185+27]..[1081,42185+32])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1081,42185+33]..[1081,42185+36])
                                  Pexp_ident "env" (middle_end/closure/closure.ml[1081,42185+33]..[1081,42185+36])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1081,42185+37]..[1081,42185+40])
                                  Pexp_ident "lam" (middle_end/closure/closure.ml[1081,42185+37]..[1081,42185+40])
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[1082,42229+6]..[1086,42429+21])
                        Pexp_sequence
                        expression (middle_end/closure/closure.ml[1082,42229+6]..[1083,42267+38])
                          Pexp_ifthenelse
                          expression (middle_end/closure/closure.ml[1082,42229+9]..[1082,42229+32])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1082,42229+16]..[1082,42229+18])
                              Pexp_ident "<>" (middle_end/closure/closure.ml[1082,42229+16]..[1082,42229+18])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1082,42229+9]..[1082,42229+15])
                                  Pexp_ident "approx" (middle_end/closure/closure.ml[1082,42229+9]..[1082,42229+15])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1082,42229+19]..[1082,42229+32])
                                  Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[1082,42229+19]..[1082,42229+32])
                                  None
                            ]
                          expression (middle_end/closure/closure.ml[1083,42267+8]..[1083,42267+38])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1083,42267+8]..[1083,42267+38]) ghost
                              Pexp_ident "Array.set" (middle_end/closure/closure.ml[1083,42267+8]..[1083,42267+38]) ghost
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1083,42267+8]..[1083,42267+24])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1083,42267+9]..[1083,42267+10])
                                    Pexp_ident "!" (middle_end/closure/closure.ml[1083,42267+9]..[1083,42267+10])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1083,42267+10]..[1083,42267+23])
                                        Pexp_ident "global_approx" (middle_end/closure/closure.ml[1083,42267+10]..[1083,42267+23])
                                  ]
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1083,42267+26]..[1083,42267+27])
                                  Pexp_ident "n" (middle_end/closure/closure.ml[1083,42267+26]..[1083,42267+27])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1083,42267+32]..[1083,42267+38])
                                  Pexp_ident "approx" (middle_end/closure/closure.ml[1083,42267+32]..[1083,42267+38])
                            ]
                          None
                        expression (middle_end/closure/closure.ml[1084,42307+6]..[1086,42429+21])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[1084,42307+10]..[1084,42307+13])
                                Ppat_var "dbg" (middle_end/closure/closure.ml[1084,42307+10]..[1084,42307+13])
                              expression (middle_end/closure/closure.ml[1084,42307+16]..[1084,42307+43])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1084,42307+16]..[1084,42307+39])
                                  Pexp_ident "Debuginfo.from_location" (middle_end/closure/closure.ml[1084,42307+16]..[1084,42307+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1084,42307+40]..[1084,42307+43])
                                      Pexp_ident "loc" (middle_end/closure/closure.ml[1084,42307+40]..[1084,42307+43])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[1085,42354+6]..[1086,42429+21])
                            Pexp_tuple
                            [
                              expression (middle_end/closure/closure.ml[1085,42354+7]..[1085,42354+73])
                                Pexp_construct "Uprim" (middle_end/closure/closure.ml[1085,42354+7]..[1085,42354+12])
                                Some
                                  expression (middle_end/closure/closure.ml[1085,42354+12]..[1085,42354+73])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/closure/closure.ml[1085,42354+13]..[1085,42354+41])
                                        Pexp_construct "P.Psetfield" (middle_end/closure/closure.ml[1085,42354+13]..[1085,42354+24])
                                        Some
                                          expression (middle_end/closure/closure.ml[1085,42354+24]..[1085,42354+41])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/closure/closure.ml[1085,42354+25]..[1085,42354+26])
                                                Pexp_ident "n" (middle_end/closure/closure.ml[1085,42354+25]..[1085,42354+26])
                                              expression (middle_end/closure/closure.ml[1085,42354+28]..[1085,42354+34])
                                                Pexp_ident "is_ptr" (middle_end/closure/closure.ml[1085,42354+28]..[1085,42354+34])
                                              expression (middle_end/closure/closure.ml[1085,42354+36]..[1085,42354+40])
                                                Pexp_ident "init" (middle_end/closure/closure.ml[1085,42354+36]..[1085,42354+40])
                                            ]
                                      expression (middle_end/closure/closure.ml[1085,42354+43]..[1085,42354+67])
                                        Pexp_construct "::" (middle_end/closure/closure.ml[1085,42354+44]..[1085,42354+67]) ghost
                                        Some
                                          expression (middle_end/closure/closure.ml[1085,42354+44]..[1085,42354+67]) ghost
                                            Pexp_tuple
                                            [
                                              expression (middle_end/closure/closure.ml[1085,42354+44]..[1085,42354+60])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[1085,42354+44]..[1085,42354+53])
                                                  Pexp_ident "getglobal" (middle_end/closure/closure.ml[1085,42354+44]..[1085,42354+53])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[1085,42354+54]..[1085,42354+57])
                                                      Pexp_ident "dbg" (middle_end/closure/closure.ml[1085,42354+54]..[1085,42354+57])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[1085,42354+58]..[1085,42354+60])
                                                      Pexp_ident "id" (middle_end/closure/closure.ml[1085,42354+58]..[1085,42354+60])
                                                ]
                                              expression (middle_end/closure/closure.ml[1085,42354+62]..[1085,42354+67]) ghost
                                                Pexp_construct "::" (middle_end/closure/closure.ml[1085,42354+62]..[1085,42354+67]) ghost
                                                Some
                                                  expression (middle_end/closure/closure.ml[1085,42354+62]..[1085,42354+67]) ghost
                                                    Pexp_tuple
                                                    [
                                                      expression (middle_end/closure/closure.ml[1085,42354+62]..[1085,42354+66])
                                                        Pexp_ident "ulam" (middle_end/closure/closure.ml[1085,42354+62]..[1085,42354+66])
                                                      expression (middle_end/closure/closure.ml[1085,42354+66]..[1085,42354+67]) ghost
                                                        Pexp_construct "[]" (middle_end/closure/closure.ml[1085,42354+66]..[1085,42354+67]) ghost
                                                        None
                                                    ]
                                            ]
                                      expression (middle_end/closure/closure.ml[1085,42354+69]..[1085,42354+72])
                                        Pexp_ident "dbg" (middle_end/closure/closure.ml[1085,42354+69]..[1085,42354+72])
                                    ]
                              expression (middle_end/closure/closure.ml[1086,42429+7]..[1086,42429+20])
                                Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[1086,42429+7]..[1086,42429+20])
                                None
                            ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1087,42451+4]..[1087,42451+31])
                      Ppat_construct "Lprim" (middle_end/closure/closure.ml[1087,42451+4]..[1087,42451+9])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1087,42451+9]..[1087,42451+31])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1087,42451+10]..[1087,42451+18])
                              Ppat_construct "Praise" (middle_end/closure/closure.ml[1087,42451+10]..[1087,42451+16])
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[1087,42451+17]..[1087,42451+18])
                                  Ppat_var "k" (middle_end/closure/closure.ml[1087,42451+17]..[1087,42451+18])
                            pattern (middle_end/closure/closure.ml[1087,42451+20]..[1087,42451+25])
                              Ppat_construct "::" (middle_end/closure/closure.ml[1087,42451+21]..[1087,42451+25]) ghost
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[1087,42451+21]..[1087,42451+25]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[1087,42451+21]..[1087,42451+24])
                                      Ppat_var "arg" (middle_end/closure/closure.ml[1087,42451+21]..[1087,42451+24])
                                    pattern (middle_end/closure/closure.ml[1087,42451+24]..[1087,42451+25]) ghost
                                      Ppat_construct "[]" (middle_end/closure/closure.ml[1087,42451+24]..[1087,42451+25]) ghost
                                      None
                                  ]
                            pattern (middle_end/closure/closure.ml[1087,42451+27]..[1087,42451+30])
                              Ppat_var "loc" (middle_end/closure/closure.ml[1087,42451+27]..[1087,42451+30])
                          ]
                    expression (middle_end/closure/closure.ml[1088,42486+6]..[1091,42617+21])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[1088,42486+10]..[1088,42486+25])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1088,42486+11]..[1088,42486+15])
                                Ppat_var "ulam" (middle_end/closure/closure.ml[1088,42486+11]..[1088,42486+15])
                              pattern (middle_end/closure/closure.ml[1088,42486+17]..[1088,42486+24])
                                Ppat_var "_approx" (middle_end/closure/closure.ml[1088,42486+17]..[1088,42486+24])
                            ]
                          expression (middle_end/closure/closure.ml[1088,42486+28]..[1088,42486+41])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1088,42486+28]..[1088,42486+33])
                              Pexp_ident "close" (middle_end/closure/closure.ml[1088,42486+28]..[1088,42486+33])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1088,42486+34]..[1088,42486+37])
                                  Pexp_ident "env" (middle_end/closure/closure.ml[1088,42486+34]..[1088,42486+37])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1088,42486+38]..[1088,42486+41])
                                  Pexp_ident "arg" (middle_end/closure/closure.ml[1088,42486+38]..[1088,42486+41])
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[1089,42531+6]..[1091,42617+21])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[1089,42531+10]..[1089,42531+13])
                              Ppat_var "dbg" (middle_end/closure/closure.ml[1089,42531+10]..[1089,42531+13])
                            expression (middle_end/closure/closure.ml[1089,42531+16]..[1089,42531+43])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[1089,42531+16]..[1089,42531+39])
                                Pexp_ident "Debuginfo.from_location" (middle_end/closure/closure.ml[1089,42531+16]..[1089,42531+39])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1089,42531+40]..[1089,42531+43])
                                    Pexp_ident "loc" (middle_end/closure/closure.ml[1089,42531+40]..[1089,42531+43])
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[1090,42578+6]..[1091,42617+21])
                          Pexp_tuple
                          [
                            expression (middle_end/closure/closure.ml[1090,42578+7]..[1090,42578+37])
                              Pexp_construct "Uprim" (middle_end/closure/closure.ml[1090,42578+7]..[1090,42578+12])
                              Some
                                expression (middle_end/closure/closure.ml[1090,42578+12]..[1090,42578+37])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/closure/closure.ml[1090,42578+13]..[1090,42578+23])
                                      Pexp_construct "P.Praise" (middle_end/closure/closure.ml[1090,42578+13]..[1090,42578+21])
                                      Some
                                        expression (middle_end/closure/closure.ml[1090,42578+22]..[1090,42578+23])
                                          Pexp_ident "k" (middle_end/closure/closure.ml[1090,42578+22]..[1090,42578+23])
                                    expression (middle_end/closure/closure.ml[1090,42578+25]..[1090,42578+31])
                                      Pexp_construct "::" (middle_end/closure/closure.ml[1090,42578+26]..[1090,42578+31]) ghost
                                      Some
                                        expression (middle_end/closure/closure.ml[1090,42578+26]..[1090,42578+31]) ghost
                                          Pexp_tuple
                                          [
                                            expression (middle_end/closure/closure.ml[1090,42578+26]..[1090,42578+30])
                                              Pexp_ident "ulam" (middle_end/closure/closure.ml[1090,42578+26]..[1090,42578+30])
                                            expression (middle_end/closure/closure.ml[1090,42578+30]..[1090,42578+31]) ghost
                                              Pexp_construct "[]" (middle_end/closure/closure.ml[1090,42578+30]..[1090,42578+31]) ghost
                                              None
                                          ]
                                    expression (middle_end/closure/closure.ml[1090,42578+33]..[1090,42578+36])
                                      Pexp_ident "dbg" (middle_end/closure/closure.ml[1090,42578+33]..[1090,42578+36])
                                  ]
                            expression (middle_end/closure/closure.ml[1091,42617+7]..[1091,42617+20])
                              Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[1091,42617+7]..[1091,42617+20])
                              None
                          ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1092,42639+4]..[1092,42639+34])
                      Ppat_construct "Lprim" (middle_end/closure/closure.ml[1092,42639+4]..[1092,42639+9])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1092,42639+10]..[1092,42639+34])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1092,42639+11]..[1092,42639+23])
                              Ppat_construct "Pmakearray" (middle_end/closure/closure.ml[1092,42639+11]..[1092,42639+21])
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[1092,42639+22]..[1092,42639+23])
                                  Ppat_any
                            pattern (middle_end/closure/closure.ml[1092,42639+25]..[1092,42639+27])
                              Ppat_construct "[]" (middle_end/closure/closure.ml[1092,42639+25]..[1092,42639+27])
                              None
                            pattern (middle_end/closure/closure.ml[1092,42639+29]..[1092,42639+33])
                              Ppat_var "_loc" (middle_end/closure/closure.ml[1092,42639+29]..[1092,42639+33])
                          ]
                    expression (middle_end/closure/closure.ml[1092,42639+38]..[1092,42639+75])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[1092,42639+38]..[1092,42639+52])
                        Pexp_ident "make_const_ref" (middle_end/closure/closure.ml[1092,42639+38]..[1092,42639+52])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[1092,42639+53]..[1092,42639+75])
                            Pexp_construct "Uconst_block" (middle_end/closure/closure.ml[1092,42639+54]..[1092,42639+66])
                            Some
                              expression (middle_end/closure/closure.ml[1092,42639+67]..[1092,42639+74])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[1092,42639+68]..[1092,42639+69])
                                    Pexp_constant PConst_int (0,None)
                                  expression (middle_end/closure/closure.ml[1092,42639+71]..[1092,42639+73])
                                    Pexp_construct "[]" (middle_end/closure/closure.ml[1092,42639+71]..[1092,42639+73])
                                    None
                                ]
                      ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1093,42715+4]..[1093,42715+23])
                      Ppat_construct "Lprim" (middle_end/closure/closure.ml[1093,42715+4]..[1093,42715+9])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1093,42715+9]..[1093,42715+23])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1093,42715+10]..[1093,42715+11])
                              Ppat_var "p" (middle_end/closure/closure.ml[1093,42715+10]..[1093,42715+11])
                            pattern (middle_end/closure/closure.ml[1093,42715+13]..[1093,42715+17])
                              Ppat_var "args" (middle_end/closure/closure.ml[1093,42715+13]..[1093,42715+17])
                            pattern (middle_end/closure/closure.ml[1093,42715+19]..[1093,42715+22])
                              Ppat_var "loc" (middle_end/closure/closure.ml[1093,42715+19]..[1093,42715+22])
                          ]
                    expression (middle_end/closure/closure.ml[1094,42742+6]..[1097,42889+53])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[1094,42742+10]..[1094,42742+11])
                            Ppat_var "p" (middle_end/closure/closure.ml[1094,42742+10]..[1094,42742+11])
                          expression (middle_end/closure/closure.ml[1094,42742+14]..[1094,42742+42])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1094,42742+14]..[1094,42742+40])
                              Pexp_ident "Convert_primitives.convert" (middle_end/closure/closure.ml[1094,42742+14]..[1094,42742+40])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1094,42742+41]..[1094,42742+42])
                                  Pexp_ident "p" (middle_end/closure/closure.ml[1094,42742+41]..[1094,42742+42])
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[1095,42788+6]..[1097,42889+53])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[1095,42788+10]..[1095,42788+13])
                              Ppat_var "dbg" (middle_end/closure/closure.ml[1095,42788+10]..[1095,42788+13])
                            expression (middle_end/closure/closure.ml[1095,42788+16]..[1095,42788+43])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[1095,42788+16]..[1095,42788+39])
                                Pexp_ident "Debuginfo.from_location" (middle_end/closure/closure.ml[1095,42788+16]..[1095,42788+39])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1095,42788+40]..[1095,42788+43])
                                    Pexp_ident "loc" (middle_end/closure/closure.ml[1095,42788+40]..[1095,42788+43])
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[1096,42835+6]..[1097,42889+53])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1096,42835+6]..[1096,42835+18])
                            Pexp_ident "simplif_prim" (middle_end/closure/closure.ml[1096,42835+6]..[1096,42835+18])
                          [
                            <arg>
                            Labelled "backend"
                              expression (middle_end/closure/closure.ml[1096,42835+20]..[1096,42835+27])
                                Pexp_ident "backend" (middle_end/closure/closure.ml[1096,42835+20]..[1096,42835+27])
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1096,42835+28]..[1096,42835+53])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1096,42835+28]..[1096,42835+29])
                                  Pexp_ident "!" (middle_end/closure/closure.ml[1096,42835+28]..[1096,42835+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1096,42835+29]..[1096,42835+53])
                                      Pexp_ident "Clflags.float_const_prop" (middle_end/closure/closure.ml[1096,42835+29]..[1096,42835+53])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1097,42889+19]..[1097,42889+20])
                                Pexp_ident "p" (middle_end/closure/closure.ml[1097,42889+19]..[1097,42889+20])
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1097,42889+21]..[1097,42889+49])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1097,42889+22]..[1097,42889+39])
                                  Pexp_ident "close_list_approx" (middle_end/closure/closure.ml[1097,42889+22]..[1097,42889+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1097,42889+40]..[1097,42889+43])
                                      Pexp_ident "env" (middle_end/closure/closure.ml[1097,42889+40]..[1097,42889+43])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1097,42889+44]..[1097,42889+48])
                                      Pexp_ident "args" (middle_end/closure/closure.ml[1097,42889+44]..[1097,42889+48])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1097,42889+50]..[1097,42889+53])
                                Pexp_ident "dbg" (middle_end/closure/closure.ml[1097,42889+50]..[1097,42889+53])
                          ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1098,42943+4]..[1098,42943+25])
                      Ppat_construct "Lswitch" (middle_end/closure/closure.ml[1098,42943+4]..[1098,42943+11])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1098,42943+11]..[1098,42943+25])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1098,42943+12]..[1098,42943+15])
                              Ppat_var "arg" (middle_end/closure/closure.ml[1098,42943+12]..[1098,42943+15])
                            pattern (middle_end/closure/closure.ml[1098,42943+17]..[1098,42943+19])
                              Ppat_var "sw" (middle_end/closure/closure.ml[1098,42943+17]..[1098,42943+19])
                            pattern (middle_end/closure/closure.ml[1098,42943+21]..[1098,42943+24])
                              Ppat_var "dbg" (middle_end/closure/closure.ml[1098,42943+21]..[1098,42943+24])
                          ]
                    expression (middle_end/closure/closure.ml[1099,42972+6]..[1129,44193+9])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[1099,42972+10]..[1099,42972+12])
                            Ppat_var "fn" (middle_end/closure/closure.ml[1099,42972+10]..[1099,42972+12])
                          expression (middle_end/closure/closure.ml[1099,42972+13]..[1114,43554+44]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/closure/closure.ml[1099,42972+13]..[1099,42972+17])
                              Ppat_var "fail" (middle_end/closure/closure.ml[1099,42972+13]..[1099,42972+17])
                            expression (middle_end/closure/closure.ml[1100,42992+8]..[1114,43554+44])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/closure/closure.ml[1100,42992+12]..[1100,42992+21])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[1100,42992+13]..[1100,42992+17])
                                        Ppat_var "uarg" (middle_end/closure/closure.ml[1100,42992+13]..[1100,42992+17])
                                      pattern (middle_end/closure/closure.ml[1100,42992+19]..[1100,42992+20])
                                        Ppat_any
                                    ]
                                  expression (middle_end/closure/closure.ml[1100,42992+24]..[1100,42992+37])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[1100,42992+24]..[1100,42992+29])
                                      Pexp_ident "close" (middle_end/closure/closure.ml[1100,42992+24]..[1100,42992+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1100,42992+30]..[1100,42992+33])
                                          Pexp_ident "env" (middle_end/closure/closure.ml[1100,42992+30]..[1100,42992+33])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1100,42992+34]..[1100,42992+37])
                                          Pexp_ident "arg" (middle_end/closure/closure.ml[1100,42992+34]..[1100,42992+37])
                                    ]
                              ]
                              expression (middle_end/closure/closure.ml[1101,43033+8]..[1114,43554+44])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/closure/closure.ml[1101,43033+12]..[1101,43033+46])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/closure/closure.ml[1101,43033+12]..[1101,43033+23])
                                          Ppat_var "const_index" (middle_end/closure/closure.ml[1101,43033+12]..[1101,43033+23])
                                        pattern (middle_end/closure/closure.ml[1101,43033+25]..[1101,43033+38])
                                          Ppat_var "const_actions" (middle_end/closure/closure.ml[1101,43033+25]..[1101,43033+38])
                                        pattern (middle_end/closure/closure.ml[1101,43033+40]..[1101,43033+46])
                                          Ppat_var "fconst" (middle_end/closure/closure.ml[1101,43033+40]..[1101,43033+46])
                                      ]
                                    expression (middle_end/closure/closure.ml[1102,43082+10]..[1102,43082+60])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[1102,43082+10]..[1102,43082+22])
                                        Pexp_ident "close_switch" (middle_end/closure/closure.ml[1102,43082+10]..[1102,43082+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[1102,43082+23]..[1102,43082+26])
                                            Pexp_ident "env" (middle_end/closure/closure.ml[1102,43082+23]..[1102,43082+26])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[1102,43082+27]..[1102,43082+39])
                                            Pexp_field
                                            expression (middle_end/closure/closure.ml[1102,43082+27]..[1102,43082+29])
                                              Pexp_ident "sw" (middle_end/closure/closure.ml[1102,43082+27]..[1102,43082+29])
                                            "sw_consts" (middle_end/closure/closure.ml[1102,43082+30]..[1102,43082+39])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[1102,43082+40]..[1102,43082+55])
                                            Pexp_field
                                            expression (middle_end/closure/closure.ml[1102,43082+40]..[1102,43082+42])
                                              Pexp_ident "sw" (middle_end/closure/closure.ml[1102,43082+40]..[1102,43082+42])
                                            "sw_numconsts" (middle_end/closure/closure.ml[1102,43082+43]..[1102,43082+55])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[1102,43082+56]..[1102,43082+60])
                                            Pexp_ident "fail" (middle_end/closure/closure.ml[1102,43082+56]..[1102,43082+60])
                                      ]
                                  <def>
                                    pattern (middle_end/closure/closure.ml[1103,43143+12]..[1103,43143+46])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/closure/closure.ml[1103,43143+12]..[1103,43143+23])
                                          Ppat_var "block_index" (middle_end/closure/closure.ml[1103,43143+12]..[1103,43143+23])
                                        pattern (middle_end/closure/closure.ml[1103,43143+25]..[1103,43143+38])
                                          Ppat_var "block_actions" (middle_end/closure/closure.ml[1103,43143+25]..[1103,43143+38])
                                        pattern (middle_end/closure/closure.ml[1103,43143+40]..[1103,43143+46])
                                          Ppat_var "fblock" (middle_end/closure/closure.ml[1103,43143+40]..[1103,43143+46])
                                      ]
                                    expression (middle_end/closure/closure.ml[1104,43192+10]..[1104,43192+60])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[1104,43192+10]..[1104,43192+22])
                                        Pexp_ident "close_switch" (middle_end/closure/closure.ml[1104,43192+10]..[1104,43192+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[1104,43192+23]..[1104,43192+26])
                                            Pexp_ident "env" (middle_end/closure/closure.ml[1104,43192+23]..[1104,43192+26])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[1104,43192+27]..[1104,43192+39])
                                            Pexp_field
                                            expression (middle_end/closure/closure.ml[1104,43192+27]..[1104,43192+29])
                                              Pexp_ident "sw" (middle_end/closure/closure.ml[1104,43192+27]..[1104,43192+29])
                                            "sw_blocks" (middle_end/closure/closure.ml[1104,43192+30]..[1104,43192+39])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[1104,43192+40]..[1104,43192+55])
                                            Pexp_field
                                            expression (middle_end/closure/closure.ml[1104,43192+40]..[1104,43192+42])
                                              Pexp_ident "sw" (middle_end/closure/closure.ml[1104,43192+40]..[1104,43192+42])
                                            "sw_numblocks" (middle_end/closure/closure.ml[1104,43192+43]..[1104,43192+55])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[1104,43192+56]..[1104,43192+60])
                                            Pexp_ident "fail" (middle_end/closure/closure.ml[1104,43192+56]..[1104,43192+60])
                                      ]
                                ]
                                expression (middle_end/closure/closure.ml[1105,43256+8]..[1114,43554+44])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/closure/closure.ml[1105,43256+12]..[1105,43256+16])
                                        Ppat_var "ulam" (middle_end/closure/closure.ml[1105,43256+12]..[1105,43256+16])
                                      expression (middle_end/closure/closure.ml[1106,43275+10]..[1112,43501+41])
                                        Pexp_construct "Uswitch" (middle_end/closure/closure.ml[1106,43275+10]..[1106,43275+17])
                                        Some
                                          expression (middle_end/closure/closure.ml[1107,43293+12]..[1112,43501+41])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/closure/closure.ml[1107,43293+13]..[1107,43293+17])
                                                Pexp_ident "uarg" (middle_end/closure/closure.ml[1107,43293+13]..[1107,43293+17])
                                              expression (middle_end/closure/closure.ml[1108,43312+13]..[1111,43451+48])
                                                Pexp_record
                                                [
                                                  "us_index_consts" (middle_end/closure/closure.ml[1108,43312+14]..[1108,43312+29])
                                                    expression (middle_end/closure/closure.ml[1108,43312+32]..[1108,43312+43])
                                                      Pexp_ident "const_index" (middle_end/closure/closure.ml[1108,43312+32]..[1108,43312+43])
                                                  "us_actions_consts" (middle_end/closure/closure.ml[1109,43357+14]..[1109,43357+31])
                                                    expression (middle_end/closure/closure.ml[1109,43357+34]..[1109,43357+47])
                                                      Pexp_ident "const_actions" (middle_end/closure/closure.ml[1109,43357+34]..[1109,43357+47])
                                                  "us_index_blocks" (middle_end/closure/closure.ml[1110,43406+14]..[1110,43406+29])
                                                    expression (middle_end/closure/closure.ml[1110,43406+32]..[1110,43406+43])
                                                      Pexp_ident "block_index" (middle_end/closure/closure.ml[1110,43406+32]..[1110,43406+43])
                                                  "us_actions_blocks" (middle_end/closure/closure.ml[1111,43451+14]..[1111,43451+31])
                                                    expression (middle_end/closure/closure.ml[1111,43451+34]..[1111,43451+47])
                                                      Pexp_ident "block_actions" (middle_end/closure/closure.ml[1111,43451+34]..[1111,43451+47])
                                                ]
                                                None
                                              expression (middle_end/closure/closure.ml[1112,43501+13]..[1112,43501+40])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[1112,43501+13]..[1112,43501+36])
                                                  Pexp_ident "Debuginfo.from_location" (middle_end/closure/closure.ml[1112,43501+13]..[1112,43501+36])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[1112,43501+37]..[1112,43501+40])
                                                      Pexp_ident "dbg" (middle_end/closure/closure.ml[1112,43501+37]..[1112,43501+40])
                                                ]
                                            ]
                                  ]
                                  expression (middle_end/closure/closure.ml[1114,43554+8]..[1114,43554+44])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/closure/closure.ml[1114,43554+9]..[1114,43554+29])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[1114,43554+9]..[1114,43554+15])
                                          Pexp_ident "fconst" (middle_end/closure/closure.ml[1114,43554+9]..[1114,43554+15])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1114,43554+16]..[1114,43554+29])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[1114,43554+17]..[1114,43554+23])
                                                Pexp_ident "fblock" (middle_end/closure/closure.ml[1114,43554+17]..[1114,43554+23])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1114,43554+24]..[1114,43554+28])
                                                    Pexp_ident "ulam" (middle_end/closure/closure.ml[1114,43554+24]..[1114,43554+28])
                                              ]
                                        ]
                                      expression (middle_end/closure/closure.ml[1114,43554+30]..[1114,43554+43])
                                        Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[1114,43554+30]..[1114,43554+43])
                                        None
                                    ]
                      ]
                      expression (middle_end/closure/closure.ml[1116,43677+6]..[1129,44193+9])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[1116,43677+10]..[1116,43677+14])
                              Ppat_var "fail" (middle_end/closure/closure.ml[1116,43677+10]..[1116,43677+14])
                            expression (middle_end/closure/closure.ml[1116,43677+17]..[1116,43677+33])
                              Pexp_field
                              expression (middle_end/closure/closure.ml[1116,43677+17]..[1116,43677+19])
                                Pexp_ident "sw" (middle_end/closure/closure.ml[1116,43677+17]..[1116,43677+19])
                              "sw_failaction" (middle_end/closure/closure.ml[1116,43677+20]..[1116,43677+33])
                        ]
                        expression (middle_end/closure/closure.ml[1117,43714+6]..[1129,44193+9])
                          Pexp_match
                          expression (middle_end/closure/closure.ml[1117,43714+18]..[1117,43714+22])
                            Pexp_ident "fail" (middle_end/closure/closure.ml[1117,43714+18]..[1117,43714+22])
                          [
                            <case>
                              pattern (middle_end/closure/closure.ml[1118,43742+8]..[1118,43742+38])
                                Ppat_or
                                pattern (middle_end/closure/closure.ml[1118,43742+8]..[1118,43742+12])
                                  Ppat_construct "None" (middle_end/closure/closure.ml[1118,43742+8]..[1118,43742+12])
                                  None
                                pattern (middle_end/closure/closure.ml[1118,43742+13]..[1118,43742+38])
                                  Ppat_construct "Some" (middle_end/closure/closure.ml[1118,43742+13]..[1118,43742+17])
                                  Some
                                    []
                                    pattern (middle_end/closure/closure.ml[1118,43742+18]..[1118,43742+38])
                                      Ppat_construct "Lstaticraise" (middle_end/closure/closure.ml[1118,43742+19]..[1118,43742+31])
                                      Some
                                        []
                                        pattern (middle_end/closure/closure.ml[1118,43742+32]..[1118,43742+37])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[1118,43742+33]..[1118,43742+34])
                                              Ppat_any
                                            pattern (middle_end/closure/closure.ml[1118,43742+35]..[1118,43742+36])
                                              Ppat_any
                                          ]
                              expression (middle_end/closure/closure.ml[1118,43742+42]..[1118,43742+49])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1118,43742+42]..[1118,43742+44])
                                  Pexp_ident "fn" (middle_end/closure/closure.ml[1118,43742+42]..[1118,43742+44])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1118,43742+45]..[1118,43742+49])
                                      Pexp_ident "fail" (middle_end/closure/closure.ml[1118,43742+45]..[1118,43742+49])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[1119,43792+8]..[1119,43792+20])
                                Ppat_construct "Some" (middle_end/closure/closure.ml[1119,43792+8]..[1119,43792+12])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[1119,43792+13]..[1119,43792+20])
                                    Ppat_var "lamfail" (middle_end/closure/closure.ml[1119,43792+13]..[1119,43792+20])
                              expression (middle_end/closure/closure.ml[1120,43816+10]..[1128,44170+22])
                                Pexp_ifthenelse
                                expression (middle_end/closure/closure.ml[1121,43829+12]..[1122,43888+60])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1122,43888+57]..[1122,43888+58])
                                    Pexp_ident ">" (middle_end/closure/closure.ml[1122,43888+57]..[1122,43888+58])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1121,43829+12]..[1122,43888+56])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[1121,43829+57]..[1121,43829+58])
                                          Pexp_ident "+" (middle_end/closure/closure.ml[1121,43829+57]..[1121,43829+58])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1121,43829+12]..[1121,43829+56])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[1121,43829+29]..[1121,43829+30])
                                                Pexp_ident "-" (middle_end/closure/closure.ml[1121,43829+29]..[1121,43829+30])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1121,43829+13]..[1121,43829+28])
                                                    Pexp_field
                                                    expression (middle_end/closure/closure.ml[1121,43829+13]..[1121,43829+15])
                                                      Pexp_ident "sw" (middle_end/closure/closure.ml[1121,43829+13]..[1121,43829+15])
                                                    "sw_numconsts" (middle_end/closure/closure.ml[1121,43829+16]..[1121,43829+28])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1121,43829+31]..[1121,43829+55])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[1121,43829+31]..[1121,43829+42])
                                                      Pexp_ident "List.length" (middle_end/closure/closure.ml[1121,43829+31]..[1121,43829+42])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[1121,43829+43]..[1121,43829+55])
                                                          Pexp_field
                                                          expression (middle_end/closure/closure.ml[1121,43829+43]..[1121,43829+45])
                                                            Pexp_ident "sw" (middle_end/closure/closure.ml[1121,43829+43]..[1121,43829+45])
                                                          "sw_consts" (middle_end/closure/closure.ml[1121,43829+46]..[1121,43829+55])
                                                    ]
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1122,43888+12]..[1122,43888+56])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[1122,43888+29]..[1122,43888+30])
                                                Pexp_ident "-" (middle_end/closure/closure.ml[1122,43888+29]..[1122,43888+30])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1122,43888+13]..[1122,43888+28])
                                                    Pexp_field
                                                    expression (middle_end/closure/closure.ml[1122,43888+13]..[1122,43888+15])
                                                      Pexp_ident "sw" (middle_end/closure/closure.ml[1122,43888+13]..[1122,43888+15])
                                                    "sw_numblocks" (middle_end/closure/closure.ml[1122,43888+16]..[1122,43888+28])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1122,43888+31]..[1122,43888+55])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[1122,43888+31]..[1122,43888+42])
                                                      Pexp_ident "List.length" (middle_end/closure/closure.ml[1122,43888+31]..[1122,43888+42])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[1122,43888+43]..[1122,43888+55])
                                                          Pexp_field
                                                          expression (middle_end/closure/closure.ml[1122,43888+43]..[1122,43888+45])
                                                            Pexp_ident "sw" (middle_end/closure/closure.ml[1122,43888+43]..[1122,43888+45])
                                                          "sw_blocks" (middle_end/closure/closure.ml[1122,43888+46]..[1122,43888+55])
                                                    ]
                                              ]
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1122,43888+59]..[1122,43888+60])
                                        Pexp_constant PConst_int (1,None)
                                  ]
                                expression (middle_end/closure/closure.ml[1124,43964+12]..[1127,44115+54])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/closure/closure.ml[1124,43964+16]..[1124,43964+17])
                                        Ppat_var "i" (middle_end/closure/closure.ml[1124,43964+16]..[1124,43964+17])
                                      expression (middle_end/closure/closure.ml[1124,43964+20]..[1124,43964+39])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[1124,43964+20]..[1124,43964+36])
                                          Pexp_ident "next_raise_count" (middle_end/closure/closure.ml[1124,43964+20]..[1124,43964+36])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1124,43964+37]..[1124,43964+39])
                                              Pexp_construct "()" (middle_end/closure/closure.ml[1124,43964+37]..[1124,43964+39])
                                              None
                                        ]
                                  ]
                                  expression (middle_end/closure/closure.ml[1125,44007+12]..[1127,44115+54])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/closure/closure.ml[1125,44007+16]..[1125,44007+23])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[1125,44007+16]..[1125,44007+21])
                                              Ppat_var "ubody" (middle_end/closure/closure.ml[1125,44007+16]..[1125,44007+21])
                                            pattern (middle_end/closure/closure.ml[1125,44007+22]..[1125,44007+23])
                                              Ppat_any
                                          ]
                                        expression (middle_end/closure/closure.ml[1125,44007+26]..[1125,44007+57])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[1125,44007+26]..[1125,44007+28])
                                            Pexp_ident "fn" (middle_end/closure/closure.ml[1125,44007+26]..[1125,44007+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[1125,44007+29]..[1125,44007+57])
                                                Pexp_construct "Some" (middle_end/closure/closure.ml[1125,44007+30]..[1125,44007+34])
                                                Some
                                                  expression (middle_end/closure/closure.ml[1125,44007+35]..[1125,44007+56])
                                                    Pexp_construct "Lstaticraise" (middle_end/closure/closure.ml[1125,44007+36]..[1125,44007+48])
                                                    Some
                                                      expression (middle_end/closure/closure.ml[1125,44007+49]..[1125,44007+55])
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/closure/closure.ml[1125,44007+50]..[1125,44007+51])
                                                            Pexp_ident "i" (middle_end/closure/closure.ml[1125,44007+50]..[1125,44007+51])
                                                          expression (middle_end/closure/closure.ml[1125,44007+52]..[1125,44007+54])
                                                            Pexp_construct "[]" (middle_end/closure/closure.ml[1125,44007+52]..[1125,44007+54])
                                                            None
                                                        ]
                                          ]
                                      <def>
                                        pattern (middle_end/closure/closure.ml[1126,44065+16]..[1126,44065+26])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[1126,44065+16]..[1126,44065+24])
                                              Ppat_var "uhandler" (middle_end/closure/closure.ml[1126,44065+16]..[1126,44065+24])
                                            pattern (middle_end/closure/closure.ml[1126,44065+25]..[1126,44065+26])
                                              Ppat_any
                                          ]
                                        expression (middle_end/closure/closure.ml[1126,44065+29]..[1126,44065+46])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[1126,44065+29]..[1126,44065+34])
                                            Pexp_ident "close" (middle_end/closure/closure.ml[1126,44065+29]..[1126,44065+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[1126,44065+35]..[1126,44065+38])
                                                Pexp_ident "env" (middle_end/closure/closure.ml[1126,44065+35]..[1126,44065+38])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[1126,44065+39]..[1126,44065+46])
                                                Pexp_ident "lamfail" (middle_end/closure/closure.ml[1126,44065+39]..[1126,44065+46])
                                          ]
                                    ]
                                    expression (middle_end/closure/closure.ml[1127,44115+12]..[1127,44115+54])
                                      Pexp_tuple
                                      [
                                        expression (middle_end/closure/closure.ml[1127,44115+12]..[1127,44115+40])
                                          Pexp_construct "Ucatch" (middle_end/closure/closure.ml[1127,44115+12]..[1127,44115+18])
                                          Some
                                            expression (middle_end/closure/closure.ml[1127,44115+19]..[1127,44115+40])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/closure/closure.ml[1127,44115+20]..[1127,44115+21])
                                                  Pexp_ident "i" (middle_end/closure/closure.ml[1127,44115+20]..[1127,44115+21])
                                                expression (middle_end/closure/closure.ml[1127,44115+22]..[1127,44115+24])
                                                  Pexp_construct "[]" (middle_end/closure/closure.ml[1127,44115+22]..[1127,44115+24])
                                                  None
                                                expression (middle_end/closure/closure.ml[1127,44115+25]..[1127,44115+30])
                                                  Pexp_ident "ubody" (middle_end/closure/closure.ml[1127,44115+25]..[1127,44115+30])
                                                expression (middle_end/closure/closure.ml[1127,44115+31]..[1127,44115+39])
                                                  Pexp_ident "uhandler" (middle_end/closure/closure.ml[1127,44115+31]..[1127,44115+39])
                                              ]
                                        expression (middle_end/closure/closure.ml[1127,44115+41]..[1127,44115+54])
                                          Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[1127,44115+41]..[1127,44115+54])
                                          None
                                      ]
                                Some
                                  expression (middle_end/closure/closure.ml[1128,44170+15]..[1128,44170+22])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[1128,44170+15]..[1128,44170+17])
                                      Pexp_ident "fn" (middle_end/closure/closure.ml[1128,44170+15]..[1128,44170+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1128,44170+18]..[1128,44170+22])
                                          Pexp_ident "fail" (middle_end/closure/closure.ml[1128,44170+18]..[1128,44170+22])
                                    ]
                          ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1130,44203+4]..[1130,44203+29])
                      Ppat_construct "Lstringswitch" (middle_end/closure/closure.ml[1130,44203+4]..[1130,44203+17])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1130,44203+17]..[1130,44203+29])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1130,44203+18]..[1130,44203+21])
                              Ppat_var "arg" (middle_end/closure/closure.ml[1130,44203+18]..[1130,44203+21])
                            pattern (middle_end/closure/closure.ml[1130,44203+22]..[1130,44203+24])
                              Ppat_var "sw" (middle_end/closure/closure.ml[1130,44203+22]..[1130,44203+24])
                            pattern (middle_end/closure/closure.ml[1130,44203+25]..[1130,44203+26])
                              Ppat_var "d" (middle_end/closure/closure.ml[1130,44203+25]..[1130,44203+26])
                            pattern (middle_end/closure/closure.ml[1130,44203+27]..[1130,44203+28])
                              Ppat_any
                          ]
                    expression (middle_end/closure/closure.ml[1131,44236+6]..[1143,44522+47])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[1131,44236+10]..[1131,44236+16])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1131,44236+10]..[1131,44236+14])
                                Ppat_var "uarg" (middle_end/closure/closure.ml[1131,44236+10]..[1131,44236+14])
                              pattern (middle_end/closure/closure.ml[1131,44236+15]..[1131,44236+16])
                                Ppat_any
                            ]
                          expression (middle_end/closure/closure.ml[1131,44236+19]..[1131,44236+32])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1131,44236+19]..[1131,44236+24])
                              Pexp_ident "close" (middle_end/closure/closure.ml[1131,44236+19]..[1131,44236+24])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1131,44236+25]..[1131,44236+28])
                                  Pexp_ident "env" (middle_end/closure/closure.ml[1131,44236+25]..[1131,44236+28])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1131,44236+29]..[1131,44236+32])
                                  Pexp_ident "arg" (middle_end/closure/closure.ml[1131,44236+29]..[1131,44236+32])
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[1132,44272+6]..[1143,44522+47])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[1132,44272+10]..[1132,44272+13])
                              Ppat_var "usw" (middle_end/closure/closure.ml[1132,44272+10]..[1132,44272+13])
                            expression (middle_end/closure/closure.ml[1133,44288+8]..[1137,44393+12])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[1133,44288+8]..[1133,44288+16])
                                Pexp_ident "List.map" (middle_end/closure/closure.ml[1133,44288+8]..[1133,44288+16])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1134,44305+10]..[1136,44373+19])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/closure/closure.ml[1134,44305+15]..[1134,44305+22])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/closure/closure.ml[1134,44305+16]..[1134,44305+17])
                                          Ppat_var "s" (middle_end/closure/closure.ml[1134,44305+16]..[1134,44305+17])
                                        pattern (middle_end/closure/closure.ml[1134,44305+18]..[1134,44305+21])
                                          Ppat_var "act" (middle_end/closure/closure.ml[1134,44305+18]..[1134,44305+21])
                                      ]
                                    expression (middle_end/closure/closure.ml[1135,44331+12]..[1136,44373+18])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/closure/closure.ml[1135,44331+16]..[1135,44331+22])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[1135,44331+16]..[1135,44331+20])
                                                Ppat_var "uact" (middle_end/closure/closure.ml[1135,44331+16]..[1135,44331+20])
                                              pattern (middle_end/closure/closure.ml[1135,44331+21]..[1135,44331+22])
                                                Ppat_any
                                            ]
                                          expression (middle_end/closure/closure.ml[1135,44331+25]..[1135,44331+38])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[1135,44331+25]..[1135,44331+30])
                                              Pexp_ident "close" (middle_end/closure/closure.ml[1135,44331+25]..[1135,44331+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[1135,44331+31]..[1135,44331+34])
                                                  Pexp_ident "env" (middle_end/closure/closure.ml[1135,44331+31]..[1135,44331+34])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[1135,44331+35]..[1135,44331+38])
                                                  Pexp_ident "act" (middle_end/closure/closure.ml[1135,44331+35]..[1135,44331+38])
                                            ]
                                      ]
                                      expression (middle_end/closure/closure.ml[1136,44373+12]..[1136,44373+18])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/closure/closure.ml[1136,44373+12]..[1136,44373+13])
                                            Pexp_ident "s" (middle_end/closure/closure.ml[1136,44373+12]..[1136,44373+13])
                                          expression (middle_end/closure/closure.ml[1136,44373+14]..[1136,44373+18])
                                            Pexp_ident "uact" (middle_end/closure/closure.ml[1136,44373+14]..[1136,44373+18])
                                        ]
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1137,44393+10]..[1137,44393+12])
                                    Pexp_ident "sw" (middle_end/closure/closure.ml[1137,44393+10]..[1137,44393+12])
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[1138,44409+6]..[1143,44522+47])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[1138,44409+10]..[1138,44409+12])
                                Ppat_var "ud" (middle_end/closure/closure.ml[1138,44409+10]..[1138,44409+12])
                              expression (middle_end/closure/closure.ml[1139,44424+8]..[1142,44501+17])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1139,44424+8]..[1139,44424+18])
                                  Pexp_ident "Option.map" (middle_end/closure/closure.ml[1139,44424+8]..[1139,44424+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1140,44443+10]..[1142,44501+15])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/closure/closure.ml[1140,44443+15]..[1140,44443+16])
                                        Ppat_var "d" (middle_end/closure/closure.ml[1140,44443+15]..[1140,44443+16])
                                      expression (middle_end/closure/closure.ml[1141,44463+12]..[1142,44501+14])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/closure/closure.ml[1141,44463+16]..[1141,44463+20])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/closure/closure.ml[1141,44463+16]..[1141,44463+18])
                                                  Ppat_var "ud" (middle_end/closure/closure.ml[1141,44463+16]..[1141,44463+18])
                                                pattern (middle_end/closure/closure.ml[1141,44463+19]..[1141,44463+20])
                                                  Ppat_any
                                              ]
                                            expression (middle_end/closure/closure.ml[1141,44463+23]..[1141,44463+34])
                                              Pexp_apply
                                              expression (middle_end/closure/closure.ml[1141,44463+23]..[1141,44463+28])
                                                Pexp_ident "close" (middle_end/closure/closure.ml[1141,44463+23]..[1141,44463+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1141,44463+29]..[1141,44463+32])
                                                    Pexp_ident "env" (middle_end/closure/closure.ml[1141,44463+29]..[1141,44463+32])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/closure/closure.ml[1141,44463+33]..[1141,44463+34])
                                                    Pexp_ident "d" (middle_end/closure/closure.ml[1141,44463+33]..[1141,44463+34])
                                              ]
                                        ]
                                        expression (middle_end/closure/closure.ml[1142,44501+12]..[1142,44501+14])
                                          Pexp_ident "ud" (middle_end/closure/closure.ml[1142,44501+12]..[1142,44501+14])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1142,44501+16]..[1142,44501+17])
                                      Pexp_ident "d" (middle_end/closure/closure.ml[1142,44501+16]..[1142,44501+17])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[1143,44522+6]..[1143,44522+47])
                            Pexp_tuple
                            [
                              expression (middle_end/closure/closure.ml[1143,44522+6]..[1143,44522+33])
                                Pexp_construct "Ustringswitch" (middle_end/closure/closure.ml[1143,44522+6]..[1143,44522+19])
                                Some
                                  expression (middle_end/closure/closure.ml[1143,44522+20]..[1143,44522+33])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/closure/closure.ml[1143,44522+21]..[1143,44522+25])
                                        Pexp_ident "uarg" (middle_end/closure/closure.ml[1143,44522+21]..[1143,44522+25])
                                      expression (middle_end/closure/closure.ml[1143,44522+26]..[1143,44522+29])
                                        Pexp_ident "usw" (middle_end/closure/closure.ml[1143,44522+26]..[1143,44522+29])
                                      expression (middle_end/closure/closure.ml[1143,44522+30]..[1143,44522+32])
                                        Pexp_ident "ud" (middle_end/closure/closure.ml[1143,44522+30]..[1143,44522+32])
                                    ]
                              expression (middle_end/closure/closure.ml[1143,44522+34]..[1143,44522+47])
                                Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[1143,44522+34]..[1143,44522+47])
                                None
                            ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1144,44570+4]..[1144,44570+26])
                      Ppat_construct "Lstaticraise" (middle_end/closure/closure.ml[1144,44570+4]..[1144,44570+16])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1144,44570+17]..[1144,44570+26])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1144,44570+18]..[1144,44570+19])
                              Ppat_var "i" (middle_end/closure/closure.ml[1144,44570+18]..[1144,44570+19])
                            pattern (middle_end/closure/closure.ml[1144,44570+21]..[1144,44570+25])
                              Ppat_var "args" (middle_end/closure/closure.ml[1144,44570+21]..[1144,44570+25])
                          ]
                    expression (middle_end/closure/closure.ml[1145,44600+6]..[1145,44600+59])
                      Pexp_tuple
                      [
                        expression (middle_end/closure/closure.ml[1145,44600+7]..[1145,44600+43])
                          Pexp_construct "Ustaticfail" (middle_end/closure/closure.ml[1145,44600+7]..[1145,44600+18])
                          Some
                            expression (middle_end/closure/closure.ml[1145,44600+19]..[1145,44600+43])
                              Pexp_tuple
                              [
                                expression (middle_end/closure/closure.ml[1145,44600+20]..[1145,44600+21])
                                  Pexp_ident "i" (middle_end/closure/closure.ml[1145,44600+20]..[1145,44600+21])
                                expression (middle_end/closure/closure.ml[1145,44600+23]..[1145,44600+42])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1145,44600+23]..[1145,44600+33])
                                    Pexp_ident "close_list" (middle_end/closure/closure.ml[1145,44600+23]..[1145,44600+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1145,44600+34]..[1145,44600+37])
                                        Pexp_ident "env" (middle_end/closure/closure.ml[1145,44600+34]..[1145,44600+37])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1145,44600+38]..[1145,44600+42])
                                        Pexp_ident "args" (middle_end/closure/closure.ml[1145,44600+38]..[1145,44600+42])
                                  ]
                              ]
                        expression (middle_end/closure/closure.ml[1145,44600+45]..[1145,44600+58])
                          Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[1145,44600+45]..[1145,44600+58])
                          None
                      ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1146,44660+4]..[1146,44660+42])
                      Ppat_construct "Lstaticcatch" (middle_end/closure/closure.ml[1146,44660+4]..[1146,44660+16])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1146,44660+16]..[1146,44660+42])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1146,44660+17]..[1146,44660+21])
                              Ppat_var "body" (middle_end/closure/closure.ml[1146,44660+17]..[1146,44660+21])
                            pattern (middle_end/closure/closure.ml[1146,44660+23]..[1146,44660+32])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[1146,44660+24]..[1146,44660+25])
                                  Ppat_var "i" (middle_end/closure/closure.ml[1146,44660+24]..[1146,44660+25])
                                pattern (middle_end/closure/closure.ml[1146,44660+27]..[1146,44660+31])
                                  Ppat_var "vars" (middle_end/closure/closure.ml[1146,44660+27]..[1146,44660+31])
                              ]
                            pattern (middle_end/closure/closure.ml[1146,44660+34]..[1146,44660+41])
                              Ppat_var "handler" (middle_end/closure/closure.ml[1146,44660+34]..[1146,44660+41])
                          ]
                    expression (middle_end/closure/closure.ml[1147,44706+6]..[1150,44863+55])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[1147,44706+10]..[1147,44706+20])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1147,44706+11]..[1147,44706+16])
                                Ppat_var "ubody" (middle_end/closure/closure.ml[1147,44706+11]..[1147,44706+16])
                              pattern (middle_end/closure/closure.ml[1147,44706+18]..[1147,44706+19])
                                Ppat_any
                            ]
                          expression (middle_end/closure/closure.ml[1147,44706+23]..[1147,44706+37])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1147,44706+23]..[1147,44706+28])
                              Pexp_ident "close" (middle_end/closure/closure.ml[1147,44706+23]..[1147,44706+28])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1147,44706+29]..[1147,44706+32])
                                  Pexp_ident "env" (middle_end/closure/closure.ml[1147,44706+29]..[1147,44706+32])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1147,44706+33]..[1147,44706+37])
                                  Pexp_ident "body" (middle_end/closure/closure.ml[1147,44706+33]..[1147,44706+37])
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[1148,44747+6]..[1150,44863+55])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[1148,44747+10]..[1148,44747+23])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[1148,44747+11]..[1148,44747+19])
                                  Ppat_var "uhandler" (middle_end/closure/closure.ml[1148,44747+11]..[1148,44747+19])
                                pattern (middle_end/closure/closure.ml[1148,44747+21]..[1148,44747+22])
                                  Ppat_any
                              ]
                            expression (middle_end/closure/closure.ml[1148,44747+26]..[1148,44747+43])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[1148,44747+26]..[1148,44747+31])
                                Pexp_ident "close" (middle_end/closure/closure.ml[1148,44747+26]..[1148,44747+31])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1148,44747+32]..[1148,44747+35])
                                    Pexp_ident "env" (middle_end/closure/closure.ml[1148,44747+32]..[1148,44747+35])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1148,44747+36]..[1148,44747+43])
                                    Pexp_ident "handler" (middle_end/closure/closure.ml[1148,44747+36]..[1148,44747+43])
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[1149,44794+6]..[1150,44863+55])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[1149,44794+10]..[1149,44794+14])
                                Ppat_var "vars" (middle_end/closure/closure.ml[1149,44794+10]..[1149,44794+14])
                              expression (middle_end/closure/closure.ml[1149,44794+17]..[1149,44794+65])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1149,44794+17]..[1149,44794+25])
                                  Pexp_ident "List.map" (middle_end/closure/closure.ml[1149,44794+17]..[1149,44794+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1149,44794+26]..[1149,44794+60])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/closure/closure.ml[1149,44794+31]..[1149,44794+39])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/closure/closure.ml[1149,44794+32]..[1149,44794+35])
                                            Ppat_var "var" (middle_end/closure/closure.ml[1149,44794+32]..[1149,44794+35])
                                          pattern (middle_end/closure/closure.ml[1149,44794+37]..[1149,44794+38])
                                            Ppat_var "k" (middle_end/closure/closure.ml[1149,44794+37]..[1149,44794+38])
                                        ]
                                      expression (middle_end/closure/closure.ml[1149,44794+43]..[1149,44794+59])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/closure/closure.ml[1149,44794+43]..[1149,44794+56])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[1149,44794+43]..[1149,44794+52])
                                              Pexp_ident "VP.create" (middle_end/closure/closure.ml[1149,44794+43]..[1149,44794+52])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[1149,44794+53]..[1149,44794+56])
                                                  Pexp_ident "var" (middle_end/closure/closure.ml[1149,44794+53]..[1149,44794+56])
                                            ]
                                          expression (middle_end/closure/closure.ml[1149,44794+58]..[1149,44794+59])
                                            Pexp_ident "k" (middle_end/closure/closure.ml[1149,44794+58]..[1149,44794+59])
                                        ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1149,44794+61]..[1149,44794+65])
                                      Pexp_ident "vars" (middle_end/closure/closure.ml[1149,44794+61]..[1149,44794+65])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[1150,44863+6]..[1150,44863+55])
                            Pexp_tuple
                            [
                              expression (middle_end/closure/closure.ml[1150,44863+7]..[1150,44863+39])
                                Pexp_construct "Ucatch" (middle_end/closure/closure.ml[1150,44863+7]..[1150,44863+13])
                                Some
                                  expression (middle_end/closure/closure.ml[1150,44863+13]..[1150,44863+39])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/closure/closure.ml[1150,44863+14]..[1150,44863+15])
                                        Pexp_ident "i" (middle_end/closure/closure.ml[1150,44863+14]..[1150,44863+15])
                                      expression (middle_end/closure/closure.ml[1150,44863+17]..[1150,44863+21])
                                        Pexp_ident "vars" (middle_end/closure/closure.ml[1150,44863+17]..[1150,44863+21])
                                      expression (middle_end/closure/closure.ml[1150,44863+23]..[1150,44863+28])
                                        Pexp_ident "ubody" (middle_end/closure/closure.ml[1150,44863+23]..[1150,44863+28])
                                      expression (middle_end/closure/closure.ml[1150,44863+30]..[1150,44863+38])
                                        Pexp_ident "uhandler" (middle_end/closure/closure.ml[1150,44863+30]..[1150,44863+38])
                                    ]
                              expression (middle_end/closure/closure.ml[1150,44863+41]..[1150,44863+54])
                                Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[1150,44863+41]..[1150,44863+54])
                                None
                            ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1151,44919+4]..[1151,44919+31])
                      Ppat_construct "Ltrywith" (middle_end/closure/closure.ml[1151,44919+4]..[1151,44919+12])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1151,44919+12]..[1151,44919+31])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1151,44919+13]..[1151,44919+17])
                              Ppat_var "body" (middle_end/closure/closure.ml[1151,44919+13]..[1151,44919+17])
                            pattern (middle_end/closure/closure.ml[1151,44919+19]..[1151,44919+21])
                              Ppat_var "id" (middle_end/closure/closure.ml[1151,44919+19]..[1151,44919+21])
                            pattern (middle_end/closure/closure.ml[1151,44919+23]..[1151,44919+30])
                              Ppat_var "handler" (middle_end/closure/closure.ml[1151,44919+23]..[1151,44919+30])
                          ]
                    expression (middle_end/closure/closure.ml[1152,44954+6]..[1154,45042+62])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[1152,44954+10]..[1152,44954+20])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1152,44954+11]..[1152,44954+16])
                                Ppat_var "ubody" (middle_end/closure/closure.ml[1152,44954+11]..[1152,44954+16])
                              pattern (middle_end/closure/closure.ml[1152,44954+18]..[1152,44954+19])
                                Ppat_any
                            ]
                          expression (middle_end/closure/closure.ml[1152,44954+23]..[1152,44954+37])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1152,44954+23]..[1152,44954+28])
                              Pexp_ident "close" (middle_end/closure/closure.ml[1152,44954+23]..[1152,44954+28])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1152,44954+29]..[1152,44954+32])
                                  Pexp_ident "env" (middle_end/closure/closure.ml[1152,44954+29]..[1152,44954+32])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1152,44954+33]..[1152,44954+37])
                                  Pexp_ident "body" (middle_end/closure/closure.ml[1152,44954+33]..[1152,44954+37])
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[1153,44995+6]..[1154,45042+62])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[1153,44995+10]..[1153,44995+23])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[1153,44995+11]..[1153,44995+19])
                                  Ppat_var "uhandler" (middle_end/closure/closure.ml[1153,44995+11]..[1153,44995+19])
                                pattern (middle_end/closure/closure.ml[1153,44995+21]..[1153,44995+22])
                                  Ppat_any
                              ]
                            expression (middle_end/closure/closure.ml[1153,44995+26]..[1153,44995+43])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[1153,44995+26]..[1153,44995+31])
                                Pexp_ident "close" (middle_end/closure/closure.ml[1153,44995+26]..[1153,44995+31])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1153,44995+32]..[1153,44995+35])
                                    Pexp_ident "env" (middle_end/closure/closure.ml[1153,44995+32]..[1153,44995+35])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1153,44995+36]..[1153,44995+43])
                                    Pexp_ident "handler" (middle_end/closure/closure.ml[1153,44995+36]..[1153,44995+43])
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[1154,45042+6]..[1154,45042+62])
                          Pexp_tuple
                          [
                            expression (middle_end/closure/closure.ml[1154,45042+7]..[1154,45042+46])
                              Pexp_construct "Utrywith" (middle_end/closure/closure.ml[1154,45042+7]..[1154,45042+15])
                              Some
                                expression (middle_end/closure/closure.ml[1154,45042+15]..[1154,45042+46])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/closure/closure.ml[1154,45042+16]..[1154,45042+21])
                                      Pexp_ident "ubody" (middle_end/closure/closure.ml[1154,45042+16]..[1154,45042+21])
                                    expression (middle_end/closure/closure.ml[1154,45042+23]..[1154,45042+35])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[1154,45042+23]..[1154,45042+32])
                                        Pexp_ident "VP.create" (middle_end/closure/closure.ml[1154,45042+23]..[1154,45042+32])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[1154,45042+33]..[1154,45042+35])
                                            Pexp_ident "id" (middle_end/closure/closure.ml[1154,45042+33]..[1154,45042+35])
                                      ]
                                    expression (middle_end/closure/closure.ml[1154,45042+37]..[1154,45042+45])
                                      Pexp_ident "uhandler" (middle_end/closure/closure.ml[1154,45042+37]..[1154,45042+45])
                                  ]
                            expression (middle_end/closure/closure.ml[1154,45042+48]..[1154,45042+61])
                              Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[1154,45042+48]..[1154,45042+61])
                              None
                          ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1155,45105+4]..[1155,45105+33])
                      Ppat_construct "Lifthenelse" (middle_end/closure/closure.ml[1155,45105+4]..[1155,45105+15])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1155,45105+15]..[1155,45105+33])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1155,45105+16]..[1155,45105+19])
                              Ppat_var "arg" (middle_end/closure/closure.ml[1155,45105+16]..[1155,45105+19])
                            pattern (middle_end/closure/closure.ml[1155,45105+21]..[1155,45105+25])
                              Ppat_var "ifso" (middle_end/closure/closure.ml[1155,45105+21]..[1155,45105+25])
                            pattern (middle_end/closure/closure.ml[1155,45105+27]..[1155,45105+32])
                              Ppat_var "ifnot" (middle_end/closure/closure.ml[1155,45105+27]..[1155,45105+32])
                          ]
                    expression (middle_end/closure/closure.ml[1156,45142+6]..[1164,45493+9])
                      Pexp_match
                      expression (middle_end/closure/closure.ml[1156,45142+18]..[1156,45142+31])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1156,45142+18]..[1156,45142+23])
                          Pexp_ident "close" (middle_end/closure/closure.ml[1156,45142+18]..[1156,45142+23])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1156,45142+24]..[1156,45142+27])
                              Pexp_ident "env" (middle_end/closure/closure.ml[1156,45142+24]..[1156,45142+27])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1156,45142+28]..[1156,45142+31])
                              Pexp_ident "arg" (middle_end/closure/closure.ml[1156,45142+28]..[1156,45142+31])
                        ]
                      [
                        <case>
                          pattern (middle_end/closure/closure.ml[1157,45179+8]..[1157,45179+42])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1157,45179+9]..[1157,45179+13])
                                Ppat_var "uarg" (middle_end/closure/closure.ml[1157,45179+9]..[1157,45179+13])
                              pattern (middle_end/closure/closure.ml[1157,45179+15]..[1157,45179+41])
                                Ppat_construct "Value_const" (middle_end/closure/closure.ml[1157,45179+15]..[1157,45179+26])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[1157,45179+27]..[1157,45179+41])
                                    Ppat_construct "Uconst_int" (middle_end/closure/closure.ml[1157,45179+28]..[1157,45179+38])
                                    Some
                                      []
                                      pattern (middle_end/closure/closure.ml[1157,45179+39]..[1157,45179+40])
                                        Ppat_var "n" (middle_end/closure/closure.ml[1157,45179+39]..[1157,45179+40])
                            ]
                          expression (middle_end/closure/closure.ml[1158,45225+10]..[1159,45263+55])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1158,45225+10]..[1158,45225+32])
                              Pexp_ident "sequence_constant_expr" (middle_end/closure/closure.ml[1158,45225+10]..[1158,45225+32])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1158,45225+33]..[1158,45225+37])
                                  Pexp_ident "uarg" (middle_end/closure/closure.ml[1158,45225+33]..[1158,45225+37])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1159,45263+12]..[1159,45263+55])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1159,45263+13]..[1159,45263+18])
                                    Pexp_ident "close" (middle_end/closure/closure.ml[1159,45263+13]..[1159,45263+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1159,45263+19]..[1159,45263+22])
                                        Pexp_ident "env" (middle_end/closure/closure.ml[1159,45263+19]..[1159,45263+22])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1159,45263+23]..[1159,45263+54])
                                        Pexp_ifthenelse
                                        expression (middle_end/closure/closure.ml[1159,45263+27]..[1159,45263+32])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[1159,45263+29]..[1159,45263+30])
                                            Pexp_ident "=" (middle_end/closure/closure.ml[1159,45263+29]..[1159,45263+30])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[1159,45263+27]..[1159,45263+28])
                                                Pexp_ident "n" (middle_end/closure/closure.ml[1159,45263+27]..[1159,45263+28])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[1159,45263+31]..[1159,45263+32])
                                                Pexp_constant PConst_int (0,None)
                                          ]
                                        expression (middle_end/closure/closure.ml[1159,45263+38]..[1159,45263+43])
                                          Pexp_ident "ifnot" (middle_end/closure/closure.ml[1159,45263+38]..[1159,45263+43])
                                        Some
                                          expression (middle_end/closure/closure.ml[1159,45263+49]..[1159,45263+53])
                                            Pexp_ident "ifso" (middle_end/closure/closure.ml[1159,45263+49]..[1159,45263+53])
                                  ]
                            ]
                        <case>
                          pattern (middle_end/closure/closure.ml[1160,45319+8]..[1160,45319+18])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1160,45319+9]..[1160,45319+13])
                                Ppat_var "uarg" (middle_end/closure/closure.ml[1160,45319+9]..[1160,45319+13])
                              pattern (middle_end/closure/closure.ml[1160,45319+15]..[1160,45319+16])
                                Ppat_any
                            ]
                          expression (middle_end/closure/closure.ml[1161,45341+10]..[1163,45433+59])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/closure/closure.ml[1161,45341+14]..[1161,45341+24])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[1161,45341+15]..[1161,45341+20])
                                      Ppat_var "uifso" (middle_end/closure/closure.ml[1161,45341+15]..[1161,45341+20])
                                    pattern (middle_end/closure/closure.ml[1161,45341+22]..[1161,45341+23])
                                      Ppat_any
                                  ]
                                expression (middle_end/closure/closure.ml[1161,45341+27]..[1161,45341+41])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1161,45341+27]..[1161,45341+32])
                                    Pexp_ident "close" (middle_end/closure/closure.ml[1161,45341+27]..[1161,45341+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1161,45341+33]..[1161,45341+36])
                                        Pexp_ident "env" (middle_end/closure/closure.ml[1161,45341+33]..[1161,45341+36])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1161,45341+37]..[1161,45341+41])
                                        Pexp_ident "ifso" (middle_end/closure/closure.ml[1161,45341+37]..[1161,45341+41])
                                  ]
                            ]
                            expression (middle_end/closure/closure.ml[1162,45386+10]..[1163,45433+59])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/closure/closure.ml[1162,45386+14]..[1162,45386+25])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[1162,45386+15]..[1162,45386+21])
                                        Ppat_var "uifnot" (middle_end/closure/closure.ml[1162,45386+15]..[1162,45386+21])
                                      pattern (middle_end/closure/closure.ml[1162,45386+23]..[1162,45386+24])
                                        Ppat_any
                                    ]
                                  expression (middle_end/closure/closure.ml[1162,45386+28]..[1162,45386+43])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[1162,45386+28]..[1162,45386+33])
                                      Pexp_ident "close" (middle_end/closure/closure.ml[1162,45386+28]..[1162,45386+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1162,45386+34]..[1162,45386+37])
                                          Pexp_ident "env" (middle_end/closure/closure.ml[1162,45386+34]..[1162,45386+37])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1162,45386+38]..[1162,45386+43])
                                          Pexp_ident "ifnot" (middle_end/closure/closure.ml[1162,45386+38]..[1162,45386+43])
                                    ]
                              ]
                              expression (middle_end/closure/closure.ml[1163,45433+10]..[1163,45433+59])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[1163,45433+11]..[1163,45433+43])
                                    Pexp_construct "Uifthenelse" (middle_end/closure/closure.ml[1163,45433+11]..[1163,45433+22])
                                    Some
                                      expression (middle_end/closure/closure.ml[1163,45433+22]..[1163,45433+43])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/closure/closure.ml[1163,45433+23]..[1163,45433+27])
                                            Pexp_ident "uarg" (middle_end/closure/closure.ml[1163,45433+23]..[1163,45433+27])
                                          expression (middle_end/closure/closure.ml[1163,45433+29]..[1163,45433+34])
                                            Pexp_ident "uifso" (middle_end/closure/closure.ml[1163,45433+29]..[1163,45433+34])
                                          expression (middle_end/closure/closure.ml[1163,45433+36]..[1163,45433+42])
                                            Pexp_ident "uifnot" (middle_end/closure/closure.ml[1163,45433+36]..[1163,45433+42])
                                        ]
                                  expression (middle_end/closure/closure.ml[1163,45433+45]..[1163,45433+58])
                                    Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[1163,45433+45]..[1163,45433+58])
                                    None
                                ]
                      ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1165,45503+4]..[1165,45503+25])
                      Ppat_construct "Lsequence" (middle_end/closure/closure.ml[1165,45503+4]..[1165,45503+13])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1165,45503+13]..[1165,45503+25])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1165,45503+14]..[1165,45503+18])
                              Ppat_var "lam1" (middle_end/closure/closure.ml[1165,45503+14]..[1165,45503+18])
                            pattern (middle_end/closure/closure.ml[1165,45503+20]..[1165,45503+24])
                              Ppat_var "lam2" (middle_end/closure/closure.ml[1165,45503+20]..[1165,45503+24])
                          ]
                    expression (middle_end/closure/closure.ml[1166,45532+6]..[1168,45619+39])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[1166,45532+10]..[1166,45532+20])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1166,45532+11]..[1166,45532+16])
                                Ppat_var "ulam1" (middle_end/closure/closure.ml[1166,45532+11]..[1166,45532+16])
                              pattern (middle_end/closure/closure.ml[1166,45532+18]..[1166,45532+19])
                                Ppat_any
                            ]
                          expression (middle_end/closure/closure.ml[1166,45532+23]..[1166,45532+37])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1166,45532+23]..[1166,45532+28])
                              Pexp_ident "close" (middle_end/closure/closure.ml[1166,45532+23]..[1166,45532+28])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1166,45532+29]..[1166,45532+32])
                                  Pexp_ident "env" (middle_end/closure/closure.ml[1166,45532+29]..[1166,45532+32])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1166,45532+33]..[1166,45532+37])
                                  Pexp_ident "lam1" (middle_end/closure/closure.ml[1166,45532+33]..[1166,45532+37])
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[1167,45573+6]..[1168,45619+39])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[1167,45573+10]..[1167,45573+25])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[1167,45573+11]..[1167,45573+16])
                                  Ppat_var "ulam2" (middle_end/closure/closure.ml[1167,45573+11]..[1167,45573+16])
                                pattern (middle_end/closure/closure.ml[1167,45573+18]..[1167,45573+24])
                                  Ppat_var "approx" (middle_end/closure/closure.ml[1167,45573+18]..[1167,45573+24])
                              ]
                            expression (middle_end/closure/closure.ml[1167,45573+28]..[1167,45573+42])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[1167,45573+28]..[1167,45573+33])
                                Pexp_ident "close" (middle_end/closure/closure.ml[1167,45573+28]..[1167,45573+33])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1167,45573+34]..[1167,45573+37])
                                    Pexp_ident "env" (middle_end/closure/closure.ml[1167,45573+34]..[1167,45573+37])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1167,45573+38]..[1167,45573+42])
                                    Pexp_ident "lam2" (middle_end/closure/closure.ml[1167,45573+38]..[1167,45573+42])
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[1168,45619+6]..[1168,45619+39])
                          Pexp_tuple
                          [
                            expression (middle_end/closure/closure.ml[1168,45619+7]..[1168,45619+30])
                              Pexp_construct "Usequence" (middle_end/closure/closure.ml[1168,45619+7]..[1168,45619+16])
                              Some
                                expression (middle_end/closure/closure.ml[1168,45619+16]..[1168,45619+30])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/closure/closure.ml[1168,45619+17]..[1168,45619+22])
                                      Pexp_ident "ulam1" (middle_end/closure/closure.ml[1168,45619+17]..[1168,45619+22])
                                    expression (middle_end/closure/closure.ml[1168,45619+24]..[1168,45619+29])
                                      Pexp_ident "ulam2" (middle_end/closure/closure.ml[1168,45619+24]..[1168,45619+29])
                                  ]
                            expression (middle_end/closure/closure.ml[1168,45619+32]..[1168,45619+38])
                              Pexp_ident "approx" (middle_end/closure/closure.ml[1168,45619+32]..[1168,45619+38])
                          ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1169,45659+4]..[1169,45659+22])
                      Ppat_construct "Lwhile" (middle_end/closure/closure.ml[1169,45659+4]..[1169,45659+10])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1169,45659+10]..[1169,45659+22])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1169,45659+11]..[1169,45659+15])
                              Ppat_var "cond" (middle_end/closure/closure.ml[1169,45659+11]..[1169,45659+15])
                            pattern (middle_end/closure/closure.ml[1169,45659+17]..[1169,45659+21])
                              Ppat_var "body" (middle_end/closure/closure.ml[1169,45659+17]..[1169,45659+21])
                          ]
                    expression (middle_end/closure/closure.ml[1170,45685+6]..[1172,45767+43])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[1170,45685+10]..[1170,45685+20])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1170,45685+11]..[1170,45685+16])
                                Ppat_var "ucond" (middle_end/closure/closure.ml[1170,45685+11]..[1170,45685+16])
                              pattern (middle_end/closure/closure.ml[1170,45685+18]..[1170,45685+19])
                                Ppat_any
                            ]
                          expression (middle_end/closure/closure.ml[1170,45685+23]..[1170,45685+37])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1170,45685+23]..[1170,45685+28])
                              Pexp_ident "close" (middle_end/closure/closure.ml[1170,45685+23]..[1170,45685+28])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1170,45685+29]..[1170,45685+32])
                                  Pexp_ident "env" (middle_end/closure/closure.ml[1170,45685+29]..[1170,45685+32])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1170,45685+33]..[1170,45685+37])
                                  Pexp_ident "cond" (middle_end/closure/closure.ml[1170,45685+33]..[1170,45685+37])
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[1171,45726+6]..[1172,45767+43])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[1171,45726+10]..[1171,45726+20])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[1171,45726+11]..[1171,45726+16])
                                  Ppat_var "ubody" (middle_end/closure/closure.ml[1171,45726+11]..[1171,45726+16])
                                pattern (middle_end/closure/closure.ml[1171,45726+18]..[1171,45726+19])
                                  Ppat_any
                              ]
                            expression (middle_end/closure/closure.ml[1171,45726+23]..[1171,45726+37])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[1171,45726+23]..[1171,45726+28])
                                Pexp_ident "close" (middle_end/closure/closure.ml[1171,45726+23]..[1171,45726+28])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1171,45726+29]..[1171,45726+32])
                                    Pexp_ident "env" (middle_end/closure/closure.ml[1171,45726+29]..[1171,45726+32])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1171,45726+33]..[1171,45726+37])
                                    Pexp_ident "body" (middle_end/closure/closure.ml[1171,45726+33]..[1171,45726+37])
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[1172,45767+6]..[1172,45767+43])
                          Pexp_tuple
                          [
                            expression (middle_end/closure/closure.ml[1172,45767+7]..[1172,45767+27])
                              Pexp_construct "Uwhile" (middle_end/closure/closure.ml[1172,45767+7]..[1172,45767+13])
                              Some
                                expression (middle_end/closure/closure.ml[1172,45767+13]..[1172,45767+27])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/closure/closure.ml[1172,45767+14]..[1172,45767+19])
                                      Pexp_ident "ucond" (middle_end/closure/closure.ml[1172,45767+14]..[1172,45767+19])
                                    expression (middle_end/closure/closure.ml[1172,45767+21]..[1172,45767+26])
                                      Pexp_ident "ubody" (middle_end/closure/closure.ml[1172,45767+21]..[1172,45767+26])
                                  ]
                            expression (middle_end/closure/closure.ml[1172,45767+29]..[1172,45767+42])
                              Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[1172,45767+29]..[1172,45767+42])
                              None
                          ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1173,45811+4]..[1173,45811+31])
                      Ppat_construct "Lfor" (middle_end/closure/closure.ml[1173,45811+4]..[1173,45811+8])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1173,45811+8]..[1173,45811+31])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1173,45811+9]..[1173,45811+11])
                              Ppat_var "id" (middle_end/closure/closure.ml[1173,45811+9]..[1173,45811+11])
                            pattern (middle_end/closure/closure.ml[1173,45811+13]..[1173,45811+15])
                              Ppat_var "lo" (middle_end/closure/closure.ml[1173,45811+13]..[1173,45811+15])
                            pattern (middle_end/closure/closure.ml[1173,45811+17]..[1173,45811+19])
                              Ppat_var "hi" (middle_end/closure/closure.ml[1173,45811+17]..[1173,45811+19])
                            pattern (middle_end/closure/closure.ml[1173,45811+21]..[1173,45811+24])
                              Ppat_var "dir" (middle_end/closure/closure.ml[1173,45811+21]..[1173,45811+24])
                            pattern (middle_end/closure/closure.ml[1173,45811+26]..[1173,45811+30])
                              Ppat_var "body" (middle_end/closure/closure.ml[1173,45811+26]..[1173,45811+30])
                          ]
                    expression (middle_end/closure/closure.ml[1174,45846+6]..[1177,45961+63])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[1174,45846+10]..[1174,45846+18])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1174,45846+11]..[1174,45846+14])
                                Ppat_var "ulo" (middle_end/closure/closure.ml[1174,45846+11]..[1174,45846+14])
                              pattern (middle_end/closure/closure.ml[1174,45846+16]..[1174,45846+17])
                                Ppat_any
                            ]
                          expression (middle_end/closure/closure.ml[1174,45846+21]..[1174,45846+33])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1174,45846+21]..[1174,45846+26])
                              Pexp_ident "close" (middle_end/closure/closure.ml[1174,45846+21]..[1174,45846+26])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1174,45846+27]..[1174,45846+30])
                                  Pexp_ident "env" (middle_end/closure/closure.ml[1174,45846+27]..[1174,45846+30])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1174,45846+31]..[1174,45846+33])
                                  Pexp_ident "lo" (middle_end/closure/closure.ml[1174,45846+31]..[1174,45846+33])
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[1175,45883+6]..[1177,45961+63])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[1175,45883+10]..[1175,45883+18])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[1175,45883+11]..[1175,45883+14])
                                  Ppat_var "uhi" (middle_end/closure/closure.ml[1175,45883+11]..[1175,45883+14])
                                pattern (middle_end/closure/closure.ml[1175,45883+16]..[1175,45883+17])
                                  Ppat_any
                              ]
                            expression (middle_end/closure/closure.ml[1175,45883+21]..[1175,45883+33])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[1175,45883+21]..[1175,45883+26])
                                Pexp_ident "close" (middle_end/closure/closure.ml[1175,45883+21]..[1175,45883+26])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1175,45883+27]..[1175,45883+30])
                                    Pexp_ident "env" (middle_end/closure/closure.ml[1175,45883+27]..[1175,45883+30])
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1175,45883+31]..[1175,45883+33])
                                    Pexp_ident "hi" (middle_end/closure/closure.ml[1175,45883+31]..[1175,45883+33])
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[1176,45920+6]..[1177,45961+63])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[1176,45920+10]..[1176,45920+20])
                                Ppat_tuple
                                [
                                  pattern (middle_end/closure/closure.ml[1176,45920+11]..[1176,45920+16])
                                    Ppat_var "ubody" (middle_end/closure/closure.ml[1176,45920+11]..[1176,45920+16])
                                  pattern (middle_end/closure/closure.ml[1176,45920+18]..[1176,45920+19])
                                    Ppat_any
                                ]
                              expression (middle_end/closure/closure.ml[1176,45920+23]..[1176,45920+37])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1176,45920+23]..[1176,45920+28])
                                  Pexp_ident "close" (middle_end/closure/closure.ml[1176,45920+23]..[1176,45920+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1176,45920+29]..[1176,45920+32])
                                      Pexp_ident "env" (middle_end/closure/closure.ml[1176,45920+29]..[1176,45920+32])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1176,45920+33]..[1176,45920+37])
                                      Pexp_ident "body" (middle_end/closure/closure.ml[1176,45920+33]..[1176,45920+37])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[1177,45961+6]..[1177,45961+63])
                            Pexp_tuple
                            [
                              expression (middle_end/closure/closure.ml[1177,45961+7]..[1177,45961+47])
                                Pexp_construct "Ufor" (middle_end/closure/closure.ml[1177,45961+7]..[1177,45961+11])
                                Some
                                  expression (middle_end/closure/closure.ml[1177,45961+11]..[1177,45961+47])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/closure/closure.ml[1177,45961+12]..[1177,45961+24])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[1177,45961+12]..[1177,45961+21])
                                          Pexp_ident "VP.create" (middle_end/closure/closure.ml[1177,45961+12]..[1177,45961+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1177,45961+22]..[1177,45961+24])
                                              Pexp_ident "id" (middle_end/closure/closure.ml[1177,45961+22]..[1177,45961+24])
                                        ]
                                      expression (middle_end/closure/closure.ml[1177,45961+26]..[1177,45961+29])
                                        Pexp_ident "ulo" (middle_end/closure/closure.ml[1177,45961+26]..[1177,45961+29])
                                      expression (middle_end/closure/closure.ml[1177,45961+31]..[1177,45961+34])
                                        Pexp_ident "uhi" (middle_end/closure/closure.ml[1177,45961+31]..[1177,45961+34])
                                      expression (middle_end/closure/closure.ml[1177,45961+36]..[1177,45961+39])
                                        Pexp_ident "dir" (middle_end/closure/closure.ml[1177,45961+36]..[1177,45961+39])
                                      expression (middle_end/closure/closure.ml[1177,45961+41]..[1177,45961+46])
                                        Pexp_ident "ubody" (middle_end/closure/closure.ml[1177,45961+41]..[1177,45961+46])
                                    ]
                              expression (middle_end/closure/closure.ml[1177,45961+49]..[1177,45961+62])
                                Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[1177,45961+49]..[1177,45961+62])
                                None
                            ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1178,46025+4]..[1178,46025+20])
                      Ppat_construct "Lassign" (middle_end/closure/closure.ml[1178,46025+4]..[1178,46025+11])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1178,46025+11]..[1178,46025+20])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1178,46025+12]..[1178,46025+14])
                              Ppat_var "id" (middle_end/closure/closure.ml[1178,46025+12]..[1178,46025+14])
                            pattern (middle_end/closure/closure.ml[1178,46025+16]..[1178,46025+19])
                              Ppat_var "lam" (middle_end/closure/closure.ml[1178,46025+16]..[1178,46025+19])
                          ]
                    expression (middle_end/closure/closure.ml[1179,46049+6]..[1180,46088+40])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[1179,46049+10]..[1179,46049+19])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1179,46049+11]..[1179,46049+15])
                                Ppat_var "ulam" (middle_end/closure/closure.ml[1179,46049+11]..[1179,46049+15])
                              pattern (middle_end/closure/closure.ml[1179,46049+17]..[1179,46049+18])
                                Ppat_any
                            ]
                          expression (middle_end/closure/closure.ml[1179,46049+22]..[1179,46049+35])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1179,46049+22]..[1179,46049+27])
                              Pexp_ident "close" (middle_end/closure/closure.ml[1179,46049+22]..[1179,46049+27])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1179,46049+28]..[1179,46049+31])
                                  Pexp_ident "env" (middle_end/closure/closure.ml[1179,46049+28]..[1179,46049+31])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1179,46049+32]..[1179,46049+35])
                                  Pexp_ident "lam" (middle_end/closure/closure.ml[1179,46049+32]..[1179,46049+35])
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[1180,46088+6]..[1180,46088+40])
                        Pexp_tuple
                        [
                          expression (middle_end/closure/closure.ml[1180,46088+7]..[1180,46088+24])
                            Pexp_construct "Uassign" (middle_end/closure/closure.ml[1180,46088+7]..[1180,46088+14])
                            Some
                              expression (middle_end/closure/closure.ml[1180,46088+14]..[1180,46088+24])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[1180,46088+15]..[1180,46088+17])
                                    Pexp_ident "id" (middle_end/closure/closure.ml[1180,46088+15]..[1180,46088+17])
                                  expression (middle_end/closure/closure.ml[1180,46088+19]..[1180,46088+23])
                                    Pexp_ident "ulam" (middle_end/closure/closure.ml[1180,46088+19]..[1180,46088+23])
                                ]
                          expression (middle_end/closure/closure.ml[1180,46088+26]..[1180,46088+39])
                            Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[1180,46088+26]..[1180,46088+39])
                            None
                        ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1181,46129+4]..[1181,46129+18])
                      Ppat_construct "Levent" (middle_end/closure/closure.ml[1181,46129+4]..[1181,46129+10])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1181,46129+10]..[1181,46129+18])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1181,46129+11]..[1181,46129+14])
                              Ppat_var "lam" (middle_end/closure/closure.ml[1181,46129+11]..[1181,46129+14])
                            pattern (middle_end/closure/closure.ml[1181,46129+16]..[1181,46129+17])
                              Ppat_any
                          ]
                    expression (middle_end/closure/closure.ml[1182,46151+6]..[1182,46151+19])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[1182,46151+6]..[1182,46151+11])
                        Pexp_ident "close" (middle_end/closure/closure.ml[1182,46151+6]..[1182,46151+11])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[1182,46151+12]..[1182,46151+15])
                            Pexp_ident "env" (middle_end/closure/closure.ml[1182,46151+12]..[1182,46151+15])
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[1182,46151+16]..[1182,46151+19])
                            Pexp_ident "lam" (middle_end/closure/closure.ml[1182,46151+16]..[1182,46151+19])
                      ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1183,46171+4]..[1183,46171+13])
                      Ppat_construct "Lifused" (middle_end/closure/closure.ml[1183,46171+4]..[1183,46171+11])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1183,46171+12]..[1183,46171+13])
                          Ppat_any
                    expression (middle_end/closure/closure.ml[1184,46188+6]..[1184,46188+18])
                      Pexp_assert
                      expression (middle_end/closure/closure.ml[1184,46188+13]..[1184,46188+18])
                        Pexp_construct "false" (middle_end/closure/closure.ml[1184,46188+13]..[1184,46188+18])
                        None
                ]
      <def>
        pattern (middle_end/closure/closure.ml[1186,46208+4]..[1186,46208+14])
          Ppat_var "close_list" (middle_end/closure/closure.ml[1186,46208+4]..[1186,46208+14])
        expression (middle_end/closure/closure.ml[1186,46208+15]..[1190,46308+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[1186,46208+15]..[1186,46208+18])
            Ppat_var "env" (middle_end/closure/closure.ml[1186,46208+15]..[1186,46208+18])
          expression (middle_end/closure/closure.ml[1186,46208+21]..[1190,46308+32])
            Pexp_function
            [
              <case>
                pattern (middle_end/closure/closure.ml[1187,46238+4]..[1187,46238+6])
                  Ppat_construct "[]" (middle_end/closure/closure.ml[1187,46238+4]..[1187,46238+6])
                  None
                expression (middle_end/closure/closure.ml[1187,46238+10]..[1187,46238+12])
                  Pexp_construct "[]" (middle_end/closure/closure.ml[1187,46238+10]..[1187,46238+12])
                  None
              <case>
                pattern (middle_end/closure/closure.ml[1188,46251+4]..[1188,46251+14])
                  Ppat_construct "::" (middle_end/closure/closure.ml[1188,46251+8]..[1188,46251+10])
                  Some
                    []
                    pattern (middle_end/closure/closure.ml[1188,46251+4]..[1188,46251+14]) ghost
                      Ppat_tuple
                      [
                        pattern (middle_end/closure/closure.ml[1188,46251+4]..[1188,46251+7])
                          Ppat_var "lam" (middle_end/closure/closure.ml[1188,46251+4]..[1188,46251+7])
                        pattern (middle_end/closure/closure.ml[1188,46251+11]..[1188,46251+14])
                          Ppat_var "rem" (middle_end/closure/closure.ml[1188,46251+11]..[1188,46251+14])
                      ]
                expression (middle_end/closure/closure.ml[1189,46269+6]..[1190,46308+32])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/closure/closure.ml[1189,46269+10]..[1189,46269+19])
                        Ppat_tuple
                        [
                          pattern (middle_end/closure/closure.ml[1189,46269+11]..[1189,46269+15])
                            Ppat_var "ulam" (middle_end/closure/closure.ml[1189,46269+11]..[1189,46269+15])
                          pattern (middle_end/closure/closure.ml[1189,46269+17]..[1189,46269+18])
                            Ppat_any
                        ]
                      expression (middle_end/closure/closure.ml[1189,46269+22]..[1189,46269+35])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1189,46269+22]..[1189,46269+27])
                          Pexp_ident "close" (middle_end/closure/closure.ml[1189,46269+22]..[1189,46269+27])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1189,46269+28]..[1189,46269+31])
                              Pexp_ident "env" (middle_end/closure/closure.ml[1189,46269+28]..[1189,46269+31])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1189,46269+32]..[1189,46269+35])
                              Pexp_ident "lam" (middle_end/closure/closure.ml[1189,46269+32]..[1189,46269+35])
                        ]
                  ]
                  expression (middle_end/closure/closure.ml[1190,46308+6]..[1190,46308+32])
                    Pexp_construct "::" (middle_end/closure/closure.ml[1190,46308+11]..[1190,46308+13])
                    Some
                      expression (middle_end/closure/closure.ml[1190,46308+6]..[1190,46308+32]) ghost
                        Pexp_tuple
                        [
                          expression (middle_end/closure/closure.ml[1190,46308+6]..[1190,46308+10])
                            Pexp_ident "ulam" (middle_end/closure/closure.ml[1190,46308+6]..[1190,46308+10])
                          expression (middle_end/closure/closure.ml[1190,46308+14]..[1190,46308+32])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1190,46308+14]..[1190,46308+24])
                              Pexp_ident "close_list" (middle_end/closure/closure.ml[1190,46308+14]..[1190,46308+24])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1190,46308+25]..[1190,46308+28])
                                  Pexp_ident "env" (middle_end/closure/closure.ml[1190,46308+25]..[1190,46308+28])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1190,46308+29]..[1190,46308+32])
                                  Pexp_ident "rem" (middle_end/closure/closure.ml[1190,46308+29]..[1190,46308+32])
                            ]
                        ]
            ]
      <def>
        pattern (middle_end/closure/closure.ml[1192,46342+4]..[1192,46342+21])
          Ppat_var "close_list_approx" (middle_end/closure/closure.ml[1192,46342+4]..[1192,46342+21])
        expression (middle_end/closure/closure.ml[1192,46342+22]..[1197,46518+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[1192,46342+22]..[1192,46342+25])
            Ppat_var "env" (middle_end/closure/closure.ml[1192,46342+22]..[1192,46342+25])
          expression (middle_end/closure/closure.ml[1192,46342+28]..[1197,46518+40])
            Pexp_function
            [
              <case>
                pattern (middle_end/closure/closure.ml[1193,46379+4]..[1193,46379+6])
                  Ppat_construct "[]" (middle_end/closure/closure.ml[1193,46379+4]..[1193,46379+6])
                  None
                expression (middle_end/closure/closure.ml[1193,46379+10]..[1193,46379+18])
                  Pexp_tuple
                  [
                    expression (middle_end/closure/closure.ml[1193,46379+11]..[1193,46379+13])
                      Pexp_construct "[]" (middle_end/closure/closure.ml[1193,46379+11]..[1193,46379+13])
                      None
                    expression (middle_end/closure/closure.ml[1193,46379+15]..[1193,46379+17])
                      Pexp_construct "[]" (middle_end/closure/closure.ml[1193,46379+15]..[1193,46379+17])
                      None
                  ]
              <case>
                pattern (middle_end/closure/closure.ml[1194,46398+4]..[1194,46398+14])
                  Ppat_construct "::" (middle_end/closure/closure.ml[1194,46398+8]..[1194,46398+10])
                  Some
                    []
                    pattern (middle_end/closure/closure.ml[1194,46398+4]..[1194,46398+14]) ghost
                      Ppat_tuple
                      [
                        pattern (middle_end/closure/closure.ml[1194,46398+4]..[1194,46398+7])
                          Ppat_var "lam" (middle_end/closure/closure.ml[1194,46398+4]..[1194,46398+7])
                        pattern (middle_end/closure/closure.ml[1194,46398+11]..[1194,46398+14])
                          Ppat_var "rem" (middle_end/closure/closure.ml[1194,46398+11]..[1194,46398+14])
                      ]
                expression (middle_end/closure/closure.ml[1195,46416+6]..[1197,46518+40])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/closure/closure.ml[1195,46416+10]..[1195,46416+24])
                        Ppat_tuple
                        [
                          pattern (middle_end/closure/closure.ml[1195,46416+11]..[1195,46416+15])
                            Ppat_var "ulam" (middle_end/closure/closure.ml[1195,46416+11]..[1195,46416+15])
                          pattern (middle_end/closure/closure.ml[1195,46416+17]..[1195,46416+23])
                            Ppat_var "approx" (middle_end/closure/closure.ml[1195,46416+17]..[1195,46416+23])
                        ]
                      expression (middle_end/closure/closure.ml[1195,46416+27]..[1195,46416+40])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1195,46416+27]..[1195,46416+32])
                          Pexp_ident "close" (middle_end/closure/closure.ml[1195,46416+27]..[1195,46416+32])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1195,46416+33]..[1195,46416+36])
                              Pexp_ident "env" (middle_end/closure/closure.ml[1195,46416+33]..[1195,46416+36])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1195,46416+37]..[1195,46416+40])
                              Pexp_ident "lam" (middle_end/closure/closure.ml[1195,46416+37]..[1195,46416+40])
                        ]
                  ]
                  expression (middle_end/closure/closure.ml[1196,46460+6]..[1197,46518+40])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/closure/closure.ml[1196,46460+10]..[1196,46460+26])
                          Ppat_tuple
                          [
                            pattern (middle_end/closure/closure.ml[1196,46460+11]..[1196,46460+16])
                              Ppat_var "ulams" (middle_end/closure/closure.ml[1196,46460+11]..[1196,46460+16])
                            pattern (middle_end/closure/closure.ml[1196,46460+18]..[1196,46460+25])
                              Ppat_var "approxs" (middle_end/closure/closure.ml[1196,46460+18]..[1196,46460+25])
                          ]
                        expression (middle_end/closure/closure.ml[1196,46460+29]..[1196,46460+54])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1196,46460+29]..[1196,46460+46])
                            Pexp_ident "close_list_approx" (middle_end/closure/closure.ml[1196,46460+29]..[1196,46460+46])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1196,46460+47]..[1196,46460+50])
                                Pexp_ident "env" (middle_end/closure/closure.ml[1196,46460+47]..[1196,46460+50])
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1196,46460+51]..[1196,46460+54])
                                Pexp_ident "rem" (middle_end/closure/closure.ml[1196,46460+51]..[1196,46460+54])
                          ]
                    ]
                    expression (middle_end/closure/closure.ml[1197,46518+6]..[1197,46518+40])
                      Pexp_tuple
                      [
                        expression (middle_end/closure/closure.ml[1197,46518+7]..[1197,46518+20])
                          Pexp_construct "::" (middle_end/closure/closure.ml[1197,46518+12]..[1197,46518+14])
                          Some
                            expression (middle_end/closure/closure.ml[1197,46518+7]..[1197,46518+20]) ghost
                              Pexp_tuple
                              [
                                expression (middle_end/closure/closure.ml[1197,46518+7]..[1197,46518+11])
                                  Pexp_ident "ulam" (middle_end/closure/closure.ml[1197,46518+7]..[1197,46518+11])
                                expression (middle_end/closure/closure.ml[1197,46518+15]..[1197,46518+20])
                                  Pexp_ident "ulams" (middle_end/closure/closure.ml[1197,46518+15]..[1197,46518+20])
                              ]
                        expression (middle_end/closure/closure.ml[1197,46518+22]..[1197,46518+39])
                          Pexp_construct "::" (middle_end/closure/closure.ml[1197,46518+29]..[1197,46518+31])
                          Some
                            expression (middle_end/closure/closure.ml[1197,46518+22]..[1197,46518+39]) ghost
                              Pexp_tuple
                              [
                                expression (middle_end/closure/closure.ml[1197,46518+22]..[1197,46518+28])
                                  Pexp_ident "approx" (middle_end/closure/closure.ml[1197,46518+22]..[1197,46518+28])
                                expression (middle_end/closure/closure.ml[1197,46518+32]..[1197,46518+39])
                                  Pexp_ident "approxs" (middle_end/closure/closure.ml[1197,46518+32]..[1197,46518+39])
                              ]
                      ]
            ]
      <def>
        pattern (middle_end/closure/closure.ml[1199,46560+4]..[1199,46560+15])
          Ppat_var "close_named" (middle_end/closure/closure.ml[1199,46560+4]..[1199,46560+15])
        expression (middle_end/closure/closure.ml[1199,46560+16]..[1203,46671+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[1199,46560+16]..[1199,46560+19])
            Ppat_var "env" (middle_end/closure/closure.ml[1199,46560+16]..[1199,46560+19])
          expression (middle_end/closure/closure.ml[1199,46560+20]..[1203,46671+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[1199,46560+20]..[1199,46560+22])
              Ppat_var "id" (middle_end/closure/closure.ml[1199,46560+20]..[1199,46560+22])
            expression (middle_end/closure/closure.ml[1199,46560+25]..[1203,46671+19])
              Pexp_function
              [
                <case>
                  pattern (middle_end/closure/closure.ml[1200,46594+4]..[1200,46594+24])
                    Ppat_alias "funct" (middle_end/closure/closure.ml[1200,46594+19]..[1200,46594+24])
                    pattern (middle_end/closure/closure.ml[1200,46594+4]..[1200,46594+15])
                      Ppat_construct "Lfunction" (middle_end/closure/closure.ml[1200,46594+4]..[1200,46594+13])
                      Some
                        []
                        pattern (middle_end/closure/closure.ml[1200,46594+14]..[1200,46594+15])
                          Ppat_any
                  expression (middle_end/closure/closure.ml[1201,46622+6]..[1201,46622+37])
                    Pexp_apply
                    expression (middle_end/closure/closure.ml[1201,46622+6]..[1201,46622+24])
                      Pexp_ident "close_one_function" (middle_end/closure/closure.ml[1201,46622+6]..[1201,46622+24])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[1201,46622+25]..[1201,46622+28])
                          Pexp_ident "env" (middle_end/closure/closure.ml[1201,46622+25]..[1201,46622+28])
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[1201,46622+29]..[1201,46622+31])
                          Pexp_ident "id" (middle_end/closure/closure.ml[1201,46622+29]..[1201,46622+31])
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[1201,46622+32]..[1201,46622+37])
                          Pexp_ident "funct" (middle_end/closure/closure.ml[1201,46622+32]..[1201,46622+37])
                    ]
                <case>
                  pattern (middle_end/closure/closure.ml[1202,46660+4]..[1202,46660+7])
                    Ppat_var "lam" (middle_end/closure/closure.ml[1202,46660+4]..[1202,46660+7])
                  expression (middle_end/closure/closure.ml[1203,46671+6]..[1203,46671+19])
                    Pexp_apply
                    expression (middle_end/closure/closure.ml[1203,46671+6]..[1203,46671+11])
                      Pexp_ident "close" (middle_end/closure/closure.ml[1203,46671+6]..[1203,46671+11])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[1203,46671+12]..[1203,46671+15])
                          Pexp_ident "env" (middle_end/closure/closure.ml[1203,46671+12]..[1203,46671+15])
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[1203,46671+16]..[1203,46671+19])
                          Pexp_ident "lam" (middle_end/closure/closure.ml[1203,46671+16]..[1203,46671+19])
                    ]
              ]
      <def>
        pattern (middle_end/closure/closure.ml[1207,46764+4]..[1207,46764+19])
          Ppat_var "close_functions" (middle_end/closure/closure.ml[1207,46764+4]..[1207,46764+19])
        expression (middle_end/closure/closure.ml[1207,46764+20]..[1353,52468+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[1207,46764+20]..[1207,46764+57])
            Ppat_record Closed
            [
              "backend" (middle_end/closure/closure.ml[1207,46764+22]..[1207,46764+29]) ghost
                pattern (middle_end/closure/closure.ml[1207,46764+22]..[1207,46764+29])
                  Ppat_var "backend" (middle_end/closure/closure.ml[1207,46764+22]..[1207,46764+29])
              "fenv" (middle_end/closure/closure.ml[1207,46764+31]..[1207,46764+35]) ghost
                pattern (middle_end/closure/closure.ml[1207,46764+31]..[1207,46764+35])
                  Ppat_var "fenv" (middle_end/closure/closure.ml[1207,46764+31]..[1207,46764+35])
              "cenv" (middle_end/closure/closure.ml[1207,46764+37]..[1207,46764+41]) ghost
                pattern (middle_end/closure/closure.ml[1207,46764+37]..[1207,46764+41])
                  Ppat_var "cenv" (middle_end/closure/closure.ml[1207,46764+37]..[1207,46764+41])
              "mutable_vars" (middle_end/closure/closure.ml[1207,46764+43]..[1207,46764+55]) ghost
                pattern (middle_end/closure/closure.ml[1207,46764+43]..[1207,46764+55])
                  Ppat_var "mutable_vars" (middle_end/closure/closure.ml[1207,46764+43]..[1207,46764+55])
            ]
          expression (middle_end/closure/closure.ml[1207,46764+58]..[1353,52468+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[1207,46764+58]..[1207,46764+66])
              Ppat_var "fun_defs" (middle_end/closure/closure.ml[1207,46764+58]..[1207,46764+66])
            expression (middle_end/closure/closure.ml[1208,46833+2]..[1353,52468+9])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/closure/closure.ml[1208,46833+6]..[1208,46833+14])
                    Ppat_var "fun_defs" (middle_end/closure/closure.ml[1208,46833+6]..[1208,46833+14])
                  expression (middle_end/closure/closure.ml[1209,46850+4]..[1217,47120+18])
                    Pexp_apply
                    expression (middle_end/closure/closure.ml[1209,46850+4]..[1209,46850+16])
                      Pexp_ident "List.flatten" (middle_end/closure/closure.ml[1209,46850+4]..[1209,46850+16])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[1210,46867+6]..[1217,47120+18])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1210,46867+7]..[1210,46867+15])
                            Pexp_ident "List.map" (middle_end/closure/closure.ml[1210,46867+7]..[1210,46867+15])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1211,46883+9]..[1216,47109+10])
                                Pexp_function
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[1212,46902+13]..[1212,46902+67])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/closure/closure.ml[1212,46902+14]..[1212,46902+16])
                                          Ppat_var "id" (middle_end/closure/closure.ml[1212,46902+14]..[1212,46902+16])
                                        pattern (middle_end/closure/closure.ml[1212,46902+18]..[1212,46902+66])
                                          Ppat_construct "Lfunction" (middle_end/closure/closure.ml[1212,46902+18]..[1212,46902+27])
                                          Some
                                            []
                                            pattern (middle_end/closure/closure.ml[1212,46902+27]..[1212,46902+66])
                                              Ppat_record Closed
                                              [
                                                "kind" (middle_end/closure/closure.ml[1212,46902+28]..[1212,46902+32]) ghost
                                                  pattern (middle_end/closure/closure.ml[1212,46902+28]..[1212,46902+32])
                                                    Ppat_var "kind" (middle_end/closure/closure.ml[1212,46902+28]..[1212,46902+32])
                                                "params" (middle_end/closure/closure.ml[1212,46902+34]..[1212,46902+40]) ghost
                                                  pattern (middle_end/closure/closure.ml[1212,46902+34]..[1212,46902+40])
                                                    Ppat_var "params" (middle_end/closure/closure.ml[1212,46902+34]..[1212,46902+40])
                                                "return" (middle_end/closure/closure.ml[1212,46902+42]..[1212,46902+48]) ghost
                                                  pattern (middle_end/closure/closure.ml[1212,46902+42]..[1212,46902+48])
                                                    Ppat_var "return" (middle_end/closure/closure.ml[1212,46902+42]..[1212,46902+48])
                                                "body" (middle_end/closure/closure.ml[1212,46902+50]..[1212,46902+54]) ghost
                                                  pattern (middle_end/closure/closure.ml[1212,46902+50]..[1212,46902+54])
                                                    Ppat_var "body" (middle_end/closure/closure.ml[1212,46902+50]..[1212,46902+54])
                                                "attr" (middle_end/closure/closure.ml[1212,46902+56]..[1212,46902+60]) ghost
                                                  pattern (middle_end/closure/closure.ml[1212,46902+56]..[1212,46902+60])
                                                    Ppat_var "attr" (middle_end/closure/closure.ml[1212,46902+56]..[1212,46902+60])
                                                "loc" (middle_end/closure/closure.ml[1212,46902+62]..[1212,46902+65]) ghost
                                                  pattern (middle_end/closure/closure.ml[1212,46902+62]..[1212,46902+65])
                                                    Ppat_var "loc" (middle_end/closure/closure.ml[1212,46902+62]..[1212,46902+65])
                                              ]
                                      ]
                                    expression (middle_end/closure/closure.ml[1213,46973+15]..[1214,47036+41])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[1213,46973+15]..[1213,46973+44])
                                        Pexp_ident "Simplif.split_default_wrapper" (middle_end/closure/closure.ml[1213,46973+15]..[1213,46973+44])
                                      [
                                        <arg>
                                        Labelled "id"
                                          expression (middle_end/closure/closure.ml[1213,46973+46]..[1213,46973+48])
                                            Pexp_ident "id" (middle_end/closure/closure.ml[1213,46973+46]..[1213,46973+48])
                                        <arg>
                                        Labelled "kind"
                                          expression (middle_end/closure/closure.ml[1213,46973+50]..[1213,46973+54])
                                            Pexp_ident "kind" (middle_end/closure/closure.ml[1213,46973+50]..[1213,46973+54])
                                        <arg>
                                        Labelled "params"
                                          expression (middle_end/closure/closure.ml[1213,46973+56]..[1213,46973+62])
                                            Pexp_ident "params" (middle_end/closure/closure.ml[1213,46973+56]..[1213,46973+62])
                                        <arg>
                                        Labelled "body"
                                          expression (middle_end/closure/closure.ml[1214,47036+18]..[1214,47036+22])
                                            Pexp_ident "body" (middle_end/closure/closure.ml[1214,47036+18]..[1214,47036+22])
                                        <arg>
                                        Labelled "attr"
                                          expression (middle_end/closure/closure.ml[1214,47036+24]..[1214,47036+28])
                                            Pexp_ident "attr" (middle_end/closure/closure.ml[1214,47036+24]..[1214,47036+28])
                                        <arg>
                                        Labelled "loc"
                                          expression (middle_end/closure/closure.ml[1214,47036+30]..[1214,47036+33])
                                            Pexp_ident "loc" (middle_end/closure/closure.ml[1214,47036+30]..[1214,47036+33])
                                        <arg>
                                        Labelled "return"
                                          expression (middle_end/closure/closure.ml[1214,47036+35]..[1214,47036+41])
                                            Pexp_ident "return" (middle_end/closure/closure.ml[1214,47036+35]..[1214,47036+41])
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[1215,47078+13]..[1215,47078+14])
                                      Ppat_any
                                    expression (middle_end/closure/closure.ml[1215,47078+18]..[1215,47078+30])
                                      Pexp_assert
                                      expression (middle_end/closure/closure.ml[1215,47078+25]..[1215,47078+30])
                                        Pexp_construct "false" (middle_end/closure/closure.ml[1215,47078+25]..[1215,47078+30])
                                        None
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1217,47120+9]..[1217,47120+17])
                                Pexp_ident "fun_defs" (middle_end/closure/closure.ml[1217,47120+9]..[1217,47120+17])
                          ]
                    ]
              ]
              expression (middle_end/closure/closure.ml[1219,47144+2]..[1353,52468+9])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (middle_end/closure/closure.ml[1219,47144+6]..[1219,47144+22])
                      Ppat_var "inline_attribute" (middle_end/closure/closure.ml[1219,47144+6]..[1219,47144+22])
                    expression (middle_end/closure/closure.ml[1219,47144+25]..[1221,47240+25])
                      Pexp_match
                      expression (middle_end/closure/closure.ml[1219,47144+31]..[1219,47144+39])
                        Pexp_ident "fun_defs" (middle_end/closure/closure.ml[1219,47144+31]..[1219,47144+39])
                      [
                        <case>
                          pattern (middle_end/closure/closure.ml[1220,47189+6]..[1220,47189+40])
                            Ppat_construct "::" (middle_end/closure/closure.ml[1220,47189+7]..[1220,47189+40]) ghost
                            Some
                              []
                              pattern (middle_end/closure/closure.ml[1220,47189+7]..[1220,47189+40]) ghost
                                Ppat_tuple
                                [
                                  pattern (middle_end/closure/closure.ml[1220,47189+7]..[1220,47189+39])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[1220,47189+7]..[1220,47189+8])
                                        Ppat_any
                                      pattern (middle_end/closure/closure.ml[1220,47189+10]..[1220,47189+39])
                                        Ppat_construct "Lfunction" (middle_end/closure/closure.ml[1220,47189+10]..[1220,47189+19])
                                        Some
                                          []
                                          pattern (middle_end/closure/closure.ml[1220,47189+19]..[1220,47189+39])
                                            Ppat_record Closed
                                            [
                                              "attr" (middle_end/closure/closure.ml[1220,47189+20]..[1220,47189+24])
                                                pattern (middle_end/closure/closure.ml[1220,47189+27]..[1220,47189+38])
                                                  Ppat_record Closed
                                                  [
                                                    "inline" (middle_end/closure/closure.ml[1220,47189+29]..[1220,47189+35]) ghost
                                                      pattern (middle_end/closure/closure.ml[1220,47189+29]..[1220,47189+35])
                                                        Ppat_var "inline" (middle_end/closure/closure.ml[1220,47189+29]..[1220,47189+35])
                                                  ]
                                            ]
                                    ]
                                  pattern (middle_end/closure/closure.ml[1220,47189+39]..[1220,47189+40]) ghost
                                    Ppat_construct "[]" (middle_end/closure/closure.ml[1220,47189+39]..[1220,47189+40]) ghost
                                    None
                                ]
                          expression (middle_end/closure/closure.ml[1220,47189+44]..[1220,47189+50])
                            Pexp_ident "inline" (middle_end/closure/closure.ml[1220,47189+44]..[1220,47189+50])
                        <case>
                          pattern (middle_end/closure/closure.ml[1221,47240+6]..[1221,47240+7])
                            Ppat_any
                          expression (middle_end/closure/closure.ml[1221,47240+11]..[1221,47240+25])
                            Pexp_construct "Default_inline" (middle_end/closure/closure.ml[1221,47240+11]..[1221,47240+25])
                            None
                      ]
                ]
                expression (middle_end/closure/closure.ml[1224,47353+2]..[1353,52468+9])
                  Pexp_sequence
                  expression (middle_end/closure/closure.ml[1224,47353+2]..[1224,47353+29])
                    Pexp_apply
                    expression (middle_end/closure/closure.ml[1224,47353+2]..[1224,47353+6])
                      Pexp_ident "incr" (middle_end/closure/closure.ml[1224,47353+2]..[1224,47353+6])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/closure/closure.ml[1224,47353+7]..[1224,47353+29])
                          Pexp_ident "function_nesting_depth" (middle_end/closure/closure.ml[1224,47353+7]..[1224,47353+29])
                    ]
                  expression (middle_end/closure/closure.ml[1225,47384+2]..[1353,52468+9])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/closure/closure.ml[1225,47384+6]..[1225,47384+22])
                          Ppat_var "initially_closed" (middle_end/closure/closure.ml[1225,47384+6]..[1225,47384+22])
                        expression (middle_end/closure/closure.ml[1226,47409+4]..[1226,47409+62])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1226,47409+28]..[1226,47409+29])
                            Pexp_ident "<" (middle_end/closure/closure.ml[1226,47409+28]..[1226,47409+29])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1226,47409+4]..[1226,47409+27])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1226,47409+4]..[1226,47409+5])
                                  Pexp_ident "!" (middle_end/closure/closure.ml[1226,47409+4]..[1226,47409+5])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1226,47409+5]..[1226,47409+27])
                                      Pexp_ident "function_nesting_depth" (middle_end/closure/closure.ml[1226,47409+5]..[1226,47409+27])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1226,47409+30]..[1226,47409+62])
                                Pexp_ident "excessive_function_nesting_depth" (middle_end/closure/closure.ml[1226,47409+30]..[1226,47409+62])
                          ]
                    ]
                    expression (middle_end/closure/closure.ml[1228,47529+2]..[1353,52468+9])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/closure/closure.ml[1228,47529+6]..[1228,47529+8])
                            Ppat_var "fv" (middle_end/closure/closure.ml[1228,47529+6]..[1228,47529+8])
                          expression (middle_end/closure/closure.ml[1229,47540+4]..[1229,47540+68])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1229,47540+4]..[1229,47540+18])
                              Pexp_ident "V.Set.elements" (middle_end/closure/closure.ml[1229,47540+4]..[1229,47540+18])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1229,47540+19]..[1229,47540+68])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1229,47540+20]..[1229,47540+34])
                                    Pexp_ident "free_variables" (middle_end/closure/closure.ml[1229,47540+20]..[1229,47540+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1229,47540+35]..[1229,47540+67])
                                        Pexp_construct "Lletrec" (middle_end/closure/closure.ml[1229,47540+36]..[1229,47540+43])
                                        Some
                                          expression (middle_end/closure/closure.ml[1229,47540+43]..[1229,47540+66])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/closure/closure.ml[1229,47540+44]..[1229,47540+52])
                                                Pexp_ident "fun_defs" (middle_end/closure/closure.ml[1229,47540+44]..[1229,47540+52])
                                              expression (middle_end/closure/closure.ml[1229,47540+54]..[1229,47540+65])
                                                Pexp_ident "lambda_unit" (middle_end/closure/closure.ml[1229,47540+54]..[1229,47540+65])
                                            ]
                                  ]
                            ]
                      ]
                      expression (middle_end/closure/closure.ml[1233,47757+2]..[1353,52468+9])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[1233,47757+6]..[1233,47757+20])
                              Ppat_var "uncurried_defs" (middle_end/closure/closure.ml[1233,47757+6]..[1233,47757+20])
                            expression (middle_end/closure/closure.ml[1234,47780+4]..[1248,48436+14])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[1234,47780+4]..[1234,47780+12])
                                Pexp_ident "List.map" (middle_end/closure/closure.ml[1234,47780+4]..[1234,47780+12])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1235,47793+6]..[1247,48377+58])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (middle_end/closure/closure.ml[1236,47809+10]..[1236,47809+58])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[1236,47809+11]..[1236,47809+13])
                                              Ppat_var "id" (middle_end/closure/closure.ml[1236,47809+11]..[1236,47809+13])
                                            pattern (middle_end/closure/closure.ml[1236,47809+15]..[1236,47809+57])
                                              Ppat_construct "Lfunction" (middle_end/closure/closure.ml[1236,47809+15]..[1236,47809+24])
                                              Some
                                                []
                                                pattern (middle_end/closure/closure.ml[1236,47809+24]..[1236,47809+57])
                                                  Ppat_record Closed
                                                  [
                                                    "kind" (middle_end/closure/closure.ml[1236,47809+25]..[1236,47809+29]) ghost
                                                      pattern (middle_end/closure/closure.ml[1236,47809+25]..[1236,47809+29])
                                                        Ppat_var "kind" (middle_end/closure/closure.ml[1236,47809+25]..[1236,47809+29])
                                                    "params" (middle_end/closure/closure.ml[1236,47809+31]..[1236,47809+37]) ghost
                                                      pattern (middle_end/closure/closure.ml[1236,47809+31]..[1236,47809+37])
                                                        Ppat_var "params" (middle_end/closure/closure.ml[1236,47809+31]..[1236,47809+37])
                                                    "return" (middle_end/closure/closure.ml[1236,47809+39]..[1236,47809+45]) ghost
                                                      pattern (middle_end/closure/closure.ml[1236,47809+39]..[1236,47809+45])
                                                        Ppat_var "return" (middle_end/closure/closure.ml[1236,47809+39]..[1236,47809+45])
                                                    "body" (middle_end/closure/closure.ml[1236,47809+47]..[1236,47809+51]) ghost
                                                      pattern (middle_end/closure/closure.ml[1236,47809+47]..[1236,47809+51])
                                                        Ppat_var "body" (middle_end/closure/closure.ml[1236,47809+47]..[1236,47809+51])
                                                    "loc" (middle_end/closure/closure.ml[1236,47809+53]..[1236,47809+56]) ghost
                                                      pattern (middle_end/closure/closure.ml[1236,47809+53]..[1236,47809+56])
                                                        Ppat_var "loc" (middle_end/closure/closure.ml[1236,47809+53]..[1236,47809+56])
                                                  ]
                                          ]
                                        expression (middle_end/closure/closure.ml[1237,47871+12]..[1246,48324+52])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/closure/closure.ml[1237,47871+16]..[1237,47871+21])
                                                Ppat_var "label" (middle_end/closure/closure.ml[1237,47871+16]..[1237,47871+21])
                                              expression (middle_end/closure/closure.ml[1237,47871+24]..[1237,47871+71])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[1237,47871+24]..[1237,47871+45])
                                                  Pexp_ident "Compilenv.make_symbol" (middle_end/closure/closure.ml[1237,47871+24]..[1237,47871+45])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[1237,47871+46]..[1237,47871+71])
                                                      Pexp_construct "Some" (middle_end/closure/closure.ml[1237,47871+47]..[1237,47871+51])
                                                      Some
                                                        expression (middle_end/closure/closure.ml[1237,47871+52]..[1237,47871+70])
                                                          Pexp_apply
                                                          expression (middle_end/closure/closure.ml[1237,47871+53]..[1237,47871+66])
                                                            Pexp_ident "V.unique_name" (middle_end/closure/closure.ml[1237,47871+53]..[1237,47871+66])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[1237,47871+67]..[1237,47871+69])
                                                                Pexp_ident "id" (middle_end/closure/closure.ml[1237,47871+67]..[1237,47871+69])
                                                          ]
                                                ]
                                          ]
                                          expression (middle_end/closure/closure.ml[1238,47946+12]..[1246,48324+52])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/closure/closure.ml[1238,47946+16]..[1238,47946+21])
                                                  Ppat_var "arity" (middle_end/closure/closure.ml[1238,47946+16]..[1238,47946+21])
                                                expression (middle_end/closure/closure.ml[1238,47946+24]..[1238,47946+42])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[1238,47946+24]..[1238,47946+35])
                                                    Pexp_ident "List.length" (middle_end/closure/closure.ml[1238,47946+24]..[1238,47946+35])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[1238,47946+36]..[1238,47946+42])
                                                        Pexp_ident "params" (middle_end/closure/closure.ml[1238,47946+36]..[1238,47946+42])
                                                  ]
                                            ]
                                            expression (middle_end/closure/closure.ml[1239,47992+12]..[1246,48324+52])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/closure/closure.ml[1239,47992+16]..[1239,47992+23])
                                                    Ppat_var "fundesc" (middle_end/closure/closure.ml[1239,47992+16]..[1239,47992+23])
                                                  expression (middle_end/closure/closure.ml[1240,48018+14]..[1244,48202+65])
                                                    Pexp_record
                                                    [
                                                      "fun_label" (middle_end/closure/closure.ml[1240,48018+15]..[1240,48018+24])
                                                        expression (middle_end/closure/closure.ml[1240,48018+27]..[1240,48018+32])
                                                          Pexp_ident "label" (middle_end/closure/closure.ml[1240,48018+27]..[1240,48018+32])
                                                      "fun_arity" (middle_end/closure/closure.ml[1241,48052+15]..[1241,48052+24])
                                                        expression (middle_end/closure/closure.ml[1241,48052+27]..[1241,48052+68])
                                                          Pexp_ifthenelse
                                                          expression (middle_end/closure/closure.ml[1241,48052+31]..[1241,48052+44])
                                                            Pexp_apply
                                                            expression (middle_end/closure/closure.ml[1241,48052+36]..[1241,48052+37])
                                                              Pexp_ident "=" (middle_end/closure/closure.ml[1241,48052+36]..[1241,48052+37])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/closure/closure.ml[1241,48052+31]..[1241,48052+35])
                                                                  Pexp_ident "kind" (middle_end/closure/closure.ml[1241,48052+31]..[1241,48052+35])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/closure/closure.ml[1241,48052+38]..[1241,48052+44])
                                                                  Pexp_construct "Tupled" (middle_end/closure/closure.ml[1241,48052+38]..[1241,48052+44])
                                                                  None
                                                            ]
                                                          expression (middle_end/closure/closure.ml[1241,48052+50]..[1241,48052+56])
                                                            Pexp_apply
                                                            expression (middle_end/closure/closure.ml[1241,48052+50]..[1241,48052+51])
                                                              Pexp_ident "~-" (middle_end/closure/closure.ml[1241,48052+50]..[1241,48052+51])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/closure/closure.ml[1241,48052+51]..[1241,48052+56])
                                                                  Pexp_ident "arity" (middle_end/closure/closure.ml[1241,48052+51]..[1241,48052+56])
                                                            ]
                                                          Some
                                                            expression (middle_end/closure/closure.ml[1241,48052+62]..[1241,48052+67])
                                                              Pexp_ident "arity" (middle_end/closure/closure.ml[1241,48052+62]..[1241,48052+67])
                                                      "fun_closed" (middle_end/closure/closure.ml[1242,48122+15]..[1242,48122+25])
                                                        expression (middle_end/closure/closure.ml[1242,48122+28]..[1242,48122+44])
                                                          Pexp_ident "initially_closed" (middle_end/closure/closure.ml[1242,48122+28]..[1242,48122+44])
                                                      "fun_inline" (middle_end/closure/closure.ml[1243,48168+15]..[1243,48168+25])
                                                        expression (middle_end/closure/closure.ml[1243,48168+28]..[1243,48168+32])
                                                          Pexp_construct "None" (middle_end/closure/closure.ml[1243,48168+28]..[1243,48168+32])
                                                          None
                                                      "fun_float_const_prop" (middle_end/closure/closure.ml[1244,48202+15]..[1244,48202+35])
                                                        expression (middle_end/closure/closure.ml[1244,48202+38]..[1244,48202+63])
                                                          Pexp_apply
                                                          expression (middle_end/closure/closure.ml[1244,48202+38]..[1244,48202+39])
                                                            Pexp_ident "!" (middle_end/closure/closure.ml[1244,48202+38]..[1244,48202+39])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[1244,48202+39]..[1244,48202+63])
                                                                Pexp_ident "Clflags.float_const_prop" (middle_end/closure/closure.ml[1244,48202+39]..[1244,48202+63])
                                                          ]
                                                    ]
                                                    None
                                              ]
                                              expression (middle_end/closure/closure.ml[1245,48271+12]..[1246,48324+52])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/closure/closure.ml[1245,48271+16]..[1245,48271+19])
                                                      Ppat_var "dbg" (middle_end/closure/closure.ml[1245,48271+16]..[1245,48271+19])
                                                    expression (middle_end/closure/closure.ml[1245,48271+22]..[1245,48271+49])
                                                      Pexp_apply
                                                      expression (middle_end/closure/closure.ml[1245,48271+22]..[1245,48271+45])
                                                        Pexp_ident "Debuginfo.from_location" (middle_end/closure/closure.ml[1245,48271+22]..[1245,48271+45])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/closure/closure.ml[1245,48271+46]..[1245,48271+49])
                                                            Pexp_ident "loc" (middle_end/closure/closure.ml[1245,48271+46]..[1245,48271+49])
                                                      ]
                                                ]
                                                expression (middle_end/closure/closure.ml[1246,48324+12]..[1246,48324+52])
                                                  Pexp_tuple
                                                  [
                                                    expression (middle_end/closure/closure.ml[1246,48324+13]..[1246,48324+15])
                                                      Pexp_ident "id" (middle_end/closure/closure.ml[1246,48324+13]..[1246,48324+15])
                                                    expression (middle_end/closure/closure.ml[1246,48324+17]..[1246,48324+23])
                                                      Pexp_ident "params" (middle_end/closure/closure.ml[1246,48324+17]..[1246,48324+23])
                                                    expression (middle_end/closure/closure.ml[1246,48324+25]..[1246,48324+31])
                                                      Pexp_ident "return" (middle_end/closure/closure.ml[1246,48324+25]..[1246,48324+31])
                                                    expression (middle_end/closure/closure.ml[1246,48324+33]..[1246,48324+37])
                                                      Pexp_ident "body" (middle_end/closure/closure.ml[1246,48324+33]..[1246,48324+37])
                                                    expression (middle_end/closure/closure.ml[1246,48324+39]..[1246,48324+46])
                                                      Pexp_ident "fundesc" (middle_end/closure/closure.ml[1246,48324+39]..[1246,48324+46])
                                                    expression (middle_end/closure/closure.ml[1246,48324+48]..[1246,48324+51])
                                                      Pexp_ident "dbg" (middle_end/closure/closure.ml[1246,48324+48]..[1246,48324+51])
                                                  ]
                                      <case>
                                        pattern (middle_end/closure/closure.ml[1247,48377+10]..[1247,48377+16])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/closure/closure.ml[1247,48377+11]..[1247,48377+12])
                                              Ppat_any
                                            pattern (middle_end/closure/closure.ml[1247,48377+14]..[1247,48377+15])
                                              Ppat_any
                                          ]
                                        expression (middle_end/closure/closure.ml[1247,48377+20]..[1247,48377+57])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[1247,48377+20]..[1247,48377+31])
                                            Pexp_ident "fatal_error" (middle_end/closure/closure.ml[1247,48377+20]..[1247,48377+31])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[1247,48377+32]..[1247,48377+57])
                                                Pexp_constant PConst_string("Closure.close_functions",(middle_end/closure/closure.ml[1247,48377+33]..[1247,48377+56]),None)
                                          ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1248,48436+6]..[1248,48436+14])
                                    Pexp_ident "fun_defs" (middle_end/closure/closure.ml[1248,48436+6]..[1248,48436+14])
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[1250,48516+2]..[1353,52468+9])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[1250,48516+6]..[1250,48516+14])
                                Ppat_var "fenv_rec" (middle_end/closure/closure.ml[1250,48516+6]..[1250,48516+14])
                              expression (middle_end/closure/closure.ml[1251,48533+4]..[1254,48684+25])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1251,48533+4]..[1251,48533+19])
                                  Pexp_ident "List.fold_right" (middle_end/closure/closure.ml[1251,48533+4]..[1251,48533+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1252,48553+6]..[1253,48617+66])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/closure/closure.ml[1252,48553+11]..[1252,48553+55])
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/closure/closure.ml[1252,48553+12]..[1252,48553+14])
                                            Ppat_var "id" (middle_end/closure/closure.ml[1252,48553+12]..[1252,48553+14])
                                          pattern (middle_end/closure/closure.ml[1252,48553+16]..[1252,48553+23])
                                            Ppat_var "_params" (middle_end/closure/closure.ml[1252,48553+16]..[1252,48553+23])
                                          pattern (middle_end/closure/closure.ml[1252,48553+25]..[1252,48553+32])
                                            Ppat_var "_return" (middle_end/closure/closure.ml[1252,48553+25]..[1252,48553+32])
                                          pattern (middle_end/closure/closure.ml[1252,48553+34]..[1252,48553+39])
                                            Ppat_var "_body" (middle_end/closure/closure.ml[1252,48553+34]..[1252,48553+39])
                                          pattern (middle_end/closure/closure.ml[1252,48553+41]..[1252,48553+48])
                                            Ppat_var "fundesc" (middle_end/closure/closure.ml[1252,48553+41]..[1252,48553+48])
                                          pattern (middle_end/closure/closure.ml[1252,48553+50]..[1252,48553+54])
                                            Ppat_var "_dbg" (middle_end/closure/closure.ml[1252,48553+50]..[1252,48553+54])
                                        ]
                                      expression (middle_end/closure/closure.ml[1252,48553+56]..[1253,48617+65]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/closure/closure.ml[1252,48553+56]..[1252,48553+60])
                                          Ppat_var "fenv" (middle_end/closure/closure.ml[1252,48553+56]..[1252,48553+60])
                                        expression (middle_end/closure/closure.ml[1253,48617+8]..[1253,48617+65])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[1253,48617+8]..[1253,48617+17])
                                            Pexp_ident "V.Map.add" (middle_end/closure/closure.ml[1253,48617+8]..[1253,48617+17])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[1253,48617+18]..[1253,48617+20])
                                                Pexp_ident "id" (middle_end/closure/closure.ml[1253,48617+18]..[1253,48617+20])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[1253,48617+21]..[1253,48617+60])
                                                Pexp_construct "Value_closure" (middle_end/closure/closure.ml[1253,48617+22]..[1253,48617+35])
                                                Some
                                                  expression (middle_end/closure/closure.ml[1253,48617+35]..[1253,48617+59])
                                                    Pexp_tuple
                                                    [
                                                      expression (middle_end/closure/closure.ml[1253,48617+36]..[1253,48617+43])
                                                        Pexp_ident "fundesc" (middle_end/closure/closure.ml[1253,48617+36]..[1253,48617+43])
                                                      expression (middle_end/closure/closure.ml[1253,48617+45]..[1253,48617+58])
                                                        Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[1253,48617+45]..[1253,48617+58])
                                                        None
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[1253,48617+61]..[1253,48617+65])
                                                Pexp_ident "fenv" (middle_end/closure/closure.ml[1253,48617+61]..[1253,48617+65])
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1254,48684+6]..[1254,48684+20])
                                      Pexp_ident "uncurried_defs" (middle_end/closure/closure.ml[1254,48684+6]..[1254,48684+20])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1254,48684+21]..[1254,48684+25])
                                      Pexp_ident "fenv" (middle_end/closure/closure.ml[1254,48684+21]..[1254,48684+25])
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[1256,48790+2]..[1353,52468+9])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/closure/closure.ml[1256,48790+6]..[1256,48790+13])
                                  Ppat_var "env_pos" (middle_end/closure/closure.ml[1256,48790+6]..[1256,48790+13])
                                expression (middle_end/closure/closure.ml[1256,48790+16]..[1256,48790+24])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1256,48790+16]..[1256,48790+19])
                                    Pexp_ident "ref" (middle_end/closure/closure.ml[1256,48790+16]..[1256,48790+19])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1256,48790+20]..[1256,48790+24])
                                        Pexp_constant PConst_int (-1,None)
                                  ]
                            ]
                            expression (middle_end/closure/closure.ml[1257,48818+2]..[1353,52468+9])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/closure/closure.ml[1257,48818+6]..[1257,48818+18])
                                    Ppat_var "clos_offsets" (middle_end/closure/closure.ml[1257,48818+6]..[1257,48818+18])
                                  expression (middle_end/closure/closure.ml[1258,48839+4]..[1263,49036+20])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[1258,48839+4]..[1258,48839+12])
                                      Pexp_ident "List.map" (middle_end/closure/closure.ml[1258,48839+4]..[1258,48839+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1259,48852+6]..[1262,49023+12])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/closure/closure.ml[1259,48852+11]..[1259,48852+56])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[1259,48852+12]..[1259,48852+15])
                                                Ppat_var "_id" (middle_end/closure/closure.ml[1259,48852+12]..[1259,48852+15])
                                              pattern (middle_end/closure/closure.ml[1259,48852+17]..[1259,48852+24])
                                                Ppat_var "_params" (middle_end/closure/closure.ml[1259,48852+17]..[1259,48852+24])
                                              pattern (middle_end/closure/closure.ml[1259,48852+26]..[1259,48852+33])
                                                Ppat_var "_return" (middle_end/closure/closure.ml[1259,48852+26]..[1259,48852+33])
                                              pattern (middle_end/closure/closure.ml[1259,48852+35]..[1259,48852+40])
                                                Ppat_var "_body" (middle_end/closure/closure.ml[1259,48852+35]..[1259,48852+40])
                                              pattern (middle_end/closure/closure.ml[1259,48852+42]..[1259,48852+49])
                                                Ppat_var "fundesc" (middle_end/closure/closure.ml[1259,48852+42]..[1259,48852+49])
                                              pattern (middle_end/closure/closure.ml[1259,48852+51]..[1259,48852+55])
                                                Ppat_var "_dbg" (middle_end/closure/closure.ml[1259,48852+51]..[1259,48852+55])
                                            ]
                                          expression (middle_end/closure/closure.ml[1260,48912+8]..[1262,49023+11])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/closure/closure.ml[1260,48912+12]..[1260,48912+15])
                                                  Ppat_var "pos" (middle_end/closure/closure.ml[1260,48912+12]..[1260,48912+15])
                                                expression (middle_end/closure/closure.ml[1260,48912+18]..[1260,48912+30])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[1260,48912+27]..[1260,48912+28])
                                                    Pexp_ident "+" (middle_end/closure/closure.ml[1260,48912+27]..[1260,48912+28])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[1260,48912+18]..[1260,48912+26])
                                                        Pexp_apply
                                                        expression (middle_end/closure/closure.ml[1260,48912+18]..[1260,48912+19])
                                                          Pexp_ident "!" (middle_end/closure/closure.ml[1260,48912+18]..[1260,48912+19])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[1260,48912+19]..[1260,48912+26])
                                                              Pexp_ident "env_pos" (middle_end/closure/closure.ml[1260,48912+19]..[1260,48912+26])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[1260,48912+29]..[1260,48912+30])
                                                        Pexp_constant PConst_int (1,None)
                                                  ]
                                            ]
                                            expression (middle_end/closure/closure.ml[1261,48946+8]..[1262,49023+11])
                                              Pexp_sequence
                                              expression (middle_end/closure/closure.ml[1261,48946+8]..[1261,48946+75])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[1261,48946+16]..[1261,48946+18])
                                                  Pexp_ident ":=" (middle_end/closure/closure.ml[1261,48946+16]..[1261,48946+18])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[1261,48946+8]..[1261,48946+15])
                                                      Pexp_ident "env_pos" (middle_end/closure/closure.ml[1261,48946+8]..[1261,48946+15])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[1261,48946+19]..[1261,48946+75])
                                                      Pexp_apply
                                                      expression (middle_end/closure/closure.ml[1261,48946+32]..[1261,48946+33])
                                                        Pexp_ident "+" (middle_end/closure/closure.ml[1261,48946+32]..[1261,48946+33])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/closure/closure.ml[1261,48946+19]..[1261,48946+31])
                                                            Pexp_apply
                                                            expression (middle_end/closure/closure.ml[1261,48946+28]..[1261,48946+29])
                                                              Pexp_ident "+" (middle_end/closure/closure.ml[1261,48946+28]..[1261,48946+29])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/closure/closure.ml[1261,48946+19]..[1261,48946+27])
                                                                  Pexp_apply
                                                                  expression (middle_end/closure/closure.ml[1261,48946+19]..[1261,48946+20])
                                                                    Pexp_ident "!" (middle_end/closure/closure.ml[1261,48946+19]..[1261,48946+20])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/closure/closure.ml[1261,48946+20]..[1261,48946+27])
Pexp_ident "env_pos" (middle_end/closure/closure.ml[1261,48946+20]..[1261,48946+27])
                                                                  ]
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/closure/closure.ml[1261,48946+30]..[1261,48946+31])
                                                                  Pexp_constant PConst_int (1,None)
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/closure/closure.ml[1261,48946+34]..[1261,48946+75])
                                                            Pexp_ifthenelse
                                                            expression (middle_end/closure/closure.ml[1261,48946+38]..[1261,48946+60])
                                                              Pexp_apply
                                                              expression (middle_end/closure/closure.ml[1261,48946+56]..[1261,48946+58])
                                                                Pexp_ident "<>" (middle_end/closure/closure.ml[1261,48946+56]..[1261,48946+58])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/closure/closure.ml[1261,48946+38]..[1261,48946+55])
                                                                    Pexp_field
                                                                    expression (middle_end/closure/closure.ml[1261,48946+38]..[1261,48946+45])
                                                                      Pexp_ident "fundesc" (middle_end/closure/closure.ml[1261,48946+38]..[1261,48946+45])
                                                                    "fun_arity" (middle_end/closure/closure.ml[1261,48946+46]..[1261,48946+55])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/closure/closure.ml[1261,48946+59]..[1261,48946+60])
                                                                    Pexp_constant PConst_int (1,None)
                                                              ]
                                                            expression (middle_end/closure/closure.ml[1261,48946+66]..[1261,48946+67])
                                                              Pexp_constant PConst_int (3,None)
                                                            Some
                                                              expression (middle_end/closure/closure.ml[1261,48946+73]..[1261,48946+74])
                                                                Pexp_constant PConst_int (2,None)
                                                      ]
                                                ]
                                              expression (middle_end/closure/closure.ml[1262,49023+8]..[1262,49023+11])
                                                Pexp_ident "pos" (middle_end/closure/closure.ml[1262,49023+8]..[1262,49023+11])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1263,49036+6]..[1263,49036+20])
                                          Pexp_ident "uncurried_defs" (middle_end/closure/closure.ml[1263,49036+6]..[1263,49036+20])
                                    ]
                              ]
                              expression (middle_end/closure/closure.ml[1264,49060+2]..[1353,52468+9])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/closure/closure.ml[1264,49060+6]..[1264,49060+12])
                                      Ppat_var "fv_pos" (middle_end/closure/closure.ml[1264,49060+6]..[1264,49060+12])
                                    expression (middle_end/closure/closure.ml[1264,49060+15]..[1264,49060+23])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[1264,49060+15]..[1264,49060+16])
                                        Pexp_ident "!" (middle_end/closure/closure.ml[1264,49060+15]..[1264,49060+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[1264,49060+16]..[1264,49060+23])
                                            Pexp_ident "env_pos" (middle_end/closure/closure.ml[1264,49060+16]..[1264,49060+23])
                                      ]
                                ]
                                expression (middle_end/closure/closure.ml[1267,49225+2]..[1353,52468+9])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/closure/closure.ml[1267,49225+6]..[1267,49225+17])
                                        Ppat_var "useless_env" (middle_end/closure/closure.ml[1267,49225+6]..[1267,49225+17])
                                      expression (middle_end/closure/closure.ml[1267,49225+20]..[1267,49225+40])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[1267,49225+20]..[1267,49225+23])
                                          Pexp_ident "ref" (middle_end/closure/closure.ml[1267,49225+20]..[1267,49225+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1267,49225+24]..[1267,49225+40])
                                              Pexp_ident "initially_closed" (middle_end/closure/closure.ml[1267,49225+24]..[1267,49225+40])
                                        ]
                                  ]
                                  expression (middle_end/closure/closure.ml[1269,49312+2]..[1353,52468+9])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/closure/closure.ml[1269,49312+6]..[1269,49312+17])
                                          Ppat_var "clos_fundef" (middle_end/closure/closure.ml[1269,49312+6]..[1269,49312+17])
                                        expression (middle_end/closure/closure.ml[1269,49312+18]..[1322,51147+54]) ghost
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/closure/closure.ml[1269,49312+18]..[1269,49312+58])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/closure/closure.ml[1269,49312+19]..[1269,49312+21])
                                                Ppat_var "id" (middle_end/closure/closure.ml[1269,49312+19]..[1269,49312+21])
                                              pattern (middle_end/closure/closure.ml[1269,49312+23]..[1269,49312+29])
                                                Ppat_var "params" (middle_end/closure/closure.ml[1269,49312+23]..[1269,49312+29])
                                              pattern (middle_end/closure/closure.ml[1269,49312+31]..[1269,49312+37])
                                                Ppat_var "return" (middle_end/closure/closure.ml[1269,49312+31]..[1269,49312+37])
                                              pattern (middle_end/closure/closure.ml[1269,49312+39]..[1269,49312+43])
                                                Ppat_var "body" (middle_end/closure/closure.ml[1269,49312+39]..[1269,49312+43])
                                              pattern (middle_end/closure/closure.ml[1269,49312+45]..[1269,49312+52])
                                                Ppat_var "fundesc" (middle_end/closure/closure.ml[1269,49312+45]..[1269,49312+52])
                                              pattern (middle_end/closure/closure.ml[1269,49312+54]..[1269,49312+57])
                                                Ppat_var "dbg" (middle_end/closure/closure.ml[1269,49312+54]..[1269,49312+57])
                                            ]
                                          expression (middle_end/closure/closure.ml[1269,49312+59]..[1322,51147+54]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/closure/closure.ml[1269,49312+59]..[1269,49312+66])
                                              Ppat_var "env_pos" (middle_end/closure/closure.ml[1269,49312+59]..[1269,49312+66])
                                            expression (middle_end/closure/closure.ml[1270,49381+4]..[1322,51147+54])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/closure/closure.ml[1270,49381+8]..[1270,49381+17])
                                                    Ppat_var "env_param" (middle_end/closure/closure.ml[1270,49381+8]..[1270,49381+17])
                                                  expression (middle_end/closure/closure.ml[1270,49381+20]..[1270,49381+40])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[1270,49381+20]..[1270,49381+34])
                                                      Pexp_ident "V.create_local" (middle_end/closure/closure.ml[1270,49381+20]..[1270,49381+34])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[1270,49381+35]..[1270,49381+40])
                                                          Pexp_constant PConst_string("env",(middle_end/closure/closure.ml[1270,49381+36]..[1270,49381+39]),None)
                                                    ]
                                              ]
                                              expression (middle_end/closure/closure.ml[1271,49425+4]..[1322,51147+54])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/closure/closure.ml[1271,49425+8]..[1271,49425+15])
                                                      Ppat_var "cenv_fv" (middle_end/closure/closure.ml[1271,49425+8]..[1271,49425+15])
                                                    expression (middle_end/closure/closure.ml[1272,49443+6]..[1272,49443+55])
                                                      Pexp_apply
                                                      expression (middle_end/closure/closure.ml[1272,49443+6]..[1272,49443+23])
                                                        Pexp_ident "build_closure_env" (middle_end/closure/closure.ml[1272,49443+6]..[1272,49443+23])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/closure/closure.ml[1272,49443+24]..[1272,49443+33])
                                                            Pexp_ident "env_param" (middle_end/closure/closure.ml[1272,49443+24]..[1272,49443+33])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/closure/closure.ml[1272,49443+34]..[1272,49443+52])
                                                            Pexp_apply
                                                            expression (middle_end/closure/closure.ml[1272,49443+42]..[1272,49443+43])
                                                              Pexp_ident "-" (middle_end/closure/closure.ml[1272,49443+42]..[1272,49443+43])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/closure/closure.ml[1272,49443+35]..[1272,49443+41])
                                                                  Pexp_ident "fv_pos" (middle_end/closure/closure.ml[1272,49443+35]..[1272,49443+41])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/closure/closure.ml[1272,49443+44]..[1272,49443+51])
                                                                  Pexp_ident "env_pos" (middle_end/closure/closure.ml[1272,49443+44]..[1272,49443+51])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/closure/closure.ml[1272,49443+53]..[1272,49443+55])
                                                            Pexp_ident "fv" (middle_end/closure/closure.ml[1272,49443+53]..[1272,49443+55])
                                                      ]
                                                ]
                                                expression (middle_end/closure/closure.ml[1273,49502+4]..[1322,51147+54])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/closure/closure.ml[1273,49502+8]..[1273,49502+17])
                                                        Ppat_var "cenv_body" (middle_end/closure/closure.ml[1273,49502+8]..[1273,49502+17])
                                                      expression (middle_end/closure/closure.ml[1274,49522+6]..[1277,49684+43])
                                                        Pexp_apply
                                                        expression (middle_end/closure/closure.ml[1274,49522+6]..[1274,49522+22])
                                                          Pexp_ident "List.fold_right2" (middle_end/closure/closure.ml[1274,49522+6]..[1274,49522+22])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[1275,49545+8]..[1276,49615+68])
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (middle_end/closure/closure.ml[1275,49545+13]..[1275,49545+58])
                                                                Ppat_tuple
                                                                [
                                                                  pattern (middle_end/closure/closure.ml[1275,49545+14]..[1275,49545+16])
                                                                    Ppat_var "id" (middle_end/closure/closure.ml[1275,49545+14]..[1275,49545+16])
                                                                  pattern (middle_end/closure/closure.ml[1275,49545+18]..[1275,49545+25])
                                                                    Ppat_var "_params" (middle_end/closure/closure.ml[1275,49545+18]..[1275,49545+25])
                                                                  pattern (middle_end/closure/closure.ml[1275,49545+27]..[1275,49545+34])
                                                                    Ppat_var "_return" (middle_end/closure/closure.ml[1275,49545+27]..[1275,49545+34])
                                                                  pattern (middle_end/closure/closure.ml[1275,49545+36]..[1275,49545+41])
                                                                    Ppat_var "_body" (middle_end/closure/closure.ml[1275,49545+36]..[1275,49545+41])
                                                                  pattern (middle_end/closure/closure.ml[1275,49545+43]..[1275,49545+51])
                                                                    Ppat_var "_fundesc" (middle_end/closure/closure.ml[1275,49545+43]..[1275,49545+51])
                                                                  pattern (middle_end/closure/closure.ml[1275,49545+53]..[1275,49545+57])
                                                                    Ppat_var "_dbg" (middle_end/closure/closure.ml[1275,49545+53]..[1275,49545+57])
                                                                ]
                                                              expression (middle_end/closure/closure.ml[1275,49545+59]..[1276,49615+67]) ghost
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (middle_end/closure/closure.ml[1275,49545+59]..[1275,49545+62])
                                                                  Ppat_var "pos" (middle_end/closure/closure.ml[1275,49545+59]..[1275,49545+62])
                                                                expression (middle_end/closure/closure.ml[1275,49545+63]..[1276,49615+67]) ghost
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (middle_end/closure/closure.ml[1275,49545+63]..[1275,49545+66])
                                                                    Ppat_var "env" (middle_end/closure/closure.ml[1275,49545+63]..[1275,49545+66])
                                                                  expression (middle_end/closure/closure.ml[1276,49615+10]..[1276,49615+67])
                                                                    Pexp_apply
                                                                    expression (middle_end/closure/closure.ml[1276,49615+10]..[1276,49615+19])
                                                                      Pexp_ident "V.Map.add" (middle_end/closure/closure.ml[1276,49615+10]..[1276,49615+19])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/closure/closure.ml[1276,49615+20]..[1276,49615+22])
  Pexp_ident "id" (middle_end/closure/closure.ml[1276,49615+20]..[1276,49615+22])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/closure/closure.ml[1276,49615+23]..[1276,49615+63])
  Pexp_construct "Uoffset" (middle_end/closure/closure.ml[1276,49615+24]..[1276,49615+31])
  Some
    expression (middle_end/closure/closure.ml[1276,49615+31]..[1276,49615+62])
      Pexp_tuple
      [
        expression (middle_end/closure/closure.ml[1276,49615+32]..[1276,49615+46])
          Pexp_construct "Uvar" (middle_end/closure/closure.ml[1276,49615+32]..[1276,49615+36])
          Some
            expression (middle_end/closure/closure.ml[1276,49615+37]..[1276,49615+46])
              Pexp_ident "env_param" (middle_end/closure/closure.ml[1276,49615+37]..[1276,49615+46])
        expression (middle_end/closure/closure.ml[1276,49615+48]..[1276,49615+61])
          Pexp_apply
          expression (middle_end/closure/closure.ml[1276,49615+52]..[1276,49615+53])
            Pexp_ident "-" (middle_end/closure/closure.ml[1276,49615+52]..[1276,49615+53])
          [
            <arg>
            Nolabel
              expression (middle_end/closure/closure.ml[1276,49615+48]..[1276,49615+51])
                Pexp_ident "pos" (middle_end/closure/closure.ml[1276,49615+48]..[1276,49615+51])
            <arg>
            Nolabel
              expression (middle_end/closure/closure.ml[1276,49615+54]..[1276,49615+61])
                Pexp_ident "env_pos" (middle_end/closure/closure.ml[1276,49615+54]..[1276,49615+61])
          ]
      ]
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/closure/closure.ml[1276,49615+64]..[1276,49615+67])
  Pexp_ident "env" (middle_end/closure/closure.ml[1276,49615+64]..[1276,49615+67])
                                                                    ]
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[1277,49684+8]..[1277,49684+22])
                                                              Pexp_ident "uncurried_defs" (middle_end/closure/closure.ml[1277,49684+8]..[1277,49684+22])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[1277,49684+23]..[1277,49684+35])
                                                              Pexp_ident "clos_offsets" (middle_end/closure/closure.ml[1277,49684+23]..[1277,49684+35])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[1277,49684+36]..[1277,49684+43])
                                                              Pexp_ident "cenv_fv" (middle_end/closure/closure.ml[1277,49684+36]..[1277,49684+43])
                                                        ]
                                                  ]
                                                  expression (middle_end/closure/closure.ml[1278,49731+4]..[1322,51147+54])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/closure/closure.ml[1278,49731+8]..[1278,49731+23])
                                                          Ppat_tuple
                                                          [
                                                            pattern (middle_end/closure/closure.ml[1278,49731+9]..[1278,49731+14])
                                                              Ppat_var "ubody" (middle_end/closure/closure.ml[1278,49731+9]..[1278,49731+14])
                                                            pattern (middle_end/closure/closure.ml[1278,49731+16]..[1278,49731+22])
                                                              Ppat_var "approx" (middle_end/closure/closure.ml[1278,49731+16]..[1278,49731+22])
                                                          ]
                                                        expression (middle_end/closure/closure.ml[1279,49757+6]..[1279,49757+77])
                                                          Pexp_apply
                                                          expression (middle_end/closure/closure.ml[1279,49757+6]..[1279,49757+11])
                                                            Pexp_ident "close" (middle_end/closure/closure.ml[1279,49757+6]..[1279,49757+11])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[1279,49757+12]..[1279,49757+72])
                                                                Pexp_record
                                                                [
                                                                  "backend" (middle_end/closure/closure.ml[1279,49757+14]..[1279,49757+21]) ghost
                                                                    expression (middle_end/closure/closure.ml[1279,49757+14]..[1279,49757+21])
                                                                      Pexp_ident "backend" (middle_end/closure/closure.ml[1279,49757+14]..[1279,49757+21])
                                                                  "fenv" (middle_end/closure/closure.ml[1279,49757+23]..[1279,49757+27])
                                                                    expression (middle_end/closure/closure.ml[1279,49757+30]..[1279,49757+38])
                                                                      Pexp_ident "fenv_rec" (middle_end/closure/closure.ml[1279,49757+30]..[1279,49757+38])
                                                                  "cenv" (middle_end/closure/closure.ml[1279,49757+40]..[1279,49757+44])
                                                                    expression (middle_end/closure/closure.ml[1279,49757+47]..[1279,49757+56])
                                                                      Pexp_ident "cenv_body" (middle_end/closure/closure.ml[1279,49757+47]..[1279,49757+56])
                                                                  "mutable_vars" (middle_end/closure/closure.ml[1279,49757+58]..[1279,49757+70]) ghost
                                                                    expression (middle_end/closure/closure.ml[1279,49757+58]..[1279,49757+70])
                                                                      Pexp_ident "mutable_vars" (middle_end/closure/closure.ml[1279,49757+58]..[1279,49757+70])
                                                                ]
                                                                None
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[1279,49757+73]..[1279,49757+77])
                                                                Pexp_ident "body" (middle_end/closure/closure.ml[1279,49757+73]..[1279,49757+77])
                                                          ]
                                                    ]
                                                    expression (middle_end/closure/closure.ml[1281,49842+4]..[1322,51147+54])
                                                      Pexp_sequence
                                                      expression (middle_end/closure/closure.ml[1281,49842+4]..[1281,49842+70])
                                                        Pexp_ifthenelse
                                                        expression (middle_end/closure/closure.ml[1281,49842+7]..[1281,49842+49])
                                                          Pexp_apply
                                                          expression (middle_end/closure/closure.ml[1281,49842+20]..[1281,49842+22])
                                                            Pexp_ident "&&" (middle_end/closure/closure.ml[1281,49842+20]..[1281,49842+22])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[1281,49842+7]..[1281,49842+19])
                                                                Pexp_apply
                                                                expression (middle_end/closure/closure.ml[1281,49842+7]..[1281,49842+8])
                                                                  Pexp_ident "!" (middle_end/closure/closure.ml[1281,49842+7]..[1281,49842+8])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/closure/closure.ml[1281,49842+8]..[1281,49842+19])
                                                                      Pexp_ident "useless_env" (middle_end/closure/closure.ml[1281,49842+8]..[1281,49842+19])
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[1281,49842+23]..[1281,49842+49])
                                                                Pexp_apply
                                                                expression (middle_end/closure/closure.ml[1281,49842+23]..[1281,49842+33])
                                                                  Pexp_ident "occurs_var" (middle_end/closure/closure.ml[1281,49842+23]..[1281,49842+33])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/closure/closure.ml[1281,49842+34]..[1281,49842+43])
                                                                      Pexp_ident "env_param" (middle_end/closure/closure.ml[1281,49842+34]..[1281,49842+43])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/closure/closure.ml[1281,49842+44]..[1281,49842+49])
                                                                      Pexp_ident "ubody" (middle_end/closure/closure.ml[1281,49842+44]..[1281,49842+49])
                                                                ]
                                                          ]
                                                        expression (middle_end/closure/closure.ml[1281,49842+55]..[1281,49842+70])
                                                          Pexp_apply
                                                          expression (middle_end/closure/closure.ml[1281,49842+55]..[1281,49842+60])
                                                            Pexp_ident "raise" (middle_end/closure/closure.ml[1281,49842+55]..[1281,49842+60])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[1281,49842+61]..[1281,49842+70])
                                                                Pexp_construct "NotClosed" (middle_end/closure/closure.ml[1281,49842+61]..[1281,49842+70])
                                                                None
                                                          ]
                                                        None
                                                      expression (middle_end/closure/closure.ml[1282,49914+4]..[1322,51147+54])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (middle_end/closure/closure.ml[1282,49914+8]..[1282,49914+18])
                                                              Ppat_var "fun_params" (middle_end/closure/closure.ml[1282,49914+8]..[1282,49914+18])
                                                            expression (middle_end/closure/closure.ml[1283,49935+6]..[1285,49975+40])
                                                              Pexp_ifthenelse
                                                              expression (middle_end/closure/closure.ml[1283,49935+9]..[1283,49935+21])
                                                                Pexp_apply
                                                                expression (middle_end/closure/closure.ml[1283,49935+9]..[1283,49935+10])
                                                                  Pexp_ident "!" (middle_end/closure/closure.ml[1283,49935+9]..[1283,49935+10])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/closure/closure.ml[1283,49935+10]..[1283,49935+21])
                                                                      Pexp_ident "useless_env" (middle_end/closure/closure.ml[1283,49935+10]..[1283,49935+21])
                                                                ]
                                                              expression (middle_end/closure/closure.ml[1284,49957+11]..[1284,49957+17])
                                                                Pexp_ident "params" (middle_end/closure/closure.ml[1284,49957+11]..[1284,49957+17])
                                                              Some
                                                                expression (middle_end/closure/closure.ml[1285,49975+11]..[1285,49975+40])
                                                                  Pexp_apply
                                                                  expression (middle_end/closure/closure.ml[1285,49975+18]..[1285,49975+19])
                                                                    Pexp_ident "@" (middle_end/closure/closure.ml[1285,49975+18]..[1285,49975+19])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/closure/closure.ml[1285,49975+11]..[1285,49975+17])
Pexp_ident "params" (middle_end/closure/closure.ml[1285,49975+11]..[1285,49975+17])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/closure/closure.ml[1285,49975+20]..[1285,49975+40])
Pexp_construct "::" (middle_end/closure/closure.ml[1285,49975+21]..[1285,49975+40]) ghost
Some
  expression (middle_end/closure/closure.ml[1285,49975+21]..[1285,49975+40]) ghost
    Pexp_tuple
    [
      expression (middle_end/closure/closure.ml[1285,49975+21]..[1285,49975+39])
        Pexp_tuple
        [
          expression (middle_end/closure/closure.ml[1285,49975+21]..[1285,49975+30])
            Pexp_ident "env_param" (middle_end/closure/closure.ml[1285,49975+21]..[1285,49975+30])
          expression (middle_end/closure/closure.ml[1285,49975+32]..[1285,49975+39])
            Pexp_construct "Pgenval" (middle_end/closure/closure.ml[1285,49975+32]..[1285,49975+39])
            None
        ]
      expression (middle_end/closure/closure.ml[1285,49975+39]..[1285,49975+40]) ghost
        Pexp_construct "[]" (middle_end/closure/closure.ml[1285,49975+39]..[1285,49975+40]) ghost
        None
    ]
                                                                  ]
                                                        ]
                                                        expression (middle_end/closure/closure.ml[1287,50023+4]..[1322,51147+54])
                                                          Pexp_let Nonrec
                                                          [
                                                            <def>
                                                              pattern (middle_end/closure/closure.ml[1287,50023+8]..[1287,50023+9])
                                                                Ppat_var "f" (middle_end/closure/closure.ml[1287,50023+8]..[1287,50023+9])
                                                              expression (middle_end/closure/closure.ml[1288,50035+6]..[1296,50277+7])
                                                                Pexp_record
                                                                [
                                                                  "label" (middle_end/closure/closure.ml[1289,50043+8]..[1289,50043+13])
                                                                    expression (middle_end/closure/closure.ml[1289,50043+17]..[1289,50043+34])
                                                                      Pexp_field
                                                                      expression (middle_end/closure/closure.ml[1289,50043+17]..[1289,50043+24])
Pexp_ident "fundesc" (middle_end/closure/closure.ml[1289,50043+17]..[1289,50043+24])
                                                                      "fun_label" (middle_end/closure/closure.ml[1289,50043+25]..[1289,50043+34])
                                                                  "arity" (middle_end/closure/closure.ml[1290,50079+8]..[1290,50079+13])
                                                                    expression (middle_end/closure/closure.ml[1290,50079+17]..[1290,50079+34])
                                                                      Pexp_field
                                                                      expression (middle_end/closure/closure.ml[1290,50079+17]..[1290,50079+24])
Pexp_ident "fundesc" (middle_end/closure/closure.ml[1290,50079+17]..[1290,50079+24])
                                                                      "fun_arity" (middle_end/closure/closure.ml[1290,50079+25]..[1290,50079+34])
                                                                  "params" (middle_end/closure/closure.ml[1291,50115+8]..[1291,50115+14])
                                                                    expression (middle_end/closure/closure.ml[1291,50115+17]..[1291,50115+77])
                                                                      Pexp_apply
                                                                      expression (middle_end/closure/closure.ml[1291,50115+17]..[1291,50115+25])
Pexp_ident "List.map" (middle_end/closure/closure.ml[1291,50115+17]..[1291,50115+25])
                                                                      [
<arg>
Nolabel
  expression (middle_end/closure/closure.ml[1291,50115+26]..[1291,50115+66])
    Pexp_fun
    Nolabel
    None
    pattern (middle_end/closure/closure.ml[1291,50115+31]..[1291,50115+42])
      Ppat_tuple
      [
        pattern (middle_end/closure/closure.ml[1291,50115+32]..[1291,50115+35])
          Ppat_var "var" (middle_end/closure/closure.ml[1291,50115+32]..[1291,50115+35])
        pattern (middle_end/closure/closure.ml[1291,50115+37]..[1291,50115+41])
          Ppat_var "kind" (middle_end/closure/closure.ml[1291,50115+37]..[1291,50115+41])
      ]
    expression (middle_end/closure/closure.ml[1291,50115+46]..[1291,50115+65])
      Pexp_tuple
      [
        expression (middle_end/closure/closure.ml[1291,50115+46]..[1291,50115+59])
          Pexp_apply
          expression (middle_end/closure/closure.ml[1291,50115+46]..[1291,50115+55])
            Pexp_ident "VP.create" (middle_end/closure/closure.ml[1291,50115+46]..[1291,50115+55])
          [
            <arg>
            Nolabel
              expression (middle_end/closure/closure.ml[1291,50115+56]..[1291,50115+59])
                Pexp_ident "var" (middle_end/closure/closure.ml[1291,50115+56]..[1291,50115+59])
          ]
        expression (middle_end/closure/closure.ml[1291,50115+61]..[1291,50115+65])
          Pexp_ident "kind" (middle_end/closure/closure.ml[1291,50115+61]..[1291,50115+65])
      ]
<arg>
Nolabel
  expression (middle_end/closure/closure.ml[1291,50115+67]..[1291,50115+77])
    Pexp_ident "fun_params" (middle_end/closure/closure.ml[1291,50115+67]..[1291,50115+77])
                                                                      ]
                                                                  "return" (middle_end/closure/closure.ml[1292,50194+8]..[1292,50194+14]) ghost
                                                                    expression (middle_end/closure/closure.ml[1292,50194+8]..[1292,50194+14])
                                                                      Pexp_ident "return" (middle_end/closure/closure.ml[1292,50194+8]..[1292,50194+14])
                                                                  "body" (middle_end/closure/closure.ml[1293,50210+8]..[1293,50210+12])
                                                                    expression (middle_end/closure/closure.ml[1293,50210+17]..[1293,50210+22])
                                                                      Pexp_ident "ubody" (middle_end/closure/closure.ml[1293,50210+17]..[1293,50210+22])
                                                                  "dbg" (middle_end/closure/closure.ml[1294,50234+8]..[1294,50234+11]) ghost
                                                                    expression (middle_end/closure/closure.ml[1294,50234+8]..[1294,50234+11])
                                                                      Pexp_ident "dbg" (middle_end/closure/closure.ml[1294,50234+8]..[1294,50234+11])
                                                                  "env" (middle_end/closure/closure.ml[1295,50247+8]..[1295,50247+11])
                                                                    expression (middle_end/closure/closure.ml[1295,50247+14]..[1295,50247+28])
                                                                      Pexp_construct "Some" (middle_end/closure/closure.ml[1295,50247+14]..[1295,50247+18])
                                                                      Some
expression (middle_end/closure/closure.ml[1295,50247+19]..[1295,50247+28])
  Pexp_ident "env_param" (middle_end/closure/closure.ml[1295,50247+19]..[1295,50247+28])
                                                                ]
                                                                None
                                                          ]
                                                          expression (middle_end/closure/closure.ml[1300,50407+4]..[1322,51147+54])
                                                            Pexp_let Nonrec
                                                            [
                                                              <def>
                                                                pattern (middle_end/closure/closure.ml[1300,50407+8]..[1300,50407+9])
                                                                  Ppat_var "n" (middle_end/closure/closure.ml[1300,50407+8]..[1300,50407+9])
                                                                expression (middle_end/closure/closure.ml[1301,50419+6]..[1304,50518+18])
                                                                  Pexp_apply
                                                                  expression (middle_end/closure/closure.ml[1301,50419+6]..[1301,50419+20])
                                                                    Pexp_ident "List.fold_left" (middle_end/closure/closure.ml[1301,50419+6]..[1301,50419+20])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/closure/closure.ml[1302,50440+8]..[1302,50440+67])
Pexp_fun
Nolabel
None
pattern (middle_end/closure/closure.ml[1302,50440+13]..[1302,50440+14])
  Ppat_var "n" (middle_end/closure/closure.ml[1302,50440+13]..[1302,50440+14])
expression (middle_end/closure/closure.ml[1302,50440+15]..[1302,50440+66]) ghost
  Pexp_fun
  Nolabel
  None
  pattern (middle_end/closure/closure.ml[1302,50440+15]..[1302,50440+22])
    Ppat_tuple
    [
      pattern (middle_end/closure/closure.ml[1302,50440+16]..[1302,50440+18])
        Ppat_var "id" (middle_end/closure/closure.ml[1302,50440+16]..[1302,50440+18])
      pattern (middle_end/closure/closure.ml[1302,50440+20]..[1302,50440+21])
        Ppat_any
    ]
  expression (middle_end/closure/closure.ml[1302,50440+26]..[1302,50440+66])
    Pexp_apply
    expression (middle_end/closure/closure.ml[1302,50440+28]..[1302,50440+29])
      Pexp_ident "+" (middle_end/closure/closure.ml[1302,50440+28]..[1302,50440+29])
    [
      <arg>
      Nolabel
        expression (middle_end/closure/closure.ml[1302,50440+26]..[1302,50440+27])
          Pexp_ident "n" (middle_end/closure/closure.ml[1302,50440+26]..[1302,50440+27])
      <arg>
      Nolabel
        expression (middle_end/closure/closure.ml[1302,50440+30]..[1302,50440+66])
          Pexp_ifthenelse
          expression (middle_end/closure/closure.ml[1302,50440+33]..[1302,50440+52])
            Pexp_apply
            expression (middle_end/closure/closure.ml[1302,50440+43]..[1302,50440+44])
              Pexp_ident "=" (middle_end/closure/closure.ml[1302,50440+43]..[1302,50440+44])
            [
              <arg>
              Nolabel
                expression (middle_end/closure/closure.ml[1302,50440+33]..[1302,50440+42])
                  Pexp_apply
                  expression (middle_end/closure/closure.ml[1302,50440+33]..[1302,50440+39])
                    Pexp_ident "V.name" (middle_end/closure/closure.ml[1302,50440+33]..[1302,50440+39])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure.ml[1302,50440+40]..[1302,50440+42])
                        Pexp_ident "id" (middle_end/closure/closure.ml[1302,50440+40]..[1302,50440+42])
                  ]
              <arg>
              Nolabel
                expression (middle_end/closure/closure.ml[1302,50440+45]..[1302,50440+52])
                  Pexp_constant PConst_string("*opt*",(middle_end/closure/closure.ml[1302,50440+46]..[1302,50440+51]),None)
            ]
          expression (middle_end/closure/closure.ml[1302,50440+58]..[1302,50440+59])
            Pexp_constant PConst_int (8,None)
          Some
            expression (middle_end/closure/closure.ml[1302,50440+65]..[1302,50440+66])
              Pexp_constant PConst_int (1,None)
    ]
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/closure/closure.ml[1303,50508+8]..[1303,50508+9])
Pexp_constant PConst_int (0,None)
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/closure/closure.ml[1304,50518+8]..[1304,50518+18])
Pexp_ident "fun_params" (middle_end/closure/closure.ml[1304,50518+8]..[1304,50518+18])
                                                                  ]
                                                            ]
                                                            expression (middle_end/closure/closure.ml[1306,50544+4]..[1322,51147+54])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (middle_end/closure/closure.ml[1306,50544+8]..[1306,50544+17])
                                                                    Ppat_var "threshold" (middle_end/closure/closure.ml[1306,50544+8]..[1306,50544+17])
                                                                  expression (middle_end/closure/closure.ml[1307,50564+6]..[1316,50936+32])
                                                                    Pexp_match
                                                                    expression (middle_end/closure/closure.ml[1307,50564+12]..[1307,50564+28])
                                                                      Pexp_ident "inline_attribute" (middle_end/closure/closure.ml[1307,50564+12]..[1307,50564+28])
                                                                    [
                                                                      <case>
pattern (middle_end/closure/closure.ml[1308,50598+8]..[1308,50598+22])
  Ppat_construct "Default_inline" (middle_end/closure/closure.ml[1308,50598+8]..[1308,50598+22])
  None
expression (middle_end/closure/closure.ml[1309,50624+10]..[1313,50787+69])
  Pexp_let Nonrec
  [
    <def>
      pattern (middle_end/closure/closure.ml[1309,50624+14]..[1309,50624+30])
        Ppat_var "inline_threshold" (middle_end/closure/closure.ml[1309,50624+14]..[1309,50624+30])
      expression (middle_end/closure/closure.ml[1310,50657+12]..[1310,50657+73])
        Pexp_apply
        expression (middle_end/closure/closure.ml[1310,50657+12]..[1310,50657+40])
          Pexp_ident "Clflags.Float_arg_helper.get" (middle_end/closure/closure.ml[1310,50657+12]..[1310,50657+40])
        [
          <arg>
          Labelled "key"
            expression (middle_end/closure/closure.ml[1310,50657+46]..[1310,50657+47])
              Pexp_constant PConst_int (0,None)
          <arg>
          Nolabel
            expression (middle_end/closure/closure.ml[1310,50657+48]..[1310,50657+73])
              Pexp_apply
              expression (middle_end/closure/closure.ml[1310,50657+48]..[1310,50657+49])
                Pexp_ident "!" (middle_end/closure/closure.ml[1310,50657+48]..[1310,50657+49])
              [
                <arg>
                Nolabel
                  expression (middle_end/closure/closure.ml[1310,50657+49]..[1310,50657+73])
                    Pexp_ident "Clflags.inline_threshold" (middle_end/closure/closure.ml[1310,50657+49]..[1310,50657+73])
              ]
        ]
  ]
  expression (middle_end/closure/closure.ml[1312,50744+10]..[1313,50787+69])
    Pexp_let Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[1312,50744+14]..[1312,50744+34])
          Ppat_var "magic_scale_constant" (middle_end/closure/closure.ml[1312,50744+14]..[1312,50744+34])
        expression (middle_end/closure/closure.ml[1312,50744+37]..[1312,50744+39])
          Pexp_constant PConst_float (8.,None)
    ]
    expression (middle_end/closure/closure.ml[1313,50787+10]..[1313,50787+69])
      Pexp_apply
      expression (middle_end/closure/closure.ml[1313,50787+66]..[1313,50787+67])
        Pexp_ident "+" (middle_end/closure/closure.ml[1313,50787+66]..[1313,50787+67])
      [
        <arg>
        Nolabel
          expression (middle_end/closure/closure.ml[1313,50787+10]..[1313,50787+65])
            Pexp_apply
            expression (middle_end/closure/closure.ml[1313,50787+10]..[1313,50787+22])
              Pexp_ident "int_of_float" (middle_end/closure/closure.ml[1313,50787+10]..[1313,50787+22])
            [
              <arg>
              Nolabel
                expression (middle_end/closure/closure.ml[1313,50787+23]..[1313,50787+65])
                  Pexp_apply
                  expression (middle_end/closure/closure.ml[1313,50787+41]..[1313,50787+43])
                    Pexp_ident "*." (middle_end/closure/closure.ml[1313,50787+41]..[1313,50787+43])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure.ml[1313,50787+24]..[1313,50787+40])
                        Pexp_ident "inline_threshold" (middle_end/closure/closure.ml[1313,50787+24]..[1313,50787+40])
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure.ml[1313,50787+44]..[1313,50787+64])
                        Pexp_ident "magic_scale_constant" (middle_end/closure/closure.ml[1313,50787+44]..[1313,50787+64])
                  ]
            ]
        <arg>
        Nolabel
          expression (middle_end/closure/closure.ml[1313,50787+68]..[1313,50787+69])
            Pexp_ident "n" (middle_end/closure/closure.ml[1313,50787+68]..[1313,50787+69])
      ]
                                                                      <case>
pattern (middle_end/closure/closure.ml[1314,50857+8]..[1314,50857+35])
  Ppat_or
  pattern (middle_end/closure/closure.ml[1314,50857+8]..[1314,50857+21])
    Ppat_construct "Always_inline" (middle_end/closure/closure.ml[1314,50857+8]..[1314,50857+21])
    None
  pattern (middle_end/closure/closure.ml[1314,50857+24]..[1314,50857+35])
    Ppat_construct "Hint_inline" (middle_end/closure/closure.ml[1314,50857+24]..[1314,50857+35])
    None
expression (middle_end/closure/closure.ml[1314,50857+39]..[1314,50857+46])
  Pexp_ident "max_int" (middle_end/closure/closure.ml[1314,50857+39]..[1314,50857+46])
                                                                      <case>
pattern (middle_end/closure/closure.ml[1315,50904+8]..[1315,50904+20])
  Ppat_construct "Never_inline" (middle_end/closure/closure.ml[1315,50904+8]..[1315,50904+20])
  None
expression (middle_end/closure/closure.ml[1315,50904+24]..[1315,50904+31])
  Pexp_ident "min_int" (middle_end/closure/closure.ml[1315,50904+24]..[1315,50904+31])
                                                                      <case>
pattern (middle_end/closure/closure.ml[1316,50936+8]..[1316,50936+16])
  Ppat_construct "Unroll" (middle_end/closure/closure.ml[1316,50936+8]..[1316,50936+14])
  Some
    []
    pattern (middle_end/closure/closure.ml[1316,50936+15]..[1316,50936+16])
      Ppat_any
expression (middle_end/closure/closure.ml[1316,50936+20]..[1316,50936+32])
  Pexp_assert
  expression (middle_end/closure/closure.ml[1316,50936+27]..[1316,50936+32])
    Pexp_construct "false" (middle_end/closure/closure.ml[1316,50936+27]..[1316,50936+32])
    None
                                                                    ]
                                                              ]
                                                              expression (middle_end/closure/closure.ml[1318,50976+4]..[1322,51147+54])
                                                                Pexp_let Nonrec
                                                                [
                                                                  <def>
                                                                    pattern (middle_end/closure/closure.ml[1318,50976+8]..[1318,50976+18])
                                                                      Ppat_var "fun_params" (middle_end/closure/closure.ml[1318,50976+8]..[1318,50976+18])
                                                                    expression (middle_end/closure/closure.ml[1318,50976+21]..[1318,50976+72])
                                                                      Pexp_apply
                                                                      expression (middle_end/closure/closure.ml[1318,50976+21]..[1318,50976+29])
Pexp_ident "List.map" (middle_end/closure/closure.ml[1318,50976+21]..[1318,50976+29])
                                                                      [
<arg>
Nolabel
  expression (middle_end/closure/closure.ml[1318,50976+30]..[1318,50976+61])
    Pexp_fun
    Nolabel
    None
    pattern (middle_end/closure/closure.ml[1318,50976+35]..[1318,50976+43])
      Ppat_tuple
      [
        pattern (middle_end/closure/closure.ml[1318,50976+36]..[1318,50976+39])
          Ppat_var "var" (middle_end/closure/closure.ml[1318,50976+36]..[1318,50976+39])
        pattern (middle_end/closure/closure.ml[1318,50976+41]..[1318,50976+42])
          Ppat_any
      ]
    expression (middle_end/closure/closure.ml[1318,50976+47]..[1318,50976+60])
      Pexp_apply
      expression (middle_end/closure/closure.ml[1318,50976+47]..[1318,50976+56])
        Pexp_ident "VP.create" (middle_end/closure/closure.ml[1318,50976+47]..[1318,50976+56])
      [
        <arg>
        Nolabel
          expression (middle_end/closure/closure.ml[1318,50976+57]..[1318,50976+60])
            Pexp_ident "var" (middle_end/closure/closure.ml[1318,50976+57]..[1318,50976+60])
      ]
<arg>
Nolabel
  expression (middle_end/closure/closure.ml[1318,50976+62]..[1318,50976+72])
    Pexp_ident "fun_params" (middle_end/closure/closure.ml[1318,50976+62]..[1318,50976+72])
                                                                      ]
                                                                ]
                                                                expression (middle_end/closure/closure.ml[1319,51052+4]..[1322,51147+54])
                                                                  Pexp_sequence
                                                                  expression (middle_end/closure/closure.ml[1319,51052+4]..[1320,51090+54])
                                                                    Pexp_ifthenelse
                                                                    expression (middle_end/closure/closure.ml[1319,51052+7]..[1319,51052+37])
                                                                      Pexp_apply
                                                                      expression (middle_end/closure/closure.ml[1319,51052+7]..[1319,51052+21])
Pexp_ident "lambda_smaller" (middle_end/closure/closure.ml[1319,51052+7]..[1319,51052+21])
                                                                      [
<arg>
Nolabel
  expression (middle_end/closure/closure.ml[1319,51052+22]..[1319,51052+27])
    Pexp_ident "ubody" (middle_end/closure/closure.ml[1319,51052+22]..[1319,51052+27])
<arg>
Nolabel
  expression (middle_end/closure/closure.ml[1319,51052+28]..[1319,51052+37])
    Pexp_ident "threshold" (middle_end/closure/closure.ml[1319,51052+28]..[1319,51052+37])
                                                                      ]
                                                                    expression (middle_end/closure/closure.ml[1320,51090+9]..[1320,51090+54])
                                                                      Pexp_setfield
                                                                      expression (middle_end/closure/closure.ml[1320,51090+9]..[1320,51090+16])
Pexp_ident "fundesc" (middle_end/closure/closure.ml[1320,51090+9]..[1320,51090+16])
                                                                      "fun_inline" (middle_end/closure/closure.ml[1320,51090+17]..[1320,51090+27])
                                                                      expression (middle_end/closure/closure.ml[1320,51090+31]..[1320,51090+54])
Pexp_construct "Some" (middle_end/closure/closure.ml[1320,51090+31]..[1320,51090+35])
Some
  expression (middle_end/closure/closure.ml[1320,51090+35]..[1320,51090+54])
    Pexp_tuple
    [
      expression (middle_end/closure/closure.ml[1320,51090+36]..[1320,51090+46])
        Pexp_ident "fun_params" (middle_end/closure/closure.ml[1320,51090+36]..[1320,51090+46])
      expression (middle_end/closure/closure.ml[1320,51090+48]..[1320,51090+53])
        Pexp_ident "ubody" (middle_end/closure/closure.ml[1320,51090+48]..[1320,51090+53])
    ]
                                                                    None
                                                                  expression (middle_end/closure/closure.ml[1322,51147+4]..[1322,51147+54])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (middle_end/closure/closure.ml[1322,51147+5]..[1322,51147+6])
Pexp_ident "f" (middle_end/closure/closure.ml[1322,51147+5]..[1322,51147+6])
                                                                      expression (middle_end/closure/closure.ml[1322,51147+8]..[1322,51147+53])
Pexp_tuple
[
  expression (middle_end/closure/closure.ml[1322,51147+9]..[1322,51147+11])
    Pexp_ident "id" (middle_end/closure/closure.ml[1322,51147+9]..[1322,51147+11])
  expression (middle_end/closure/closure.ml[1322,51147+13]..[1322,51147+20])
    Pexp_ident "env_pos" (middle_end/closure/closure.ml[1322,51147+13]..[1322,51147+20])
  expression (middle_end/closure/closure.ml[1322,51147+22]..[1322,51147+52])
    Pexp_construct "Value_closure" (middle_end/closure/closure.ml[1322,51147+22]..[1322,51147+35])
    Some
      expression (middle_end/closure/closure.ml[1322,51147+35]..[1322,51147+52])
        Pexp_tuple
        [
          expression (middle_end/closure/closure.ml[1322,51147+36]..[1322,51147+43])
            Pexp_ident "fundesc" (middle_end/closure/closure.ml[1322,51147+36]..[1322,51147+43])
          expression (middle_end/closure/closure.ml[1322,51147+45]..[1322,51147+51])
            Pexp_ident "approx" (middle_end/closure/closure.ml[1322,51147+45]..[1322,51147+51])
        ]
]
                                                                    ]
                                    ]
                                    expression (middle_end/closure/closure.ml[1324,51249+2]..[1353,52468+9])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/closure/closure.ml[1324,51249+6]..[1324,51249+20])
                                            Ppat_var "clos_info_list" (middle_end/closure/closure.ml[1324,51249+6]..[1324,51249+20])
                                          expression (middle_end/closure/closure.ml[1325,51272+4]..[1343,52040+57])
                                            Pexp_ifthenelse
                                            expression (middle_end/closure/closure.ml[1325,51272+7]..[1325,51272+23])
                                              Pexp_ident "initially_closed" (middle_end/closure/closure.ml[1325,51272+7]..[1325,51272+23])
                                            expression (middle_end/closure/closure.ml[1325,51272+29]..[1341,51951+7])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/closure/closure.ml[1326,51307+10]..[1326,51307+14])
                                                    Ppat_var "snap" (middle_end/closure/closure.ml[1326,51307+10]..[1326,51307+14])
                                                  expression (middle_end/closure/closure.ml[1326,51307+17]..[1326,51307+38])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[1326,51307+17]..[1326,51307+35])
                                                      Pexp_ident "Compilenv.snapshot" (middle_end/closure/closure.ml[1326,51307+17]..[1326,51307+35])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[1326,51307+36]..[1326,51307+38])
                                                          Pexp_construct "()" (middle_end/closure/closure.ml[1326,51307+36]..[1326,51307+38])
                                                          None
                                                    ]
                                              ]
                                              expression (middle_end/closure/closure.ml[1327,51349+6]..[1340,51893+57])
                                                Pexp_try
                                                expression (middle_end/closure/closure.ml[1327,51349+10]..[1327,51349+59])
                                                  Pexp_apply
                                                  expression (middle_end/closure/closure.ml[1327,51349+10]..[1327,51349+19])
                                                    Pexp_ident "List.map2" (middle_end/closure/closure.ml[1327,51349+10]..[1327,51349+19])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[1327,51349+20]..[1327,51349+31])
                                                        Pexp_ident "clos_fundef" (middle_end/closure/closure.ml[1327,51349+20]..[1327,51349+31])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[1327,51349+32]..[1327,51349+46])
                                                        Pexp_ident "uncurried_defs" (middle_end/closure/closure.ml[1327,51349+32]..[1327,51349+46])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/closure/closure.ml[1327,51349+47]..[1327,51349+59])
                                                        Pexp_ident "clos_offsets" (middle_end/closure/closure.ml[1327,51349+47]..[1327,51349+59])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (middle_end/closure/closure.ml[1328,51409+11]..[1328,51409+20])
                                                      Ppat_construct "NotClosed" (middle_end/closure/closure.ml[1328,51409+11]..[1328,51409+20])
                                                      None
                                                    expression (middle_end/closure/closure.ml[1332,51612+8]..[1340,51893+57])
                                                      Pexp_sequence
                                                      expression (middle_end/closure/closure.ml[1332,51612+8]..[1332,51612+32])
                                                        Pexp_apply
                                                        expression (middle_end/closure/closure.ml[1332,51612+8]..[1332,51612+27])
                                                          Pexp_ident "Compilenv.backtrack" (middle_end/closure/closure.ml[1332,51612+8]..[1332,51612+27])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[1332,51612+28]..[1332,51612+32])
                                                              Pexp_ident "snap" (middle_end/closure/closure.ml[1332,51612+28]..[1332,51612+32])
                                                        ]
                                                      expression (middle_end/closure/closure.ml[1333,51660+8]..[1340,51893+57])
                                                        Pexp_sequence
                                                        expression (middle_end/closure/closure.ml[1333,51660+8]..[1338,51837+24])
                                                          Pexp_apply
                                                          expression (middle_end/closure/closure.ml[1333,51660+8]..[1333,51660+17])
                                                            Pexp_ident "List.iter" (middle_end/closure/closure.ml[1333,51660+8]..[1333,51660+17])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[1334,51678+10]..[1337,51825+11])
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (middle_end/closure/closure.ml[1334,51678+15]..[1334,51678+60])
                                                                  Ppat_tuple
                                                                  [
                                                                    pattern (middle_end/closure/closure.ml[1334,51678+16]..[1334,51678+19])
                                                                      Ppat_var "_id" (middle_end/closure/closure.ml[1334,51678+16]..[1334,51678+19])
                                                                    pattern (middle_end/closure/closure.ml[1334,51678+21]..[1334,51678+28])
                                                                      Ppat_var "_params" (middle_end/closure/closure.ml[1334,51678+21]..[1334,51678+28])
                                                                    pattern (middle_end/closure/closure.ml[1334,51678+30]..[1334,51678+37])
                                                                      Ppat_var "_return" (middle_end/closure/closure.ml[1334,51678+30]..[1334,51678+37])
                                                                    pattern (middle_end/closure/closure.ml[1334,51678+39]..[1334,51678+44])
                                                                      Ppat_var "_body" (middle_end/closure/closure.ml[1334,51678+39]..[1334,51678+44])
                                                                    pattern (middle_end/closure/closure.ml[1334,51678+46]..[1334,51678+53])
                                                                      Ppat_var "fundesc" (middle_end/closure/closure.ml[1334,51678+46]..[1334,51678+53])
                                                                    pattern (middle_end/closure/closure.ml[1334,51678+55]..[1334,51678+59])
                                                                      Ppat_var "_dbg" (middle_end/closure/closure.ml[1334,51678+55]..[1334,51678+59])
                                                                  ]
                                                                expression (middle_end/closure/closure.ml[1335,51742+13]..[1336,51784+40])
                                                                  Pexp_sequence
                                                                  expression (middle_end/closure/closure.ml[1335,51742+13]..[1335,51742+40])
                                                                    Pexp_setfield
                                                                    expression (middle_end/closure/closure.ml[1335,51742+13]..[1335,51742+20])
                                                                      Pexp_ident "fundesc" (middle_end/closure/closure.ml[1335,51742+13]..[1335,51742+20])
                                                                    "fun_closed" (middle_end/closure/closure.ml[1335,51742+21]..[1335,51742+31])
                                                                    expression (middle_end/closure/closure.ml[1335,51742+35]..[1335,51742+40])
                                                                      Pexp_construct "false" (middle_end/closure/closure.ml[1335,51742+35]..[1335,51742+40])
                                                                      None
                                                                  expression (middle_end/closure/closure.ml[1336,51784+13]..[1336,51784+39])
                                                                    Pexp_setfield
                                                                    expression (middle_end/closure/closure.ml[1336,51784+13]..[1336,51784+20])
                                                                      Pexp_ident "fundesc" (middle_end/closure/closure.ml[1336,51784+13]..[1336,51784+20])
                                                                    "fun_inline" (middle_end/closure/closure.ml[1336,51784+21]..[1336,51784+31])
                                                                    expression (middle_end/closure/closure.ml[1336,51784+35]..[1336,51784+39])
                                                                      Pexp_construct "None" (middle_end/closure/closure.ml[1336,51784+35]..[1336,51784+39])
                                                                      None
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[1338,51837+10]..[1338,51837+24])
                                                                Pexp_ident "uncurried_defs" (middle_end/closure/closure.ml[1338,51837+10]..[1338,51837+24])
                                                          ]
                                                        expression (middle_end/closure/closure.ml[1339,51863+8]..[1340,51893+57])
                                                          Pexp_sequence
                                                          expression (middle_end/closure/closure.ml[1339,51863+8]..[1339,51863+28])
                                                            Pexp_apply
                                                            expression (middle_end/closure/closure.ml[1339,51863+20]..[1339,51863+22])
                                                              Pexp_ident ":=" (middle_end/closure/closure.ml[1339,51863+20]..[1339,51863+22])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/closure/closure.ml[1339,51863+8]..[1339,51863+19])
                                                                  Pexp_ident "useless_env" (middle_end/closure/closure.ml[1339,51863+8]..[1339,51863+19])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/closure/closure.ml[1339,51863+23]..[1339,51863+28])
                                                                  Pexp_construct "false" (middle_end/closure/closure.ml[1339,51863+23]..[1339,51863+28])
                                                                  None
                                                            ]
                                                          expression (middle_end/closure/closure.ml[1340,51893+8]..[1340,51893+57])
                                                            Pexp_apply
                                                            expression (middle_end/closure/closure.ml[1340,51893+8]..[1340,51893+17])
                                                              Pexp_ident "List.map2" (middle_end/closure/closure.ml[1340,51893+8]..[1340,51893+17])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/closure/closure.ml[1340,51893+18]..[1340,51893+29])
                                                                  Pexp_ident "clos_fundef" (middle_end/closure/closure.ml[1340,51893+18]..[1340,51893+29])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/closure/closure.ml[1340,51893+30]..[1340,51893+44])
                                                                  Pexp_ident "uncurried_defs" (middle_end/closure/closure.ml[1340,51893+30]..[1340,51893+44])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/closure/closure.ml[1340,51893+45]..[1340,51893+57])
                                                                  Pexp_ident "clos_offsets" (middle_end/closure/closure.ml[1340,51893+45]..[1340,51893+57])
                                                            ]
                                                ]
                                            Some
                                              expression (middle_end/closure/closure.ml[1343,52040+8]..[1343,52040+57])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[1343,52040+8]..[1343,52040+17])
                                                  Pexp_ident "List.map2" (middle_end/closure/closure.ml[1343,52040+8]..[1343,52040+17])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[1343,52040+18]..[1343,52040+29])
                                                      Pexp_ident "clos_fundef" (middle_end/closure/closure.ml[1343,52040+18]..[1343,52040+29])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[1343,52040+30]..[1343,52040+44])
                                                      Pexp_ident "uncurried_defs" (middle_end/closure/closure.ml[1343,52040+30]..[1343,52040+44])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[1343,52040+45]..[1343,52040+57])
                                                      Pexp_ident "clos_offsets" (middle_end/closure/closure.ml[1343,52040+45]..[1343,52040+57])
                                                ]
                                      ]
                                      expression (middle_end/closure/closure.ml[1346,52134+2]..[1353,52468+9])
                                        Pexp_sequence
                                        expression (middle_end/closure/closure.ml[1346,52134+2]..[1346,52134+29])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[1346,52134+2]..[1346,52134+6])
                                            Pexp_ident "decr" (middle_end/closure/closure.ml[1346,52134+2]..[1346,52134+6])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[1346,52134+7]..[1346,52134+29])
                                                Pexp_ident "function_nesting_depth" (middle_end/closure/closure.ml[1346,52134+7]..[1346,52134+29])
                                          ]
                                        expression (middle_end/closure/closure.ml[1349,52277+2]..[1353,52468+9])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/closure/closure.ml[1349,52277+6]..[1349,52277+19])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/closure/closure.ml[1349,52277+7]..[1349,52277+11])
                                                    Ppat_var "clos" (middle_end/closure/closure.ml[1349,52277+7]..[1349,52277+11])
                                                  pattern (middle_end/closure/closure.ml[1349,52277+13]..[1349,52277+18])
                                                    Ppat_var "infos" (middle_end/closure/closure.ml[1349,52277+13]..[1349,52277+18])
                                                ]
                                              expression (middle_end/closure/closure.ml[1349,52277+22]..[1349,52277+47])
                                                Pexp_apply
                                                expression (middle_end/closure/closure.ml[1349,52277+22]..[1349,52277+32])
                                                  Pexp_ident "List.split" (middle_end/closure/closure.ml[1349,52277+22]..[1349,52277+32])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/closure/closure.ml[1349,52277+33]..[1349,52277+47])
                                                      Pexp_ident "clos_info_list" (middle_end/closure/closure.ml[1349,52277+33]..[1349,52277+47])
                                                ]
                                          ]
                                          expression (middle_end/closure/closure.ml[1350,52328+2]..[1353,52468+9])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (middle_end/closure/closure.ml[1350,52328+6]..[1350,52328+8])
                                                  Ppat_var "fv" (middle_end/closure/closure.ml[1350,52328+6]..[1350,52328+8])
                                                expression (middle_end/closure/closure.ml[1350,52328+11]..[1350,52328+42])
                                                  Pexp_ifthenelse
                                                  expression (middle_end/closure/closure.ml[1350,52328+14]..[1350,52328+26])
                                                    Pexp_apply
                                                    expression (middle_end/closure/closure.ml[1350,52328+14]..[1350,52328+15])
                                                      Pexp_ident "!" (middle_end/closure/closure.ml[1350,52328+14]..[1350,52328+15])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/closure/closure.ml[1350,52328+15]..[1350,52328+26])
                                                          Pexp_ident "useless_env" (middle_end/closure/closure.ml[1350,52328+15]..[1350,52328+26])
                                                    ]
                                                  expression (middle_end/closure/closure.ml[1350,52328+32]..[1350,52328+34])
                                                    Pexp_construct "[]" (middle_end/closure/closure.ml[1350,52328+32]..[1350,52328+34])
                                                    None
                                                  Some
                                                    expression (middle_end/closure/closure.ml[1350,52328+40]..[1350,52328+42])
                                                      Pexp_ident "fv" (middle_end/closure/closure.ml[1350,52328+40]..[1350,52328+42])
                                            ]
                                            expression (middle_end/closure/closure.ml[1351,52374+2]..[1353,52468+9])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/closure/closure.ml[1351,52374+3]..[1352,52392+74])
                                                  Pexp_construct "Uclosure" (middle_end/closure/closure.ml[1351,52374+3]..[1351,52374+11])
                                                  Some
                                                    expression (middle_end/closure/closure.ml[1351,52374+11]..[1352,52392+74])
                                                      Pexp_tuple
                                                      [
                                                        expression (middle_end/closure/closure.ml[1351,52374+12]..[1351,52374+16])
                                                          Pexp_ident "clos" (middle_end/closure/closure.ml[1351,52374+12]..[1351,52374+16])
                                                        expression (middle_end/closure/closure.ml[1352,52392+12]..[1352,52392+73])
                                                          Pexp_apply
                                                          expression (middle_end/closure/closure.ml[1352,52392+12]..[1352,52392+20])
                                                            Pexp_ident "List.map" (middle_end/closure/closure.ml[1352,52392+12]..[1352,52392+20])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[1352,52392+21]..[1352,52392+70])
                                                                Pexp_apply
                                                                expression (middle_end/closure/closure.ml[1352,52392+22]..[1352,52392+31])
                                                                  Pexp_ident "close_var" (middle_end/closure/closure.ml[1352,52392+22]..[1352,52392+31])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/closure/closure.ml[1352,52392+32]..[1352,52392+69])
                                                                      Pexp_record
                                                                      [
"backend" (middle_end/closure/closure.ml[1352,52392+34]..[1352,52392+41]) ghost
  expression (middle_end/closure/closure.ml[1352,52392+34]..[1352,52392+41])
    Pexp_ident "backend" (middle_end/closure/closure.ml[1352,52392+34]..[1352,52392+41])
"fenv" (middle_end/closure/closure.ml[1352,52392+43]..[1352,52392+47]) ghost
  expression (middle_end/closure/closure.ml[1352,52392+43]..[1352,52392+47])
    Pexp_ident "fenv" (middle_end/closure/closure.ml[1352,52392+43]..[1352,52392+47])
"cenv" (middle_end/closure/closure.ml[1352,52392+49]..[1352,52392+53]) ghost
  expression (middle_end/closure/closure.ml[1352,52392+49]..[1352,52392+53])
    Pexp_ident "cenv" (middle_end/closure/closure.ml[1352,52392+49]..[1352,52392+53])
"mutable_vars" (middle_end/closure/closure.ml[1352,52392+55]..[1352,52392+67]) ghost
  expression (middle_end/closure/closure.ml[1352,52392+55]..[1352,52392+67])
    Pexp_ident "mutable_vars" (middle_end/closure/closure.ml[1352,52392+55]..[1352,52392+67])
                                                                      ]
                                                                      None
                                                                ]
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[1352,52392+71]..[1352,52392+73])
                                                                Pexp_ident "fv" (middle_end/closure/closure.ml[1352,52392+71]..[1352,52392+73])
                                                          ]
                                                      ]
                                                expression (middle_end/closure/closure.ml[1353,52468+3]..[1353,52468+8])
                                                  Pexp_ident "infos" (middle_end/closure/closure.ml[1353,52468+3]..[1353,52468+8])
                                              ]
      <def>
        pattern (middle_end/closure/closure.ml[1357,52523+4]..[1357,52523+22])
          Ppat_var "close_one_function" (middle_end/closure/closure.ml[1357,52523+4]..[1357,52523+22])
        expression (middle_end/closure/closure.ml[1357,52523+23]..[1360,52668+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[1357,52523+23]..[1357,52523+26])
            Ppat_var "env" (middle_end/closure/closure.ml[1357,52523+23]..[1357,52523+26])
          expression (middle_end/closure/closure.ml[1357,52523+27]..[1360,52668+49]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[1357,52523+27]..[1357,52523+29])
              Ppat_var "id" (middle_end/closure/closure.ml[1357,52523+27]..[1357,52523+29])
            expression (middle_end/closure/closure.ml[1357,52523+30]..[1360,52668+49]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/closure/closure.ml[1357,52523+30]..[1357,52523+35])
                Ppat_var "funct" (middle_end/closure/closure.ml[1357,52523+30]..[1357,52523+35])
              expression (middle_end/closure/closure.ml[1358,52561+2]..[1360,52668+49])
                Pexp_match
                expression (middle_end/closure/closure.ml[1358,52561+8]..[1358,52561+39])
                  Pexp_apply
                  expression (middle_end/closure/closure.ml[1358,52561+8]..[1358,52561+23])
                    Pexp_ident "close_functions" (middle_end/closure/closure.ml[1358,52561+8]..[1358,52561+23])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure.ml[1358,52561+24]..[1358,52561+27])
                        Pexp_ident "env" (middle_end/closure/closure.ml[1358,52561+24]..[1358,52561+27])
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure.ml[1358,52561+28]..[1358,52561+39])
                        Pexp_construct "::" (middle_end/closure/closure.ml[1358,52561+29]..[1358,52561+39]) ghost
                        Some
                          expression (middle_end/closure/closure.ml[1358,52561+29]..[1358,52561+39]) ghost
                            Pexp_tuple
                            [
                              expression (middle_end/closure/closure.ml[1358,52561+29]..[1358,52561+38])
                                Pexp_tuple
                                [
                                  expression (middle_end/closure/closure.ml[1358,52561+29]..[1358,52561+31])
                                    Pexp_ident "id" (middle_end/closure/closure.ml[1358,52561+29]..[1358,52561+31])
                                  expression (middle_end/closure/closure.ml[1358,52561+33]..[1358,52561+38])
                                    Pexp_ident "funct" (middle_end/closure/closure.ml[1358,52561+33]..[1358,52561+38])
                                ]
                              expression (middle_end/closure/closure.ml[1358,52561+38]..[1358,52561+39]) ghost
                                Pexp_construct "[]" (middle_end/closure/closure.ml[1358,52561+38]..[1358,52561+39]) ghost
                                None
                            ]
                  ]
                [
                  <case>
                    pattern (middle_end/closure/closure.ml[1359,52606+4]..[1359,52606+31])
                      Ppat_tuple
                      [
                        pattern (middle_end/closure/closure.ml[1359,52606+5]..[1359,52606+9])
                          Ppat_var "clos" (middle_end/closure/closure.ml[1359,52606+5]..[1359,52606+9])
                        pattern (middle_end/closure/closure.ml[1359,52606+11]..[1359,52606+30])
                          Ppat_construct "::" (middle_end/closure/closure.ml[1359,52606+26]..[1359,52606+28])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[1359,52606+11]..[1359,52606+30]) ghost
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[1359,52606+11]..[1359,52606+25])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[1359,52606+12]..[1359,52606+13])
                                      Ppat_var "i" (middle_end/closure/closure.ml[1359,52606+12]..[1359,52606+13])
                                    pattern (middle_end/closure/closure.ml[1359,52606+15]..[1359,52606+16])
                                      Ppat_any
                                    pattern (middle_end/closure/closure.ml[1359,52606+18]..[1359,52606+24])
                                      Ppat_var "approx" (middle_end/closure/closure.ml[1359,52606+18]..[1359,52606+24])
                                  ]
                                pattern (middle_end/closure/closure.ml[1359,52606+29]..[1359,52606+30])
                                  Ppat_any
                              ]
                      ]
                    <when>
                      expression (middle_end/closure/closure.ml[1359,52606+37]..[1359,52606+43])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1359,52606+40]..[1359,52606+41])
                          Pexp_ident "=" (middle_end/closure/closure.ml[1359,52606+40]..[1359,52606+41])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1359,52606+37]..[1359,52606+39])
                              Pexp_ident "id" (middle_end/closure/closure.ml[1359,52606+37]..[1359,52606+39])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1359,52606+42]..[1359,52606+43])
                              Pexp_ident "i" (middle_end/closure/closure.ml[1359,52606+42]..[1359,52606+43])
                        ]
                    expression (middle_end/closure/closure.ml[1359,52606+47]..[1359,52606+61])
                      Pexp_tuple
                      [
                        expression (middle_end/closure/closure.ml[1359,52606+48]..[1359,52606+52])
                          Pexp_ident "clos" (middle_end/closure/closure.ml[1359,52606+48]..[1359,52606+52])
                        expression (middle_end/closure/closure.ml[1359,52606+54]..[1359,52606+60])
                          Pexp_ident "approx" (middle_end/closure/closure.ml[1359,52606+54]..[1359,52606+60])
                      ]
                  <case>
                    pattern (middle_end/closure/closure.ml[1360,52668+4]..[1360,52668+5])
                      Ppat_any
                    expression (middle_end/closure/closure.ml[1360,52668+9]..[1360,52668+49])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[1360,52668+9]..[1360,52668+20])
                        Pexp_ident "fatal_error" (middle_end/closure/closure.ml[1360,52668+9]..[1360,52668+20])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[1360,52668+21]..[1360,52668+49])
                            Pexp_constant PConst_string("Closure.close_one_function",(middle_end/closure/closure.ml[1360,52668+22]..[1360,52668+48]),None)
                      ]
                ]
      <def>
        pattern (middle_end/closure/closure.ml[1364,52741+4]..[1364,52741+16])
          Ppat_var "close_switch" (middle_end/closure/closure.ml[1364,52741+4]..[1364,52741+16])
        expression (middle_end/closure/closure.ml[1364,52741+17]..[1410,54140+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[1364,52741+17]..[1364,52741+20])
            Ppat_var "env" (middle_end/closure/closure.ml[1364,52741+17]..[1364,52741+20])
          expression (middle_end/closure/closure.ml[1364,52741+21]..[1410,54140+32]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/closure/closure.ml[1364,52741+21]..[1364,52741+26])
              Ppat_var "cases" (middle_end/closure/closure.ml[1364,52741+21]..[1364,52741+26])
            expression (middle_end/closure/closure.ml[1364,52741+27]..[1410,54140+32]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/closure/closure.ml[1364,52741+27]..[1364,52741+35])
                Ppat_var "num_keys" (middle_end/closure/closure.ml[1364,52741+27]..[1364,52741+35])
              expression (middle_end/closure/closure.ml[1364,52741+36]..[1410,54140+32]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (middle_end/closure/closure.ml[1364,52741+36]..[1364,52741+43])
                  Ppat_var "default" (middle_end/closure/closure.ml[1364,52741+36]..[1364,52741+43])
                expression (middle_end/closure/closure.ml[1365,52787+2]..[1410,54140+32])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/closure/closure.ml[1365,52787+6]..[1365,52787+12])
                        Ppat_var "ncases" (middle_end/closure/closure.ml[1365,52787+6]..[1365,52787+12])
                      expression (middle_end/closure/closure.ml[1365,52787+15]..[1365,52787+32])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1365,52787+15]..[1365,52787+26])
                          Pexp_ident "List.length" (middle_end/closure/closure.ml[1365,52787+15]..[1365,52787+26])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1365,52787+27]..[1365,52787+32])
                              Pexp_ident "cases" (middle_end/closure/closure.ml[1365,52787+27]..[1365,52787+32])
                        ]
                  ]
                  expression (middle_end/closure/closure.ml[1366,52823+2]..[1410,54140+32])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/closure/closure.ml[1366,52823+6]..[1366,52823+11])
                          Ppat_var "index" (middle_end/closure/closure.ml[1366,52823+6]..[1366,52823+11])
                        expression (middle_end/closure/closure.ml[1366,52823+14]..[1366,52823+35])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1366,52823+14]..[1366,52823+24])
                            Pexp_ident "Array.make" (middle_end/closure/closure.ml[1366,52823+14]..[1366,52823+24])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1366,52823+25]..[1366,52823+33])
                                Pexp_ident "num_keys" (middle_end/closure/closure.ml[1366,52823+25]..[1366,52823+33])
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1366,52823+34]..[1366,52823+35])
                                Pexp_constant PConst_int (0,None)
                          ]
                      <def>
                        pattern (middle_end/closure/closure.ml[1367,52859+6]..[1367,52859+11])
                          Ppat_var "store" (middle_end/closure/closure.ml[1367,52859+6]..[1367,52859+11])
                        expression (middle_end/closure/closure.ml[1367,52859+14]..[1367,52859+32])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1367,52859+14]..[1367,52859+29])
                            Pexp_ident "Storer.mk_store" (middle_end/closure/closure.ml[1367,52859+14]..[1367,52859+29])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1367,52859+30]..[1367,52859+32])
                                Pexp_construct "()" (middle_end/closure/closure.ml[1367,52859+30]..[1367,52859+32])
                                None
                          ]
                    ]
                    expression (middle_end/closure/closure.ml[1370,52923+2]..[1410,54140+32])
                      Pexp_sequence
                      expression (middle_end/closure/closure.ml[1370,52923+2]..[1374,53043+5])
                        Pexp_match
                        expression (middle_end/closure/closure.ml[1370,52923+14]..[1370,52923+21])
                          Pexp_ident "default" (middle_end/closure/closure.ml[1370,52923+14]..[1370,52923+21])
                        [
                          <case>
                            pattern (middle_end/closure/closure.ml[1371,52950+4]..[1371,52950+12])
                              Ppat_construct "Some" (middle_end/closure/closure.ml[1371,52950+4]..[1371,52950+8])
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[1371,52950+9]..[1371,52950+12])
                                  Ppat_var "def" (middle_end/closure/closure.ml[1371,52950+9]..[1371,52950+12])
                            <when>
                              expression (middle_end/closure/closure.ml[1371,52950+18]..[1371,52950+35])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1371,52950+25]..[1371,52950+26])
                                  Pexp_ident "<" (middle_end/closure/closure.ml[1371,52950+25]..[1371,52950+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1371,52950+18]..[1371,52950+24])
                                      Pexp_ident "ncases" (middle_end/closure/closure.ml[1371,52950+18]..[1371,52950+24])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1371,52950+27]..[1371,52950+35])
                                      Pexp_ident "num_keys" (middle_end/closure/closure.ml[1371,52950+27]..[1371,52950+35])
                                ]
                            expression (middle_end/closure/closure.ml[1372,52989+6]..[1372,52989+41])
                              Pexp_assert
                              expression (middle_end/closure/closure.ml[1372,52989+13]..[1372,52989+41])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1372,52989+37]..[1372,52989+38])
                                  Pexp_ident "=" (middle_end/closure/closure.ml[1372,52989+37]..[1372,52989+38])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1372,52989+14]..[1372,52989+36])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[1372,52989+14]..[1372,52989+29])
                                        Pexp_field
                                        expression (middle_end/closure/closure.ml[1372,52989+14]..[1372,52989+19])
                                          Pexp_ident "store" (middle_end/closure/closure.ml[1372,52989+14]..[1372,52989+19])
                                        "act_store" (middle_end/closure/closure.ml[1372,52989+20]..[1372,52989+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[1372,52989+30]..[1372,52989+32])
                                            Pexp_construct "()" (middle_end/closure/closure.ml[1372,52989+30]..[1372,52989+32])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[1372,52989+33]..[1372,52989+36])
                                            Pexp_ident "def" (middle_end/closure/closure.ml[1372,52989+33]..[1372,52989+36])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1372,52989+39]..[1372,52989+40])
                                      Pexp_constant PConst_int (0,None)
                                ]
                          <case>
                            pattern (middle_end/closure/closure.ml[1373,53031+4]..[1373,53031+5])
                              Ppat_any
                            expression (middle_end/closure/closure.ml[1373,53031+9]..[1373,53031+11])
                              Pexp_construct "()" (middle_end/closure/closure.ml[1373,53031+9]..[1373,53031+11])
                              None
                        ]
                      expression (middle_end/closure/closure.ml[1376,53080+2]..[1410,54140+32])
                        Pexp_sequence
                        expression (middle_end/closure/closure.ml[1376,53080+2]..[1379,53158+9])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1376,53080+2]..[1376,53080+11])
                            Pexp_ident "List.iter" (middle_end/closure/closure.ml[1376,53080+2]..[1376,53080+11])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1377,53092+4]..[1378,53114+43])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/closure/closure.ml[1377,53092+9]..[1377,53092+18])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[1377,53092+10]..[1377,53092+13])
                                      Ppat_var "key" (middle_end/closure/closure.ml[1377,53092+10]..[1377,53092+13])
                                    pattern (middle_end/closure/closure.ml[1377,53092+14]..[1377,53092+17])
                                      Ppat_var "lam" (middle_end/closure/closure.ml[1377,53092+14]..[1377,53092+17])
                                  ]
                                expression (middle_end/closure/closure.ml[1378,53114+5]..[1378,53114+42])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1378,53114+5]..[1378,53114+42]) ghost
                                    Pexp_ident "Array.set" (middle_end/closure/closure.ml[1378,53114+5]..[1378,53114+42]) ghost
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1378,53114+5]..[1378,53114+10])
                                        Pexp_ident "index" (middle_end/closure/closure.ml[1378,53114+5]..[1378,53114+10])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1378,53114+12]..[1378,53114+15])
                                        Pexp_ident "key" (middle_end/closure/closure.ml[1378,53114+12]..[1378,53114+15])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1378,53114+20]..[1378,53114+42])
                                        Pexp_apply
                                        expression (middle_end/closure/closure.ml[1378,53114+20]..[1378,53114+35])
                                          Pexp_field
                                          expression (middle_end/closure/closure.ml[1378,53114+20]..[1378,53114+25])
                                            Pexp_ident "store" (middle_end/closure/closure.ml[1378,53114+20]..[1378,53114+25])
                                          "act_store" (middle_end/closure/closure.ml[1378,53114+26]..[1378,53114+35])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1378,53114+36]..[1378,53114+38])
                                              Pexp_construct "()" (middle_end/closure/closure.ml[1378,53114+36]..[1378,53114+38])
                                              None
                                          <arg>
                                          Nolabel
                                            expression (middle_end/closure/closure.ml[1378,53114+39]..[1378,53114+42])
                                              Pexp_ident "lam" (middle_end/closure/closure.ml[1378,53114+39]..[1378,53114+42])
                                        ]
                                  ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1379,53158+4]..[1379,53158+9])
                                Pexp_ident "cases" (middle_end/closure/closure.ml[1379,53158+4]..[1379,53158+9])
                          ]
                        expression (middle_end/closure/closure.ml[1383,53262+2]..[1410,54140+32])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[1383,53262+6]..[1383,53262+10])
                                Ppat_var "acts" (middle_end/closure/closure.ml[1383,53262+6]..[1383,53262+10])
                              expression (middle_end/closure/closure.ml[1383,53262+13]..[1383,53262+36])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1383,53262+13]..[1383,53262+33])
                                  Pexp_field
                                  expression (middle_end/closure/closure.ml[1383,53262+13]..[1383,53262+18])
                                    Pexp_ident "store" (middle_end/closure/closure.ml[1383,53262+13]..[1383,53262+18])
                                  "act_get_shared" (middle_end/closure/closure.ml[1383,53262+19]..[1383,53262+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1383,53262+34]..[1383,53262+36])
                                      Pexp_construct "()" (middle_end/closure/closure.ml[1383,53262+34]..[1383,53262+36])
                                      None
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[1384,53302+2]..[1410,54140+32])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/closure/closure.ml[1384,53302+6]..[1384,53302+8])
                                  Ppat_var "hs" (middle_end/closure/closure.ml[1384,53302+6]..[1384,53302+8])
                                expression (middle_end/closure/closure.ml[1384,53302+11]..[1384,53302+27])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1384,53302+11]..[1384,53302+14])
                                    Pexp_ident "ref" (middle_end/closure/closure.ml[1384,53302+11]..[1384,53302+14])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1384,53302+15]..[1384,53302+27])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/closure/closure.ml[1384,53302+20]..[1384,53302+21])
                                          Ppat_var "e" (middle_end/closure/closure.ml[1384,53302+20]..[1384,53302+21])
                                        expression (middle_end/closure/closure.ml[1384,53302+25]..[1384,53302+26])
                                          Pexp_ident "e" (middle_end/closure/closure.ml[1384,53302+25]..[1384,53302+26])
                                  ]
                            ]
                            expression (middle_end/closure/closure.ml[1387,53358+2]..[1410,54140+32])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/closure/closure.ml[1387,53358+6]..[1387,53358+13])
                                    Ppat_var "actions" (middle_end/closure/closure.ml[1387,53358+6]..[1387,53358+13])
                                  expression (middle_end/closure/closure.ml[1388,53374+4]..[1407,54036+10])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[1388,53374+4]..[1388,53374+13])
                                      Pexp_ident "Array.map" (middle_end/closure/closure.ml[1388,53374+4]..[1388,53374+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1389,53388+6]..[1406,54004+31])
                                          Pexp_function
                                          [
                                            <case>
                                              pattern (middle_end/closure/closure.ml[1390,53404+10]..[1390,53404+56])
                                                Ppat_or
                                                pattern (middle_end/closure/closure.ml[1390,53404+10]..[1390,53404+20])
                                                  Ppat_construct "Single" (middle_end/closure/closure.ml[1390,53404+10]..[1390,53404+16])
                                                  Some
                                                    []
                                                    pattern (middle_end/closure/closure.ml[1390,53404+17]..[1390,53404+20])
                                                      Ppat_var "lam" (middle_end/closure/closure.ml[1390,53404+17]..[1390,53404+20])
                                                pattern (middle_end/closure/closure.ml[1390,53404+21]..[1390,53404+56])
                                                  Ppat_construct "Shared" (middle_end/closure/closure.ml[1390,53404+21]..[1390,53404+27])
                                                  Some
                                                    []
                                                    pattern (middle_end/closure/closure.ml[1390,53404+28]..[1390,53404+56])
                                                      Ppat_alias "lam" (middle_end/closure/closure.ml[1390,53404+52]..[1390,53404+55])
                                                      pattern (middle_end/closure/closure.ml[1390,53404+29]..[1390,53404+48])
                                                        Ppat_construct "Lstaticraise" (middle_end/closure/closure.ml[1390,53404+29]..[1390,53404+41])
                                                        Some
                                                          []
                                                          pattern (middle_end/closure/closure.ml[1390,53404+42]..[1390,53404+48])
                                                            Ppat_tuple
                                                            [
                                                              pattern (middle_end/closure/closure.ml[1390,53404+43]..[1390,53404+44])
                                                                Ppat_any
                                                              pattern (middle_end/closure/closure.ml[1390,53404+45]..[1390,53404+47])
                                                                Ppat_construct "[]" (middle_end/closure/closure.ml[1390,53404+45]..[1390,53404+47])
                                                                None
                                                            ]
                                              expression (middle_end/closure/closure.ml[1391,53464+12]..[1392,53506+16])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/closure/closure.ml[1391,53464+16]..[1391,53464+22])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/closure/closure.ml[1391,53464+16]..[1391,53464+20])
                                                          Ppat_var "ulam" (middle_end/closure/closure.ml[1391,53464+16]..[1391,53464+20])
                                                        pattern (middle_end/closure/closure.ml[1391,53464+21]..[1391,53464+22])
                                                          Ppat_any
                                                      ]
                                                    expression (middle_end/closure/closure.ml[1391,53464+25]..[1391,53464+38])
                                                      Pexp_apply
                                                      expression (middle_end/closure/closure.ml[1391,53464+25]..[1391,53464+30])
                                                        Pexp_ident "close" (middle_end/closure/closure.ml[1391,53464+25]..[1391,53464+30])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/closure/closure.ml[1391,53464+31]..[1391,53464+34])
                                                            Pexp_ident "env" (middle_end/closure/closure.ml[1391,53464+31]..[1391,53464+34])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/closure/closure.ml[1391,53464+35]..[1391,53464+38])
                                                            Pexp_ident "lam" (middle_end/closure/closure.ml[1391,53464+35]..[1391,53464+38])
                                                      ]
                                                ]
                                                expression (middle_end/closure/closure.ml[1392,53506+12]..[1392,53506+16])
                                                  Pexp_ident "ulam" (middle_end/closure/closure.ml[1392,53506+12]..[1392,53506+16])
                                            <case>
                                              pattern (middle_end/closure/closure.ml[1393,53523+10]..[1393,53523+20])
                                                Ppat_construct "Shared" (middle_end/closure/closure.ml[1393,53523+10]..[1393,53523+16])
                                                Some
                                                  []
                                                  pattern (middle_end/closure/closure.ml[1393,53523+17]..[1393,53523+20])
                                                    Ppat_var "lam" (middle_end/closure/closure.ml[1393,53523+17]..[1393,53523+20])
                                              expression (middle_end/closure/closure.ml[1394,53547+12]..[1406,54004+30])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/closure/closure.ml[1394,53547+16]..[1394,53547+22])
                                                      Ppat_tuple
                                                      [
                                                        pattern (middle_end/closure/closure.ml[1394,53547+16]..[1394,53547+20])
                                                          Ppat_var "ulam" (middle_end/closure/closure.ml[1394,53547+16]..[1394,53547+20])
                                                        pattern (middle_end/closure/closure.ml[1394,53547+21]..[1394,53547+22])
                                                          Ppat_any
                                                      ]
                                                    expression (middle_end/closure/closure.ml[1394,53547+25]..[1394,53547+38])
                                                      Pexp_apply
                                                      expression (middle_end/closure/closure.ml[1394,53547+25]..[1394,53547+30])
                                                        Pexp_ident "close" (middle_end/closure/closure.ml[1394,53547+25]..[1394,53547+30])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/closure/closure.ml[1394,53547+31]..[1394,53547+34])
                                                            Pexp_ident "env" (middle_end/closure/closure.ml[1394,53547+31]..[1394,53547+34])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/closure/closure.ml[1394,53547+35]..[1394,53547+38])
                                                            Pexp_ident "lam" (middle_end/closure/closure.ml[1394,53547+35]..[1394,53547+38])
                                                      ]
                                                ]
                                                expression (middle_end/closure/closure.ml[1395,53589+12]..[1406,54004+30])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/closure/closure.ml[1395,53589+16]..[1395,53589+17])
                                                        Ppat_var "i" (middle_end/closure/closure.ml[1395,53589+16]..[1395,53589+17])
                                                      expression (middle_end/closure/closure.ml[1395,53589+20]..[1395,53589+39])
                                                        Pexp_apply
                                                        expression (middle_end/closure/closure.ml[1395,53589+20]..[1395,53589+36])
                                                          Pexp_ident "next_raise_count" (middle_end/closure/closure.ml[1395,53589+20]..[1395,53589+36])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[1395,53589+37]..[1395,53589+39])
                                                              Pexp_construct "()" (middle_end/closure/closure.ml[1395,53589+37]..[1395,53589+39])
                                                              None
                                                        ]
                                                  ]
                                                  expression (middle_end/closure/closure.ml[1404,53919+12]..[1406,54004+30])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/closure/closure.ml[1404,53919+16]..[1404,53919+19])
                                                          Ppat_var "ohs" (middle_end/closure/closure.ml[1404,53919+16]..[1404,53919+19])
                                                        expression (middle_end/closure/closure.ml[1404,53919+22]..[1404,53919+25])
                                                          Pexp_apply
                                                          expression (middle_end/closure/closure.ml[1404,53919+22]..[1404,53919+23])
                                                            Pexp_ident "!" (middle_end/closure/closure.ml[1404,53919+22]..[1404,53919+23])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/closure/closure.ml[1404,53919+23]..[1404,53919+25])
                                                                Pexp_ident "hs" (middle_end/closure/closure.ml[1404,53919+23]..[1404,53919+25])
                                                          ]
                                                    ]
                                                    expression (middle_end/closure/closure.ml[1405,53948+12]..[1406,54004+30])
                                                      Pexp_sequence
                                                      expression (middle_end/closure/closure.ml[1405,53948+12]..[1405,53948+53])
                                                        Pexp_apply
                                                        expression (middle_end/closure/closure.ml[1405,53948+15]..[1405,53948+17])
                                                          Pexp_ident ":=" (middle_end/closure/closure.ml[1405,53948+15]..[1405,53948+17])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[1405,53948+12]..[1405,53948+14])
                                                              Pexp_ident "hs" (middle_end/closure/closure.ml[1405,53948+12]..[1405,53948+14])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/closure/closure.ml[1405,53948+18]..[1405,53948+53])
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (middle_end/closure/closure.ml[1405,53948+23]..[1405,53948+24])
                                                                Ppat_var "e" (middle_end/closure/closure.ml[1405,53948+23]..[1405,53948+24])
                                                              expression (middle_end/closure/closure.ml[1405,53948+28]..[1405,53948+52])
                                                                Pexp_construct "Ucatch" (middle_end/closure/closure.ml[1405,53948+28]..[1405,53948+34])
                                                                Some
                                                                  expression (middle_end/closure/closure.ml[1405,53948+35]..[1405,53948+52])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (middle_end/closure/closure.ml[1405,53948+36]..[1405,53948+37])
Pexp_ident "i" (middle_end/closure/closure.ml[1405,53948+36]..[1405,53948+37])
                                                                      expression (middle_end/closure/closure.ml[1405,53948+38]..[1405,53948+40])
Pexp_construct "[]" (middle_end/closure/closure.ml[1405,53948+38]..[1405,53948+40])
None
                                                                      expression (middle_end/closure/closure.ml[1405,53948+41]..[1405,53948+46])
Pexp_apply
expression (middle_end/closure/closure.ml[1405,53948+41]..[1405,53948+44])
  Pexp_ident "ohs" (middle_end/closure/closure.ml[1405,53948+41]..[1405,53948+44])
[
  <arg>
  Nolabel
    expression (middle_end/closure/closure.ml[1405,53948+45]..[1405,53948+46])
      Pexp_ident "e" (middle_end/closure/closure.ml[1405,53948+45]..[1405,53948+46])
]
                                                                      expression (middle_end/closure/closure.ml[1405,53948+47]..[1405,53948+51])
Pexp_ident "ulam" (middle_end/closure/closure.ml[1405,53948+47]..[1405,53948+51])
                                                                    ]
                                                        ]
                                                      expression (middle_end/closure/closure.ml[1406,54004+12]..[1406,54004+30])
                                                        Pexp_construct "Ustaticfail" (middle_end/closure/closure.ml[1406,54004+12]..[1406,54004+23])
                                                        Some
                                                          expression (middle_end/closure/closure.ml[1406,54004+24]..[1406,54004+30])
                                                            Pexp_tuple
                                                            [
                                                              expression (middle_end/closure/closure.ml[1406,54004+25]..[1406,54004+26])
                                                                Pexp_ident "i" (middle_end/closure/closure.ml[1406,54004+25]..[1406,54004+26])
                                                              expression (middle_end/closure/closure.ml[1406,54004+27]..[1406,54004+29])
                                                                Pexp_construct "[]" (middle_end/closure/closure.ml[1406,54004+27]..[1406,54004+29])
                                                                None
                                                            ]
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1407,54036+6]..[1407,54036+10])
                                          Pexp_ident "acts" (middle_end/closure/closure.ml[1407,54036+6]..[1407,54036+10])
                                    ]
                              ]
                              expression (middle_end/closure/closure.ml[1408,54050+2]..[1410,54140+32])
                                Pexp_match
                                expression (middle_end/closure/closure.ml[1408,54050+8]..[1408,54050+15])
                                  Pexp_ident "actions" (middle_end/closure/closure.ml[1408,54050+8]..[1408,54050+15])
                                [
                                  <case>
                                    pattern (middle_end/closure/closure.ml[1409,54071+4]..[1409,54071+9])
                                      Ppat_array
                                      []
                                    expression (middle_end/closure/closure.ml[1409,54071+13]..[1409,54071+30])
                                      Pexp_tuple
                                      [
                                        expression (middle_end/closure/closure.ml[1409,54071+13]..[1409,54071+18])
                                          Pexp_array
                                          []
                                        expression (middle_end/closure/closure.ml[1409,54071+20]..[1409,54071+25])
                                          Pexp_array
                                          []
                                        expression (middle_end/closure/closure.ml[1409,54071+27]..[1409,54071+30])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[1409,54071+27]..[1409,54071+28])
                                            Pexp_ident "!" (middle_end/closure/closure.ml[1409,54071+27]..[1409,54071+28])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[1409,54071+28]..[1409,54071+30])
                                                Pexp_ident "hs" (middle_end/closure/closure.ml[1409,54071+28]..[1409,54071+30])
                                          ]
                                      ]
                                  <case>
                                    pattern (middle_end/closure/closure.ml[1410,54140+4]..[1410,54140+5])
                                      Ppat_any
                                    expression (middle_end/closure/closure.ml[1410,54140+13]..[1410,54140+32])
                                      Pexp_tuple
                                      [
                                        expression (middle_end/closure/closure.ml[1410,54140+13]..[1410,54140+18])
                                          Pexp_ident "index" (middle_end/closure/closure.ml[1410,54140+13]..[1410,54140+18])
                                        expression (middle_end/closure/closure.ml[1410,54140+20]..[1410,54140+27])
                                          Pexp_ident "actions" (middle_end/closure/closure.ml[1410,54140+20]..[1410,54140+27])
                                        expression (middle_end/closure/closure.ml[1410,54140+29]..[1410,54140+32])
                                          Pexp_apply
                                          expression (middle_end/closure/closure.ml[1410,54140+29]..[1410,54140+30])
                                            Pexp_ident "!" (middle_end/closure/closure.ml[1410,54140+29]..[1410,54140+30])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/closure/closure.ml[1410,54140+30]..[1410,54140+32])
                                                Pexp_ident "hs" (middle_end/closure/closure.ml[1410,54140+30]..[1410,54140+32])
                                          ]
                                      ]
                                ]
    ]
  structure_item (middle_end/closure/closure.ml[1415,54232+0]..[1470,56261+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[1415,54232+4]..[1415,54232+41])
          Ppat_var "collect_exported_structured_constants" (middle_end/closure/closure.ml[1415,54232+4]..[1415,54232+41])
        expression (middle_end/closure/closure.ml[1415,54232+42]..[1470,56261+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[1415,54232+42]..[1415,54232+43])
            Ppat_var "a" (middle_end/closure/closure.ml[1415,54232+42]..[1415,54232+43])
          expression (middle_end/closure/closure.ml[1416,54278+2]..[1470,56261+10])
            Pexp_let Rec
            [
              <def>
                pattern (middle_end/closure/closure.ml[1416,54278+10]..[1416,54278+16])
                  Ppat_var "approx" (middle_end/closure/closure.ml[1416,54278+10]..[1416,54278+16])
                expression (middle_end/closure/closure.ml[1416,54278+19]..[1425,54533+48])
                  Pexp_function
                  [
                    <case>
                      pattern (middle_end/closure/closure.ml[1417,54306+6]..[1417,54306+27])
                        Ppat_construct "Value_closure" (middle_end/closure/closure.ml[1417,54306+6]..[1417,54306+19])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1417,54306+20]..[1417,54306+27])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1417,54306+21]..[1417,54306+23])
                                Ppat_var "fd" (middle_end/closure/closure.ml[1417,54306+21]..[1417,54306+23])
                              pattern (middle_end/closure/closure.ml[1417,54306+25]..[1417,54306+26])
                                Ppat_var "a" (middle_end/closure/closure.ml[1417,54306+25]..[1417,54306+26])
                            ]
                      expression (middle_end/closure/closure.ml[1418,54337+8]..[1422,54447+11])
                        Pexp_sequence
                        expression (middle_end/closure/closure.ml[1418,54337+8]..[1418,54337+16])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1418,54337+8]..[1418,54337+14])
                            Pexp_ident "approx" (middle_end/closure/closure.ml[1418,54337+8]..[1418,54337+14])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1418,54337+15]..[1418,54337+16])
                                Pexp_ident "a" (middle_end/closure/closure.ml[1418,54337+15]..[1418,54337+16])
                          ]
                        expression (middle_end/closure/closure.ml[1419,54355+8]..[1422,54447+11])
                          Pexp_match
                          expression (middle_end/closure/closure.ml[1419,54355+20]..[1419,54355+33])
                            Pexp_field
                            expression (middle_end/closure/closure.ml[1419,54355+20]..[1419,54355+22])
                              Pexp_ident "fd" (middle_end/closure/closure.ml[1419,54355+20]..[1419,54355+22])
                            "fun_inline" (middle_end/closure/closure.ml[1419,54355+23]..[1419,54355+33])
                          [
                            <case>
                              pattern (middle_end/closure/closure.ml[1420,54394+10]..[1420,54394+21])
                                Ppat_construct "Some" (middle_end/closure/closure.ml[1420,54394+10]..[1420,54394+14])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[1420,54394+15]..[1420,54394+21])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[1420,54394+16]..[1420,54394+17])
                                        Ppat_any
                                      pattern (middle_end/closure/closure.ml[1420,54394+19]..[1420,54394+20])
                                        Ppat_var "u" (middle_end/closure/closure.ml[1420,54394+19]..[1420,54394+20])
                                    ]
                              expression (middle_end/closure/closure.ml[1420,54394+25]..[1420,54394+31])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1420,54394+25]..[1420,54394+29])
                                  Pexp_ident "ulam" (middle_end/closure/closure.ml[1420,54394+25]..[1420,54394+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1420,54394+30]..[1420,54394+31])
                                      Pexp_ident "u" (middle_end/closure/closure.ml[1420,54394+30]..[1420,54394+31])
                                ]
                            <case>
                              pattern (middle_end/closure/closure.ml[1421,54426+10]..[1421,54426+14])
                                Ppat_construct "None" (middle_end/closure/closure.ml[1421,54426+10]..[1421,54426+14])
                                None
                              expression (middle_end/closure/closure.ml[1421,54426+18]..[1421,54426+20])
                                Pexp_construct "()" (middle_end/closure/closure.ml[1421,54426+18]..[1421,54426+20])
                                None
                          ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1423,54459+6]..[1423,54459+19])
                        Ppat_construct "Value_tuple" (middle_end/closure/closure.ml[1423,54459+6]..[1423,54459+17])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1423,54459+18]..[1423,54459+19])
                            Ppat_var "a" (middle_end/closure/closure.ml[1423,54459+18]..[1423,54459+19])
                      expression (middle_end/closure/closure.ml[1423,54459+23]..[1423,54459+42])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1423,54459+23]..[1423,54459+33])
                          Pexp_ident "Array.iter" (middle_end/closure/closure.ml[1423,54459+23]..[1423,54459+33])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1423,54459+34]..[1423,54459+40])
                              Pexp_ident "approx" (middle_end/closure/closure.ml[1423,54459+34]..[1423,54459+40])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1423,54459+41]..[1423,54459+42])
                              Pexp_ident "a" (middle_end/closure/closure.ml[1423,54459+41]..[1423,54459+42])
                        ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1424,54502+6]..[1424,54502+19])
                        Ppat_construct "Value_const" (middle_end/closure/closure.ml[1424,54502+6]..[1424,54502+17])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1424,54502+18]..[1424,54502+19])
                            Ppat_var "c" (middle_end/closure/closure.ml[1424,54502+18]..[1424,54502+19])
                      expression (middle_end/closure/closure.ml[1424,54502+23]..[1424,54502+30])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1424,54502+23]..[1424,54502+28])
                          Pexp_ident "const" (middle_end/closure/closure.ml[1424,54502+23]..[1424,54502+28])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1424,54502+29]..[1424,54502+30])
                              Pexp_ident "c" (middle_end/closure/closure.ml[1424,54502+29]..[1424,54502+30])
                        ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1425,54533+6]..[1425,54533+42])
                        Ppat_or
                        pattern (middle_end/closure/closure.ml[1425,54533+6]..[1425,54533+19])
                          Ppat_construct "Value_unknown" (middle_end/closure/closure.ml[1425,54533+6]..[1425,54533+19])
                          None
                        pattern (middle_end/closure/closure.ml[1425,54533+22]..[1425,54533+42])
                          Ppat_construct "Value_global_field" (middle_end/closure/closure.ml[1425,54533+22]..[1425,54533+40])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[1425,54533+41]..[1425,54533+42])
                              Ppat_any
                      expression (middle_end/closure/closure.ml[1425,54533+46]..[1425,54533+48])
                        Pexp_construct "()" (middle_end/closure/closure.ml[1425,54533+46]..[1425,54533+48])
                        None
                  ]
              <def>
                pattern (middle_end/closure/closure.ml[1426,54582+6]..[1426,54582+11])
                  Ppat_var "const" (middle_end/closure/closure.ml[1426,54582+6]..[1426,54582+11])
                expression (middle_end/closure/closure.ml[1426,54582+14]..[1431,54782+24])
                  Pexp_function
                  [
                    <case>
                      pattern (middle_end/closure/closure.ml[1427,54605+6]..[1427,54605+30])
                        Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[1427,54605+6]..[1427,54605+16])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1427,54605+17]..[1427,54605+30])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1427,54605+18]..[1427,54605+19])
                                Ppat_var "s" (middle_end/closure/closure.ml[1427,54605+18]..[1427,54605+19])
                              pattern (middle_end/closure/closure.ml[1427,54605+21]..[1427,54605+29])
                                Ppat_construct "Some" (middle_end/closure/closure.ml[1427,54605+22]..[1427,54605+26])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[1427,54605+27]..[1427,54605+28])
                                    Ppat_var "c" (middle_end/closure/closure.ml[1427,54605+27]..[1427,54605+28])
                            ]
                      expression (middle_end/closure/closure.ml[1428,54639+8]..[1429,54682+29])
                        Pexp_sequence
                        expression (middle_end/closure/closure.ml[1428,54639+8]..[1428,54639+41])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1428,54639+8]..[1428,54639+39])
                            Pexp_ident "Compilenv.add_exported_constant" (middle_end/closure/closure.ml[1428,54639+8]..[1428,54639+39])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1428,54639+40]..[1428,54639+41])
                                Pexp_ident "s" (middle_end/closure/closure.ml[1428,54639+40]..[1428,54639+41])
                          ]
                        expression (middle_end/closure/closure.ml[1429,54682+8]..[1429,54682+29])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1429,54682+8]..[1429,54682+27])
                            Pexp_ident "structured_constant" (middle_end/closure/closure.ml[1429,54682+8]..[1429,54682+27])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1429,54682+28]..[1429,54682+29])
                                Pexp_ident "c" (middle_end/closure/closure.ml[1429,54682+28]..[1429,54682+29])
                          ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1430,54712+6]..[1430,54712+27])
                        Ppat_construct "Uconst_ref" (middle_end/closure/closure.ml[1430,54712+6]..[1430,54712+16])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1430,54712+17]..[1430,54712+27])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1430,54712+18]..[1430,54712+20])
                                Ppat_var "_s" (middle_end/closure/closure.ml[1430,54712+18]..[1430,54712+20])
                              pattern (middle_end/closure/closure.ml[1430,54712+22]..[1430,54712+26])
                                Ppat_construct "None" (middle_end/closure/closure.ml[1430,54712+22]..[1430,54712+26])
                                None
                            ]
                      expression (middle_end/closure/closure.ml[1430,54712+31]..[1430,54712+43])
                        Pexp_assert
                        expression (middle_end/closure/closure.ml[1430,54712+38]..[1430,54712+43])
                          Pexp_construct "false" (middle_end/closure/closure.ml[1430,54712+38]..[1430,54712+43])
                          None
                    <case>
                      pattern (middle_end/closure/closure.ml[1431,54782+6]..[1431,54782+18])
                        Ppat_construct "Uconst_int" (middle_end/closure/closure.ml[1431,54782+6]..[1431,54782+16])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1431,54782+17]..[1431,54782+18])
                            Ppat_any
                      expression (middle_end/closure/closure.ml[1431,54782+22]..[1431,54782+24])
                        Pexp_construct "()" (middle_end/closure/closure.ml[1431,54782+22]..[1431,54782+24])
                        None
                  ]
              <def>
                pattern (middle_end/closure/closure.ml[1432,54807+6]..[1432,54807+25])
                  Ppat_var "structured_constant" (middle_end/closure/closure.ml[1432,54807+6]..[1432,54807+25])
                expression (middle_end/closure/closure.ml[1432,54807+28]..[1437,55024+38])
                  Pexp_function
                  [
                    <case>
                      pattern (middle_end/closure/closure.ml[1433,54844+6]..[1433,54844+26])
                        Ppat_construct "Uconst_block" (middle_end/closure/closure.ml[1433,54844+6]..[1433,54844+18])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1433,54844+19]..[1433,54844+26])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1433,54844+20]..[1433,54844+21])
                                Ppat_any
                              pattern (middle_end/closure/closure.ml[1433,54844+23]..[1433,54844+25])
                                Ppat_var "ul" (middle_end/closure/closure.ml[1433,54844+23]..[1433,54844+25])
                            ]
                      expression (middle_end/closure/closure.ml[1433,54844+30]..[1433,54844+48])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1433,54844+30]..[1433,54844+39])
                          Pexp_ident "List.iter" (middle_end/closure/closure.ml[1433,54844+30]..[1433,54844+39])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1433,54844+40]..[1433,54844+45])
                              Pexp_ident "const" (middle_end/closure/closure.ml[1433,54844+40]..[1433,54844+45])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1433,54844+46]..[1433,54844+48])
                              Pexp_ident "ul" (middle_end/closure/closure.ml[1433,54844+46]..[1433,54844+48])
                        ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1434,54893+6]..[1436,54973+44])
                        Ppat_or
                        pattern (middle_end/closure/closure.ml[1434,54893+6]..[1436,54973+26])
                          Ppat_or
                          pattern (middle_end/closure/closure.ml[1434,54893+6]..[1435,54931+41])
                            Ppat_or
                            pattern (middle_end/closure/closure.ml[1434,54893+6]..[1435,54931+20])
                              Ppat_or
                              pattern (middle_end/closure/closure.ml[1434,54893+6]..[1434,54893+37])
                                Ppat_or
                                pattern (middle_end/closure/closure.ml[1434,54893+6]..[1434,54893+20])
                                  Ppat_construct "Uconst_float" (middle_end/closure/closure.ml[1434,54893+6]..[1434,54893+18])
                                  Some
                                    []
                                    pattern (middle_end/closure/closure.ml[1434,54893+19]..[1434,54893+20])
                                      Ppat_any
                                pattern (middle_end/closure/closure.ml[1434,54893+23]..[1434,54893+37])
                                  Ppat_construct "Uconst_int32" (middle_end/closure/closure.ml[1434,54893+23]..[1434,54893+35])
                                  Some
                                    []
                                    pattern (middle_end/closure/closure.ml[1434,54893+36]..[1434,54893+37])
                                      Ppat_any
                              pattern (middle_end/closure/closure.ml[1435,54931+6]..[1435,54931+20])
                                Ppat_construct "Uconst_int64" (middle_end/closure/closure.ml[1435,54931+6]..[1435,54931+18])
                                Some
                                  []
                                  pattern (middle_end/closure/closure.ml[1435,54931+19]..[1435,54931+20])
                                    Ppat_any
                            pattern (middle_end/closure/closure.ml[1435,54931+23]..[1435,54931+41])
                              Ppat_construct "Uconst_nativeint" (middle_end/closure/closure.ml[1435,54931+23]..[1435,54931+39])
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[1435,54931+40]..[1435,54931+41])
                                  Ppat_any
                          pattern (middle_end/closure/closure.ml[1436,54973+6]..[1436,54973+26])
                            Ppat_construct "Uconst_float_array" (middle_end/closure/closure.ml[1436,54973+6]..[1436,54973+24])
                            Some
                              []
                              pattern (middle_end/closure/closure.ml[1436,54973+25]..[1436,54973+26])
                                Ppat_any
                        pattern (middle_end/closure/closure.ml[1436,54973+29]..[1436,54973+44])
                          Ppat_construct "Uconst_string" (middle_end/closure/closure.ml[1436,54973+29]..[1436,54973+42])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[1436,54973+43]..[1436,54973+44])
                              Ppat_any
                      expression (middle_end/closure/closure.ml[1436,54973+48]..[1436,54973+50])
                        Pexp_construct "()" (middle_end/closure/closure.ml[1436,54973+48]..[1436,54973+50])
                        None
                    <case>
                      pattern (middle_end/closure/closure.ml[1437,55024+6]..[1437,55024+22])
                        Ppat_construct "Uconst_closure" (middle_end/closure/closure.ml[1437,55024+6]..[1437,55024+20])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1437,55024+21]..[1437,55024+22])
                            Ppat_any
                      expression (middle_end/closure/closure.ml[1437,55024+26]..[1437,55024+38])
                        Pexp_assert
                        expression (middle_end/closure/closure.ml[1437,55024+33]..[1437,55024+38])
                          Pexp_construct "false" (middle_end/closure/closure.ml[1437,55024+33]..[1437,55024+38])
                          None
                  ]
              <def>
                pattern (middle_end/closure/closure.ml[1438,55089+6]..[1438,55089+10])
                  Ppat_var "ulam" (middle_end/closure/closure.ml[1438,55089+6]..[1438,55089+10])
                expression (middle_end/closure/closure.ml[1438,55089+13]..[1468,56231+24])
                  Pexp_function
                  [
                    <case>
                      pattern (middle_end/closure/closure.ml[1439,55111+6]..[1439,55111+12])
                        Ppat_construct "Uvar" (middle_end/closure/closure.ml[1439,55111+6]..[1439,55111+10])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1439,55111+11]..[1439,55111+12])
                            Ppat_any
                      expression (middle_end/closure/closure.ml[1439,55111+16]..[1439,55111+18])
                        Pexp_construct "()" (middle_end/closure/closure.ml[1439,55111+16]..[1439,55111+18])
                        None
                    <case>
                      pattern (middle_end/closure/closure.ml[1440,55130+6]..[1440,55130+14])
                        Ppat_construct "Uconst" (middle_end/closure/closure.ml[1440,55130+6]..[1440,55130+12])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1440,55130+13]..[1440,55130+14])
                            Ppat_var "c" (middle_end/closure/closure.ml[1440,55130+13]..[1440,55130+14])
                      expression (middle_end/closure/closure.ml[1440,55130+18]..[1440,55130+25])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1440,55130+18]..[1440,55130+23])
                          Pexp_ident "const" (middle_end/closure/closure.ml[1440,55130+18]..[1440,55130+23])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1440,55130+24]..[1440,55130+25])
                              Pexp_ident "c" (middle_end/closure/closure.ml[1440,55130+24]..[1440,55130+25])
                        ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1441,55156+6]..[1441,55156+30])
                        Ppat_construct "Udirect_apply" (middle_end/closure/closure.ml[1441,55156+6]..[1441,55156+19])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1441,55156+20]..[1441,55156+30])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1441,55156+21]..[1441,55156+22])
                                Ppat_any
                              pattern (middle_end/closure/closure.ml[1441,55156+24]..[1441,55156+26])
                                Ppat_var "ul" (middle_end/closure/closure.ml[1441,55156+24]..[1441,55156+26])
                              pattern (middle_end/closure/closure.ml[1441,55156+28]..[1441,55156+29])
                                Ppat_any
                            ]
                      expression (middle_end/closure/closure.ml[1441,55156+34]..[1441,55156+51])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1441,55156+34]..[1441,55156+43])
                          Pexp_ident "List.iter" (middle_end/closure/closure.ml[1441,55156+34]..[1441,55156+43])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1441,55156+44]..[1441,55156+48])
                              Pexp_ident "ulam" (middle_end/closure/closure.ml[1441,55156+44]..[1441,55156+48])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1441,55156+49]..[1441,55156+51])
                              Pexp_ident "ul" (middle_end/closure/closure.ml[1441,55156+49]..[1441,55156+51])
                        ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1442,55208+6]..[1442,55208+31])
                        Ppat_construct "Ugeneric_apply" (middle_end/closure/closure.ml[1442,55208+6]..[1442,55208+20])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1442,55208+21]..[1442,55208+31])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1442,55208+22]..[1442,55208+23])
                                Ppat_var "u" (middle_end/closure/closure.ml[1442,55208+22]..[1442,55208+23])
                              pattern (middle_end/closure/closure.ml[1442,55208+25]..[1442,55208+27])
                                Ppat_var "ul" (middle_end/closure/closure.ml[1442,55208+25]..[1442,55208+27])
                              pattern (middle_end/closure/closure.ml[1442,55208+29]..[1442,55208+30])
                                Ppat_any
                            ]
                      expression (middle_end/closure/closure.ml[1442,55208+35]..[1442,55208+60])
                        Pexp_sequence
                        expression (middle_end/closure/closure.ml[1442,55208+35]..[1442,55208+41])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1442,55208+35]..[1442,55208+39])
                            Pexp_ident "ulam" (middle_end/closure/closure.ml[1442,55208+35]..[1442,55208+39])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1442,55208+40]..[1442,55208+41])
                                Pexp_ident "u" (middle_end/closure/closure.ml[1442,55208+40]..[1442,55208+41])
                          ]
                        expression (middle_end/closure/closure.ml[1442,55208+43]..[1442,55208+60])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1442,55208+43]..[1442,55208+52])
                            Pexp_ident "List.iter" (middle_end/closure/closure.ml[1442,55208+43]..[1442,55208+52])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1442,55208+53]..[1442,55208+57])
                                Pexp_ident "ulam" (middle_end/closure/closure.ml[1442,55208+53]..[1442,55208+57])
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1442,55208+58]..[1442,55208+60])
                                Pexp_ident "ul" (middle_end/closure/closure.ml[1442,55208+58]..[1442,55208+60])
                          ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1443,55269+6]..[1443,55269+23])
                        Ppat_construct "Uclosure" (middle_end/closure/closure.ml[1443,55269+6]..[1443,55269+14])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1443,55269+15]..[1443,55269+23])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1443,55269+16]..[1443,55269+18])
                                Ppat_var "fl" (middle_end/closure/closure.ml[1443,55269+16]..[1443,55269+18])
                              pattern (middle_end/closure/closure.ml[1443,55269+20]..[1443,55269+22])
                                Ppat_var "ul" (middle_end/closure/closure.ml[1443,55269+20]..[1443,55269+22])
                            ]
                      expression (middle_end/closure/closure.ml[1444,55296+8]..[1445,55341+25])
                        Pexp_sequence
                        expression (middle_end/closure/closure.ml[1444,55296+8]..[1444,55296+43])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1444,55296+8]..[1444,55296+17])
                            Pexp_ident "List.iter" (middle_end/closure/closure.ml[1444,55296+8]..[1444,55296+17])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1444,55296+18]..[1444,55296+40])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/closure/closure.ml[1444,55296+23]..[1444,55296+24])
                                  Ppat_var "f" (middle_end/closure/closure.ml[1444,55296+23]..[1444,55296+24])
                                expression (middle_end/closure/closure.ml[1444,55296+28]..[1444,55296+39])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1444,55296+28]..[1444,55296+32])
                                    Pexp_ident "ulam" (middle_end/closure/closure.ml[1444,55296+28]..[1444,55296+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1444,55296+33]..[1444,55296+39])
                                        Pexp_field
                                        expression (middle_end/closure/closure.ml[1444,55296+33]..[1444,55296+34])
                                          Pexp_ident "f" (middle_end/closure/closure.ml[1444,55296+33]..[1444,55296+34])
                                        "body" (middle_end/closure/closure.ml[1444,55296+35]..[1444,55296+39])
                                  ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1444,55296+41]..[1444,55296+43])
                                Pexp_ident "fl" (middle_end/closure/closure.ml[1444,55296+41]..[1444,55296+43])
                          ]
                        expression (middle_end/closure/closure.ml[1445,55341+8]..[1445,55341+25])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1445,55341+8]..[1445,55341+17])
                            Pexp_ident "List.iter" (middle_end/closure/closure.ml[1445,55341+8]..[1445,55341+17])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1445,55341+18]..[1445,55341+22])
                                Pexp_ident "ulam" (middle_end/closure/closure.ml[1445,55341+18]..[1445,55341+22])
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1445,55341+23]..[1445,55341+25])
                                Pexp_ident "ul" (middle_end/closure/closure.ml[1445,55341+23]..[1445,55341+25])
                          ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1446,55367+6]..[1446,55367+19])
                        Ppat_construct "Uoffset" (middle_end/closure/closure.ml[1446,55367+6]..[1446,55367+13])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1446,55367+13]..[1446,55367+19])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1446,55367+14]..[1446,55367+15])
                                Ppat_var "u" (middle_end/closure/closure.ml[1446,55367+14]..[1446,55367+15])
                              pattern (middle_end/closure/closure.ml[1446,55367+17]..[1446,55367+18])
                                Ppat_any
                            ]
                      expression (middle_end/closure/closure.ml[1446,55367+23]..[1446,55367+29])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1446,55367+23]..[1446,55367+27])
                          Pexp_ident "ulam" (middle_end/closure/closure.ml[1446,55367+23]..[1446,55367+27])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1446,55367+28]..[1446,55367+29])
                              Pexp_ident "u" (middle_end/closure/closure.ml[1446,55367+28]..[1446,55367+29])
                        ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1447,55397+6]..[1447,55397+35])
                        Ppat_construct "Ulet" (middle_end/closure/closure.ml[1447,55397+6]..[1447,55397+10])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1447,55397+11]..[1447,55397+35])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1447,55397+12]..[1447,55397+16])
                                Ppat_var "_str" (middle_end/closure/closure.ml[1447,55397+12]..[1447,55397+16])
                              pattern (middle_end/closure/closure.ml[1447,55397+18]..[1447,55397+23])
                                Ppat_var "_kind" (middle_end/closure/closure.ml[1447,55397+18]..[1447,55397+23])
                              pattern (middle_end/closure/closure.ml[1447,55397+25]..[1447,55397+26])
                                Ppat_any
                              pattern (middle_end/closure/closure.ml[1447,55397+28]..[1447,55397+30])
                                Ppat_var "u1" (middle_end/closure/closure.ml[1447,55397+28]..[1447,55397+30])
                              pattern (middle_end/closure/closure.ml[1447,55397+32]..[1447,55397+34])
                                Ppat_var "u2" (middle_end/closure/closure.ml[1447,55397+32]..[1447,55397+34])
                            ]
                      expression (middle_end/closure/closure.ml[1447,55397+39]..[1447,55397+55])
                        Pexp_sequence
                        expression (middle_end/closure/closure.ml[1447,55397+39]..[1447,55397+46])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1447,55397+39]..[1447,55397+43])
                            Pexp_ident "ulam" (middle_end/closure/closure.ml[1447,55397+39]..[1447,55397+43])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1447,55397+44]..[1447,55397+46])
                                Pexp_ident "u1" (middle_end/closure/closure.ml[1447,55397+44]..[1447,55397+46])
                          ]
                        expression (middle_end/closure/closure.ml[1447,55397+48]..[1447,55397+55])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1447,55397+48]..[1447,55397+52])
                            Pexp_ident "ulam" (middle_end/closure/closure.ml[1447,55397+48]..[1447,55397+52])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1447,55397+53]..[1447,55397+55])
                                Pexp_ident "u2" (middle_end/closure/closure.ml[1447,55397+53]..[1447,55397+55])
                          ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1448,55453+6]..[1448,55453+20])
                        Ppat_construct "Uphantom_let" (middle_end/closure/closure.ml[1448,55453+6]..[1448,55453+18])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1448,55453+19]..[1448,55453+20])
                            Ppat_any
                      expression (middle_end/closure/closure.ml[1448,55453+24]..[1448,55453+42])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1448,55453+24]..[1448,55453+39])
                          Pexp_ident "no_phantom_lets" (middle_end/closure/closure.ml[1448,55453+24]..[1448,55453+39])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1448,55453+40]..[1448,55453+42])
                              Pexp_construct "()" (middle_end/closure/closure.ml[1448,55453+40]..[1448,55453+42])
                              None
                        ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1449,55496+6]..[1449,55496+20])
                        Ppat_construct "Uletrec" (middle_end/closure/closure.ml[1449,55496+6]..[1449,55496+13])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1449,55496+14]..[1449,55496+20])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1449,55496+15]..[1449,55496+16])
                                Ppat_var "l" (middle_end/closure/closure.ml[1449,55496+15]..[1449,55496+16])
                              pattern (middle_end/closure/closure.ml[1449,55496+18]..[1449,55496+19])
                                Ppat_var "u" (middle_end/closure/closure.ml[1449,55496+18]..[1449,55496+19])
                            ]
                      expression (middle_end/closure/closure.ml[1449,55496+24]..[1449,55496+66])
                        Pexp_sequence
                        expression (middle_end/closure/closure.ml[1449,55496+24]..[1449,55496+58])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1449,55496+24]..[1449,55496+33])
                            Pexp_ident "List.iter" (middle_end/closure/closure.ml[1449,55496+24]..[1449,55496+33])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1449,55496+34]..[1449,55496+56])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/closure/closure.ml[1449,55496+39]..[1449,55496+45])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[1449,55496+40]..[1449,55496+41])
                                      Ppat_any
                                    pattern (middle_end/closure/closure.ml[1449,55496+43]..[1449,55496+44])
                                      Ppat_var "u" (middle_end/closure/closure.ml[1449,55496+43]..[1449,55496+44])
                                  ]
                                expression (middle_end/closure/closure.ml[1449,55496+49]..[1449,55496+55])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1449,55496+49]..[1449,55496+53])
                                    Pexp_ident "ulam" (middle_end/closure/closure.ml[1449,55496+49]..[1449,55496+53])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1449,55496+54]..[1449,55496+55])
                                        Pexp_ident "u" (middle_end/closure/closure.ml[1449,55496+54]..[1449,55496+55])
                                  ]
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1449,55496+57]..[1449,55496+58])
                                Pexp_ident "l" (middle_end/closure/closure.ml[1449,55496+57]..[1449,55496+58])
                          ]
                        expression (middle_end/closure/closure.ml[1449,55496+60]..[1449,55496+66])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1449,55496+60]..[1449,55496+64])
                            Pexp_ident "ulam" (middle_end/closure/closure.ml[1449,55496+60]..[1449,55496+64])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1449,55496+65]..[1449,55496+66])
                                Pexp_ident "u" (middle_end/closure/closure.ml[1449,55496+65]..[1449,55496+66])
                          ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1450,55563+6]..[1450,55563+22])
                        Ppat_construct "Uprim" (middle_end/closure/closure.ml[1450,55563+6]..[1450,55563+11])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1450,55563+12]..[1450,55563+22])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1450,55563+13]..[1450,55563+14])
                                Ppat_any
                              pattern (middle_end/closure/closure.ml[1450,55563+16]..[1450,55563+18])
                                Ppat_var "ul" (middle_end/closure/closure.ml[1450,55563+16]..[1450,55563+18])
                              pattern (middle_end/closure/closure.ml[1450,55563+20]..[1450,55563+21])
                                Ppat_any
                            ]
                      expression (middle_end/closure/closure.ml[1450,55563+26]..[1450,55563+43])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1450,55563+26]..[1450,55563+35])
                          Pexp_ident "List.iter" (middle_end/closure/closure.ml[1450,55563+26]..[1450,55563+35])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1450,55563+36]..[1450,55563+40])
                              Pexp_ident "ulam" (middle_end/closure/closure.ml[1450,55563+36]..[1450,55563+40])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1450,55563+41]..[1450,55563+43])
                              Pexp_ident "ul" (middle_end/closure/closure.ml[1450,55563+41]..[1450,55563+43])
                        ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1451,55607+6]..[1451,55607+27])
                        Ppat_construct "Uswitch" (middle_end/closure/closure.ml[1451,55607+6]..[1451,55607+13])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1451,55607+14]..[1451,55607+27])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1451,55607+15]..[1451,55607+16])
                                Ppat_var "u" (middle_end/closure/closure.ml[1451,55607+15]..[1451,55607+16])
                              pattern (middle_end/closure/closure.ml[1451,55607+18]..[1451,55607+20])
                                Ppat_var "sl" (middle_end/closure/closure.ml[1451,55607+18]..[1451,55607+20])
                              pattern (middle_end/closure/closure.ml[1451,55607+22]..[1451,55607+26])
                                Ppat_var "_dbg" (middle_end/closure/closure.ml[1451,55607+22]..[1451,55607+26])
                            ]
                      expression (middle_end/closure/closure.ml[1452,55638+8]..[1454,55700+44])
                        Pexp_sequence
                        expression (middle_end/closure/closure.ml[1452,55638+8]..[1452,55638+14])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1452,55638+8]..[1452,55638+12])
                            Pexp_ident "ulam" (middle_end/closure/closure.ml[1452,55638+8]..[1452,55638+12])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1452,55638+13]..[1452,55638+14])
                                Pexp_ident "u" (middle_end/closure/closure.ml[1452,55638+13]..[1452,55638+14])
                          ]
                        expression (middle_end/closure/closure.ml[1453,55654+8]..[1454,55700+44])
                          Pexp_sequence
                          expression (middle_end/closure/closure.ml[1453,55654+8]..[1453,55654+44])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1453,55654+8]..[1453,55654+18])
                              Pexp_ident "Array.iter" (middle_end/closure/closure.ml[1453,55654+8]..[1453,55654+18])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1453,55654+19]..[1453,55654+23])
                                  Pexp_ident "ulam" (middle_end/closure/closure.ml[1453,55654+19]..[1453,55654+23])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1453,55654+24]..[1453,55654+44])
                                  Pexp_field
                                  expression (middle_end/closure/closure.ml[1453,55654+24]..[1453,55654+26])
                                    Pexp_ident "sl" (middle_end/closure/closure.ml[1453,55654+24]..[1453,55654+26])
                                  "us_actions_consts" (middle_end/closure/closure.ml[1453,55654+27]..[1453,55654+44])
                            ]
                          expression (middle_end/closure/closure.ml[1454,55700+8]..[1454,55700+44])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1454,55700+8]..[1454,55700+18])
                              Pexp_ident "Array.iter" (middle_end/closure/closure.ml[1454,55700+8]..[1454,55700+18])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1454,55700+19]..[1454,55700+23])
                                  Pexp_ident "ulam" (middle_end/closure/closure.ml[1454,55700+19]..[1454,55700+23])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1454,55700+24]..[1454,55700+44])
                                  Pexp_field
                                  expression (middle_end/closure/closure.ml[1454,55700+24]..[1454,55700+26])
                                    Pexp_ident "sl" (middle_end/closure/closure.ml[1454,55700+24]..[1454,55700+26])
                                  "us_actions_blocks" (middle_end/closure/closure.ml[1454,55700+27]..[1454,55700+44])
                            ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1455,55745+6]..[1455,55745+28])
                        Ppat_construct "Ustringswitch" (middle_end/closure/closure.ml[1455,55745+6]..[1455,55745+19])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1455,55745+20]..[1455,55745+28])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1455,55745+21]..[1455,55745+22])
                                Ppat_var "u" (middle_end/closure/closure.ml[1455,55745+21]..[1455,55745+22])
                              pattern (middle_end/closure/closure.ml[1455,55745+23]..[1455,55745+25])
                                Ppat_var "sw" (middle_end/closure/closure.ml[1455,55745+23]..[1455,55745+25])
                              pattern (middle_end/closure/closure.ml[1455,55745+26]..[1455,55745+27])
                                Ppat_var "d" (middle_end/closure/closure.ml[1455,55745+26]..[1455,55745+27])
                            ]
                      expression (middle_end/closure/closure.ml[1456,55777+8]..[1458,55843+26])
                        Pexp_sequence
                        expression (middle_end/closure/closure.ml[1456,55777+8]..[1456,55777+14])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1456,55777+8]..[1456,55777+12])
                            Pexp_ident "ulam" (middle_end/closure/closure.ml[1456,55777+8]..[1456,55777+12])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1456,55777+13]..[1456,55777+14])
                                Pexp_ident "u" (middle_end/closure/closure.ml[1456,55777+13]..[1456,55777+14])
                          ]
                        expression (middle_end/closure/closure.ml[1457,55794+8]..[1458,55843+26])
                          Pexp_sequence
                          expression (middle_end/closure/closure.ml[1457,55794+8]..[1457,55794+46])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1457,55794+8]..[1457,55794+17])
                              Pexp_ident "List.iter" (middle_end/closure/closure.ml[1457,55794+8]..[1457,55794+17])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1457,55794+18]..[1457,55794+43])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/closure/closure.ml[1457,55794+23]..[1457,55794+30])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/closure/closure.ml[1457,55794+24]..[1457,55794+25])
                                        Ppat_any
                                      pattern (middle_end/closure/closure.ml[1457,55794+26]..[1457,55794+29])
                                        Ppat_var "act" (middle_end/closure/closure.ml[1457,55794+26]..[1457,55794+29])
                                    ]
                                  expression (middle_end/closure/closure.ml[1457,55794+34]..[1457,55794+42])
                                    Pexp_apply
                                    expression (middle_end/closure/closure.ml[1457,55794+34]..[1457,55794+38])
                                      Pexp_ident "ulam" (middle_end/closure/closure.ml[1457,55794+34]..[1457,55794+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/closure/closure.ml[1457,55794+39]..[1457,55794+42])
                                          Pexp_ident "act" (middle_end/closure/closure.ml[1457,55794+39]..[1457,55794+42])
                                    ]
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1457,55794+44]..[1457,55794+46])
                                  Pexp_ident "sw" (middle_end/closure/closure.ml[1457,55794+44]..[1457,55794+46])
                            ]
                          expression (middle_end/closure/closure.ml[1458,55843+8]..[1458,55843+26])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1458,55843+8]..[1458,55843+19])
                              Pexp_ident "Option.iter" (middle_end/closure/closure.ml[1458,55843+8]..[1458,55843+19])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1458,55843+20]..[1458,55843+24])
                                  Pexp_ident "ulam" (middle_end/closure/closure.ml[1458,55843+20]..[1458,55843+24])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1458,55843+25]..[1458,55843+26])
                                  Pexp_ident "d" (middle_end/closure/closure.ml[1458,55843+25]..[1458,55843+26])
                            ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1459,55870+6]..[1459,55870+25])
                        Ppat_construct "Ustaticfail" (middle_end/closure/closure.ml[1459,55870+6]..[1459,55870+17])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1459,55870+18]..[1459,55870+25])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1459,55870+19]..[1459,55870+20])
                                Ppat_any
                              pattern (middle_end/closure/closure.ml[1459,55870+22]..[1459,55870+24])
                                Ppat_var "ul" (middle_end/closure/closure.ml[1459,55870+22]..[1459,55870+24])
                            ]
                      expression (middle_end/closure/closure.ml[1459,55870+29]..[1459,55870+46])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1459,55870+29]..[1459,55870+38])
                          Pexp_ident "List.iter" (middle_end/closure/closure.ml[1459,55870+29]..[1459,55870+38])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1459,55870+39]..[1459,55870+43])
                              Pexp_ident "ulam" (middle_end/closure/closure.ml[1459,55870+39]..[1459,55870+43])
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1459,55870+44]..[1459,55870+46])
                              Pexp_ident "ul" (middle_end/closure/closure.ml[1459,55870+44]..[1459,55870+46])
                        ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1460,55917+6]..[1463,55997+21])
                        Ppat_or
                        pattern (middle_end/closure/closure.ml[1460,55917+6]..[1462,55972+24])
                          Ppat_or
                          pattern (middle_end/closure/closure.ml[1460,55917+6]..[1461,55945+26])
                            Ppat_or
                            pattern (middle_end/closure/closure.ml[1460,55917+6]..[1460,55917+27])
                              Ppat_construct "Ucatch" (middle_end/closure/closure.ml[1460,55917+6]..[1460,55917+12])
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[1460,55917+13]..[1460,55917+27])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[1460,55917+14]..[1460,55917+15])
                                      Ppat_any
                                    pattern (middle_end/closure/closure.ml[1460,55917+17]..[1460,55917+18])
                                      Ppat_any
                                    pattern (middle_end/closure/closure.ml[1460,55917+20]..[1460,55917+22])
                                      Ppat_var "u1" (middle_end/closure/closure.ml[1460,55917+20]..[1460,55917+22])
                                    pattern (middle_end/closure/closure.ml[1460,55917+24]..[1460,55917+26])
                                      Ppat_var "u2" (middle_end/closure/closure.ml[1460,55917+24]..[1460,55917+26])
                                  ]
                            pattern (middle_end/closure/closure.ml[1461,55945+6]..[1461,55945+26])
                              Ppat_construct "Utrywith" (middle_end/closure/closure.ml[1461,55945+6]..[1461,55945+14])
                              Some
                                []
                                pattern (middle_end/closure/closure.ml[1461,55945+15]..[1461,55945+26])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/closure/closure.ml[1461,55945+16]..[1461,55945+18])
                                      Ppat_var "u1" (middle_end/closure/closure.ml[1461,55945+16]..[1461,55945+18])
                                    pattern (middle_end/closure/closure.ml[1461,55945+20]..[1461,55945+21])
                                      Ppat_any
                                    pattern (middle_end/closure/closure.ml[1461,55945+23]..[1461,55945+25])
                                      Ppat_var "u2" (middle_end/closure/closure.ml[1461,55945+23]..[1461,55945+25])
                                  ]
                          pattern (middle_end/closure/closure.ml[1462,55972+6]..[1462,55972+24])
                            Ppat_construct "Usequence" (middle_end/closure/closure.ml[1462,55972+6]..[1462,55972+15])
                            Some
                              []
                              pattern (middle_end/closure/closure.ml[1462,55972+16]..[1462,55972+24])
                                Ppat_tuple
                                [
                                  pattern (middle_end/closure/closure.ml[1462,55972+17]..[1462,55972+19])
                                    Ppat_var "u1" (middle_end/closure/closure.ml[1462,55972+17]..[1462,55972+19])
                                  pattern (middle_end/closure/closure.ml[1462,55972+21]..[1462,55972+23])
                                    Ppat_var "u2" (middle_end/closure/closure.ml[1462,55972+21]..[1462,55972+23])
                                ]
                        pattern (middle_end/closure/closure.ml[1463,55997+6]..[1463,55997+21])
                          Ppat_construct "Uwhile" (middle_end/closure/closure.ml[1463,55997+6]..[1463,55997+12])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[1463,55997+13]..[1463,55997+21])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[1463,55997+14]..[1463,55997+16])
                                  Ppat_var "u1" (middle_end/closure/closure.ml[1463,55997+14]..[1463,55997+16])
                                pattern (middle_end/closure/closure.ml[1463,55997+18]..[1463,55997+20])
                                  Ppat_var "u2" (middle_end/closure/closure.ml[1463,55997+18]..[1463,55997+20])
                              ]
                      expression (middle_end/closure/closure.ml[1463,55997+26]..[1463,55997+42])
                        Pexp_sequence
                        expression (middle_end/closure/closure.ml[1463,55997+26]..[1463,55997+33])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1463,55997+26]..[1463,55997+30])
                            Pexp_ident "ulam" (middle_end/closure/closure.ml[1463,55997+26]..[1463,55997+30])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1463,55997+31]..[1463,55997+33])
                                Pexp_ident "u1" (middle_end/closure/closure.ml[1463,55997+31]..[1463,55997+33])
                          ]
                        expression (middle_end/closure/closure.ml[1463,55997+35]..[1463,55997+42])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1463,55997+35]..[1463,55997+39])
                            Pexp_ident "ulam" (middle_end/closure/closure.ml[1463,55997+35]..[1463,55997+39])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1463,55997+40]..[1463,55997+42])
                                Pexp_ident "u2" (middle_end/closure/closure.ml[1463,55997+40]..[1463,55997+42])
                          ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1464,56040+6]..[1465,56071+29])
                        Ppat_or
                        pattern (middle_end/closure/closure.ml[1464,56040+6]..[1464,56040+30])
                          Ppat_construct "Uifthenelse" (middle_end/closure/closure.ml[1464,56040+6]..[1464,56040+17])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[1464,56040+18]..[1464,56040+30])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[1464,56040+19]..[1464,56040+21])
                                  Ppat_var "u1" (middle_end/closure/closure.ml[1464,56040+19]..[1464,56040+21])
                                pattern (middle_end/closure/closure.ml[1464,56040+23]..[1464,56040+25])
                                  Ppat_var "u2" (middle_end/closure/closure.ml[1464,56040+23]..[1464,56040+25])
                                pattern (middle_end/closure/closure.ml[1464,56040+27]..[1464,56040+29])
                                  Ppat_var "u3" (middle_end/closure/closure.ml[1464,56040+27]..[1464,56040+29])
                              ]
                        pattern (middle_end/closure/closure.ml[1465,56071+6]..[1465,56071+29])
                          Ppat_construct "Ufor" (middle_end/closure/closure.ml[1465,56071+6]..[1465,56071+10])
                          Some
                            []
                            pattern (middle_end/closure/closure.ml[1465,56071+11]..[1465,56071+29])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[1465,56071+12]..[1465,56071+13])
                                  Ppat_any
                                pattern (middle_end/closure/closure.ml[1465,56071+15]..[1465,56071+17])
                                  Ppat_var "u1" (middle_end/closure/closure.ml[1465,56071+15]..[1465,56071+17])
                                pattern (middle_end/closure/closure.ml[1465,56071+19]..[1465,56071+21])
                                  Ppat_var "u2" (middle_end/closure/closure.ml[1465,56071+19]..[1465,56071+21])
                                pattern (middle_end/closure/closure.ml[1465,56071+23]..[1465,56071+24])
                                  Ppat_any
                                pattern (middle_end/closure/closure.ml[1465,56071+26]..[1465,56071+28])
                                  Ppat_var "u3" (middle_end/closure/closure.ml[1465,56071+26]..[1465,56071+28])
                              ]
                      expression (middle_end/closure/closure.ml[1465,56071+33]..[1465,56071+58])
                        Pexp_sequence
                        expression (middle_end/closure/closure.ml[1465,56071+33]..[1465,56071+40])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1465,56071+33]..[1465,56071+37])
                            Pexp_ident "ulam" (middle_end/closure/closure.ml[1465,56071+33]..[1465,56071+37])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1465,56071+38]..[1465,56071+40])
                                Pexp_ident "u1" (middle_end/closure/closure.ml[1465,56071+38]..[1465,56071+40])
                          ]
                        expression (middle_end/closure/closure.ml[1465,56071+42]..[1465,56071+58])
                          Pexp_sequence
                          expression (middle_end/closure/closure.ml[1465,56071+42]..[1465,56071+49])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1465,56071+42]..[1465,56071+46])
                              Pexp_ident "ulam" (middle_end/closure/closure.ml[1465,56071+42]..[1465,56071+46])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1465,56071+47]..[1465,56071+49])
                                  Pexp_ident "u2" (middle_end/closure/closure.ml[1465,56071+47]..[1465,56071+49])
                            ]
                          expression (middle_end/closure/closure.ml[1465,56071+51]..[1465,56071+58])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1465,56071+51]..[1465,56071+55])
                              Pexp_ident "ulam" (middle_end/closure/closure.ml[1465,56071+51]..[1465,56071+55])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1465,56071+56]..[1465,56071+58])
                                  Pexp_ident "u3" (middle_end/closure/closure.ml[1465,56071+56]..[1465,56071+58])
                            ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1466,56130+6]..[1466,56130+20])
                        Ppat_construct "Uassign" (middle_end/closure/closure.ml[1466,56130+6]..[1466,56130+13])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1466,56130+14]..[1466,56130+20])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1466,56130+15]..[1466,56130+16])
                                Ppat_any
                              pattern (middle_end/closure/closure.ml[1466,56130+18]..[1466,56130+19])
                                Ppat_var "u" (middle_end/closure/closure.ml[1466,56130+18]..[1466,56130+19])
                            ]
                      expression (middle_end/closure/closure.ml[1466,56130+24]..[1466,56130+30])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1466,56130+24]..[1466,56130+28])
                          Pexp_ident "ulam" (middle_end/closure/closure.ml[1466,56130+24]..[1466,56130+28])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1466,56130+29]..[1466,56130+30])
                              Pexp_ident "u" (middle_end/closure/closure.ml[1466,56130+29]..[1466,56130+30])
                        ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1467,56161+6]..[1467,56161+30])
                        Ppat_construct "Usend" (middle_end/closure/closure.ml[1467,56161+6]..[1467,56161+11])
                        Some
                          []
                          pattern (middle_end/closure/closure.ml[1467,56161+12]..[1467,56161+30])
                            Ppat_tuple
                            [
                              pattern (middle_end/closure/closure.ml[1467,56161+13]..[1467,56161+14])
                                Ppat_any
                              pattern (middle_end/closure/closure.ml[1467,56161+16]..[1467,56161+18])
                                Ppat_var "u1" (middle_end/closure/closure.ml[1467,56161+16]..[1467,56161+18])
                              pattern (middle_end/closure/closure.ml[1467,56161+20]..[1467,56161+22])
                                Ppat_var "u2" (middle_end/closure/closure.ml[1467,56161+20]..[1467,56161+22])
                              pattern (middle_end/closure/closure.ml[1467,56161+24]..[1467,56161+26])
                                Ppat_var "ul" (middle_end/closure/closure.ml[1467,56161+24]..[1467,56161+26])
                              pattern (middle_end/closure/closure.ml[1467,56161+28]..[1467,56161+29])
                                Ppat_any
                            ]
                      expression (middle_end/closure/closure.ml[1467,56161+34]..[1467,56161+69])
                        Pexp_sequence
                        expression (middle_end/closure/closure.ml[1467,56161+34]..[1467,56161+41])
                          Pexp_apply
                          expression (middle_end/closure/closure.ml[1467,56161+34]..[1467,56161+38])
                            Pexp_ident "ulam" (middle_end/closure/closure.ml[1467,56161+34]..[1467,56161+38])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/closure/closure.ml[1467,56161+39]..[1467,56161+41])
                                Pexp_ident "u1" (middle_end/closure/closure.ml[1467,56161+39]..[1467,56161+41])
                          ]
                        expression (middle_end/closure/closure.ml[1467,56161+43]..[1467,56161+69])
                          Pexp_sequence
                          expression (middle_end/closure/closure.ml[1467,56161+43]..[1467,56161+50])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1467,56161+43]..[1467,56161+47])
                              Pexp_ident "ulam" (middle_end/closure/closure.ml[1467,56161+43]..[1467,56161+47])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1467,56161+48]..[1467,56161+50])
                                  Pexp_ident "u2" (middle_end/closure/closure.ml[1467,56161+48]..[1467,56161+50])
                            ]
                          expression (middle_end/closure/closure.ml[1467,56161+52]..[1467,56161+69])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1467,56161+52]..[1467,56161+61])
                              Pexp_ident "List.iter" (middle_end/closure/closure.ml[1467,56161+52]..[1467,56161+61])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1467,56161+62]..[1467,56161+66])
                                  Pexp_ident "ulam" (middle_end/closure/closure.ml[1467,56161+62]..[1467,56161+66])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1467,56161+67]..[1467,56161+69])
                                  Pexp_ident "ul" (middle_end/closure/closure.ml[1467,56161+67]..[1467,56161+69])
                            ]
                    <case>
                      pattern (middle_end/closure/closure.ml[1468,56231+6]..[1468,56231+18])
                        Ppat_construct "Uunreachable" (middle_end/closure/closure.ml[1468,56231+6]..[1468,56231+18])
                        None
                      expression (middle_end/closure/closure.ml[1468,56231+22]..[1468,56231+24])
                        Pexp_construct "()" (middle_end/closure/closure.ml[1468,56231+22]..[1468,56231+24])
                        None
                  ]
            ]
            expression (middle_end/closure/closure.ml[1470,56261+2]..[1470,56261+10])
              Pexp_apply
              expression (middle_end/closure/closure.ml[1470,56261+2]..[1470,56261+8])
                Pexp_ident "approx" (middle_end/closure/closure.ml[1470,56261+2]..[1470,56261+8])
              [
                <arg>
                Nolabel
                  expression (middle_end/closure/closure.ml[1470,56261+9]..[1470,56261+10])
                    Pexp_ident "a" (middle_end/closure/closure.ml[1470,56261+9]..[1470,56261+10])
              ]
    ]
  structure_item (middle_end/closure/closure.ml[1472,56273+0]..[1474,56313+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[1472,56273+4]..[1472,56273+9])
          Ppat_var "reset" (middle_end/closure/closure.ml[1472,56273+4]..[1472,56273+9])
        expression (middle_end/closure/closure.ml[1472,56273+10]..[1474,56313+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/closure/closure.ml[1472,56273+10]..[1472,56273+12])
            Ppat_construct "()" (middle_end/closure/closure.ml[1472,56273+10]..[1472,56273+12])
            None
          expression (middle_end/closure/closure.ml[1473,56288+2]..[1474,56313+29])
            Pexp_sequence
            expression (middle_end/closure/closure.ml[1473,56288+2]..[1473,56288+23])
              Pexp_apply
              expression (middle_end/closure/closure.ml[1473,56288+16]..[1473,56288+18])
                Pexp_ident ":=" (middle_end/closure/closure.ml[1473,56288+16]..[1473,56288+18])
              [
                <arg>
                Nolabel
                  expression (middle_end/closure/closure.ml[1473,56288+2]..[1473,56288+15])
                    Pexp_ident "global_approx" (middle_end/closure/closure.ml[1473,56288+2]..[1473,56288+15])
                <arg>
                Nolabel
                  expression (middle_end/closure/closure.ml[1473,56288+19]..[1473,56288+23])
                    Pexp_array
                    []
              ]
            expression (middle_end/closure/closure.ml[1474,56313+2]..[1474,56313+29])
              Pexp_apply
              expression (middle_end/closure/closure.ml[1474,56313+25]..[1474,56313+27])
                Pexp_ident ":=" (middle_end/closure/closure.ml[1474,56313+25]..[1474,56313+27])
              [
                <arg>
                Nolabel
                  expression (middle_end/closure/closure.ml[1474,56313+2]..[1474,56313+24])
                    Pexp_ident "function_nesting_depth" (middle_end/closure/closure.ml[1474,56313+2]..[1474,56313+24])
                <arg>
                Nolabel
                  expression (middle_end/closure/closure.ml[1474,56313+28]..[1474,56313+29])
                    Pexp_constant PConst_int (0,None)
              ]
    ]
  structure_item (middle_end/closure/closure.ml[1478,56367+0]..[1495,56984+6])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/closure/closure.ml[1478,56367+4]..[1478,56367+9])
          Ppat_var "intro" (middle_end/closure/closure.ml[1478,56367+4]..[1478,56367+9])
        expression (middle_end/closure/closure.ml[1478,56367+10]..[1495,56984+6]) ghost
          Pexp_fun
          Labelled "backend"
          None
          pattern (middle_end/closure/closure.ml[1478,56367+11]..[1478,56367+18])
            Ppat_var "backend" (middle_end/closure/closure.ml[1478,56367+11]..[1478,56367+18])
          expression (middle_end/closure/closure.ml[1478,56367+19]..[1495,56984+6]) ghost
            Pexp_fun
            Labelled "size"
            None
            pattern (middle_end/closure/closure.ml[1478,56367+20]..[1478,56367+24])
              Ppat_var "size" (middle_end/closure/closure.ml[1478,56367+20]..[1478,56367+24])
            expression (middle_end/closure/closure.ml[1478,56367+25]..[1495,56984+6]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/closure/closure.ml[1478,56367+25]..[1478,56367+28])
                Ppat_var "lam" (middle_end/closure/closure.ml[1478,56367+25]..[1478,56367+28])
              expression (middle_end/closure/closure.ml[1479,56398+2]..[1495,56984+6])
                Pexp_sequence
                expression (middle_end/closure/closure.ml[1479,56398+2]..[1479,56398+10])
                  Pexp_apply
                  expression (middle_end/closure/closure.ml[1479,56398+2]..[1479,56398+7])
                    Pexp_ident "reset" (middle_end/closure/closure.ml[1479,56398+2]..[1479,56398+7])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/closure/closure.ml[1479,56398+8]..[1479,56398+10])
                        Pexp_construct "()" (middle_end/closure/closure.ml[1479,56398+8]..[1479,56398+10])
                        None
                  ]
                expression (middle_end/closure/closure.ml[1480,56410+2]..[1495,56984+6])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/closure/closure.ml[1480,56410+6]..[1480,56410+8])
                        Ppat_var "id" (middle_end/closure/closure.ml[1480,56410+6]..[1480,56410+8])
                      expression (middle_end/closure/closure.ml[1480,56410+11]..[1480,56410+37])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1480,56410+11]..[1480,56410+32])
                          Pexp_ident "Compilenv.make_symbol" (middle_end/closure/closure.ml[1480,56410+11]..[1480,56410+32])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1480,56410+33]..[1480,56410+37])
                              Pexp_construct "None" (middle_end/closure/closure.ml[1480,56410+33]..[1480,56410+37])
                              None
                        ]
                  ]
                  expression (middle_end/closure/closure.ml[1481,56451+2]..[1495,56984+6])
                    Pexp_sequence
                    expression (middle_end/closure/closure.ml[1481,56451+2]..[1481,56451+72])
                      Pexp_apply
                      expression (middle_end/closure/closure.ml[1481,56451+16]..[1481,56451+18])
                        Pexp_ident ":=" (middle_end/closure/closure.ml[1481,56451+16]..[1481,56451+18])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[1481,56451+2]..[1481,56451+15])
                            Pexp_ident "global_approx" (middle_end/closure/closure.ml[1481,56451+2]..[1481,56451+15])
                        <arg>
                        Nolabel
                          expression (middle_end/closure/closure.ml[1481,56451+19]..[1481,56451+72])
                            Pexp_apply
                            expression (middle_end/closure/closure.ml[1481,56451+19]..[1481,56451+29])
                              Pexp_ident "Array.init" (middle_end/closure/closure.ml[1481,56451+19]..[1481,56451+29])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1481,56451+30]..[1481,56451+34])
                                  Pexp_ident "size" (middle_end/closure/closure.ml[1481,56451+30]..[1481,56451+34])
                              <arg>
                              Nolabel
                                expression (middle_end/closure/closure.ml[1481,56451+35]..[1481,56451+72])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/closure/closure.ml[1481,56451+40]..[1481,56451+41])
                                    Ppat_var "i" (middle_end/closure/closure.ml[1481,56451+40]..[1481,56451+41])
                                  expression (middle_end/closure/closure.ml[1481,56451+45]..[1481,56451+71])
                                    Pexp_construct "Value_global_field" (middle_end/closure/closure.ml[1481,56451+45]..[1481,56451+63])
                                    Some
                                      expression (middle_end/closure/closure.ml[1481,56451+64]..[1481,56451+71])
                                        Pexp_tuple
                                        [
                                          expression (middle_end/closure/closure.ml[1481,56451+65]..[1481,56451+67])
                                            Pexp_ident "id" (middle_end/closure/closure.ml[1481,56451+65]..[1481,56451+67])
                                          expression (middle_end/closure/closure.ml[1481,56451+69]..[1481,56451+70])
                                            Pexp_ident "i" (middle_end/closure/closure.ml[1481,56451+69]..[1481,56451+70])
                                        ]
                            ]
                      ]
                    expression (middle_end/closure/closure.ml[1482,56525+2]..[1495,56984+6])
                      Pexp_sequence
                      expression (middle_end/closure/closure.ml[1482,56525+2]..[1482,56525+57])
                        Pexp_apply
                        expression (middle_end/closure/closure.ml[1482,56525+2]..[1482,56525+29])
                          Pexp_ident "Compilenv.set_global_approx" (middle_end/closure/closure.ml[1482,56525+2]..[1482,56525+29])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/closure/closure.ml[1482,56525+29]..[1482,56525+57])
                              Pexp_construct "Value_tuple" (middle_end/closure/closure.ml[1482,56525+30]..[1482,56525+41])
                              Some
                                expression (middle_end/closure/closure.ml[1482,56525+42]..[1482,56525+56])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1482,56525+42]..[1482,56525+43])
                                    Pexp_ident "!" (middle_end/closure/closure.ml[1482,56525+42]..[1482,56525+43])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1482,56525+43]..[1482,56525+56])
                                        Pexp_ident "global_approx" (middle_end/closure/closure.ml[1482,56525+43]..[1482,56525+56])
                                  ]
                        ]
                      expression (middle_end/closure/closure.ml[1483,56584+2]..[1495,56984+6])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/closure/closure.ml[1483,56584+6]..[1483,56584+21])
                              Ppat_tuple
                              [
                                pattern (middle_end/closure/closure.ml[1483,56584+7]..[1483,56584+11])
                                  Ppat_var "ulam" (middle_end/closure/closure.ml[1483,56584+7]..[1483,56584+11])
                                pattern (middle_end/closure/closure.ml[1483,56584+13]..[1483,56584+20])
                                  Ppat_var "_approx" (middle_end/closure/closure.ml[1483,56584+13]..[1483,56584+20])
                              ]
                            expression (middle_end/closure/closure.ml[1484,56608+4]..[1485,56649+64])
                              Pexp_apply
                              expression (middle_end/closure/closure.ml[1484,56608+4]..[1484,56608+9])
                                Pexp_ident "close" (middle_end/closure/closure.ml[1484,56608+4]..[1484,56608+9])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1484,56608+10]..[1485,56649+60])
                                    Pexp_record
                                    [
                                      "backend" (middle_end/closure/closure.ml[1484,56608+12]..[1484,56608+19]) ghost
                                        expression (middle_end/closure/closure.ml[1484,56608+12]..[1484,56608+19])
                                          Pexp_ident "backend" (middle_end/closure/closure.ml[1484,56608+12]..[1484,56608+19])
                                      "fenv" (middle_end/closure/closure.ml[1484,56608+21]..[1484,56608+25])
                                        expression (middle_end/closure/closure.ml[1484,56608+28]..[1484,56608+39])
                                          Pexp_ident "V.Map.empty" (middle_end/closure/closure.ml[1484,56608+28]..[1484,56608+39])
                                      "cenv" (middle_end/closure/closure.ml[1485,56649+12]..[1485,56649+16])
                                        expression (middle_end/closure/closure.ml[1485,56649+19]..[1485,56649+30])
                                          Pexp_ident "V.Map.empty" (middle_end/closure/closure.ml[1485,56649+19]..[1485,56649+30])
                                      "mutable_vars" (middle_end/closure/closure.ml[1485,56649+32]..[1485,56649+44])
                                        expression (middle_end/closure/closure.ml[1485,56649+47]..[1485,56649+58])
                                          Pexp_ident "V.Set.empty" (middle_end/closure/closure.ml[1485,56649+47]..[1485,56649+58])
                                    ]
                                    None
                                <arg>
                                Nolabel
                                  expression (middle_end/closure/closure.ml[1485,56649+61]..[1485,56649+64])
                                    Pexp_ident "lam" (middle_end/closure/closure.ml[1485,56649+61]..[1485,56649+64])
                              ]
                        ]
                        expression (middle_end/closure/closure.ml[1487,56719+2]..[1495,56984+6])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/closure/closure.ml[1487,56719+6]..[1487,56719+12])
                                Ppat_var "opaque" (middle_end/closure/closure.ml[1487,56719+6]..[1487,56719+12])
                              expression (middle_end/closure/closure.ml[1488,56734+4]..[1489,56754+62])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1489,56754+4]..[1489,56754+6])
                                  Pexp_ident "||" (middle_end/closure/closure.ml[1489,56754+4]..[1489,56754+6])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1488,56734+4]..[1488,56734+19])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[1488,56734+4]..[1488,56734+5])
                                        Pexp_ident "!" (middle_end/closure/closure.ml[1488,56734+4]..[1488,56734+5])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[1488,56734+5]..[1488,56734+19])
                                            Pexp_ident "Clflags.opaque" (middle_end/closure/closure.ml[1488,56734+5]..[1488,56734+19])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1489,56754+7]..[1489,56754+62])
                                      Pexp_apply
                                      expression (middle_end/closure/closure.ml[1489,56754+7]..[1489,56754+29])
                                        Pexp_ident "Env.is_imported_opaque" (middle_end/closure/closure.ml[1489,56754+7]..[1489,56754+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/closure/closure.ml[1489,56754+30]..[1489,56754+62])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[1489,56754+31]..[1489,56754+58])
                                              Pexp_ident "Compilenv.current_unit_name" (middle_end/closure/closure.ml[1489,56754+31]..[1489,56754+58])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[1489,56754+59]..[1489,56754+61])
                                                  Pexp_construct "()" (middle_end/closure/closure.ml[1489,56754+59]..[1489,56754+61])
                                                  None
                                            ]
                                      ]
                                ]
                          ]
                          expression (middle_end/closure/closure.ml[1491,56822+2]..[1495,56984+6])
                            Pexp_sequence
                            expression (middle_end/closure/closure.ml[1491,56822+2]..[1493,56884+73])
                              Pexp_ifthenelse
                              expression (middle_end/closure/closure.ml[1491,56822+5]..[1491,56822+11])
                                Pexp_ident "opaque" (middle_end/closure/closure.ml[1491,56822+5]..[1491,56822+11])
                              expression (middle_end/closure/closure.ml[1492,56834+7]..[1492,56834+49])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1492,56834+7]..[1492,56834+34])
                                  Pexp_ident "Compilenv.set_global_approx" (middle_end/closure/closure.ml[1492,56834+7]..[1492,56834+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1492,56834+34]..[1492,56834+49])
                                      Pexp_construct "Value_unknown" (middle_end/closure/closure.ml[1492,56834+35]..[1492,56834+48])
                                      None
                                ]
                              Some
                                expression (middle_end/closure/closure.ml[1493,56884+7]..[1493,56884+73])
                                  Pexp_apply
                                  expression (middle_end/closure/closure.ml[1493,56884+7]..[1493,56884+44])
                                    Pexp_ident "collect_exported_structured_constants" (middle_end/closure/closure.ml[1493,56884+7]..[1493,56884+44])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/closure/closure.ml[1493,56884+45]..[1493,56884+73])
                                        Pexp_construct "Value_tuple" (middle_end/closure/closure.ml[1493,56884+46]..[1493,56884+57])
                                        Some
                                          expression (middle_end/closure/closure.ml[1493,56884+58]..[1493,56884+72])
                                            Pexp_apply
                                            expression (middle_end/closure/closure.ml[1493,56884+58]..[1493,56884+59])
                                              Pexp_ident "!" (middle_end/closure/closure.ml[1493,56884+58]..[1493,56884+59])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/closure/closure.ml[1493,56884+59]..[1493,56884+72])
                                                  Pexp_ident "global_approx" (middle_end/closure/closure.ml[1493,56884+59]..[1493,56884+72])
                                            ]
                                  ]
                            expression (middle_end/closure/closure.ml[1494,56959+2]..[1495,56984+6])
                              Pexp_sequence
                              expression (middle_end/closure/closure.ml[1494,56959+2]..[1494,56959+23])
                                Pexp_apply
                                expression (middle_end/closure/closure.ml[1494,56959+16]..[1494,56959+18])
                                  Pexp_ident ":=" (middle_end/closure/closure.ml[1494,56959+16]..[1494,56959+18])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1494,56959+2]..[1494,56959+15])
                                      Pexp_ident "global_approx" (middle_end/closure/closure.ml[1494,56959+2]..[1494,56959+15])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/closure/closure.ml[1494,56959+19]..[1494,56959+23])
                                      Pexp_array
                                      []
                                ]
                              expression (middle_end/closure/closure.ml[1495,56984+2]..[1495,56984+6])
                                Pexp_ident "ulam" (middle_end/closure/closure.ml[1495,56984+2]..[1495,56984+6])
    ]
]

