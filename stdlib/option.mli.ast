[
  signature_item (stdlib/option.mli[16,1079+0]..[20,1174+18])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/option.mli[16,1079+0]..[20,1174+18])
        Pstr_eval
        expression (stdlib/option.mli[16,1079+0]..[20,1174+18])
          Pexp_constant PConst_string(" Option values.\n\n    Option values explicitly indicate the presence or absence of a value.\n\n    @since 4.08 ",(stdlib/option.mli[16,1079+0]..[20,1174+18]),None)
    ]
  signature_item (stdlib/option.mli[22,1194+0]..[22,1194+26])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/option.mli[22,1194+0]..[22,1194+26])
        Pstr_eval
        expression (stdlib/option.mli[22,1194+0]..[22,1194+26])
          Pexp_constant PConst_string(" {1:options Options} ",(stdlib/option.mli[22,1194+0]..[22,1194+26]),None)
    ]
  signature_item (stdlib/option.mli[24,1222+0]..[24,1222+41])
    Psig_type Rec
    [
      type_declaration "t" (stdlib/option.mli[24,1222+8]..[24,1222+9]) (stdlib/option.mli[24,1222+0]..[24,1222+41])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/option.mli[25,1269+0]..[25,1269+69])
              Pstr_eval
              expression (stdlib/option.mli[25,1269+0]..[25,1269+69])
                Pexp_constant PConst_string(" The type for option values. Either [None] or a value [Some v]. ",(stdlib/option.mli[25,1269+0]..[25,1269+69]),None)
          ]
        ptype_params =
          [
            core_type (stdlib/option.mli[24,1222+5]..[24,1222+7])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (stdlib/option.mli[24,1222+24]..[24,1222+28])
                "None" (stdlib/option.mli[24,1222+24]..[24,1222+28])
                []
                None
              (stdlib/option.mli[24,1222+29]..[24,1222+41])
                "Some" (stdlib/option.mli[24,1222+31]..[24,1222+35])
                [
                  core_type (stdlib/option.mli[24,1222+39]..[24,1222+41])
                    Ptyp_var a
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/option.mli[24,1222+12]..[24,1222+21])
              Ptyp_constr "option" (stdlib/option.mli[24,1222+15]..[24,1222+21])
              [
                core_type (stdlib/option.mli[24,1222+12]..[24,1222+14])
                  Ptyp_var a
              ]
    ]
  signature_item (stdlib/option.mli[27,1340+0]..[27,1340+20])
    Psig_value
    value_description "none" (stdlib/option.mli[27,1340+4]..[27,1340+8]) (stdlib/option.mli[27,1340+0]..[27,1340+20])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/option.mli[28,1361+0]..[28,1361+24])
            Pstr_eval
            expression (stdlib/option.mli[28,1361+0]..[28,1361+24])
              Pexp_constant PConst_string(" [none] is [None]. ",(stdlib/option.mli[28,1361+0]..[28,1361+24]),None)
        ]
      core_type (stdlib/option.mli[27,1340+11]..[27,1340+20])
        Ptyp_constr "option" (stdlib/option.mli[27,1340+14]..[27,1340+20])
        [
          core_type (stdlib/option.mli[27,1340+11]..[27,1340+13])
            Ptyp_var a
        ]
      []
  signature_item (stdlib/option.mli[30,1387+0]..[30,1387+26])
    Psig_value
    value_description "some" (stdlib/option.mli[30,1387+4]..[30,1387+8]) (stdlib/option.mli[30,1387+0]..[30,1387+26])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/option.mli[31,1414+0]..[31,1414+28])
            Pstr_eval
            expression (stdlib/option.mli[31,1414+0]..[31,1414+28])
              Pexp_constant PConst_string(" [some v] is [Some v]. ",(stdlib/option.mli[31,1414+0]..[31,1414+28]),None)
        ]
      core_type (stdlib/option.mli[30,1387+11]..[30,1387+26])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/option.mli[30,1387+11]..[30,1387+13])
          Ptyp_var a
        core_type (stdlib/option.mli[30,1387+17]..[30,1387+26])
          Ptyp_constr "option" (stdlib/option.mli[30,1387+20]..[30,1387+26])
          [
            core_type (stdlib/option.mli[30,1387+17]..[30,1387+19])
              Ptyp_var a
          ]
      []
  signature_item (stdlib/option.mli[33,1444+0]..[33,1444+41])
    Psig_value
    value_description "value" (stdlib/option.mli[33,1444+4]..[33,1444+9]) (stdlib/option.mli[33,1444+0]..[33,1444+41])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/option.mli[34,1486+0]..[34,1486+76])
            Pstr_eval
            expression (stdlib/option.mli[34,1486+0]..[34,1486+76])
              Pexp_constant PConst_string(" [value o ~default] is [v] if [o] is [Some v] and [default] otherwise. ",(stdlib/option.mli[34,1486+0]..[34,1486+76]),None)
        ]
      core_type (stdlib/option.mli[33,1444+12]..[33,1444+41])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/option.mli[33,1444+12]..[33,1444+21])
          Ptyp_constr "option" (stdlib/option.mli[33,1444+15]..[33,1444+21])
          [
            core_type (stdlib/option.mli[33,1444+12]..[33,1444+14])
              Ptyp_var a
          ]
        core_type (stdlib/option.mli[33,1444+25]..[33,1444+41])
          Ptyp_arrow
          Labelled "default"
          core_type (stdlib/option.mli[33,1444+33]..[33,1444+35])
            Ptyp_var a
          core_type (stdlib/option.mli[33,1444+39]..[33,1444+41])
            Ptyp_var a
      []
  signature_item (stdlib/option.mli[36,1564+0]..[36,1564+25])
    Psig_value
    value_description "get" (stdlib/option.mli[36,1564+4]..[36,1564+7]) (stdlib/option.mli[36,1564+0]..[36,1564+25])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/option.mli[37,1590+0]..[37,1590+79])
            Pstr_eval
            expression (stdlib/option.mli[37,1590+0]..[37,1590+79])
              Pexp_constant PConst_string(" [get o] is [v] if [o] is [Some v] and @raise Invalid_argument otherwise. ",(stdlib/option.mli[37,1590+0]..[37,1590+79]),None)
        ]
      core_type (stdlib/option.mli[36,1564+10]..[36,1564+25])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/option.mli[36,1564+10]..[36,1564+19])
          Ptyp_constr "option" (stdlib/option.mli[36,1564+13]..[36,1564+19])
          [
            core_type (stdlib/option.mli[36,1564+10]..[36,1564+12])
              Ptyp_var a
          ]
        core_type (stdlib/option.mli[36,1564+23]..[36,1564+25])
          Ptyp_var a
      []
  signature_item (stdlib/option.mli[39,1671+0]..[39,1671+54])
    Psig_value
    value_description "bind" (stdlib/option.mli[39,1671+4]..[39,1671+8]) (stdlib/option.mli[39,1671+0]..[39,1671+54])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/option.mli[40,1726+0]..[40,1726+74])
            Pstr_eval
            expression (stdlib/option.mli[40,1726+0]..[40,1726+74])
              Pexp_constant PConst_string(" [bind o f] is [f v] if [o] is [Some v] and [None] if [o] is [None]. ",(stdlib/option.mli[40,1726+0]..[40,1726+74]),None)
        ]
      core_type (stdlib/option.mli[39,1671+11]..[39,1671+54])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/option.mli[39,1671+11]..[39,1671+20])
          Ptyp_constr "option" (stdlib/option.mli[39,1671+14]..[39,1671+20])
          [
            core_type (stdlib/option.mli[39,1671+11]..[39,1671+13])
              Ptyp_var a
          ]
        core_type (stdlib/option.mli[39,1671+24]..[39,1671+54])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/option.mli[39,1671+25]..[39,1671+40])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/option.mli[39,1671+25]..[39,1671+27])
              Ptyp_var a
            core_type (stdlib/option.mli[39,1671+31]..[39,1671+40])
              Ptyp_constr "option" (stdlib/option.mli[39,1671+34]..[39,1671+40])
              [
                core_type (stdlib/option.mli[39,1671+31]..[39,1671+33])
                  Ptyp_var b
              ]
          core_type (stdlib/option.mli[39,1671+45]..[39,1671+54])
            Ptyp_constr "option" (stdlib/option.mli[39,1671+48]..[39,1671+54])
            [
              core_type (stdlib/option.mli[39,1671+45]..[39,1671+47])
                Ptyp_var b
            ]
      []
  signature_item (stdlib/option.mli[42,1802+0]..[42,1802+40])
    Psig_value
    value_description "join" (stdlib/option.mli[42,1802+4]..[42,1802+8]) (stdlib/option.mli[42,1802+0]..[42,1802+40])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/option.mli[43,1843+0]..[43,1843+77])
            Pstr_eval
            expression (stdlib/option.mli[43,1843+0]..[43,1843+77])
              Pexp_constant PConst_string(" [join oo] is [Some v] if [oo] is [Some (Some v)] and [None] otherwise. ",(stdlib/option.mli[43,1843+0]..[43,1843+77]),None)
        ]
      core_type (stdlib/option.mli[42,1802+11]..[42,1802+40])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/option.mli[42,1802+11]..[42,1802+27])
          Ptyp_constr "option" (stdlib/option.mli[42,1802+21]..[42,1802+27])
          [
            core_type (stdlib/option.mli[42,1802+11]..[42,1802+20])
              Ptyp_constr "option" (stdlib/option.mli[42,1802+14]..[42,1802+20])
              [
                core_type (stdlib/option.mli[42,1802+11]..[42,1802+13])
                  Ptyp_var a
              ]
          ]
        core_type (stdlib/option.mli[42,1802+31]..[42,1802+40])
          Ptyp_constr "option" (stdlib/option.mli[42,1802+34]..[42,1802+40])
          [
            core_type (stdlib/option.mli[42,1802+31]..[42,1802+33])
              Ptyp_var a
          ]
      []
  signature_item (stdlib/option.mli[45,1922+0]..[45,1922+46])
    Psig_value
    value_description "map" (stdlib/option.mli[45,1922+4]..[45,1922+7]) (stdlib/option.mli[45,1922+0]..[45,1922+46])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/option.mli[46,1969+0]..[46,1969+80])
            Pstr_eval
            expression (stdlib/option.mli[46,1969+0]..[46,1969+80])
              Pexp_constant PConst_string(" [map f o] is [None] if [o] is [None] and [Some (f v)] is [o] is [Some v]. ",(stdlib/option.mli[46,1969+0]..[46,1969+80]),None)
        ]
      core_type (stdlib/option.mli[45,1922+10]..[45,1922+46])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/option.mli[45,1922+11]..[45,1922+19])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/option.mli[45,1922+11]..[45,1922+13])
            Ptyp_var a
          core_type (stdlib/option.mli[45,1922+17]..[45,1922+19])
            Ptyp_var b
        core_type (stdlib/option.mli[45,1922+24]..[45,1922+46])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/option.mli[45,1922+24]..[45,1922+33])
            Ptyp_constr "option" (stdlib/option.mli[45,1922+27]..[45,1922+33])
            [
              core_type (stdlib/option.mli[45,1922+24]..[45,1922+26])
                Ptyp_var a
            ]
          core_type (stdlib/option.mli[45,1922+37]..[45,1922+46])
            Ptyp_constr "option" (stdlib/option.mli[45,1922+40]..[45,1922+46])
            [
              core_type (stdlib/option.mli[45,1922+37]..[45,1922+39])
                Ptyp_var b
            ]
      []
  signature_item (stdlib/option.mli[48,2051+0]..[48,2051+56])
    Psig_value
    value_description "fold" (stdlib/option.mli[48,2051+4]..[48,2051+8]) (stdlib/option.mli[48,2051+0]..[48,2051+56])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/option.mli[49,2108+0]..[50,2183+16])
            Pstr_eval
            expression (stdlib/option.mli[49,2108+0]..[50,2183+16])
              Pexp_constant PConst_string(" [fold ~none ~some o] is [none] if [o] is [None] and [some v] if [o] is\n    [Some v]. ",(stdlib/option.mli[49,2108+0]..[50,2183+16]),None)
        ]
      core_type (stdlib/option.mli[48,2051+11]..[48,2051+56])
        Ptyp_arrow
        Labelled "none"
        core_type (stdlib/option.mli[48,2051+16]..[48,2051+18])
          Ptyp_var a
        core_type (stdlib/option.mli[48,2051+22]..[48,2051+56])
          Ptyp_arrow
          Labelled "some"
          core_type (stdlib/option.mli[48,2051+28]..[48,2051+36])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/option.mli[48,2051+28]..[48,2051+30])
              Ptyp_var b
            core_type (stdlib/option.mli[48,2051+34]..[48,2051+36])
              Ptyp_var a
          core_type (stdlib/option.mli[48,2051+41]..[48,2051+56])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/option.mli[48,2051+41]..[48,2051+50])
              Ptyp_constr "option" (stdlib/option.mli[48,2051+44]..[48,2051+50])
              [
                core_type (stdlib/option.mli[48,2051+41]..[48,2051+43])
                  Ptyp_var b
              ]
            core_type (stdlib/option.mli[48,2051+54]..[48,2051+56])
              Ptyp_var a
      []
  signature_item (stdlib/option.mli[52,2201+0]..[52,2201+44])
    Psig_value
    value_description "iter" (stdlib/option.mli[52,2201+4]..[52,2201+8]) (stdlib/option.mli[52,2201+0]..[52,2201+44])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/option.mli[53,2246+0]..[53,2246+65])
            Pstr_eval
            expression (stdlib/option.mli[53,2246+0]..[53,2246+65])
              Pexp_constant PConst_string(" [iter f o] is [f v] if [o] is [Some v] and [()] otherwise. ",(stdlib/option.mli[53,2246+0]..[53,2246+65]),None)
        ]
      core_type (stdlib/option.mli[52,2201+11]..[52,2201+44])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/option.mli[52,2201+12]..[52,2201+22])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/option.mli[52,2201+12]..[52,2201+14])
            Ptyp_var a
          core_type (stdlib/option.mli[52,2201+18]..[52,2201+22])
            Ptyp_constr "unit" (stdlib/option.mli[52,2201+18]..[52,2201+22])
            []
        core_type (stdlib/option.mli[52,2201+27]..[52,2201+44])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/option.mli[52,2201+27]..[52,2201+36])
            Ptyp_constr "option" (stdlib/option.mli[52,2201+30]..[52,2201+36])
            [
              core_type (stdlib/option.mli[52,2201+27]..[52,2201+29])
                Ptyp_var a
            ]
          core_type (stdlib/option.mli[52,2201+40]..[52,2201+44])
            Ptyp_constr "unit" (stdlib/option.mli[52,2201+40]..[52,2201+44])
            []
      []
  signature_item (stdlib/option.mli[55,2313+0]..[55,2313+43])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/option.mli[55,2313+0]..[55,2313+43])
        Pstr_eval
        expression (stdlib/option.mli[55,2313+0]..[55,2313+43])
          Pexp_constant PConst_string(" {1:preds Predicates and comparisons} ",(stdlib/option.mli[55,2313+0]..[55,2313+43]),None)
    ]
  signature_item (stdlib/option.mli[57,2358+0]..[57,2358+31])
    Psig_value
    value_description "is_none" (stdlib/option.mli[57,2358+4]..[57,2358+11]) (stdlib/option.mli[57,2358+0]..[57,2358+31])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/option.mli[58,2390+0]..[58,2390+58])
            Pstr_eval
            expression (stdlib/option.mli[58,2390+0]..[58,2390+58])
              Pexp_constant PConst_string(" [is_none o] is [true] if and only if [o] is [None]. ",(stdlib/option.mli[58,2390+0]..[58,2390+58]),None)
        ]
      core_type (stdlib/option.mli[57,2358+14]..[57,2358+31])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/option.mli[57,2358+14]..[57,2358+23])
          Ptyp_constr "option" (stdlib/option.mli[57,2358+17]..[57,2358+23])
          [
            core_type (stdlib/option.mli[57,2358+14]..[57,2358+16])
              Ptyp_var a
          ]
        core_type (stdlib/option.mli[57,2358+27]..[57,2358+31])
          Ptyp_constr "bool" (stdlib/option.mli[57,2358+27]..[57,2358+31])
          []
      []
  signature_item (stdlib/option.mli[60,2450+0]..[60,2450+31])
    Psig_value
    value_description "is_some" (stdlib/option.mli[60,2450+4]..[60,2450+11]) (stdlib/option.mli[60,2450+0]..[60,2450+31])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/option.mli[61,2482+0]..[61,2482+60])
            Pstr_eval
            expression (stdlib/option.mli[61,2482+0]..[61,2482+60])
              Pexp_constant PConst_string(" [is_some o] is [true] if and only if [o] is [Some o]. ",(stdlib/option.mli[61,2482+0]..[61,2482+60]),None)
        ]
      core_type (stdlib/option.mli[60,2450+14]..[60,2450+31])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/option.mli[60,2450+14]..[60,2450+23])
          Ptyp_constr "option" (stdlib/option.mli[60,2450+17]..[60,2450+23])
          [
            core_type (stdlib/option.mli[60,2450+14]..[60,2450+16])
              Ptyp_var a
          ]
        core_type (stdlib/option.mli[60,2450+27]..[60,2450+31])
          Ptyp_constr "bool" (stdlib/option.mli[60,2450+27]..[60,2450+31])
          []
      []
  signature_item (stdlib/option.mli[63,2544+0]..[63,2544+64])
    Psig_value
    value_description "equal" (stdlib/option.mli[63,2544+4]..[63,2544+9]) (stdlib/option.mli[63,2544+0]..[63,2544+64])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/option.mli[64,2609+0]..[65,2685+71])
            Pstr_eval
            expression (stdlib/option.mli[64,2609+0]..[65,2685+71])
              Pexp_constant PConst_string(" [equal eq o0 o1] is [true] if and only if [o0] and [o1] are both [None]\n    or if they are [Some v0] and [Some v1] and [eq v0 v1] is [true]. ",(stdlib/option.mli[64,2609+0]..[65,2685+71]),None)
        ]
      core_type (stdlib/option.mli[63,2544+12]..[63,2544+64])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/option.mli[63,2544+13]..[63,2544+29])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/option.mli[63,2544+13]..[63,2544+15])
            Ptyp_var a
          core_type (stdlib/option.mli[63,2544+19]..[63,2544+29])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/option.mli[63,2544+19]..[63,2544+21])
              Ptyp_var a
            core_type (stdlib/option.mli[63,2544+25]..[63,2544+29])
              Ptyp_constr "bool" (stdlib/option.mli[63,2544+25]..[63,2544+29])
              []
        core_type (stdlib/option.mli[63,2544+34]..[63,2544+64])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/option.mli[63,2544+34]..[63,2544+43])
            Ptyp_constr "option" (stdlib/option.mli[63,2544+37]..[63,2544+43])
            [
              core_type (stdlib/option.mli[63,2544+34]..[63,2544+36])
                Ptyp_var a
            ]
          core_type (stdlib/option.mli[63,2544+47]..[63,2544+64])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/option.mli[63,2544+47]..[63,2544+56])
              Ptyp_constr "option" (stdlib/option.mli[63,2544+50]..[63,2544+56])
              [
                core_type (stdlib/option.mli[63,2544+47]..[63,2544+49])
                  Ptyp_var a
              ]
            core_type (stdlib/option.mli[63,2544+60]..[63,2544+64])
              Ptyp_constr "bool" (stdlib/option.mli[63,2544+60]..[63,2544+64])
              []
      []
  signature_item (stdlib/option.mli[67,2758+0]..[67,2758+64])
    Psig_value
    value_description "compare" (stdlib/option.mli[67,2758+4]..[67,2758+11]) (stdlib/option.mli[67,2758+0]..[67,2758+64])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/option.mli[68,2823+0]..[69,2898+74])
            Pstr_eval
            expression (stdlib/option.mli[68,2823+0]..[69,2898+74])
              Pexp_constant PConst_string(" [compare cmp o0 o1] is a total order on options using [cmp] to compare\n    values wrapped by [Some _]. [None] is smaller than [Some _] values. ",(stdlib/option.mli[68,2823+0]..[69,2898+74]),None)
        ]
      core_type (stdlib/option.mli[67,2758+14]..[67,2758+64])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/option.mli[67,2758+15]..[67,2758+30])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/option.mli[67,2758+15]..[67,2758+17])
            Ptyp_var a
          core_type (stdlib/option.mli[67,2758+21]..[67,2758+30])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/option.mli[67,2758+21]..[67,2758+23])
              Ptyp_var a
            core_type (stdlib/option.mli[67,2758+27]..[67,2758+30])
              Ptyp_constr "int" (stdlib/option.mli[67,2758+27]..[67,2758+30])
              []
        core_type (stdlib/option.mli[67,2758+35]..[67,2758+64])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/option.mli[67,2758+35]..[67,2758+44])
            Ptyp_constr "option" (stdlib/option.mli[67,2758+38]..[67,2758+44])
            [
              core_type (stdlib/option.mli[67,2758+35]..[67,2758+37])
                Ptyp_var a
            ]
          core_type (stdlib/option.mli[67,2758+48]..[67,2758+64])
            Ptyp_arrow
            Nolabel
            core_type (stdlib/option.mli[67,2758+48]..[67,2758+57])
              Ptyp_constr "option" (stdlib/option.mli[67,2758+51]..[67,2758+57])
              [
                core_type (stdlib/option.mli[67,2758+48]..[67,2758+50])
                  Ptyp_var a
              ]
            core_type (stdlib/option.mli[67,2758+61]..[67,2758+64])
              Ptyp_constr "int" (stdlib/option.mli[67,2758+61]..[67,2758+64])
              []
      []
  signature_item (stdlib/option.mli[71,2974+0]..[71,2974+29])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/option.mli[71,2974+0]..[71,2974+29])
        Pstr_eval
        expression (stdlib/option.mli[71,2974+0]..[71,2974+29])
          Pexp_constant PConst_string(" {1:convert Converting} ",(stdlib/option.mli[71,2974+0]..[71,2974+29]),None)
    ]
  signature_item (stdlib/option.mli[73,3005+0]..[73,3005+55])
    Psig_value
    value_description "to_result" (stdlib/option.mli[73,3005+4]..[73,3005+13]) (stdlib/option.mli[73,3005+0]..[73,3005+55])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/option.mli[74,3061+0]..[75,3131+17])
            Pstr_eval
            expression (stdlib/option.mli[74,3061+0]..[75,3131+17])
              Pexp_constant PConst_string(" [to_result ~none o] is [Ok v] if [o] is [Some v] and [Error none]\n    otherwise. ",(stdlib/option.mli[74,3061+0]..[75,3131+17]),None)
        ]
      core_type (stdlib/option.mli[73,3005+16]..[73,3005+55])
        Ptyp_arrow
        Labelled "none"
        core_type (stdlib/option.mli[73,3005+21]..[73,3005+23])
          Ptyp_var e
        core_type (stdlib/option.mli[73,3005+27]..[73,3005+55])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/option.mli[73,3005+27]..[73,3005+36])
            Ptyp_constr "option" (stdlib/option.mli[73,3005+30]..[73,3005+36])
            [
              core_type (stdlib/option.mli[73,3005+27]..[73,3005+29])
                Ptyp_var a
            ]
          core_type (stdlib/option.mli[73,3005+40]..[73,3005+55])
            Ptyp_constr "result" (stdlib/option.mli[73,3005+49]..[73,3005+55])
            [
              core_type (stdlib/option.mli[73,3005+41]..[73,3005+43])
                Ptyp_var a
              core_type (stdlib/option.mli[73,3005+45]..[73,3005+47])
                Ptyp_var e
            ]
      []
  signature_item (stdlib/option.mli[77,3150+0]..[77,3150+34])
    Psig_value
    value_description "to_list" (stdlib/option.mli[77,3150+4]..[77,3150+11]) (stdlib/option.mli[77,3150+0]..[77,3150+34])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/option.mli[78,3185+0]..[78,3185+73])
            Pstr_eval
            expression (stdlib/option.mli[78,3185+0]..[78,3185+73])
              Pexp_constant PConst_string(" [to_list o] is [[]] if [o] is [None] and [[v]] if [o] is [Some v]. ",(stdlib/option.mli[78,3185+0]..[78,3185+73]),None)
        ]
      core_type (stdlib/option.mli[77,3150+14]..[77,3150+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/option.mli[77,3150+14]..[77,3150+23])
          Ptyp_constr "option" (stdlib/option.mli[77,3150+17]..[77,3150+23])
          [
            core_type (stdlib/option.mli[77,3150+14]..[77,3150+16])
              Ptyp_var a
          ]
        core_type (stdlib/option.mli[77,3150+27]..[77,3150+34])
          Ptyp_constr "list" (stdlib/option.mli[77,3150+30]..[77,3150+34])
          [
            core_type (stdlib/option.mli[77,3150+27]..[77,3150+29])
              Ptyp_var a
          ]
      []
  signature_item (stdlib/option.mli[80,3260+0]..[80,3260+34])
    Psig_value
    value_description "to_seq" (stdlib/option.mli[80,3260+4]..[80,3260+10]) (stdlib/option.mli[80,3260+0]..[80,3260+34])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/option.mli[81,3295+0]..[82,3365+57])
            Pstr_eval
            expression (stdlib/option.mli[81,3295+0]..[82,3365+57])
              Pexp_constant PConst_string(" [to_seq o] is [o] as a sequence. [None] is the empty sequence and\n    [Some v] is the singleton sequence containing [v]. ",(stdlib/option.mli[81,3295+0]..[82,3365+57]),None)
        ]
      core_type (stdlib/option.mli[80,3260+13]..[80,3260+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/option.mli[80,3260+13]..[80,3260+22])
          Ptyp_constr "option" (stdlib/option.mli[80,3260+16]..[80,3260+22])
          [
            core_type (stdlib/option.mli[80,3260+13]..[80,3260+15])
              Ptyp_var a
          ]
        core_type (stdlib/option.mli[80,3260+26]..[80,3260+34])
          Ptyp_constr "Seq.t" (stdlib/option.mli[80,3260+29]..[80,3260+34])
          [
            core_type (stdlib/option.mli[80,3260+26]..[80,3260+28])
              Ptyp_var a
          ]
      []
]

