[
  signature_item (stdlib/char.mli[16,1079+0]..[16,1079+28])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/char.mli[16,1079+0]..[16,1079+28])
        Pstr_eval
        expression (stdlib/char.mli[16,1079+0]..[16,1079+28])
          Pexp_constant PConst_string(" Character operations. ",(stdlib/char.mli[16,1079+0]..[16,1079+28]),None)
    ]
  signature_item (stdlib/char.mli[18,1109+0]..[18,1109+41])
    Psig_value
    value_description "code" (stdlib/char.mli[18,1109+9]..[18,1109+13]) (stdlib/char.mli[18,1109+0]..[18,1109+41])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/char.mli[19,1151+0]..[19,1151+45])
            Pstr_eval
            expression (stdlib/char.mli[19,1151+0]..[19,1151+45])
              Pexp_constant PConst_string(" Return the ASCII code of the argument. ",(stdlib/char.mli[19,1151+0]..[19,1151+45]),None)
        ]
      core_type (stdlib/char.mli[18,1109+16]..[18,1109+27])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/char.mli[18,1109+16]..[18,1109+20])
          Ptyp_constr "char" (stdlib/char.mli[18,1109+16]..[18,1109+20])
          []
        core_type (stdlib/char.mli[18,1109+24]..[18,1109+27])
          Ptyp_constr "int" (stdlib/char.mli[18,1109+24]..[18,1109+27])
          []
      [
        "%identity"
      ]
  signature_item (stdlib/char.mli[21,1198+0]..[21,1198+21])
    Psig_value
    value_description "chr" (stdlib/char.mli[21,1198+4]..[21,1198+7]) (stdlib/char.mli[21,1198+0]..[21,1198+21])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/char.mli[22,1220+0]..[24,1318+31])
            Pstr_eval
            expression (stdlib/char.mli[22,1220+0]..[24,1318+31])
              Pexp_constant PConst_string(" Return the character with the given ASCII code.\n   @raise Invalid_argument if the argument is\n   outside the range 0--255. ",(stdlib/char.mli[22,1220+0]..[24,1318+31]),None)
        ]
      core_type (stdlib/char.mli[21,1198+10]..[21,1198+21])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/char.mli[21,1198+10]..[21,1198+13])
          Ptyp_constr "int" (stdlib/char.mli[21,1198+10]..[21,1198+13])
          []
        core_type (stdlib/char.mli[21,1198+17]..[21,1198+21])
          Ptyp_constr "char" (stdlib/char.mli[21,1198+17]..[21,1198+21])
          []
      []
  signature_item (stdlib/char.mli[26,1351+0]..[26,1351+28])
    Psig_value
    value_description "escaped" (stdlib/char.mli[26,1351+4]..[26,1351+11]) (stdlib/char.mli[26,1351+0]..[26,1351+28])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/char.mli[27,1380+0]..[31,1585+69])
            Pstr_eval
            expression (stdlib/char.mli[27,1380+0]..[31,1585+69])
              Pexp_constant PConst_string(" Return a string representing the given character,\n    with special characters escaped following the lexical conventions\n    of OCaml.\n    All characters outside the ASCII printable range (32..126) are\n    escaped, as well as backslash, double-quote, and single-quote. ",(stdlib/char.mli[27,1380+0]..[31,1585+69]),None)
        ]
      core_type (stdlib/char.mli[26,1351+14]..[26,1351+28])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/char.mli[26,1351+14]..[26,1351+18])
          Ptyp_constr "char" (stdlib/char.mli[26,1351+14]..[26,1351+18])
          []
        core_type (stdlib/char.mli[26,1351+22]..[26,1351+28])
          Ptyp_constr "string" (stdlib/char.mli[26,1351+22]..[26,1351+28])
          []
      []
  signature_item (stdlib/char.mli[33,1656+0]..[34,1685+58])
    Psig_value
    value_description "lowercase" (stdlib/char.mli[33,1656+4]..[33,1656+13]) (stdlib/char.mli[33,1656+0]..[34,1685+58])
      attribute "ocaml.deprecated"
        [
          structure_item (stdlib/char.mli[34,1685+22]..[34,1685+57])
            Pstr_eval
            expression (stdlib/char.mli[34,1685+22]..[34,1685+57])
              Pexp_constant PConst_string("Use Char.lowercase_ascii instead.",(stdlib/char.mli[34,1685+23]..[34,1685+56]),None)
        ]
      attribute "ocaml.doc"
        [
          structure_item (stdlib/char.mli[35,1744+0]..[37,1864+78])
            Pstr_eval
            expression (stdlib/char.mli[35,1744+0]..[37,1864+78])
              Pexp_constant PConst_string(" Convert the given character to its equivalent lowercase character,\n   using the ISO Latin-1 (8859-1) character set.\n   @deprecated Functions operating on Latin-1 character set are deprecated. ",(stdlib/char.mli[35,1744+0]..[37,1864+78]),None)
        ]
      core_type (stdlib/char.mli[33,1656+16]..[33,1656+28])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/char.mli[33,1656+16]..[33,1656+20])
          Ptyp_constr "char" (stdlib/char.mli[33,1656+16]..[33,1656+20])
          []
        core_type (stdlib/char.mli[33,1656+24]..[33,1656+28])
          Ptyp_constr "char" (stdlib/char.mli[33,1656+24]..[33,1656+28])
          []
      []
  signature_item (stdlib/char.mli[39,1944+0]..[40,1973+58])
    Psig_value
    value_description "uppercase" (stdlib/char.mli[39,1944+4]..[39,1944+13]) (stdlib/char.mli[39,1944+0]..[40,1973+58])
      attribute "ocaml.deprecated"
        [
          structure_item (stdlib/char.mli[40,1973+22]..[40,1973+57])
            Pstr_eval
            expression (stdlib/char.mli[40,1973+22]..[40,1973+57])
              Pexp_constant PConst_string("Use Char.uppercase_ascii instead.",(stdlib/char.mli[40,1973+23]..[40,1973+56]),None)
        ]
      attribute "ocaml.doc"
        [
          structure_item (stdlib/char.mli[41,2032+0]..[43,2152+78])
            Pstr_eval
            expression (stdlib/char.mli[41,2032+0]..[43,2152+78])
              Pexp_constant PConst_string(" Convert the given character to its equivalent uppercase character,\n   using the ISO Latin-1 (8859-1) character set.\n   @deprecated Functions operating on Latin-1 character set are deprecated. ",(stdlib/char.mli[41,2032+0]..[43,2152+78]),None)
        ]
      core_type (stdlib/char.mli[39,1944+16]..[39,1944+28])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/char.mli[39,1944+16]..[39,1944+20])
          Ptyp_constr "char" (stdlib/char.mli[39,1944+16]..[39,1944+20])
          []
        core_type (stdlib/char.mli[39,1944+24]..[39,1944+28])
          Ptyp_constr "char" (stdlib/char.mli[39,1944+24]..[39,1944+28])
          []
      []
  signature_item (stdlib/char.mli[45,2232+0]..[45,2232+34])
    Psig_value
    value_description "lowercase_ascii" (stdlib/char.mli[45,2232+4]..[45,2232+19]) (stdlib/char.mli[45,2232+0]..[45,2232+34])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/char.mli[46,2267+0]..[48,2375+19])
            Pstr_eval
            expression (stdlib/char.mli[46,2267+0]..[48,2375+19])
              Pexp_constant PConst_string(" Convert the given character to its equivalent lowercase character,\n   using the US-ASCII character set.\n   @since 4.03.0 ",(stdlib/char.mli[46,2267+0]..[48,2375+19]),None)
        ]
      core_type (stdlib/char.mli[45,2232+22]..[45,2232+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/char.mli[45,2232+22]..[45,2232+26])
          Ptyp_constr "char" (stdlib/char.mli[45,2232+22]..[45,2232+26])
          []
        core_type (stdlib/char.mli[45,2232+30]..[45,2232+34])
          Ptyp_constr "char" (stdlib/char.mli[45,2232+30]..[45,2232+34])
          []
      []
  signature_item (stdlib/char.mli[50,2396+0]..[50,2396+34])
    Psig_value
    value_description "uppercase_ascii" (stdlib/char.mli[50,2396+4]..[50,2396+19]) (stdlib/char.mli[50,2396+0]..[50,2396+34])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/char.mli[51,2431+0]..[53,2539+19])
            Pstr_eval
            expression (stdlib/char.mli[51,2431+0]..[53,2539+19])
              Pexp_constant PConst_string(" Convert the given character to its equivalent uppercase character,\n   using the US-ASCII character set.\n   @since 4.03.0 ",(stdlib/char.mli[51,2431+0]..[53,2539+19]),None)
        ]
      core_type (stdlib/char.mli[50,2396+22]..[50,2396+34])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/char.mli[50,2396+22]..[50,2396+26])
          Ptyp_constr "char" (stdlib/char.mli[50,2396+22]..[50,2396+26])
          []
        core_type (stdlib/char.mli[50,2396+30]..[50,2396+34])
          Ptyp_constr "char" (stdlib/char.mli[50,2396+30]..[50,2396+34])
          []
      []
  signature_item (stdlib/char.mli[55,2560+0]..[55,2560+13])
    Psig_type Rec
    [
      type_declaration "t" (stdlib/char.mli[55,2560+5]..[55,2560+6]) (stdlib/char.mli[55,2560+0]..[55,2560+13])
        attribute "ocaml.doc"
          [
            structure_item (stdlib/char.mli[56,2574+0]..[56,2574+43])
              Pstr_eval
              expression (stdlib/char.mli[56,2574+0]..[56,2574+43])
                Pexp_constant PConst_string(" An alias for the type of characters. ",(stdlib/char.mli[56,2574+0]..[56,2574+43]),None)
          ]
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/char.mli[55,2560+9]..[55,2560+13])
              Ptyp_constr "char" (stdlib/char.mli[55,2560+9]..[55,2560+13])
              []
    ]
  signature_item (stdlib/char.mli[58,2619+0]..[58,2619+26])
    Psig_value
    value_description "compare" (stdlib/char.mli[58,2619+4]..[58,2619+11]) (stdlib/char.mli[58,2619+0]..[58,2619+26])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/char.mli[59,2646+0]..[62,2864+35])
            Pstr_eval
            expression (stdlib/char.mli[59,2646+0]..[62,2864+35])
              Pexp_constant PConst_string(" The comparison function for characters, with the same specification as\n    {!Stdlib.compare}.  Along with the type [t], this function [compare]\n    allows the module [Char] to be passed as argument to the functors\n    {!Set.Make} and {!Map.Make}. ",(stdlib/char.mli[59,2646+0]..[62,2864+35]),None)
        ]
      core_type (stdlib/char.mli[58,2619+13]..[58,2619+26])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/char.mli[58,2619+13]..[58,2619+14])
          Ptyp_constr "t" (stdlib/char.mli[58,2619+13]..[58,2619+14])
          []
        core_type (stdlib/char.mli[58,2619+18]..[58,2619+26])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/char.mli[58,2619+18]..[58,2619+19])
            Ptyp_constr "t" (stdlib/char.mli[58,2619+18]..[58,2619+19])
            []
          core_type (stdlib/char.mli[58,2619+23]..[58,2619+26])
            Ptyp_constr "int" (stdlib/char.mli[58,2619+23]..[58,2619+26])
            []
      []
  signature_item (stdlib/char.mli[64,2901+0]..[64,2901+25])
    Psig_value
    value_description "equal" (stdlib/char.mli[64,2901+4]..[64,2901+9]) (stdlib/char.mli[64,2901+0]..[64,2901+25])
      attribute "ocaml.doc"
        [
          structure_item (stdlib/char.mli[65,2927+0]..[66,2961+20])
            Pstr_eval
            expression (stdlib/char.mli[65,2927+0]..[66,2961+20])
              Pexp_constant PConst_string(" The equal function for chars.\n    @since 4.03.0 ",(stdlib/char.mli[65,2927+0]..[66,2961+20]),None)
        ]
      core_type (stdlib/char.mli[64,2901+11]..[64,2901+25])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/char.mli[64,2901+11]..[64,2901+12])
          Ptyp_constr "t" (stdlib/char.mli[64,2901+11]..[64,2901+12])
          []
        core_type (stdlib/char.mli[64,2901+16]..[64,2901+25])
          Ptyp_arrow
          Nolabel
          core_type (stdlib/char.mli[64,2901+16]..[64,2901+17])
            Ptyp_constr "t" (stdlib/char.mli[64,2901+16]..[64,2901+17])
            []
          core_type (stdlib/char.mli[64,2901+21]..[64,2901+25])
            Ptyp_constr "bool" (stdlib/char.mli[64,2901+21]..[64,2901+25])
            []
      []
  signature_item (stdlib/char.mli[68,2983+0]..[68,2983+7])
    Psig_attribute "ocaml.text"
    [
      structure_item (stdlib/char.mli[68,2983+0]..[68,2983+7])
        Pstr_eval
        expression (stdlib/char.mli[68,2983+0]..[68,2983+7])
          Pexp_constant PConst_string("/*",(stdlib/char.mli[68,2983+0]..[68,2983+7]),None)
    ]
  signature_item (stdlib/char.mli[72,3059+0]..[72,3059+47])
    Psig_value
    value_description "unsafe_chr" (stdlib/char.mli[72,3059+9]..[72,3059+19]) (stdlib/char.mli[72,3059+0]..[72,3059+47])
      core_type (stdlib/char.mli[72,3059+22]..[72,3059+33])
        Ptyp_arrow
        Nolabel
        core_type (stdlib/char.mli[72,3059+22]..[72,3059+25])
          Ptyp_constr "int" (stdlib/char.mli[72,3059+22]..[72,3059+25])
          []
        core_type (stdlib/char.mli[72,3059+29]..[72,3059+33])
          Ptyp_constr "char" (stdlib/char.mli[72,3059+29]..[72,3059+33])
          []
      [
        "%identity"
      ]
]

