[
  structure_item (testsuite/tests/typing-warnings/pr5892.ml[6,62+0]..[6,62+19])
    Pstr_open Fresh
    module_expr (testsuite/tests/typing-warnings/pr5892.ml[6,62+5]..[6,62+19])
      Pmod_ident "CamlinternalOO" (testsuite/tests/typing-warnings/pr5892.ml[6,62+5]..[6,62+19])
  structure_item (testsuite/tests/typing-warnings/pr5892.ml[8,85+0]..[8,85+56])
    Pstr_type Rec
    [
      type_declaration "choice" (testsuite/tests/typing-warnings/pr5892.ml[8,85+7]..[8,85+13]) (testsuite/tests/typing-warnings/pr5892.ml[8,85+0]..[8,85+56])
        ptype_params =
          [
            core_type (testsuite/tests/typing-warnings/pr5892.ml[8,85+5]..[8,85+6])
              Ptyp_any
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (testsuite/tests/typing-warnings/pr5892.ml[8,85+16]..[8,85+35])
                "Left" (testsuite/tests/typing-warnings/pr5892.ml[8,85+16]..[8,85+20])
                []
                Some
                  core_type (testsuite/tests/typing-warnings/pr5892.ml[8,85+23]..[8,85+35])
                    Ptyp_constr "choice" (testsuite/tests/typing-warnings/pr5892.ml[8,85+29]..[8,85+35])
                    [
                      core_type (testsuite/tests/typing-warnings/pr5892.ml[8,85+23]..[8,85+28])
                        Ptyp_constr "label" (testsuite/tests/typing-warnings/pr5892.ml[8,85+23]..[8,85+28])
                        []
                    ]
              (testsuite/tests/typing-warnings/pr5892.ml[8,85+36]..[8,85+56])
                "Right" (testsuite/tests/typing-warnings/pr5892.ml[8,85+38]..[8,85+43])
                []
                Some
                  core_type (testsuite/tests/typing-warnings/pr5892.ml[8,85+46]..[8,85+56])
                    Ptyp_constr "choice" (testsuite/tests/typing-warnings/pr5892.ml[8,85+50]..[8,85+56])
                    [
                      core_type (testsuite/tests/typing-warnings/pr5892.ml[8,85+46]..[8,85+49])
                        Ptyp_constr "tag" (testsuite/tests/typing-warnings/pr5892.ml[8,85+46]..[8,85+49])
                        []
                    ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (testsuite/tests/typing-warnings/pr5892.ml[9,144+0]..[13,250+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-warnings/pr5892.ml[9,144+10]..[13,250+2])
        Pstr_eval
        expression (testsuite/tests/typing-warnings/pr5892.ml[9,144+10]..[13,250+2])
          Pexp_constant PConst_string ("\ntype _ choice =\n    Left : CamlinternalOO.label choice\n  | Right : CamlinternalOO.tag choice\n",(testsuite/tests/typing-warnings/pr5892.ml[9,144+12]..[13,250+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-warnings/pr5892.ml[15,255+0]..[15,255+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (testsuite/tests/typing-warnings/pr5892.ml[15,255+4]..[15,255+28]) ghost
          Ppat_constraint
          pattern (testsuite/tests/typing-warnings/pr5892.ml[15,255+4]..[15,255+5])
            Ppat_var "f" (testsuite/tests/typing-warnings/pr5892.ml[15,255+4]..[15,255+5])
          core_type (testsuite/tests/typing-warnings/pr5892.ml[15,255+8]..[15,255+28]) ghost
            Ptyp_poly
            core_type (testsuite/tests/typing-warnings/pr5892.ml[15,255+8]..[15,255+28])
              Ptyp_arrow
              Nolabel
              core_type (testsuite/tests/typing-warnings/pr5892.ml[15,255+8]..[15,255+20])
                Ptyp_constr "choice" (testsuite/tests/typing-warnings/pr5892.ml[15,255+14]..[15,255+20])
                [
                  core_type (testsuite/tests/typing-warnings/pr5892.ml[15,255+8]..[15,255+13])
                    Ptyp_constr "label" (testsuite/tests/typing-warnings/pr5892.ml[15,255+8]..[15,255+13])
                    []
                ]
              core_type (testsuite/tests/typing-warnings/pr5892.ml[15,255+24]..[15,255+28])
                Ptyp_constr "bool" (testsuite/tests/typing-warnings/pr5892.ml[15,255+24]..[15,255+28])
                []
        expression (testsuite/tests/typing-warnings/pr5892.ml[15,255+4]..[15,255+52])
          Pexp_constraint
          expression (testsuite/tests/typing-warnings/pr5892.ml[15,255+31]..[15,255+52])
            Pexp_function
            [
              <case>
                pattern (testsuite/tests/typing-warnings/pr5892.ml[15,255+40]..[15,255+44])
                  Ppat_construct "Left" (testsuite/tests/typing-warnings/pr5892.ml[15,255+40]..[15,255+44])
                  None
                expression (testsuite/tests/typing-warnings/pr5892.ml[15,255+48]..[15,255+52])
                  Pexp_construct "true" (testsuite/tests/typing-warnings/pr5892.ml[15,255+48]..[15,255+52])
                  None
            ]
          core_type (testsuite/tests/typing-warnings/pr5892.ml[15,255+8]..[15,255+28])
            Ptyp_arrow
            Nolabel
            core_type (testsuite/tests/typing-warnings/pr5892.ml[15,255+8]..[15,255+20])
              Ptyp_constr "choice" (testsuite/tests/typing-warnings/pr5892.ml[15,255+14]..[15,255+20])
              [
                core_type (testsuite/tests/typing-warnings/pr5892.ml[15,255+8]..[15,255+13])
                  Ptyp_constr "label" (testsuite/tests/typing-warnings/pr5892.ml[15,255+8]..[15,255+13])
                  []
              ]
            core_type (testsuite/tests/typing-warnings/pr5892.ml[15,255+24]..[15,255+28])
              Ptyp_constr "bool" (testsuite/tests/typing-warnings/pr5892.ml[15,255+24]..[15,255+28])
              []
    ]
  structure_item (testsuite/tests/typing-warnings/pr5892.ml[16,321+0]..[24,663+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-warnings/pr5892.ml[16,321+10]..[24,663+2])
        Pstr_eval
        expression (testsuite/tests/typing-warnings/pr5892.ml[16,321+10]..[24,663+2])
          Pexp_constant PConst_string ("\nLine 1, characters 31-52:\n1 | let f : label choice -> bool = function Left -> true;; (* warn *)\n                                   ^^^^^^^^^^^^^^^^^^^^^\nWarning 8 [partial-match]: this pattern-matching is not exhaustive.\nHere is an example of a case that is not matched:\nRight\nval f : CamlinternalOO.label choice -> bool = <fun>\n",(testsuite/tests/typing-warnings/pr5892.ml[16,321+12]..[24,663+0]),Some "")
    ]
]

