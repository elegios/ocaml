[
  structure_item (middle_end/flambda/inlining_cost.ml[17,1156+0]..[17,1156+42])
    Pstr_attribute "ocaml.warning"
    [
      structure_item (middle_end/flambda/inlining_cost.ml[17,1156+18]..[17,1156+41])
        Pstr_eval
        expression (middle_end/flambda/inlining_cost.ml[17,1156+18]..[17,1156+41])
          Pexp_constant PConst_string("+a-4-9-30-40-41-42-66",(middle_end/flambda/inlining_cost.ml[17,1156+19]..[17,1156+40]),None)
    ]
  structure_item (middle_end/flambda/inlining_cost.ml[18,1199+0]..[18,1199+37])
    Pstr_open Override
    module_expr (middle_end/flambda/inlining_cost.ml[18,1199+6]..[18,1199+37])
      Pmod_ident "Int_replace_polymorphic_compare" (middle_end/flambda/inlining_cost.ml[18,1199+6]..[18,1199+37])
  structure_item (middle_end/flambda/inlining_cost.ml[22,1300+0]..[61,2681+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inlining_cost.ml[22,1300+4]..[22,1300+13])
          Ppat_var "prim_size" (middle_end/flambda/inlining_cost.ml[22,1300+4]..[22,1300+13])
        expression (middle_end/flambda/inlining_cost.ml[22,1300+14]..[61,2681+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inlining_cost.ml[22,1300+14]..[22,1300+51])
            Ppat_constraint
            pattern (middle_end/flambda/inlining_cost.ml[22,1300+15]..[22,1300+19])
              Ppat_var "prim" (middle_end/flambda/inlining_cost.ml[22,1300+15]..[22,1300+19])
            core_type (middle_end/flambda/inlining_cost.ml[22,1300+22]..[22,1300+50])
              Ptyp_constr "Clambda_primitives.primitive" (middle_end/flambda/inlining_cost.ml[22,1300+22]..[22,1300+50])
              []
          expression (middle_end/flambda/inlining_cost.ml[22,1300+52]..[61,2681+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inlining_cost.ml[22,1300+52]..[22,1300+56])
              Ppat_var "args" (middle_end/flambda/inlining_cost.ml[22,1300+52]..[22,1300+56])
            expression (middle_end/flambda/inlining_cost.ml[23,1359+2]..[61,2681+10])
              Pexp_match
              expression (middle_end/flambda/inlining_cost.ml[23,1359+8]..[23,1359+12])
                Pexp_ident "prim" (middle_end/flambda/inlining_cost.ml[23,1359+8]..[23,1359+12])
              [
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[24,1377+4]..[24,1377+16])
                    Ppat_construct "Pmakeblock" (middle_end/flambda/inlining_cost.ml[24,1377+4]..[24,1377+14])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[24,1377+15]..[24,1377+16])
                        Ppat_any
                  expression (middle_end/flambda/inlining_cost.ml[24,1377+20]..[24,1377+40])
                    Pexp_apply
                    expression (middle_end/flambda/inlining_cost.ml[24,1377+22]..[24,1377+23])
                      Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[24,1377+22]..[24,1377+23])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[24,1377+20]..[24,1377+21])
                          Pexp_constant PConst_int (5,None)
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[24,1377+24]..[24,1377+40])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[24,1377+24]..[24,1377+35])
                            Pexp_ident "List.length" (middle_end/flambda/inlining_cost.ml[24,1377+24]..[24,1377+35])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[24,1377+36]..[24,1377+40])
                                Pexp_ident "args" (middle_end/flambda/inlining_cost.ml[24,1377+36]..[24,1377+40])
                          ]
                    ]
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[25,1418+4]..[25,1418+12])
                    Ppat_construct "Pfield" (middle_end/flambda/inlining_cost.ml[25,1418+4]..[25,1418+10])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[25,1418+11]..[25,1418+12])
                        Ppat_any
                  expression (middle_end/flambda/inlining_cost.ml[25,1418+16]..[25,1418+17])
                    Pexp_constant PConst_int (1,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[26,1436+4]..[26,1436+30])
                    Ppat_construct "Psetfield" (middle_end/flambda/inlining_cost.ml[26,1436+4]..[26,1436+13])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[26,1436+14]..[26,1436+30])
                        Ppat_tuple
                        [
                          pattern (middle_end/flambda/inlining_cost.ml[26,1436+15]..[26,1436+16])
                            Ppat_any
                          pattern (middle_end/flambda/inlining_cost.ml[26,1436+18]..[26,1436+23])
                            Ppat_var "isptr" (middle_end/flambda/inlining_cost.ml[26,1436+18]..[26,1436+23])
                          pattern (middle_end/flambda/inlining_cost.ml[26,1436+25]..[26,1436+29])
                            Ppat_var "init" (middle_end/flambda/inlining_cost.ml[26,1436+25]..[26,1436+29])
                        ]
                  expression (middle_end/flambda/inlining_cost.ml[27,1470+4]..[33,1676+7])
                    Pexp_match
                    expression (middle_end/flambda/inlining_cost.ml[27,1470+16]..[27,1470+20])
                      Pexp_ident "init" (middle_end/flambda/inlining_cost.ml[27,1470+16]..[27,1470+20])
                    [
                      <case>
                        pattern (middle_end/flambda/inlining_cost.ml[28,1496+6]..[28,1496+25])
                          Ppat_construct "Root_initialization" (middle_end/flambda/inlining_cost.ml[28,1496+6]..[28,1496+25])
                          None
                        expression (middle_end/flambda/inlining_cost.ml[28,1496+29]..[28,1496+30])
                          Pexp_constant PConst_int (1,None)
                      <case>
                        pattern (middle_end/flambda/inlining_cost.ml[29,1567+6]..[29,1567+38])
                          Ppat_or
                          pattern (middle_end/flambda/inlining_cost.ml[29,1567+6]..[29,1567+16])
                            Ppat_construct "Assignment" (middle_end/flambda/inlining_cost.ml[29,1567+6]..[29,1567+16])
                            None
                          pattern (middle_end/flambda/inlining_cost.ml[29,1567+19]..[29,1567+38])
                            Ppat_construct "Heap_initialization" (middle_end/flambda/inlining_cost.ml[29,1567+19]..[29,1567+38])
                            None
                        expression (middle_end/flambda/inlining_cost.ml[30,1609+6]..[32,1653+22])
                          Pexp_match
                          expression (middle_end/flambda/inlining_cost.ml[30,1609+12]..[30,1609+17])
                            Pexp_ident "isptr" (middle_end/flambda/inlining_cost.ml[30,1609+12]..[30,1609+17])
                          [
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[31,1632+8]..[31,1632+15])
                                Ppat_construct "Pointer" (middle_end/flambda/inlining_cost.ml[31,1632+8]..[31,1632+15])
                                None
                              expression (middle_end/flambda/inlining_cost.ml[31,1632+19]..[31,1632+20])
                                Pexp_constant PConst_int (4,None)
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[32,1653+8]..[32,1653+17])
                                Ppat_construct "Immediate" (middle_end/flambda/inlining_cost.ml[32,1653+8]..[32,1653+17])
                                None
                              expression (middle_end/flambda/inlining_cost.ml[32,1653+21]..[32,1653+22])
                                Pexp_constant PConst_int (1,None)
                          ]
                    ]
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[34,1684+4]..[34,1684+17])
                    Ppat_construct "Pfloatfield" (middle_end/flambda/inlining_cost.ml[34,1684+4]..[34,1684+15])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[34,1684+16]..[34,1684+17])
                        Ppat_any
                  expression (middle_end/flambda/inlining_cost.ml[34,1684+21]..[34,1684+22])
                    Pexp_constant PConst_int (1,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[35,1707+4]..[35,1707+20])
                    Ppat_construct "Psetfloatfield" (middle_end/flambda/inlining_cost.ml[35,1707+4]..[35,1707+18])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[35,1707+19]..[35,1707+20])
                        Ppat_any
                  expression (middle_end/flambda/inlining_cost.ml[35,1707+24]..[35,1707+25])
                    Pexp_constant PConst_int (1,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[36,1733+4]..[36,1733+16])
                    Ppat_construct "Pduprecord" (middle_end/flambda/inlining_cost.ml[36,1733+4]..[36,1733+14])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[36,1733+15]..[36,1733+16])
                        Ppat_any
                  expression (middle_end/flambda/inlining_cost.ml[36,1733+20]..[36,1733+41])
                    Pexp_apply
                    expression (middle_end/flambda/inlining_cost.ml[36,1733+23]..[36,1733+24])
                      Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[36,1733+23]..[36,1733+24])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[36,1733+20]..[36,1733+22])
                          Pexp_constant PConst_int (10,None)
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[36,1733+25]..[36,1733+41])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[36,1733+25]..[36,1733+36])
                            Pexp_ident "List.length" (middle_end/flambda/inlining_cost.ml[36,1733+25]..[36,1733+36])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[36,1733+37]..[36,1733+41])
                                Pexp_ident "args" (middle_end/flambda/inlining_cost.ml[36,1733+37]..[36,1733+41])
                          ]
                    ]
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[37,1775+4]..[37,1775+12])
                    Ppat_construct "Pccall" (middle_end/flambda/inlining_cost.ml[37,1775+4]..[37,1775+10])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[37,1775+11]..[37,1775+12])
                        Ppat_var "p" (middle_end/flambda/inlining_cost.ml[37,1775+11]..[37,1775+12])
                  expression (middle_end/flambda/inlining_cost.ml[37,1775+16]..[37,1775+77])
                    Pexp_apply
                    expression (middle_end/flambda/inlining_cost.ml[37,1775+59]..[37,1775+60])
                      Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[37,1775+59]..[37,1775+60])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[37,1775+16]..[37,1775+58])
                          Pexp_ifthenelse
                          expression (middle_end/flambda/inlining_cost.ml[37,1775+20]..[37,1775+42])
                            Pexp_field
                            expression (middle_end/flambda/inlining_cost.ml[37,1775+20]..[37,1775+21])
                              Pexp_ident "p" (middle_end/flambda/inlining_cost.ml[37,1775+20]..[37,1775+21])
                            "Primitive.prim_alloc" (middle_end/flambda/inlining_cost.ml[37,1775+22]..[37,1775+42])
                          expression (middle_end/flambda/inlining_cost.ml[37,1775+48]..[37,1775+50])
                            Pexp_constant PConst_int (10,None)
                          Some
                            expression (middle_end/flambda/inlining_cost.ml[37,1775+56]..[37,1775+57])
                              Pexp_constant PConst_int (4,None)
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[37,1775+61]..[37,1775+77])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[37,1775+61]..[37,1775+72])
                            Pexp_ident "List.length" (middle_end/flambda/inlining_cost.ml[37,1775+61]..[37,1775+72])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[37,1775+73]..[37,1775+77])
                                Pexp_ident "args" (middle_end/flambda/inlining_cost.ml[37,1775+73]..[37,1775+77])
                          ]
                    ]
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[38,1853+4]..[38,1853+12])
                    Ppat_construct "Praise" (middle_end/flambda/inlining_cost.ml[38,1853+4]..[38,1853+10])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[38,1853+11]..[38,1853+12])
                        Ppat_any
                  expression (middle_end/flambda/inlining_cost.ml[38,1853+16]..[38,1853+17])
                    Pexp_constant PConst_int (4,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[39,1871+4]..[39,1871+17])
                    Ppat_construct "Pstringlength" (middle_end/flambda/inlining_cost.ml[39,1871+4]..[39,1871+17])
                    None
                  expression (middle_end/flambda/inlining_cost.ml[39,1871+21]..[39,1871+22])
                    Pexp_constant PConst_int (5,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[40,1894+4]..[40,1894+16])
                    Ppat_construct "Pbyteslength" (middle_end/flambda/inlining_cost.ml[40,1894+4]..[40,1894+16])
                    None
                  expression (middle_end/flambda/inlining_cost.ml[40,1894+20]..[40,1894+21])
                    Pexp_constant PConst_int (5,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[41,1916+4]..[41,1916+15])
                    Ppat_construct "Pstringrefs" (middle_end/flambda/inlining_cost.ml[41,1916+4]..[41,1916+15])
                    None
                  expression (middle_end/flambda/inlining_cost.ml[41,1916+19]..[41,1916+20])
                    Pexp_constant PConst_int (6,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[42,1937+4]..[42,1937+27])
                    Ppat_or
                    pattern (middle_end/flambda/inlining_cost.ml[42,1937+4]..[42,1937+14])
                      Ppat_construct "Pbytesrefs" (middle_end/flambda/inlining_cost.ml[42,1937+4]..[42,1937+14])
                      None
                    pattern (middle_end/flambda/inlining_cost.ml[42,1937+17]..[42,1937+27])
                      Ppat_construct "Pbytessets" (middle_end/flambda/inlining_cost.ml[42,1937+17]..[42,1937+27])
                      None
                  expression (middle_end/flambda/inlining_cost.ml[42,1937+31]..[42,1937+32])
                    Pexp_constant PConst_int (6,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[43,1970+4]..[43,1970+16])
                    Ppat_construct "Pmakearray" (middle_end/flambda/inlining_cost.ml[43,1970+4]..[43,1970+14])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[43,1970+15]..[43,1970+16])
                        Ppat_any
                  expression (middle_end/flambda/inlining_cost.ml[43,1970+20]..[43,1970+40])
                    Pexp_apply
                    expression (middle_end/flambda/inlining_cost.ml[43,1970+22]..[43,1970+23])
                      Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[43,1970+22]..[43,1970+23])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[43,1970+20]..[43,1970+21])
                          Pexp_constant PConst_int (5,None)
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[43,1970+24]..[43,1970+40])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[43,1970+24]..[43,1970+35])
                            Pexp_ident "List.length" (middle_end/flambda/inlining_cost.ml[43,1970+24]..[43,1970+35])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[43,1970+36]..[43,1970+40])
                                Pexp_ident "args" (middle_end/flambda/inlining_cost.ml[43,1970+36]..[43,1970+40])
                          ]
                    ]
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[44,2011+4]..[44,2011+26])
                    Ppat_construct "Parraylength" (middle_end/flambda/inlining_cost.ml[44,2011+4]..[44,2011+16])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[44,2011+17]..[44,2011+26])
                        Ppat_construct "Pgenarray" (middle_end/flambda/inlining_cost.ml[44,2011+17]..[44,2011+26])
                        None
                  expression (middle_end/flambda/inlining_cost.ml[44,2011+30]..[44,2011+31])
                    Pexp_constant PConst_int (6,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[45,2043+4]..[45,2043+18])
                    Ppat_construct "Parraylength" (middle_end/flambda/inlining_cost.ml[45,2043+4]..[45,2043+16])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[45,2043+17]..[45,2043+18])
                        Ppat_any
                  expression (middle_end/flambda/inlining_cost.ml[45,2043+22]..[45,2043+23])
                    Pexp_constant PConst_int (2,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[46,2067+4]..[46,2067+24])
                    Ppat_construct "Parrayrefu" (middle_end/flambda/inlining_cost.ml[46,2067+4]..[46,2067+14])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[46,2067+15]..[46,2067+24])
                        Ppat_construct "Pgenarray" (middle_end/flambda/inlining_cost.ml[46,2067+15]..[46,2067+24])
                        None
                  expression (middle_end/flambda/inlining_cost.ml[46,2067+28]..[46,2067+30])
                    Pexp_constant PConst_int (12,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[47,2098+4]..[47,2098+16])
                    Ppat_construct "Parrayrefu" (middle_end/flambda/inlining_cost.ml[47,2098+4]..[47,2098+14])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[47,2098+15]..[47,2098+16])
                        Ppat_any
                  expression (middle_end/flambda/inlining_cost.ml[47,2098+20]..[47,2098+21])
                    Pexp_constant PConst_int (2,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[48,2120+4]..[48,2120+24])
                    Ppat_construct "Parraysetu" (middle_end/flambda/inlining_cost.ml[48,2120+4]..[48,2120+14])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[48,2120+15]..[48,2120+24])
                        Ppat_construct "Pgenarray" (middle_end/flambda/inlining_cost.ml[48,2120+15]..[48,2120+24])
                        None
                  expression (middle_end/flambda/inlining_cost.ml[48,2120+28]..[48,2120+30])
                    Pexp_constant PConst_int (16,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[49,2151+4]..[49,2151+16])
                    Ppat_construct "Parraysetu" (middle_end/flambda/inlining_cost.ml[49,2151+4]..[49,2151+14])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[49,2151+15]..[49,2151+16])
                        Ppat_any
                  expression (middle_end/flambda/inlining_cost.ml[49,2151+20]..[49,2151+21])
                    Pexp_constant PConst_int (4,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[50,2173+4]..[50,2173+24])
                    Ppat_construct "Parrayrefs" (middle_end/flambda/inlining_cost.ml[50,2173+4]..[50,2173+14])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[50,2173+15]..[50,2173+24])
                        Ppat_construct "Pgenarray" (middle_end/flambda/inlining_cost.ml[50,2173+15]..[50,2173+24])
                        None
                  expression (middle_end/flambda/inlining_cost.ml[50,2173+28]..[50,2173+30])
                    Pexp_constant PConst_int (18,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[51,2204+4]..[51,2204+16])
                    Ppat_construct "Parrayrefs" (middle_end/flambda/inlining_cost.ml[51,2204+4]..[51,2204+14])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[51,2204+15]..[51,2204+16])
                        Ppat_any
                  expression (middle_end/flambda/inlining_cost.ml[51,2204+20]..[51,2204+21])
                    Pexp_constant PConst_int (8,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[52,2226+4]..[52,2226+24])
                    Ppat_construct "Parraysets" (middle_end/flambda/inlining_cost.ml[52,2226+4]..[52,2226+14])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[52,2226+15]..[52,2226+24])
                        Ppat_construct "Pgenarray" (middle_end/flambda/inlining_cost.ml[52,2226+15]..[52,2226+24])
                        None
                  expression (middle_end/flambda/inlining_cost.ml[52,2226+28]..[52,2226+30])
                    Pexp_constant PConst_int (22,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[53,2257+4]..[53,2257+16])
                    Ppat_construct "Parraysets" (middle_end/flambda/inlining_cost.ml[53,2257+4]..[53,2257+14])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[53,2257+15]..[53,2257+16])
                        Ppat_any
                  expression (middle_end/flambda/inlining_cost.ml[53,2257+20]..[53,2257+22])
                    Pexp_constant PConst_int (10,None)
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[54,2280+4]..[54,2280+33])
                    Ppat_construct "Pbigarrayref" (middle_end/flambda/inlining_cost.ml[54,2280+4]..[54,2280+16])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[54,2280+17]..[54,2280+33])
                        Ppat_tuple
                        [
                          pattern (middle_end/flambda/inlining_cost.ml[54,2280+18]..[54,2280+19])
                            Ppat_any
                          pattern (middle_end/flambda/inlining_cost.ml[54,2280+21]..[54,2280+26])
                            Ppat_var "ndims" (middle_end/flambda/inlining_cost.ml[54,2280+21]..[54,2280+26])
                          pattern (middle_end/flambda/inlining_cost.ml[54,2280+28]..[54,2280+29])
                            Ppat_any
                          pattern (middle_end/flambda/inlining_cost.ml[54,2280+31]..[54,2280+32])
                            Ppat_any
                        ]
                  expression (middle_end/flambda/inlining_cost.ml[54,2280+37]..[54,2280+50])
                    Pexp_apply
                    expression (middle_end/flambda/inlining_cost.ml[54,2280+39]..[54,2280+40])
                      Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[54,2280+39]..[54,2280+40])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[54,2280+37]..[54,2280+38])
                          Pexp_constant PConst_int (4,None)
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[54,2280+41]..[54,2280+50])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[54,2280+47]..[54,2280+48])
                            Pexp_ident "*" (middle_end/flambda/inlining_cost.ml[54,2280+47]..[54,2280+48])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[54,2280+41]..[54,2280+46])
                                Pexp_ident "ndims" (middle_end/flambda/inlining_cost.ml[54,2280+41]..[54,2280+46])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[54,2280+49]..[54,2280+50])
                                Pexp_constant PConst_int (6,None)
                          ]
                    ]
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[55,2331+4]..[55,2331+33])
                    Ppat_construct "Pbigarrayset" (middle_end/flambda/inlining_cost.ml[55,2331+4]..[55,2331+16])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[55,2331+17]..[55,2331+33])
                        Ppat_tuple
                        [
                          pattern (middle_end/flambda/inlining_cost.ml[55,2331+18]..[55,2331+19])
                            Ppat_any
                          pattern (middle_end/flambda/inlining_cost.ml[55,2331+21]..[55,2331+26])
                            Ppat_var "ndims" (middle_end/flambda/inlining_cost.ml[55,2331+21]..[55,2331+26])
                          pattern (middle_end/flambda/inlining_cost.ml[55,2331+28]..[55,2331+29])
                            Ppat_any
                          pattern (middle_end/flambda/inlining_cost.ml[55,2331+31]..[55,2331+32])
                            Ppat_any
                        ]
                  expression (middle_end/flambda/inlining_cost.ml[55,2331+37]..[55,2331+50])
                    Pexp_apply
                    expression (middle_end/flambda/inlining_cost.ml[55,2331+39]..[55,2331+40])
                      Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[55,2331+39]..[55,2331+40])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[55,2331+37]..[55,2331+38])
                          Pexp_constant PConst_int (4,None)
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[55,2331+41]..[55,2331+50])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[55,2331+47]..[55,2331+48])
                            Pexp_ident "*" (middle_end/flambda/inlining_cost.ml[55,2331+47]..[55,2331+48])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[55,2331+41]..[55,2331+46])
                                Pexp_ident "ndims" (middle_end/flambda/inlining_cost.ml[55,2331+41]..[55,2331+46])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[55,2331+49]..[55,2331+50])
                                Pexp_constant PConst_int (6,None)
                          ]
                    ]
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[56,2382+4]..[56,2382+22])
                    Ppat_or
                    pattern (middle_end/flambda/inlining_cost.ml[56,2382+4]..[56,2382+12])
                      Ppat_construct "Psequand" (middle_end/flambda/inlining_cost.ml[56,2382+4]..[56,2382+12])
                      None
                    pattern (middle_end/flambda/inlining_cost.ml[56,2382+15]..[56,2382+22])
                      Ppat_construct "Psequor" (middle_end/flambda/inlining_cost.ml[56,2382+15]..[56,2382+22])
                      None
                  expression (middle_end/flambda/inlining_cost.ml[57,2408+4]..[58,2477+71])
                    Pexp_apply
                    expression (middle_end/flambda/inlining_cost.ml[57,2408+4]..[57,2408+20])
                      Pexp_ident "Misc.fatal_error" (middle_end/flambda/inlining_cost.ml[57,2408+4]..[57,2408+20])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[57,2408+21]..[58,2477+71])
                          Pexp_constant PConst_string("Psequand and Psequor are not allowed in Prim expressions; translate out instead (cf. closure_conversion.ml)",(middle_end/flambda/inlining_cost.ml[57,2408+22]..[58,2477+70]),None)
                    ]
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[61,2681+4]..[61,2681+5])
                    Ppat_any
                  expression (middle_end/flambda/inlining_cost.ml[61,2681+9]..[61,2681+10])
                    Pexp_constant PConst_int (2,None)
              ]
    ]
  structure_item (middle_end/flambda/inlining_cost.ml[67,2858+0]..[67,2858+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inlining_cost.ml[67,2858+4]..[67,2858+20])
          Ppat_var "direct_call_size" (middle_end/flambda/inlining_cost.ml[67,2858+4]..[67,2858+20])
        expression (middle_end/flambda/inlining_cost.ml[67,2858+23]..[67,2858+24])
          Pexp_constant PConst_int (4,None)
    ]
  structure_item (middle_end/flambda/inlining_cost.ml[68,2883+0]..[68,2883+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inlining_cost.ml[68,2883+4]..[68,2883+16])
          Ppat_var "project_size" (middle_end/flambda/inlining_cost.ml[68,2883+4]..[68,2883+16])
        expression (middle_end/flambda/inlining_cost.ml[68,2883+19]..[68,2883+20])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (middle_end/flambda/inlining_cost.ml[70,2905+0]..[142,5428+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inlining_cost.ml[70,2905+4]..[70,2905+19])
          Ppat_var "lambda_smaller'" (middle_end/flambda/inlining_cost.ml[70,2905+4]..[70,2905+19])
        expression (middle_end/flambda/inlining_cost.ml[70,2905+20]..[142,5428+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inlining_cost.ml[70,2905+20]..[70,2905+23])
            Ppat_var "lam" (middle_end/flambda/inlining_cost.ml[70,2905+20]..[70,2905+23])
          expression (middle_end/flambda/inlining_cost.ml[70,2905+24]..[142,5428+8]) ghost
            Pexp_fun
            Labelled "than"
            None
            pattern (middle_end/flambda/inlining_cost.ml[70,2905+30]..[70,2905+39])
              Ppat_var "threshold" (middle_end/flambda/inlining_cost.ml[70,2905+30]..[70,2905+39])
            expression (middle_end/flambda/inlining_cost.ml[71,2947+2]..[142,5428+8])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/inlining_cost.ml[71,2947+6]..[71,2947+10])
                    Ppat_var "size" (middle_end/flambda/inlining_cost.ml[71,2947+6]..[71,2947+10])
                  expression (middle_end/flambda/inlining_cost.ml[71,2947+13]..[71,2947+18])
                    Pexp_apply
                    expression (middle_end/flambda/inlining_cost.ml[71,2947+13]..[71,2947+16])
                      Pexp_ident "ref" (middle_end/flambda/inlining_cost.ml[71,2947+13]..[71,2947+16])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[71,2947+17]..[71,2947+18])
                          Pexp_constant PConst_int (0,None)
                    ]
              ]
              expression (middle_end/flambda/inlining_cost.ml[72,2969+2]..[142,5428+8])
                Pexp_let Rec
                [
                  <def>
                    pattern (middle_end/flambda/inlining_cost.ml[72,2969+10]..[72,2969+21])
                      Ppat_var "lambda_size" (middle_end/flambda/inlining_cost.ml[72,2969+10]..[72,2969+21])
                    expression (middle_end/flambda/inlining_cost.ml[72,2969+22]..[118,4627+41]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/inlining_cost.ml[72,2969+22]..[72,2969+39])
                        Ppat_constraint
                        pattern (middle_end/flambda/inlining_cost.ml[72,2969+23]..[72,2969+26])
                          Ppat_var "lam" (middle_end/flambda/inlining_cost.ml[72,2969+23]..[72,2969+26])
                        core_type (middle_end/flambda/inlining_cost.ml[72,2969+29]..[72,2969+38])
                          Ptyp_constr "Flambda.t" (middle_end/flambda/inlining_cost.ml[72,2969+29]..[72,2969+38])
                          []
                      expression (middle_end/flambda/inlining_cost.ml[73,3011+4]..[118,4627+41])
                        Pexp_sequence
                        expression (middle_end/flambda/inlining_cost.ml[73,3011+4]..[73,3011+40])
                          Pexp_ifthenelse
                          expression (middle_end/flambda/inlining_cost.ml[73,3011+7]..[73,3011+24])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[73,3011+13]..[73,3011+14])
                              Pexp_ident ">" (middle_end/flambda/inlining_cost.ml[73,3011+13]..[73,3011+14])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[73,3011+7]..[73,3011+12])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[73,3011+7]..[73,3011+8])
                                    Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[73,3011+7]..[73,3011+8])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[73,3011+8]..[73,3011+12])
                                        Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[73,3011+8]..[73,3011+12])
                                  ]
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[73,3011+15]..[73,3011+24])
                                  Pexp_ident "threshold" (middle_end/flambda/inlining_cost.ml[73,3011+15]..[73,3011+24])
                            ]
                          expression (middle_end/flambda/inlining_cost.ml[73,3011+30]..[73,3011+40])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[73,3011+30]..[73,3011+35])
                              Pexp_ident "raise" (middle_end/flambda/inlining_cost.ml[73,3011+30]..[73,3011+35])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[73,3011+36]..[73,3011+40])
                                  Pexp_construct "Exit" (middle_end/flambda/inlining_cost.ml[73,3011+36]..[73,3011+40])
                                  None
                            ]
                          None
                        expression (middle_end/flambda/inlining_cost.ml[74,3053+4]..[118,4627+41])
                          Pexp_match
                          expression (middle_end/flambda/inlining_cost.ml[74,3053+10]..[74,3053+13])
                            Pexp_ident "lam" (middle_end/flambda/inlining_cost.ml[74,3053+10]..[74,3053+13])
                          [
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[75,3072+6]..[75,3072+11])
                                Ppat_construct "Var" (middle_end/flambda/inlining_cost.ml[75,3072+6]..[75,3072+9])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[75,3072+10]..[75,3072+11])
                                    Ppat_any
                              expression (middle_end/flambda/inlining_cost.ml[75,3072+15]..[75,3072+17])
                                Pexp_construct "()" (middle_end/flambda/inlining_cost.ml[75,3072+15]..[75,3072+17])
                                None
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[76,3090+6]..[76,3090+51])
                                Ppat_construct "Apply" (middle_end/flambda/inlining_cost.ml[76,3090+6]..[76,3090+11])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[76,3090+12]..[76,3090+51])
                                    Ppat_record Closed
                                    [
                                      "func" (middle_end/flambda/inlining_cost.ml[76,3090+15]..[76,3090+19])
                                        pattern (middle_end/flambda/inlining_cost.ml[76,3090+22]..[76,3090+23])
                                          Ppat_any
                                      "args" (middle_end/flambda/inlining_cost.ml[76,3090+25]..[76,3090+29])
                                        pattern (middle_end/flambda/inlining_cost.ml[76,3090+32]..[76,3090+33])
                                          Ppat_any
                                      "kind" (middle_end/flambda/inlining_cost.ml[76,3090+35]..[76,3090+39])
                                        pattern (middle_end/flambda/inlining_cost.ml[76,3090+42]..[76,3090+48])
                                          Ppat_var "direct" (middle_end/flambda/inlining_cost.ml[76,3090+42]..[76,3090+48])
                                    ]
                              expression (middle_end/flambda/inlining_cost.ml[77,3145+6]..[80,3247+31])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inlining_cost.ml[77,3145+10]..[77,3145+19])
                                      Ppat_var "call_cost" (middle_end/flambda/inlining_cost.ml[77,3145+10]..[77,3145+19])
                                    expression (middle_end/flambda/inlining_cost.ml[78,3167+8]..[78,3167+70])
                                      Pexp_match
                                      expression (middle_end/flambda/inlining_cost.ml[78,3167+14]..[78,3167+20])
                                        Pexp_ident "direct" (middle_end/flambda/inlining_cost.ml[78,3167+14]..[78,3167+20])
                                      [
                                        <case>
                                          pattern (middle_end/flambda/inlining_cost.ml[78,3167+26]..[78,3167+34])
                                            Ppat_construct "Indirect" (middle_end/flambda/inlining_cost.ml[78,3167+26]..[78,3167+34])
                                            None
                                          expression (middle_end/flambda/inlining_cost.ml[78,3167+38]..[78,3167+39])
                                            Pexp_constant PConst_int (6,None)
                                        <case>
                                          pattern (middle_end/flambda/inlining_cost.ml[78,3167+42]..[78,3167+50])
                                            Ppat_construct "Direct" (middle_end/flambda/inlining_cost.ml[78,3167+42]..[78,3167+48])
                                            Some
                                              []
                                              pattern (middle_end/flambda/inlining_cost.ml[78,3167+49]..[78,3167+50])
                                                Ppat_any
                                          expression (middle_end/flambda/inlining_cost.ml[78,3167+54]..[78,3167+70])
                                            Pexp_ident "direct_call_size" (middle_end/flambda/inlining_cost.ml[78,3167+54]..[78,3167+70])
                                      ]
                                ]
                                expression (middle_end/flambda/inlining_cost.ml[80,3247+6]..[80,3247+31])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[80,3247+11]..[80,3247+13])
                                    Pexp_ident ":=" (middle_end/flambda/inlining_cost.ml[80,3247+11]..[80,3247+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[80,3247+6]..[80,3247+10])
                                        Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[80,3247+6]..[80,3247+10])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[80,3247+14]..[80,3247+31])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[80,3247+20]..[80,3247+21])
                                          Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[80,3247+20]..[80,3247+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[80,3247+14]..[80,3247+19])
                                              Pexp_apply
                                              expression (middle_end/flambda/inlining_cost.ml[80,3247+14]..[80,3247+15])
                                                Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[80,3247+14]..[80,3247+15])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inlining_cost.ml[80,3247+15]..[80,3247+19])
                                                    Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[80,3247+15]..[80,3247+19])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[80,3247+22]..[80,3247+31])
                                              Pexp_ident "call_cost" (middle_end/flambda/inlining_cost.ml[80,3247+22]..[80,3247+31])
                                        ]
                                  ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[81,3279+6]..[81,3279+14])
                                Ppat_construct "Assign" (middle_end/flambda/inlining_cost.ml[81,3279+6]..[81,3279+12])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[81,3279+13]..[81,3279+14])
                                    Ppat_any
                              expression (middle_end/flambda/inlining_cost.ml[81,3279+18]..[81,3279+27])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[81,3279+18]..[81,3279+22])
                                  Pexp_ident "incr" (middle_end/flambda/inlining_cost.ml[81,3279+18]..[81,3279+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[81,3279+23]..[81,3279+27])
                                      Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[81,3279+23]..[81,3279+27])
                                ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[82,3307+6]..[82,3307+12])
                                Ppat_construct "Send" (middle_end/flambda/inlining_cost.ml[82,3307+6]..[82,3307+10])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[82,3307+11]..[82,3307+12])
                                    Ppat_any
                              expression (middle_end/flambda/inlining_cost.ml[82,3307+16]..[82,3307+33])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[82,3307+21]..[82,3307+23])
                                  Pexp_ident ":=" (middle_end/flambda/inlining_cost.ml[82,3307+21]..[82,3307+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[82,3307+16]..[82,3307+20])
                                      Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[82,3307+16]..[82,3307+20])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[82,3307+24]..[82,3307+33])
                                      Pexp_apply
                                      expression (middle_end/flambda/inlining_cost.ml[82,3307+30]..[82,3307+31])
                                        Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[82,3307+30]..[82,3307+31])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[82,3307+24]..[82,3307+29])
                                            Pexp_apply
                                            expression (middle_end/flambda/inlining_cost.ml[82,3307+24]..[82,3307+25])
                                              Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[82,3307+24]..[82,3307+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[82,3307+25]..[82,3307+29])
                                                  Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[82,3307+25]..[82,3307+29])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[82,3307+32]..[82,3307+33])
                                            Pexp_constant PConst_int (8,None)
                                      ]
                                ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[83,3341+6]..[83,3341+24])
                                Ppat_construct "Proved_unreachable" (middle_end/flambda/inlining_cost.ml[83,3341+6]..[83,3341+24])
                                None
                              expression (middle_end/flambda/inlining_cost.ml[83,3341+28]..[83,3341+30])
                                Pexp_construct "()" (middle_end/flambda/inlining_cost.ml[83,3341+28]..[83,3341+30])
                                None
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[84,3372+6]..[84,3372+36])
                                Ppat_construct "Let" (middle_end/flambda/inlining_cost.ml[84,3372+6]..[84,3372+9])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[84,3372+10]..[84,3372+36])
                                    Ppat_record Open
                                    [
                                      "defining_expr" (middle_end/flambda/inlining_cost.ml[84,3372+12]..[84,3372+25]) ghost
                                        pattern (middle_end/flambda/inlining_cost.ml[84,3372+12]..[84,3372+25])
                                          Ppat_var "defining_expr" (middle_end/flambda/inlining_cost.ml[84,3372+12]..[84,3372+25])
                                      "body" (middle_end/flambda/inlining_cost.ml[84,3372+27]..[84,3372+31]) ghost
                                        pattern (middle_end/flambda/inlining_cost.ml[84,3372+27]..[84,3372+31])
                                          Ppat_var "body" (middle_end/flambda/inlining_cost.ml[84,3372+27]..[84,3372+31])
                                    ]
                              expression (middle_end/flambda/inlining_cost.ml[85,3412+6]..[86,3451+22])
                                Pexp_sequence
                                expression (middle_end/flambda/inlining_cost.ml[85,3412+6]..[85,3412+37])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[85,3412+6]..[85,3412+23])
                                    Pexp_ident "lambda_named_size" (middle_end/flambda/inlining_cost.ml[85,3412+6]..[85,3412+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[85,3412+24]..[85,3412+37])
                                        Pexp_ident "defining_expr" (middle_end/flambda/inlining_cost.ml[85,3412+24]..[85,3412+37])
                                  ]
                                expression (middle_end/flambda/inlining_cost.ml[86,3451+6]..[86,3451+22])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[86,3451+6]..[86,3451+17])
                                    Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[86,3451+6]..[86,3451+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[86,3451+18]..[86,3451+22])
                                        Pexp_ident "body" (middle_end/flambda/inlining_cost.ml[86,3451+18]..[86,3451+22])
                                  ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[87,3474+6]..[87,3474+26])
                                Ppat_construct "Let_mutable" (middle_end/flambda/inlining_cost.ml[87,3474+6]..[87,3474+17])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[87,3474+18]..[87,3474+26])
                                    Ppat_record Closed
                                    [
                                      "body" (middle_end/flambda/inlining_cost.ml[87,3474+20]..[87,3474+24]) ghost
                                        pattern (middle_end/flambda/inlining_cost.ml[87,3474+20]..[87,3474+24])
                                          Ppat_var "body" (middle_end/flambda/inlining_cost.ml[87,3474+20]..[87,3474+24])
                                    ]
                              expression (middle_end/flambda/inlining_cost.ml[87,3474+30]..[87,3474+46])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[87,3474+30]..[87,3474+41])
                                  Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[87,3474+30]..[87,3474+41])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[87,3474+42]..[87,3474+46])
                                      Pexp_ident "body" (middle_end/flambda/inlining_cost.ml[87,3474+42]..[87,3474+46])
                                ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[88,3521+6]..[88,3521+30])
                                Ppat_construct "Let_rec" (middle_end/flambda/inlining_cost.ml[88,3521+6]..[88,3521+13])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[88,3521+14]..[88,3521+30])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inlining_cost.ml[88,3521+15]..[88,3521+23])
                                        Ppat_var "bindings" (middle_end/flambda/inlining_cost.ml[88,3521+15]..[88,3521+23])
                                      pattern (middle_end/flambda/inlining_cost.ml[88,3521+25]..[88,3521+29])
                                        Ppat_var "body" (middle_end/flambda/inlining_cost.ml[88,3521+25]..[88,3521+29])
                                    ]
                              expression (middle_end/flambda/inlining_cost.ml[89,3555+6]..[90,3621+22])
                                Pexp_sequence
                                expression (middle_end/flambda/inlining_cost.ml[89,3555+6]..[89,3555+64])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[89,3555+6]..[89,3555+15])
                                    Pexp_ident "List.iter" (middle_end/flambda/inlining_cost.ml[89,3555+6]..[89,3555+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[89,3555+16]..[89,3555+55])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/flambda/inlining_cost.ml[89,3555+21]..[89,3555+29])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/flambda/inlining_cost.ml[89,3555+22]..[89,3555+23])
                                              Ppat_any
                                            pattern (middle_end/flambda/inlining_cost.ml[89,3555+25]..[89,3555+28])
                                              Ppat_var "lam" (middle_end/flambda/inlining_cost.ml[89,3555+25]..[89,3555+28])
                                          ]
                                        expression (middle_end/flambda/inlining_cost.ml[89,3555+33]..[89,3555+54])
                                          Pexp_apply
                                          expression (middle_end/flambda/inlining_cost.ml[89,3555+33]..[89,3555+50])
                                            Pexp_ident "lambda_named_size" (middle_end/flambda/inlining_cost.ml[89,3555+33]..[89,3555+50])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[89,3555+51]..[89,3555+54])
                                                Pexp_ident "lam" (middle_end/flambda/inlining_cost.ml[89,3555+51]..[89,3555+54])
                                          ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[89,3555+56]..[89,3555+64])
                                        Pexp_ident "bindings" (middle_end/flambda/inlining_cost.ml[89,3555+56]..[89,3555+64])
                                  ]
                                expression (middle_end/flambda/inlining_cost.ml[90,3621+6]..[90,3621+22])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[90,3621+6]..[90,3621+17])
                                    Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[90,3621+6]..[90,3621+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[90,3621+18]..[90,3621+22])
                                        Pexp_ident "body" (middle_end/flambda/inlining_cost.ml[90,3621+18]..[90,3621+22])
                                  ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[91,3644+6]..[91,3644+20])
                                Ppat_construct "Switch" (middle_end/flambda/inlining_cost.ml[91,3644+6]..[91,3644+12])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[91,3644+13]..[91,3644+20])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inlining_cost.ml[91,3644+14]..[91,3644+15])
                                        Ppat_any
                                      pattern (middle_end/flambda/inlining_cost.ml[91,3644+17]..[91,3644+19])
                                        Ppat_var "sw" (middle_end/flambda/inlining_cost.ml[91,3644+17]..[91,3644+19])
                                    ]
                              expression (middle_end/flambda/inlining_cost.ml[92,3668+6]..[100,3967+43])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inlining_cost.ml[92,3668+10]..[92,3668+14])
                                      Ppat_var "cost" (middle_end/flambda/inlining_cost.ml[92,3668+10]..[92,3668+14])
                                    expression (middle_end/flambda/inlining_cost.ml[92,3668+15]..[95,3759+21]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/inlining_cost.ml[92,3668+15]..[92,3668+20])
                                        Ppat_var "cases" (middle_end/flambda/inlining_cost.ml[92,3668+15]..[92,3668+20])
                                      expression (middle_end/flambda/inlining_cost.ml[93,3691+8]..[95,3759+21])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/inlining_cost.ml[93,3691+12]..[93,3691+16])
                                              Ppat_var "size" (middle_end/flambda/inlining_cost.ml[93,3691+12]..[93,3691+16])
                                            expression (middle_end/flambda/inlining_cost.ml[93,3691+19]..[93,3691+36])
                                              Pexp_apply
                                              expression (middle_end/flambda/inlining_cost.ml[93,3691+19]..[93,3691+30])
                                                Pexp_ident "List.length" (middle_end/flambda/inlining_cost.ml[93,3691+19]..[93,3691+30])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inlining_cost.ml[93,3691+31]..[93,3691+36])
                                                    Pexp_ident "cases" (middle_end/flambda/inlining_cost.ml[93,3691+31]..[93,3691+36])
                                              ]
                                        ]
                                        expression (middle_end/flambda/inlining_cost.ml[94,3731+8]..[95,3759+21])
                                          Pexp_ifthenelse
                                          expression (middle_end/flambda/inlining_cost.ml[94,3731+11]..[94,3731+20])
                                            Pexp_apply
                                            expression (middle_end/flambda/inlining_cost.ml[94,3731+16]..[94,3731+18])
                                              Pexp_ident "<=" (middle_end/flambda/inlining_cost.ml[94,3731+16]..[94,3731+18])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[94,3731+11]..[94,3731+15])
                                                  Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[94,3731+11]..[94,3731+15])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[94,3731+19]..[94,3731+20])
                                                  Pexp_constant PConst_int (1,None)
                                            ]
                                          expression (middle_end/flambda/inlining_cost.ml[94,3731+26]..[94,3731+27])
                                            Pexp_constant PConst_int (0,None)
                                          Some
                                            expression (middle_end/flambda/inlining_cost.ml[95,3759+13]..[95,3759+21])
                                              Pexp_apply
                                              expression (middle_end/flambda/inlining_cost.ml[95,3759+15]..[95,3759+16])
                                                Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[95,3759+15]..[95,3759+16])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inlining_cost.ml[95,3759+13]..[95,3759+14])
                                                    Pexp_constant PConst_int (3,None)
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inlining_cost.ml[95,3759+17]..[95,3759+21])
                                                    Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[95,3759+17]..[95,3759+21])
                                              ]
                                ]
                                expression (middle_end/flambda/inlining_cost.ml[97,3790+6]..[100,3967+43])
                                  Pexp_sequence
                                  expression (middle_end/flambda/inlining_cost.ml[97,3790+6]..[97,3790+53])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[97,3790+11]..[97,3790+13])
                                      Pexp_ident ":=" (middle_end/flambda/inlining_cost.ml[97,3790+11]..[97,3790+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[97,3790+6]..[97,3790+10])
                                          Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[97,3790+6]..[97,3790+10])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[97,3790+14]..[97,3790+53])
                                          Pexp_apply
                                          expression (middle_end/flambda/inlining_cost.ml[97,3790+37]..[97,3790+38])
                                            Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[97,3790+37]..[97,3790+38])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[97,3790+14]..[97,3790+36])
                                                Pexp_apply
                                                expression (middle_end/flambda/inlining_cost.ml[97,3790+20]..[97,3790+21])
                                                  Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[97,3790+20]..[97,3790+21])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inlining_cost.ml[97,3790+14]..[97,3790+19])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inlining_cost.ml[97,3790+14]..[97,3790+15])
                                                        Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[97,3790+14]..[97,3790+15])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inlining_cost.ml[97,3790+15]..[97,3790+19])
                                                            Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[97,3790+15]..[97,3790+19])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inlining_cost.ml[97,3790+22]..[97,3790+36])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inlining_cost.ml[97,3790+22]..[97,3790+26])
                                                        Pexp_ident "cost" (middle_end/flambda/inlining_cost.ml[97,3790+22]..[97,3790+26])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inlining_cost.ml[97,3790+27]..[97,3790+36])
                                                            Pexp_field
                                                            expression (middle_end/flambda/inlining_cost.ml[97,3790+27]..[97,3790+29])
                                                              Pexp_ident "sw" (middle_end/flambda/inlining_cost.ml[97,3790+27]..[97,3790+29])
                                                            "consts" (middle_end/flambda/inlining_cost.ml[97,3790+30]..[97,3790+36])
                                                      ]
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[97,3790+39]..[97,3790+53])
                                                Pexp_apply
                                                expression (middle_end/flambda/inlining_cost.ml[97,3790+39]..[97,3790+43])
                                                  Pexp_ident "cost" (middle_end/flambda/inlining_cost.ml[97,3790+39]..[97,3790+43])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inlining_cost.ml[97,3790+44]..[97,3790+53])
                                                      Pexp_field
                                                      expression (middle_end/flambda/inlining_cost.ml[97,3790+44]..[97,3790+46])
                                                        Pexp_ident "sw" (middle_end/flambda/inlining_cost.ml[97,3790+44]..[97,3790+46])
                                                      "blocks" (middle_end/flambda/inlining_cost.ml[97,3790+47]..[97,3790+53])
                                                ]
                                          ]
                                    ]
                                  expression (middle_end/flambda/inlining_cost.ml[98,3845+6]..[100,3967+43])
                                    Pexp_sequence
                                    expression (middle_end/flambda/inlining_cost.ml[98,3845+6]..[98,3845+59])
                                      Pexp_apply
                                      expression (middle_end/flambda/inlining_cost.ml[98,3845+6]..[98,3845+15])
                                        Pexp_ident "List.iter" (middle_end/flambda/inlining_cost.ml[98,3845+6]..[98,3845+15])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[98,3845+16]..[98,3845+49])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/flambda/inlining_cost.ml[98,3845+21]..[98,3845+29])
                                              Ppat_tuple
                                              [
                                                pattern (middle_end/flambda/inlining_cost.ml[98,3845+22]..[98,3845+23])
                                                  Ppat_any
                                                pattern (middle_end/flambda/inlining_cost.ml[98,3845+25]..[98,3845+28])
                                                  Ppat_var "lam" (middle_end/flambda/inlining_cost.ml[98,3845+25]..[98,3845+28])
                                              ]
                                            expression (middle_end/flambda/inlining_cost.ml[98,3845+33]..[98,3845+48])
                                              Pexp_apply
                                              expression (middle_end/flambda/inlining_cost.ml[98,3845+33]..[98,3845+44])
                                                Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[98,3845+33]..[98,3845+44])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inlining_cost.ml[98,3845+45]..[98,3845+48])
                                                    Pexp_ident "lam" (middle_end/flambda/inlining_cost.ml[98,3845+45]..[98,3845+48])
                                              ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[98,3845+50]..[98,3845+59])
                                            Pexp_field
                                            expression (middle_end/flambda/inlining_cost.ml[98,3845+50]..[98,3845+52])
                                              Pexp_ident "sw" (middle_end/flambda/inlining_cost.ml[98,3845+50]..[98,3845+52])
                                            "consts" (middle_end/flambda/inlining_cost.ml[98,3845+53]..[98,3845+59])
                                      ]
                                    expression (middle_end/flambda/inlining_cost.ml[99,3906+6]..[100,3967+43])
                                      Pexp_sequence
                                      expression (middle_end/flambda/inlining_cost.ml[99,3906+6]..[99,3906+59])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[99,3906+6]..[99,3906+15])
                                          Pexp_ident "List.iter" (middle_end/flambda/inlining_cost.ml[99,3906+6]..[99,3906+15])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[99,3906+16]..[99,3906+49])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/flambda/inlining_cost.ml[99,3906+21]..[99,3906+29])
                                                Ppat_tuple
                                                [
                                                  pattern (middle_end/flambda/inlining_cost.ml[99,3906+22]..[99,3906+23])
                                                    Ppat_any
                                                  pattern (middle_end/flambda/inlining_cost.ml[99,3906+25]..[99,3906+28])
                                                    Ppat_var "lam" (middle_end/flambda/inlining_cost.ml[99,3906+25]..[99,3906+28])
                                                ]
                                              expression (middle_end/flambda/inlining_cost.ml[99,3906+33]..[99,3906+48])
                                                Pexp_apply
                                                expression (middle_end/flambda/inlining_cost.ml[99,3906+33]..[99,3906+44])
                                                  Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[99,3906+33]..[99,3906+44])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inlining_cost.ml[99,3906+45]..[99,3906+48])
                                                      Pexp_ident "lam" (middle_end/flambda/inlining_cost.ml[99,3906+45]..[99,3906+48])
                                                ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[99,3906+50]..[99,3906+59])
                                              Pexp_field
                                              expression (middle_end/flambda/inlining_cost.ml[99,3906+50]..[99,3906+52])
                                                Pexp_ident "sw" (middle_end/flambda/inlining_cost.ml[99,3906+50]..[99,3906+52])
                                              "blocks" (middle_end/flambda/inlining_cost.ml[99,3906+53]..[99,3906+59])
                                        ]
                                      expression (middle_end/flambda/inlining_cost.ml[100,3967+6]..[100,3967+43])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[100,3967+6]..[100,3967+17])
                                          Pexp_ident "Option.iter" (middle_end/flambda/inlining_cost.ml[100,3967+6]..[100,3967+17])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[100,3967+18]..[100,3967+29])
                                              Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[100,3967+18]..[100,3967+29])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[100,3967+30]..[100,3967+43])
                                              Pexp_field
                                              expression (middle_end/flambda/inlining_cost.ml[100,3967+30]..[100,3967+32])
                                                Pexp_ident "sw" (middle_end/flambda/inlining_cost.ml[100,3967+30]..[100,3967+32])
                                              "failaction" (middle_end/flambda/inlining_cost.ml[100,3967+33]..[100,3967+43])
                                        ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[101,4011+6]..[101,4011+32])
                                Ppat_construct "String_switch" (middle_end/flambda/inlining_cost.ml[101,4011+6]..[101,4011+19])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[101,4011+20]..[101,4011+32])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inlining_cost.ml[101,4011+21]..[101,4011+22])
                                        Ppat_any
                                      pattern (middle_end/flambda/inlining_cost.ml[101,4011+24]..[101,4011+26])
                                        Ppat_var "sw" (middle_end/flambda/inlining_cost.ml[101,4011+24]..[101,4011+26])
                                      pattern (middle_end/flambda/inlining_cost.ml[101,4011+28]..[101,4011+31])
                                        Ppat_var "def" (middle_end/flambda/inlining_cost.ml[101,4011+28]..[101,4011+31])
                                    ]
                              expression (middle_end/flambda/inlining_cost.ml[102,4047+6]..[106,4148+33])
                                Pexp_sequence
                                expression (middle_end/flambda/inlining_cost.ml[102,4047+6]..[105,4136+10])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[102,4047+6]..[102,4047+15])
                                    Pexp_ident "List.iter" (middle_end/flambda/inlining_cost.ml[102,4047+6]..[102,4047+15])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[102,4047+16]..[104,4109+26])
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/flambda/inlining_cost.ml[102,4047+21]..[102,4047+29])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/flambda/inlining_cost.ml[102,4047+22]..[102,4047+23])
                                              Ppat_any
                                            pattern (middle_end/flambda/inlining_cost.ml[102,4047+25]..[102,4047+28])
                                              Ppat_var "lam" (middle_end/flambda/inlining_cost.ml[102,4047+25]..[102,4047+28])
                                          ]
                                        expression (middle_end/flambda/inlining_cost.ml[103,4080+10]..[104,4109+25])
                                          Pexp_sequence
                                          expression (middle_end/flambda/inlining_cost.ml[103,4080+10]..[103,4080+27])
                                            Pexp_apply
                                            expression (middle_end/flambda/inlining_cost.ml[103,4080+15]..[103,4080+17])
                                              Pexp_ident ":=" (middle_end/flambda/inlining_cost.ml[103,4080+15]..[103,4080+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[103,4080+10]..[103,4080+14])
                                                  Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[103,4080+10]..[103,4080+14])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[103,4080+18]..[103,4080+27])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inlining_cost.ml[103,4080+24]..[103,4080+25])
                                                    Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[103,4080+24]..[103,4080+25])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inlining_cost.ml[103,4080+18]..[103,4080+23])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inlining_cost.ml[103,4080+18]..[103,4080+19])
                                                          Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[103,4080+18]..[103,4080+19])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inlining_cost.ml[103,4080+19]..[103,4080+23])
                                                              Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[103,4080+19]..[103,4080+23])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inlining_cost.ml[103,4080+26]..[103,4080+27])
                                                        Pexp_constant PConst_int (2,None)
                                                  ]
                                            ]
                                          expression (middle_end/flambda/inlining_cost.ml[104,4109+10]..[104,4109+25])
                                            Pexp_apply
                                            expression (middle_end/flambda/inlining_cost.ml[104,4109+10]..[104,4109+21])
                                              Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[104,4109+10]..[104,4109+21])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[104,4109+22]..[104,4109+25])
                                                  Pexp_ident "lam" (middle_end/flambda/inlining_cost.ml[104,4109+22]..[104,4109+25])
                                            ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[105,4136+8]..[105,4136+10])
                                        Pexp_ident "sw" (middle_end/flambda/inlining_cost.ml[105,4136+8]..[105,4136+10])
                                  ]
                                expression (middle_end/flambda/inlining_cost.ml[106,4148+6]..[106,4148+33])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[106,4148+6]..[106,4148+17])
                                    Pexp_ident "Option.iter" (middle_end/flambda/inlining_cost.ml[106,4148+6]..[106,4148+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[106,4148+18]..[106,4148+29])
                                        Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[106,4148+18]..[106,4148+29])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[106,4148+30]..[106,4148+33])
                                        Pexp_ident "def" (middle_end/flambda/inlining_cost.ml[106,4148+30]..[106,4148+33])
                                  ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[107,4182+6]..[107,4182+20])
                                Ppat_construct "Static_raise" (middle_end/flambda/inlining_cost.ml[107,4182+6]..[107,4182+18])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[107,4182+19]..[107,4182+20])
                                    Ppat_any
                              expression (middle_end/flambda/inlining_cost.ml[107,4182+24]..[107,4182+26])
                                Pexp_construct "()" (middle_end/flambda/inlining_cost.ml[107,4182+24]..[107,4182+26])
                                None
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[108,4209+6]..[108,4209+40])
                                Ppat_construct "Static_catch" (middle_end/flambda/inlining_cost.ml[108,4209+6]..[108,4209+18])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[108,4209+19]..[108,4209+40])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inlining_cost.ml[108,4209+20]..[108,4209+21])
                                        Ppat_any
                                      pattern (middle_end/flambda/inlining_cost.ml[108,4209+23]..[108,4209+24])
                                        Ppat_any
                                      pattern (middle_end/flambda/inlining_cost.ml[108,4209+26]..[108,4209+30])
                                        Ppat_var "body" (middle_end/flambda/inlining_cost.ml[108,4209+26]..[108,4209+30])
                                      pattern (middle_end/flambda/inlining_cost.ml[108,4209+32]..[108,4209+39])
                                        Ppat_var "handler" (middle_end/flambda/inlining_cost.ml[108,4209+32]..[108,4209+39])
                                    ]
                              expression (middle_end/flambda/inlining_cost.ml[109,4253+6]..[109,4253+54])
                                Pexp_sequence
                                expression (middle_end/flambda/inlining_cost.ml[109,4253+6]..[109,4253+15])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[109,4253+6]..[109,4253+10])
                                    Pexp_ident "incr" (middle_end/flambda/inlining_cost.ml[109,4253+6]..[109,4253+10])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[109,4253+11]..[109,4253+15])
                                        Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[109,4253+11]..[109,4253+15])
                                  ]
                                expression (middle_end/flambda/inlining_cost.ml[109,4253+17]..[109,4253+54])
                                  Pexp_sequence
                                  expression (middle_end/flambda/inlining_cost.ml[109,4253+17]..[109,4253+33])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[109,4253+17]..[109,4253+28])
                                      Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[109,4253+17]..[109,4253+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[109,4253+29]..[109,4253+33])
                                          Pexp_ident "body" (middle_end/flambda/inlining_cost.ml[109,4253+29]..[109,4253+33])
                                    ]
                                  expression (middle_end/flambda/inlining_cost.ml[109,4253+35]..[109,4253+54])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[109,4253+35]..[109,4253+46])
                                      Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[109,4253+35]..[109,4253+46])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[109,4253+47]..[109,4253+54])
                                          Pexp_ident "handler" (middle_end/flambda/inlining_cost.ml[109,4253+47]..[109,4253+54])
                                    ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[110,4308+6]..[110,4308+33])
                                Ppat_construct "Try_with" (middle_end/flambda/inlining_cost.ml[110,4308+6]..[110,4308+14])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[110,4308+15]..[110,4308+33])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inlining_cost.ml[110,4308+16]..[110,4308+20])
                                        Ppat_var "body" (middle_end/flambda/inlining_cost.ml[110,4308+16]..[110,4308+20])
                                      pattern (middle_end/flambda/inlining_cost.ml[110,4308+22]..[110,4308+23])
                                        Ppat_any
                                      pattern (middle_end/flambda/inlining_cost.ml[110,4308+25]..[110,4308+32])
                                        Ppat_var "handler" (middle_end/flambda/inlining_cost.ml[110,4308+25]..[110,4308+32])
                                    ]
                              expression (middle_end/flambda/inlining_cost.ml[111,4345+6]..[111,4345+62])
                                Pexp_sequence
                                expression (middle_end/flambda/inlining_cost.ml[111,4345+6]..[111,4345+23])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[111,4345+11]..[111,4345+13])
                                    Pexp_ident ":=" (middle_end/flambda/inlining_cost.ml[111,4345+11]..[111,4345+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[111,4345+6]..[111,4345+10])
                                        Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[111,4345+6]..[111,4345+10])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[111,4345+14]..[111,4345+23])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[111,4345+20]..[111,4345+21])
                                          Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[111,4345+20]..[111,4345+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[111,4345+14]..[111,4345+19])
                                              Pexp_apply
                                              expression (middle_end/flambda/inlining_cost.ml[111,4345+14]..[111,4345+15])
                                                Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[111,4345+14]..[111,4345+15])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inlining_cost.ml[111,4345+15]..[111,4345+19])
                                                    Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[111,4345+15]..[111,4345+19])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[111,4345+22]..[111,4345+23])
                                              Pexp_constant PConst_int (8,None)
                                        ]
                                  ]
                                expression (middle_end/flambda/inlining_cost.ml[111,4345+25]..[111,4345+62])
                                  Pexp_sequence
                                  expression (middle_end/flambda/inlining_cost.ml[111,4345+25]..[111,4345+41])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[111,4345+25]..[111,4345+36])
                                      Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[111,4345+25]..[111,4345+36])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[111,4345+37]..[111,4345+41])
                                          Pexp_ident "body" (middle_end/flambda/inlining_cost.ml[111,4345+37]..[111,4345+41])
                                    ]
                                  expression (middle_end/flambda/inlining_cost.ml[111,4345+43]..[111,4345+62])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[111,4345+43]..[111,4345+54])
                                      Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[111,4345+43]..[111,4345+54])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[111,4345+55]..[111,4345+62])
                                          Pexp_ident "handler" (middle_end/flambda/inlining_cost.ml[111,4345+55]..[111,4345+62])
                                    ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[112,4408+6]..[112,4408+35])
                                Ppat_construct "If_then_else" (middle_end/flambda/inlining_cost.ml[112,4408+6]..[112,4408+18])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[112,4408+19]..[112,4408+35])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inlining_cost.ml[112,4408+20]..[112,4408+21])
                                        Ppat_any
                                      pattern (middle_end/flambda/inlining_cost.ml[112,4408+23]..[112,4408+27])
                                        Ppat_var "ifso" (middle_end/flambda/inlining_cost.ml[112,4408+23]..[112,4408+27])
                                      pattern (middle_end/flambda/inlining_cost.ml[112,4408+29]..[112,4408+34])
                                        Ppat_var "ifnot" (middle_end/flambda/inlining_cost.ml[112,4408+29]..[112,4408+34])
                                    ]
                              expression (middle_end/flambda/inlining_cost.ml[113,4447+6]..[114,4472+41])
                                Pexp_sequence
                                expression (middle_end/flambda/inlining_cost.ml[113,4447+6]..[113,4447+23])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[113,4447+11]..[113,4447+13])
                                    Pexp_ident ":=" (middle_end/flambda/inlining_cost.ml[113,4447+11]..[113,4447+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[113,4447+6]..[113,4447+10])
                                        Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[113,4447+6]..[113,4447+10])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[113,4447+14]..[113,4447+23])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[113,4447+20]..[113,4447+21])
                                          Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[113,4447+20]..[113,4447+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[113,4447+14]..[113,4447+19])
                                              Pexp_apply
                                              expression (middle_end/flambda/inlining_cost.ml[113,4447+14]..[113,4447+15])
                                                Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[113,4447+14]..[113,4447+15])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inlining_cost.ml[113,4447+15]..[113,4447+19])
                                                    Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[113,4447+15]..[113,4447+19])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[113,4447+22]..[113,4447+23])
                                              Pexp_constant PConst_int (2,None)
                                        ]
                                  ]
                                expression (middle_end/flambda/inlining_cost.ml[114,4472+6]..[114,4472+41])
                                  Pexp_sequence
                                  expression (middle_end/flambda/inlining_cost.ml[114,4472+6]..[114,4472+22])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[114,4472+6]..[114,4472+17])
                                      Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[114,4472+6]..[114,4472+17])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[114,4472+18]..[114,4472+22])
                                          Pexp_ident "ifso" (middle_end/flambda/inlining_cost.ml[114,4472+18]..[114,4472+22])
                                    ]
                                  expression (middle_end/flambda/inlining_cost.ml[114,4472+24]..[114,4472+41])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[114,4472+24]..[114,4472+35])
                                      Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[114,4472+24]..[114,4472+35])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[114,4472+36]..[114,4472+41])
                                          Pexp_ident "ifnot" (middle_end/flambda/inlining_cost.ml[114,4472+36]..[114,4472+41])
                                    ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[115,4514+6]..[115,4514+24])
                                Ppat_construct "While" (middle_end/flambda/inlining_cost.ml[115,4514+6]..[115,4514+11])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[115,4514+12]..[115,4514+24])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inlining_cost.ml[115,4514+13]..[115,4514+17])
                                        Ppat_var "cond" (middle_end/flambda/inlining_cost.ml[115,4514+13]..[115,4514+17])
                                      pattern (middle_end/flambda/inlining_cost.ml[115,4514+19]..[115,4514+23])
                                        Ppat_var "body" (middle_end/flambda/inlining_cost.ml[115,4514+19]..[115,4514+23])
                                    ]
                              expression (middle_end/flambda/inlining_cost.ml[116,4542+6]..[116,4542+59])
                                Pexp_sequence
                                expression (middle_end/flambda/inlining_cost.ml[116,4542+6]..[116,4542+23])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[116,4542+11]..[116,4542+13])
                                    Pexp_ident ":=" (middle_end/flambda/inlining_cost.ml[116,4542+11]..[116,4542+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[116,4542+6]..[116,4542+10])
                                        Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[116,4542+6]..[116,4542+10])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[116,4542+14]..[116,4542+23])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[116,4542+20]..[116,4542+21])
                                          Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[116,4542+20]..[116,4542+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[116,4542+14]..[116,4542+19])
                                              Pexp_apply
                                              expression (middle_end/flambda/inlining_cost.ml[116,4542+14]..[116,4542+15])
                                                Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[116,4542+14]..[116,4542+15])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inlining_cost.ml[116,4542+15]..[116,4542+19])
                                                    Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[116,4542+15]..[116,4542+19])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[116,4542+22]..[116,4542+23])
                                              Pexp_constant PConst_int (2,None)
                                        ]
                                  ]
                                expression (middle_end/flambda/inlining_cost.ml[116,4542+25]..[116,4542+59])
                                  Pexp_sequence
                                  expression (middle_end/flambda/inlining_cost.ml[116,4542+25]..[116,4542+41])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[116,4542+25]..[116,4542+36])
                                      Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[116,4542+25]..[116,4542+36])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[116,4542+37]..[116,4542+41])
                                          Pexp_ident "cond" (middle_end/flambda/inlining_cost.ml[116,4542+37]..[116,4542+41])
                                    ]
                                  expression (middle_end/flambda/inlining_cost.ml[116,4542+43]..[116,4542+59])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[116,4542+43]..[116,4542+54])
                                      Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[116,4542+43]..[116,4542+54])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[116,4542+55]..[116,4542+59])
                                          Pexp_ident "body" (middle_end/flambda/inlining_cost.ml[116,4542+55]..[116,4542+59])
                                    ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[117,4602+6]..[117,4602+21])
                                Ppat_construct "For" (middle_end/flambda/inlining_cost.ml[117,4602+6]..[117,4602+9])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[117,4602+10]..[117,4602+21])
                                    Ppat_record Open
                                    [
                                      "body" (middle_end/flambda/inlining_cost.ml[117,4602+12]..[117,4602+16]) ghost
                                        pattern (middle_end/flambda/inlining_cost.ml[117,4602+12]..[117,4602+16])
                                          Ppat_var "body" (middle_end/flambda/inlining_cost.ml[117,4602+12]..[117,4602+16])
                                    ]
                              expression (middle_end/flambda/inlining_cost.ml[118,4627+6]..[118,4627+41])
                                Pexp_sequence
                                expression (middle_end/flambda/inlining_cost.ml[118,4627+6]..[118,4627+23])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[118,4627+11]..[118,4627+13])
                                    Pexp_ident ":=" (middle_end/flambda/inlining_cost.ml[118,4627+11]..[118,4627+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[118,4627+6]..[118,4627+10])
                                        Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[118,4627+6]..[118,4627+10])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[118,4627+14]..[118,4627+23])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[118,4627+20]..[118,4627+21])
                                          Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[118,4627+20]..[118,4627+21])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[118,4627+14]..[118,4627+19])
                                              Pexp_apply
                                              expression (middle_end/flambda/inlining_cost.ml[118,4627+14]..[118,4627+15])
                                                Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[118,4627+14]..[118,4627+15])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inlining_cost.ml[118,4627+15]..[118,4627+19])
                                                    Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[118,4627+15]..[118,4627+19])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[118,4627+22]..[118,4627+23])
                                              Pexp_constant PConst_int (4,None)
                                        ]
                                  ]
                                expression (middle_end/flambda/inlining_cost.ml[118,4627+25]..[118,4627+41])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[118,4627+25]..[118,4627+36])
                                    Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[118,4627+25]..[118,4627+36])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[118,4627+37]..[118,4627+41])
                                        Pexp_ident "body" (middle_end/flambda/inlining_cost.ml[118,4627+37]..[118,4627+41])
                                  ]
                          ]
                  <def>
                    pattern (middle_end/flambda/inlining_cost.ml[119,4669+6]..[119,4669+23])
                      Ppat_var "lambda_named_size" (middle_end/flambda/inlining_cost.ml[119,4669+6]..[119,4669+23])
                    expression (middle_end/flambda/inlining_cost.ml[119,4669+24]..[135,5289+35]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/inlining_cost.ml[119,4669+24]..[119,4669+47])
                        Ppat_constraint
                        pattern (middle_end/flambda/inlining_cost.ml[119,4669+25]..[119,4669+30])
                          Ppat_var "named" (middle_end/flambda/inlining_cost.ml[119,4669+25]..[119,4669+30])
                        core_type (middle_end/flambda/inlining_cost.ml[119,4669+33]..[119,4669+46])
                          Ptyp_constr "Flambda.named" (middle_end/flambda/inlining_cost.ml[119,4669+33]..[119,4669+46])
                          []
                      expression (middle_end/flambda/inlining_cost.ml[120,4719+4]..[135,5289+35])
                        Pexp_sequence
                        expression (middle_end/flambda/inlining_cost.ml[120,4719+4]..[120,4719+40])
                          Pexp_ifthenelse
                          expression (middle_end/flambda/inlining_cost.ml[120,4719+7]..[120,4719+24])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[120,4719+13]..[120,4719+14])
                              Pexp_ident ">" (middle_end/flambda/inlining_cost.ml[120,4719+13]..[120,4719+14])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[120,4719+7]..[120,4719+12])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[120,4719+7]..[120,4719+8])
                                    Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[120,4719+7]..[120,4719+8])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[120,4719+8]..[120,4719+12])
                                        Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[120,4719+8]..[120,4719+12])
                                  ]
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[120,4719+15]..[120,4719+24])
                                  Pexp_ident "threshold" (middle_end/flambda/inlining_cost.ml[120,4719+15]..[120,4719+24])
                            ]
                          expression (middle_end/flambda/inlining_cost.ml[120,4719+30]..[120,4719+40])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[120,4719+30]..[120,4719+35])
                              Pexp_ident "raise" (middle_end/flambda/inlining_cost.ml[120,4719+30]..[120,4719+35])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[120,4719+36]..[120,4719+40])
                                  Pexp_construct "Exit" (middle_end/flambda/inlining_cost.ml[120,4719+36]..[120,4719+40])
                                  None
                            ]
                          None
                        expression (middle_end/flambda/inlining_cost.ml[121,4761+4]..[135,5289+35])
                          Pexp_match
                          expression (middle_end/flambda/inlining_cost.ml[121,4761+10]..[121,4761+15])
                            Pexp_ident "named" (middle_end/flambda/inlining_cost.ml[121,4761+10]..[121,4761+15])
                          [
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[122,4782+6]..[122,4782+31])
                                Ppat_or
                                pattern (middle_end/flambda/inlining_cost.ml[122,4782+6]..[122,4782+14])
                                  Ppat_construct "Symbol" (middle_end/flambda/inlining_cost.ml[122,4782+6]..[122,4782+12])
                                  Some
                                    []
                                    pattern (middle_end/flambda/inlining_cost.ml[122,4782+13]..[122,4782+14])
                                      Ppat_any
                                pattern (middle_end/flambda/inlining_cost.ml[122,4782+17]..[122,4782+31])
                                  Ppat_construct "Read_mutable" (middle_end/flambda/inlining_cost.ml[122,4782+17]..[122,4782+29])
                                  Some
                                    []
                                    pattern (middle_end/flambda/inlining_cost.ml[122,4782+30]..[122,4782+31])
                                      Ppat_any
                              expression (middle_end/flambda/inlining_cost.ml[122,4782+35]..[122,4782+37])
                                Pexp_construct "()" (middle_end/flambda/inlining_cost.ml[122,4782+35]..[122,4782+37])
                                None
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[123,4820+6]..[123,4820+33])
                                Ppat_or
                                pattern (middle_end/flambda/inlining_cost.ml[123,4820+6]..[123,4820+13])
                                  Ppat_construct "Const" (middle_end/flambda/inlining_cost.ml[123,4820+6]..[123,4820+11])
                                  Some
                                    []
                                    pattern (middle_end/flambda/inlining_cost.ml[123,4820+12]..[123,4820+13])
                                      Ppat_any
                                pattern (middle_end/flambda/inlining_cost.ml[123,4820+16]..[123,4820+33])
                                  Ppat_construct "Allocated_const" (middle_end/flambda/inlining_cost.ml[123,4820+16]..[123,4820+31])
                                  Some
                                    []
                                    pattern (middle_end/flambda/inlining_cost.ml[123,4820+32]..[123,4820+33])
                                      Ppat_any
                              expression (middle_end/flambda/inlining_cost.ml[123,4820+37]..[123,4820+46])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[123,4820+37]..[123,4820+41])
                                  Pexp_ident "incr" (middle_end/flambda/inlining_cost.ml[123,4820+37]..[123,4820+41])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[123,4820+42]..[123,4820+46])
                                      Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[123,4820+42]..[123,4820+46])
                                ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[124,4867+6]..[124,4867+25])
                                Ppat_construct "Read_symbol_field" (middle_end/flambda/inlining_cost.ml[124,4867+6]..[124,4867+23])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[124,4867+24]..[124,4867+25])
                                    Ppat_any
                              expression (middle_end/flambda/inlining_cost.ml[124,4867+29]..[124,4867+38])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[124,4867+29]..[124,4867+33])
                                  Pexp_ident "incr" (middle_end/flambda/inlining_cost.ml[124,4867+29]..[124,4867+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[124,4867+34]..[124,4867+38])
                                      Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[124,4867+34]..[124,4867+38])
                                ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[125,4906+6]..[125,4906+50])
                                Ppat_construct "Set_of_closures" (middle_end/flambda/inlining_cost.ml[125,4906+6]..[125,4906+21])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[125,4906+22]..[125,4906+50])
                                    Ppat_record Closed
                                    [
                                      "function_decls" (middle_end/flambda/inlining_cost.ml[125,4906+25]..[125,4906+39])
                                        pattern (middle_end/flambda/inlining_cost.ml[125,4906+42]..[125,4906+47])
                                          Ppat_var "ffuns" (middle_end/flambda/inlining_cost.ml[125,4906+42]..[125,4906+47])
                                    ]
                              expression (middle_end/flambda/inlining_cost.ml[126,4960+6]..[128,5065+18])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[126,4960+6]..[126,4960+23])
                                  Pexp_ident "Variable.Map.iter" (middle_end/flambda/inlining_cost.ml[126,4960+6]..[126,4960+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[126,4960+24]..[127,5032+32])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/inlining_cost.ml[126,4960+29]..[126,4960+30])
                                        Ppat_any
                                      expression (middle_end/flambda/inlining_cost.ml[126,4960+31]..[127,5032+31]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/flambda/inlining_cost.ml[126,4960+31]..[126,4960+68])
                                          Ppat_constraint
                                          pattern (middle_end/flambda/inlining_cost.ml[126,4960+32]..[126,4960+36])
                                            Ppat_var "ffun" (middle_end/flambda/inlining_cost.ml[126,4960+32]..[126,4960+36])
                                          core_type (middle_end/flambda/inlining_cost.ml[126,4960+39]..[126,4960+67])
                                            Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/inlining_cost.ml[126,4960+39]..[126,4960+67])
                                            []
                                        expression (middle_end/flambda/inlining_cost.ml[127,5032+10]..[127,5032+31])
                                          Pexp_apply
                                          expression (middle_end/flambda/inlining_cost.ml[127,5032+10]..[127,5032+21])
                                            Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[127,5032+10]..[127,5032+21])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[127,5032+22]..[127,5032+31])
                                                Pexp_field
                                                expression (middle_end/flambda/inlining_cost.ml[127,5032+22]..[127,5032+26])
                                                  Pexp_ident "ffun" (middle_end/flambda/inlining_cost.ml[127,5032+22]..[127,5032+26])
                                                "body" (middle_end/flambda/inlining_cost.ml[127,5032+27]..[127,5032+31])
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[128,5065+8]..[128,5065+18])
                                      Pexp_field
                                      expression (middle_end/flambda/inlining_cost.ml[128,5065+8]..[128,5065+13])
                                        Pexp_ident "ffuns" (middle_end/flambda/inlining_cost.ml[128,5065+8]..[128,5065+13])
                                      "funs" (middle_end/flambda/inlining_cost.ml[128,5065+14]..[128,5065+18])
                                ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[129,5084+6]..[129,5084+39])
                                Ppat_or
                                pattern (middle_end/flambda/inlining_cost.ml[129,5084+6]..[129,5084+23])
                                  Ppat_construct "Project_closure" (middle_end/flambda/inlining_cost.ml[129,5084+6]..[129,5084+21])
                                  Some
                                    []
                                    pattern (middle_end/flambda/inlining_cost.ml[129,5084+22]..[129,5084+23])
                                      Ppat_any
                                pattern (middle_end/flambda/inlining_cost.ml[129,5084+26]..[129,5084+39])
                                  Ppat_construct "Project_var" (middle_end/flambda/inlining_cost.ml[129,5084+26]..[129,5084+37])
                                  Some
                                    []
                                    pattern (middle_end/flambda/inlining_cost.ml[129,5084+38]..[129,5084+39])
                                      Ppat_any
                              expression (middle_end/flambda/inlining_cost.ml[130,5127+6]..[130,5127+34])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[130,5127+11]..[130,5127+13])
                                  Pexp_ident ":=" (middle_end/flambda/inlining_cost.ml[130,5127+11]..[130,5127+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[130,5127+6]..[130,5127+10])
                                      Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[130,5127+6]..[130,5127+10])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[130,5127+14]..[130,5127+34])
                                      Pexp_apply
                                      expression (middle_end/flambda/inlining_cost.ml[130,5127+20]..[130,5127+21])
                                        Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[130,5127+20]..[130,5127+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[130,5127+14]..[130,5127+19])
                                            Pexp_apply
                                            expression (middle_end/flambda/inlining_cost.ml[130,5127+14]..[130,5127+15])
                                              Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[130,5127+14]..[130,5127+15])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[130,5127+15]..[130,5127+19])
                                                  Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[130,5127+15]..[130,5127+19])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[130,5127+22]..[130,5127+34])
                                            Pexp_ident "project_size" (middle_end/flambda/inlining_cost.ml[130,5127+22]..[130,5127+34])
                                      ]
                                ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[131,5162+6]..[131,5162+35])
                                Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/inlining_cost.ml[131,5162+6]..[131,5162+33])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[131,5162+34]..[131,5162+35])
                                    Ppat_any
                              expression (middle_end/flambda/inlining_cost.ml[132,5201+6]..[132,5201+15])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[132,5201+6]..[132,5201+10])
                                  Pexp_ident "incr" (middle_end/flambda/inlining_cost.ml[132,5201+6]..[132,5201+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[132,5201+11]..[132,5201+15])
                                      Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[132,5201+11]..[132,5201+15])
                                ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[133,5217+6]..[133,5217+26])
                                Ppat_construct "Prim" (middle_end/flambda/inlining_cost.ml[133,5217+6]..[133,5217+10])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[133,5217+11]..[133,5217+26])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inlining_cost.ml[133,5217+12]..[133,5217+16])
                                        Ppat_var "prim" (middle_end/flambda/inlining_cost.ml[133,5217+12]..[133,5217+16])
                                      pattern (middle_end/flambda/inlining_cost.ml[133,5217+18]..[133,5217+22])
                                        Ppat_var "args" (middle_end/flambda/inlining_cost.ml[133,5217+18]..[133,5217+22])
                                      pattern (middle_end/flambda/inlining_cost.ml[133,5217+24]..[133,5217+25])
                                        Ppat_any
                                    ]
                              expression (middle_end/flambda/inlining_cost.ml[134,5247+6]..[134,5247+41])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[134,5247+11]..[134,5247+13])
                                  Pexp_ident ":=" (middle_end/flambda/inlining_cost.ml[134,5247+11]..[134,5247+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[134,5247+6]..[134,5247+10])
                                      Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[134,5247+6]..[134,5247+10])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[134,5247+14]..[134,5247+41])
                                      Pexp_apply
                                      expression (middle_end/flambda/inlining_cost.ml[134,5247+20]..[134,5247+21])
                                        Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[134,5247+20]..[134,5247+21])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[134,5247+14]..[134,5247+19])
                                            Pexp_apply
                                            expression (middle_end/flambda/inlining_cost.ml[134,5247+14]..[134,5247+15])
                                              Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[134,5247+14]..[134,5247+15])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[134,5247+15]..[134,5247+19])
                                                  Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[134,5247+15]..[134,5247+19])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[134,5247+22]..[134,5247+41])
                                            Pexp_apply
                                            expression (middle_end/flambda/inlining_cost.ml[134,5247+22]..[134,5247+31])
                                              Pexp_ident "prim_size" (middle_end/flambda/inlining_cost.ml[134,5247+22]..[134,5247+31])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[134,5247+32]..[134,5247+36])
                                                  Pexp_ident "prim" (middle_end/flambda/inlining_cost.ml[134,5247+32]..[134,5247+36])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[134,5247+37]..[134,5247+41])
                                                  Pexp_ident "args" (middle_end/flambda/inlining_cost.ml[134,5247+37]..[134,5247+41])
                                            ]
                                      ]
                                ]
                            <case>
                              pattern (middle_end/flambda/inlining_cost.ml[135,5289+6]..[135,5289+15])
                                Ppat_construct "Expr" (middle_end/flambda/inlining_cost.ml[135,5289+6]..[135,5289+10])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[135,5289+11]..[135,5289+15])
                                    Ppat_var "expr" (middle_end/flambda/inlining_cost.ml[135,5289+11]..[135,5289+15])
                              expression (middle_end/flambda/inlining_cost.ml[135,5289+19]..[135,5289+35])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[135,5289+19]..[135,5289+30])
                                  Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[135,5289+19]..[135,5289+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[135,5289+31]..[135,5289+35])
                                      Pexp_ident "expr" (middle_end/flambda/inlining_cost.ml[135,5289+31]..[135,5289+35])
                                ]
                          ]
                ]
                expression (middle_end/flambda/inlining_cost.ml[137,5330+2]..[142,5428+8])
                  Pexp_try
                  expression (middle_end/flambda/inlining_cost.ml[138,5336+4]..[140,5399+13])
                    Pexp_sequence
                    expression (middle_end/flambda/inlining_cost.ml[138,5336+4]..[138,5336+19])
                      Pexp_apply
                      expression (middle_end/flambda/inlining_cost.ml[138,5336+4]..[138,5336+15])
                        Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[138,5336+4]..[138,5336+15])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[138,5336+16]..[138,5336+19])
                            Pexp_ident "lam" (middle_end/flambda/inlining_cost.ml[138,5336+16]..[138,5336+19])
                      ]
                    expression (middle_end/flambda/inlining_cost.ml[139,5357+4]..[140,5399+13])
                      Pexp_ifthenelse
                      expression (middle_end/flambda/inlining_cost.ml[139,5357+7]..[139,5357+25])
                        Pexp_apply
                        expression (middle_end/flambda/inlining_cost.ml[139,5357+13]..[139,5357+15])
                          Pexp_ident "<=" (middle_end/flambda/inlining_cost.ml[139,5357+13]..[139,5357+15])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inlining_cost.ml[139,5357+7]..[139,5357+12])
                              Pexp_apply
                              expression (middle_end/flambda/inlining_cost.ml[139,5357+7]..[139,5357+8])
                                Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[139,5357+7]..[139,5357+8])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[139,5357+8]..[139,5357+12])
                                    Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[139,5357+8]..[139,5357+12])
                              ]
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inlining_cost.ml[139,5357+16]..[139,5357+25])
                              Pexp_ident "threshold" (middle_end/flambda/inlining_cost.ml[139,5357+16]..[139,5357+25])
                        ]
                      expression (middle_end/flambda/inlining_cost.ml[139,5357+31]..[139,5357+41])
                        Pexp_construct "Some" (middle_end/flambda/inlining_cost.ml[139,5357+31]..[139,5357+35])
                        Some
                          expression (middle_end/flambda/inlining_cost.ml[139,5357+36]..[139,5357+41])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[139,5357+36]..[139,5357+37])
                              Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[139,5357+36]..[139,5357+37])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[139,5357+37]..[139,5357+41])
                                  Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[139,5357+37]..[139,5357+41])
                            ]
                      Some
                        expression (middle_end/flambda/inlining_cost.ml[140,5399+9]..[140,5399+13])
                          Pexp_construct "None" (middle_end/flambda/inlining_cost.ml[140,5399+9]..[140,5399+13])
                          None
                  [
                    <case>
                      pattern (middle_end/flambda/inlining_cost.ml[141,5413+7]..[141,5413+11])
                        Ppat_construct "Exit" (middle_end/flambda/inlining_cost.ml[141,5413+7]..[141,5413+11])
                        None
                      expression (middle_end/flambda/inlining_cost.ml[142,5428+4]..[142,5428+8])
                        Pexp_construct "None" (middle_end/flambda/inlining_cost.ml[142,5428+4]..[142,5428+8])
                        None
                  ]
    ]
  structure_item (middle_end/flambda/inlining_cost.ml[144,5438+0]..[151,5640+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inlining_cost.ml[144,5438+4]..[144,5438+15])
          Ppat_var "lambda_size" (middle_end/flambda/inlining_cost.ml[144,5438+4]..[144,5438+15])
        expression (middle_end/flambda/inlining_cost.ml[144,5438+16]..[151,5640+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inlining_cost.ml[144,5438+16]..[144,5438+19])
            Ppat_var "lam" (middle_end/flambda/inlining_cost.ml[144,5438+16]..[144,5438+19])
          expression (middle_end/flambda/inlining_cost.ml[145,5460+2]..[151,5640+18])
            Pexp_match
            expression (middle_end/flambda/inlining_cost.ml[145,5460+8]..[145,5460+41])
              Pexp_apply
              expression (middle_end/flambda/inlining_cost.ml[145,5460+8]..[145,5460+23])
                Pexp_ident "lambda_smaller'" (middle_end/flambda/inlining_cost.ml[145,5460+8]..[145,5460+23])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/inlining_cost.ml[145,5460+24]..[145,5460+27])
                    Pexp_ident "lam" (middle_end/flambda/inlining_cost.ml[145,5460+24]..[145,5460+27])
                <arg>
                Labelled "than"
                  expression (middle_end/flambda/inlining_cost.ml[145,5460+34]..[145,5460+41])
                    Pexp_ident "max_int" (middle_end/flambda/inlining_cost.ml[145,5460+34]..[145,5460+41])
              ]
            [
              <case>
                pattern (middle_end/flambda/inlining_cost.ml[146,5507+4]..[146,5507+13])
                  Ppat_construct "Some" (middle_end/flambda/inlining_cost.ml[146,5507+4]..[146,5507+8])
                  Some
                    []
                    pattern (middle_end/flambda/inlining_cost.ml[146,5507+9]..[146,5507+13])
                      Ppat_var "size" (middle_end/flambda/inlining_cost.ml[146,5507+9]..[146,5507+13])
                expression (middle_end/flambda/inlining_cost.ml[147,5524+6]..[147,5524+10])
                  Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[147,5524+6]..[147,5524+10])
              <case>
                pattern (middle_end/flambda/inlining_cost.ml[148,5535+4]..[148,5535+8])
                  Ppat_construct "None" (middle_end/flambda/inlining_cost.ml[148,5535+4]..[148,5535+8])
                  None
                expression (middle_end/flambda/inlining_cost.ml[151,5640+6]..[151,5640+18])
                  Pexp_assert
                  expression (middle_end/flambda/inlining_cost.ml[151,5640+13]..[151,5640+18])
                    Pexp_construct "false" (middle_end/flambda/inlining_cost.ml[151,5640+13]..[151,5640+18])
                    None
            ]
    ]
  structure_item (middle_end/flambda/inlining_cost.ml[153,5660+0]..[189,6731+3])
    Pstr_module
    "Threshold" (middle_end/flambda/inlining_cost.ml[153,5660+7]..[153,5660+16])
      module_expr (middle_end/flambda/inlining_cost.ml[153,5660+19]..[189,6731+3])
        Pmod_structure
        [
          structure_item (middle_end/flambda/inlining_cost.ml[155,5687+2]..[157,5717+41])
            Pstr_type Rec
            [
              type_declaration "t" (middle_end/flambda/inlining_cost.ml[155,5687+7]..[155,5687+8]) (middle_end/flambda/inlining_cost.ml[155,5687+2]..[157,5717+41])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (middle_end/flambda/inlining_cost.ml[156,5698+4]..[156,5698+18])
                        "Never_inline" (middle_end/flambda/inlining_cost.ml[156,5698+6]..[156,5698+18])
                        []
                        None
                      (middle_end/flambda/inlining_cost.ml[157,5717+4]..[157,5717+41])
                        "Can_inline_if_no_larger_than" (middle_end/flambda/inlining_cost.ml[157,5717+6]..[157,5717+34])
                        [
                          core_type (middle_end/flambda/inlining_cost.ml[157,5717+38]..[157,5717+41])
                            Ptyp_constr "int" (middle_end/flambda/inlining_cost.ml[157,5717+38]..[157,5717+41])
                            []
                        ]
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[159,5760+2]..[164,5928+46])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[159,5760+6]..[159,5760+9])
                  Ppat_var "add" (middle_end/flambda/inlining_cost.ml[159,5760+6]..[159,5760+9])
                expression (middle_end/flambda/inlining_cost.ml[159,5760+10]..[164,5928+46]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[159,5760+10]..[159,5760+12])
                    Ppat_var "t1" (middle_end/flambda/inlining_cost.ml[159,5760+10]..[159,5760+12])
                  expression (middle_end/flambda/inlining_cost.ml[159,5760+13]..[164,5928+46]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[159,5760+13]..[159,5760+15])
                      Ppat_var "t2" (middle_end/flambda/inlining_cost.ml[159,5760+13]..[159,5760+15])
                    expression (middle_end/flambda/inlining_cost.ml[160,5778+4]..[164,5928+46])
                      Pexp_match
                      expression (middle_end/flambda/inlining_cost.ml[160,5778+10]..[160,5778+16])
                        Pexp_tuple
                        [
                          expression (middle_end/flambda/inlining_cost.ml[160,5778+10]..[160,5778+12])
                            Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[160,5778+10]..[160,5778+12])
                          expression (middle_end/flambda/inlining_cost.ml[160,5778+14]..[160,5778+16])
                            Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[160,5778+14]..[160,5778+16])
                        ]
                      [
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[161,5800+6]..[161,5800+21])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inlining_cost.ml[161,5800+6]..[161,5800+18])
                                Ppat_construct "Never_inline" (middle_end/flambda/inlining_cost.ml[161,5800+6]..[161,5800+18])
                                None
                              pattern (middle_end/flambda/inlining_cost.ml[161,5800+20]..[161,5800+21])
                                Ppat_var "t" (middle_end/flambda/inlining_cost.ml[161,5800+20]..[161,5800+21])
                            ]
                          expression (middle_end/flambda/inlining_cost.ml[161,5800+25]..[161,5800+26])
                            Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[161,5800+25]..[161,5800+26])
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[162,5827+6]..[162,5827+21])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inlining_cost.ml[162,5827+6]..[162,5827+7])
                                Ppat_var "t" (middle_end/flambda/inlining_cost.ml[162,5827+6]..[162,5827+7])
                              pattern (middle_end/flambda/inlining_cost.ml[162,5827+9]..[162,5827+21])
                                Ppat_construct "Never_inline" (middle_end/flambda/inlining_cost.ml[162,5827+9]..[162,5827+21])
                                None
                            ]
                          expression (middle_end/flambda/inlining_cost.ml[162,5827+25]..[162,5827+26])
                            Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[162,5827+25]..[162,5827+26])
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[163,5854+6]..[163,5854+70])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inlining_cost.ml[163,5854+6]..[163,5854+37])
                                Ppat_construct "Can_inline_if_no_larger_than" (middle_end/flambda/inlining_cost.ml[163,5854+6]..[163,5854+34])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[163,5854+35]..[163,5854+37])
                                    Ppat_var "i1" (middle_end/flambda/inlining_cost.ml[163,5854+35]..[163,5854+37])
                              pattern (middle_end/flambda/inlining_cost.ml[163,5854+39]..[163,5854+70])
                                Ppat_construct "Can_inline_if_no_larger_than" (middle_end/flambda/inlining_cost.ml[163,5854+39]..[163,5854+67])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[163,5854+68]..[163,5854+70])
                                    Ppat_var "i2" (middle_end/flambda/inlining_cost.ml[163,5854+68]..[163,5854+70])
                            ]
                          expression (middle_end/flambda/inlining_cost.ml[164,5928+8]..[164,5928+46])
                            Pexp_construct "Can_inline_if_no_larger_than" (middle_end/flambda/inlining_cost.ml[164,5928+8]..[164,5928+36])
                            Some
                              expression (middle_end/flambda/inlining_cost.ml[164,5928+37]..[164,5928+46])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[164,5928+41]..[164,5928+42])
                                  Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[164,5928+41]..[164,5928+42])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[164,5928+38]..[164,5928+40])
                                      Pexp_ident "i1" (middle_end/flambda/inlining_cost.ml[164,5928+38]..[164,5928+40])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[164,5928+43]..[164,5928+45])
                                      Pexp_ident "i2" (middle_end/flambda/inlining_cost.ml[164,5928+43]..[164,5928+45])
                                ]
                      ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[166,5976+2]..[172,6218+25])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[166,5976+6]..[166,5976+9])
                  Ppat_var "sub" (middle_end/flambda/inlining_cost.ml[166,5976+6]..[166,5976+9])
                expression (middle_end/flambda/inlining_cost.ml[166,5976+10]..[172,6218+25]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[166,5976+10]..[166,5976+12])
                    Ppat_var "t1" (middle_end/flambda/inlining_cost.ml[166,5976+10]..[166,5976+12])
                  expression (middle_end/flambda/inlining_cost.ml[166,5976+13]..[172,6218+25]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[166,5976+13]..[166,5976+15])
                      Ppat_var "t2" (middle_end/flambda/inlining_cost.ml[166,5976+13]..[166,5976+15])
                    expression (middle_end/flambda/inlining_cost.ml[167,5994+4]..[172,6218+25])
                      Pexp_match
                      expression (middle_end/flambda/inlining_cost.ml[167,5994+10]..[167,5994+16])
                        Pexp_tuple
                        [
                          expression (middle_end/flambda/inlining_cost.ml[167,5994+10]..[167,5994+12])
                            Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[167,5994+10]..[167,5994+12])
                          expression (middle_end/flambda/inlining_cost.ml[167,5994+14]..[167,5994+16])
                            Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[167,5994+14]..[167,5994+16])
                        ]
                      [
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[168,6016+6]..[168,6016+21])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inlining_cost.ml[168,6016+6]..[168,6016+18])
                                Ppat_construct "Never_inline" (middle_end/flambda/inlining_cost.ml[168,6016+6]..[168,6016+18])
                                None
                              pattern (middle_end/flambda/inlining_cost.ml[168,6016+20]..[168,6016+21])
                                Ppat_any
                            ]
                          expression (middle_end/flambda/inlining_cost.ml[168,6016+25]..[168,6016+37])
                            Pexp_construct "Never_inline" (middle_end/flambda/inlining_cost.ml[168,6016+25]..[168,6016+37])
                            None
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[169,6054+6]..[169,6054+21])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inlining_cost.ml[169,6054+6]..[169,6054+7])
                                Ppat_var "t" (middle_end/flambda/inlining_cost.ml[169,6054+6]..[169,6054+7])
                              pattern (middle_end/flambda/inlining_cost.ml[169,6054+9]..[169,6054+21])
                                Ppat_construct "Never_inline" (middle_end/flambda/inlining_cost.ml[169,6054+9]..[169,6054+21])
                                None
                            ]
                          expression (middle_end/flambda/inlining_cost.ml[169,6054+25]..[169,6054+26])
                            Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[169,6054+25]..[169,6054+26])
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[170,6081+6]..[170,6081+70])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inlining_cost.ml[170,6081+6]..[170,6081+37])
                                Ppat_construct "Can_inline_if_no_larger_than" (middle_end/flambda/inlining_cost.ml[170,6081+6]..[170,6081+34])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[170,6081+35]..[170,6081+37])
                                    Ppat_var "i1" (middle_end/flambda/inlining_cost.ml[170,6081+35]..[170,6081+37])
                              pattern (middle_end/flambda/inlining_cost.ml[170,6081+39]..[170,6081+70])
                                Ppat_construct "Can_inline_if_no_larger_than" (middle_end/flambda/inlining_cost.ml[170,6081+39]..[170,6081+67])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[170,6081+68]..[170,6081+70])
                                    Ppat_var "i2" (middle_end/flambda/inlining_cost.ml[170,6081+68]..[170,6081+70])
                            ]
                          expression (middle_end/flambda/inlining_cost.ml[171,6155+8]..[172,6218+25])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/inlining_cost.ml[171,6155+11]..[171,6155+18])
                              Pexp_apply
                              expression (middle_end/flambda/inlining_cost.ml[171,6155+14]..[171,6155+15])
                                Pexp_ident ">" (middle_end/flambda/inlining_cost.ml[171,6155+14]..[171,6155+15])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[171,6155+11]..[171,6155+13])
                                    Pexp_ident "i1" (middle_end/flambda/inlining_cost.ml[171,6155+11]..[171,6155+13])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[171,6155+16]..[171,6155+18])
                                    Pexp_ident "i2" (middle_end/flambda/inlining_cost.ml[171,6155+16]..[171,6155+18])
                              ]
                            expression (middle_end/flambda/inlining_cost.ml[171,6155+24]..[171,6155+62])
                              Pexp_construct "Can_inline_if_no_larger_than" (middle_end/flambda/inlining_cost.ml[171,6155+24]..[171,6155+52])
                              Some
                                expression (middle_end/flambda/inlining_cost.ml[171,6155+53]..[171,6155+62])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[171,6155+57]..[171,6155+58])
                                    Pexp_ident "-" (middle_end/flambda/inlining_cost.ml[171,6155+57]..[171,6155+58])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[171,6155+54]..[171,6155+56])
                                        Pexp_ident "i1" (middle_end/flambda/inlining_cost.ml[171,6155+54]..[171,6155+56])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[171,6155+59]..[171,6155+61])
                                        Pexp_ident "i2" (middle_end/flambda/inlining_cost.ml[171,6155+59]..[171,6155+61])
                                  ]
                            Some
                              expression (middle_end/flambda/inlining_cost.ml[172,6218+13]..[172,6218+25])
                                Pexp_construct "Never_inline" (middle_end/flambda/inlining_cost.ml[172,6218+13]..[172,6218+25])
                                None
                      ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[174,6245+2]..[179,6435+50])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[174,6245+6]..[174,6245+9])
                  Ppat_var "min" (middle_end/flambda/inlining_cost.ml[174,6245+6]..[174,6245+9])
                expression (middle_end/flambda/inlining_cost.ml[174,6245+10]..[179,6435+50]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[174,6245+10]..[174,6245+12])
                    Ppat_var "t1" (middle_end/flambda/inlining_cost.ml[174,6245+10]..[174,6245+12])
                  expression (middle_end/flambda/inlining_cost.ml[174,6245+13]..[179,6435+50]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[174,6245+13]..[174,6245+15])
                      Ppat_var "t2" (middle_end/flambda/inlining_cost.ml[174,6245+13]..[174,6245+15])
                    expression (middle_end/flambda/inlining_cost.ml[175,6263+4]..[179,6435+50])
                      Pexp_match
                      expression (middle_end/flambda/inlining_cost.ml[175,6263+10]..[175,6263+16])
                        Pexp_tuple
                        [
                          expression (middle_end/flambda/inlining_cost.ml[175,6263+10]..[175,6263+12])
                            Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[175,6263+10]..[175,6263+12])
                          expression (middle_end/flambda/inlining_cost.ml[175,6263+14]..[175,6263+16])
                            Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[175,6263+14]..[175,6263+16])
                        ]
                      [
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[176,6285+6]..[176,6285+21])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inlining_cost.ml[176,6285+6]..[176,6285+18])
                                Ppat_construct "Never_inline" (middle_end/flambda/inlining_cost.ml[176,6285+6]..[176,6285+18])
                                None
                              pattern (middle_end/flambda/inlining_cost.ml[176,6285+20]..[176,6285+21])
                                Ppat_any
                            ]
                          expression (middle_end/flambda/inlining_cost.ml[176,6285+25]..[176,6285+37])
                            Pexp_construct "Never_inline" (middle_end/flambda/inlining_cost.ml[176,6285+25]..[176,6285+37])
                            None
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[177,6323+6]..[177,6323+21])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inlining_cost.ml[177,6323+6]..[177,6323+7])
                                Ppat_any
                              pattern (middle_end/flambda/inlining_cost.ml[177,6323+9]..[177,6323+21])
                                Ppat_construct "Never_inline" (middle_end/flambda/inlining_cost.ml[177,6323+9]..[177,6323+21])
                                None
                            ]
                          expression (middle_end/flambda/inlining_cost.ml[177,6323+25]..[177,6323+37])
                            Pexp_construct "Never_inline" (middle_end/flambda/inlining_cost.ml[177,6323+25]..[177,6323+37])
                            None
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[178,6361+6]..[178,6361+70])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inlining_cost.ml[178,6361+6]..[178,6361+37])
                                Ppat_construct "Can_inline_if_no_larger_than" (middle_end/flambda/inlining_cost.ml[178,6361+6]..[178,6361+34])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[178,6361+35]..[178,6361+37])
                                    Ppat_var "i1" (middle_end/flambda/inlining_cost.ml[178,6361+35]..[178,6361+37])
                              pattern (middle_end/flambda/inlining_cost.ml[178,6361+39]..[178,6361+70])
                                Ppat_construct "Can_inline_if_no_larger_than" (middle_end/flambda/inlining_cost.ml[178,6361+39]..[178,6361+67])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[178,6361+68]..[178,6361+70])
                                    Ppat_var "i2" (middle_end/flambda/inlining_cost.ml[178,6361+68]..[178,6361+70])
                            ]
                          expression (middle_end/flambda/inlining_cost.ml[179,6435+6]..[179,6435+50])
                            Pexp_construct "Can_inline_if_no_larger_than" (middle_end/flambda/inlining_cost.ml[179,6435+6]..[179,6435+34])
                            Some
                              expression (middle_end/flambda/inlining_cost.ml[179,6435+35]..[179,6435+50])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[179,6435+36]..[179,6435+43])
                                  Pexp_ident "Int.min" (middle_end/flambda/inlining_cost.ml[179,6435+36]..[179,6435+43])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[179,6435+44]..[179,6435+46])
                                      Pexp_ident "i1" (middle_end/flambda/inlining_cost.ml[179,6435+44]..[179,6435+46])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[179,6435+47]..[179,6435+49])
                                      Pexp_ident "i2" (middle_end/flambda/inlining_cost.ml[179,6435+47]..[179,6435+49])
                                ]
                      ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[181,6487+2]..[187,6718+11])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[181,6487+6]..[181,6487+11])
                  Ppat_var "equal" (middle_end/flambda/inlining_cost.ml[181,6487+6]..[181,6487+11])
                expression (middle_end/flambda/inlining_cost.ml[181,6487+12]..[187,6718+11]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[181,6487+12]..[181,6487+14])
                    Ppat_var "t1" (middle_end/flambda/inlining_cost.ml[181,6487+12]..[181,6487+14])
                  expression (middle_end/flambda/inlining_cost.ml[181,6487+15]..[187,6718+11]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[181,6487+15]..[181,6487+17])
                      Ppat_var "t2" (middle_end/flambda/inlining_cost.ml[181,6487+15]..[181,6487+17])
                    expression (middle_end/flambda/inlining_cost.ml[182,6507+4]..[187,6718+11])
                      Pexp_match
                      expression (middle_end/flambda/inlining_cost.ml[182,6507+10]..[182,6507+16])
                        Pexp_tuple
                        [
                          expression (middle_end/flambda/inlining_cost.ml[182,6507+10]..[182,6507+12])
                            Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[182,6507+10]..[182,6507+12])
                          expression (middle_end/flambda/inlining_cost.ml[182,6507+14]..[182,6507+16])
                            Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[182,6507+14]..[182,6507+16])
                        ]
                      [
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[183,6529+6]..[183,6529+32])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inlining_cost.ml[183,6529+6]..[183,6529+18])
                                Ppat_construct "Never_inline" (middle_end/flambda/inlining_cost.ml[183,6529+6]..[183,6529+18])
                                None
                              pattern (middle_end/flambda/inlining_cost.ml[183,6529+20]..[183,6529+32])
                                Ppat_construct "Never_inline" (middle_end/flambda/inlining_cost.ml[183,6529+20]..[183,6529+32])
                                None
                            ]
                          expression (middle_end/flambda/inlining_cost.ml[183,6529+36]..[183,6529+40])
                            Pexp_construct "true" (middle_end/flambda/inlining_cost.ml[183,6529+36]..[183,6529+40])
                            None
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[184,6570+6]..[184,6570+70])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inlining_cost.ml[184,6570+6]..[184,6570+37])
                                Ppat_construct "Can_inline_if_no_larger_than" (middle_end/flambda/inlining_cost.ml[184,6570+6]..[184,6570+34])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[184,6570+35]..[184,6570+37])
                                    Ppat_var "i1" (middle_end/flambda/inlining_cost.ml[184,6570+35]..[184,6570+37])
                              pattern (middle_end/flambda/inlining_cost.ml[184,6570+39]..[184,6570+70])
                                Ppat_construct "Can_inline_if_no_larger_than" (middle_end/flambda/inlining_cost.ml[184,6570+39]..[184,6570+67])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[184,6570+68]..[184,6570+70])
                                    Ppat_var "i2" (middle_end/flambda/inlining_cost.ml[184,6570+68]..[184,6570+70])
                            ]
                          expression (middle_end/flambda/inlining_cost.ml[185,6644+6]..[185,6644+13])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[185,6644+9]..[185,6644+10])
                              Pexp_ident "=" (middle_end/flambda/inlining_cost.ml[185,6644+9]..[185,6644+10])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[185,6644+6]..[185,6644+8])
                                  Pexp_ident "i1" (middle_end/flambda/inlining_cost.ml[185,6644+6]..[185,6644+8])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[185,6644+11]..[185,6644+13])
                                  Pexp_ident "i2" (middle_end/flambda/inlining_cost.ml[185,6644+11]..[185,6644+13])
                            ]
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[186,6658+6]..[186,6658+56])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inlining_cost.ml[186,6658+6]..[186,6658+53])
                                Ppat_or
                                pattern (middle_end/flambda/inlining_cost.ml[186,6658+7]..[186,6658+19])
                                  Ppat_construct "Never_inline" (middle_end/flambda/inlining_cost.ml[186,6658+7]..[186,6658+19])
                                  None
                                pattern (middle_end/flambda/inlining_cost.ml[186,6658+22]..[186,6658+52])
                                  Ppat_construct "Can_inline_if_no_larger_than" (middle_end/flambda/inlining_cost.ml[186,6658+22]..[186,6658+50])
                                  Some
                                    []
                                    pattern (middle_end/flambda/inlining_cost.ml[186,6658+51]..[186,6658+52])
                                      Ppat_any
                              pattern (middle_end/flambda/inlining_cost.ml[186,6658+55]..[186,6658+56])
                                Ppat_any
                            ]
                          expression (middle_end/flambda/inlining_cost.ml[187,6718+6]..[187,6718+11])
                            Pexp_construct "false" (middle_end/flambda/inlining_cost.ml[187,6718+6]..[187,6718+11])
                            None
                      ]
            ]
        ]
  structure_item (middle_end/flambda/inlining_cost.ml[191,6736+0]..[211,7462+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inlining_cost.ml[191,6736+4]..[191,6736+20])
          Ppat_var "can_try_inlining" (middle_end/flambda/inlining_cost.ml[191,6736+4]..[191,6736+20])
        expression (middle_end/flambda/inlining_cost.ml[191,6736+21]..[211,7462+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inlining_cost.ml[191,6736+21]..[191,6736+24])
            Ppat_var "lam" (middle_end/flambda/inlining_cost.ml[191,6736+21]..[191,6736+24])
          expression (middle_end/flambda/inlining_cost.ml[191,6736+25]..[211,7462+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inlining_cost.ml[191,6736+25]..[191,6736+43])
              Ppat_var "inlining_threshold" (middle_end/flambda/inlining_cost.ml[191,6736+25]..[191,6736+43])
            expression (middle_end/flambda/inlining_cost.ml[191,6736+44]..[211,7462+43]) ghost
              Pexp_fun
              Labelled "number_of_arguments"
              None
              pattern (middle_end/flambda/inlining_cost.ml[191,6736+45]..[191,6736+64])
                Ppat_var "number_of_arguments" (middle_end/flambda/inlining_cost.ml[191,6736+45]..[191,6736+64])
              expression (middle_end/flambda/inlining_cost.ml[192,6801+6]..[211,7462+43]) ghost
                Pexp_fun
                Labelled "size_from_approximation"
                None
                pattern (middle_end/flambda/inlining_cost.ml[192,6801+7]..[192,6801+30])
                  Ppat_var "size_from_approximation" (middle_end/flambda/inlining_cost.ml[192,6801+7]..[192,6801+30])
                expression (middle_end/flambda/inlining_cost.ml[193,6834+2]..[211,7462+43])
                  Pexp_match
                  expression (middle_end/flambda/inlining_cost.ml[193,6834+8]..[193,6834+26])
                    Pexp_ident "inlining_threshold" (middle_end/flambda/inlining_cost.ml[193,6834+8]..[193,6834+26])
                  [
                    <case>
                      pattern (middle_end/flambda/inlining_cost.ml[194,6866+4]..[194,6866+26])
                        Ppat_construct "Threshold.Never_inline" (middle_end/flambda/inlining_cost.ml[194,6866+4]..[194,6866+26])
                        None
                      expression (middle_end/flambda/inlining_cost.ml[194,6866+30]..[194,6866+52])
                        Pexp_construct "Threshold.Never_inline" (middle_end/flambda/inlining_cost.ml[194,6866+30]..[194,6866+52])
                        None
                    <case>
                      pattern (middle_end/flambda/inlining_cost.ml[195,6919+4]..[195,6919+61])
                        Ppat_construct "Threshold.Can_inline_if_no_larger_than" (middle_end/flambda/inlining_cost.ml[195,6919+4]..[195,6919+42])
                        Some
                          []
                          pattern (middle_end/flambda/inlining_cost.ml[195,6919+43]..[195,6919+61])
                            Ppat_var "inlining_threshold" (middle_end/flambda/inlining_cost.ml[195,6919+43]..[195,6919+61])
                      expression (middle_end/flambda/inlining_cost.ml[196,6984+4]..[211,7462+43])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inlining_cost.ml[196,6984+8]..[196,6984+13])
                              Ppat_var "bonus" (middle_end/flambda/inlining_cost.ml[196,6984+8]..[196,6984+13])
                            expression (middle_end/flambda/inlining_cost.ml[199,7094+6]..[199,7094+25])
                              Pexp_ident "number_of_arguments" (middle_end/flambda/inlining_cost.ml[199,7094+6]..[199,7094+25])
                        ]
                        expression (middle_end/flambda/inlining_cost.ml[201,7127+4]..[211,7462+43])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inlining_cost.ml[201,7127+8]..[201,7127+12])
                                Ppat_var "size" (middle_end/flambda/inlining_cost.ml[201,7127+8]..[201,7127+12])
                              expression (middle_end/flambda/inlining_cost.ml[202,7142+6]..[205,7292+41])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inlining_cost.ml[202,7142+10]..[202,7142+14])
                                      Ppat_var "than" (middle_end/flambda/inlining_cost.ml[202,7142+10]..[202,7142+14])
                                    expression (middle_end/flambda/inlining_cost.ml[202,7142+17]..[202,7142+43])
                                      Pexp_apply
                                      expression (middle_end/flambda/inlining_cost.ml[202,7142+36]..[202,7142+37])
                                        Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[202,7142+36]..[202,7142+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[202,7142+17]..[202,7142+35])
                                            Pexp_ident "inlining_threshold" (middle_end/flambda/inlining_cost.ml[202,7142+17]..[202,7142+35])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[202,7142+38]..[202,7142+43])
                                            Pexp_ident "bonus" (middle_end/flambda/inlining_cost.ml[202,7142+38]..[202,7142+43])
                                      ]
                                ]
                                expression (middle_end/flambda/inlining_cost.ml[203,7189+6]..[205,7292+41])
                                  Pexp_match
                                  expression (middle_end/flambda/inlining_cost.ml[203,7189+12]..[203,7189+35])
                                    Pexp_ident "size_from_approximation" (middle_end/flambda/inlining_cost.ml[203,7189+12]..[203,7189+35])
                                  [
                                    <case>
                                      pattern (middle_end/flambda/inlining_cost.ml[204,7230+8]..[204,7230+17])
                                        Ppat_construct "Some" (middle_end/flambda/inlining_cost.ml[204,7230+8]..[204,7230+12])
                                        Some
                                          []
                                          pattern (middle_end/flambda/inlining_cost.ml[204,7230+13]..[204,7230+17])
                                            Ppat_var "size" (middle_end/flambda/inlining_cost.ml[204,7230+13]..[204,7230+17])
                                      expression (middle_end/flambda/inlining_cost.ml[204,7230+21]..[204,7230+61])
                                        Pexp_ifthenelse
                                        expression (middle_end/flambda/inlining_cost.ml[204,7230+24]..[204,7230+36])
                                          Pexp_apply
                                          expression (middle_end/flambda/inlining_cost.ml[204,7230+29]..[204,7230+31])
                                            Pexp_ident "<=" (middle_end/flambda/inlining_cost.ml[204,7230+29]..[204,7230+31])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[204,7230+24]..[204,7230+28])
                                                Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[204,7230+24]..[204,7230+28])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[204,7230+32]..[204,7230+36])
                                                Pexp_ident "than" (middle_end/flambda/inlining_cost.ml[204,7230+32]..[204,7230+36])
                                          ]
                                        expression (middle_end/flambda/inlining_cost.ml[204,7230+42]..[204,7230+51])
                                          Pexp_construct "Some" (middle_end/flambda/inlining_cost.ml[204,7230+42]..[204,7230+46])
                                          Some
                                            expression (middle_end/flambda/inlining_cost.ml[204,7230+47]..[204,7230+51])
                                              Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[204,7230+47]..[204,7230+51])
                                        Some
                                          expression (middle_end/flambda/inlining_cost.ml[204,7230+57]..[204,7230+61])
                                            Pexp_construct "None" (middle_end/flambda/inlining_cost.ml[204,7230+57]..[204,7230+61])
                                            None
                                    <case>
                                      pattern (middle_end/flambda/inlining_cost.ml[205,7292+8]..[205,7292+12])
                                        Ppat_construct "None" (middle_end/flambda/inlining_cost.ml[205,7292+8]..[205,7292+12])
                                        None
                                      expression (middle_end/flambda/inlining_cost.ml[205,7292+16]..[205,7292+41])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[205,7292+16]..[205,7292+31])
                                          Pexp_ident "lambda_smaller'" (middle_end/flambda/inlining_cost.ml[205,7292+16]..[205,7292+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[205,7292+32]..[205,7292+35])
                                              Pexp_ident "lam" (middle_end/flambda/inlining_cost.ml[205,7292+32]..[205,7292+35])
                                          <arg>
                                          Labelled "than"
                                            expression (middle_end/flambda/inlining_cost.ml[205,7292+37]..[205,7292+41])
                                              Pexp_ident "than" (middle_end/flambda/inlining_cost.ml[205,7292+37]..[205,7292+41])
                                        ]
                                  ]
                          ]
                          expression (middle_end/flambda/inlining_cost.ml[207,7341+4]..[211,7462+43])
                            Pexp_match
                            expression (middle_end/flambda/inlining_cost.ml[207,7341+10]..[207,7341+14])
                              Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[207,7341+10]..[207,7341+14])
                            [
                              <case>
                                pattern (middle_end/flambda/inlining_cost.ml[208,7361+6]..[208,7361+10])
                                  Ppat_construct "None" (middle_end/flambda/inlining_cost.ml[208,7361+6]..[208,7361+10])
                                  None
                                expression (middle_end/flambda/inlining_cost.ml[208,7361+14]..[208,7361+36])
                                  Pexp_construct "Threshold.Never_inline" (middle_end/flambda/inlining_cost.ml[208,7361+14]..[208,7361+36])
                                  None
                              <case>
                                pattern (middle_end/flambda/inlining_cost.ml[209,7398+6]..[209,7398+15])
                                  Ppat_construct "Some" (middle_end/flambda/inlining_cost.ml[209,7398+6]..[209,7398+10])
                                  Some
                                    []
                                    pattern (middle_end/flambda/inlining_cost.ml[209,7398+11]..[209,7398+15])
                                      Ppat_var "size" (middle_end/flambda/inlining_cost.ml[209,7398+11]..[209,7398+15])
                                expression (middle_end/flambda/inlining_cost.ml[210,7417+6]..[211,7462+43])
                                  Pexp_construct "Threshold.Can_inline_if_no_larger_than" (middle_end/flambda/inlining_cost.ml[210,7417+6]..[210,7417+44])
                                  Some
                                    expression (middle_end/flambda/inlining_cost.ml[211,7462+8]..[211,7462+43])
                                      Pexp_apply
                                      expression (middle_end/flambda/inlining_cost.ml[211,7462+35]..[211,7462+36])
                                        Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[211,7462+35]..[211,7462+36])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[211,7462+9]..[211,7462+34])
                                            Pexp_apply
                                            expression (middle_end/flambda/inlining_cost.ml[211,7462+28]..[211,7462+29])
                                              Pexp_ident "-" (middle_end/flambda/inlining_cost.ml[211,7462+28]..[211,7462+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[211,7462+9]..[211,7462+27])
                                                  Pexp_ident "inlining_threshold" (middle_end/flambda/inlining_cost.ml[211,7462+9]..[211,7462+27])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[211,7462+30]..[211,7462+34])
                                                  Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[211,7462+30]..[211,7462+34])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[211,7462+37]..[211,7462+42])
                                            Pexp_ident "bonus" (middle_end/flambda/inlining_cost.ml[211,7462+37]..[211,7462+42])
                                      ]
                            ]
                  ]
    ]
  structure_item (middle_end/flambda/inlining_cost.ml[213,7507+0]..[216,7596+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inlining_cost.ml[213,7507+4]..[213,7507+18])
          Ppat_var "lambda_smaller" (middle_end/flambda/inlining_cost.ml[213,7507+4]..[213,7507+18])
        expression (middle_end/flambda/inlining_cost.ml[213,7507+19]..[216,7596+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inlining_cost.ml[213,7507+19]..[213,7507+22])
            Ppat_var "lam" (middle_end/flambda/inlining_cost.ml[213,7507+19]..[213,7507+22])
          expression (middle_end/flambda/inlining_cost.ml[213,7507+23]..[216,7596+17]) ghost
            Pexp_fun
            Labelled "than"
            None
            pattern (middle_end/flambda/inlining_cost.ml[213,7507+24]..[213,7507+28])
              Ppat_var "than" (middle_end/flambda/inlining_cost.ml[213,7507+24]..[213,7507+28])
            expression (middle_end/flambda/inlining_cost.ml[214,7538+2]..[216,7596+17])
              Pexp_match
              expression (middle_end/flambda/inlining_cost.ml[214,7538+8]..[214,7538+33])
                Pexp_apply
                expression (middle_end/flambda/inlining_cost.ml[214,7538+8]..[214,7538+23])
                  Pexp_ident "lambda_smaller'" (middle_end/flambda/inlining_cost.ml[214,7538+8]..[214,7538+23])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/inlining_cost.ml[214,7538+24]..[214,7538+27])
                      Pexp_ident "lam" (middle_end/flambda/inlining_cost.ml[214,7538+24]..[214,7538+27])
                  <arg>
                  Labelled "than"
                    expression (middle_end/flambda/inlining_cost.ml[214,7538+29]..[214,7538+33])
                      Pexp_ident "than" (middle_end/flambda/inlining_cost.ml[214,7538+29]..[214,7538+33])
                ]
              [
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[215,7577+4]..[215,7577+10])
                    Ppat_construct "Some" (middle_end/flambda/inlining_cost.ml[215,7577+4]..[215,7577+8])
                    Some
                      []
                      pattern (middle_end/flambda/inlining_cost.ml[215,7577+9]..[215,7577+10])
                        Ppat_any
                  expression (middle_end/flambda/inlining_cost.ml[215,7577+14]..[215,7577+18])
                    Pexp_construct "true" (middle_end/flambda/inlining_cost.ml[215,7577+14]..[215,7577+18])
                    None
                <case>
                  pattern (middle_end/flambda/inlining_cost.ml[216,7596+4]..[216,7596+8])
                    Ppat_construct "None" (middle_end/flambda/inlining_cost.ml[216,7596+4]..[216,7596+8])
                    None
                  expression (middle_end/flambda/inlining_cost.ml[216,7596+12]..[216,7596+17])
                    Pexp_construct "false" (middle_end/flambda/inlining_cost.ml[216,7596+12]..[216,7596+17])
                    None
              ]
    ]
  structure_item (middle_end/flambda/inlining_cost.ml[218,7615+0]..[224,7826+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inlining_cost.ml[218,7615+4]..[218,7615+14])
          Ppat_var "can_inline" (middle_end/flambda/inlining_cost.ml[218,7615+4]..[218,7615+14])
        expression (middle_end/flambda/inlining_cost.ml[218,7615+15]..[224,7826+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inlining_cost.ml[218,7615+15]..[218,7615+18])
            Ppat_var "lam" (middle_end/flambda/inlining_cost.ml[218,7615+15]..[218,7615+18])
          expression (middle_end/flambda/inlining_cost.ml[218,7615+19]..[224,7826+41]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/inlining_cost.ml[218,7615+19]..[218,7615+37])
              Ppat_var "inlining_threshold" (middle_end/flambda/inlining_cost.ml[218,7615+19]..[218,7615+37])
            expression (middle_end/flambda/inlining_cost.ml[218,7615+38]..[224,7826+41]) ghost
              Pexp_fun
              Labelled "bonus"
              None
              pattern (middle_end/flambda/inlining_cost.ml[218,7615+39]..[218,7615+44])
                Ppat_var "bonus" (middle_end/flambda/inlining_cost.ml[218,7615+39]..[218,7615+44])
              expression (middle_end/flambda/inlining_cost.ml[219,7662+2]..[224,7826+41])
                Pexp_match
                expression (middle_end/flambda/inlining_cost.ml[219,7662+8]..[219,7662+26])
                  Pexp_ident "inlining_threshold" (middle_end/flambda/inlining_cost.ml[219,7662+8]..[219,7662+26])
                [
                  <case>
                    pattern (middle_end/flambda/inlining_cost.ml[220,7694+4]..[220,7694+26])
                      Ppat_construct "Threshold.Never_inline" (middle_end/flambda/inlining_cost.ml[220,7694+4]..[220,7694+26])
                      None
                    expression (middle_end/flambda/inlining_cost.ml[220,7694+30]..[220,7694+35])
                      Pexp_construct "false" (middle_end/flambda/inlining_cost.ml[220,7694+30]..[220,7694+35])
                      None
                  <case>
                    pattern (middle_end/flambda/inlining_cost.ml[221,7730+4]..[221,7730+61])
                      Ppat_construct "Threshold.Can_inline_if_no_larger_than" (middle_end/flambda/inlining_cost.ml[221,7730+4]..[221,7730+42])
                      Some
                        []
                        pattern (middle_end/flambda/inlining_cost.ml[221,7730+43]..[221,7730+61])
                          Ppat_var "inlining_threshold" (middle_end/flambda/inlining_cost.ml[221,7730+43]..[221,7730+61])
                    expression (middle_end/flambda/inlining_cost.ml[222,7795+5]..[224,7826+41])
                      Pexp_apply
                      expression (middle_end/flambda/inlining_cost.ml[222,7795+5]..[222,7795+19])
                        Pexp_ident "lambda_smaller" (middle_end/flambda/inlining_cost.ml[222,7795+5]..[222,7795+19])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[223,7815+7]..[223,7815+10])
                            Pexp_ident "lam" (middle_end/flambda/inlining_cost.ml[223,7815+7]..[223,7815+10])
                        <arg>
                        Labelled "than"
                          expression (middle_end/flambda/inlining_cost.ml[224,7826+13]..[224,7826+41])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[224,7826+33]..[224,7826+34])
                              Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[224,7826+33]..[224,7826+34])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[224,7826+14]..[224,7826+32])
                                  Pexp_ident "inlining_threshold" (middle_end/flambda/inlining_cost.ml[224,7826+14]..[224,7826+32])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[224,7826+35]..[224,7826+40])
                                  Pexp_ident "bonus" (middle_end/flambda/inlining_cost.ml[224,7826+35]..[224,7826+40])
                            ]
                      ]
                ]
    ]
  structure_item (middle_end/flambda/inlining_cost.ml[226,7869+0]..[227,7926+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inlining_cost.ml[226,7869+4]..[226,7869+8])
          Ppat_var "cost" (middle_end/flambda/inlining_cost.ml[226,7869+4]..[226,7869+8])
        expression (middle_end/flambda/inlining_cost.ml[226,7869+9]..[227,7926+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inlining_cost.ml[226,7869+9]..[226,7869+47])
            Ppat_constraint
            pattern (middle_end/flambda/inlining_cost.ml[226,7869+10]..[226,7869+14])
              Ppat_var "flag" (middle_end/flambda/inlining_cost.ml[226,7869+10]..[226,7869+14])
            core_type (middle_end/flambda/inlining_cost.ml[226,7869+17]..[226,7869+46])
              Ptyp_constr "Clflags.Int_arg_helper.parsed" (middle_end/flambda/inlining_cost.ml[226,7869+17]..[226,7869+46])
              []
          expression (middle_end/flambda/inlining_cost.ml[226,7869+48]..[227,7926+44]) ghost
            Pexp_fun
            Labelled "round"
            None
            pattern (middle_end/flambda/inlining_cost.ml[226,7869+49]..[226,7869+54])
              Ppat_var "round" (middle_end/flambda/inlining_cost.ml[226,7869+49]..[226,7869+54])
            expression (middle_end/flambda/inlining_cost.ml[227,7926+2]..[227,7926+44])
              Pexp_apply
              expression (middle_end/flambda/inlining_cost.ml[227,7926+2]..[227,7926+28])
                Pexp_ident "Clflags.Int_arg_helper.get" (middle_end/flambda/inlining_cost.ml[227,7926+2]..[227,7926+28])
              [
                <arg>
                Labelled "key"
                  expression (middle_end/flambda/inlining_cost.ml[227,7926+34]..[227,7926+39])
                    Pexp_ident "round" (middle_end/flambda/inlining_cost.ml[227,7926+34]..[227,7926+39])
                <arg>
                Nolabel
                  expression (middle_end/flambda/inlining_cost.ml[227,7926+40]..[227,7926+44])
                    Pexp_ident "flag" (middle_end/flambda/inlining_cost.ml[227,7926+40]..[227,7926+44])
              ]
    ]
  structure_item (middle_end/flambda/inlining_cost.ml[229,7972+0]..[229,7972+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inlining_cost.ml[229,7972+4]..[229,7972+18])
          Ppat_var "benefit_factor" (middle_end/flambda/inlining_cost.ml[229,7972+4]..[229,7972+18])
        expression (middle_end/flambda/inlining_cost.ml[229,7972+21]..[229,7972+22])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (middle_end/flambda/inlining_cost.ml[231,7996+0]..[405,13863+3])
    Pstr_module
    "Benefit" (middle_end/flambda/inlining_cost.ml[231,7996+7]..[231,7996+14])
      module_expr (middle_end/flambda/inlining_cost.ml[231,7996+17]..[405,13863+3])
        Pmod_structure
        [
          structure_item (middle_end/flambda/inlining_cost.ml[232,8020+2]..[241,8322+3])
            Pstr_type Rec
            [
              type_declaration "t" (middle_end/flambda/inlining_cost.ml[232,8020+7]..[232,8020+8]) (middle_end/flambda/inlining_cost.ml[232,8020+2]..[241,8322+3])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (middle_end/flambda/inlining_cost.ml[233,8033+4]..[233,8033+22])
                        Immutable
                        "remove_call" (middle_end/flambda/inlining_cost.ml[233,8033+4]..[233,8033+15])                        core_type (middle_end/flambda/inlining_cost.ml[233,8033+18]..[233,8033+21])
                          Ptyp_constr "int" (middle_end/flambda/inlining_cost.ml[233,8033+18]..[233,8033+21])
                          []
                      (middle_end/flambda/inlining_cost.ml[234,8056+4]..[234,8056+23])
                        Immutable
                        "remove_alloc" (middle_end/flambda/inlining_cost.ml[234,8056+4]..[234,8056+16])                        core_type (middle_end/flambda/inlining_cost.ml[234,8056+19]..[234,8056+22])
                          Ptyp_constr "int" (middle_end/flambda/inlining_cost.ml[234,8056+19]..[234,8056+22])
                          []
                      (middle_end/flambda/inlining_cost.ml[235,8080+4]..[235,8080+22])
                        Immutable
                        "remove_prim" (middle_end/flambda/inlining_cost.ml[235,8080+4]..[235,8080+15])                        core_type (middle_end/flambda/inlining_cost.ml[235,8080+18]..[235,8080+21])
                          Ptyp_constr "int" (middle_end/flambda/inlining_cost.ml[235,8080+18]..[235,8080+21])
                          []
                      (middle_end/flambda/inlining_cost.ml[236,8103+4]..[236,8103+24])
                        Immutable
                        "remove_branch" (middle_end/flambda/inlining_cost.ml[236,8103+4]..[236,8103+17])                        core_type (middle_end/flambda/inlining_cost.ml[236,8103+20]..[236,8103+23])
                          Ptyp_constr "int" (middle_end/flambda/inlining_cost.ml[236,8103+20]..[236,8103+23])
                          []
                      (middle_end/flambda/inlining_cost.ml[238,8185+4]..[238,8185+34])
                        Immutable
                        "direct_call_of_indirect" (middle_end/flambda/inlining_cost.ml[238,8185+4]..[238,8185+27])                        core_type (middle_end/flambda/inlining_cost.ml[238,8185+30]..[238,8185+33])
                          Ptyp_constr "int" (middle_end/flambda/inlining_cost.ml[238,8185+30]..[238,8185+33])
                          []
                      (middle_end/flambda/inlining_cost.ml[239,8220+4]..[239,8220+27])
                        Immutable
                        "requested_inline" (middle_end/flambda/inlining_cost.ml[239,8220+4]..[239,8220+20])                        core_type (middle_end/flambda/inlining_cost.ml[239,8220+23]..[239,8220+26])
                          Ptyp_constr "int" (middle_end/flambda/inlining_cost.ml[239,8220+23]..[239,8220+26])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[243,8327+2]..[250,8488+3])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[243,8327+6]..[243,8327+10])
                  Ppat_var "zero" (middle_end/flambda/inlining_cost.ml[243,8327+6]..[243,8327+10])
                expression (middle_end/flambda/inlining_cost.ml[243,8327+13]..[250,8488+3])
                  Pexp_record
                  [
                    "remove_call" (middle_end/flambda/inlining_cost.ml[244,8342+4]..[244,8342+15])
                      expression (middle_end/flambda/inlining_cost.ml[244,8342+18]..[244,8342+19])
                        Pexp_constant PConst_int (0,None)
                    "remove_alloc" (middle_end/flambda/inlining_cost.ml[245,8363+4]..[245,8363+16])
                      expression (middle_end/flambda/inlining_cost.ml[245,8363+19]..[245,8363+20])
                        Pexp_constant PConst_int (0,None)
                    "remove_prim" (middle_end/flambda/inlining_cost.ml[246,8385+4]..[246,8385+15])
                      expression (middle_end/flambda/inlining_cost.ml[246,8385+18]..[246,8385+19])
                        Pexp_constant PConst_int (0,None)
                    "remove_branch" (middle_end/flambda/inlining_cost.ml[247,8406+4]..[247,8406+17])
                      expression (middle_end/flambda/inlining_cost.ml[247,8406+20]..[247,8406+21])
                        Pexp_constant PConst_int (0,None)
                    "direct_call_of_indirect" (middle_end/flambda/inlining_cost.ml[248,8429+4]..[248,8429+27])
                      expression (middle_end/flambda/inlining_cost.ml[248,8429+30]..[248,8429+31])
                        Pexp_constant PConst_int (0,None)
                    "requested_inline" (middle_end/flambda/inlining_cost.ml[249,8462+4]..[249,8462+20])
                      expression (middle_end/flambda/inlining_cost.ml[249,8462+23]..[249,8462+24])
                        Pexp_constant PConst_int (0,None)
                  ]
                  None
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[252,8493+2]..[252,8493+65])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[252,8493+6]..[252,8493+17])
                  Ppat_var "remove_call" (middle_end/flambda/inlining_cost.ml[252,8493+6]..[252,8493+17])
                expression (middle_end/flambda/inlining_cost.ml[252,8493+18]..[252,8493+65]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[252,8493+18]..[252,8493+19])
                    Ppat_var "t" (middle_end/flambda/inlining_cost.ml[252,8493+18]..[252,8493+19])
                  expression (middle_end/flambda/inlining_cost.ml[252,8493+22]..[252,8493+65])
                    Pexp_record
                    [
                      "remove_call" (middle_end/flambda/inlining_cost.ml[252,8493+31]..[252,8493+42])
                        expression (middle_end/flambda/inlining_cost.ml[252,8493+45]..[252,8493+62])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[252,8493+59]..[252,8493+60])
                            Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[252,8493+59]..[252,8493+60])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[252,8493+45]..[252,8493+58])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[252,8493+45]..[252,8493+46])
                                  Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[252,8493+45]..[252,8493+46])
                                "remove_call" (middle_end/flambda/inlining_cost.ml[252,8493+47]..[252,8493+58])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[252,8493+61]..[252,8493+62])
                                Pexp_constant PConst_int (1,None)
                          ]
                    ]
                    Some
                      expression (middle_end/flambda/inlining_cost.ml[252,8493+24]..[252,8493+25])
                        Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[252,8493+24]..[252,8493+25])
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[253,8559+2]..[253,8559+68])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[253,8559+6]..[253,8559+18])
                  Ppat_var "remove_alloc" (middle_end/flambda/inlining_cost.ml[253,8559+6]..[253,8559+18])
                expression (middle_end/flambda/inlining_cost.ml[253,8559+19]..[253,8559+68]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[253,8559+19]..[253,8559+20])
                    Ppat_var "t" (middle_end/flambda/inlining_cost.ml[253,8559+19]..[253,8559+20])
                  expression (middle_end/flambda/inlining_cost.ml[253,8559+23]..[253,8559+68])
                    Pexp_record
                    [
                      "remove_alloc" (middle_end/flambda/inlining_cost.ml[253,8559+32]..[253,8559+44])
                        expression (middle_end/flambda/inlining_cost.ml[253,8559+47]..[253,8559+65])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[253,8559+62]..[253,8559+63])
                            Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[253,8559+62]..[253,8559+63])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[253,8559+47]..[253,8559+61])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[253,8559+47]..[253,8559+48])
                                  Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[253,8559+47]..[253,8559+48])
                                "remove_alloc" (middle_end/flambda/inlining_cost.ml[253,8559+49]..[253,8559+61])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[253,8559+64]..[253,8559+65])
                                Pexp_constant PConst_int (1,None)
                          ]
                    ]
                    Some
                      expression (middle_end/flambda/inlining_cost.ml[253,8559+25]..[253,8559+26])
                        Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[253,8559+25]..[253,8559+26])
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[254,8628+2]..[254,8628+65])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[254,8628+6]..[254,8628+17])
                  Ppat_var "remove_prim" (middle_end/flambda/inlining_cost.ml[254,8628+6]..[254,8628+17])
                expression (middle_end/flambda/inlining_cost.ml[254,8628+18]..[254,8628+65]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[254,8628+18]..[254,8628+19])
                    Ppat_var "t" (middle_end/flambda/inlining_cost.ml[254,8628+18]..[254,8628+19])
                  expression (middle_end/flambda/inlining_cost.ml[254,8628+22]..[254,8628+65])
                    Pexp_record
                    [
                      "remove_prim" (middle_end/flambda/inlining_cost.ml[254,8628+31]..[254,8628+42])
                        expression (middle_end/flambda/inlining_cost.ml[254,8628+45]..[254,8628+62])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[254,8628+59]..[254,8628+60])
                            Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[254,8628+59]..[254,8628+60])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[254,8628+45]..[254,8628+58])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[254,8628+45]..[254,8628+46])
                                  Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[254,8628+45]..[254,8628+46])
                                "remove_prim" (middle_end/flambda/inlining_cost.ml[254,8628+47]..[254,8628+58])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[254,8628+61]..[254,8628+62])
                                Pexp_constant PConst_int (1,None)
                          ]
                    ]
                    Some
                      expression (middle_end/flambda/inlining_cost.ml[254,8628+24]..[254,8628+25])
                        Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[254,8628+24]..[254,8628+25])
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[255,8694+2]..[255,8694+68])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[255,8694+6]..[255,8694+18])
                  Ppat_var "remove_prims" (middle_end/flambda/inlining_cost.ml[255,8694+6]..[255,8694+18])
                expression (middle_end/flambda/inlining_cost.ml[255,8694+19]..[255,8694+68]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[255,8694+19]..[255,8694+20])
                    Ppat_var "t" (middle_end/flambda/inlining_cost.ml[255,8694+19]..[255,8694+20])
                  expression (middle_end/flambda/inlining_cost.ml[255,8694+21]..[255,8694+68]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[255,8694+21]..[255,8694+22])
                      Ppat_var "n" (middle_end/flambda/inlining_cost.ml[255,8694+21]..[255,8694+22])
                    expression (middle_end/flambda/inlining_cost.ml[255,8694+25]..[255,8694+68])
                      Pexp_record
                      [
                        "remove_prim" (middle_end/flambda/inlining_cost.ml[255,8694+34]..[255,8694+45])
                          expression (middle_end/flambda/inlining_cost.ml[255,8694+48]..[255,8694+65])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[255,8694+62]..[255,8694+63])
                              Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[255,8694+62]..[255,8694+63])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[255,8694+48]..[255,8694+61])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[255,8694+48]..[255,8694+49])
                                    Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[255,8694+48]..[255,8694+49])
                                  "remove_prim" (middle_end/flambda/inlining_cost.ml[255,8694+50]..[255,8694+61])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[255,8694+64]..[255,8694+65])
                                  Pexp_ident "n" (middle_end/flambda/inlining_cost.ml[255,8694+64]..[255,8694+65])
                            ]
                      ]
                      Some
                        expression (middle_end/flambda/inlining_cost.ml[255,8694+27]..[255,8694+28])
                          Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[255,8694+27]..[255,8694+28])
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[256,8763+2]..[256,8763+71])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[256,8763+6]..[256,8763+19])
                  Ppat_var "remove_branch" (middle_end/flambda/inlining_cost.ml[256,8763+6]..[256,8763+19])
                expression (middle_end/flambda/inlining_cost.ml[256,8763+20]..[256,8763+71]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[256,8763+20]..[256,8763+21])
                    Ppat_var "t" (middle_end/flambda/inlining_cost.ml[256,8763+20]..[256,8763+21])
                  expression (middle_end/flambda/inlining_cost.ml[256,8763+24]..[256,8763+71])
                    Pexp_record
                    [
                      "remove_branch" (middle_end/flambda/inlining_cost.ml[256,8763+33]..[256,8763+46])
                        expression (middle_end/flambda/inlining_cost.ml[256,8763+49]..[256,8763+68])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[256,8763+65]..[256,8763+66])
                            Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[256,8763+65]..[256,8763+66])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[256,8763+49]..[256,8763+64])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[256,8763+49]..[256,8763+50])
                                  Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[256,8763+49]..[256,8763+50])
                                "remove_branch" (middle_end/flambda/inlining_cost.ml[256,8763+51]..[256,8763+64])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[256,8763+67]..[256,8763+68])
                                Pexp_constant PConst_int (1,None)
                          ]
                    ]
                    Some
                      expression (middle_end/flambda/inlining_cost.ml[256,8763+26]..[256,8763+27])
                        Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[256,8763+26]..[256,8763+27])
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[257,8835+2]..[258,8869+71])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[257,8835+6]..[257,8835+29])
                  Ppat_var "direct_call_of_indirect" (middle_end/flambda/inlining_cost.ml[257,8835+6]..[257,8835+29])
                expression (middle_end/flambda/inlining_cost.ml[257,8835+30]..[258,8869+71]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[257,8835+30]..[257,8835+31])
                    Ppat_var "t" (middle_end/flambda/inlining_cost.ml[257,8835+30]..[257,8835+31])
                  expression (middle_end/flambda/inlining_cost.ml[258,8869+4]..[258,8869+71])
                    Pexp_record
                    [
                      "direct_call_of_indirect" (middle_end/flambda/inlining_cost.ml[258,8869+13]..[258,8869+36])
                        expression (middle_end/flambda/inlining_cost.ml[258,8869+39]..[258,8869+68])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[258,8869+65]..[258,8869+66])
                            Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[258,8869+65]..[258,8869+66])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[258,8869+39]..[258,8869+64])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[258,8869+39]..[258,8869+40])
                                  Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[258,8869+39]..[258,8869+40])
                                "direct_call_of_indirect" (middle_end/flambda/inlining_cost.ml[258,8869+41]..[258,8869+64])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[258,8869+67]..[258,8869+68])
                                Pexp_constant PConst_int (1,None)
                          ]
                    ]
                    Some
                      expression (middle_end/flambda/inlining_cost.ml[258,8869+6]..[258,8869+7])
                        Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[258,8869+6]..[258,8869+7])
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[259,8941+2]..[261,9015+60])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[259,8941+6]..[259,8941+22])
                  Ppat_var "requested_inline" (middle_end/flambda/inlining_cost.ml[259,8941+6]..[259,8941+22])
                expression (middle_end/flambda/inlining_cost.ml[259,8941+23]..[261,9015+60]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[259,8941+23]..[259,8941+24])
                    Ppat_var "t" (middle_end/flambda/inlining_cost.ml[259,8941+23]..[259,8941+24])
                  expression (middle_end/flambda/inlining_cost.ml[259,8941+25]..[261,9015+60]) ghost
                    Pexp_fun
                    Labelled "size_of"
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[259,8941+26]..[259,8941+33])
                      Ppat_var "size_of" (middle_end/flambda/inlining_cost.ml[259,8941+26]..[259,8941+33])
                    expression (middle_end/flambda/inlining_cost.ml[260,8977+4]..[261,9015+60])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/inlining_cost.ml[260,8977+8]..[260,8977+12])
                            Ppat_var "size" (middle_end/flambda/inlining_cost.ml[260,8977+8]..[260,8977+12])
                          expression (middle_end/flambda/inlining_cost.ml[260,8977+15]..[260,8977+34])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[260,8977+15]..[260,8977+26])
                              Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[260,8977+15]..[260,8977+26])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[260,8977+27]..[260,8977+34])
                                  Pexp_ident "size_of" (middle_end/flambda/inlining_cost.ml[260,8977+27]..[260,8977+34])
                            ]
                      ]
                      expression (middle_end/flambda/inlining_cost.ml[261,9015+4]..[261,9015+60])
                        Pexp_record
                        [
                          "requested_inline" (middle_end/flambda/inlining_cost.ml[261,9015+13]..[261,9015+29])
                            expression (middle_end/flambda/inlining_cost.ml[261,9015+32]..[261,9015+57])
                              Pexp_apply
                              expression (middle_end/flambda/inlining_cost.ml[261,9015+51]..[261,9015+52])
                                Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[261,9015+51]..[261,9015+52])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[261,9015+32]..[261,9015+50])
                                    Pexp_field
                                    expression (middle_end/flambda/inlining_cost.ml[261,9015+32]..[261,9015+33])
                                      Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[261,9015+32]..[261,9015+33])
                                    "requested_inline" (middle_end/flambda/inlining_cost.ml[261,9015+34]..[261,9015+50])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[261,9015+53]..[261,9015+57])
                                    Pexp_ident "size" (middle_end/flambda/inlining_cost.ml[261,9015+53]..[261,9015+57])
                              ]
                        ]
                        Some
                          expression (middle_end/flambda/inlining_cost.ml[261,9015+6]..[261,9015+7])
                            Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[261,9015+6]..[261,9015+7])
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[263,9077+2]..[270,9425+26])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[263,9077+6]..[263,9077+24])
                  Ppat_var "remove_code_helper" (middle_end/flambda/inlining_cost.ml[263,9077+6]..[263,9077+24])
                expression (middle_end/flambda/inlining_cost.ml[263,9077+25]..[270,9425+26]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[263,9077+25]..[263,9077+26])
                    Ppat_var "b" (middle_end/flambda/inlining_cost.ml[263,9077+25]..[263,9077+26])
                  expression (middle_end/flambda/inlining_cost.ml[263,9077+27]..[270,9425+26]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[263,9077+27]..[263,9077+45])
                      Ppat_constraint
                      pattern (middle_end/flambda/inlining_cost.ml[263,9077+28]..[263,9077+32])
                        Ppat_var "flam" (middle_end/flambda/inlining_cost.ml[263,9077+28]..[263,9077+32])
                      core_type (middle_end/flambda/inlining_cost.ml[263,9077+35]..[263,9077+44])
                        Ptyp_constr "Flambda.t" (middle_end/flambda/inlining_cost.ml[263,9077+35]..[263,9077+44])
                        []
                    expression (middle_end/flambda/inlining_cost.ml[264,9125+4]..[270,9425+26])
                      Pexp_match
                      expression (middle_end/flambda/inlining_cost.ml[264,9125+10]..[264,9125+14])
                        Pexp_ident "flam" (middle_end/flambda/inlining_cost.ml[264,9125+10]..[264,9125+14])
                      [
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[265,9145+6]..[265,9145+14])
                            Ppat_construct "Assign" (middle_end/flambda/inlining_cost.ml[265,9145+6]..[265,9145+12])
                            Some
                              []
                              pattern (middle_end/flambda/inlining_cost.ml[265,9145+13]..[265,9145+14])
                                Ppat_any
                          expression (middle_end/flambda/inlining_cost.ml[265,9145+18]..[265,9145+37])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[265,9145+20]..[265,9145+22])
                              Pexp_ident ":=" (middle_end/flambda/inlining_cost.ml[265,9145+20]..[265,9145+22])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[265,9145+18]..[265,9145+19])
                                  Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[265,9145+18]..[265,9145+19])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[265,9145+23]..[265,9145+37])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[265,9145+23]..[265,9145+34])
                                    Pexp_ident "remove_prim" (middle_end/flambda/inlining_cost.ml[265,9145+23]..[265,9145+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[265,9145+35]..[265,9145+37])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[265,9145+35]..[265,9145+36])
                                          Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[265,9145+35]..[265,9145+36])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[265,9145+36]..[265,9145+37])
                                              Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[265,9145+36]..[265,9145+37])
                                        ]
                                  ]
                            ]
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[266,9183+6]..[267,9246+38])
                            Ppat_or
                            pattern (middle_end/flambda/inlining_cost.ml[266,9183+6]..[267,9246+30])
                              Ppat_or
                              pattern (middle_end/flambda/inlining_cost.ml[266,9183+6]..[267,9246+20])
                                Ppat_or
                                pattern (middle_end/flambda/inlining_cost.ml[266,9183+6]..[266,9183+62])
                                  Ppat_or
                                  pattern (middle_end/flambda/inlining_cost.ml[266,9183+6]..[266,9183+49])
                                    Ppat_or
                                    pattern (middle_end/flambda/inlining_cost.ml[266,9183+6]..[266,9183+32])
                                      Ppat_or
                                      pattern (middle_end/flambda/inlining_cost.ml[266,9183+6]..[266,9183+14])
                                        Ppat_construct "Switch" (middle_end/flambda/inlining_cost.ml[266,9183+6]..[266,9183+12])
                                        Some
                                          []
                                          pattern (middle_end/flambda/inlining_cost.ml[266,9183+13]..[266,9183+14])
                                            Ppat_any
                                      pattern (middle_end/flambda/inlining_cost.ml[266,9183+17]..[266,9183+32])
                                        Ppat_construct "String_switch" (middle_end/flambda/inlining_cost.ml[266,9183+17]..[266,9183+30])
                                        Some
                                          []
                                          pattern (middle_end/flambda/inlining_cost.ml[266,9183+31]..[266,9183+32])
                                            Ppat_any
                                    pattern (middle_end/flambda/inlining_cost.ml[266,9183+35]..[266,9183+49])
                                      Ppat_construct "Static_raise" (middle_end/flambda/inlining_cost.ml[266,9183+35]..[266,9183+47])
                                      Some
                                        []
                                        pattern (middle_end/flambda/inlining_cost.ml[266,9183+48]..[266,9183+49])
                                          Ppat_any
                                  pattern (middle_end/flambda/inlining_cost.ml[266,9183+52]..[266,9183+62])
                                    Ppat_construct "Try_with" (middle_end/flambda/inlining_cost.ml[266,9183+52]..[266,9183+60])
                                    Some
                                      []
                                      pattern (middle_end/flambda/inlining_cost.ml[266,9183+61]..[266,9183+62])
                                        Ppat_any
                                pattern (middle_end/flambda/inlining_cost.ml[267,9246+6]..[267,9246+20])
                                  Ppat_construct "If_then_else" (middle_end/flambda/inlining_cost.ml[267,9246+6]..[267,9246+18])
                                  Some
                                    []
                                    pattern (middle_end/flambda/inlining_cost.ml[267,9246+19]..[267,9246+20])
                                      Ppat_any
                              pattern (middle_end/flambda/inlining_cost.ml[267,9246+23]..[267,9246+30])
                                Ppat_construct "While" (middle_end/flambda/inlining_cost.ml[267,9246+23]..[267,9246+28])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[267,9246+29]..[267,9246+30])
                                    Ppat_any
                            pattern (middle_end/flambda/inlining_cost.ml[267,9246+33]..[267,9246+38])
                              Ppat_construct "For" (middle_end/flambda/inlining_cost.ml[267,9246+33]..[267,9246+36])
                              Some
                                []
                                pattern (middle_end/flambda/inlining_cost.ml[267,9246+37]..[267,9246+38])
                                  Ppat_any
                          expression (middle_end/flambda/inlining_cost.ml[267,9246+42]..[267,9246+63])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[267,9246+44]..[267,9246+46])
                              Pexp_ident ":=" (middle_end/flambda/inlining_cost.ml[267,9246+44]..[267,9246+46])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[267,9246+42]..[267,9246+43])
                                  Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[267,9246+42]..[267,9246+43])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[267,9246+47]..[267,9246+63])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[267,9246+47]..[267,9246+60])
                                    Pexp_ident "remove_branch" (middle_end/flambda/inlining_cost.ml[267,9246+47]..[267,9246+60])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[267,9246+61]..[267,9246+63])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[267,9246+61]..[267,9246+62])
                                          Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[267,9246+61]..[267,9246+62])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[267,9246+62]..[267,9246+63])
                                              Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[267,9246+62]..[267,9246+63])
                                        ]
                                  ]
                            ]
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[268,9310+6]..[268,9310+22])
                            Ppat_or
                            pattern (middle_end/flambda/inlining_cost.ml[268,9310+6]..[268,9310+13])
                              Ppat_construct "Apply" (middle_end/flambda/inlining_cost.ml[268,9310+6]..[268,9310+11])
                              Some
                                []
                                pattern (middle_end/flambda/inlining_cost.ml[268,9310+12]..[268,9310+13])
                                  Ppat_any
                            pattern (middle_end/flambda/inlining_cost.ml[268,9310+16]..[268,9310+22])
                              Ppat_construct "Send" (middle_end/flambda/inlining_cost.ml[268,9310+16]..[268,9310+20])
                              Some
                                []
                                pattern (middle_end/flambda/inlining_cost.ml[268,9310+21]..[268,9310+22])
                                  Ppat_any
                          expression (middle_end/flambda/inlining_cost.ml[268,9310+26]..[268,9310+45])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[268,9310+28]..[268,9310+30])
                              Pexp_ident ":=" (middle_end/flambda/inlining_cost.ml[268,9310+28]..[268,9310+30])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[268,9310+26]..[268,9310+27])
                                  Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[268,9310+26]..[268,9310+27])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[268,9310+31]..[268,9310+45])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[268,9310+31]..[268,9310+42])
                                    Pexp_ident "remove_call" (middle_end/flambda/inlining_cost.ml[268,9310+31]..[268,9310+42])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[268,9310+43]..[268,9310+45])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[268,9310+43]..[268,9310+44])
                                          Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[268,9310+43]..[268,9310+44])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[268,9310+44]..[268,9310+45])
                                              Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[268,9310+44]..[268,9310+45])
                                        ]
                                  ]
                            ]
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[269,9356+6]..[270,9425+20])
                            Ppat_or
                            pattern (middle_end/flambda/inlining_cost.ml[269,9356+6]..[269,9356+68])
                              Ppat_or
                              pattern (middle_end/flambda/inlining_cost.ml[269,9356+6]..[269,9356+60])
                                Ppat_or
                                pattern (middle_end/flambda/inlining_cost.ml[269,9356+6]..[269,9356+39])
                                  Ppat_or
                                  pattern (middle_end/flambda/inlining_cost.ml[269,9356+6]..[269,9356+27])
                                    Ppat_or
                                    pattern (middle_end/flambda/inlining_cost.ml[269,9356+6]..[269,9356+11])
                                      Ppat_construct "Let" (middle_end/flambda/inlining_cost.ml[269,9356+6]..[269,9356+9])
                                      Some
                                        []
                                        pattern (middle_end/flambda/inlining_cost.ml[269,9356+10]..[269,9356+11])
                                          Ppat_any
                                    pattern (middle_end/flambda/inlining_cost.ml[269,9356+14]..[269,9356+27])
                                      Ppat_construct "Let_mutable" (middle_end/flambda/inlining_cost.ml[269,9356+14]..[269,9356+25])
                                      Some
                                        []
                                        pattern (middle_end/flambda/inlining_cost.ml[269,9356+26]..[269,9356+27])
                                          Ppat_any
                                  pattern (middle_end/flambda/inlining_cost.ml[269,9356+30]..[269,9356+39])
                                    Ppat_construct "Let_rec" (middle_end/flambda/inlining_cost.ml[269,9356+30]..[269,9356+37])
                                    Some
                                      []
                                      pattern (middle_end/flambda/inlining_cost.ml[269,9356+38]..[269,9356+39])
                                        Ppat_any
                                pattern (middle_end/flambda/inlining_cost.ml[269,9356+42]..[269,9356+60])
                                  Ppat_construct "Proved_unreachable" (middle_end/flambda/inlining_cost.ml[269,9356+42]..[269,9356+60])
                                  None
                              pattern (middle_end/flambda/inlining_cost.ml[269,9356+63]..[269,9356+68])
                                Ppat_construct "Var" (middle_end/flambda/inlining_cost.ml[269,9356+63]..[269,9356+66])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[269,9356+67]..[269,9356+68])
                                    Ppat_any
                            pattern (middle_end/flambda/inlining_cost.ml[270,9425+6]..[270,9425+20])
                              Ppat_construct "Static_catch" (middle_end/flambda/inlining_cost.ml[270,9425+6]..[270,9425+18])
                              Some
                                []
                                pattern (middle_end/flambda/inlining_cost.ml[270,9425+19]..[270,9425+20])
                                  Ppat_any
                          expression (middle_end/flambda/inlining_cost.ml[270,9425+24]..[270,9425+26])
                            Pexp_construct "()" (middle_end/flambda/inlining_cost.ml[270,9425+24]..[270,9425+26])
                            None
                      ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[272,9453+2]..[282,9902+76])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[272,9453+6]..[272,9453+30])
                  Ppat_var "remove_code_helper_named" (middle_end/flambda/inlining_cost.ml[272,9453+6]..[272,9453+30])
                expression (middle_end/flambda/inlining_cost.ml[272,9453+31]..[282,9902+76]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[272,9453+31]..[272,9453+32])
                    Ppat_var "b" (middle_end/flambda/inlining_cost.ml[272,9453+31]..[272,9453+32])
                  expression (middle_end/flambda/inlining_cost.ml[272,9453+33]..[282,9902+76]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[272,9453+33]..[272,9453+56])
                      Ppat_constraint
                      pattern (middle_end/flambda/inlining_cost.ml[272,9453+34]..[272,9453+39])
                        Ppat_var "named" (middle_end/flambda/inlining_cost.ml[272,9453+34]..[272,9453+39])
                      core_type (middle_end/flambda/inlining_cost.ml[272,9453+42]..[272,9453+55])
                        Ptyp_constr "Flambda.named" (middle_end/flambda/inlining_cost.ml[272,9453+42]..[272,9453+55])
                        []
                    expression (middle_end/flambda/inlining_cost.ml[273,9512+4]..[282,9902+76])
                      Pexp_match
                      expression (middle_end/flambda/inlining_cost.ml[273,9512+10]..[273,9512+15])
                        Pexp_ident "named" (middle_end/flambda/inlining_cost.ml[273,9512+10]..[273,9512+15])
                      [
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[274,9533+6]..[275,9557+63])
                            Ppat_or
                            pattern (middle_end/flambda/inlining_cost.ml[274,9533+6]..[274,9533+23])
                              Ppat_construct "Set_of_closures" (middle_end/flambda/inlining_cost.ml[274,9533+6]..[274,9533+21])
                              Some
                                []
                                pattern (middle_end/flambda/inlining_cost.ml[274,9533+22]..[274,9533+23])
                                  Ppat_any
                            pattern (middle_end/flambda/inlining_cost.ml[275,9557+6]..[275,9557+63])
                              Ppat_construct "Prim" (middle_end/flambda/inlining_cost.ml[275,9557+6]..[275,9557+10])
                              Some
                                []
                                pattern (middle_end/flambda/inlining_cost.ml[275,9557+11]..[275,9557+63])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/inlining_cost.ml[275,9557+12]..[275,9557+56])
                                      Ppat_or
                                      pattern (middle_end/flambda/inlining_cost.ml[275,9557+13]..[275,9557+40])
                                        Ppat_or
                                        pattern (middle_end/flambda/inlining_cost.ml[275,9557+13]..[275,9557+25])
                                          Ppat_construct "Pmakearray" (middle_end/flambda/inlining_cost.ml[275,9557+13]..[275,9557+23])
                                          Some
                                            []
                                            pattern (middle_end/flambda/inlining_cost.ml[275,9557+24]..[275,9557+25])
                                              Ppat_any
                                        pattern (middle_end/flambda/inlining_cost.ml[275,9557+28]..[275,9557+40])
                                          Ppat_construct "Pmakeblock" (middle_end/flambda/inlining_cost.ml[275,9557+28]..[275,9557+38])
                                          Some
                                            []
                                            pattern (middle_end/flambda/inlining_cost.ml[275,9557+39]..[275,9557+40])
                                              Ppat_any
                                      pattern (middle_end/flambda/inlining_cost.ml[275,9557+43]..[275,9557+55])
                                        Ppat_construct "Pduprecord" (middle_end/flambda/inlining_cost.ml[275,9557+43]..[275,9557+53])
                                        Some
                                          []
                                          pattern (middle_end/flambda/inlining_cost.ml[275,9557+54]..[275,9557+55])
                                            Ppat_any
                                    pattern (middle_end/flambda/inlining_cost.ml[275,9557+58]..[275,9557+59])
                                      Ppat_any
                                    pattern (middle_end/flambda/inlining_cost.ml[275,9557+61]..[275,9557+62])
                                      Ppat_any
                                  ]
                          expression (middle_end/flambda/inlining_cost.ml[276,9624+6]..[276,9624+26])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[276,9624+8]..[276,9624+10])
                              Pexp_ident ":=" (middle_end/flambda/inlining_cost.ml[276,9624+8]..[276,9624+10])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[276,9624+6]..[276,9624+7])
                                  Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[276,9624+6]..[276,9624+7])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[276,9624+11]..[276,9624+26])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[276,9624+11]..[276,9624+23])
                                    Pexp_ident "remove_alloc" (middle_end/flambda/inlining_cost.ml[276,9624+11]..[276,9624+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[276,9624+24]..[276,9624+26])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[276,9624+24]..[276,9624+25])
                                          Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[276,9624+24]..[276,9624+25])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[276,9624+25]..[276,9624+26])
                                              Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[276,9624+25]..[276,9624+26])
                                        ]
                                  ]
                            ]
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[279,9768+6]..[281,9853+25])
                            Ppat_or
                            pattern (middle_end/flambda/inlining_cost.ml[279,9768+6]..[280,9817+35])
                              Ppat_or
                              pattern (middle_end/flambda/inlining_cost.ml[279,9768+6]..[279,9768+48])
                                Ppat_or
                                pattern (middle_end/flambda/inlining_cost.ml[279,9768+6]..[279,9768+32])
                                  Ppat_or
                                  pattern (middle_end/flambda/inlining_cost.ml[279,9768+6]..[279,9768+12])
                                    Ppat_construct "Prim" (middle_end/flambda/inlining_cost.ml[279,9768+6]..[279,9768+10])
                                    Some
                                      []
                                      pattern (middle_end/flambda/inlining_cost.ml[279,9768+11]..[279,9768+12])
                                        Ppat_any
                                  pattern (middle_end/flambda/inlining_cost.ml[279,9768+15]..[279,9768+32])
                                    Ppat_construct "Project_closure" (middle_end/flambda/inlining_cost.ml[279,9768+15]..[279,9768+30])
                                    Some
                                      []
                                      pattern (middle_end/flambda/inlining_cost.ml[279,9768+31]..[279,9768+32])
                                        Ppat_any
                                pattern (middle_end/flambda/inlining_cost.ml[279,9768+35]..[279,9768+48])
                                  Ppat_construct "Project_var" (middle_end/flambda/inlining_cost.ml[279,9768+35]..[279,9768+46])
                                  Some
                                    []
                                    pattern (middle_end/flambda/inlining_cost.ml[279,9768+47]..[279,9768+48])
                                      Ppat_any
                              pattern (middle_end/flambda/inlining_cost.ml[280,9817+6]..[280,9817+35])
                                Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/inlining_cost.ml[280,9817+6]..[280,9817+33])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[280,9817+34]..[280,9817+35])
                                    Ppat_any
                            pattern (middle_end/flambda/inlining_cost.ml[281,9853+6]..[281,9853+25])
                              Ppat_construct "Read_symbol_field" (middle_end/flambda/inlining_cost.ml[281,9853+6]..[281,9853+23])
                              Some
                                []
                                pattern (middle_end/flambda/inlining_cost.ml[281,9853+24]..[281,9853+25])
                                  Ppat_any
                          expression (middle_end/flambda/inlining_cost.ml[281,9853+29]..[281,9853+48])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[281,9853+31]..[281,9853+33])
                              Pexp_ident ":=" (middle_end/flambda/inlining_cost.ml[281,9853+31]..[281,9853+33])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[281,9853+29]..[281,9853+30])
                                  Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[281,9853+29]..[281,9853+30])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[281,9853+34]..[281,9853+48])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[281,9853+34]..[281,9853+45])
                                    Pexp_ident "remove_prim" (middle_end/flambda/inlining_cost.ml[281,9853+34]..[281,9853+45])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[281,9853+46]..[281,9853+48])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[281,9853+46]..[281,9853+47])
                                          Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[281,9853+46]..[281,9853+47])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[281,9853+47]..[281,9853+48])
                                              Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[281,9853+47]..[281,9853+48])
                                        ]
                                  ]
                            ]
                        <case>
                          pattern (middle_end/flambda/inlining_cost.ml[282,9902+6]..[282,9902+70])
                            Ppat_or
                            pattern (middle_end/flambda/inlining_cost.ml[282,9902+6]..[282,9902+61])
                              Ppat_or
                              pattern (middle_end/flambda/inlining_cost.ml[282,9902+6]..[282,9902+51])
                                Ppat_or
                                pattern (middle_end/flambda/inlining_cost.ml[282,9902+6]..[282,9902+31])
                                  Ppat_or
                                  pattern (middle_end/flambda/inlining_cost.ml[282,9902+6]..[282,9902+14])
                                    Ppat_construct "Symbol" (middle_end/flambda/inlining_cost.ml[282,9902+6]..[282,9902+12])
                                    Some
                                      []
                                      pattern (middle_end/flambda/inlining_cost.ml[282,9902+13]..[282,9902+14])
                                        Ppat_any
                                  pattern (middle_end/flambda/inlining_cost.ml[282,9902+17]..[282,9902+31])
                                    Ppat_construct "Read_mutable" (middle_end/flambda/inlining_cost.ml[282,9902+17]..[282,9902+29])
                                    Some
                                      []
                                      pattern (middle_end/flambda/inlining_cost.ml[282,9902+30]..[282,9902+31])
                                        Ppat_any
                                pattern (middle_end/flambda/inlining_cost.ml[282,9902+34]..[282,9902+51])
                                  Ppat_construct "Allocated_const" (middle_end/flambda/inlining_cost.ml[282,9902+34]..[282,9902+49])
                                  Some
                                    []
                                    pattern (middle_end/flambda/inlining_cost.ml[282,9902+50]..[282,9902+51])
                                      Ppat_any
                              pattern (middle_end/flambda/inlining_cost.ml[282,9902+54]..[282,9902+61])
                                Ppat_construct "Const" (middle_end/flambda/inlining_cost.ml[282,9902+54]..[282,9902+59])
                                Some
                                  []
                                  pattern (middle_end/flambda/inlining_cost.ml[282,9902+60]..[282,9902+61])
                                    Ppat_any
                            pattern (middle_end/flambda/inlining_cost.ml[282,9902+64]..[282,9902+70])
                              Ppat_construct "Expr" (middle_end/flambda/inlining_cost.ml[282,9902+64]..[282,9902+68])
                              Some
                                []
                                pattern (middle_end/flambda/inlining_cost.ml[282,9902+69]..[282,9902+70])
                                  Ppat_any
                          expression (middle_end/flambda/inlining_cost.ml[282,9902+74]..[282,9902+76])
                            Pexp_construct "()" (middle_end/flambda/inlining_cost.ml[282,9902+74]..[282,9902+76])
                            None
                      ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[284,9980+2]..[288,10126+6])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[284,9980+6]..[284,9980+17])
                  Ppat_var "remove_code" (middle_end/flambda/inlining_cost.ml[284,9980+6]..[284,9980+17])
                expression (middle_end/flambda/inlining_cost.ml[284,9980+18]..[288,10126+6]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[284,9980+18]..[284,9980+21])
                    Ppat_var "lam" (middle_end/flambda/inlining_cost.ml[284,9980+18]..[284,9980+21])
                  expression (middle_end/flambda/inlining_cost.ml[284,9980+22]..[288,10126+6]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[284,9980+22]..[284,9980+23])
                      Ppat_var "b" (middle_end/flambda/inlining_cost.ml[284,9980+22]..[284,9980+23])
                    expression (middle_end/flambda/inlining_cost.ml[285,10006+4]..[288,10126+6])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/inlining_cost.ml[285,10006+8]..[285,10006+9])
                            Ppat_var "b" (middle_end/flambda/inlining_cost.ml[285,10006+8]..[285,10006+9])
                          expression (middle_end/flambda/inlining_cost.ml[285,10006+12]..[285,10006+17])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[285,10006+12]..[285,10006+15])
                              Pexp_ident "ref" (middle_end/flambda/inlining_cost.ml[285,10006+12]..[285,10006+15])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[285,10006+16]..[285,10006+17])
                                  Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[285,10006+16]..[285,10006+17])
                            ]
                      ]
                      expression (middle_end/flambda/inlining_cost.ml[286,10027+4]..[288,10126+6])
                        Pexp_sequence
                        expression (middle_end/flambda/inlining_cost.ml[286,10027+4]..[287,10086+38])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[286,10027+4]..[286,10027+35])
                            Pexp_ident "Flambda_iterators.iter_toplevel" (middle_end/flambda/inlining_cost.ml[286,10027+4]..[286,10027+35])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[286,10027+36]..[286,10027+58])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[286,10027+37]..[286,10027+55])
                                  Pexp_ident "remove_code_helper" (middle_end/flambda/inlining_cost.ml[286,10027+37]..[286,10027+55])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[286,10027+56]..[286,10027+57])
                                      Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[286,10027+56]..[286,10027+57])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[287,10086+6]..[287,10086+34])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[287,10086+7]..[287,10086+31])
                                  Pexp_ident "remove_code_helper_named" (middle_end/flambda/inlining_cost.ml[287,10086+7]..[287,10086+31])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[287,10086+32]..[287,10086+33])
                                      Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[287,10086+32]..[287,10086+33])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[287,10086+35]..[287,10086+38])
                                Pexp_ident "lam" (middle_end/flambda/inlining_cost.ml[287,10086+35]..[287,10086+38])
                          ]
                        expression (middle_end/flambda/inlining_cost.ml[288,10126+4]..[288,10126+6])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[288,10126+4]..[288,10126+5])
                            Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[288,10126+4]..[288,10126+5])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[288,10126+5]..[288,10126+6])
                                Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[288,10126+5]..[288,10126+6])
                          ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[290,10134+2]..[294,10292+6])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[290,10134+6]..[290,10134+23])
                  Ppat_var "remove_code_named" (middle_end/flambda/inlining_cost.ml[290,10134+6]..[290,10134+23])
                expression (middle_end/flambda/inlining_cost.ml[290,10134+24]..[294,10292+6]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[290,10134+24]..[290,10134+27])
                    Ppat_var "lam" (middle_end/flambda/inlining_cost.ml[290,10134+24]..[290,10134+27])
                  expression (middle_end/flambda/inlining_cost.ml[290,10134+28]..[294,10292+6]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[290,10134+28]..[290,10134+29])
                      Ppat_var "b" (middle_end/flambda/inlining_cost.ml[290,10134+28]..[290,10134+29])
                    expression (middle_end/flambda/inlining_cost.ml[291,10166+4]..[294,10292+6])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/inlining_cost.ml[291,10166+8]..[291,10166+9])
                            Ppat_var "b" (middle_end/flambda/inlining_cost.ml[291,10166+8]..[291,10166+9])
                          expression (middle_end/flambda/inlining_cost.ml[291,10166+12]..[291,10166+17])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[291,10166+12]..[291,10166+15])
                              Pexp_ident "ref" (middle_end/flambda/inlining_cost.ml[291,10166+12]..[291,10166+15])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[291,10166+16]..[291,10166+17])
                                  Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[291,10166+16]..[291,10166+17])
                            ]
                      ]
                      expression (middle_end/flambda/inlining_cost.ml[292,10187+4]..[294,10292+6])
                        Pexp_sequence
                        expression (middle_end/flambda/inlining_cost.ml[292,10187+4]..[293,10252+38])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[292,10187+4]..[292,10187+41])
                            Pexp_ident "Flambda_iterators.iter_named_toplevel" (middle_end/flambda/inlining_cost.ml[292,10187+4]..[292,10187+41])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[292,10187+42]..[292,10187+64])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[292,10187+43]..[292,10187+61])
                                  Pexp_ident "remove_code_helper" (middle_end/flambda/inlining_cost.ml[292,10187+43]..[292,10187+61])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[292,10187+62]..[292,10187+63])
                                      Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[292,10187+62]..[292,10187+63])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[293,10252+6]..[293,10252+34])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[293,10252+7]..[293,10252+31])
                                  Pexp_ident "remove_code_helper_named" (middle_end/flambda/inlining_cost.ml[293,10252+7]..[293,10252+31])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[293,10252+32]..[293,10252+33])
                                      Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[293,10252+32]..[293,10252+33])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[293,10252+35]..[293,10252+38])
                                Pexp_ident "lam" (middle_end/flambda/inlining_cost.ml[293,10252+35]..[293,10252+38])
                          ]
                        expression (middle_end/flambda/inlining_cost.ml[294,10292+4]..[294,10292+6])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[294,10292+4]..[294,10292+5])
                            Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[294,10292+4]..[294,10292+5])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[294,10292+5]..[294,10292+6])
                                Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[294,10292+5]..[294,10292+6])
                          ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[296,10300+2]..[299,10467+17])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[296,10300+6]..[296,10300+23])
                  Ppat_var "remove_projection" (middle_end/flambda/inlining_cost.ml[296,10300+6]..[296,10300+23])
                expression (middle_end/flambda/inlining_cost.ml[296,10300+24]..[299,10467+17]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[296,10300+24]..[296,10300+46])
                    Ppat_constraint
                    pattern (middle_end/flambda/inlining_cost.ml[296,10300+25]..[296,10300+30])
                      Ppat_var "_proj" (middle_end/flambda/inlining_cost.ml[296,10300+25]..[296,10300+30])
                    core_type (middle_end/flambda/inlining_cost.ml[296,10300+33]..[296,10300+45])
                      Ptyp_constr "Projection.t" (middle_end/flambda/inlining_cost.ml[296,10300+33]..[296,10300+45])
                      []
                  expression (middle_end/flambda/inlining_cost.ml[296,10300+47]..[299,10467+17]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[296,10300+47]..[296,10300+48])
                      Ppat_var "b" (middle_end/flambda/inlining_cost.ml[296,10300+47]..[296,10300+48])
                    expression (middle_end/flambda/inlining_cost.ml[299,10467+4]..[299,10467+17])
                      Pexp_apply
                      expression (middle_end/flambda/inlining_cost.ml[299,10467+4]..[299,10467+15])
                        Pexp_ident "remove_prim" (middle_end/flambda/inlining_cost.ml[299,10467+4]..[299,10467+15])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[299,10467+16]..[299,10467+17])
                            Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[299,10467+16]..[299,10467+17])
                      ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[301,10486+2]..[310,10799+24])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[301,10486+6]..[301,10486+11])
                  Ppat_var "print" (middle_end/flambda/inlining_cost.ml[301,10486+6]..[301,10486+11])
                expression (middle_end/flambda/inlining_cost.ml[301,10486+12]..[310,10799+24]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[301,10486+12]..[301,10486+15])
                    Ppat_var "ppf" (middle_end/flambda/inlining_cost.ml[301,10486+12]..[301,10486+15])
                  expression (middle_end/flambda/inlining_cost.ml[301,10486+16]..[310,10799+24]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[301,10486+16]..[301,10486+17])
                      Ppat_var "b" (middle_end/flambda/inlining_cost.ml[301,10486+16]..[301,10486+17])
                    expression (middle_end/flambda/inlining_cost.ml[302,10506+4]..[310,10799+24])
                      Pexp_apply
                      expression (middle_end/flambda/inlining_cost.ml[302,10506+4]..[302,10506+18])
                        Pexp_ident "Format.fprintf" (middle_end/flambda/inlining_cost.ml[302,10506+4]..[302,10506+18])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[302,10506+19]..[302,10506+22])
                            Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[302,10506+19]..[302,10506+22])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[302,10506+23]..[304,10631+52])
                            Pexp_constant PConst_string("@[remove_call: %i@ remove_alloc: %i@ remove_prim: %i@ remove_branch: %i@ direct: %i@ requested: %i@]",(middle_end/flambda/inlining_cost.ml[302,10506+24]..[304,10631+51]),None)
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[305,10684+6]..[305,10684+19])
                            Pexp_field
                            expression (middle_end/flambda/inlining_cost.ml[305,10684+6]..[305,10684+7])
                              Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[305,10684+6]..[305,10684+7])
                            "remove_call" (middle_end/flambda/inlining_cost.ml[305,10684+8]..[305,10684+19])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[306,10704+6]..[306,10704+20])
                            Pexp_field
                            expression (middle_end/flambda/inlining_cost.ml[306,10704+6]..[306,10704+7])
                              Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[306,10704+6]..[306,10704+7])
                            "remove_alloc" (middle_end/flambda/inlining_cost.ml[306,10704+8]..[306,10704+20])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[307,10725+6]..[307,10725+19])
                            Pexp_field
                            expression (middle_end/flambda/inlining_cost.ml[307,10725+6]..[307,10725+7])
                              Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[307,10725+6]..[307,10725+7])
                            "remove_prim" (middle_end/flambda/inlining_cost.ml[307,10725+8]..[307,10725+19])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[308,10745+6]..[308,10745+21])
                            Pexp_field
                            expression (middle_end/flambda/inlining_cost.ml[308,10745+6]..[308,10745+7])
                              Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[308,10745+6]..[308,10745+7])
                            "remove_branch" (middle_end/flambda/inlining_cost.ml[308,10745+8]..[308,10745+21])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[309,10767+6]..[309,10767+31])
                            Pexp_field
                            expression (middle_end/flambda/inlining_cost.ml[309,10767+6]..[309,10767+7])
                              Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[309,10767+6]..[309,10767+7])
                            "direct_call_of_indirect" (middle_end/flambda/inlining_cost.ml[309,10767+8]..[309,10767+31])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[310,10799+6]..[310,10799+24])
                            Pexp_field
                            expression (middle_end/flambda/inlining_cost.ml[310,10799+6]..[310,10799+7])
                              Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[310,10799+6]..[310,10799+7])
                            "requested_inline" (middle_end/flambda/inlining_cost.ml[310,10799+8]..[310,10799+24])
                      ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[312,10825+2]..[320,11235+24])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[312,10825+6]..[312,10825+14])
                  Ppat_var "evaluate" (middle_end/flambda/inlining_cost.ml[312,10825+6]..[312,10825+14])
                expression (middle_end/flambda/inlining_cost.ml[312,10825+15]..[320,11235+24]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[312,10825+15]..[312,10825+16])
                    Ppat_var "t" (middle_end/flambda/inlining_cost.ml[312,10825+15]..[312,10825+16])
                  expression (middle_end/flambda/inlining_cost.ml[312,10825+17]..[320,11235+24]) ghost
                    Pexp_fun
                    Labelled "round"
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[312,10825+18]..[312,10825+23])
                      Ppat_var "round" (middle_end/flambda/inlining_cost.ml[312,10825+18]..[312,10825+23])
                    expression (middle_end/flambda/inlining_cost.ml[312,10825+24]..[320,11235+24])
                      Pexp_constraint
                      expression (middle_end/flambda/inlining_cost.ml[313,10857+4]..[320,11235+24])
                        Pexp_apply
                        expression (middle_end/flambda/inlining_cost.ml[320,11235+4]..[320,11235+5])
                          Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[320,11235+4]..[320,11235+5])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inlining_cost.ml[313,10857+4]..[319,11178+56])
                              Pexp_apply
                              expression (middle_end/flambda/inlining_cost.ml[313,10857+19]..[313,10857+20])
                                Pexp_ident "*" (middle_end/flambda/inlining_cost.ml[313,10857+19]..[313,10857+20])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[313,10857+4]..[313,10857+18])
                                    Pexp_ident "benefit_factor" (middle_end/flambda/inlining_cost.ml[313,10857+4]..[313,10857+18])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[314,10878+6]..[319,11178+56])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[318,11142+7]..[318,11142+8])
                                      Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[318,11142+7]..[318,11142+8])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[314,10878+7]..[317,11073+68])
                                          Pexp_apply
                                          expression (middle_end/flambda/inlining_cost.ml[317,11073+7]..[317,11073+8])
                                            Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[317,11073+7]..[317,11073+8])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[314,10878+7]..[316,11008+64])
                                                Pexp_apply
                                                expression (middle_end/flambda/inlining_cost.ml[316,11008+7]..[316,11008+8])
                                                  Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[316,11008+7]..[316,11008+8])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inlining_cost.ml[314,10878+7]..[315,10941+66])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inlining_cost.ml[315,10941+7]..[315,10941+8])
                                                        Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[315,10941+7]..[315,10941+8])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inlining_cost.ml[314,10878+7]..[314,10878+62])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inlining_cost.ml[314,10878+21]..[314,10878+22])
                                                              Pexp_ident "*" (middle_end/flambda/inlining_cost.ml[314,10878+21]..[314,10878+22])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inlining_cost.ml[314,10878+7]..[314,10878+20])
                                                                  Pexp_field
                                                                  expression (middle_end/flambda/inlining_cost.ml[314,10878+7]..[314,10878+8])
                                                                    Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[314,10878+7]..[314,10878+8])
                                                                  "remove_call" (middle_end/flambda/inlining_cost.ml[314,10878+9]..[314,10878+20])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inlining_cost.ml[314,10878+23]..[314,10878+62])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/inlining_cost.ml[314,10878+24]..[314,10878+28])
                                                                    Pexp_ident "cost" (middle_end/flambda/inlining_cost.ml[314,10878+24]..[314,10878+28])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inlining_cost.ml[314,10878+29]..[314,10878+54])
Pexp_apply
expression (middle_end/flambda/inlining_cost.ml[314,10878+29]..[314,10878+30])
  Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[314,10878+29]..[314,10878+30])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/inlining_cost.ml[314,10878+30]..[314,10878+54])
      Pexp_ident "Clflags.inline_call_cost" (middle_end/flambda/inlining_cost.ml[314,10878+30]..[314,10878+54])
]
                                                                    <arg>
                                                                    Labelled "round"
                                                                      expression (middle_end/flambda/inlining_cost.ml[314,10878+56]..[314,10878+61])
Pexp_ident "round" (middle_end/flambda/inlining_cost.ml[314,10878+56]..[314,10878+61])
                                                                  ]
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inlining_cost.ml[315,10941+9]..[315,10941+66])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inlining_cost.ml[315,10941+24]..[315,10941+25])
                                                              Pexp_ident "*" (middle_end/flambda/inlining_cost.ml[315,10941+24]..[315,10941+25])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inlining_cost.ml[315,10941+9]..[315,10941+23])
                                                                  Pexp_field
                                                                  expression (middle_end/flambda/inlining_cost.ml[315,10941+9]..[315,10941+10])
                                                                    Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[315,10941+9]..[315,10941+10])
                                                                  "remove_alloc" (middle_end/flambda/inlining_cost.ml[315,10941+11]..[315,10941+23])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inlining_cost.ml[315,10941+26]..[315,10941+66])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/inlining_cost.ml[315,10941+27]..[315,10941+31])
                                                                    Pexp_ident "cost" (middle_end/flambda/inlining_cost.ml[315,10941+27]..[315,10941+31])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inlining_cost.ml[315,10941+32]..[315,10941+58])
Pexp_apply
expression (middle_end/flambda/inlining_cost.ml[315,10941+32]..[315,10941+33])
  Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[315,10941+32]..[315,10941+33])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/inlining_cost.ml[315,10941+33]..[315,10941+58])
      Pexp_ident "Clflags.inline_alloc_cost" (middle_end/flambda/inlining_cost.ml[315,10941+33]..[315,10941+58])
]
                                                                    <arg>
                                                                    Labelled "round"
                                                                      expression (middle_end/flambda/inlining_cost.ml[315,10941+60]..[315,10941+65])
Pexp_ident "round" (middle_end/flambda/inlining_cost.ml[315,10941+60]..[315,10941+65])
                                                                  ]
                                                            ]
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inlining_cost.ml[316,11008+9]..[316,11008+64])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inlining_cost.ml[316,11008+23]..[316,11008+24])
                                                        Pexp_ident "*" (middle_end/flambda/inlining_cost.ml[316,11008+23]..[316,11008+24])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inlining_cost.ml[316,11008+9]..[316,11008+22])
                                                            Pexp_field
                                                            expression (middle_end/flambda/inlining_cost.ml[316,11008+9]..[316,11008+10])
                                                              Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[316,11008+9]..[316,11008+10])
                                                            "remove_prim" (middle_end/flambda/inlining_cost.ml[316,11008+11]..[316,11008+22])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inlining_cost.ml[316,11008+25]..[316,11008+64])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inlining_cost.ml[316,11008+26]..[316,11008+30])
                                                              Pexp_ident "cost" (middle_end/flambda/inlining_cost.ml[316,11008+26]..[316,11008+30])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inlining_cost.ml[316,11008+31]..[316,11008+56])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/inlining_cost.ml[316,11008+31]..[316,11008+32])
                                                                    Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[316,11008+31]..[316,11008+32])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inlining_cost.ml[316,11008+32]..[316,11008+56])
Pexp_ident "Clflags.inline_prim_cost" (middle_end/flambda/inlining_cost.ml[316,11008+32]..[316,11008+56])
                                                                  ]
                                                              <arg>
                                                              Labelled "round"
                                                                expression (middle_end/flambda/inlining_cost.ml[316,11008+58]..[316,11008+63])
                                                                  Pexp_ident "round" (middle_end/flambda/inlining_cost.ml[316,11008+58]..[316,11008+63])
                                                            ]
                                                      ]
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[317,11073+9]..[317,11073+68])
                                                Pexp_apply
                                                expression (middle_end/flambda/inlining_cost.ml[317,11073+25]..[317,11073+26])
                                                  Pexp_ident "*" (middle_end/flambda/inlining_cost.ml[317,11073+25]..[317,11073+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inlining_cost.ml[317,11073+9]..[317,11073+24])
                                                      Pexp_field
                                                      expression (middle_end/flambda/inlining_cost.ml[317,11073+9]..[317,11073+10])
                                                        Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[317,11073+9]..[317,11073+10])
                                                      "remove_branch" (middle_end/flambda/inlining_cost.ml[317,11073+11]..[317,11073+24])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inlining_cost.ml[317,11073+27]..[317,11073+68])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inlining_cost.ml[317,11073+28]..[317,11073+32])
                                                        Pexp_ident "cost" (middle_end/flambda/inlining_cost.ml[317,11073+28]..[317,11073+32])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inlining_cost.ml[317,11073+33]..[317,11073+60])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inlining_cost.ml[317,11073+33]..[317,11073+34])
                                                              Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[317,11073+33]..[317,11073+34])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inlining_cost.ml[317,11073+34]..[317,11073+60])
                                                                  Pexp_ident "Clflags.inline_branch_cost" (middle_end/flambda/inlining_cost.ml[317,11073+34]..[317,11073+60])
                                                            ]
                                                        <arg>
                                                        Labelled "round"
                                                          expression (middle_end/flambda/inlining_cost.ml[317,11073+62]..[317,11073+67])
                                                            Pexp_ident "round" (middle_end/flambda/inlining_cost.ml[317,11073+62]..[317,11073+67])
                                                      ]
                                                ]
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[318,11142+9]..[319,11178+55])
                                          Pexp_apply
                                          expression (middle_end/flambda/inlining_cost.ml[319,11178+9]..[319,11178+10])
                                            Pexp_ident "*" (middle_end/flambda/inlining_cost.ml[319,11178+9]..[319,11178+10])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[318,11142+10]..[318,11142+35])
                                                Pexp_field
                                                expression (middle_end/flambda/inlining_cost.ml[318,11142+10]..[318,11142+11])
                                                  Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[318,11142+10]..[318,11142+11])
                                                "direct_call_of_indirect" (middle_end/flambda/inlining_cost.ml[318,11142+12]..[318,11142+35])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[319,11178+11]..[319,11178+54])
                                                Pexp_apply
                                                expression (middle_end/flambda/inlining_cost.ml[319,11178+12]..[319,11178+16])
                                                  Pexp_ident "cost" (middle_end/flambda/inlining_cost.ml[319,11178+12]..[319,11178+16])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inlining_cost.ml[319,11178+17]..[319,11178+46])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inlining_cost.ml[319,11178+17]..[319,11178+18])
                                                        Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[319,11178+17]..[319,11178+18])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inlining_cost.ml[319,11178+18]..[319,11178+46])
                                                            Pexp_ident "Clflags.inline_indirect_cost" (middle_end/flambda/inlining_cost.ml[319,11178+18]..[319,11178+46])
                                                      ]
                                                  <arg>
                                                  Labelled "round"
                                                    expression (middle_end/flambda/inlining_cost.ml[319,11178+48]..[319,11178+53])
                                                      Pexp_ident "round" (middle_end/flambda/inlining_cost.ml[319,11178+48]..[319,11178+53])
                                                ]
                                          ]
                                    ]
                              ]
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inlining_cost.ml[320,11235+6]..[320,11235+24])
                              Pexp_field
                              expression (middle_end/flambda/inlining_cost.ml[320,11235+6]..[320,11235+7])
                                Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[320,11235+6]..[320,11235+7])
                              "requested_inline" (middle_end/flambda/inlining_cost.ml[320,11235+8]..[320,11235+24])
                        ]
                      core_type (middle_end/flambda/inlining_cost.ml[312,10825+26]..[312,10825+29])
                        Ptyp_constr "int" (middle_end/flambda/inlining_cost.ml[312,10825+26]..[312,10825+29])
                        []
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[322,11261+2]..[330,11653+3])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[322,11261+6]..[322,11261+9])
                  Ppat_var "+" (middle_end/flambda/inlining_cost.ml[322,11261+6]..[322,11261+9])
                expression (middle_end/flambda/inlining_cost.ml[322,11261+10]..[330,11653+3]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[322,11261+10]..[322,11261+12])
                    Ppat_var "t1" (middle_end/flambda/inlining_cost.ml[322,11261+10]..[322,11261+12])
                  expression (middle_end/flambda/inlining_cost.ml[322,11261+13]..[330,11653+3]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[322,11261+13]..[322,11261+15])
                      Ppat_var "t2" (middle_end/flambda/inlining_cost.ml[322,11261+13]..[322,11261+15])
                    expression (middle_end/flambda/inlining_cost.ml[322,11261+18]..[330,11653+3])
                      Pexp_record
                      [
                        "remove_call" (middle_end/flambda/inlining_cost.ml[323,11281+4]..[323,11281+15])
                          expression (middle_end/flambda/inlining_cost.ml[323,11281+18]..[323,11281+49])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[323,11281+33]..[323,11281+34])
                              Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[323,11281+33]..[323,11281+34])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[323,11281+18]..[323,11281+32])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[323,11281+18]..[323,11281+20])
                                    Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[323,11281+18]..[323,11281+20])
                                  "remove_call" (middle_end/flambda/inlining_cost.ml[323,11281+21]..[323,11281+32])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[323,11281+35]..[323,11281+49])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[323,11281+35]..[323,11281+37])
                                    Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[323,11281+35]..[323,11281+37])
                                  "remove_call" (middle_end/flambda/inlining_cost.ml[323,11281+38]..[323,11281+49])
                            ]
                        "remove_alloc" (middle_end/flambda/inlining_cost.ml[324,11332+4]..[324,11332+16])
                          expression (middle_end/flambda/inlining_cost.ml[324,11332+19]..[324,11332+52])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[324,11332+35]..[324,11332+36])
                              Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[324,11332+35]..[324,11332+36])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[324,11332+19]..[324,11332+34])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[324,11332+19]..[324,11332+21])
                                    Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[324,11332+19]..[324,11332+21])
                                  "remove_alloc" (middle_end/flambda/inlining_cost.ml[324,11332+22]..[324,11332+34])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[324,11332+37]..[324,11332+52])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[324,11332+37]..[324,11332+39])
                                    Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[324,11332+37]..[324,11332+39])
                                  "remove_alloc" (middle_end/flambda/inlining_cost.ml[324,11332+40]..[324,11332+52])
                            ]
                        "remove_prim" (middle_end/flambda/inlining_cost.ml[325,11386+4]..[325,11386+15])
                          expression (middle_end/flambda/inlining_cost.ml[325,11386+18]..[325,11386+49])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[325,11386+33]..[325,11386+34])
                              Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[325,11386+33]..[325,11386+34])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[325,11386+18]..[325,11386+32])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[325,11386+18]..[325,11386+20])
                                    Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[325,11386+18]..[325,11386+20])
                                  "remove_prim" (middle_end/flambda/inlining_cost.ml[325,11386+21]..[325,11386+32])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[325,11386+35]..[325,11386+49])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[325,11386+35]..[325,11386+37])
                                    Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[325,11386+35]..[325,11386+37])
                                  "remove_prim" (middle_end/flambda/inlining_cost.ml[325,11386+38]..[325,11386+49])
                            ]
                        "remove_branch" (middle_end/flambda/inlining_cost.ml[326,11437+4]..[326,11437+17])
                          expression (middle_end/flambda/inlining_cost.ml[326,11437+20]..[326,11437+55])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[326,11437+37]..[326,11437+38])
                              Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[326,11437+37]..[326,11437+38])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[326,11437+20]..[326,11437+36])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[326,11437+20]..[326,11437+22])
                                    Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[326,11437+20]..[326,11437+22])
                                  "remove_branch" (middle_end/flambda/inlining_cost.ml[326,11437+23]..[326,11437+36])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[326,11437+39]..[326,11437+55])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[326,11437+39]..[326,11437+41])
                                    Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[326,11437+39]..[326,11437+41])
                                  "remove_branch" (middle_end/flambda/inlining_cost.ml[326,11437+42]..[326,11437+55])
                            ]
                        "direct_call_of_indirect" (middle_end/flambda/inlining_cost.ml[327,11494+4]..[327,11494+27])
                          expression (middle_end/flambda/inlining_cost.ml[328,11524+6]..[328,11524+61])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[328,11524+33]..[328,11524+34])
                              Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[328,11524+33]..[328,11524+34])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[328,11524+6]..[328,11524+32])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[328,11524+6]..[328,11524+8])
                                    Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[328,11524+6]..[328,11524+8])
                                  "direct_call_of_indirect" (middle_end/flambda/inlining_cost.ml[328,11524+9]..[328,11524+32])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[328,11524+35]..[328,11524+61])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[328,11524+35]..[328,11524+37])
                                    Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[328,11524+35]..[328,11524+37])
                                  "direct_call_of_indirect" (middle_end/flambda/inlining_cost.ml[328,11524+38]..[328,11524+61])
                            ]
                        "requested_inline" (middle_end/flambda/inlining_cost.ml[329,11587+4]..[329,11587+20])
                          expression (middle_end/flambda/inlining_cost.ml[329,11587+23]..[329,11587+64])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[329,11587+43]..[329,11587+44])
                              Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[329,11587+43]..[329,11587+44])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[329,11587+23]..[329,11587+42])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[329,11587+23]..[329,11587+25])
                                    Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[329,11587+23]..[329,11587+25])
                                  "requested_inline" (middle_end/flambda/inlining_cost.ml[329,11587+26]..[329,11587+42])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[329,11587+45]..[329,11587+64])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[329,11587+45]..[329,11587+47])
                                    Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[329,11587+45]..[329,11587+47])
                                  "requested_inline" (middle_end/flambda/inlining_cost.ml[329,11587+48]..[329,11587+64])
                            ]
                      ]
                      None
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[332,11658+2]..[340,12050+3])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[332,11658+6]..[332,11658+9])
                  Ppat_var "-" (middle_end/flambda/inlining_cost.ml[332,11658+6]..[332,11658+9])
                expression (middle_end/flambda/inlining_cost.ml[332,11658+10]..[340,12050+3]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[332,11658+10]..[332,11658+12])
                    Ppat_var "t1" (middle_end/flambda/inlining_cost.ml[332,11658+10]..[332,11658+12])
                  expression (middle_end/flambda/inlining_cost.ml[332,11658+13]..[340,12050+3]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[332,11658+13]..[332,11658+15])
                      Ppat_var "t2" (middle_end/flambda/inlining_cost.ml[332,11658+13]..[332,11658+15])
                    expression (middle_end/flambda/inlining_cost.ml[332,11658+18]..[340,12050+3])
                      Pexp_record
                      [
                        "remove_call" (middle_end/flambda/inlining_cost.ml[333,11678+4]..[333,11678+15])
                          expression (middle_end/flambda/inlining_cost.ml[333,11678+18]..[333,11678+49])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[333,11678+33]..[333,11678+34])
                              Pexp_ident "-" (middle_end/flambda/inlining_cost.ml[333,11678+33]..[333,11678+34])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[333,11678+18]..[333,11678+32])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[333,11678+18]..[333,11678+20])
                                    Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[333,11678+18]..[333,11678+20])
                                  "remove_call" (middle_end/flambda/inlining_cost.ml[333,11678+21]..[333,11678+32])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[333,11678+35]..[333,11678+49])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[333,11678+35]..[333,11678+37])
                                    Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[333,11678+35]..[333,11678+37])
                                  "remove_call" (middle_end/flambda/inlining_cost.ml[333,11678+38]..[333,11678+49])
                            ]
                        "remove_alloc" (middle_end/flambda/inlining_cost.ml[334,11729+4]..[334,11729+16])
                          expression (middle_end/flambda/inlining_cost.ml[334,11729+19]..[334,11729+52])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[334,11729+35]..[334,11729+36])
                              Pexp_ident "-" (middle_end/flambda/inlining_cost.ml[334,11729+35]..[334,11729+36])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[334,11729+19]..[334,11729+34])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[334,11729+19]..[334,11729+21])
                                    Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[334,11729+19]..[334,11729+21])
                                  "remove_alloc" (middle_end/flambda/inlining_cost.ml[334,11729+22]..[334,11729+34])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[334,11729+37]..[334,11729+52])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[334,11729+37]..[334,11729+39])
                                    Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[334,11729+37]..[334,11729+39])
                                  "remove_alloc" (middle_end/flambda/inlining_cost.ml[334,11729+40]..[334,11729+52])
                            ]
                        "remove_prim" (middle_end/flambda/inlining_cost.ml[335,11783+4]..[335,11783+15])
                          expression (middle_end/flambda/inlining_cost.ml[335,11783+18]..[335,11783+49])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[335,11783+33]..[335,11783+34])
                              Pexp_ident "-" (middle_end/flambda/inlining_cost.ml[335,11783+33]..[335,11783+34])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[335,11783+18]..[335,11783+32])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[335,11783+18]..[335,11783+20])
                                    Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[335,11783+18]..[335,11783+20])
                                  "remove_prim" (middle_end/flambda/inlining_cost.ml[335,11783+21]..[335,11783+32])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[335,11783+35]..[335,11783+49])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[335,11783+35]..[335,11783+37])
                                    Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[335,11783+35]..[335,11783+37])
                                  "remove_prim" (middle_end/flambda/inlining_cost.ml[335,11783+38]..[335,11783+49])
                            ]
                        "remove_branch" (middle_end/flambda/inlining_cost.ml[336,11834+4]..[336,11834+17])
                          expression (middle_end/flambda/inlining_cost.ml[336,11834+20]..[336,11834+55])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[336,11834+37]..[336,11834+38])
                              Pexp_ident "-" (middle_end/flambda/inlining_cost.ml[336,11834+37]..[336,11834+38])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[336,11834+20]..[336,11834+36])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[336,11834+20]..[336,11834+22])
                                    Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[336,11834+20]..[336,11834+22])
                                  "remove_branch" (middle_end/flambda/inlining_cost.ml[336,11834+23]..[336,11834+36])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[336,11834+39]..[336,11834+55])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[336,11834+39]..[336,11834+41])
                                    Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[336,11834+39]..[336,11834+41])
                                  "remove_branch" (middle_end/flambda/inlining_cost.ml[336,11834+42]..[336,11834+55])
                            ]
                        "direct_call_of_indirect" (middle_end/flambda/inlining_cost.ml[337,11891+4]..[337,11891+27])
                          expression (middle_end/flambda/inlining_cost.ml[338,11921+6]..[338,11921+61])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[338,11921+33]..[338,11921+34])
                              Pexp_ident "-" (middle_end/flambda/inlining_cost.ml[338,11921+33]..[338,11921+34])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[338,11921+6]..[338,11921+32])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[338,11921+6]..[338,11921+8])
                                    Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[338,11921+6]..[338,11921+8])
                                  "direct_call_of_indirect" (middle_end/flambda/inlining_cost.ml[338,11921+9]..[338,11921+32])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[338,11921+35]..[338,11921+61])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[338,11921+35]..[338,11921+37])
                                    Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[338,11921+35]..[338,11921+37])
                                  "direct_call_of_indirect" (middle_end/flambda/inlining_cost.ml[338,11921+38]..[338,11921+61])
                            ]
                        "requested_inline" (middle_end/flambda/inlining_cost.ml[339,11984+4]..[339,11984+20])
                          expression (middle_end/flambda/inlining_cost.ml[339,11984+23]..[339,11984+64])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[339,11984+43]..[339,11984+44])
                              Pexp_ident "-" (middle_end/flambda/inlining_cost.ml[339,11984+43]..[339,11984+44])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[339,11984+23]..[339,11984+42])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[339,11984+23]..[339,11984+25])
                                    Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[339,11984+23]..[339,11984+25])
                                  "requested_inline" (middle_end/flambda/inlining_cost.ml[339,11984+26]..[339,11984+42])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[339,11984+45]..[339,11984+64])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[339,11984+45]..[339,11984+47])
                                    Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[339,11984+45]..[339,11984+47])
                                  "requested_inline" (middle_end/flambda/inlining_cost.ml[339,11984+48]..[339,11984+64])
                            ]
                      ]
                      None
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[342,12055+2]..[345,12150+30])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[342,12055+6]..[342,12055+9])
                  Ppat_var "max" (middle_end/flambda/inlining_cost.ml[342,12055+6]..[342,12055+9])
                expression (middle_end/flambda/inlining_cost.ml[342,12055+10]..[345,12150+30]) ghost
                  Pexp_fun
                  Labelled "round"
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[342,12055+11]..[342,12055+16])
                    Ppat_var "round" (middle_end/flambda/inlining_cost.ml[342,12055+11]..[342,12055+16])
                  expression (middle_end/flambda/inlining_cost.ml[342,12055+17]..[345,12150+30]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[342,12055+17]..[342,12055+19])
                      Ppat_var "t1" (middle_end/flambda/inlining_cost.ml[342,12055+17]..[342,12055+19])
                    expression (middle_end/flambda/inlining_cost.ml[342,12055+20]..[345,12150+30]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/inlining_cost.ml[342,12055+20]..[342,12055+22])
                        Ppat_var "t2" (middle_end/flambda/inlining_cost.ml[342,12055+20]..[342,12055+22])
                      expression (middle_end/flambda/inlining_cost.ml[343,12080+4]..[345,12150+30])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inlining_cost.ml[343,12080+8]..[343,12080+10])
                              Ppat_var "c1" (middle_end/flambda/inlining_cost.ml[343,12080+8]..[343,12080+10])
                            expression (middle_end/flambda/inlining_cost.ml[343,12080+13]..[343,12080+31])
                              Pexp_apply
                              expression (middle_end/flambda/inlining_cost.ml[343,12080+13]..[343,12080+21])
                                Pexp_ident "evaluate" (middle_end/flambda/inlining_cost.ml[343,12080+13]..[343,12080+21])
                              [
                                <arg>
                                Labelled "round"
                                  expression (middle_end/flambda/inlining_cost.ml[343,12080+23]..[343,12080+28])
                                    Pexp_ident "round" (middle_end/flambda/inlining_cost.ml[343,12080+23]..[343,12080+28])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[343,12080+29]..[343,12080+31])
                                    Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[343,12080+29]..[343,12080+31])
                              ]
                        ]
                        expression (middle_end/flambda/inlining_cost.ml[344,12115+4]..[345,12150+30])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inlining_cost.ml[344,12115+8]..[344,12115+10])
                                Ppat_var "c2" (middle_end/flambda/inlining_cost.ml[344,12115+8]..[344,12115+10])
                              expression (middle_end/flambda/inlining_cost.ml[344,12115+13]..[344,12115+31])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[344,12115+13]..[344,12115+21])
                                  Pexp_ident "evaluate" (middle_end/flambda/inlining_cost.ml[344,12115+13]..[344,12115+21])
                                [
                                  <arg>
                                  Labelled "round"
                                    expression (middle_end/flambda/inlining_cost.ml[344,12115+23]..[344,12115+28])
                                      Pexp_ident "round" (middle_end/flambda/inlining_cost.ml[344,12115+23]..[344,12115+28])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[344,12115+29]..[344,12115+31])
                                      Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[344,12115+29]..[344,12115+31])
                                ]
                          ]
                          expression (middle_end/flambda/inlining_cost.ml[345,12150+4]..[345,12150+30])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/inlining_cost.ml[345,12150+7]..[345,12150+14])
                              Pexp_apply
                              expression (middle_end/flambda/inlining_cost.ml[345,12150+10]..[345,12150+11])
                                Pexp_ident ">" (middle_end/flambda/inlining_cost.ml[345,12150+10]..[345,12150+11])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[345,12150+7]..[345,12150+9])
                                    Pexp_ident "c1" (middle_end/flambda/inlining_cost.ml[345,12150+7]..[345,12150+9])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[345,12150+12]..[345,12150+14])
                                    Pexp_ident "c2" (middle_end/flambda/inlining_cost.ml[345,12150+12]..[345,12150+14])
                              ]
                            expression (middle_end/flambda/inlining_cost.ml[345,12150+20]..[345,12150+22])
                              Pexp_ident "t1" (middle_end/flambda/inlining_cost.ml[345,12150+20]..[345,12150+22])
                            Some
                              expression (middle_end/flambda/inlining_cost.ml[345,12150+28]..[345,12150+30])
                                Pexp_ident "t2" (middle_end/flambda/inlining_cost.ml[345,12150+28]..[345,12150+30])
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[347,12182+2]..[348,12205+30])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[347,12182+6]..[347,12182+14])
                  Ppat_var "add_code" (middle_end/flambda/inlining_cost.ml[347,12182+6]..[347,12182+14])
                expression (middle_end/flambda/inlining_cost.ml[347,12182+15]..[348,12205+30]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[347,12182+15]..[347,12182+18])
                    Ppat_var "lam" (middle_end/flambda/inlining_cost.ml[347,12182+15]..[347,12182+18])
                  expression (middle_end/flambda/inlining_cost.ml[347,12182+19]..[348,12205+30]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[347,12182+19]..[347,12182+20])
                      Ppat_var "b" (middle_end/flambda/inlining_cost.ml[347,12182+19]..[347,12182+20])
                    expression (middle_end/flambda/inlining_cost.ml[348,12205+4]..[348,12205+30])
                      Pexp_apply
                      expression (middle_end/flambda/inlining_cost.ml[348,12205+6]..[348,12205+7])
                        Pexp_ident "-" (middle_end/flambda/inlining_cost.ml[348,12205+6]..[348,12205+7])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[348,12205+4]..[348,12205+5])
                            Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[348,12205+4]..[348,12205+5])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[348,12205+8]..[348,12205+30])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[348,12205+9]..[348,12205+20])
                              Pexp_ident "remove_code" (middle_end/flambda/inlining_cost.ml[348,12205+9]..[348,12205+20])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[348,12205+21]..[348,12205+24])
                                  Pexp_ident "lam" (middle_end/flambda/inlining_cost.ml[348,12205+21]..[348,12205+24])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[348,12205+25]..[348,12205+29])
                                  Pexp_ident "zero" (middle_end/flambda/inlining_cost.ml[348,12205+25]..[348,12205+29])
                            ]
                      ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[350,12237+2]..[351,12266+36])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[350,12237+6]..[350,12237+20])
                  Ppat_var "add_code_named" (middle_end/flambda/inlining_cost.ml[350,12237+6]..[350,12237+20])
                expression (middle_end/flambda/inlining_cost.ml[350,12237+21]..[351,12266+36]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[350,12237+21]..[350,12237+24])
                    Ppat_var "lam" (middle_end/flambda/inlining_cost.ml[350,12237+21]..[350,12237+24])
                  expression (middle_end/flambda/inlining_cost.ml[350,12237+25]..[351,12266+36]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[350,12237+25]..[350,12237+26])
                      Ppat_var "b" (middle_end/flambda/inlining_cost.ml[350,12237+25]..[350,12237+26])
                    expression (middle_end/flambda/inlining_cost.ml[351,12266+4]..[351,12266+36])
                      Pexp_apply
                      expression (middle_end/flambda/inlining_cost.ml[351,12266+6]..[351,12266+7])
                        Pexp_ident "-" (middle_end/flambda/inlining_cost.ml[351,12266+6]..[351,12266+7])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[351,12266+4]..[351,12266+5])
                            Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[351,12266+4]..[351,12266+5])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[351,12266+8]..[351,12266+36])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[351,12266+9]..[351,12266+26])
                              Pexp_ident "remove_code_named" (middle_end/flambda/inlining_cost.ml[351,12266+9]..[351,12266+26])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[351,12266+27]..[351,12266+30])
                                  Pexp_ident "lam" (middle_end/flambda/inlining_cost.ml[351,12266+27]..[351,12266+30])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[351,12266+31]..[351,12266+35])
                                  Pexp_ident "zero" (middle_end/flambda/inlining_cost.ml[351,12266+31]..[351,12266+35])
                            ]
                      ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[353,12304+2]..[354,12334+37])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[353,12304+6]..[353,12304+20])
                  Ppat_var "add_projection" (middle_end/flambda/inlining_cost.ml[353,12304+6]..[353,12304+20])
                expression (middle_end/flambda/inlining_cost.ml[353,12304+21]..[354,12334+37]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[353,12304+21]..[353,12304+25])
                    Ppat_var "proj" (middle_end/flambda/inlining_cost.ml[353,12304+21]..[353,12304+25])
                  expression (middle_end/flambda/inlining_cost.ml[353,12304+26]..[354,12334+37]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[353,12304+26]..[353,12304+27])
                      Ppat_var "b" (middle_end/flambda/inlining_cost.ml[353,12304+26]..[353,12304+27])
                    expression (middle_end/flambda/inlining_cost.ml[354,12334+4]..[354,12334+37])
                      Pexp_apply
                      expression (middle_end/flambda/inlining_cost.ml[354,12334+6]..[354,12334+7])
                        Pexp_ident "-" (middle_end/flambda/inlining_cost.ml[354,12334+6]..[354,12334+7])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[354,12334+4]..[354,12334+5])
                            Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[354,12334+4]..[354,12334+5])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[354,12334+8]..[354,12334+37])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[354,12334+9]..[354,12334+26])
                              Pexp_ident "remove_projection" (middle_end/flambda/inlining_cost.ml[354,12334+9]..[354,12334+26])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[354,12334+27]..[354,12334+31])
                                  Pexp_ident "proj" (middle_end/flambda/inlining_cost.ml[354,12334+27]..[354,12334+31])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[354,12334+32]..[354,12334+36])
                                  Pexp_ident "zero" (middle_end/flambda/inlining_cost.ml[354,12334+32]..[354,12334+36])
                            ]
                      ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[358,12413+2]..[364,12668+5])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[358,12413+6]..[358,12413+19])
                  Ppat_var "benefit_table" (middle_end/flambda/inlining_cost.ml[358,12413+6]..[358,12413+19])
                expression (middle_end/flambda/inlining_cost.ml[359,12435+4]..[364,12668+5])
                  Pexp_construct "::" (middle_end/flambda/inlining_cost.ml[359,12435+6]..[364,12668+5]) ghost
                  Some
                    expression (middle_end/flambda/inlining_cost.ml[359,12435+6]..[364,12668+5]) ghost
                      Pexp_tuple
                      [
                        expression (middle_end/flambda/inlining_cost.ml[359,12435+6]..[359,12435+39])
                          Pexp_tuple
                          [
                            expression (middle_end/flambda/inlining_cost.ml[359,12435+6]..[359,12435+13])
                              Pexp_constant PConst_string("Calls",(middle_end/flambda/inlining_cost.ml[359,12435+7]..[359,12435+12]),None)
                            expression (middle_end/flambda/inlining_cost.ml[359,12435+15]..[359,12435+39])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/inlining_cost.ml[359,12435+20]..[359,12435+21])
                                Ppat_var "b" (middle_end/flambda/inlining_cost.ml[359,12435+20]..[359,12435+21])
                              expression (middle_end/flambda/inlining_cost.ml[359,12435+25]..[359,12435+38])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[359,12435+25]..[359,12435+26])
                                  Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[359,12435+25]..[359,12435+26])
                                "remove_call" (middle_end/flambda/inlining_cost.ml[359,12435+27]..[359,12435+38])
                          ]
                        expression (middle_end/flambda/inlining_cost.ml[360,12476+6]..[364,12668+5]) ghost
                          Pexp_construct "::" (middle_end/flambda/inlining_cost.ml[360,12476+6]..[364,12668+5]) ghost
                          Some
                            expression (middle_end/flambda/inlining_cost.ml[360,12476+6]..[364,12668+5]) ghost
                              Pexp_tuple
                              [
                                expression (middle_end/flambda/inlining_cost.ml[360,12476+6]..[360,12476+41])
                                  Pexp_tuple
                                  [
                                    expression (middle_end/flambda/inlining_cost.ml[360,12476+6]..[360,12476+14])
                                      Pexp_constant PConst_string("Allocs",(middle_end/flambda/inlining_cost.ml[360,12476+7]..[360,12476+13]),None)
                                    expression (middle_end/flambda/inlining_cost.ml[360,12476+16]..[360,12476+41])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/inlining_cost.ml[360,12476+21]..[360,12476+22])
                                        Ppat_var "b" (middle_end/flambda/inlining_cost.ml[360,12476+21]..[360,12476+22])
                                      expression (middle_end/flambda/inlining_cost.ml[360,12476+26]..[360,12476+40])
                                        Pexp_field
                                        expression (middle_end/flambda/inlining_cost.ml[360,12476+26]..[360,12476+27])
                                          Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[360,12476+26]..[360,12476+27])
                                        "remove_alloc" (middle_end/flambda/inlining_cost.ml[360,12476+28]..[360,12476+40])
                                  ]
                                expression (middle_end/flambda/inlining_cost.ml[361,12519+6]..[364,12668+5]) ghost
                                  Pexp_construct "::" (middle_end/flambda/inlining_cost.ml[361,12519+6]..[364,12668+5]) ghost
                                  Some
                                    expression (middle_end/flambda/inlining_cost.ml[361,12519+6]..[364,12668+5]) ghost
                                      Pexp_tuple
                                      [
                                        expression (middle_end/flambda/inlining_cost.ml[361,12519+6]..[361,12519+39])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/inlining_cost.ml[361,12519+6]..[361,12519+13])
                                              Pexp_constant PConst_string("Prims",(middle_end/flambda/inlining_cost.ml[361,12519+7]..[361,12519+12]),None)
                                            expression (middle_end/flambda/inlining_cost.ml[361,12519+15]..[361,12519+39])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/flambda/inlining_cost.ml[361,12519+20]..[361,12519+21])
                                                Ppat_var "b" (middle_end/flambda/inlining_cost.ml[361,12519+20]..[361,12519+21])
                                              expression (middle_end/flambda/inlining_cost.ml[361,12519+25]..[361,12519+38])
                                                Pexp_field
                                                expression (middle_end/flambda/inlining_cost.ml[361,12519+25]..[361,12519+26])
                                                  Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[361,12519+25]..[361,12519+26])
                                                "remove_prim" (middle_end/flambda/inlining_cost.ml[361,12519+27]..[361,12519+38])
                                          ]
                                        expression (middle_end/flambda/inlining_cost.ml[362,12560+6]..[364,12668+5]) ghost
                                          Pexp_construct "::" (middle_end/flambda/inlining_cost.ml[362,12560+6]..[364,12668+5]) ghost
                                          Some
                                            expression (middle_end/flambda/inlining_cost.ml[362,12560+6]..[364,12668+5]) ghost
                                              Pexp_tuple
                                              [
                                                expression (middle_end/flambda/inlining_cost.ml[362,12560+6]..[362,12560+44])
                                                  Pexp_tuple
                                                  [
                                                    expression (middle_end/flambda/inlining_cost.ml[362,12560+6]..[362,12560+16])
                                                      Pexp_constant PConst_string("Branches",(middle_end/flambda/inlining_cost.ml[362,12560+7]..[362,12560+15]),None)
                                                    expression (middle_end/flambda/inlining_cost.ml[362,12560+18]..[362,12560+44])
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (middle_end/flambda/inlining_cost.ml[362,12560+23]..[362,12560+24])
                                                        Ppat_var "b" (middle_end/flambda/inlining_cost.ml[362,12560+23]..[362,12560+24])
                                                      expression (middle_end/flambda/inlining_cost.ml[362,12560+28]..[362,12560+43])
                                                        Pexp_field
                                                        expression (middle_end/flambda/inlining_cost.ml[362,12560+28]..[362,12560+29])
                                                          Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[362,12560+28]..[362,12560+29])
                                                        "remove_branch" (middle_end/flambda/inlining_cost.ml[362,12560+30]..[362,12560+43])
                                                  ]
                                                expression (middle_end/flambda/inlining_cost.ml[363,12606+6]..[364,12668+5]) ghost
                                                  Pexp_construct "::" (middle_end/flambda/inlining_cost.ml[363,12606+6]..[364,12668+5]) ghost
                                                  Some
                                                    expression (middle_end/flambda/inlining_cost.ml[363,12606+6]..[364,12668+5]) ghost
                                                      Pexp_tuple
                                                      [
                                                        expression (middle_end/flambda/inlining_cost.ml[363,12606+6]..[363,12606+60])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/flambda/inlining_cost.ml[363,12606+6]..[363,12606+22])
                                                              Pexp_constant PConst_string("Indirect calls",(middle_end/flambda/inlining_cost.ml[363,12606+7]..[363,12606+21]),None)
                                                            expression (middle_end/flambda/inlining_cost.ml[363,12606+24]..[363,12606+60])
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (middle_end/flambda/inlining_cost.ml[363,12606+29]..[363,12606+30])
                                                                Ppat_var "b" (middle_end/flambda/inlining_cost.ml[363,12606+29]..[363,12606+30])
                                                              expression (middle_end/flambda/inlining_cost.ml[363,12606+34]..[363,12606+59])
                                                                Pexp_field
                                                                expression (middle_end/flambda/inlining_cost.ml[363,12606+34]..[363,12606+35])
                                                                  Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[363,12606+34]..[363,12606+35])
                                                                "direct_call_of_indirect" (middle_end/flambda/inlining_cost.ml[363,12606+36]..[363,12606+59])
                                                          ]
                                                        expression (middle_end/flambda/inlining_cost.ml[364,12668+4]..[364,12668+5]) ghost
                                                          Pexp_construct "[]" (middle_end/flambda/inlining_cost.ml[364,12668+4]..[364,12668+5]) ghost
                                                          None
                                                      ]
                                              ]
                                      ]
                              ]
                      ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[366,12675+2]..[371,12827+7])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[366,12675+6]..[366,12675+20])
                  Ppat_var "benefits_table" (middle_end/flambda/inlining_cost.ml[366,12675+6]..[366,12675+20])
                expression (middle_end/flambda/inlining_cost.ml[367,12698+4]..[371,12827+7])
                  Pexp_lazy
                  expression (middle_end/flambda/inlining_cost.ml[367,12698+9]..[371,12827+7])
                    Pexp_apply
                    expression (middle_end/flambda/inlining_cost.ml[368,12713+6]..[368,12713+14])
                      Pexp_ident "List.map" (middle_end/flambda/inlining_cost.ml[368,12713+6]..[368,12713+14])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[369,12728+8]..[369,12728+76])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/inlining_cost.ml[369,12728+13]..[369,12728+31])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/inlining_cost.ml[369,12728+14]..[369,12728+20])
                                Ppat_var "header" (middle_end/flambda/inlining_cost.ml[369,12728+14]..[369,12728+20])
                              pattern (middle_end/flambda/inlining_cost.ml[369,12728+22]..[369,12728+30])
                                Ppat_var "accessor" (middle_end/flambda/inlining_cost.ml[369,12728+22]..[369,12728+30])
                            ]
                          expression (middle_end/flambda/inlining_cost.ml[369,12728+35]..[369,12728+75])
                            Pexp_tuple
                            [
                              expression (middle_end/flambda/inlining_cost.ml[369,12728+36]..[369,12728+42])
                                Pexp_ident "header" (middle_end/flambda/inlining_cost.ml[369,12728+36]..[369,12728+42])
                              expression (middle_end/flambda/inlining_cost.ml[369,12728+44]..[369,12728+52])
                                Pexp_ident "accessor" (middle_end/flambda/inlining_cost.ml[369,12728+44]..[369,12728+52])
                              expression (middle_end/flambda/inlining_cost.ml[369,12728+54]..[369,12728+74])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[369,12728+54]..[369,12728+67])
                                  Pexp_ident "String.length" (middle_end/flambda/inlining_cost.ml[369,12728+54]..[369,12728+67])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[369,12728+68]..[369,12728+74])
                                      Pexp_ident "header" (middle_end/flambda/inlining_cost.ml[369,12728+68]..[369,12728+74])
                                ]
                            ]
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[370,12805+8]..[370,12805+21])
                          Pexp_ident "benefit_table" (middle_end/flambda/inlining_cost.ml[370,12805+8]..[370,12805+21])
                    ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[373,12836+2]..[380,13070+7])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[373,12836+6]..[373,12836+16])
                  Ppat_var "table_line" (middle_end/flambda/inlining_cost.ml[373,12836+6]..[373,12836+16])
                expression (middle_end/flambda/inlining_cost.ml[374,12855+4]..[380,13070+7])
                  Pexp_lazy
                  expression (middle_end/flambda/inlining_cost.ml[374,12855+9]..[380,13070+7])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/inlining_cost.ml[375,12870+10]..[375,12870+24])
                          Ppat_var "benefits_table" (middle_end/flambda/inlining_cost.ml[375,12870+10]..[375,12870+24])
                        expression (middle_end/flambda/inlining_cost.ml[375,12870+27]..[375,12870+52])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[375,12870+27]..[375,12870+37])
                            Pexp_ident "Lazy.force" (middle_end/flambda/inlining_cost.ml[375,12870+27]..[375,12870+37])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[375,12870+38]..[375,12870+52])
                                Pexp_ident "benefits_table" (middle_end/flambda/inlining_cost.ml[375,12870+38]..[375,12870+52])
                          ]
                    ]
                    expression (middle_end/flambda/inlining_cost.ml[376,12926+6]..[379,13023+46])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/inlining_cost.ml[376,12926+10]..[376,12926+16])
                            Ppat_var "dashes" (middle_end/flambda/inlining_cost.ml[376,12926+10]..[376,12926+16])
                          expression (middle_end/flambda/inlining_cost.ml[377,12945+8]..[377,12945+68])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[377,12945+8]..[377,12945+16])
                              Pexp_ident "List.map" (middle_end/flambda/inlining_cost.ml[377,12945+8]..[377,12945+16])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[377,12945+17]..[377,12945+53])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/inlining_cost.ml[377,12945+22]..[377,12945+31])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inlining_cost.ml[377,12945+23]..[377,12945+24])
                                        Ppat_any
                                      pattern (middle_end/flambda/inlining_cost.ml[377,12945+26]..[377,12945+27])
                                        Ppat_any
                                      pattern (middle_end/flambda/inlining_cost.ml[377,12945+29]..[377,12945+30])
                                        Ppat_var "n" (middle_end/flambda/inlining_cost.ml[377,12945+29]..[377,12945+30])
                                    ]
                                  expression (middle_end/flambda/inlining_cost.ml[377,12945+35]..[377,12945+52])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[377,12945+35]..[377,12945+46])
                                      Pexp_ident "String.make" (middle_end/flambda/inlining_cost.ml[377,12945+35]..[377,12945+46])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[377,12945+47]..[377,12945+48])
                                          Pexp_ident "n" (middle_end/flambda/inlining_cost.ml[377,12945+47]..[377,12945+48])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[377,12945+49]..[377,12945+52])
                                          Pexp_constant PConst_char 2d
                                    ]
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[377,12945+54]..[377,12945+68])
                                  Pexp_ident "benefits_table" (middle_end/flambda/inlining_cost.ml[377,12945+54]..[377,12945+68])
                            ]
                      ]
                      expression (middle_end/flambda/inlining_cost.ml[379,13023+6]..[379,13023+46])
                        Pexp_apply
                        expression (middle_end/flambda/inlining_cost.ml[379,13023+11]..[379,13023+12])
                          Pexp_ident "^" (middle_end/flambda/inlining_cost.ml[379,13023+11]..[379,13023+12])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inlining_cost.ml[379,13023+6]..[379,13023+10])
                              Pexp_constant PConst_string("|-",(middle_end/flambda/inlining_cost.ml[379,13023+7]..[379,13023+9]),None)
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inlining_cost.ml[379,13023+13]..[379,13023+46])
                              Pexp_apply
                              expression (middle_end/flambda/inlining_cost.ml[379,13023+40]..[379,13023+41])
                                Pexp_ident "^" (middle_end/flambda/inlining_cost.ml[379,13023+40]..[379,13023+41])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[379,13023+13]..[379,13023+39])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[379,13023+13]..[379,13023+26])
                                      Pexp_ident "String.concat" (middle_end/flambda/inlining_cost.ml[379,13023+13]..[379,13023+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[379,13023+27]..[379,13023+32])
                                          Pexp_constant PConst_string("-+-",(middle_end/flambda/inlining_cost.ml[379,13023+28]..[379,13023+31]),None)
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[379,13023+33]..[379,13023+39])
                                          Pexp_ident "dashes" (middle_end/flambda/inlining_cost.ml[379,13023+33]..[379,13023+39])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[379,13023+42]..[379,13023+46])
                                    Pexp_constant PConst_string("-|",(middle_end/flambda/inlining_cost.ml[379,13023+43]..[379,13023+45]),None)
                              ]
                        ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[382,13079+2]..[387,13294+7])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[382,13079+6]..[382,13079+19])
                  Ppat_var "table_headers" (middle_end/flambda/inlining_cost.ml[382,13079+6]..[382,13079+19])
                expression (middle_end/flambda/inlining_cost.ml[383,13101+4]..[387,13294+7])
                  Pexp_lazy
                  expression (middle_end/flambda/inlining_cost.ml[383,13101+9]..[387,13294+7])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/inlining_cost.ml[384,13116+10]..[384,13116+24])
                          Ppat_var "benefits_table" (middle_end/flambda/inlining_cost.ml[384,13116+10]..[384,13116+24])
                        expression (middle_end/flambda/inlining_cost.ml[384,13116+27]..[384,13116+52])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[384,13116+27]..[384,13116+37])
                            Pexp_ident "Lazy.force" (middle_end/flambda/inlining_cost.ml[384,13116+27]..[384,13116+37])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[384,13116+38]..[384,13116+52])
                                Pexp_ident "benefits_table" (middle_end/flambda/inlining_cost.ml[384,13116+38]..[384,13116+52])
                          ]
                    ]
                    expression (middle_end/flambda/inlining_cost.ml[385,13172+6]..[386,13246+47])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/inlining_cost.ml[385,13172+10]..[385,13172+17])
                            Ppat_var "headers" (middle_end/flambda/inlining_cost.ml[385,13172+10]..[385,13172+17])
                          expression (middle_end/flambda/inlining_cost.ml[385,13172+20]..[385,13172+70])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[385,13172+20]..[385,13172+28])
                              Pexp_ident "List.map" (middle_end/flambda/inlining_cost.ml[385,13172+20]..[385,13172+28])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[385,13172+29]..[385,13172+55])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (middle_end/flambda/inlining_cost.ml[385,13172+34]..[385,13172+46])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/inlining_cost.ml[385,13172+35]..[385,13172+39])
                                        Ppat_var "head" (middle_end/flambda/inlining_cost.ml[385,13172+35]..[385,13172+39])
                                      pattern (middle_end/flambda/inlining_cost.ml[385,13172+41]..[385,13172+42])
                                        Ppat_any
                                      pattern (middle_end/flambda/inlining_cost.ml[385,13172+44]..[385,13172+45])
                                        Ppat_any
                                    ]
                                  expression (middle_end/flambda/inlining_cost.ml[385,13172+50]..[385,13172+54])
                                    Pexp_ident "head" (middle_end/flambda/inlining_cost.ml[385,13172+50]..[385,13172+54])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[385,13172+56]..[385,13172+70])
                                  Pexp_ident "benefits_table" (middle_end/flambda/inlining_cost.ml[385,13172+56]..[385,13172+70])
                            ]
                      ]
                      expression (middle_end/flambda/inlining_cost.ml[386,13246+6]..[386,13246+47])
                        Pexp_apply
                        expression (middle_end/flambda/inlining_cost.ml[386,13246+11]..[386,13246+12])
                          Pexp_ident "^" (middle_end/flambda/inlining_cost.ml[386,13246+11]..[386,13246+12])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inlining_cost.ml[386,13246+6]..[386,13246+10])
                              Pexp_constant PConst_string("| ",(middle_end/flambda/inlining_cost.ml[386,13246+7]..[386,13246+9]),None)
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inlining_cost.ml[386,13246+13]..[386,13246+47])
                              Pexp_apply
                              expression (middle_end/flambda/inlining_cost.ml[386,13246+41]..[386,13246+42])
                                Pexp_ident "^" (middle_end/flambda/inlining_cost.ml[386,13246+41]..[386,13246+42])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[386,13246+13]..[386,13246+40])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[386,13246+13]..[386,13246+26])
                                      Pexp_ident "String.concat" (middle_end/flambda/inlining_cost.ml[386,13246+13]..[386,13246+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[386,13246+27]..[386,13246+32])
                                          Pexp_constant PConst_string(" | ",(middle_end/flambda/inlining_cost.ml[386,13246+28]..[386,13246+31]),None)
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[386,13246+33]..[386,13246+40])
                                          Pexp_ident "headers" (middle_end/flambda/inlining_cost.ml[386,13246+33]..[386,13246+40])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[386,13246+43]..[386,13246+47])
                                    Pexp_constant PConst_string(" |",(middle_end/flambda/inlining_cost.ml[386,13246+44]..[386,13246+46]),None)
                              ]
                        ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[389,13303+2]..[395,13519+40])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[389,13303+6]..[389,13303+24])
                  Ppat_var "print_table_values" (middle_end/flambda/inlining_cost.ml[389,13303+6]..[389,13303+24])
                expression (middle_end/flambda/inlining_cost.ml[389,13303+25]..[395,13519+40]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[389,13303+25]..[389,13303+28])
                    Ppat_var "ppf" (middle_end/flambda/inlining_cost.ml[389,13303+25]..[389,13303+28])
                  expression (middle_end/flambda/inlining_cost.ml[389,13303+29]..[395,13519+40]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[389,13303+29]..[389,13303+30])
                      Ppat_var "b" (middle_end/flambda/inlining_cost.ml[389,13303+29]..[389,13303+30])
                    expression (middle_end/flambda/inlining_cost.ml[390,13336+4]..[395,13519+40])
                      Pexp_let Rec
                      [
                        <def>
                          pattern (middle_end/flambda/inlining_cost.ml[390,13336+12]..[390,13336+16])
                            Ppat_var "loop" (middle_end/flambda/inlining_cost.ml[390,13336+12]..[390,13336+16])
                          expression (middle_end/flambda/inlining_cost.ml[390,13336+17]..[393,13445+66]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/inlining_cost.ml[390,13336+17]..[390,13336+20])
                              Ppat_var "ppf" (middle_end/flambda/inlining_cost.ml[390,13336+17]..[390,13336+20])
                            expression (middle_end/flambda/inlining_cost.ml[390,13336+23]..[393,13445+66])
                              Pexp_function
                              [
                                <case>
                                  pattern (middle_end/flambda/inlining_cost.ml[391,13368+8]..[391,13368+10])
                                    Ppat_construct "[]" (middle_end/flambda/inlining_cost.ml[391,13368+8]..[391,13368+10])
                                    None
                                  expression (middle_end/flambda/inlining_cost.ml[391,13368+14]..[391,13368+36])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[391,13368+14]..[391,13368+28])
                                      Pexp_ident "Format.fprintf" (middle_end/flambda/inlining_cost.ml[391,13368+14]..[391,13368+28])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[391,13368+29]..[391,13368+32])
                                          Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[391,13368+29]..[391,13368+32])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[391,13368+33]..[391,13368+36])
                                          Pexp_constant PConst_string("|",(middle_end/flambda/inlining_cost.ml[391,13368+34]..[391,13368+35]),None)
                                    ]
                                <case>
                                  pattern (middle_end/flambda/inlining_cost.ml[392,13405+8]..[392,13405+36])
                                    Ppat_construct "::" (middle_end/flambda/inlining_cost.ml[392,13405+29]..[392,13405+31])
                                    Some
                                      []
                                      pattern (middle_end/flambda/inlining_cost.ml[392,13405+8]..[392,13405+36]) ghost
                                        Ppat_tuple
                                        [
                                          pattern (middle_end/flambda/inlining_cost.ml[392,13405+8]..[392,13405+28])
                                            Ppat_tuple
                                            [
                                              pattern (middle_end/flambda/inlining_cost.ml[392,13405+9]..[392,13405+10])
                                                Ppat_any
                                              pattern (middle_end/flambda/inlining_cost.ml[392,13405+12]..[392,13405+20])
                                                Ppat_var "accessor" (middle_end/flambda/inlining_cost.ml[392,13405+12]..[392,13405+20])
                                              pattern (middle_end/flambda/inlining_cost.ml[392,13405+22]..[392,13405+27])
                                                Ppat_var "width" (middle_end/flambda/inlining_cost.ml[392,13405+22]..[392,13405+27])
                                            ]
                                          pattern (middle_end/flambda/inlining_cost.ml[392,13405+32]..[392,13405+36])
                                            Ppat_var "rest" (middle_end/flambda/inlining_cost.ml[392,13405+32]..[392,13405+36])
                                        ]
                                  expression (middle_end/flambda/inlining_cost.ml[393,13445+8]..[393,13445+66])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[393,13445+8]..[393,13445+22])
                                      Pexp_ident "Format.fprintf" (middle_end/flambda/inlining_cost.ml[393,13445+8]..[393,13445+22])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[393,13445+23]..[393,13445+26])
                                          Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[393,13445+23]..[393,13445+26])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[393,13445+27]..[393,13445+37])
                                          Pexp_constant PConst_string("| %*d %a",(middle_end/flambda/inlining_cost.ml[393,13445+28]..[393,13445+36]),None)
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[393,13445+38]..[393,13445+43])
                                          Pexp_ident "width" (middle_end/flambda/inlining_cost.ml[393,13445+38]..[393,13445+43])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[393,13445+44]..[393,13445+56])
                                          Pexp_apply
                                          expression (middle_end/flambda/inlining_cost.ml[393,13445+45]..[393,13445+53])
                                            Pexp_ident "accessor" (middle_end/flambda/inlining_cost.ml[393,13445+45]..[393,13445+53])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[393,13445+54]..[393,13445+55])
                                                Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[393,13445+54]..[393,13445+55])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[393,13445+57]..[393,13445+61])
                                          Pexp_ident "loop" (middle_end/flambda/inlining_cost.ml[393,13445+57]..[393,13445+61])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[393,13445+62]..[393,13445+66])
                                          Pexp_ident "rest" (middle_end/flambda/inlining_cost.ml[393,13445+62]..[393,13445+66])
                                    ]
                              ]
                      ]
                      expression (middle_end/flambda/inlining_cost.ml[395,13519+4]..[395,13519+40])
                        Pexp_apply
                        expression (middle_end/flambda/inlining_cost.ml[395,13519+4]..[395,13519+8])
                          Pexp_ident "loop" (middle_end/flambda/inlining_cost.ml[395,13519+4]..[395,13519+8])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inlining_cost.ml[395,13519+9]..[395,13519+12])
                              Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[395,13519+9]..[395,13519+12])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inlining_cost.ml[395,13519+13]..[395,13519+40])
                              Pexp_apply
                              expression (middle_end/flambda/inlining_cost.ml[395,13519+14]..[395,13519+24])
                                Pexp_ident "Lazy.force" (middle_end/flambda/inlining_cost.ml[395,13519+14]..[395,13519+24])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[395,13519+25]..[395,13519+39])
                                    Pexp_ident "benefits_table" (middle_end/flambda/inlining_cost.ml[395,13519+25]..[395,13519+39])
                              ]
                        ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[397,13561+2]..[404,13846+16])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[397,13561+6]..[397,13561+17])
                  Ppat_var "print_table" (middle_end/flambda/inlining_cost.ml[397,13561+6]..[397,13561+17])
                expression (middle_end/flambda/inlining_cost.ml[397,13561+18]..[404,13846+16]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[397,13561+18]..[397,13561+21])
                    Ppat_var "ppf" (middle_end/flambda/inlining_cost.ml[397,13561+18]..[397,13561+21])
                  expression (middle_end/flambda/inlining_cost.ml[397,13561+22]..[404,13846+16]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[397,13561+22]..[397,13561+23])
                      Ppat_var "b" (middle_end/flambda/inlining_cost.ml[397,13561+22]..[397,13561+23])
                    expression (middle_end/flambda/inlining_cost.ml[398,13587+4]..[404,13846+16])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/inlining_cost.ml[398,13587+8]..[398,13587+18])
                            Ppat_var "table_line" (middle_end/flambda/inlining_cost.ml[398,13587+8]..[398,13587+18])
                          expression (middle_end/flambda/inlining_cost.ml[398,13587+21]..[398,13587+42])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[398,13587+21]..[398,13587+31])
                              Pexp_ident "Lazy.force" (middle_end/flambda/inlining_cost.ml[398,13587+21]..[398,13587+31])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[398,13587+32]..[398,13587+42])
                                  Pexp_ident "table_line" (middle_end/flambda/inlining_cost.ml[398,13587+32]..[398,13587+42])
                            ]
                      ]
                      expression (middle_end/flambda/inlining_cost.ml[399,13633+4]..[404,13846+16])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inlining_cost.ml[399,13633+8]..[399,13633+21])
                              Ppat_var "table_headers" (middle_end/flambda/inlining_cost.ml[399,13633+8]..[399,13633+21])
                            expression (middle_end/flambda/inlining_cost.ml[399,13633+24]..[399,13633+48])
                              Pexp_apply
                              expression (middle_end/flambda/inlining_cost.ml[399,13633+24]..[399,13633+34])
                                Pexp_ident "Lazy.force" (middle_end/flambda/inlining_cost.ml[399,13633+24]..[399,13633+34])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[399,13633+35]..[399,13633+48])
                                    Pexp_ident "table_headers" (middle_end/flambda/inlining_cost.ml[399,13633+35]..[399,13633+48])
                              ]
                        ]
                        expression (middle_end/flambda/inlining_cost.ml[400,13685+4]..[404,13846+16])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[400,13685+4]..[400,13685+18])
                            Pexp_ident "Format.fprintf" (middle_end/flambda/inlining_cost.ml[400,13685+4]..[400,13685+18])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[400,13685+19]..[400,13685+22])
                                Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[400,13685+19]..[400,13685+22])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[401,13708+6]..[401,13708+68])
                                Pexp_constant PConst_string("@[<v>@[<h>%s@]@;@[<h>%s@]@;@[<h>%s@]@;@[<h>%a@]@;@[<h>%s@]@]",(middle_end/flambda/inlining_cost.ml[401,13708+7]..[401,13708+67]),None)
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[402,13777+6]..[402,13777+16])
                                Pexp_ident "table_line" (middle_end/flambda/inlining_cost.ml[402,13777+6]..[402,13777+16])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[402,13777+17]..[402,13777+30])
                                Pexp_ident "table_headers" (middle_end/flambda/inlining_cost.ml[402,13777+17]..[402,13777+30])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[402,13777+31]..[402,13777+41])
                                Pexp_ident "table_line" (middle_end/flambda/inlining_cost.ml[402,13777+31]..[402,13777+41])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[403,13819+6]..[403,13819+24])
                                Pexp_ident "print_table_values" (middle_end/flambda/inlining_cost.ml[403,13819+6]..[403,13819+24])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[403,13819+25]..[403,13819+26])
                                Pexp_ident "b" (middle_end/flambda/inlining_cost.ml[403,13819+25]..[403,13819+26])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[404,13846+6]..[404,13846+16])
                                Pexp_ident "table_line" (middle_end/flambda/inlining_cost.ml[404,13846+6]..[404,13846+16])
                          ]
            ]
        ]
  structure_item (middle_end/flambda/inlining_cost.ml[407,13868+0]..[588,20451+3])
    Pstr_module
    "Whether_sufficient_benefit" (middle_end/flambda/inlining_cost.ml[407,13868+7]..[407,13868+33])
      module_expr (middle_end/flambda/inlining_cost.ml[407,13868+36]..[588,20451+3])
        Pmod_structure
        [
          structure_item (middle_end/flambda/inlining_cost.ml[408,13911+2]..[418,14126+3])
            Pstr_type Rec
            [
              type_declaration "t" (middle_end/flambda/inlining_cost.ml[408,13911+7]..[408,13911+8]) (middle_end/flambda/inlining_cost.ml[408,13911+2]..[418,14126+3])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_record
                    [
                      (middle_end/flambda/inlining_cost.ml[409,13924+4]..[409,13924+16])
                        Immutable
                        "round" (middle_end/flambda/inlining_cost.ml[409,13924+4]..[409,13924+9])                        core_type (middle_end/flambda/inlining_cost.ml[409,13924+12]..[409,13924+15])
                          Ptyp_constr "int" (middle_end/flambda/inlining_cost.ml[409,13924+12]..[409,13924+15])
                          []
                      (middle_end/flambda/inlining_cost.ml[410,13941+4]..[410,13941+24])
                        Immutable
                        "benefit" (middle_end/flambda/inlining_cost.ml[410,13941+4]..[410,13941+11])                        core_type (middle_end/flambda/inlining_cost.ml[410,13941+14]..[410,13941+23])
                          Ptyp_constr "Benefit.t" (middle_end/flambda/inlining_cost.ml[410,13941+14]..[410,13941+23])
                          []
                      (middle_end/flambda/inlining_cost.ml[411,13966+4]..[411,13966+20])
                        Immutable
                        "toplevel" (middle_end/flambda/inlining_cost.ml[411,13966+4]..[411,13966+12])                        core_type (middle_end/flambda/inlining_cost.ml[411,13966+15]..[411,13966+19])
                          Ptyp_constr "bool" (middle_end/flambda/inlining_cost.ml[411,13966+15]..[411,13966+19])
                          []
                      (middle_end/flambda/inlining_cost.ml[412,13987+4]..[412,13987+23])
                        Immutable
                        "branch_depth" (middle_end/flambda/inlining_cost.ml[412,13987+4]..[412,13987+16])                        core_type (middle_end/flambda/inlining_cost.ml[412,13987+19]..[412,13987+22])
                          Ptyp_constr "int" (middle_end/flambda/inlining_cost.ml[412,13987+19]..[412,13987+22])
                          []
                      (middle_end/flambda/inlining_cost.ml[413,14011+4]..[413,14011+19])
                        Immutable
                        "lifting" (middle_end/flambda/inlining_cost.ml[413,14011+4]..[413,14011+11])                        core_type (middle_end/flambda/inlining_cost.ml[413,14011+14]..[413,14011+18])
                          Ptyp_constr "bool" (middle_end/flambda/inlining_cost.ml[413,14011+14]..[413,14011+18])
                          []
                      (middle_end/flambda/inlining_cost.ml[414,14031+4]..[414,14031+24])
                        Immutable
                        "original_size" (middle_end/flambda/inlining_cost.ml[414,14031+4]..[414,14031+17])                        core_type (middle_end/flambda/inlining_cost.ml[414,14031+20]..[414,14031+23])
                          Ptyp_constr "int" (middle_end/flambda/inlining_cost.ml[414,14031+20]..[414,14031+23])
                          []
                      (middle_end/flambda/inlining_cost.ml[415,14056+4]..[415,14056+19])
                        Immutable
                        "new_size" (middle_end/flambda/inlining_cost.ml[415,14056+4]..[415,14056+12])                        core_type (middle_end/flambda/inlining_cost.ml[415,14056+15]..[415,14056+18])
                          Ptyp_constr "int" (middle_end/flambda/inlining_cost.ml[415,14056+15]..[415,14056+18])
                          []
                      (middle_end/flambda/inlining_cost.ml[416,14076+4]..[416,14076+28])
                        Immutable
                        "evaluated_benefit" (middle_end/flambda/inlining_cost.ml[416,14076+4]..[416,14076+21])                        core_type (middle_end/flambda/inlining_cost.ml[416,14076+24]..[416,14076+27])
                          Ptyp_constr "int" (middle_end/flambda/inlining_cost.ml[416,14076+24]..[416,14076+27])
                          []
                      (middle_end/flambda/inlining_cost.ml[417,14105+4]..[417,14105+20])
                        Immutable
                        "estimate" (middle_end/flambda/inlining_cost.ml[417,14105+4]..[417,14105+12])                        core_type (middle_end/flambda/inlining_cost.ml[417,14105+15]..[417,14105+19])
                          Ptyp_constr "bool" (middle_end/flambda/inlining_cost.ml[417,14105+15]..[417,14105+19])
                          []
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[420,14131+2]..[427,14454+5])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[420,14131+6]..[420,14131+12])
                  Ppat_var "create" (middle_end/flambda/inlining_cost.ml[420,14131+6]..[420,14131+12])
                expression (middle_end/flambda/inlining_cost.ml[420,14131+13]..[427,14454+5]) ghost
                  Pexp_fun
                  Labelled "original"
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[420,14131+14]..[420,14131+22])
                    Ppat_var "original" (middle_end/flambda/inlining_cost.ml[420,14131+14]..[420,14131+22])
                  expression (middle_end/flambda/inlining_cost.ml[420,14131+23]..[427,14454+5]) ghost
                    Pexp_fun
                    Labelled "toplevel"
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[420,14131+24]..[420,14131+32])
                      Ppat_var "toplevel" (middle_end/flambda/inlining_cost.ml[420,14131+24]..[420,14131+32])
                    expression (middle_end/flambda/inlining_cost.ml[420,14131+33]..[427,14454+5]) ghost
                      Pexp_fun
                      Labelled "branch_depth"
                      None
                      pattern (middle_end/flambda/inlining_cost.ml[420,14131+34]..[420,14131+46])
                        Ppat_var "branch_depth" (middle_end/flambda/inlining_cost.ml[420,14131+34]..[420,14131+46])
                      expression (middle_end/flambda/inlining_cost.ml[420,14131+47]..[427,14454+5]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/inlining_cost.ml[420,14131+47]..[420,14131+50])
                          Ppat_var "lam" (middle_end/flambda/inlining_cost.ml[420,14131+47]..[420,14131+50])
                        expression (middle_end/flambda/inlining_cost.ml[420,14131+51]..[427,14454+5]) ghost
                          Pexp_fun
                          Labelled "benefit"
                          None
                          pattern (middle_end/flambda/inlining_cost.ml[420,14131+52]..[420,14131+59])
                            Ppat_var "benefit" (middle_end/flambda/inlining_cost.ml[420,14131+52]..[420,14131+59])
                          expression (middle_end/flambda/inlining_cost.ml[420,14131+60]..[427,14454+5]) ghost
                            Pexp_fun
                            Labelled "lifting"
                            None
                            pattern (middle_end/flambda/inlining_cost.ml[420,14131+61]..[420,14131+68])
                              Ppat_var "lifting" (middle_end/flambda/inlining_cost.ml[420,14131+61]..[420,14131+68])
                            expression (middle_end/flambda/inlining_cost.ml[420,14131+69]..[427,14454+5]) ghost
                              Pexp_fun
                              Labelled "round"
                              None
                              pattern (middle_end/flambda/inlining_cost.ml[420,14131+70]..[420,14131+75])
                                Ppat_var "round" (middle_end/flambda/inlining_cost.ml[420,14131+70]..[420,14131+75])
                              expression (middle_end/flambda/inlining_cost.ml[421,14209+4]..[427,14454+5])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inlining_cost.ml[421,14209+8]..[421,14209+25])
                                      Ppat_var "evaluated_benefit" (middle_end/flambda/inlining_cost.ml[421,14209+8]..[421,14209+25])
                                    expression (middle_end/flambda/inlining_cost.ml[421,14209+28]..[421,14209+59])
                                      Pexp_apply
                                      expression (middle_end/flambda/inlining_cost.ml[421,14209+28]..[421,14209+44])
                                        Pexp_ident "Benefit.evaluate" (middle_end/flambda/inlining_cost.ml[421,14209+28]..[421,14209+44])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[421,14209+45]..[421,14209+52])
                                            Pexp_ident "benefit" (middle_end/flambda/inlining_cost.ml[421,14209+45]..[421,14209+52])
                                        <arg>
                                        Labelled "round"
                                          expression (middle_end/flambda/inlining_cost.ml[421,14209+54]..[421,14209+59])
                                            Pexp_ident "round" (middle_end/flambda/inlining_cost.ml[421,14209+54]..[421,14209+59])
                                      ]
                                ]
                                expression (middle_end/flambda/inlining_cost.ml[422,14272+4]..[427,14454+5])
                                  Pexp_record
                                  [
                                    "round" (middle_end/flambda/inlining_cost.ml[422,14272+6]..[422,14272+11]) ghost
                                      expression (middle_end/flambda/inlining_cost.ml[422,14272+6]..[422,14272+11])
                                        Pexp_ident "round" (middle_end/flambda/inlining_cost.ml[422,14272+6]..[422,14272+11])
                                    "benefit" (middle_end/flambda/inlining_cost.ml[422,14272+13]..[422,14272+20]) ghost
                                      expression (middle_end/flambda/inlining_cost.ml[422,14272+13]..[422,14272+20])
                                        Pexp_ident "benefit" (middle_end/flambda/inlining_cost.ml[422,14272+13]..[422,14272+20])
                                    "toplevel" (middle_end/flambda/inlining_cost.ml[422,14272+22]..[422,14272+30]) ghost
                                      expression (middle_end/flambda/inlining_cost.ml[422,14272+22]..[422,14272+30])
                                        Pexp_ident "toplevel" (middle_end/flambda/inlining_cost.ml[422,14272+22]..[422,14272+30])
                                    "branch_depth" (middle_end/flambda/inlining_cost.ml[422,14272+32]..[422,14272+44]) ghost
                                      expression (middle_end/flambda/inlining_cost.ml[422,14272+32]..[422,14272+44])
                                        Pexp_ident "branch_depth" (middle_end/flambda/inlining_cost.ml[422,14272+32]..[422,14272+44])
                                    "lifting" (middle_end/flambda/inlining_cost.ml[422,14272+46]..[422,14272+53]) ghost
                                      expression (middle_end/flambda/inlining_cost.ml[422,14272+46]..[422,14272+53])
                                        Pexp_ident "lifting" (middle_end/flambda/inlining_cost.ml[422,14272+46]..[422,14272+53])
                                    "original_size" (middle_end/flambda/inlining_cost.ml[423,14327+6]..[423,14327+19])
                                      expression (middle_end/flambda/inlining_cost.ml[423,14327+22]..[423,14327+42])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[423,14327+22]..[423,14327+33])
                                          Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[423,14327+22]..[423,14327+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[423,14327+34]..[423,14327+42])
                                              Pexp_ident "original" (middle_end/flambda/inlining_cost.ml[423,14327+34]..[423,14327+42])
                                        ]
                                    "new_size" (middle_end/flambda/inlining_cost.ml[424,14371+6]..[424,14371+14])
                                      expression (middle_end/flambda/inlining_cost.ml[424,14371+17]..[424,14371+32])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[424,14371+17]..[424,14371+28])
                                          Pexp_ident "lambda_size" (middle_end/flambda/inlining_cost.ml[424,14371+17]..[424,14371+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[424,14371+29]..[424,14371+32])
                                              Pexp_ident "lam" (middle_end/flambda/inlining_cost.ml[424,14371+29]..[424,14371+32])
                                        ]
                                    "evaluated_benefit" (middle_end/flambda/inlining_cost.ml[425,14405+6]..[425,14405+23]) ghost
                                      expression (middle_end/flambda/inlining_cost.ml[425,14405+6]..[425,14405+23])
                                        Pexp_ident "evaluated_benefit" (middle_end/flambda/inlining_cost.ml[425,14405+6]..[425,14405+23])
                                    "estimate" (middle_end/flambda/inlining_cost.ml[426,14430+6]..[426,14430+14])
                                      expression (middle_end/flambda/inlining_cost.ml[426,14430+17]..[426,14430+22])
                                        Pexp_construct "false" (middle_end/flambda/inlining_cost.ml[426,14430+17]..[426,14430+22])
                                        None
                                  ]
                                  None
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[429,14461+2]..[434,14752+5])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[429,14461+6]..[429,14461+21])
                  Ppat_var "create_estimate" (middle_end/flambda/inlining_cost.ml[429,14461+6]..[429,14461+21])
                expression (middle_end/flambda/inlining_cost.ml[429,14461+22]..[434,14752+5]) ghost
                  Pexp_fun
                  Labelled "original_size"
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[429,14461+23]..[429,14461+36])
                    Ppat_var "original_size" (middle_end/flambda/inlining_cost.ml[429,14461+23]..[429,14461+36])
                  expression (middle_end/flambda/inlining_cost.ml[429,14461+37]..[434,14752+5]) ghost
                    Pexp_fun
                    Labelled "toplevel"
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[429,14461+38]..[429,14461+46])
                      Ppat_var "toplevel" (middle_end/flambda/inlining_cost.ml[429,14461+38]..[429,14461+46])
                    expression (middle_end/flambda/inlining_cost.ml[429,14461+47]..[434,14752+5]) ghost
                      Pexp_fun
                      Labelled "branch_depth"
                      None
                      pattern (middle_end/flambda/inlining_cost.ml[429,14461+48]..[429,14461+60])
                        Ppat_var "branch_depth" (middle_end/flambda/inlining_cost.ml[429,14461+48]..[429,14461+60])
                      expression (middle_end/flambda/inlining_cost.ml[429,14461+61]..[434,14752+5]) ghost
                        Pexp_fun
                        Labelled "new_size"
                        None
                        pattern (middle_end/flambda/inlining_cost.ml[429,14461+62]..[429,14461+70])
                          Ppat_var "new_size" (middle_end/flambda/inlining_cost.ml[429,14461+62]..[429,14461+70])
                        expression (middle_end/flambda/inlining_cost.ml[430,14532+8]..[434,14752+5]) ghost
                          Pexp_fun
                          Labelled "benefit"
                          None
                          pattern (middle_end/flambda/inlining_cost.ml[430,14532+9]..[430,14532+16])
                            Ppat_var "benefit" (middle_end/flambda/inlining_cost.ml[430,14532+9]..[430,14532+16])
                          expression (middle_end/flambda/inlining_cost.ml[430,14532+17]..[434,14752+5]) ghost
                            Pexp_fun
                            Labelled "lifting"
                            None
                            pattern (middle_end/flambda/inlining_cost.ml[430,14532+18]..[430,14532+25])
                              Ppat_var "lifting" (middle_end/flambda/inlining_cost.ml[430,14532+18]..[430,14532+25])
                            expression (middle_end/flambda/inlining_cost.ml[430,14532+26]..[434,14752+5]) ghost
                              Pexp_fun
                              Labelled "round"
                              None
                              pattern (middle_end/flambda/inlining_cost.ml[430,14532+27]..[430,14532+32])
                                Ppat_var "round" (middle_end/flambda/inlining_cost.ml[430,14532+27]..[430,14532+32])
                              expression (middle_end/flambda/inlining_cost.ml[431,14567+4]..[434,14752+5])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inlining_cost.ml[431,14567+8]..[431,14567+25])
                                      Ppat_var "evaluated_benefit" (middle_end/flambda/inlining_cost.ml[431,14567+8]..[431,14567+25])
                                    expression (middle_end/flambda/inlining_cost.ml[431,14567+28]..[431,14567+59])
                                      Pexp_apply
                                      expression (middle_end/flambda/inlining_cost.ml[431,14567+28]..[431,14567+44])
                                        Pexp_ident "Benefit.evaluate" (middle_end/flambda/inlining_cost.ml[431,14567+28]..[431,14567+44])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[431,14567+45]..[431,14567+52])
                                            Pexp_ident "benefit" (middle_end/flambda/inlining_cost.ml[431,14567+45]..[431,14567+52])
                                        <arg>
                                        Labelled "round"
                                          expression (middle_end/flambda/inlining_cost.ml[431,14567+54]..[431,14567+59])
                                            Pexp_ident "round" (middle_end/flambda/inlining_cost.ml[431,14567+54]..[431,14567+59])
                                      ]
                                ]
                                expression (middle_end/flambda/inlining_cost.ml[432,14630+4]..[434,14752+5])
                                  Pexp_record
                                  [
                                    "round" (middle_end/flambda/inlining_cost.ml[432,14630+6]..[432,14630+11]) ghost
                                      expression (middle_end/flambda/inlining_cost.ml[432,14630+6]..[432,14630+11])
                                        Pexp_ident "round" (middle_end/flambda/inlining_cost.ml[432,14630+6]..[432,14630+11])
                                    "benefit" (middle_end/flambda/inlining_cost.ml[432,14630+13]..[432,14630+20]) ghost
                                      expression (middle_end/flambda/inlining_cost.ml[432,14630+13]..[432,14630+20])
                                        Pexp_ident "benefit" (middle_end/flambda/inlining_cost.ml[432,14630+13]..[432,14630+20])
                                    "toplevel" (middle_end/flambda/inlining_cost.ml[432,14630+22]..[432,14630+30]) ghost
                                      expression (middle_end/flambda/inlining_cost.ml[432,14630+22]..[432,14630+30])
                                        Pexp_ident "toplevel" (middle_end/flambda/inlining_cost.ml[432,14630+22]..[432,14630+30])
                                    "branch_depth" (middle_end/flambda/inlining_cost.ml[432,14630+32]..[432,14630+44]) ghost
                                      expression (middle_end/flambda/inlining_cost.ml[432,14630+32]..[432,14630+44])
                                        Pexp_ident "branch_depth" (middle_end/flambda/inlining_cost.ml[432,14630+32]..[432,14630+44])
                                    "lifting" (middle_end/flambda/inlining_cost.ml[432,14630+46]..[432,14630+53]) ghost
                                      expression (middle_end/flambda/inlining_cost.ml[432,14630+46]..[432,14630+53])
                                        Pexp_ident "lifting" (middle_end/flambda/inlining_cost.ml[432,14630+46]..[432,14630+53])
                                    "original_size" (middle_end/flambda/inlining_cost.ml[432,14630+55]..[432,14630+68]) ghost
                                      expression (middle_end/flambda/inlining_cost.ml[432,14630+55]..[432,14630+68])
                                        Pexp_ident "original_size" (middle_end/flambda/inlining_cost.ml[432,14630+55]..[432,14630+68])
                                    "new_size" (middle_end/flambda/inlining_cost.ml[433,14700+6]..[433,14700+14]) ghost
                                      expression (middle_end/flambda/inlining_cost.ml[433,14700+6]..[433,14700+14])
                                        Pexp_ident "new_size" (middle_end/flambda/inlining_cost.ml[433,14700+6]..[433,14700+14])
                                    "evaluated_benefit" (middle_end/flambda/inlining_cost.ml[433,14700+16]..[433,14700+33]) ghost
                                      expression (middle_end/flambda/inlining_cost.ml[433,14700+16]..[433,14700+33])
                                        Pexp_ident "evaluated_benefit" (middle_end/flambda/inlining_cost.ml[433,14700+16]..[433,14700+33])
                                    "estimate" (middle_end/flambda/inlining_cost.ml[433,14700+35]..[433,14700+43])
                                      expression (middle_end/flambda/inlining_cost.ml[433,14700+46]..[433,14700+50])
                                        Pexp_construct "true" (middle_end/flambda/inlining_cost.ml[433,14700+46]..[433,14700+50])
                                        None
                                  ]
                                  None
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[436,14759+2]..[439,14835+63])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[436,14759+6]..[436,14759+12])
                  Ppat_var "is_nan" (middle_end/flambda/inlining_cost.ml[436,14759+6]..[436,14759+12])
                expression (middle_end/flambda/inlining_cost.ml[436,14759+13]..[439,14835+63]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[436,14759+13]..[436,14759+14])
                    Ppat_var "f" (middle_end/flambda/inlining_cost.ml[436,14759+13]..[436,14759+14])
                  expression (middle_end/flambda/inlining_cost.ml[437,14776+4]..[439,14835+63])
                    Pexp_match
                    expression (middle_end/flambda/inlining_cost.ml[437,14776+10]..[437,14776+32])
                      Pexp_apply
                      expression (middle_end/flambda/inlining_cost.ml[437,14776+10]..[437,14776+30])
                        Pexp_ident "Float.classify_float" (middle_end/flambda/inlining_cost.ml[437,14776+10]..[437,14776+30])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[437,14776+31]..[437,14776+32])
                            Pexp_ident "f" (middle_end/flambda/inlining_cost.ml[437,14776+31]..[437,14776+32])
                      ]
                    [
                      <case>
                        pattern (middle_end/flambda/inlining_cost.ml[438,14814+6]..[438,14814+12])
                          Ppat_construct "FP_nan" (middle_end/flambda/inlining_cost.ml[438,14814+6]..[438,14814+12])
                          None
                        expression (middle_end/flambda/inlining_cost.ml[438,14814+16]..[438,14814+20])
                          Pexp_construct "true" (middle_end/flambda/inlining_cost.ml[438,14814+16]..[438,14814+20])
                          None
                      <case>
                        pattern (middle_end/flambda/inlining_cost.ml[439,14835+6]..[439,14835+54])
                          Ppat_or
                          pattern (middle_end/flambda/inlining_cost.ml[439,14835+6]..[439,14835+40])
                            Ppat_or
                            pattern (middle_end/flambda/inlining_cost.ml[439,14835+6]..[439,14835+30])
                              Ppat_or
                              pattern (middle_end/flambda/inlining_cost.ml[439,14835+6]..[439,14835+15])
                                Ppat_construct "FP_normal" (middle_end/flambda/inlining_cost.ml[439,14835+6]..[439,14835+15])
                                None
                              pattern (middle_end/flambda/inlining_cost.ml[439,14835+18]..[439,14835+30])
                                Ppat_construct "FP_subnormal" (middle_end/flambda/inlining_cost.ml[439,14835+18]..[439,14835+30])
                                None
                            pattern (middle_end/flambda/inlining_cost.ml[439,14835+33]..[439,14835+40])
                              Ppat_construct "FP_zero" (middle_end/flambda/inlining_cost.ml[439,14835+33]..[439,14835+40])
                              None
                          pattern (middle_end/flambda/inlining_cost.ml[439,14835+43]..[439,14835+54])
                            Ppat_construct "FP_infinite" (middle_end/flambda/inlining_cost.ml[439,14835+43]..[439,14835+54])
                            None
                        expression (middle_end/flambda/inlining_cost.ml[439,14835+58]..[439,14835+63])
                          Pexp_construct "false" (middle_end/flambda/inlining_cost.ml[439,14835+58]..[439,14835+63])
                          None
                    ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[441,14900+2]..[443,14953+32])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[441,14900+6]..[441,14900+27])
                  Ppat_var "correct_branch_factor" (middle_end/flambda/inlining_cost.ml[441,14900+6]..[441,14900+27])
                expression (middle_end/flambda/inlining_cost.ml[441,14900+28]..[443,14953+32]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[441,14900+28]..[441,14900+29])
                    Ppat_var "f" (middle_end/flambda/inlining_cost.ml[441,14900+28]..[441,14900+29])
                  expression (middle_end/flambda/inlining_cost.ml[442,14932+4]..[443,14953+32])
                    Pexp_apply
                    expression (middle_end/flambda/inlining_cost.ml[443,14953+4]..[443,14953+6])
                      Pexp_ident "&&" (middle_end/flambda/inlining_cost.ml[443,14953+4]..[443,14953+6])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[442,14932+4]..[442,14932+20])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[442,14932+5]..[442,14932+8])
                            Pexp_ident "not" (middle_end/flambda/inlining_cost.ml[442,14932+5]..[442,14932+8])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[442,14932+9]..[442,14932+19])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[442,14932+10]..[442,14932+16])
                                  Pexp_ident "is_nan" (middle_end/flambda/inlining_cost.ml[442,14932+10]..[442,14932+16])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[442,14932+17]..[442,14932+18])
                                      Pexp_ident "f" (middle_end/flambda/inlining_cost.ml[442,14932+17]..[442,14932+18])
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[443,14953+7]..[443,14953+32])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[443,14953+27]..[443,14953+29])
                            Pexp_ident ">=" (middle_end/flambda/inlining_cost.ml[443,14953+27]..[443,14953+29])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[443,14953+8]..[443,14953+26])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[443,14953+8]..[443,14953+21])
                                  Pexp_ident "Float.compare" (middle_end/flambda/inlining_cost.ml[443,14953+8]..[443,14953+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[443,14953+22]..[443,14953+23])
                                      Pexp_ident "f" (middle_end/flambda/inlining_cost.ml[443,14953+22]..[443,14953+23])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[443,14953+24]..[443,14953+26])
                                      Pexp_constant PConst_float (0.,None)
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[443,14953+30]..[443,14953+31])
                                Pexp_constant PConst_int (0,None)
                          ]
                    ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[445,14987+2]..[482,16632+7])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[445,14987+6]..[445,14987+23])
                  Ppat_var "estimated_benefit" (middle_end/flambda/inlining_cost.ml[445,14987+6]..[445,14987+23])
                expression (middle_end/flambda/inlining_cost.ml[445,14987+24]..[482,16632+7]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[445,14987+24]..[445,14987+25])
                    Ppat_var "t" (middle_end/flambda/inlining_cost.ml[445,14987+24]..[445,14987+25])
                  expression (middle_end/flambda/inlining_cost.ml[446,15015+4]..[482,16632+7])
                    Pexp_ifthenelse
                    expression (middle_end/flambda/inlining_cost.ml[446,15015+7]..[446,15015+52])
                      Pexp_apply
                      expression (middle_end/flambda/inlining_cost.ml[446,15015+18]..[446,15015+20])
                        Pexp_ident "&&" (middle_end/flambda/inlining_cost.ml[446,15015+18]..[446,15015+20])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[446,15015+7]..[446,15015+17])
                            Pexp_field
                            expression (middle_end/flambda/inlining_cost.ml[446,15015+7]..[446,15015+8])
                              Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[446,15015+7]..[446,15015+8])
                            "toplevel" (middle_end/flambda/inlining_cost.ml[446,15015+9]..[446,15015+17])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[446,15015+21]..[446,15015+52])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[446,15015+31]..[446,15015+33])
                              Pexp_ident "&&" (middle_end/flambda/inlining_cost.ml[446,15015+31]..[446,15015+33])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[446,15015+21]..[446,15015+30])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[446,15015+21]..[446,15015+22])
                                    Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[446,15015+21]..[446,15015+22])
                                  "lifting" (middle_end/flambda/inlining_cost.ml[446,15015+23]..[446,15015+30])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[446,15015+34]..[446,15015+52])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[446,15015+49]..[446,15015+50])
                                    Pexp_ident "=" (middle_end/flambda/inlining_cost.ml[446,15015+49]..[446,15015+50])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[446,15015+34]..[446,15015+48])
                                        Pexp_field
                                        expression (middle_end/flambda/inlining_cost.ml[446,15015+34]..[446,15015+35])
                                          Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[446,15015+34]..[446,15015+35])
                                        "branch_depth" (middle_end/flambda/inlining_cost.ml[446,15015+36]..[446,15015+48])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[446,15015+51]..[446,15015+52])
                                        Pexp_constant PConst_int (0,None)
                                  ]
                            ]
                      ]
                    expression (middle_end/flambda/inlining_cost.ml[446,15015+58]..[451,15250+7])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/inlining_cost.ml[447,15079+10]..[447,15079+25])
                            Ppat_var "lifting_benefit" (middle_end/flambda/inlining_cost.ml[447,15079+10]..[447,15079+25])
                          expression (middle_end/flambda/inlining_cost.ml[448,15107+8]..[448,15107+79])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[448,15107+8]..[448,15107+34])
                              Pexp_ident "Clflags.Int_arg_helper.get" (middle_end/flambda/inlining_cost.ml[448,15107+8]..[448,15107+34])
                            [
                              <arg>
                              Labelled "key"
                                expression (middle_end/flambda/inlining_cost.ml[448,15107+40]..[448,15107+47])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[448,15107+40]..[448,15107+41])
                                    Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[448,15107+40]..[448,15107+41])
                                  "round" (middle_end/flambda/inlining_cost.ml[448,15107+42]..[448,15107+47])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[448,15107+48]..[448,15107+79])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[448,15107+48]..[448,15107+49])
                                    Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[448,15107+48]..[448,15107+49])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[448,15107+49]..[448,15107+79])
                                        Pexp_ident "Clflags.inline_lifting_benefit" (middle_end/flambda/inlining_cost.ml[448,15107+49]..[448,15107+79])
                                  ]
                            ]
                      ]
                      expression (middle_end/flambda/inlining_cost.ml[450,15196+8]..[450,15196+53])
                        Pexp_apply
                        expression (middle_end/flambda/inlining_cost.ml[450,15196+8]..[450,15196+13])
                          Pexp_ident "float" (middle_end/flambda/inlining_cost.ml[450,15196+8]..[450,15196+13])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inlining_cost.ml[450,15196+14]..[450,15196+53])
                              Pexp_apply
                              expression (middle_end/flambda/inlining_cost.ml[450,15196+35]..[450,15196+36])
                                Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[450,15196+35]..[450,15196+36])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[450,15196+15]..[450,15196+34])
                                    Pexp_field
                                    expression (middle_end/flambda/inlining_cost.ml[450,15196+15]..[450,15196+16])
                                      Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[450,15196+15]..[450,15196+16])
                                    "evaluated_benefit" (middle_end/flambda/inlining_cost.ml[450,15196+17]..[450,15196+34])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[450,15196+37]..[450,15196+52])
                                    Pexp_ident "lifting_benefit" (middle_end/flambda/inlining_cost.ml[450,15196+37]..[450,15196+52])
                              ]
                        ]
                    Some
                      expression (middle_end/flambda/inlining_cost.ml[451,15250+13]..[482,16632+7])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inlining_cost.ml[462,15934+10]..[462,15934+44])
                              Ppat_var "branch_taken_estimated_probability" (middle_end/flambda/inlining_cost.ml[462,15934+10]..[462,15934+44])
                            expression (middle_end/flambda/inlining_cost.ml[463,15981+8]..[476,16403+42])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inlining_cost.ml[463,15981+12]..[463,15981+32])
                                    Ppat_var "inline_branch_factor" (middle_end/flambda/inlining_cost.ml[463,15981+12]..[463,15981+32])
                                  expression (middle_end/flambda/inlining_cost.ml[464,16016+10]..[473,16312+18])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/inlining_cost.ml[464,16016+14]..[464,16016+20])
                                          Ppat_var "factor" (middle_end/flambda/inlining_cost.ml[464,16016+14]..[464,16016+20])
                                        expression (middle_end/flambda/inlining_cost.ml[465,16039+12]..[466,16093+43])
                                          Pexp_apply
                                          expression (middle_end/flambda/inlining_cost.ml[465,16039+12]..[465,16039+40])
                                            Pexp_ident "Clflags.Float_arg_helper.get" (middle_end/flambda/inlining_cost.ml[465,16039+12]..[465,16039+40])
                                          [
                                            <arg>
                                            Labelled "key"
                                              expression (middle_end/flambda/inlining_cost.ml[465,16039+46]..[465,16039+53])
                                                Pexp_field
                                                expression (middle_end/flambda/inlining_cost.ml[465,16039+46]..[465,16039+47])
                                                  Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[465,16039+46]..[465,16039+47])
                                                "round" (middle_end/flambda/inlining_cost.ml[465,16039+48]..[465,16039+53])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[466,16093+14]..[466,16093+43])
                                                Pexp_apply
                                                expression (middle_end/flambda/inlining_cost.ml[466,16093+14]..[466,16093+15])
                                                  Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[466,16093+14]..[466,16093+15])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inlining_cost.ml[466,16093+15]..[466,16093+43])
                                                      Pexp_ident "Clflags.inline_branch_factor" (middle_end/flambda/inlining_cost.ml[466,16093+15]..[466,16093+43])
                                                ]
                                          ]
                                    ]
                                    expression (middle_end/flambda/inlining_cost.ml[468,16150+10]..[473,16312+18])
                                      Pexp_ifthenelse
                                      expression (middle_end/flambda/inlining_cost.ml[468,16150+13]..[468,16150+26])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[468,16150+13]..[468,16150+19])
                                          Pexp_ident "is_nan" (middle_end/flambda/inlining_cost.ml[468,16150+13]..[468,16150+19])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[468,16150+20]..[468,16150+26])
                                              Pexp_ident "factor" (middle_end/flambda/inlining_cost.ml[468,16150+20]..[468,16150+26])
                                        ]
                                      expression (middle_end/flambda/inlining_cost.ml[469,16182+12]..[469,16182+48])
                                        Pexp_ident "Clflags.default_inline_branch_factor" (middle_end/flambda/inlining_cost.ml[469,16182+12]..[469,16182+48])
                                      Some
                                        expression (middle_end/flambda/inlining_cost.ml[470,16231+15]..[473,16312+18])
                                          Pexp_ifthenelse
                                          expression (middle_end/flambda/inlining_cost.ml[470,16231+18]..[470,16231+45])
                                            Pexp_apply
                                            expression (middle_end/flambda/inlining_cost.ml[470,16231+42]..[470,16231+43])
                                              Pexp_ident "<" (middle_end/flambda/inlining_cost.ml[470,16231+42]..[470,16231+43])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[470,16231+18]..[470,16231+41])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inlining_cost.ml[470,16231+18]..[470,16231+31])
                                                    Pexp_ident "Float.compare" (middle_end/flambda/inlining_cost.ml[470,16231+18]..[470,16231+31])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inlining_cost.ml[470,16231+32]..[470,16231+38])
                                                        Pexp_ident "factor" (middle_end/flambda/inlining_cost.ml[470,16231+32]..[470,16231+38])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inlining_cost.ml[470,16231+39]..[470,16231+41])
                                                        Pexp_constant PConst_float (0.,None)
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[470,16231+44]..[470,16231+45])
                                                  Pexp_constant PConst_int (0,None)
                                            ]
                                          expression (middle_end/flambda/inlining_cost.ml[471,16282+12]..[471,16282+14])
                                            Pexp_constant PConst_float (0.,None)
                                          Some
                                            expression (middle_end/flambda/inlining_cost.ml[473,16312+12]..[473,16312+18])
                                              Pexp_ident "factor" (middle_end/flambda/inlining_cost.ml[473,16312+12]..[473,16312+18])
                              ]
                              expression (middle_end/flambda/inlining_cost.ml[475,16342+8]..[476,16403+42])
                                Pexp_sequence
                                expression (middle_end/flambda/inlining_cost.ml[475,16342+8]..[475,16342+59])
                                  Pexp_assert
                                  expression (middle_end/flambda/inlining_cost.ml[475,16342+15]..[475,16342+59])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[475,16342+16]..[475,16342+37])
                                      Pexp_ident "correct_branch_factor" (middle_end/flambda/inlining_cost.ml[475,16342+16]..[475,16342+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[475,16342+38]..[475,16342+58])
                                          Pexp_ident "inline_branch_factor" (middle_end/flambda/inlining_cost.ml[475,16342+38]..[475,16342+58])
                                    ]
                                expression (middle_end/flambda/inlining_cost.ml[476,16403+8]..[476,16403+42])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[476,16403+11]..[476,16403+13])
                                    Pexp_ident "/." (middle_end/flambda/inlining_cost.ml[476,16403+11]..[476,16403+13])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[476,16403+8]..[476,16403+10])
                                        Pexp_constant PConst_float (1.,None)
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[476,16403+14]..[476,16403+42])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[476,16403+18]..[476,16403+20])
                                          Pexp_ident "+." (middle_end/flambda/inlining_cost.ml[476,16403+18]..[476,16403+20])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[476,16403+15]..[476,16403+17])
                                              Pexp_constant PConst_float (1.,None)
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[476,16403+21]..[476,16403+41])
                                              Pexp_ident "inline_branch_factor" (middle_end/flambda/inlining_cost.ml[476,16403+21]..[476,16403+41])
                                        ]
                                  ]
                        ]
                        expression (middle_end/flambda/inlining_cost.ml[478,16455+6]..[481,16570+61])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inlining_cost.ml[478,16455+10]..[478,16455+36])
                                Ppat_var "call_estimated_probability" (middle_end/flambda/inlining_cost.ml[478,16455+10]..[478,16455+36])
                              expression (middle_end/flambda/inlining_cost.ml[479,16494+8]..[479,16494+66])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[479,16494+43]..[479,16494+45])
                                  Pexp_ident "**" (middle_end/flambda/inlining_cost.ml[479,16494+43]..[479,16494+45])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[479,16494+8]..[479,16494+42])
                                      Pexp_ident "branch_taken_estimated_probability" (middle_end/flambda/inlining_cost.ml[479,16494+8]..[479,16494+42])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[479,16494+46]..[479,16494+66])
                                      Pexp_apply
                                      expression (middle_end/flambda/inlining_cost.ml[479,16494+46]..[479,16494+51])
                                        Pexp_ident "float" (middle_end/flambda/inlining_cost.ml[479,16494+46]..[479,16494+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[479,16494+52]..[479,16494+66])
                                            Pexp_field
                                            expression (middle_end/flambda/inlining_cost.ml[479,16494+52]..[479,16494+53])
                                              Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[479,16494+52]..[479,16494+53])
                                            "branch_depth" (middle_end/flambda/inlining_cost.ml[479,16494+54]..[479,16494+66])
                                      ]
                                ]
                          ]
                          expression (middle_end/flambda/inlining_cost.ml[481,16570+6]..[481,16570+61])
                            Pexp_apply
                            expression (middle_end/flambda/inlining_cost.ml[481,16570+32]..[481,16570+34])
                              Pexp_ident "*." (middle_end/flambda/inlining_cost.ml[481,16570+32]..[481,16570+34])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[481,16570+6]..[481,16570+31])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[481,16570+6]..[481,16570+11])
                                    Pexp_ident "float" (middle_end/flambda/inlining_cost.ml[481,16570+6]..[481,16570+11])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[481,16570+12]..[481,16570+31])
                                        Pexp_field
                                        expression (middle_end/flambda/inlining_cost.ml[481,16570+12]..[481,16570+13])
                                          Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[481,16570+12]..[481,16570+13])
                                        "evaluated_benefit" (middle_end/flambda/inlining_cost.ml[481,16570+14]..[481,16570+31])
                                  ]
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/inlining_cost.ml[481,16570+35]..[481,16570+61])
                                  Pexp_ident "call_estimated_probability" (middle_end/flambda/inlining_cost.ml[481,16570+35]..[481,16570+61])
                            ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[484,16641+2]..[487,16726+34])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[484,16641+6]..[484,16641+14])
                  Ppat_var "evaluate" (middle_end/flambda/inlining_cost.ml[484,16641+6]..[484,16641+14])
                expression (middle_end/flambda/inlining_cost.ml[484,16641+15]..[487,16726+34]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[484,16641+15]..[484,16641+16])
                    Ppat_var "t" (middle_end/flambda/inlining_cost.ml[484,16641+15]..[484,16641+16])
                  expression (middle_end/flambda/inlining_cost.ml[485,16660+4]..[487,16726+34])
                    Pexp_apply
                    expression (middle_end/flambda/inlining_cost.ml[487,16726+30]..[487,16726+32])
                      Pexp_ident "<=" (middle_end/flambda/inlining_cost.ml[487,16726+30]..[487,16726+32])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[485,16660+4]..[487,16726+29])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[485,16660+4]..[485,16660+17])
                            Pexp_ident "Float.compare" (middle_end/flambda/inlining_cost.ml[485,16660+4]..[485,16660+17])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[486,16678+6]..[486,16678+47])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[486,16678+24]..[486,16678+26])
                                  Pexp_ident "-." (middle_end/flambda/inlining_cost.ml[486,16678+24]..[486,16678+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[486,16678+7]..[486,16678+23])
                                      Pexp_apply
                                      expression (middle_end/flambda/inlining_cost.ml[486,16678+7]..[486,16678+12])
                                        Pexp_ident "float" (middle_end/flambda/inlining_cost.ml[486,16678+7]..[486,16678+12])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[486,16678+13]..[486,16678+23])
                                            Pexp_field
                                            expression (middle_end/flambda/inlining_cost.ml[486,16678+13]..[486,16678+14])
                                              Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[486,16678+13]..[486,16678+14])
                                            "new_size" (middle_end/flambda/inlining_cost.ml[486,16678+15]..[486,16678+23])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[486,16678+27]..[486,16678+46])
                                      Pexp_apply
                                      expression (middle_end/flambda/inlining_cost.ml[486,16678+27]..[486,16678+44])
                                        Pexp_ident "estimated_benefit" (middle_end/flambda/inlining_cost.ml[486,16678+27]..[486,16678+44])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[486,16678+45]..[486,16678+46])
                                            Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[486,16678+45]..[486,16678+46])
                                      ]
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[487,16726+6]..[487,16726+29])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[487,16726+7]..[487,16726+12])
                                  Pexp_ident "float" (middle_end/flambda/inlining_cost.ml[487,16726+7]..[487,16726+12])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[487,16726+13]..[487,16726+28])
                                      Pexp_field
                                      expression (middle_end/flambda/inlining_cost.ml[487,16726+13]..[487,16726+14])
                                        Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[487,16726+13]..[487,16726+14])
                                      "original_size" (middle_end/flambda/inlining_cost.ml[487,16726+15]..[487,16726+28])
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[487,16726+33]..[487,16726+34])
                          Pexp_constant PConst_int (0,None)
                    ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[489,16762+2]..[520,17777+44])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[489,16762+6]..[489,16762+15])
                  Ppat_var "to_string" (middle_end/flambda/inlining_cost.ml[489,16762+6]..[489,16762+15])
                expression (middle_end/flambda/inlining_cost.ml[489,16762+16]..[520,17777+44]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[489,16762+16]..[489,16762+17])
                    Ppat_var "t" (middle_end/flambda/inlining_cost.ml[489,16762+16]..[489,16762+17])
                  expression (middle_end/flambda/inlining_cost.ml[490,16782+4]..[520,17777+44])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/inlining_cost.ml[490,16782+8]..[490,16782+15])
                          Ppat_var "lifting" (middle_end/flambda/inlining_cost.ml[490,16782+8]..[490,16782+15])
                        expression (middle_end/flambda/inlining_cost.ml[490,16782+18]..[490,16782+63])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[490,16782+29]..[490,16782+31])
                            Pexp_ident "&&" (middle_end/flambda/inlining_cost.ml[490,16782+29]..[490,16782+31])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[490,16782+18]..[490,16782+28])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[490,16782+18]..[490,16782+19])
                                  Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[490,16782+18]..[490,16782+19])
                                "toplevel" (middle_end/flambda/inlining_cost.ml[490,16782+20]..[490,16782+28])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[490,16782+32]..[490,16782+63])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[490,16782+42]..[490,16782+44])
                                  Pexp_ident "&&" (middle_end/flambda/inlining_cost.ml[490,16782+42]..[490,16782+44])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[490,16782+32]..[490,16782+41])
                                      Pexp_field
                                      expression (middle_end/flambda/inlining_cost.ml[490,16782+32]..[490,16782+33])
                                        Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[490,16782+32]..[490,16782+33])
                                      "lifting" (middle_end/flambda/inlining_cost.ml[490,16782+34]..[490,16782+41])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[490,16782+45]..[490,16782+63])
                                      Pexp_apply
                                      expression (middle_end/flambda/inlining_cost.ml[490,16782+60]..[490,16782+61])
                                        Pexp_ident "=" (middle_end/flambda/inlining_cost.ml[490,16782+60]..[490,16782+61])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[490,16782+45]..[490,16782+59])
                                            Pexp_field
                                            expression (middle_end/flambda/inlining_cost.ml[490,16782+45]..[490,16782+46])
                                              Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[490,16782+45]..[490,16782+46])
                                            "branch_depth" (middle_end/flambda/inlining_cost.ml[490,16782+47]..[490,16782+59])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[490,16782+62]..[490,16782+63])
                                            Pexp_constant PConst_int (0,None)
                                      ]
                                ]
                          ]
                    ]
                    expression (middle_end/flambda/inlining_cost.ml[491,16849+4]..[520,17777+44])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/inlining_cost.ml[491,16849+8]..[491,16849+25])
                            Ppat_var "evaluated_benefit" (middle_end/flambda/inlining_cost.ml[491,16849+8]..[491,16849+25])
                          expression (middle_end/flambda/inlining_cost.ml[492,16877+6]..[498,17080+30])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/inlining_cost.ml[492,16877+9]..[492,16877+16])
                              Pexp_ident "lifting" (middle_end/flambda/inlining_cost.ml[492,16877+9]..[492,16877+16])
                            expression (middle_end/flambda/inlining_cost.ml[493,16899+8]..[497,17034+45])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inlining_cost.ml[493,16899+12]..[493,16899+27])
                                    Ppat_var "lifting_benefit" (middle_end/flambda/inlining_cost.ml[493,16899+12]..[493,16899+27])
                                  expression (middle_end/flambda/inlining_cost.ml[494,16929+10]..[495,16979+43])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[494,16929+10]..[494,16929+36])
                                      Pexp_ident "Clflags.Int_arg_helper.get" (middle_end/flambda/inlining_cost.ml[494,16929+10]..[494,16929+36])
                                    [
                                      <arg>
                                      Labelled "key"
                                        expression (middle_end/flambda/inlining_cost.ml[494,16929+42]..[494,16929+49])
                                          Pexp_field
                                          expression (middle_end/flambda/inlining_cost.ml[494,16929+42]..[494,16929+43])
                                            Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[494,16929+42]..[494,16929+43])
                                          "round" (middle_end/flambda/inlining_cost.ml[494,16929+44]..[494,16929+49])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[495,16979+12]..[495,16979+43])
                                          Pexp_apply
                                          expression (middle_end/flambda/inlining_cost.ml[495,16979+12]..[495,16979+13])
                                            Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[495,16979+12]..[495,16979+13])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[495,16979+13]..[495,16979+43])
                                                Pexp_ident "Clflags.inline_lifting_benefit" (middle_end/flambda/inlining_cost.ml[495,16979+13]..[495,16979+43])
                                          ]
                                    ]
                              ]
                              expression (middle_end/flambda/inlining_cost.ml[497,17034+8]..[497,17034+45])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[497,17034+28]..[497,17034+29])
                                  Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[497,17034+28]..[497,17034+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[497,17034+8]..[497,17034+27])
                                      Pexp_field
                                      expression (middle_end/flambda/inlining_cost.ml[497,17034+8]..[497,17034+9])
                                        Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[497,17034+8]..[497,17034+9])
                                      "evaluated_benefit" (middle_end/flambda/inlining_cost.ml[497,17034+10]..[497,17034+27])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[497,17034+30]..[497,17034+45])
                                      Pexp_ident "lifting_benefit" (middle_end/flambda/inlining_cost.ml[497,17034+30]..[497,17034+45])
                                ]
                            Some
                              expression (middle_end/flambda/inlining_cost.ml[498,17080+11]..[498,17080+30])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[498,17080+11]..[498,17080+12])
                                  Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[498,17080+11]..[498,17080+12])
                                "evaluated_benefit" (middle_end/flambda/inlining_cost.ml[498,17080+13]..[498,17080+30])
                      ]
                      expression (middle_end/flambda/inlining_cost.ml[500,17118+4]..[520,17777+44])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inlining_cost.ml[500,17118+8]..[500,17118+16])
                              Ppat_var "estimate" (middle_end/flambda/inlining_cost.ml[500,17118+8]..[500,17118+16])
                            expression (middle_end/flambda/inlining_cost.ml[500,17118+19]..[500,17118+50])
                              Pexp_ifthenelse
                              expression (middle_end/flambda/inlining_cost.ml[500,17118+22]..[500,17118+32])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[500,17118+22]..[500,17118+23])
                                  Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[500,17118+22]..[500,17118+23])
                                "estimate" (middle_end/flambda/inlining_cost.ml[500,17118+24]..[500,17118+32])
                              expression (middle_end/flambda/inlining_cost.ml[500,17118+38]..[500,17118+41])
                                Pexp_constant PConst_string("<",(middle_end/flambda/inlining_cost.ml[500,17118+39]..[500,17118+40]),None)
                              Some
                                expression (middle_end/flambda/inlining_cost.ml[500,17118+47]..[500,17118+50])
                                  Pexp_constant PConst_string("=",(middle_end/flambda/inlining_cost.ml[500,17118+48]..[500,17118+49]),None)
                        ]
                        expression (middle_end/flambda/inlining_cost.ml[501,17172+6]..[520,17777+44])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[501,17172+6]..[501,17172+20])
                            Pexp_ident "Printf.sprintf" (middle_end/flambda/inlining_cost.ml[501,17172+6]..[501,17172+20])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[501,17172+21]..[505,17365+30])
                                Pexp_constant PConst_string("{benefit%s{call=%d,alloc=%d,prim=%i,branch=%i,indirect=%i,req=%i,lifting=%B}, orig_size=%d,new_size=%d,eval_size=%d,eval_benefit%s%d,branch_depth=%d}=%s",(middle_end/flambda/inlining_cost.ml[501,17172+22]..[505,17365+29]),None)
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[506,17396+8]..[506,17396+16])
                                Pexp_ident "estimate" (middle_end/flambda/inlining_cost.ml[506,17396+8]..[506,17396+16])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[507,17413+8]..[507,17413+29])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[507,17413+8]..[507,17413+17])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[507,17413+8]..[507,17413+9])
                                    Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[507,17413+8]..[507,17413+9])
                                  "benefit" (middle_end/flambda/inlining_cost.ml[507,17413+10]..[507,17413+17])
                                "remove_call" (middle_end/flambda/inlining_cost.ml[507,17413+18]..[507,17413+29])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[508,17443+8]..[508,17443+30])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[508,17443+8]..[508,17443+17])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[508,17443+8]..[508,17443+9])
                                    Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[508,17443+8]..[508,17443+9])
                                  "benefit" (middle_end/flambda/inlining_cost.ml[508,17443+10]..[508,17443+17])
                                "remove_alloc" (middle_end/flambda/inlining_cost.ml[508,17443+18]..[508,17443+30])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[509,17474+8]..[509,17474+29])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[509,17474+8]..[509,17474+17])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[509,17474+8]..[509,17474+9])
                                    Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[509,17474+8]..[509,17474+9])
                                  "benefit" (middle_end/flambda/inlining_cost.ml[509,17474+10]..[509,17474+17])
                                "remove_prim" (middle_end/flambda/inlining_cost.ml[509,17474+18]..[509,17474+29])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[510,17504+8]..[510,17504+31])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[510,17504+8]..[510,17504+17])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[510,17504+8]..[510,17504+9])
                                    Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[510,17504+8]..[510,17504+9])
                                  "benefit" (middle_end/flambda/inlining_cost.ml[510,17504+10]..[510,17504+17])
                                "remove_branch" (middle_end/flambda/inlining_cost.ml[510,17504+18]..[510,17504+31])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[511,17536+8]..[511,17536+41])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[511,17536+8]..[511,17536+17])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[511,17536+8]..[511,17536+9])
                                    Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[511,17536+8]..[511,17536+9])
                                  "benefit" (middle_end/flambda/inlining_cost.ml[511,17536+10]..[511,17536+17])
                                "direct_call_of_indirect" (middle_end/flambda/inlining_cost.ml[511,17536+18]..[511,17536+41])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[512,17578+8]..[512,17578+34])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[512,17578+8]..[512,17578+17])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[512,17578+8]..[512,17578+9])
                                    Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[512,17578+8]..[512,17578+9])
                                  "benefit" (middle_end/flambda/inlining_cost.ml[512,17578+10]..[512,17578+17])
                                "requested_inline" (middle_end/flambda/inlining_cost.ml[512,17578+18]..[512,17578+34])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[513,17613+8]..[513,17613+15])
                                Pexp_ident "lifting" (middle_end/flambda/inlining_cost.ml[513,17613+8]..[513,17613+15])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[514,17629+8]..[514,17629+23])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[514,17629+8]..[514,17629+9])
                                  Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[514,17629+8]..[514,17629+9])
                                "original_size" (middle_end/flambda/inlining_cost.ml[514,17629+10]..[514,17629+23])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[515,17653+8]..[515,17653+18])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[515,17653+8]..[515,17653+9])
                                  Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[515,17653+8]..[515,17653+9])
                                "new_size" (middle_end/flambda/inlining_cost.ml[515,17653+10]..[515,17653+18])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[516,17672+8]..[516,17672+38])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[516,17672+25]..[516,17672+26])
                                  Pexp_ident "-" (middle_end/flambda/inlining_cost.ml[516,17672+25]..[516,17672+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[516,17672+9]..[516,17672+24])
                                      Pexp_field
                                      expression (middle_end/flambda/inlining_cost.ml[516,17672+9]..[516,17672+10])
                                        Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[516,17672+9]..[516,17672+10])
                                      "original_size" (middle_end/flambda/inlining_cost.ml[516,17672+11]..[516,17672+24])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[516,17672+27]..[516,17672+37])
                                      Pexp_field
                                      expression (middle_end/flambda/inlining_cost.ml[516,17672+27]..[516,17672+28])
                                        Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[516,17672+27]..[516,17672+28])
                                      "new_size" (middle_end/flambda/inlining_cost.ml[516,17672+29]..[516,17672+37])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[517,17711+8]..[517,17711+16])
                                Pexp_ident "estimate" (middle_end/flambda/inlining_cost.ml[517,17711+8]..[517,17711+16])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[518,17728+8]..[518,17728+25])
                                Pexp_ident "evaluated_benefit" (middle_end/flambda/inlining_cost.ml[518,17728+8]..[518,17728+25])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[519,17754+8]..[519,17754+22])
                                Pexp_field
                                expression (middle_end/flambda/inlining_cost.ml[519,17754+8]..[519,17754+9])
                                  Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[519,17754+8]..[519,17754+9])
                                "branch_depth" (middle_end/flambda/inlining_cost.ml[519,17754+10]..[519,17754+22])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[520,17777+8]..[520,17777+44])
                                Pexp_ifthenelse
                                expression (middle_end/flambda/inlining_cost.ml[520,17777+12]..[520,17777+22])
                                  Pexp_apply
                                  expression (middle_end/flambda/inlining_cost.ml[520,17777+12]..[520,17777+20])
                                    Pexp_ident "evaluate" (middle_end/flambda/inlining_cost.ml[520,17777+12]..[520,17777+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/inlining_cost.ml[520,17777+21]..[520,17777+22])
                                        Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[520,17777+21]..[520,17777+22])
                                  ]
                                expression (middle_end/flambda/inlining_cost.ml[520,17777+28]..[520,17777+33])
                                  Pexp_constant PConst_string("yes",(middle_end/flambda/inlining_cost.ml[520,17777+29]..[520,17777+32]),None)
                                Some
                                  expression (middle_end/flambda/inlining_cost.ml[520,17777+39]..[520,17777+43])
                                    Pexp_constant PConst_string("no",(middle_end/flambda/inlining_cost.ml[520,17777+40]..[520,17777+42]),None)
                          ]
            ]
          structure_item (middle_end/flambda/inlining_cost.ml[522,17823+2]..[587,20431+19])
            Pstr_value Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[522,17823+6]..[522,17823+23])
                  Ppat_var "print_description" (middle_end/flambda/inlining_cost.ml[522,17823+6]..[522,17823+23])
                expression (middle_end/flambda/inlining_cost.ml[522,17823+24]..[587,20431+19]) ghost
                  Pexp_fun
                  Labelled "subfunctions"
                  None
                  pattern (middle_end/flambda/inlining_cost.ml[522,17823+25]..[522,17823+37])
                    Ppat_var "subfunctions" (middle_end/flambda/inlining_cost.ml[522,17823+25]..[522,17823+37])
                  expression (middle_end/flambda/inlining_cost.ml[522,17823+38]..[587,20431+19]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/inlining_cost.ml[522,17823+38]..[522,17823+41])
                      Ppat_var "ppf" (middle_end/flambda/inlining_cost.ml[522,17823+38]..[522,17823+41])
                    expression (middle_end/flambda/inlining_cost.ml[522,17823+42]..[587,20431+19]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/inlining_cost.ml[522,17823+42]..[522,17823+43])
                        Ppat_var "t" (middle_end/flambda/inlining_cost.ml[522,17823+42]..[522,17823+43])
                      expression (middle_end/flambda/inlining_cost.ml[523,17869+4]..[587,20431+19])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inlining_cost.ml[523,17869+8]..[523,17869+16])
                              Ppat_var "pr_intro" (middle_end/flambda/inlining_cost.ml[523,17869+8]..[523,17869+16])
                            expression (middle_end/flambda/inlining_cost.ml[523,17869+17]..[532,18242+59]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/inlining_cost.ml[523,17869+17]..[523,17869+20])
                                Ppat_var "ppf" (middle_end/flambda/inlining_cost.ml[523,17869+17]..[523,17869+20])
                              expression (middle_end/flambda/inlining_cost.ml[524,17892+6]..[532,18242+59])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inlining_cost.ml[524,17892+10]..[524,17892+18])
                                      Ppat_var "estimate" (middle_end/flambda/inlining_cost.ml[524,17892+10]..[524,17892+18])
                                    expression (middle_end/flambda/inlining_cost.ml[524,17892+21]..[524,17892+58])
                                      Pexp_ifthenelse
                                      expression (middle_end/flambda/inlining_cost.ml[524,17892+24]..[524,17892+34])
                                        Pexp_field
                                        expression (middle_end/flambda/inlining_cost.ml[524,17892+24]..[524,17892+25])
                                          Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[524,17892+24]..[524,17892+25])
                                        "estimate" (middle_end/flambda/inlining_cost.ml[524,17892+26]..[524,17892+34])
                                      expression (middle_end/flambda/inlining_cost.ml[524,17892+40]..[524,17892+50])
                                        Pexp_constant PConst_string(" at most",(middle_end/flambda/inlining_cost.ml[524,17892+41]..[524,17892+49]),None)
                                      Some
                                        expression (middle_end/flambda/inlining_cost.ml[524,17892+56]..[524,17892+58])
                                          Pexp_constant PConst_string("",(middle_end/flambda/inlining_cost.ml[524,17892+57]..[524,17892+57]),None)
                                ]
                                expression (middle_end/flambda/inlining_cost.ml[525,17954+6]..[532,18242+59])
                                  Pexp_sequence
                                  expression (middle_end/flambda/inlining_cost.ml[525,17954+6]..[526,17985+45])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[525,17954+6]..[525,17954+26])
                                      Pexp_ident "Format.pp_print_text" (middle_end/flambda/inlining_cost.ml[525,17954+6]..[525,17954+26])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[525,17954+27]..[525,17954+30])
                                          Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[525,17954+27]..[525,17954+30])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[526,17985+8]..[526,17985+45])
                                          Pexp_constant PConst_string("Specialisation of the function body",(middle_end/flambda/inlining_cost.ml[526,17985+9]..[526,17985+44]),None)
                                    ]
                                  expression (middle_end/flambda/inlining_cost.ml[527,18032+6]..[532,18242+59])
                                    Pexp_sequence
                                    expression (middle_end/flambda/inlining_cost.ml[527,18032+6]..[529,18092+64])
                                      Pexp_ifthenelse
                                      expression (middle_end/flambda/inlining_cost.ml[527,18032+9]..[527,18032+21])
                                        Pexp_ident "subfunctions" (middle_end/flambda/inlining_cost.ml[527,18032+9]..[527,18032+21])
                                      expression (middle_end/flambda/inlining_cost.ml[528,18059+8]..[529,18092+64])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[528,18059+8]..[528,18059+28])
                                          Pexp_ident "Format.pp_print_text" (middle_end/flambda/inlining_cost.ml[528,18059+8]..[528,18059+28])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[528,18059+29]..[528,18059+32])
                                              Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[528,18059+29]..[528,18059+32])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[529,18092+10]..[529,18092+64])
                                              Pexp_constant PConst_string(", including speculative inlining of other functions,",(middle_end/flambda/inlining_cost.ml[529,18092+11]..[529,18092+63]),None)
                                        ]
                                      None
                                    expression (middle_end/flambda/inlining_cost.ml[530,18158+6]..[532,18242+59])
                                      Pexp_sequence
                                      expression (middle_end/flambda/inlining_cost.ml[530,18158+6]..[530,18158+41])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[530,18158+6]..[530,18158+26])
                                          Pexp_ident "Format.pp_print_text" (middle_end/flambda/inlining_cost.ml[530,18158+6]..[530,18158+26])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[530,18158+27]..[530,18158+30])
                                              Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[530,18158+27]..[530,18158+30])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[530,18158+31]..[530,18158+41])
                                              Pexp_constant PConst_string(" removed",(middle_end/flambda/inlining_cost.ml[530,18158+32]..[530,18158+40]),None)
                                        ]
                                      expression (middle_end/flambda/inlining_cost.ml[531,18201+6]..[532,18242+59])
                                        Pexp_sequence
                                        expression (middle_end/flambda/inlining_cost.ml[531,18201+6]..[531,18201+39])
                                          Pexp_apply
                                          expression (middle_end/flambda/inlining_cost.ml[531,18201+6]..[531,18201+26])
                                            Pexp_ident "Format.pp_print_text" (middle_end/flambda/inlining_cost.ml[531,18201+6]..[531,18201+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[531,18201+27]..[531,18201+30])
                                                Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[531,18201+27]..[531,18201+30])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[531,18201+31]..[531,18201+39])
                                                Pexp_ident "estimate" (middle_end/flambda/inlining_cost.ml[531,18201+31]..[531,18201+39])
                                          ]
                                        expression (middle_end/flambda/inlining_cost.ml[532,18242+6]..[532,18242+59])
                                          Pexp_apply
                                          expression (middle_end/flambda/inlining_cost.ml[532,18242+6]..[532,18242+26])
                                            Pexp_ident "Format.pp_print_text" (middle_end/flambda/inlining_cost.ml[532,18242+6]..[532,18242+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[532,18242+27]..[532,18242+30])
                                                Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[532,18242+27]..[532,18242+30])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[532,18242+31]..[532,18242+59])
                                                Pexp_constant PConst_string(" the following operations:",(middle_end/flambda/inlining_cost.ml[532,18242+32]..[532,18242+58]),None)
                                          ]
                        ]
                        expression (middle_end/flambda/inlining_cost.ml[534,18309+4]..[587,20431+19])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/inlining_cost.ml[534,18309+8]..[534,18309+15])
                                Ppat_var "lifting" (middle_end/flambda/inlining_cost.ml[534,18309+8]..[534,18309+15])
                              expression (middle_end/flambda/inlining_cost.ml[534,18309+18]..[534,18309+63])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[534,18309+29]..[534,18309+31])
                                  Pexp_ident "&&" (middle_end/flambda/inlining_cost.ml[534,18309+29]..[534,18309+31])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[534,18309+18]..[534,18309+28])
                                      Pexp_field
                                      expression (middle_end/flambda/inlining_cost.ml[534,18309+18]..[534,18309+19])
                                        Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[534,18309+18]..[534,18309+19])
                                      "toplevel" (middle_end/flambda/inlining_cost.ml[534,18309+20]..[534,18309+28])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[534,18309+32]..[534,18309+63])
                                      Pexp_apply
                                      expression (middle_end/flambda/inlining_cost.ml[534,18309+42]..[534,18309+44])
                                        Pexp_ident "&&" (middle_end/flambda/inlining_cost.ml[534,18309+42]..[534,18309+44])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[534,18309+32]..[534,18309+41])
                                            Pexp_field
                                            expression (middle_end/flambda/inlining_cost.ml[534,18309+32]..[534,18309+33])
                                              Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[534,18309+32]..[534,18309+33])
                                            "lifting" (middle_end/flambda/inlining_cost.ml[534,18309+34]..[534,18309+41])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/inlining_cost.ml[534,18309+45]..[534,18309+63])
                                            Pexp_apply
                                            expression (middle_end/flambda/inlining_cost.ml[534,18309+60]..[534,18309+61])
                                              Pexp_ident "=" (middle_end/flambda/inlining_cost.ml[534,18309+60]..[534,18309+61])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[534,18309+45]..[534,18309+59])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inlining_cost.ml[534,18309+45]..[534,18309+46])
                                                    Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[534,18309+45]..[534,18309+46])
                                                  "branch_depth" (middle_end/flambda/inlining_cost.ml[534,18309+47]..[534,18309+59])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[534,18309+62]..[534,18309+63])
                                                  Pexp_constant PConst_int (0,None)
                                            ]
                                      ]
                                ]
                          ]
                          expression (middle_end/flambda/inlining_cost.ml[535,18376+4]..[587,20431+19])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/inlining_cost.ml[535,18376+8]..[535,18376+17])
                                  Ppat_var "requested" (middle_end/flambda/inlining_cost.ml[535,18376+8]..[535,18376+17])
                                expression (middle_end/flambda/inlining_cost.ml[535,18376+20]..[535,18376+46])
                                  Pexp_field
                                  expression (middle_end/flambda/inlining_cost.ml[535,18376+20]..[535,18376+29])
                                    Pexp_field
                                    expression (middle_end/flambda/inlining_cost.ml[535,18376+20]..[535,18376+21])
                                      Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[535,18376+20]..[535,18376+21])
                                    "benefit" (middle_end/flambda/inlining_cost.ml[535,18376+22]..[535,18376+29])
                                  "requested_inline" (middle_end/flambda/inlining_cost.ml[535,18376+30]..[535,18376+46])
                            ]
                            expression (middle_end/flambda/inlining_cost.ml[536,18426+4]..[587,20431+19])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/inlining_cost.ml[536,18426+8]..[536,18426+20])
                                    Ppat_var "pr_requested" (middle_end/flambda/inlining_cost.ml[536,18426+8]..[536,18426+20])
                                  expression (middle_end/flambda/inlining_cost.ml[536,18426+21]..[545,18764+9]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/inlining_cost.ml[536,18426+21]..[536,18426+24])
                                      Ppat_var "ppf" (middle_end/flambda/inlining_cost.ml[536,18426+21]..[536,18426+24])
                                    expression (middle_end/flambda/inlining_cost.ml[537,18453+6]..[545,18764+9])
                                      Pexp_ifthenelse
                                      expression (middle_end/flambda/inlining_cost.ml[537,18453+9]..[537,18453+22])
                                        Pexp_apply
                                        expression (middle_end/flambda/inlining_cost.ml[537,18453+19]..[537,18453+20])
                                          Pexp_ident ">" (middle_end/flambda/inlining_cost.ml[537,18453+19]..[537,18453+20])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[537,18453+9]..[537,18453+18])
                                              Pexp_ident "requested" (middle_end/flambda/inlining_cost.ml[537,18453+9]..[537,18453+18])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/inlining_cost.ml[537,18453+21]..[537,18453+22])
                                              Pexp_constant PConst_int (0,None)
                                        ]
                                      expression (middle_end/flambda/inlining_cost.ml[537,18453+28]..[545,18764+9])
                                        Pexp_sequence
                                        expression (middle_end/flambda/inlining_cost.ml[538,18487+8]..[538,18487+32])
                                          Pexp_apply
                                          expression (middle_end/flambda/inlining_cost.ml[538,18487+8]..[538,18487+26])
                                            Pexp_ident "Format.pp_open_box" (middle_end/flambda/inlining_cost.ml[538,18487+8]..[538,18487+26])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[538,18487+27]..[538,18487+30])
                                                Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[538,18487+27]..[538,18487+30])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[538,18487+31]..[538,18487+32])
                                                Pexp_constant PConst_int (0,None)
                                          ]
                                        expression (middle_end/flambda/inlining_cost.ml[539,18521+8]..[544,18729+34])
                                          Pexp_sequence
                                          expression (middle_end/flambda/inlining_cost.ml[539,18521+8]..[540,18554+57])
                                            Pexp_apply
                                            expression (middle_end/flambda/inlining_cost.ml[539,18521+8]..[539,18521+28])
                                              Pexp_ident "Format.pp_print_text" (middle_end/flambda/inlining_cost.ml[539,18521+8]..[539,18521+28])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[539,18521+29]..[539,18521+32])
                                                  Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[539,18521+29]..[539,18521+32])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[540,18554+12]..[540,18554+57])
                                                  Pexp_constant PConst_string("and inlined user-annotated functions worth ",(middle_end/flambda/inlining_cost.ml[540,18554+13]..[540,18554+56]),None)
                                            ]
                                          expression (middle_end/flambda/inlining_cost.ml[541,18613+8]..[544,18729+34])
                                            Pexp_sequence
                                            expression (middle_end/flambda/inlining_cost.ml[541,18613+8]..[541,18613+42])
                                              Pexp_apply
                                              expression (middle_end/flambda/inlining_cost.ml[541,18613+8]..[541,18613+22])
                                                Pexp_ident "Format.fprintf" (middle_end/flambda/inlining_cost.ml[541,18613+8]..[541,18613+22])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inlining_cost.ml[541,18613+23]..[541,18613+26])
                                                    Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[541,18613+23]..[541,18613+26])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inlining_cost.ml[541,18613+27]..[541,18613+32])
                                                    Pexp_constant PConst_string("%d.",(middle_end/flambda/inlining_cost.ml[541,18613+28]..[541,18613+31]),None)
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inlining_cost.ml[541,18613+33]..[541,18613+42])
                                                    Pexp_ident "requested" (middle_end/flambda/inlining_cost.ml[541,18613+33]..[541,18613+42])
                                              ]
                                            expression (middle_end/flambda/inlining_cost.ml[542,18657+8]..[544,18729+34])
                                              Pexp_sequence
                                              expression (middle_end/flambda/inlining_cost.ml[542,18657+8]..[542,18657+34])
                                                Pexp_apply
                                                expression (middle_end/flambda/inlining_cost.ml[542,18657+8]..[542,18657+27])
                                                  Pexp_ident "Format.pp_close_box" (middle_end/flambda/inlining_cost.ml[542,18657+8]..[542,18657+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inlining_cost.ml[542,18657+28]..[542,18657+31])
                                                      Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[542,18657+28]..[542,18657+31])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inlining_cost.ml[542,18657+32]..[542,18657+34])
                                                      Pexp_construct "()" (middle_end/flambda/inlining_cost.ml[542,18657+32]..[542,18657+34])
                                                      None
                                                ]
                                              expression (middle_end/flambda/inlining_cost.ml[543,18693+8]..[544,18729+34])
                                                Pexp_sequence
                                                expression (middle_end/flambda/inlining_cost.ml[543,18693+8]..[543,18693+34])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inlining_cost.ml[543,18693+8]..[543,18693+27])
                                                    Pexp_ident "Format.pp_print_cut" (middle_end/flambda/inlining_cost.ml[543,18693+8]..[543,18693+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inlining_cost.ml[543,18693+28]..[543,18693+31])
                                                        Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[543,18693+28]..[543,18693+31])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inlining_cost.ml[543,18693+32]..[543,18693+34])
                                                        Pexp_construct "()" (middle_end/flambda/inlining_cost.ml[543,18693+32]..[543,18693+34])
                                                        None
                                                  ]
                                                expression (middle_end/flambda/inlining_cost.ml[544,18729+8]..[544,18729+34])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inlining_cost.ml[544,18729+8]..[544,18729+27])
                                                    Pexp_ident "Format.pp_print_cut" (middle_end/flambda/inlining_cost.ml[544,18729+8]..[544,18729+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inlining_cost.ml[544,18729+28]..[544,18729+31])
                                                        Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[544,18729+28]..[544,18729+31])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inlining_cost.ml[544,18729+32]..[544,18729+34])
                                                        Pexp_construct "()" (middle_end/flambda/inlining_cost.ml[544,18729+32]..[544,18729+34])
                                                        None
                                                  ]
                                      None
                              ]
                              expression (middle_end/flambda/inlining_cost.ml[547,18781+4]..[587,20431+19])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/inlining_cost.ml[547,18781+8]..[547,18781+18])
                                      Ppat_var "pr_lifting" (middle_end/flambda/inlining_cost.ml[547,18781+8]..[547,18781+18])
                                    expression (middle_end/flambda/inlining_cost.ml[547,18781+19]..[556,19102+9]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/inlining_cost.ml[547,18781+19]..[547,18781+22])
                                        Ppat_var "ppf" (middle_end/flambda/inlining_cost.ml[547,18781+19]..[547,18781+22])
                                      expression (middle_end/flambda/inlining_cost.ml[548,18806+6]..[556,19102+9])
                                        Pexp_ifthenelse
                                        expression (middle_end/flambda/inlining_cost.ml[548,18806+9]..[548,18806+16])
                                          Pexp_ident "lifting" (middle_end/flambda/inlining_cost.ml[548,18806+9]..[548,18806+16])
                                        expression (middle_end/flambda/inlining_cost.ml[548,18806+22]..[556,19102+9])
                                          Pexp_sequence
                                          expression (middle_end/flambda/inlining_cost.ml[549,18834+8]..[549,18834+32])
                                            Pexp_apply
                                            expression (middle_end/flambda/inlining_cost.ml[549,18834+8]..[549,18834+26])
                                              Pexp_ident "Format.pp_open_box" (middle_end/flambda/inlining_cost.ml[549,18834+8]..[549,18834+26])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[549,18834+27]..[549,18834+30])
                                                  Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[549,18834+27]..[549,18834+30])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[549,18834+31]..[549,18834+32])
                                                  Pexp_constant PConst_int (0,None)
                                            ]
                                          expression (middle_end/flambda/inlining_cost.ml[550,18868+8]..[555,19067+34])
                                            Pexp_sequence
                                            expression (middle_end/flambda/inlining_cost.ml[550,18868+8]..[552,18947+46])
                                              Pexp_apply
                                              expression (middle_end/flambda/inlining_cost.ml[550,18868+8]..[550,18868+28])
                                                Pexp_ident "Format.pp_print_text" (middle_end/flambda/inlining_cost.ml[550,18868+8]..[550,18868+28])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inlining_cost.ml[550,18868+29]..[550,18868+32])
                                                    Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[550,18868+29]..[550,18868+32])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/inlining_cost.ml[551,18901+10]..[552,18947+46])
                                                    Pexp_constant PConst_string("Inlining the function would also lift some definitions to toplevel.",(middle_end/flambda/inlining_cost.ml[551,18901+11]..[552,18947+45]),None)
                                              ]
                                            expression (middle_end/flambda/inlining_cost.ml[553,18995+8]..[555,19067+34])
                                              Pexp_sequence
                                              expression (middle_end/flambda/inlining_cost.ml[553,18995+8]..[553,18995+34])
                                                Pexp_apply
                                                expression (middle_end/flambda/inlining_cost.ml[553,18995+8]..[553,18995+27])
                                                  Pexp_ident "Format.pp_close_box" (middle_end/flambda/inlining_cost.ml[553,18995+8]..[553,18995+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inlining_cost.ml[553,18995+28]..[553,18995+31])
                                                      Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[553,18995+28]..[553,18995+31])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inlining_cost.ml[553,18995+32]..[553,18995+34])
                                                      Pexp_construct "()" (middle_end/flambda/inlining_cost.ml[553,18995+32]..[553,18995+34])
                                                      None
                                                ]
                                              expression (middle_end/flambda/inlining_cost.ml[554,19031+8]..[555,19067+34])
                                                Pexp_sequence
                                                expression (middle_end/flambda/inlining_cost.ml[554,19031+8]..[554,19031+34])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inlining_cost.ml[554,19031+8]..[554,19031+27])
                                                    Pexp_ident "Format.pp_print_cut" (middle_end/flambda/inlining_cost.ml[554,19031+8]..[554,19031+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inlining_cost.ml[554,19031+28]..[554,19031+31])
                                                        Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[554,19031+28]..[554,19031+31])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inlining_cost.ml[554,19031+32]..[554,19031+34])
                                                        Pexp_construct "()" (middle_end/flambda/inlining_cost.ml[554,19031+32]..[554,19031+34])
                                                        None
                                                  ]
                                                expression (middle_end/flambda/inlining_cost.ml[555,19067+8]..[555,19067+34])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/inlining_cost.ml[555,19067+8]..[555,19067+27])
                                                    Pexp_ident "Format.pp_print_cut" (middle_end/flambda/inlining_cost.ml[555,19067+8]..[555,19067+27])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inlining_cost.ml[555,19067+28]..[555,19067+31])
                                                        Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[555,19067+28]..[555,19067+31])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/inlining_cost.ml[555,19067+32]..[555,19067+34])
                                                        Pexp_construct "()" (middle_end/flambda/inlining_cost.ml[555,19067+32]..[555,19067+34])
                                                        None
                                                  ]
                                        None
                                ]
                                expression (middle_end/flambda/inlining_cost.ml[558,19119+4]..[587,20431+19])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/inlining_cost.ml[558,19119+8]..[558,19119+21])
                                        Ppat_var "total_benefit" (middle_end/flambda/inlining_cost.ml[558,19119+8]..[558,19119+21])
                                      expression (middle_end/flambda/inlining_cost.ml[559,19143+6]..[565,19347+30])
                                        Pexp_ifthenelse
                                        expression (middle_end/flambda/inlining_cost.ml[559,19143+9]..[559,19143+16])
                                          Pexp_ident "lifting" (middle_end/flambda/inlining_cost.ml[559,19143+9]..[559,19143+16])
                                        expression (middle_end/flambda/inlining_cost.ml[560,19165+8]..[564,19300+46])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/inlining_cost.ml[560,19165+12]..[560,19165+27])
                                                Ppat_var "lifting_benefit" (middle_end/flambda/inlining_cost.ml[560,19165+12]..[560,19165+27])
                                              expression (middle_end/flambda/inlining_cost.ml[561,19195+10]..[562,19245+43])
                                                Pexp_apply
                                                expression (middle_end/flambda/inlining_cost.ml[561,19195+10]..[561,19195+36])
                                                  Pexp_ident "Clflags.Int_arg_helper.get" (middle_end/flambda/inlining_cost.ml[561,19195+10]..[561,19195+36])
                                                [
                                                  <arg>
                                                  Labelled "key"
                                                    expression (middle_end/flambda/inlining_cost.ml[561,19195+42]..[561,19195+49])
                                                      Pexp_field
                                                      expression (middle_end/flambda/inlining_cost.ml[561,19195+42]..[561,19195+43])
                                                        Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[561,19195+42]..[561,19195+43])
                                                      "round" (middle_end/flambda/inlining_cost.ml[561,19195+44]..[561,19195+49])
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inlining_cost.ml[562,19245+12]..[562,19245+43])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inlining_cost.ml[562,19245+12]..[562,19245+13])
                                                        Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[562,19245+12]..[562,19245+13])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inlining_cost.ml[562,19245+13]..[562,19245+43])
                                                            Pexp_ident "Clflags.inline_lifting_benefit" (middle_end/flambda/inlining_cost.ml[562,19245+13]..[562,19245+43])
                                                      ]
                                                ]
                                          ]
                                          expression (middle_end/flambda/inlining_cost.ml[564,19300+9]..[564,19300+46])
                                            Pexp_apply
                                            expression (middle_end/flambda/inlining_cost.ml[564,19300+29]..[564,19300+30])
                                              Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[564,19300+29]..[564,19300+30])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[564,19300+9]..[564,19300+28])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inlining_cost.ml[564,19300+9]..[564,19300+10])
                                                    Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[564,19300+9]..[564,19300+10])
                                                  "evaluated_benefit" (middle_end/flambda/inlining_cost.ml[564,19300+11]..[564,19300+28])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[564,19300+31]..[564,19300+46])
                                                  Pexp_ident "lifting_benefit" (middle_end/flambda/inlining_cost.ml[564,19300+31]..[564,19300+46])
                                            ]
                                        Some
                                          expression (middle_end/flambda/inlining_cost.ml[565,19347+11]..[565,19347+30])
                                            Pexp_field
                                            expression (middle_end/flambda/inlining_cost.ml[565,19347+11]..[565,19347+12])
                                              Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[565,19347+11]..[565,19347+12])
                                            "evaluated_benefit" (middle_end/flambda/inlining_cost.ml[565,19347+13]..[565,19347+30])
                                  ]
                                  expression (middle_end/flambda/inlining_cost.ml[567,19385+4]..[587,20431+19])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/inlining_cost.ml[567,19385+8]..[567,19385+24])
                                          Ppat_var "expected_benefit" (middle_end/flambda/inlining_cost.ml[567,19385+8]..[567,19385+24])
                                        expression (middle_end/flambda/inlining_cost.ml[567,19385+27]..[567,19385+46])
                                          Pexp_apply
                                          expression (middle_end/flambda/inlining_cost.ml[567,19385+27]..[567,19385+44])
                                            Pexp_ident "estimated_benefit" (middle_end/flambda/inlining_cost.ml[567,19385+27]..[567,19385+44])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/inlining_cost.ml[567,19385+45]..[567,19385+46])
                                                Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[567,19385+45]..[567,19385+46])
                                          ]
                                    ]
                                    expression (middle_end/flambda/inlining_cost.ml[568,19435+4]..[587,20431+19])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (middle_end/flambda/inlining_cost.ml[568,19435+8]..[568,19435+19])
                                            Ppat_var "size_change" (middle_end/flambda/inlining_cost.ml[568,19435+8]..[568,19435+19])
                                          expression (middle_end/flambda/inlining_cost.ml[568,19435+22]..[568,19435+50])
                                            Pexp_apply
                                            expression (middle_end/flambda/inlining_cost.ml[568,19435+33]..[568,19435+34])
                                              Pexp_ident "-" (middle_end/flambda/inlining_cost.ml[568,19435+33]..[568,19435+34])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[568,19435+22]..[568,19435+32])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inlining_cost.ml[568,19435+22]..[568,19435+23])
                                                    Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[568,19435+22]..[568,19435+23])
                                                  "new_size" (middle_end/flambda/inlining_cost.ml[568,19435+24]..[568,19435+32])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[568,19435+35]..[568,19435+50])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inlining_cost.ml[568,19435+35]..[568,19435+36])
                                                    Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[568,19435+35]..[568,19435+36])
                                                  "original_size" (middle_end/flambda/inlining_cost.ml[568,19435+37]..[568,19435+50])
                                            ]
                                      ]
                                      expression (middle_end/flambda/inlining_cost.ml[569,19489+4]..[587,20431+19])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/inlining_cost.ml[569,19489+8]..[569,19489+14])
                                              Ppat_var "result" (middle_end/flambda/inlining_cost.ml[569,19489+8]..[569,19489+14])
                                            expression (middle_end/flambda/inlining_cost.ml[569,19489+17]..[569,19489+57])
                                              Pexp_ifthenelse
                                              expression (middle_end/flambda/inlining_cost.ml[569,19489+20]..[569,19489+30])
                                                Pexp_apply
                                                expression (middle_end/flambda/inlining_cost.ml[569,19489+20]..[569,19489+28])
                                                  Pexp_ident "evaluate" (middle_end/flambda/inlining_cost.ml[569,19489+20]..[569,19489+28])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/inlining_cost.ml[569,19489+29]..[569,19489+30])
                                                      Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[569,19489+29]..[569,19489+30])
                                                ]
                                              expression (middle_end/flambda/inlining_cost.ml[569,19489+36]..[569,19489+42])
                                                Pexp_constant PConst_string("less",(middle_end/flambda/inlining_cost.ml[569,19489+37]..[569,19489+41]),None)
                                              Some
                                                expression (middle_end/flambda/inlining_cost.ml[569,19489+48]..[569,19489+57])
                                                  Pexp_constant PConst_string("greater",(middle_end/flambda/inlining_cost.ml[569,19489+49]..[569,19489+56]),None)
                                        ]
                                        expression (middle_end/flambda/inlining_cost.ml[570,19550+4]..[587,20431+19])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/inlining_cost.ml[570,19550+8]..[570,19550+21])
                                                Ppat_var "pr_conclusion" (middle_end/flambda/inlining_cost.ml[570,19550+8]..[570,19550+21])
                                              expression (middle_end/flambda/inlining_cost.ml[570,19550+22]..[583,20234+60]) ghost
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (middle_end/flambda/inlining_cost.ml[570,19550+22]..[570,19550+25])
                                                  Ppat_var "ppf" (middle_end/flambda/inlining_cost.ml[570,19550+22]..[570,19550+25])
                                                expression (middle_end/flambda/inlining_cost.ml[571,19578+6]..[583,20234+60])
                                                  Pexp_sequence
                                                  expression (middle_end/flambda/inlining_cost.ml[571,19578+6]..[571,19578+63])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/inlining_cost.ml[571,19578+6]..[571,19578+26])
                                                      Pexp_ident "Format.pp_print_text" (middle_end/flambda/inlining_cost.ml[571,19578+6]..[571,19578+26])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inlining_cost.ml[571,19578+27]..[571,19578+30])
                                                          Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[571,19578+27]..[571,19578+30])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/inlining_cost.ml[571,19578+31]..[571,19578+63])
                                                          Pexp_constant PConst_string("This gives a total benefit of ",(middle_end/flambda/inlining_cost.ml[571,19578+32]..[571,19578+62]),None)
                                                    ]
                                                  expression (middle_end/flambda/inlining_cost.ml[572,19643+6]..[583,20234+60])
                                                    Pexp_sequence
                                                    expression (middle_end/flambda/inlining_cost.ml[572,19643+6]..[572,19643+43])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/inlining_cost.ml[572,19643+6]..[572,19643+25])
                                                        Pexp_ident "Format.pp_print_int" (middle_end/flambda/inlining_cost.ml[572,19643+6]..[572,19643+25])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inlining_cost.ml[572,19643+26]..[572,19643+29])
                                                            Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[572,19643+26]..[572,19643+29])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/inlining_cost.ml[572,19643+30]..[572,19643+43])
                                                            Pexp_ident "total_benefit" (middle_end/flambda/inlining_cost.ml[572,19643+30]..[572,19643+43])
                                                      ]
                                                    expression (middle_end/flambda/inlining_cost.ml[573,19688+6]..[583,20234+60])
                                                      Pexp_sequence
                                                      expression (middle_end/flambda/inlining_cost.ml[573,19688+6]..[573,19688+57])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/inlining_cost.ml[573,19688+6]..[573,19688+26])
                                                          Pexp_ident "Format.pp_print_text" (middle_end/flambda/inlining_cost.ml[573,19688+6]..[573,19688+26])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inlining_cost.ml[573,19688+27]..[573,19688+30])
                                                              Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[573,19688+27]..[573,19688+30])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/inlining_cost.ml[573,19688+31]..[573,19688+57])
                                                              Pexp_constant PConst_string(".  At a branch depth of ",(middle_end/flambda/inlining_cost.ml[573,19688+32]..[573,19688+56]),None)
                                                        ]
                                                      expression (middle_end/flambda/inlining_cost.ml[574,19747+6]..[583,20234+60])
                                                        Pexp_sequence
                                                        expression (middle_end/flambda/inlining_cost.ml[574,19747+6]..[574,19747+44])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/inlining_cost.ml[574,19747+6]..[574,19747+25])
                                                            Pexp_ident "Format.pp_print_int" (middle_end/flambda/inlining_cost.ml[574,19747+6]..[574,19747+25])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inlining_cost.ml[574,19747+26]..[574,19747+29])
                                                                Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[574,19747+26]..[574,19747+29])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/inlining_cost.ml[574,19747+30]..[574,19747+44])
                                                                Pexp_field
                                                                expression (middle_end/flambda/inlining_cost.ml[574,19747+30]..[574,19747+31])
                                                                  Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[574,19747+30]..[574,19747+31])
                                                                "branch_depth" (middle_end/flambda/inlining_cost.ml[574,19747+32]..[574,19747+44])
                                                          ]
                                                        expression (middle_end/flambda/inlining_cost.ml[575,19793+6]..[583,20234+60])
                                                          Pexp_sequence
                                                          expression (middle_end/flambda/inlining_cost.ml[575,19793+6]..[575,19793+71])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/inlining_cost.ml[575,19793+6]..[575,19793+26])
                                                              Pexp_ident "Format.pp_print_text" (middle_end/flambda/inlining_cost.ml[575,19793+6]..[575,19793+26])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inlining_cost.ml[575,19793+27]..[575,19793+30])
                                                                  Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[575,19793+27]..[575,19793+30])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/inlining_cost.ml[575,19793+31]..[575,19793+71])
                                                                  Pexp_constant PConst_string(" this produces an expected benefit of ",(middle_end/flambda/inlining_cost.ml[575,19793+32]..[575,19793+70]),None)
                                                            ]
                                                          expression (middle_end/flambda/inlining_cost.ml[576,19866+6]..[583,20234+60])
                                                            Pexp_sequence
                                                            expression (middle_end/flambda/inlining_cost.ml[576,19866+6]..[576,19866+48])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/inlining_cost.ml[576,19866+6]..[576,19866+20])
                                                                Pexp_ident "Format.fprintf" (middle_end/flambda/inlining_cost.ml[576,19866+6]..[576,19866+20])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inlining_cost.ml[576,19866+21]..[576,19866+24])
                                                                    Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[576,19866+21]..[576,19866+24])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inlining_cost.ml[576,19866+25]..[576,19866+31])
                                                                    Pexp_constant PConst_string("%.1f",(middle_end/flambda/inlining_cost.ml[576,19866+26]..[576,19866+30]),None)
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/inlining_cost.ml[576,19866+32]..[576,19866+48])
                                                                    Pexp_ident "expected_benefit" (middle_end/flambda/inlining_cost.ml[576,19866+32]..[576,19866+48])
                                                              ]
                                                            expression (middle_end/flambda/inlining_cost.ml[577,19916+6]..[583,20234+60])
                                                              Pexp_sequence
                                                              expression (middle_end/flambda/inlining_cost.ml[577,19916+6]..[577,19916+58])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/inlining_cost.ml[577,19916+6]..[577,19916+26])
                                                                  Pexp_ident "Format.pp_print_text" (middle_end/flambda/inlining_cost.ml[577,19916+6]..[577,19916+26])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inlining_cost.ml[577,19916+27]..[577,19916+30])
                                                                      Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[577,19916+27]..[577,19916+30])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/inlining_cost.ml[577,19916+31]..[577,19916+58])
                                                                      Pexp_constant PConst_string(".  The new code has size ",(middle_end/flambda/inlining_cost.ml[577,19916+32]..[577,19916+57]),None)
                                                                ]
                                                              expression (middle_end/flambda/inlining_cost.ml[578,19976+6]..[583,20234+60])
                                                                Pexp_sequence
                                                                expression (middle_end/flambda/inlining_cost.ml[578,19976+6]..[578,19976+40])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/inlining_cost.ml[578,19976+6]..[578,19976+25])
                                                                    Pexp_ident "Format.pp_print_int" (middle_end/flambda/inlining_cost.ml[578,19976+6]..[578,19976+25])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inlining_cost.ml[578,19976+26]..[578,19976+29])
Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[578,19976+26]..[578,19976+29])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/inlining_cost.ml[578,19976+30]..[578,19976+40])
Pexp_field
expression (middle_end/flambda/inlining_cost.ml[578,19976+30]..[578,19976+31])
  Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[578,19976+30]..[578,19976+31])
"new_size" (middle_end/flambda/inlining_cost.ml[578,19976+32]..[578,19976+40])
                                                                  ]
                                                                expression (middle_end/flambda/inlining_cost.ml[579,20018+6]..[583,20234+60])
                                                                  Pexp_sequence
                                                                  expression (middle_end/flambda/inlining_cost.ml[579,20018+6]..[579,20018+67])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/inlining_cost.ml[579,20018+6]..[579,20018+26])
                                                                      Pexp_ident "Format.pp_print_text" (middle_end/flambda/inlining_cost.ml[579,20018+6]..[579,20018+26])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inlining_cost.ml[579,20018+27]..[579,20018+30])
  Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[579,20018+27]..[579,20018+30])
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/inlining_cost.ml[579,20018+31]..[579,20018+67])
  Pexp_constant PConst_string(", giving a change in code size of ",(middle_end/flambda/inlining_cost.ml[579,20018+32]..[579,20018+66]),None)
                                                                    ]
                                                                  expression (middle_end/flambda/inlining_cost.ml[580,20087+6]..[583,20234+60])
                                                                    Pexp_sequence
                                                                    expression (middle_end/flambda/inlining_cost.ml[580,20087+6]..[580,20087+41])
                                                                      Pexp_apply
                                                                      expression (middle_end/flambda/inlining_cost.ml[580,20087+6]..[580,20087+25])
Pexp_ident "Format.pp_print_int" (middle_end/flambda/inlining_cost.ml[580,20087+6]..[580,20087+25])
                                                                      [
<arg>
Nolabel
  expression (middle_end/flambda/inlining_cost.ml[580,20087+26]..[580,20087+29])
    Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[580,20087+26]..[580,20087+29])
<arg>
Nolabel
  expression (middle_end/flambda/inlining_cost.ml[580,20087+30]..[580,20087+41])
    Pexp_ident "size_change" (middle_end/flambda/inlining_cost.ml[580,20087+30]..[580,20087+41])
                                                                      ]
                                                                    expression (middle_end/flambda/inlining_cost.ml[581,20130+6]..[583,20234+60])
                                                                      Pexp_sequence
                                                                      expression (middle_end/flambda/inlining_cost.ml[581,20130+6]..[581,20130+63])
Pexp_apply
expression (middle_end/flambda/inlining_cost.ml[581,20130+6]..[581,20130+26])
  Pexp_ident "Format.pp_print_text" (middle_end/flambda/inlining_cost.ml[581,20130+6]..[581,20130+26])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/inlining_cost.ml[581,20130+27]..[581,20130+30])
      Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[581,20130+27]..[581,20130+30])
  <arg>
  Nolabel
    expression (middle_end/flambda/inlining_cost.ml[581,20130+31]..[581,20130+63])
      Pexp_constant PConst_string(".  The change in code size is ",(middle_end/flambda/inlining_cost.ml[581,20130+32]..[581,20130+62]),None)
]
                                                                      expression (middle_end/flambda/inlining_cost.ml[582,20195+6]..[583,20234+60])
Pexp_sequence
expression (middle_end/flambda/inlining_cost.ml[582,20195+6]..[582,20195+37])
  Pexp_apply
  expression (middle_end/flambda/inlining_cost.ml[582,20195+6]..[582,20195+26])
    Pexp_ident "Format.pp_print_text" (middle_end/flambda/inlining_cost.ml[582,20195+6]..[582,20195+26])
  [
    <arg>
    Nolabel
      expression (middle_end/flambda/inlining_cost.ml[582,20195+27]..[582,20195+30])
        Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[582,20195+27]..[582,20195+30])
    <arg>
    Nolabel
      expression (middle_end/flambda/inlining_cost.ml[582,20195+31]..[582,20195+37])
        Pexp_ident "result" (middle_end/flambda/inlining_cost.ml[582,20195+31]..[582,20195+37])
  ]
expression (middle_end/flambda/inlining_cost.ml[583,20234+6]..[583,20234+60])
  Pexp_apply
  expression (middle_end/flambda/inlining_cost.ml[583,20234+6]..[583,20234+26])
    Pexp_ident "Format.pp_print_text" (middle_end/flambda/inlining_cost.ml[583,20234+6]..[583,20234+26])
  [
    <arg>
    Nolabel
      expression (middle_end/flambda/inlining_cost.ml[583,20234+27]..[583,20234+30])
        Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[583,20234+27]..[583,20234+30])
    <arg>
    Nolabel
      expression (middle_end/flambda/inlining_cost.ml[583,20234+31]..[583,20234+60])
        Pexp_constant PConst_string(" than the expected benefit.",(middle_end/flambda/inlining_cost.ml[583,20234+32]..[583,20234+59]),None)
  ]
                                          ]
                                          expression (middle_end/flambda/inlining_cost.ml[585,20302+4]..[587,20431+19])
                                            Pexp_apply
                                            expression (middle_end/flambda/inlining_cost.ml[585,20302+4]..[585,20302+18])
                                              Pexp_ident "Format.fprintf" (middle_end/flambda/inlining_cost.ml[585,20302+4]..[585,20302+18])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[585,20302+19]..[585,20302+22])
                                                  Pexp_ident "ppf" (middle_end/flambda/inlining_cost.ml[585,20302+19]..[585,20302+22])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[585,20302+23]..[585,20302+59])
                                                  Pexp_constant PConst_string("%t@,@[<v>@[<v 2>@;%a@]@;@;%t%t@]%t",(middle_end/flambda/inlining_cost.ml[585,20302+24]..[585,20302+58]),None)
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[586,20362+6]..[586,20362+14])
                                                  Pexp_ident "pr_intro" (middle_end/flambda/inlining_cost.ml[586,20362+6]..[586,20362+14])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[586,20362+15]..[586,20362+34])
                                                  Pexp_ident "Benefit.print_table" (middle_end/flambda/inlining_cost.ml[586,20362+15]..[586,20362+34])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[586,20362+35]..[586,20362+44])
                                                  Pexp_field
                                                  expression (middle_end/flambda/inlining_cost.ml[586,20362+35]..[586,20362+36])
                                                    Pexp_ident "t" (middle_end/flambda/inlining_cost.ml[586,20362+35]..[586,20362+36])
                                                  "benefit" (middle_end/flambda/inlining_cost.ml[586,20362+37]..[586,20362+44])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[586,20362+45]..[586,20362+57])
                                                  Pexp_ident "pr_requested" (middle_end/flambda/inlining_cost.ml[586,20362+45]..[586,20362+57])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[586,20362+58]..[586,20362+68])
                                                  Pexp_ident "pr_lifting" (middle_end/flambda/inlining_cost.ml[586,20362+58]..[586,20362+68])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/inlining_cost.ml[587,20431+6]..[587,20431+19])
                                                  Pexp_ident "pr_conclusion" (middle_end/flambda/inlining_cost.ml[587,20431+6]..[587,20431+19])
                                            ]
            ]
        ]
  structure_item (middle_end/flambda/inlining_cost.ml[590,20456+0]..[590,20456+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inlining_cost.ml[590,20456+4]..[590,20456+29])
          Ppat_var "scale_inline_threshold_by" (middle_end/flambda/inlining_cost.ml[590,20456+4]..[590,20456+29])
        expression (middle_end/flambda/inlining_cost.ml[590,20456+32]..[590,20456+33])
          Pexp_constant PConst_int (8,None)
    ]
  structure_item (middle_end/flambda/inlining_cost.ml[592,20491+0]..[592,20491+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inlining_cost.ml[592,20491+4]..[592,20491+31])
          Ppat_var "default_toplevel_multiplier" (middle_end/flambda/inlining_cost.ml[592,20491+4]..[592,20491+31])
        expression (middle_end/flambda/inlining_cost.ml[592,20491+34]..[592,20491+35])
          Pexp_constant PConst_int (8,None)
    ]
  structure_item (middle_end/flambda/inlining_cost.ml[673,23783+0]..[684,24159+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inlining_cost.ml[673,23783+4]..[673,23783+50])
          Ppat_var "maximum_interesting_size_of_function_body_base" (middle_end/flambda/inlining_cost.ml[673,23783+4]..[673,23783+50])
        expression (middle_end/flambda/inlining_cost.ml[674,23836+2]..[684,24159+5])
          Pexp_lazy
          expression (middle_end/flambda/inlining_cost.ml[674,23836+7]..[684,24159+5])
            Pexp_let Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[675,23849+8]..[675,23849+16])
                  Ppat_var "max_cost" (middle_end/flambda/inlining_cost.ml[675,23849+8]..[675,23849+16])
                expression (middle_end/flambda/inlining_cost.ml[675,23849+19]..[675,23849+24])
                  Pexp_apply
                  expression (middle_end/flambda/inlining_cost.ml[675,23849+19]..[675,23849+22])
                    Pexp_ident "ref" (middle_end/flambda/inlining_cost.ml[675,23849+19]..[675,23849+22])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inlining_cost.ml[675,23849+23]..[675,23849+24])
                        Pexp_constant PConst_int (0,None)
                  ]
            ]
            expression (middle_end/flambda/inlining_cost.ml[676,23877+4]..[683,24145+13])
              Pexp_sequence
              expression (middle_end/flambda/inlining_cost.ml[676,23877+4]..[682,24135+8])
                Pexp_for Up
                pattern (middle_end/flambda/inlining_cost.ml[676,23877+8]..[676,23877+13])
                  Ppat_var "round" (middle_end/flambda/inlining_cost.ml[676,23877+8]..[676,23877+13])
                expression (middle_end/flambda/inlining_cost.ml[676,23877+16]..[676,23877+17])
                  Pexp_constant PConst_int (0,None)
                expression (middle_end/flambda/inlining_cost.ml[676,23877+21]..[676,23877+44])
                  Pexp_apply
                  expression (middle_end/flambda/inlining_cost.ml[676,23877+41]..[676,23877+42])
                    Pexp_ident "-" (middle_end/flambda/inlining_cost.ml[676,23877+41]..[676,23877+42])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inlining_cost.ml[676,23877+21]..[676,23877+40])
                        Pexp_apply
                        expression (middle_end/flambda/inlining_cost.ml[676,23877+22]..[676,23877+36])
                          Pexp_ident "Clflags.rounds" (middle_end/flambda/inlining_cost.ml[676,23877+22]..[676,23877+36])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inlining_cost.ml[676,23877+37]..[676,23877+39])
                              Pexp_construct "()" (middle_end/flambda/inlining_cost.ml[676,23877+37]..[676,23877+39])
                              None
                        ]
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inlining_cost.ml[676,23877+43]..[676,23877+44])
                        Pexp_constant PConst_int (1,None)
                  ]
                expression (middle_end/flambda/inlining_cost.ml[677,23925+6]..[681,24090+44])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/flambda/inlining_cost.ml[677,23925+10]..[677,23925+18])
                        Ppat_var "max_size" (middle_end/flambda/inlining_cost.ml[677,23925+10]..[677,23925+18])
                      expression (middle_end/flambda/inlining_cost.ml[678,23946+8]..[679,24018+62])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inlining_cost.ml[678,23946+12]..[678,23946+28])
                              Ppat_var "inline_call_cost" (middle_end/flambda/inlining_cost.ml[678,23946+12]..[678,23946+28])
                            expression (middle_end/flambda/inlining_cost.ml[678,23946+31]..[678,23946+68])
                              Pexp_apply
                              expression (middle_end/flambda/inlining_cost.ml[678,23946+31]..[678,23946+35])
                                Pexp_ident "cost" (middle_end/flambda/inlining_cost.ml[678,23946+31]..[678,23946+35])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[678,23946+36]..[678,23946+61])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[678,23946+36]..[678,23946+37])
                                      Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[678,23946+36]..[678,23946+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[678,23946+37]..[678,23946+61])
                                          Pexp_ident "Clflags.inline_call_cost" (middle_end/flambda/inlining_cost.ml[678,23946+37]..[678,23946+61])
                                    ]
                                <arg>
                                Labelled "round"
                                  expression (middle_end/flambda/inlining_cost.ml[678,23946+63]..[678,23946+68])
                                    Pexp_ident "round" (middle_end/flambda/inlining_cost.ml[678,23946+63]..[678,23946+68])
                              ]
                        ]
                        expression (middle_end/flambda/inlining_cost.ml[679,24018+8]..[679,24018+62])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[679,24018+25]..[679,24018+26])
                            Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[679,24018+25]..[679,24018+26])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[679,24018+8]..[679,24018+24])
                                Pexp_ident "direct_call_size" (middle_end/flambda/inlining_cost.ml[679,24018+8]..[679,24018+24])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[679,24018+27]..[679,24018+62])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[679,24018+45]..[679,24018+46])
                                  Pexp_ident "*" (middle_end/flambda/inlining_cost.ml[679,24018+45]..[679,24018+46])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[679,24018+28]..[679,24018+44])
                                      Pexp_ident "inline_call_cost" (middle_end/flambda/inlining_cost.ml[679,24018+28]..[679,24018+44])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[679,24018+47]..[679,24018+61])
                                      Pexp_ident "benefit_factor" (middle_end/flambda/inlining_cost.ml[679,24018+47]..[679,24018+61])
                                ]
                          ]
                  ]
                  expression (middle_end/flambda/inlining_cost.ml[681,24090+6]..[681,24090+44])
                    Pexp_apply
                    expression (middle_end/flambda/inlining_cost.ml[681,24090+15]..[681,24090+17])
                      Pexp_ident ":=" (middle_end/flambda/inlining_cost.ml[681,24090+15]..[681,24090+17])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[681,24090+6]..[681,24090+14])
                          Pexp_ident "max_cost" (middle_end/flambda/inlining_cost.ml[681,24090+6]..[681,24090+14])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[681,24090+18]..[681,24090+44])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[681,24090+18]..[681,24090+25])
                            Pexp_ident "Int.max" (middle_end/flambda/inlining_cost.ml[681,24090+18]..[681,24090+25])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[681,24090+26]..[681,24090+35])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[681,24090+26]..[681,24090+27])
                                  Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[681,24090+26]..[681,24090+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[681,24090+27]..[681,24090+35])
                                      Pexp_ident "max_cost" (middle_end/flambda/inlining_cost.ml[681,24090+27]..[681,24090+35])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[681,24090+36]..[681,24090+44])
                                Pexp_ident "max_size" (middle_end/flambda/inlining_cost.ml[681,24090+36]..[681,24090+44])
                          ]
                    ]
              expression (middle_end/flambda/inlining_cost.ml[683,24145+4]..[683,24145+13])
                Pexp_apply
                expression (middle_end/flambda/inlining_cost.ml[683,24145+4]..[683,24145+5])
                  Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[683,24145+4]..[683,24145+5])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/inlining_cost.ml[683,24145+5]..[683,24145+13])
                      Pexp_ident "max_cost" (middle_end/flambda/inlining_cost.ml[683,24145+5]..[683,24145+13])
                ]
    ]
  structure_item (middle_end/flambda/inlining_cost.ml[686,24166+0]..[697,24527+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inlining_cost.ml[686,24166+4]..[686,24166+56])
          Ppat_var "maximum_interesting_size_of_function_body_multiplier" (middle_end/flambda/inlining_cost.ml[686,24166+4]..[686,24166+56])
        expression (middle_end/flambda/inlining_cost.ml[687,24225+2]..[697,24527+5])
          Pexp_lazy
          expression (middle_end/flambda/inlining_cost.ml[687,24225+7]..[697,24527+5])
            Pexp_let Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[688,24238+8]..[688,24238+16])
                  Ppat_var "max_cost" (middle_end/flambda/inlining_cost.ml[688,24238+8]..[688,24238+16])
                expression (middle_end/flambda/inlining_cost.ml[688,24238+19]..[688,24238+24])
                  Pexp_apply
                  expression (middle_end/flambda/inlining_cost.ml[688,24238+19]..[688,24238+22])
                    Pexp_ident "ref" (middle_end/flambda/inlining_cost.ml[688,24238+19]..[688,24238+22])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inlining_cost.ml[688,24238+23]..[688,24238+24])
                        Pexp_constant PConst_int (0,None)
                  ]
            ]
            expression (middle_end/flambda/inlining_cost.ml[689,24266+4]..[696,24513+13])
              Pexp_sequence
              expression (middle_end/flambda/inlining_cost.ml[689,24266+4]..[695,24503+8])
                Pexp_for Up
                pattern (middle_end/flambda/inlining_cost.ml[689,24266+8]..[689,24266+13])
                  Ppat_var "round" (middle_end/flambda/inlining_cost.ml[689,24266+8]..[689,24266+13])
                expression (middle_end/flambda/inlining_cost.ml[689,24266+16]..[689,24266+17])
                  Pexp_constant PConst_int (0,None)
                expression (middle_end/flambda/inlining_cost.ml[689,24266+21]..[689,24266+44])
                  Pexp_apply
                  expression (middle_end/flambda/inlining_cost.ml[689,24266+41]..[689,24266+42])
                    Pexp_ident "-" (middle_end/flambda/inlining_cost.ml[689,24266+41]..[689,24266+42])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inlining_cost.ml[689,24266+21]..[689,24266+40])
                        Pexp_apply
                        expression (middle_end/flambda/inlining_cost.ml[689,24266+22]..[689,24266+36])
                          Pexp_ident "Clflags.rounds" (middle_end/flambda/inlining_cost.ml[689,24266+22]..[689,24266+36])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/inlining_cost.ml[689,24266+37]..[689,24266+39])
                              Pexp_construct "()" (middle_end/flambda/inlining_cost.ml[689,24266+37]..[689,24266+39])
                              None
                        ]
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inlining_cost.ml[689,24266+43]..[689,24266+44])
                        Pexp_constant PConst_int (1,None)
                  ]
                expression (middle_end/flambda/inlining_cost.ml[690,24314+6]..[694,24458+44])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (middle_end/flambda/inlining_cost.ml[690,24314+10]..[690,24314+18])
                        Ppat_var "max_size" (middle_end/flambda/inlining_cost.ml[690,24314+10]..[690,24314+18])
                      expression (middle_end/flambda/inlining_cost.ml[691,24335+8]..[692,24407+41])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/inlining_cost.ml[691,24335+12]..[691,24335+28])
                              Ppat_var "inline_prim_cost" (middle_end/flambda/inlining_cost.ml[691,24335+12]..[691,24335+28])
                            expression (middle_end/flambda/inlining_cost.ml[691,24335+31]..[691,24335+68])
                              Pexp_apply
                              expression (middle_end/flambda/inlining_cost.ml[691,24335+31]..[691,24335+35])
                                Pexp_ident "cost" (middle_end/flambda/inlining_cost.ml[691,24335+31]..[691,24335+35])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/inlining_cost.ml[691,24335+36]..[691,24335+61])
                                    Pexp_apply
                                    expression (middle_end/flambda/inlining_cost.ml[691,24335+36]..[691,24335+37])
                                      Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[691,24335+36]..[691,24335+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/inlining_cost.ml[691,24335+37]..[691,24335+61])
                                          Pexp_ident "Clflags.inline_prim_cost" (middle_end/flambda/inlining_cost.ml[691,24335+37]..[691,24335+61])
                                    ]
                                <arg>
                                Labelled "round"
                                  expression (middle_end/flambda/inlining_cost.ml[691,24335+63]..[691,24335+68])
                                    Pexp_ident "round" (middle_end/flambda/inlining_cost.ml[691,24335+63]..[691,24335+68])
                              ]
                        ]
                        expression (middle_end/flambda/inlining_cost.ml[692,24407+8]..[692,24407+41])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[692,24407+25]..[692,24407+26])
                            Pexp_ident "*" (middle_end/flambda/inlining_cost.ml[692,24407+25]..[692,24407+26])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[692,24407+8]..[692,24407+24])
                                Pexp_ident "inline_prim_cost" (middle_end/flambda/inlining_cost.ml[692,24407+8]..[692,24407+24])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[692,24407+27]..[692,24407+41])
                                Pexp_ident "benefit_factor" (middle_end/flambda/inlining_cost.ml[692,24407+27]..[692,24407+41])
                          ]
                  ]
                  expression (middle_end/flambda/inlining_cost.ml[694,24458+6]..[694,24458+44])
                    Pexp_apply
                    expression (middle_end/flambda/inlining_cost.ml[694,24458+15]..[694,24458+17])
                      Pexp_ident ":=" (middle_end/flambda/inlining_cost.ml[694,24458+15]..[694,24458+17])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[694,24458+6]..[694,24458+14])
                          Pexp_ident "max_cost" (middle_end/flambda/inlining_cost.ml[694,24458+6]..[694,24458+14])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[694,24458+18]..[694,24458+44])
                          Pexp_apply
                          expression (middle_end/flambda/inlining_cost.ml[694,24458+18]..[694,24458+25])
                            Pexp_ident "Int.max" (middle_end/flambda/inlining_cost.ml[694,24458+18]..[694,24458+25])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[694,24458+26]..[694,24458+35])
                                Pexp_apply
                                expression (middle_end/flambda/inlining_cost.ml[694,24458+26]..[694,24458+27])
                                  Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[694,24458+26]..[694,24458+27])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/inlining_cost.ml[694,24458+27]..[694,24458+35])
                                      Pexp_ident "max_cost" (middle_end/flambda/inlining_cost.ml[694,24458+27]..[694,24458+35])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/inlining_cost.ml[694,24458+36]..[694,24458+44])
                                Pexp_ident "max_size" (middle_end/flambda/inlining_cost.ml[694,24458+36]..[694,24458+44])
                          ]
                    ]
              expression (middle_end/flambda/inlining_cost.ml[696,24513+4]..[696,24513+13])
                Pexp_apply
                expression (middle_end/flambda/inlining_cost.ml[696,24513+4]..[696,24513+5])
                  Pexp_ident "!" (middle_end/flambda/inlining_cost.ml[696,24513+4]..[696,24513+5])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/inlining_cost.ml[696,24513+5]..[696,24513+13])
                      Pexp_ident "max_cost" (middle_end/flambda/inlining_cost.ml[696,24513+5]..[696,24513+13])
                ]
    ]
  structure_item (middle_end/flambda/inlining_cost.ml[699,24534+0]..[704,24767+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/inlining_cost.ml[699,24534+4]..[699,24534+45])
          Ppat_var "maximum_interesting_size_of_function_body" (middle_end/flambda/inlining_cost.ml[699,24534+4]..[699,24534+45])
        expression (middle_end/flambda/inlining_cost.ml[699,24534+46]..[704,24767+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/inlining_cost.ml[699,24534+46]..[699,24534+64])
            Ppat_var "num_free_variables" (middle_end/flambda/inlining_cost.ml[699,24534+46]..[699,24534+64])
          expression (middle_end/flambda/inlining_cost.ml[700,24601+2]..[704,24767+42])
            Pexp_let Nonrec
            [
              <def>
                pattern (middle_end/flambda/inlining_cost.ml[700,24601+6]..[700,24601+10])
                  Ppat_var "base" (middle_end/flambda/inlining_cost.ml[700,24601+6]..[700,24601+10])
                expression (middle_end/flambda/inlining_cost.ml[700,24601+13]..[700,24601+70])
                  Pexp_apply
                  expression (middle_end/flambda/inlining_cost.ml[700,24601+13]..[700,24601+23])
                    Pexp_ident "Lazy.force" (middle_end/flambda/inlining_cost.ml[700,24601+13]..[700,24601+23])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/inlining_cost.ml[700,24601+24]..[700,24601+70])
                        Pexp_ident "maximum_interesting_size_of_function_body_base" (middle_end/flambda/inlining_cost.ml[700,24601+24]..[700,24601+70])
                  ]
            ]
            expression (middle_end/flambda/inlining_cost.ml[701,24675+2]..[704,24767+42])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/inlining_cost.ml[701,24675+6]..[701,24675+16])
                    Ppat_var "multiplier" (middle_end/flambda/inlining_cost.ml[701,24675+6]..[701,24675+16])
                  expression (middle_end/flambda/inlining_cost.ml[702,24694+4]..[702,24694+67])
                    Pexp_apply
                    expression (middle_end/flambda/inlining_cost.ml[702,24694+4]..[702,24694+14])
                      Pexp_ident "Lazy.force" (middle_end/flambda/inlining_cost.ml[702,24694+4]..[702,24694+14])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/inlining_cost.ml[702,24694+15]..[702,24694+67])
                          Pexp_ident "maximum_interesting_size_of_function_body_multiplier" (middle_end/flambda/inlining_cost.ml[702,24694+15]..[702,24694+67])
                    ]
              ]
              expression (middle_end/flambda/inlining_cost.ml[704,24767+2]..[704,24767+42])
                Pexp_apply
                expression (middle_end/flambda/inlining_cost.ml[704,24767+7]..[704,24767+8])
                  Pexp_ident "+" (middle_end/flambda/inlining_cost.ml[704,24767+7]..[704,24767+8])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/inlining_cost.ml[704,24767+2]..[704,24767+6])
                      Pexp_ident "base" (middle_end/flambda/inlining_cost.ml[704,24767+2]..[704,24767+6])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/inlining_cost.ml[704,24767+9]..[704,24767+42])
                      Pexp_apply
                      expression (middle_end/flambda/inlining_cost.ml[704,24767+29]..[704,24767+30])
                        Pexp_ident "*" (middle_end/flambda/inlining_cost.ml[704,24767+29]..[704,24767+30])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[704,24767+10]..[704,24767+28])
                            Pexp_ident "num_free_variables" (middle_end/flambda/inlining_cost.ml[704,24767+10]..[704,24767+28])
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/inlining_cost.ml[704,24767+31]..[704,24767+41])
                            Pexp_ident "multiplier" (middle_end/flambda/inlining_cost.ml[704,24767+31]..[704,24767+41])
                      ]
                ]
    ]
]

