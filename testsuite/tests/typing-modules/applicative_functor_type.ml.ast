[
  structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[5,24+0]..[5,24+27])
    Pstr_type Rec
    [
      type_declaration "t" (testsuite/tests/typing-modules/applicative_functor_type.ml[5,24+5]..[5,24+6]) (testsuite/tests/typing-modules/applicative_functor_type.ml[5,24+0]..[5,24+27])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (testsuite/tests/typing-modules/applicative_functor_type.ml[5,24+9]..[5,24+27])
              Ptyp_constr "Set.Make(String).t" (testsuite/tests/typing-modules/applicative_functor_type.ml[5,24+9]..[5,24+27])
              []
    ]
  structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[6,52+0]..[8,92+4])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[6,52+9]..[8,92+2])
        Pstr_eval
        expression (testsuite/tests/typing-modules/applicative_functor_type.ml[6,52+9]..[8,92+2])
          Pexp_constant PConst_string ("\ntype t = Set.Make(String).t\n",(testsuite/tests/typing-modules/applicative_functor_type.ml[6,52+11]..[8,92+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[12,173+0]..[12,173+44])
    Pstr_module
    "M" (testsuite/tests/typing-modules/applicative_functor_type.ml[12,173+7]..[12,173+8])
      module_expr (testsuite/tests/typing-modules/applicative_functor_type.ml[12,173+11]..[12,173+44])
        Pmod_structure
        [
          structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[12,173+18]..[12,173+24])
            Pstr_type Rec
            [
              type_declaration "t" (testsuite/tests/typing-modules/applicative_functor_type.ml[12,173+23]..[12,173+24]) (testsuite/tests/typing-modules/applicative_functor_type.ml[12,173+18]..[12,173+24])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_abstract
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[12,173+25]..[12,173+40])
            Pstr_value Nonrec
            [
              <def>
                pattern (testsuite/tests/typing-modules/applicative_functor_type.ml[12,173+29]..[12,173+34])
                  Ppat_var "equal" (testsuite/tests/typing-modules/applicative_functor_type.ml[12,173+29]..[12,173+34])
                expression (testsuite/tests/typing-modules/applicative_functor_type.ml[12,173+37]..[12,173+40])
                  Pexp_ident "=" (testsuite/tests/typing-modules/applicative_functor_type.ml[12,173+37]..[12,173+40])
            ]
        ]
  structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[13,218+0]..[15,285+4])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[13,218+9]..[15,285+2])
        Pstr_eval
        expression (testsuite/tests/typing-modules/applicative_functor_type.ml[13,218+9]..[15,285+2])
          Pexp_constant PConst_string ("\nmodule M : sig type t val equal : 'a -> 'a -> bool end\n",(testsuite/tests/typing-modules/applicative_functor_type.ml[13,218+11]..[15,285+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[17,291+0]..[17,291+22])
    Pstr_type Rec
    [
      type_declaration "t" (testsuite/tests/typing-modules/applicative_functor_type.ml[17,291+5]..[17,291+6]) (testsuite/tests/typing-modules/applicative_functor_type.ml[17,291+0]..[17,291+22])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (testsuite/tests/typing-modules/applicative_functor_type.ml[17,291+9]..[17,291+22])
              Ptyp_constr "Set.Make(M).t" (testsuite/tests/typing-modules/applicative_functor_type.ml[17,291+9]..[17,291+22])
              []
    ]
  structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[18,314+0]..[27,653+4])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[18,314+9]..[27,653+2])
        Pstr_eval
        expression (testsuite/tests/typing-modules/applicative_functor_type.ml[18,314+9]..[27,653+2])
          Pexp_constant PConst_string ("\nLine 1, characters 9-22:\n1 | type t = Set.Make(M).t\n             ^^^^^^^^^^^^^\nError: Modules do not match:\n       sig type t = M.t val equal : 'a -> 'a -> bool end\n     is not included in Set.OrderedType\n     The value `compare' is required but not provided\n     File \"set.mli\", line 55, characters 4-31: Expected declaration\n",(testsuite/tests/typing-modules/applicative_functor_type.ml[18,314+11]..[27,653+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[32,780+0]..[33,832+21])
    Pstr_module
    "F" (testsuite/tests/typing-modules/applicative_functor_type.ml[32,780+7]..[32,780+8])
      module_expr (testsuite/tests/typing-modules/applicative_functor_type.ml[32,780+8]..[33,832+21])
        Pmod_functor "X" (testsuite/tests/typing-modules/applicative_functor_type.ml[32,780+9]..[32,780+10])
        module_type (testsuite/tests/typing-modules/applicative_functor_type.ml[32,780+13]..[32,780+50])
          Pmty_signature
          [
            signature_item (testsuite/tests/typing-modules/applicative_functor_type.ml[32,780+17]..[32,780+29])
              Psig_type Rec
              [
                type_declaration "t" (testsuite/tests/typing-modules/applicative_functor_type.ml[32,780+22]..[32,780+23]) (testsuite/tests/typing-modules/applicative_functor_type.ml[32,780+17]..[32,780+29])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (testsuite/tests/typing-modules/applicative_functor_type.ml[32,780+26]..[32,780+29])
                        Ptyp_constr "M.t" (testsuite/tests/typing-modules/applicative_functor_type.ml[32,780+26]..[32,780+29])
                        []
              ]
            signature_item (testsuite/tests/typing-modules/applicative_functor_type.ml[32,780+30]..[32,780+46])
              Psig_value
              value_description "equal" (testsuite/tests/typing-modules/applicative_functor_type.ml[32,780+34]..[32,780+39]) (testsuite/tests/typing-modules/applicative_functor_type.ml[32,780+30]..[32,780+46])
                core_type (testsuite/tests/typing-modules/applicative_functor_type.ml[32,780+42]..[32,780+46])
                  Ptyp_constr "unit" (testsuite/tests/typing-modules/applicative_functor_type.ml[32,780+42]..[32,780+46])
                  []
                []
          ]
        module_expr (testsuite/tests/typing-modules/applicative_functor_type.ml[33,832+4]..[33,832+21])
          Pmod_structure
          [
            structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[33,832+11]..[33,832+17])
              Pstr_type Rec
              [
                type_declaration "t" (testsuite/tests/typing-modules/applicative_functor_type.ml[33,832+16]..[33,832+17]) (testsuite/tests/typing-modules/applicative_functor_type.ml[33,832+11]..[33,832+17])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
          ]
  structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[34,854+0]..[37,949+4])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[34,854+9]..[37,949+2])
        Pstr_eval
        expression (testsuite/tests/typing-modules/applicative_functor_type.ml[34,854+9]..[37,949+2])
          Pexp_constant PConst_string ("\nmodule F :\n  functor (X : sig type t = M.t val equal : unit end) -> sig type t end\n",(testsuite/tests/typing-modules/applicative_functor_type.ml[34,854+11]..[37,949+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[39,955+0]..[39,955+15])
    Pstr_type Rec
    [
      type_declaration "t" (testsuite/tests/typing-modules/applicative_functor_type.ml[39,955+5]..[39,955+6]) (testsuite/tests/typing-modules/applicative_functor_type.ml[39,955+0]..[39,955+15])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (testsuite/tests/typing-modules/applicative_functor_type.ml[39,955+9]..[39,955+15])
              Ptyp_constr "F(M).t" (testsuite/tests/typing-modules/applicative_functor_type.ml[39,955+9]..[39,955+15])
              []
    ]
  structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[40,971+0]..[52,1374+4])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[40,971+9]..[52,1374+2])
        Pstr_eval
        expression (testsuite/tests/typing-modules/applicative_functor_type.ml[40,971+9]..[52,1374+2])
          Pexp_constant PConst_string ("\nLine 1, characters 9-15:\n1 | type t = F(M).t\n             ^^^^^^\nError: Modules do not match:\n       sig type t = M.t val equal : 'a -> 'a -> bool end\n     is not included in sig type t = M.t val equal : unit end\n     Values do not match:\n       val equal : 'a -> 'a -> bool\n     is not included in\n       val equal : unit\n     The type 'a -> 'a -> bool is not compatible with the type unit\n",(testsuite/tests/typing-modules/applicative_functor_type.ml[40,971+11]..[52,1374+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[56,1396+0]..[56,1396+39])
    Pstr_module
    "Generative" (testsuite/tests/typing-modules/applicative_functor_type.ml[56,1396+7]..[56,1396+17])
      module_expr (testsuite/tests/typing-modules/applicative_functor_type.ml[56,1396+17]..[56,1396+39])
        Pmod_functor ()
        module_expr (testsuite/tests/typing-modules/applicative_functor_type.ml[56,1396+22]..[56,1396+39])
          Pmod_structure
          [
            structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[56,1396+29]..[56,1396+35])
              Pstr_type Rec
              [
                type_declaration "t" (testsuite/tests/typing-modules/applicative_functor_type.ml[56,1396+34]..[56,1396+35]) (testsuite/tests/typing-modules/applicative_functor_type.ml[56,1396+29]..[56,1396+35])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    None
              ]
          ]
  structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[57,1436+0]..[59,1497+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[57,1436+9]..[59,1497+2])
        Pstr_eval
        expression (testsuite/tests/typing-modules/applicative_functor_type.ml[57,1436+9]..[59,1497+2])
          Pexp_constant PConst_string ("\nmodule Generative : functor () -> sig type t end\n",(testsuite/tests/typing-modules/applicative_functor_type.ml[57,1436+11]..[59,1497+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[61,1502+0]..[61,1502+24])
    Pstr_type Rec
    [
      type_declaration "t" (testsuite/tests/typing-modules/applicative_functor_type.ml[61,1502+5]..[61,1502+6]) (testsuite/tests/typing-modules/applicative_functor_type.ml[61,1502+0]..[61,1502+24])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (testsuite/tests/typing-modules/applicative_functor_type.ml[61,1502+9]..[61,1502+24])
              Ptyp_constr "Generative(M).t" (testsuite/tests/typing-modules/applicative_functor_type.ml[61,1502+9]..[61,1502+24])
              []
    ]
  structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[62,1527+0]..[68,1715+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[62,1527+9]..[68,1715+2])
        Pstr_eval
        expression (testsuite/tests/typing-modules/applicative_functor_type.ml[62,1527+9]..[68,1715+2])
          Pexp_constant PConst_string ("\nLine 1, characters 9-24:\n1 | type t = Generative(M).t\n             ^^^^^^^^^^^^^^^\nError: The functor Generative is generative, it cannot be applied in type\n       expressions\n",(testsuite/tests/typing-modules/applicative_functor_type.ml[62,1527+11]..[68,1715+0]),Some "")
    ]
  structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[72,1722+0]..[74,1806+3])
    Pstr_module
    "F" (testsuite/tests/typing-modules/applicative_functor_type.ml[72,1722+7]..[72,1722+8])
      module_expr (testsuite/tests/typing-modules/applicative_functor_type.ml[72,1722+8]..[74,1806+3])
        Pmod_functor "X" (testsuite/tests/typing-modules/applicative_functor_type.ml[72,1722+9]..[72,1722+10])
        module_type (testsuite/tests/typing-modules/applicative_functor_type.ml[72,1722+13]..[72,1722+47])
          Pmty_signature
          [
            signature_item (testsuite/tests/typing-modules/applicative_functor_type.ml[72,1722+17]..[72,1722+30])
              Psig_modtype "S" (testsuite/tests/typing-modules/applicative_functor_type.ml[72,1722+29]..[72,1722+30])
              #abstract            signature_item (testsuite/tests/typing-modules/applicative_functor_type.ml[72,1722+31]..[72,1722+43])
              Psig_module "F" (testsuite/tests/typing-modules/applicative_functor_type.ml[72,1722+38]..[72,1722+39])
              module_type (testsuite/tests/typing-modules/applicative_functor_type.ml[72,1722+42]..[72,1722+43])
                Pmty_ident "S" (testsuite/tests/typing-modules/applicative_functor_type.ml[72,1722+42]..[72,1722+43])
          ]
        module_expr (testsuite/tests/typing-modules/applicative_functor_type.ml[72,1722+51]..[74,1806+3])
          Pmod_structure
          [
            structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[73,1780+2]..[73,1780+25])
              Pstr_type Rec
              [
                type_declaration "t" (testsuite/tests/typing-modules/applicative_functor_type.ml[73,1780+7]..[73,1780+8]) (testsuite/tests/typing-modules/applicative_functor_type.ml[73,1780+2]..[73,1780+25])
                  ptype_params =
                    []
                  ptype_cstrs =
                    []
                  ptype_kind =
                    Ptype_abstract
                  ptype_private = Public
                  ptype_manifest =
                    Some
                      core_type (testsuite/tests/typing-modules/applicative_functor_type.ml[73,1780+11]..[73,1780+25])
                        Ptyp_constr "X.F(Parsing).t" (testsuite/tests/typing-modules/applicative_functor_type.ml[73,1780+11]..[73,1780+25])
                        []
              ]
          ]
  structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[75,1810+0]..[80,1964+3])
    Pstr_extension "expect"
    [
      structure_item (testsuite/tests/typing-modules/applicative_functor_type.ml[75,1810+9]..[80,1964+2])
        Pstr_eval
        expression (testsuite/tests/typing-modules/applicative_functor_type.ml[75,1810+9]..[80,1964+2])
          Pexp_constant PConst_string ("\nLine 2, characters 11-25:\n2 |   type t = X.F(Parsing).t\n               ^^^^^^^^^^^^^^\nError: The module X.F is abstract, it cannot be applied\n",(testsuite/tests/typing-modules/applicative_functor_type.ml[75,1810+11]..[80,1964+0]),Some "")
    ]
]

