[
  signature_item (middle_end/backend_intf.mli[17,1156+0]..[17,1156+39])
    Psig_attribute "ocaml.warning"
    [
      structure_item (middle_end/backend_intf.mli[17,1156+18]..[17,1156+38])
        Pstr_eval
        expression (middle_end/backend_intf.mli[17,1156+18]..[17,1156+38])
          Pexp_constant PConst_string("+a-4-9-30-40-41-42",(middle_end/backend_intf.mli[17,1156+19]..[17,1156+37]),None)
    ]
  signature_item (middle_end/backend_intf.mli[19,1197+0]..[19,1197+61])
    Psig_attribute "ocaml.text"
    [
      structure_item (middle_end/backend_intf.mli[19,1197+0]..[19,1197+61])
        Pstr_eval
        expression (middle_end/backend_intf.mli[19,1197+0]..[19,1197+61])
          Pexp_constant PConst_string(" Knowledge that the middle end needs about the backend. ",(middle_end/backend_intf.mli[19,1197+0]..[19,1197+61]),None)
    ]
  signature_item (middle_end/backend_intf.mli[21,1260+0]..[47,2420+3])
    Psig_modtype "S" (middle_end/backend_intf.mli[21,1260+12]..[21,1260+13])
      module_type (middle_end/backend_intf.mli[21,1260+16]..[47,2420+3])
        Pmty_signature
        [
          signature_item (middle_end/backend_intf.mli[23,1334+2]..[23,1334+48])
            Psig_value
            value_description "symbol_for_global'" (middle_end/backend_intf.mli[23,1334+6]..[23,1334+24]) (middle_end/backend_intf.mli[23,1334+2]..[23,1334+48])
              attribute "ocaml.doc"
                [
                  structure_item (middle_end/backend_intf.mli[22,1280+2]..[22,1280+53])
                    Pstr_eval
                    expression (middle_end/backend_intf.mli[22,1280+2]..[22,1280+53])
                      Pexp_constant PConst_string(" Compute the symbol for the given identifier. ",(middle_end/backend_intf.mli[22,1280+2]..[22,1280+53]),None)
                ]
              core_type (middle_end/backend_intf.mli[23,1334+28]..[23,1334+47])
                Ptyp_arrow
                Nolabel
                core_type (middle_end/backend_intf.mli[23,1334+28]..[23,1334+35])
                  Ptyp_constr "Ident.t" (middle_end/backend_intf.mli[23,1334+28]..[23,1334+35])
                  []
                core_type (middle_end/backend_intf.mli[23,1334+39]..[23,1334+47])
                  Ptyp_constr "Symbol.t" (middle_end/backend_intf.mli[23,1334+39]..[23,1334+47])
                  []
              []
          signature_item (middle_end/backend_intf.mli[29,1675+2]..[29,1675+75])
            Psig_value
            value_description "really_import_approx" (middle_end/backend_intf.mli[29,1675+6]..[29,1675+26]) (middle_end/backend_intf.mli[29,1675+2]..[29,1675+75])
              attribute "ocaml.doc"
                [
                  structure_item (middle_end/backend_intf.mli[25,1384+2]..[28,1600+74])
                    Pstr_eval
                    expression (middle_end/backend_intf.mli[25,1384+2]..[28,1600+74])
                      Pexp_constant PConst_string(" If the given approximation is that of a symbol (Value_symbol) or an\n      external (Value_extern), attempt to find a more informative\n      approximation from a previously-written compilation artifact.  In the\n      native code backend, for example, this might consult a .cmx file. ",(middle_end/backend_intf.mli[25,1384+2]..[28,1600+74]),None)
                ]
              core_type (middle_end/backend_intf.mli[29,1675+29]..[29,1675+75])
                Ptyp_arrow
                Nolabel
                core_type (middle_end/backend_intf.mli[29,1675+29]..[29,1675+50])
                  Ptyp_constr "Simple_value_approx.t" (middle_end/backend_intf.mli[29,1675+29]..[29,1675+50])
                  []
                core_type (middle_end/backend_intf.mli[29,1675+54]..[29,1675+75])
                  Ptyp_constr "Simple_value_approx.t" (middle_end/backend_intf.mli[29,1675+54]..[29,1675+75])
                  []
              []
          signature_item (middle_end/backend_intf.mli[31,1752+2]..[31,1752+55])
            Psig_value
            value_description "import_symbol" (middle_end/backend_intf.mli[31,1752+6]..[31,1752+19]) (middle_end/backend_intf.mli[31,1752+2]..[31,1752+55])
              core_type (middle_end/backend_intf.mli[31,1752+22]..[31,1752+55])
                Ptyp_arrow
                Nolabel
                core_type (middle_end/backend_intf.mli[31,1752+22]..[31,1752+30])
                  Ptyp_constr "Symbol.t" (middle_end/backend_intf.mli[31,1752+22]..[31,1752+30])
                  []
                core_type (middle_end/backend_intf.mli[31,1752+34]..[31,1752+55])
                  Ptyp_constr "Simple_value_approx.t" (middle_end/backend_intf.mli[31,1752+34]..[31,1752+55])
                  []
              []
          signature_item (middle_end/backend_intf.mli[33,1809+2]..[33,1809+47])
            Psig_value
            value_description "closure_symbol" (middle_end/backend_intf.mli[33,1809+6]..[33,1809+20]) (middle_end/backend_intf.mli[33,1809+2]..[33,1809+47])
              core_type (middle_end/backend_intf.mli[33,1809+23]..[33,1809+47])
                Ptyp_arrow
                Nolabel
                core_type (middle_end/backend_intf.mli[33,1809+23]..[33,1809+35])
                  Ptyp_constr "Closure_id.t" (middle_end/backend_intf.mli[33,1809+23]..[33,1809+35])
                  []
                core_type (middle_end/backend_intf.mli[33,1809+39]..[33,1809+47])
                  Ptyp_constr "Symbol.t" (middle_end/backend_intf.mli[33,1809+39]..[33,1809+47])
                  []
              []
          signature_item (middle_end/backend_intf.mli[37,1981+2]..[37,1981+20])
            Psig_value
            value_description "size_int" (middle_end/backend_intf.mli[37,1981+6]..[37,1981+14]) (middle_end/backend_intf.mli[37,1981+2]..[37,1981+20])
              attribute "ocaml.doc"
                [
                  structure_item (middle_end/backend_intf.mli[35,1858+2]..[36,1922+58])
                    Pstr_eval
                    expression (middle_end/backend_intf.mli[35,1858+2]..[36,1922+58])
                      Pexp_constant PConst_string(" The natural size of an integer on the target architecture\n      (cf. [Arch.size_int] in the native code backend). ",(middle_end/backend_intf.mli[35,1858+2]..[36,1922+58]),None)
                ]
              core_type (middle_end/backend_intf.mli[37,1981+17]..[37,1981+20])
                Ptyp_constr "int" (middle_end/backend_intf.mli[37,1981+17]..[37,1981+20])
                []
              []
          signature_item (middle_end/backend_intf.mli[40,2062+2]..[40,2062+23])
            Psig_value
            value_description "big_endian" (middle_end/backend_intf.mli[40,2062+6]..[40,2062+16]) (middle_end/backend_intf.mli[40,2062+2]..[40,2062+23])
              attribute "ocaml.doc"
                [
                  structure_item (middle_end/backend_intf.mli[39,2003+2]..[39,2003+58])
                    Pstr_eval
                    expression (middle_end/backend_intf.mli[39,2003+2]..[39,2003+58])
                      Pexp_constant PConst_string(" [true] iff the target architecture is big endian. ",(middle_end/backend_intf.mli[39,2003+2]..[39,2003+58]),None)
                ]
              core_type (middle_end/backend_intf.mli[40,2062+19]..[40,2062+23])
                Ptyp_constr "bool" (middle_end/backend_intf.mli[40,2062+19]..[40,2062+23])
                []
              []
          signature_item (middle_end/backend_intf.mli[46,2375+2]..[46,2375+44])
            Psig_value
            value_description "max_sensible_number_of_arguments" (middle_end/backend_intf.mli[46,2375+6]..[46,2375+38]) (middle_end/backend_intf.mli[46,2375+2]..[46,2375+44])
              attribute "ocaml.doc"
                [
                  structure_item (middle_end/backend_intf.mli[42,2087+2]..[45,2309+65])
                    Pstr_eval
                    expression (middle_end/backend_intf.mli[42,2087+2]..[45,2309+65])
                      Pexp_constant PConst_string(" The maximum number of arguments that is reasonable for a function\n      to have.  This should be fewer than the threshold that causes non-self\n      tail call optimization to be inhibited (in particular, if it would\n      entail passing arguments on the stack; see [Selectgen]). ",(middle_end/backend_intf.mli[42,2087+2]..[45,2309+65]),None)
                ]
              core_type (middle_end/backend_intf.mli[46,2375+41]..[46,2375+44])
                Ptyp_constr "int" (middle_end/backend_intf.mli[46,2375+41]..[46,2375+44])
                []
              []
        ]
]

