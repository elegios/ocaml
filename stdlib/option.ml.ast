[
  structure_item (stdlib/option.ml[16,1079+0]..[16,1079+41])
    Pstr_type Rec
    [
      type_declaration "t" (stdlib/option.ml[16,1079+8]..[16,1079+9]) (stdlib/option.ml[16,1079+0]..[16,1079+41])
        ptype_params =
          [
            core_type (stdlib/option.ml[16,1079+5]..[16,1079+7])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (stdlib/option.ml[16,1079+24]..[16,1079+28])
                "None" (stdlib/option.ml[16,1079+24]..[16,1079+28])
                []
                None
              (stdlib/option.ml[16,1079+29]..[16,1079+41])
                "Some" (stdlib/option.ml[16,1079+31]..[16,1079+35])
                [
                  core_type (stdlib/option.ml[16,1079+39]..[16,1079+41])
                    Ptyp_var a
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (stdlib/option.ml[16,1079+12]..[16,1079+21])
              Ptyp_constr "option" (stdlib/option.ml[16,1079+15]..[16,1079+21])
              [
                core_type (stdlib/option.ml[16,1079+12]..[16,1079+14])
                  Ptyp_var a
              ]
    ]
  structure_item (stdlib/option.ml[18,1122+0]..[18,1122+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/option.ml[18,1122+4]..[18,1122+8])
          Ppat_var "none" (stdlib/option.ml[18,1122+4]..[18,1122+8])
        expression (stdlib/option.ml[18,1122+11]..[18,1122+15])
          Pexp_construct "None" (stdlib/option.ml[18,1122+11]..[18,1122+15])
          None
    ]
  structure_item (stdlib/option.ml[19,1138+0]..[19,1138+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/option.ml[19,1138+4]..[19,1138+8])
          Ppat_var "some" (stdlib/option.ml[19,1138+4]..[19,1138+8])
        expression (stdlib/option.ml[19,1138+9]..[19,1138+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/option.ml[19,1138+9]..[19,1138+10])
            Ppat_var "v" (stdlib/option.ml[19,1138+9]..[19,1138+10])
          expression (stdlib/option.ml[19,1138+13]..[19,1138+19])
            Pexp_construct "Some" (stdlib/option.ml[19,1138+13]..[19,1138+17])
            Some
              expression (stdlib/option.ml[19,1138+18]..[19,1138+19])
                Pexp_ident "v" (stdlib/option.ml[19,1138+18]..[19,1138+19])
    ]
  structure_item (stdlib/option.ml[20,1158+0]..[20,1158+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/option.ml[20,1158+4]..[20,1158+9])
          Ppat_var "value" (stdlib/option.ml[20,1158+4]..[20,1158+9])
        expression (stdlib/option.ml[20,1158+10]..[20,1158+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/option.ml[20,1158+10]..[20,1158+11])
            Ppat_var "o" (stdlib/option.ml[20,1158+10]..[20,1158+11])
          expression (stdlib/option.ml[20,1158+12]..[20,1158+65]) ghost
            Pexp_fun
            Labelled "default"
            None
            pattern (stdlib/option.ml[20,1158+13]..[20,1158+20])
              Ppat_var "default" (stdlib/option.ml[20,1158+13]..[20,1158+20])
            expression (stdlib/option.ml[20,1158+23]..[20,1158+65])
              Pexp_match
              expression (stdlib/option.ml[20,1158+29]..[20,1158+30])
                Pexp_ident "o" (stdlib/option.ml[20,1158+29]..[20,1158+30])
              [
                <case>
                  pattern (stdlib/option.ml[20,1158+36]..[20,1158+42])
                    Ppat_construct "Some" (stdlib/option.ml[20,1158+36]..[20,1158+40])
                    Some
                      []
                      pattern (stdlib/option.ml[20,1158+41]..[20,1158+42])
                        Ppat_var "v" (stdlib/option.ml[20,1158+41]..[20,1158+42])
                  expression (stdlib/option.ml[20,1158+46]..[20,1158+47])
                    Pexp_ident "v" (stdlib/option.ml[20,1158+46]..[20,1158+47])
                <case>
                  pattern (stdlib/option.ml[20,1158+50]..[20,1158+54])
                    Ppat_construct "None" (stdlib/option.ml[20,1158+50]..[20,1158+54])
                    None
                  expression (stdlib/option.ml[20,1158+58]..[20,1158+65])
                    Pexp_ident "default" (stdlib/option.ml[20,1158+58]..[20,1158+65])
              ]
    ]
  structure_item (stdlib/option.ml[21,1224+0]..[21,1224+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/option.ml[21,1224+4]..[21,1224+7])
          Ppat_var "get" (stdlib/option.ml[21,1224+4]..[21,1224+7])
        expression (stdlib/option.ml[21,1224+10]..[21,1224+69])
          Pexp_function
          [
            <case>
              pattern (stdlib/option.ml[21,1224+19]..[21,1224+25])
                Ppat_construct "Some" (stdlib/option.ml[21,1224+19]..[21,1224+23])
                Some
                  []
                  pattern (stdlib/option.ml[21,1224+24]..[21,1224+25])
                    Ppat_var "v" (stdlib/option.ml[21,1224+24]..[21,1224+25])
              expression (stdlib/option.ml[21,1224+29]..[21,1224+30])
                Pexp_ident "v" (stdlib/option.ml[21,1224+29]..[21,1224+30])
            <case>
              pattern (stdlib/option.ml[21,1224+33]..[21,1224+37])
                Ppat_construct "None" (stdlib/option.ml[21,1224+33]..[21,1224+37])
                None
              expression (stdlib/option.ml[21,1224+41]..[21,1224+69])
                Pexp_apply
                expression (stdlib/option.ml[21,1224+41]..[21,1224+52])
                  Pexp_ident "invalid_arg" (stdlib/option.ml[21,1224+41]..[21,1224+52])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/option.ml[21,1224+53]..[21,1224+69])
                      Pexp_constant PConst_string("option is None",(stdlib/option.ml[21,1224+54]..[21,1224+68]),None)
                ]
          ]
    ]
  structure_item (stdlib/option.ml[22,1294+0]..[22,1294+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/option.ml[22,1294+4]..[22,1294+8])
          Ppat_var "bind" (stdlib/option.ml[22,1294+4]..[22,1294+8])
        expression (stdlib/option.ml[22,1294+9]..[22,1294+56]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/option.ml[22,1294+9]..[22,1294+10])
            Ppat_var "o" (stdlib/option.ml[22,1294+9]..[22,1294+10])
          expression (stdlib/option.ml[22,1294+11]..[22,1294+56]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/option.ml[22,1294+11]..[22,1294+12])
              Ppat_var "f" (stdlib/option.ml[22,1294+11]..[22,1294+12])
            expression (stdlib/option.ml[22,1294+15]..[22,1294+56])
              Pexp_match
              expression (stdlib/option.ml[22,1294+21]..[22,1294+22])
                Pexp_ident "o" (stdlib/option.ml[22,1294+21]..[22,1294+22])
              [
                <case>
                  pattern (stdlib/option.ml[22,1294+28]..[22,1294+32])
                    Ppat_construct "None" (stdlib/option.ml[22,1294+28]..[22,1294+32])
                    None
                  expression (stdlib/option.ml[22,1294+36]..[22,1294+40])
                    Pexp_construct "None" (stdlib/option.ml[22,1294+36]..[22,1294+40])
                    None
                <case>
                  pattern (stdlib/option.ml[22,1294+43]..[22,1294+49])
                    Ppat_construct "Some" (stdlib/option.ml[22,1294+43]..[22,1294+47])
                    Some
                      []
                      pattern (stdlib/option.ml[22,1294+48]..[22,1294+49])
                        Ppat_var "v" (stdlib/option.ml[22,1294+48]..[22,1294+49])
                  expression (stdlib/option.ml[22,1294+53]..[22,1294+56])
                    Pexp_apply
                    expression (stdlib/option.ml[22,1294+53]..[22,1294+54])
                      Pexp_ident "f" (stdlib/option.ml[22,1294+53]..[22,1294+54])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/option.ml[22,1294+55]..[22,1294+56])
                          Pexp_ident "v" (stdlib/option.ml[22,1294+55]..[22,1294+56])
                    ]
              ]
    ]
  structure_item (stdlib/option.ml[23,1351+0]..[23,1351+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/option.ml[23,1351+4]..[23,1351+8])
          Ppat_var "join" (stdlib/option.ml[23,1351+4]..[23,1351+8])
        expression (stdlib/option.ml[23,1351+11]..[23,1351+46])
          Pexp_function
          [
            <case>
              pattern (stdlib/option.ml[23,1351+20]..[23,1351+26])
                Ppat_construct "Some" (stdlib/option.ml[23,1351+20]..[23,1351+24])
                Some
                  []
                  pattern (stdlib/option.ml[23,1351+25]..[23,1351+26])
                    Ppat_var "o" (stdlib/option.ml[23,1351+25]..[23,1351+26])
              expression (stdlib/option.ml[23,1351+30]..[23,1351+31])
                Pexp_ident "o" (stdlib/option.ml[23,1351+30]..[23,1351+31])
            <case>
              pattern (stdlib/option.ml[23,1351+34]..[23,1351+38])
                Ppat_construct "None" (stdlib/option.ml[23,1351+34]..[23,1351+38])
                None
              expression (stdlib/option.ml[23,1351+42]..[23,1351+46])
                Pexp_construct "None" (stdlib/option.ml[23,1351+42]..[23,1351+46])
                None
          ]
    ]
  structure_item (stdlib/option.ml[24,1398+0]..[24,1398+62])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/option.ml[24,1398+4]..[24,1398+7])
          Ppat_var "map" (stdlib/option.ml[24,1398+4]..[24,1398+7])
        expression (stdlib/option.ml[24,1398+8]..[24,1398+62]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/option.ml[24,1398+8]..[24,1398+9])
            Ppat_var "f" (stdlib/option.ml[24,1398+8]..[24,1398+9])
          expression (stdlib/option.ml[24,1398+10]..[24,1398+62]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/option.ml[24,1398+10]..[24,1398+11])
              Ppat_var "o" (stdlib/option.ml[24,1398+10]..[24,1398+11])
            expression (stdlib/option.ml[24,1398+14]..[24,1398+62])
              Pexp_match
              expression (stdlib/option.ml[24,1398+20]..[24,1398+21])
                Pexp_ident "o" (stdlib/option.ml[24,1398+20]..[24,1398+21])
              [
                <case>
                  pattern (stdlib/option.ml[24,1398+27]..[24,1398+31])
                    Ppat_construct "None" (stdlib/option.ml[24,1398+27]..[24,1398+31])
                    None
                  expression (stdlib/option.ml[24,1398+35]..[24,1398+39])
                    Pexp_construct "None" (stdlib/option.ml[24,1398+35]..[24,1398+39])
                    None
                <case>
                  pattern (stdlib/option.ml[24,1398+42]..[24,1398+48])
                    Ppat_construct "Some" (stdlib/option.ml[24,1398+42]..[24,1398+46])
                    Some
                      []
                      pattern (stdlib/option.ml[24,1398+47]..[24,1398+48])
                        Ppat_var "v" (stdlib/option.ml[24,1398+47]..[24,1398+48])
                  expression (stdlib/option.ml[24,1398+52]..[24,1398+62])
                    Pexp_construct "Some" (stdlib/option.ml[24,1398+52]..[24,1398+56])
                    Some
                      expression (stdlib/option.ml[24,1398+57]..[24,1398+62])
                        Pexp_apply
                        expression (stdlib/option.ml[24,1398+58]..[24,1398+59])
                          Pexp_ident "f" (stdlib/option.ml[24,1398+58]..[24,1398+59])
                        [
                          <arg>
                          Nolabel
                            expression (stdlib/option.ml[24,1398+60]..[24,1398+61])
                              Pexp_ident "v" (stdlib/option.ml[24,1398+60]..[24,1398+61])
                        ]
              ]
    ]
  structure_item (stdlib/option.ml[25,1461+0]..[25,1461+63])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/option.ml[25,1461+4]..[25,1461+8])
          Ppat_var "fold" (stdlib/option.ml[25,1461+4]..[25,1461+8])
        expression (stdlib/option.ml[25,1461+9]..[25,1461+63]) ghost
          Pexp_fun
          Labelled "none"
          None
          pattern (stdlib/option.ml[25,1461+10]..[25,1461+14])
            Ppat_var "none" (stdlib/option.ml[25,1461+10]..[25,1461+14])
          expression (stdlib/option.ml[25,1461+15]..[25,1461+63]) ghost
            Pexp_fun
            Labelled "some"
            None
            pattern (stdlib/option.ml[25,1461+16]..[25,1461+20])
              Ppat_var "some" (stdlib/option.ml[25,1461+16]..[25,1461+20])
            expression (stdlib/option.ml[25,1461+23]..[25,1461+63])
              Pexp_function
              [
                <case>
                  pattern (stdlib/option.ml[25,1461+32]..[25,1461+38])
                    Ppat_construct "Some" (stdlib/option.ml[25,1461+32]..[25,1461+36])
                    Some
                      []
                      pattern (stdlib/option.ml[25,1461+37]..[25,1461+38])
                        Ppat_var "v" (stdlib/option.ml[25,1461+37]..[25,1461+38])
                  expression (stdlib/option.ml[25,1461+42]..[25,1461+48])
                    Pexp_apply
                    expression (stdlib/option.ml[25,1461+42]..[25,1461+46])
                      Pexp_ident "some" (stdlib/option.ml[25,1461+42]..[25,1461+46])
                    [
                      <arg>
                      Nolabel
                        expression (stdlib/option.ml[25,1461+47]..[25,1461+48])
                          Pexp_ident "v" (stdlib/option.ml[25,1461+47]..[25,1461+48])
                    ]
                <case>
                  pattern (stdlib/option.ml[25,1461+51]..[25,1461+55])
                    Ppat_construct "None" (stdlib/option.ml[25,1461+51]..[25,1461+55])
                    None
                  expression (stdlib/option.ml[25,1461+59]..[25,1461+63])
                    Pexp_ident "none" (stdlib/option.ml[25,1461+59]..[25,1461+63])
              ]
    ]
  structure_item (stdlib/option.ml[26,1525+0]..[26,1525+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/option.ml[26,1525+4]..[26,1525+8])
          Ppat_var "iter" (stdlib/option.ml[26,1525+4]..[26,1525+8])
        expression (stdlib/option.ml[26,1525+9]..[26,1525+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/option.ml[26,1525+9]..[26,1525+10])
            Ppat_var "f" (stdlib/option.ml[26,1525+9]..[26,1525+10])
          expression (stdlib/option.ml[26,1525+13]..[26,1525+48])
            Pexp_function
            [
              <case>
                pattern (stdlib/option.ml[26,1525+22]..[26,1525+28])
                  Ppat_construct "Some" (stdlib/option.ml[26,1525+22]..[26,1525+26])
                  Some
                    []
                    pattern (stdlib/option.ml[26,1525+27]..[26,1525+28])
                      Ppat_var "v" (stdlib/option.ml[26,1525+27]..[26,1525+28])
                expression (stdlib/option.ml[26,1525+32]..[26,1525+35])
                  Pexp_apply
                  expression (stdlib/option.ml[26,1525+32]..[26,1525+33])
                    Pexp_ident "f" (stdlib/option.ml[26,1525+32]..[26,1525+33])
                  [
                    <arg>
                    Nolabel
                      expression (stdlib/option.ml[26,1525+34]..[26,1525+35])
                        Pexp_ident "v" (stdlib/option.ml[26,1525+34]..[26,1525+35])
                  ]
              <case>
                pattern (stdlib/option.ml[26,1525+38]..[26,1525+42])
                  Ppat_construct "None" (stdlib/option.ml[26,1525+38]..[26,1525+42])
                  None
                expression (stdlib/option.ml[26,1525+46]..[26,1525+48])
                  Pexp_construct "()" (stdlib/option.ml[26,1525+46]..[26,1525+48])
                  None
            ]
    ]
  structure_item (stdlib/option.ml[27,1574+0]..[27,1574+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/option.ml[27,1574+4]..[27,1574+11])
          Ppat_var "is_none" (stdlib/option.ml[27,1574+4]..[27,1574+11])
        expression (stdlib/option.ml[27,1574+14]..[27,1574+53])
          Pexp_function
          [
            <case>
              pattern (stdlib/option.ml[27,1574+23]..[27,1574+27])
                Ppat_construct "None" (stdlib/option.ml[27,1574+23]..[27,1574+27])
                None
              expression (stdlib/option.ml[27,1574+31]..[27,1574+35])
                Pexp_construct "true" (stdlib/option.ml[27,1574+31]..[27,1574+35])
                None
            <case>
              pattern (stdlib/option.ml[27,1574+38]..[27,1574+44])
                Ppat_construct "Some" (stdlib/option.ml[27,1574+38]..[27,1574+42])
                Some
                  []
                  pattern (stdlib/option.ml[27,1574+43]..[27,1574+44])
                    Ppat_any
              expression (stdlib/option.ml[27,1574+48]..[27,1574+53])
                Pexp_construct "false" (stdlib/option.ml[27,1574+48]..[27,1574+53])
                None
          ]
    ]
  structure_item (stdlib/option.ml[28,1628+0]..[28,1628+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/option.ml[28,1628+4]..[28,1628+11])
          Ppat_var "is_some" (stdlib/option.ml[28,1628+4]..[28,1628+11])
        expression (stdlib/option.ml[28,1628+14]..[28,1628+53])
          Pexp_function
          [
            <case>
              pattern (stdlib/option.ml[28,1628+23]..[28,1628+27])
                Ppat_construct "None" (stdlib/option.ml[28,1628+23]..[28,1628+27])
                None
              expression (stdlib/option.ml[28,1628+31]..[28,1628+36])
                Pexp_construct "false" (stdlib/option.ml[28,1628+31]..[28,1628+36])
                None
            <case>
              pattern (stdlib/option.ml[28,1628+39]..[28,1628+45])
                Ppat_construct "Some" (stdlib/option.ml[28,1628+39]..[28,1628+43])
                Some
                  []
                  pattern (stdlib/option.ml[28,1628+44]..[28,1628+45])
                    Ppat_any
              expression (stdlib/option.ml[28,1628+49]..[28,1628+53])
                Pexp_construct "true" (stdlib/option.ml[28,1628+49]..[28,1628+53])
                None
          ]
    ]
  structure_item (stdlib/option.ml[30,1683+0]..[33,1774+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/option.ml[30,1683+4]..[30,1683+9])
          Ppat_var "equal" (stdlib/option.ml[30,1683+4]..[30,1683+9])
        expression (stdlib/option.ml[30,1683+10]..[33,1774+12]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/option.ml[30,1683+10]..[30,1683+12])
            Ppat_var "eq" (stdlib/option.ml[30,1683+10]..[30,1683+12])
          expression (stdlib/option.ml[30,1683+13]..[33,1774+12]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/option.ml[30,1683+13]..[30,1683+15])
              Ppat_var "o0" (stdlib/option.ml[30,1683+13]..[30,1683+15])
            expression (stdlib/option.ml[30,1683+16]..[33,1774+12]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/option.ml[30,1683+16]..[30,1683+18])
                Ppat_var "o1" (stdlib/option.ml[30,1683+16]..[30,1683+18])
              expression (stdlib/option.ml[30,1683+21]..[33,1774+12])
                Pexp_match
                expression (stdlib/option.ml[30,1683+27]..[30,1683+33])
                  Pexp_tuple
                  [
                    expression (stdlib/option.ml[30,1683+27]..[30,1683+29])
                      Pexp_ident "o0" (stdlib/option.ml[30,1683+27]..[30,1683+29])
                    expression (stdlib/option.ml[30,1683+31]..[30,1683+33])
                      Pexp_ident "o1" (stdlib/option.ml[30,1683+31]..[30,1683+33])
                  ]
                [
                  <case>
                    pattern (stdlib/option.ml[31,1722+2]..[31,1722+18])
                      Ppat_tuple
                      [
                        pattern (stdlib/option.ml[31,1722+2]..[31,1722+9])
                          Ppat_construct "Some" (stdlib/option.ml[31,1722+2]..[31,1722+6])
                          Some
                            []
                            pattern (stdlib/option.ml[31,1722+7]..[31,1722+9])
                              Ppat_var "v0" (stdlib/option.ml[31,1722+7]..[31,1722+9])
                        pattern (stdlib/option.ml[31,1722+11]..[31,1722+18])
                          Ppat_construct "Some" (stdlib/option.ml[31,1722+11]..[31,1722+15])
                          Some
                            []
                            pattern (stdlib/option.ml[31,1722+16]..[31,1722+18])
                              Ppat_var "v1" (stdlib/option.ml[31,1722+16]..[31,1722+18])
                      ]
                    expression (stdlib/option.ml[31,1722+22]..[31,1722+30])
                      Pexp_apply
                      expression (stdlib/option.ml[31,1722+22]..[31,1722+24])
                        Pexp_ident "eq" (stdlib/option.ml[31,1722+22]..[31,1722+24])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/option.ml[31,1722+25]..[31,1722+27])
                            Pexp_ident "v0" (stdlib/option.ml[31,1722+25]..[31,1722+27])
                        <arg>
                        Nolabel
                          expression (stdlib/option.ml[31,1722+28]..[31,1722+30])
                            Pexp_ident "v1" (stdlib/option.ml[31,1722+28]..[31,1722+30])
                      ]
                  <case>
                    pattern (stdlib/option.ml[32,1753+2]..[32,1753+12])
                      Ppat_tuple
                      [
                        pattern (stdlib/option.ml[32,1753+2]..[32,1753+6])
                          Ppat_construct "None" (stdlib/option.ml[32,1753+2]..[32,1753+6])
                          None
                        pattern (stdlib/option.ml[32,1753+8]..[32,1753+12])
                          Ppat_construct "None" (stdlib/option.ml[32,1753+8]..[32,1753+12])
                          None
                      ]
                    expression (stdlib/option.ml[32,1753+16]..[32,1753+20])
                      Pexp_construct "true" (stdlib/option.ml[32,1753+16]..[32,1753+20])
                      None
                  <case>
                    pattern (stdlib/option.ml[33,1774+2]..[33,1774+3])
                      Ppat_any
                    expression (stdlib/option.ml[33,1774+7]..[33,1774+12])
                      Pexp_construct "false" (stdlib/option.ml[33,1774+7]..[33,1774+12])
                      None
                ]
    ]
  structure_item (stdlib/option.ml[35,1788+0]..[39,1901+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/option.ml[35,1788+4]..[35,1788+11])
          Ppat_var "compare" (stdlib/option.ml[35,1788+4]..[35,1788+11])
        expression (stdlib/option.ml[35,1788+12]..[39,1901+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (stdlib/option.ml[35,1788+12]..[35,1788+15])
            Ppat_var "cmp" (stdlib/option.ml[35,1788+12]..[35,1788+15])
          expression (stdlib/option.ml[35,1788+16]..[39,1901+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (stdlib/option.ml[35,1788+16]..[35,1788+18])
              Ppat_var "o0" (stdlib/option.ml[35,1788+16]..[35,1788+18])
            expression (stdlib/option.ml[35,1788+19]..[39,1901+19]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (stdlib/option.ml[35,1788+19]..[35,1788+21])
                Ppat_var "o1" (stdlib/option.ml[35,1788+19]..[35,1788+21])
              expression (stdlib/option.ml[35,1788+24]..[39,1901+19])
                Pexp_match
                expression (stdlib/option.ml[35,1788+30]..[35,1788+36])
                  Pexp_tuple
                  [
                    expression (stdlib/option.ml[35,1788+30]..[35,1788+32])
                      Pexp_ident "o0" (stdlib/option.ml[35,1788+30]..[35,1788+32])
                    expression (stdlib/option.ml[35,1788+34]..[35,1788+36])
                      Pexp_ident "o1" (stdlib/option.ml[35,1788+34]..[35,1788+36])
                  ]
                [
                  <case>
                    pattern (stdlib/option.ml[36,1830+2]..[36,1830+18])
                      Ppat_tuple
                      [
                        pattern (stdlib/option.ml[36,1830+2]..[36,1830+9])
                          Ppat_construct "Some" (stdlib/option.ml[36,1830+2]..[36,1830+6])
                          Some
                            []
                            pattern (stdlib/option.ml[36,1830+7]..[36,1830+9])
                              Ppat_var "v0" (stdlib/option.ml[36,1830+7]..[36,1830+9])
                        pattern (stdlib/option.ml[36,1830+11]..[36,1830+18])
                          Ppat_construct "Some" (stdlib/option.ml[36,1830+11]..[36,1830+15])
                          Some
                            []
                            pattern (stdlib/option.ml[36,1830+16]..[36,1830+18])
                              Ppat_var "v1" (stdlib/option.ml[36,1830+16]..[36,1830+18])
                      ]
                    expression (stdlib/option.ml[36,1830+22]..[36,1830+31])
                      Pexp_apply
                      expression (stdlib/option.ml[36,1830+22]..[36,1830+25])
                        Pexp_ident "cmp" (stdlib/option.ml[36,1830+22]..[36,1830+25])
                      [
                        <arg>
                        Nolabel
                          expression (stdlib/option.ml[36,1830+26]..[36,1830+28])
                            Pexp_ident "v0" (stdlib/option.ml[36,1830+26]..[36,1830+28])
                        <arg>
                        Nolabel
                          expression (stdlib/option.ml[36,1830+29]..[36,1830+31])
                            Pexp_ident "v1" (stdlib/option.ml[36,1830+29]..[36,1830+31])
                      ]
                  <case>
                    pattern (stdlib/option.ml[37,1862+2]..[37,1862+12])
                      Ppat_tuple
                      [
                        pattern (stdlib/option.ml[37,1862+2]..[37,1862+6])
                          Ppat_construct "None" (stdlib/option.ml[37,1862+2]..[37,1862+6])
                          None
                        pattern (stdlib/option.ml[37,1862+8]..[37,1862+12])
                          Ppat_construct "None" (stdlib/option.ml[37,1862+8]..[37,1862+12])
                          None
                      ]
                    expression (stdlib/option.ml[37,1862+16]..[37,1862+17])
                      Pexp_constant PConst_int (0,None)
                  <case>
                    pattern (stdlib/option.ml[38,1880+2]..[38,1880+14])
                      Ppat_tuple
                      [
                        pattern (stdlib/option.ml[38,1880+2]..[38,1880+6])
                          Ppat_construct "None" (stdlib/option.ml[38,1880+2]..[38,1880+6])
                          None
                        pattern (stdlib/option.ml[38,1880+8]..[38,1880+14])
                          Ppat_construct "Some" (stdlib/option.ml[38,1880+8]..[38,1880+12])
                          Some
                            []
                            pattern (stdlib/option.ml[38,1880+13]..[38,1880+14])
                              Ppat_any
                      ]
                    expression (stdlib/option.ml[38,1880+18]..[38,1880+20])
                      Pexp_constant PConst_int (-1,None)
                  <case>
                    pattern (stdlib/option.ml[39,1901+2]..[39,1901+14])
                      Ppat_tuple
                      [
                        pattern (stdlib/option.ml[39,1901+2]..[39,1901+8])
                          Ppat_construct "Some" (stdlib/option.ml[39,1901+2]..[39,1901+6])
                          Some
                            []
                            pattern (stdlib/option.ml[39,1901+7]..[39,1901+8])
                              Ppat_any
                        pattern (stdlib/option.ml[39,1901+10]..[39,1901+14])
                          Ppat_construct "None" (stdlib/option.ml[39,1901+10]..[39,1901+14])
                          None
                      ]
                    expression (stdlib/option.ml[39,1901+18]..[39,1901+19])
                      Pexp_constant PConst_int (1,None)
                ]
    ]
  structure_item (stdlib/option.ml[41,1922+0]..[41,1922+66])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/option.ml[41,1922+4]..[41,1922+13])
          Ppat_var "to_result" (stdlib/option.ml[41,1922+4]..[41,1922+13])
        expression (stdlib/option.ml[41,1922+14]..[41,1922+66]) ghost
          Pexp_fun
          Labelled "none"
          None
          pattern (stdlib/option.ml[41,1922+15]..[41,1922+19])
            Ppat_var "none" (stdlib/option.ml[41,1922+15]..[41,1922+19])
          expression (stdlib/option.ml[41,1922+22]..[41,1922+66])
            Pexp_function
            [
              <case>
                pattern (stdlib/option.ml[41,1922+31]..[41,1922+35])
                  Ppat_construct "None" (stdlib/option.ml[41,1922+31]..[41,1922+35])
                  None
                expression (stdlib/option.ml[41,1922+39]..[41,1922+49])
                  Pexp_construct "Error" (stdlib/option.ml[41,1922+39]..[41,1922+44])
                  Some
                    expression (stdlib/option.ml[41,1922+45]..[41,1922+49])
                      Pexp_ident "none" (stdlib/option.ml[41,1922+45]..[41,1922+49])
              <case>
                pattern (stdlib/option.ml[41,1922+52]..[41,1922+58])
                  Ppat_construct "Some" (stdlib/option.ml[41,1922+52]..[41,1922+56])
                  Some
                    []
                    pattern (stdlib/option.ml[41,1922+57]..[41,1922+58])
                      Ppat_var "v" (stdlib/option.ml[41,1922+57]..[41,1922+58])
                expression (stdlib/option.ml[41,1922+62]..[41,1922+66])
                  Pexp_construct "Ok" (stdlib/option.ml[41,1922+62]..[41,1922+64])
                  Some
                    expression (stdlib/option.ml[41,1922+65]..[41,1922+66])
                      Pexp_ident "v" (stdlib/option.ml[41,1922+65]..[41,1922+66])
            ]
    ]
  structure_item (stdlib/option.ml[42,1989+0]..[42,1989+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/option.ml[42,1989+4]..[42,1989+11])
          Ppat_var "to_list" (stdlib/option.ml[42,1989+4]..[42,1989+11])
        expression (stdlib/option.ml[42,1989+14]..[42,1989+49])
          Pexp_function
          [
            <case>
              pattern (stdlib/option.ml[42,1989+23]..[42,1989+27])
                Ppat_construct "None" (stdlib/option.ml[42,1989+23]..[42,1989+27])
                None
              expression (stdlib/option.ml[42,1989+31]..[42,1989+33])
                Pexp_construct "[]" (stdlib/option.ml[42,1989+31]..[42,1989+33])
                None
            <case>
              pattern (stdlib/option.ml[42,1989+36]..[42,1989+42])
                Ppat_construct "Some" (stdlib/option.ml[42,1989+36]..[42,1989+40])
                Some
                  []
                  pattern (stdlib/option.ml[42,1989+41]..[42,1989+42])
                    Ppat_var "v" (stdlib/option.ml[42,1989+41]..[42,1989+42])
              expression (stdlib/option.ml[42,1989+46]..[42,1989+49])
                Pexp_construct "::" (stdlib/option.ml[42,1989+47]..[42,1989+49]) ghost
                Some
                  expression (stdlib/option.ml[42,1989+47]..[42,1989+49]) ghost
                    Pexp_tuple
                    [
                      expression (stdlib/option.ml[42,1989+47]..[42,1989+48])
                        Pexp_ident "v" (stdlib/option.ml[42,1989+47]..[42,1989+48])
                      expression (stdlib/option.ml[42,1989+48]..[42,1989+49]) ghost
                        Pexp_construct "[]" (stdlib/option.ml[42,1989+48]..[42,1989+49]) ghost
                        None
                    ]
          ]
    ]
  structure_item (stdlib/option.ml[43,2039+0]..[43,2039+64])
    Pstr_value Nonrec
    [
      <def>
        pattern (stdlib/option.ml[43,2039+4]..[43,2039+10])
          Ppat_var "to_seq" (stdlib/option.ml[43,2039+4]..[43,2039+10])
        expression (stdlib/option.ml[43,2039+13]..[43,2039+64])
          Pexp_function
          [
            <case>
              pattern (stdlib/option.ml[43,2039+22]..[43,2039+26])
                Ppat_construct "None" (stdlib/option.ml[43,2039+22]..[43,2039+26])
                None
              expression (stdlib/option.ml[43,2039+30]..[43,2039+39])
                Pexp_ident "Seq.empty" (stdlib/option.ml[43,2039+30]..[43,2039+39])
            <case>
              pattern (stdlib/option.ml[43,2039+42]..[43,2039+48])
                Ppat_construct "Some" (stdlib/option.ml[43,2039+42]..[43,2039+46])
                Some
                  []
                  pattern (stdlib/option.ml[43,2039+47]..[43,2039+48])
                    Ppat_var "v" (stdlib/option.ml[43,2039+47]..[43,2039+48])
              expression (stdlib/option.ml[43,2039+52]..[43,2039+64])
                Pexp_apply
                expression (stdlib/option.ml[43,2039+52]..[43,2039+62])
                  Pexp_ident "Seq.return" (stdlib/option.ml[43,2039+52]..[43,2039+62])
                [
                  <arg>
                  Nolabel
                    expression (stdlib/option.ml[43,2039+63]..[43,2039+64])
                      Pexp_ident "v" (stdlib/option.ml[43,2039+63]..[43,2039+64])
                ]
          ]
    ]
]

