[
  structure_item (asmcomp/asmgen.ml[18,1115+0]..[18,1115+36])
    Pstr_attribute "ocaml.warning"
    [
      structure_item (asmcomp/asmgen.ml[18,1115+18]..[18,1115+35])
        Pstr_eval
        expression (asmcomp/asmgen.ml[18,1115+18]..[18,1115+35])
          Pexp_constant PConst_string("+a-4-9-40-41-42",(asmcomp/asmgen.ml[18,1115+19]..[18,1115+34]),None)
    ]
  structure_item (asmcomp/asmgen.ml[20,1153+0]..[20,1153+11])
    Pstr_open Fresh
    module_expr (asmcomp/asmgen.ml[20,1153+5]..[20,1153+11])
      Pmod_ident "Format" (asmcomp/asmgen.ml[20,1153+5]..[20,1153+11])
  structure_item (asmcomp/asmgen.ml[21,1165+0]..[21,1165+11])
    Pstr_open Fresh
    module_expr (asmcomp/asmgen.ml[21,1165+5]..[21,1165+11])
      Pmod_ident "Config" (asmcomp/asmgen.ml[21,1165+5]..[21,1165+11])
  structure_item (asmcomp/asmgen.ml[22,1177+0]..[22,1177+12])
    Pstr_open Fresh
    module_expr (asmcomp/asmgen.ml[22,1177+5]..[22,1177+12])
      Pmod_ident "Clflags" (asmcomp/asmgen.ml[22,1177+5]..[22,1177+12])
  structure_item (asmcomp/asmgen.ml[23,1190+0]..[23,1190+9])
    Pstr_open Fresh
    module_expr (asmcomp/asmgen.ml[23,1190+5]..[23,1190+9])
      Pmod_ident "Misc" (asmcomp/asmgen.ml[23,1190+5]..[23,1190+9])
  structure_item (asmcomp/asmgen.ml[24,1200+0]..[24,1200+8])
    Pstr_open Fresh
    module_expr (asmcomp/asmgen.ml[24,1200+5]..[24,1200+8])
      Pmod_ident "Cmm" (asmcomp/asmgen.ml[24,1200+5]..[24,1200+8])
  structure_item (asmcomp/asmgen.ml[26,1210+0]..[29,1294+44])
    Pstr_type Rec
    [
      type_declaration "error" (asmcomp/asmgen.ml[26,1210+5]..[26,1210+10]) (asmcomp/asmgen.ml[26,1210+0]..[29,1294+44])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (asmcomp/asmgen.ml[27,1223+2]..[27,1223+29])
                "Assembler_error" (asmcomp/asmgen.ml[27,1223+4]..[27,1223+19])
                [
                  core_type (asmcomp/asmgen.ml[27,1223+23]..[27,1223+29])
                    Ptyp_constr "string" (asmcomp/asmgen.ml[27,1223+23]..[27,1223+29])
                    []
                ]
                None
              (asmcomp/asmgen.ml[28,1253+2]..[28,1253+40])
                "Mismatched_for_pack" (asmcomp/asmgen.ml[28,1253+4]..[28,1253+23])
                [
                  core_type (asmcomp/asmgen.ml[28,1253+27]..[28,1253+40])
                    Ptyp_constr "option" (asmcomp/asmgen.ml[28,1253+34]..[28,1253+40])
                    [
                      core_type (asmcomp/asmgen.ml[28,1253+27]..[28,1253+33])
                        Ptyp_constr "string" (asmcomp/asmgen.ml[28,1253+27]..[28,1253+33])
                        []
                    ]
                ]
                None
              (asmcomp/asmgen.ml[29,1294+2]..[29,1294+44])
                "Asm_generation" (asmcomp/asmgen.ml[29,1294+4]..[29,1294+18])
                [
                  core_type (asmcomp/asmgen.ml[29,1294+22]..[29,1294+28])
                    Ptyp_constr "string" (asmcomp/asmgen.ml[29,1294+22]..[29,1294+28])
                    []
                  core_type (asmcomp/asmgen.ml[29,1294+31]..[29,1294+44])
                    Ptyp_constr "Emitaux.error" (asmcomp/asmgen.ml[29,1294+31]..[29,1294+44])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (asmcomp/asmgen.ml[31,1340+0]..[31,1340+24])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (asmcomp/asmgen.ml[31,1340+0]..[31,1340+24])
          pext_name = "Error"
          pext_kind =
            Pext_decl
              [
                core_type (asmcomp/asmgen.ml[31,1340+19]..[31,1340+24])
                  Ptyp_constr "error" (asmcomp/asmgen.ml[31,1340+19]..[31,1340+24])
                  []
              ]
              None
  structure_item (asmcomp/asmgen.ml[33,1366+0]..[41,1706+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[33,1366+4]..[33,1366+18])
          Ppat_var "cmm_invariants" (asmcomp/asmgen.ml[33,1366+4]..[33,1366+18])
        expression (asmcomp/asmgen.ml[33,1366+19]..[41,1706+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[33,1366+19]..[33,1366+22])
            Ppat_var "ppf" (asmcomp/asmgen.ml[33,1366+19]..[33,1366+22])
          expression (asmcomp/asmgen.ml[33,1366+23]..[41,1706+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/asmgen.ml[33,1366+23]..[33,1366+29])
              Ppat_var "fd_cmm" (asmcomp/asmgen.ml[33,1366+23]..[33,1366+29])
            expression (asmcomp/asmgen.ml[34,1398+2]..[41,1706+8])
              Pexp_let Nonrec
              [
                <def>
                  pattern (asmcomp/asmgen.ml[34,1398+6]..[34,1398+19])
                    Ppat_var "print_fundecl" (asmcomp/asmgen.ml[34,1398+6]..[34,1398+19])
                  expression (asmcomp/asmgen.ml[35,1420+4]..[36,1467+64])
                    Pexp_ifthenelse
                    expression (asmcomp/asmgen.ml[35,1420+7]..[35,1420+24])
                      Pexp_apply
                      expression (asmcomp/asmgen.ml[35,1420+7]..[35,1420+8])
                        Pexp_ident "!" (asmcomp/asmgen.ml[35,1420+7]..[35,1420+8])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/asmgen.ml[35,1420+8]..[35,1420+24])
                            Pexp_ident "Clflags.dump_cmm" (asmcomp/asmgen.ml[35,1420+8]..[35,1420+24])
                      ]
                    expression (asmcomp/asmgen.ml[35,1420+30]..[35,1420+46])
                      Pexp_ident "Printcmm.fundecl" (asmcomp/asmgen.ml[35,1420+30]..[35,1420+46])
                    Some
                      expression (asmcomp/asmgen.ml[36,1467+9]..[36,1467+64])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (asmcomp/asmgen.ml[36,1467+13]..[36,1467+16])
                          Ppat_var "ppf" (asmcomp/asmgen.ml[36,1467+13]..[36,1467+16])
                        expression (asmcomp/asmgen.ml[36,1467+17]..[36,1467+64]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (asmcomp/asmgen.ml[36,1467+17]..[36,1467+22])
                            Ppat_var "fdecl" (asmcomp/asmgen.ml[36,1467+17]..[36,1467+22])
                          expression (asmcomp/asmgen.ml[36,1467+26]..[36,1467+64])
                            Pexp_apply
                            expression (asmcomp/asmgen.ml[36,1467+26]..[36,1467+40])
                              Pexp_ident "Format.fprintf" (asmcomp/asmgen.ml[36,1467+26]..[36,1467+40])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/asmgen.ml[36,1467+41]..[36,1467+44])
                                  Pexp_ident "ppf" (asmcomp/asmgen.ml[36,1467+41]..[36,1467+44])
                              <arg>
                              Nolabel
                                expression (asmcomp/asmgen.ml[36,1467+45]..[36,1467+49])
                                  Pexp_constant PConst_string("%s",(asmcomp/asmgen.ml[36,1467+46]..[36,1467+48]),None)
                              <arg>
                              Nolabel
                                expression (asmcomp/asmgen.ml[36,1467+50]..[36,1467+64])
                                  Pexp_field
                                  expression (asmcomp/asmgen.ml[36,1467+50]..[36,1467+55])
                                    Pexp_ident "fdecl" (asmcomp/asmgen.ml[36,1467+50]..[36,1467+55])
                                  "fun_name" (asmcomp/asmgen.ml[36,1467+56]..[36,1467+64])
                            ]
              ]
              expression (asmcomp/asmgen.ml[38,1537+2]..[41,1706+8])
                Pexp_sequence
                expression (asmcomp/asmgen.ml[38,1537+2]..[40,1678+26])
                  Pexp_ifthenelse
                  expression (asmcomp/asmgen.ml[38,1537+5]..[38,1537+61])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[38,1537+29]..[38,1537+31])
                      Pexp_ident "&&" (asmcomp/asmgen.ml[38,1537+29]..[38,1537+31])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[38,1537+5]..[38,1537+28])
                          Pexp_apply
                          expression (asmcomp/asmgen.ml[38,1537+5]..[38,1537+6])
                            Pexp_ident "!" (asmcomp/asmgen.ml[38,1537+5]..[38,1537+6])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[38,1537+6]..[38,1537+28])
                                Pexp_ident "Clflags.cmm_invariants" (asmcomp/asmgen.ml[38,1537+6]..[38,1537+28])
                          ]
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[38,1537+32]..[38,1537+61])
                          Pexp_apply
                          expression (asmcomp/asmgen.ml[38,1537+32]..[38,1537+50])
                            Pexp_ident "Cmm_invariants.run" (asmcomp/asmgen.ml[38,1537+32]..[38,1537+50])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[38,1537+51]..[38,1537+54])
                                Pexp_ident "ppf" (asmcomp/asmgen.ml[38,1537+51]..[38,1537+54])
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[38,1537+55]..[38,1537+61])
                                Pexp_ident "fd_cmm" (asmcomp/asmgen.ml[38,1537+55]..[38,1537+61])
                          ]
                    ]
                  expression (asmcomp/asmgen.ml[39,1604+4]..[40,1678+26])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[39,1604+4]..[39,1604+21])
                      Pexp_ident "Misc.fatal_errorf" (asmcomp/asmgen.ml[39,1604+4]..[39,1604+21])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[39,1604+22]..[39,1604+73])
                          Pexp_constant PConst_string("Cmm invariants failed on following fundecl:@.%a@.",(asmcomp/asmgen.ml[39,1604+23]..[39,1604+72]),None)
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[40,1678+6]..[40,1678+19])
                          Pexp_ident "print_fundecl" (asmcomp/asmgen.ml[40,1678+6]..[40,1678+19])
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[40,1678+20]..[40,1678+26])
                          Pexp_ident "fd_cmm" (asmcomp/asmgen.ml[40,1678+20]..[40,1678+26])
                    ]
                  None
                expression (asmcomp/asmgen.ml[41,1706+2]..[41,1706+8])
                  Pexp_ident "fd_cmm" (asmcomp/asmgen.ml[41,1706+2]..[41,1706+8])
    ]
  structure_item (asmcomp/asmgen.ml[43,1716+0]..[43,1716+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[43,1716+4]..[43,1716+12])
          Ppat_var "liveness" (asmcomp/asmgen.ml[43,1716+4]..[43,1716+12])
        expression (asmcomp/asmgen.ml[43,1716+13]..[43,1716+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[43,1716+13]..[43,1716+19])
            Ppat_var "phrase" (asmcomp/asmgen.ml[43,1716+13]..[43,1716+19])
          expression (asmcomp/asmgen.ml[43,1716+22]..[43,1716+53])
            Pexp_sequence
            expression (asmcomp/asmgen.ml[43,1716+22]..[43,1716+45])
              Pexp_apply
              expression (asmcomp/asmgen.ml[43,1716+22]..[43,1716+38])
                Pexp_ident "Liveness.fundecl" (asmcomp/asmgen.ml[43,1716+22]..[43,1716+38])
              [
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[43,1716+39]..[43,1716+45])
                    Pexp_ident "phrase" (asmcomp/asmgen.ml[43,1716+39]..[43,1716+45])
              ]
            expression (asmcomp/asmgen.ml[43,1716+47]..[43,1716+53])
              Pexp_ident "phrase" (asmcomp/asmgen.ml[43,1716+47]..[43,1716+53])
    ]
  structure_item (asmcomp/asmgen.ml[45,1771+0]..[46,1809+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[45,1771+4]..[45,1771+11])
          Ppat_var "dump_if" (asmcomp/asmgen.ml[45,1771+4]..[45,1771+11])
        expression (asmcomp/asmgen.ml[45,1771+12]..[46,1809+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[45,1771+12]..[45,1771+15])
            Ppat_var "ppf" (asmcomp/asmgen.ml[45,1771+12]..[45,1771+15])
          expression (asmcomp/asmgen.ml[45,1771+16]..[46,1809+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/asmgen.ml[45,1771+16]..[45,1771+20])
              Ppat_var "flag" (asmcomp/asmgen.ml[45,1771+16]..[45,1771+20])
            expression (asmcomp/asmgen.ml[45,1771+21]..[46,1809+50]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (asmcomp/asmgen.ml[45,1771+21]..[45,1771+28])
                Ppat_var "message" (asmcomp/asmgen.ml[45,1771+21]..[45,1771+28])
              expression (asmcomp/asmgen.ml[45,1771+29]..[46,1809+50]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (asmcomp/asmgen.ml[45,1771+29]..[45,1771+35])
                  Ppat_var "phrase" (asmcomp/asmgen.ml[45,1771+29]..[45,1771+35])
                expression (asmcomp/asmgen.ml[46,1809+2]..[46,1809+50])
                  Pexp_ifthenelse
                  expression (asmcomp/asmgen.ml[46,1809+5]..[46,1809+10])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[46,1809+5]..[46,1809+6])
                      Pexp_ident "!" (asmcomp/asmgen.ml[46,1809+5]..[46,1809+6])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[46,1809+6]..[46,1809+10])
                          Pexp_ident "flag" (asmcomp/asmgen.ml[46,1809+6]..[46,1809+10])
                    ]
                  expression (asmcomp/asmgen.ml[46,1809+16]..[46,1809+50])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[46,1809+16]..[46,1809+31])
                      Pexp_ident "Printmach.phase" (asmcomp/asmgen.ml[46,1809+16]..[46,1809+31])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[46,1809+32]..[46,1809+39])
                          Pexp_ident "message" (asmcomp/asmgen.ml[46,1809+32]..[46,1809+39])
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[46,1809+40]..[46,1809+43])
                          Pexp_ident "ppf" (asmcomp/asmgen.ml[46,1809+40]..[46,1809+43])
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[46,1809+44]..[46,1809+50])
                          Pexp_ident "phrase" (asmcomp/asmgen.ml[46,1809+44]..[46,1809+50])
                    ]
                  None
    ]
  structure_item (asmcomp/asmgen.ml[48,1861+0]..[49,1904+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[48,1861+4]..[48,1861+16])
          Ppat_var "pass_dump_if" (asmcomp/asmgen.ml[48,1861+4]..[48,1861+16])
        expression (asmcomp/asmgen.ml[48,1861+17]..[49,1904+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[48,1861+17]..[48,1861+20])
            Ppat_var "ppf" (asmcomp/asmgen.ml[48,1861+17]..[48,1861+20])
          expression (asmcomp/asmgen.ml[48,1861+21]..[49,1904+41]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/asmgen.ml[48,1861+21]..[48,1861+25])
              Ppat_var "flag" (asmcomp/asmgen.ml[48,1861+21]..[48,1861+25])
            expression (asmcomp/asmgen.ml[48,1861+26]..[49,1904+41]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (asmcomp/asmgen.ml[48,1861+26]..[48,1861+33])
                Ppat_var "message" (asmcomp/asmgen.ml[48,1861+26]..[48,1861+33])
              expression (asmcomp/asmgen.ml[48,1861+34]..[49,1904+41]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (asmcomp/asmgen.ml[48,1861+34]..[48,1861+40])
                  Ppat_var "phrase" (asmcomp/asmgen.ml[48,1861+34]..[48,1861+40])
                expression (asmcomp/asmgen.ml[49,1904+2]..[49,1904+41])
                  Pexp_sequence
                  expression (asmcomp/asmgen.ml[49,1904+2]..[49,1904+33])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[49,1904+2]..[49,1904+9])
                      Pexp_ident "dump_if" (asmcomp/asmgen.ml[49,1904+2]..[49,1904+9])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[49,1904+10]..[49,1904+13])
                          Pexp_ident "ppf" (asmcomp/asmgen.ml[49,1904+10]..[49,1904+13])
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[49,1904+14]..[49,1904+18])
                          Pexp_ident "flag" (asmcomp/asmgen.ml[49,1904+14]..[49,1904+18])
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[49,1904+19]..[49,1904+26])
                          Pexp_ident "message" (asmcomp/asmgen.ml[49,1904+19]..[49,1904+26])
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[49,1904+27]..[49,1904+33])
                          Pexp_ident "phrase" (asmcomp/asmgen.ml[49,1904+27]..[49,1904+33])
                    ]
                  expression (asmcomp/asmgen.ml[49,1904+35]..[49,1904+41])
                    Pexp_ident "phrase" (asmcomp/asmgen.ml[49,1904+35]..[49,1904+41])
    ]
  structure_item (asmcomp/asmgen.ml[51,1947+0]..[53,2076+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[51,1947+4]..[51,1947+23])
          Ppat_var "pass_dump_linear_if" (asmcomp/asmgen.ml[51,1947+4]..[51,1947+23])
        expression (asmcomp/asmgen.ml[51,1947+24]..[53,2076+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[51,1947+24]..[51,1947+27])
            Ppat_var "ppf" (asmcomp/asmgen.ml[51,1947+24]..[51,1947+27])
          expression (asmcomp/asmgen.ml[51,1947+28]..[53,2076+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/asmgen.ml[51,1947+28]..[51,1947+32])
              Ppat_var "flag" (asmcomp/asmgen.ml[51,1947+28]..[51,1947+32])
            expression (asmcomp/asmgen.ml[51,1947+33]..[53,2076+8]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (asmcomp/asmgen.ml[51,1947+33]..[51,1947+40])
                Ppat_var "message" (asmcomp/asmgen.ml[51,1947+33]..[51,1947+40])
              expression (asmcomp/asmgen.ml[51,1947+41]..[53,2076+8]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (asmcomp/asmgen.ml[51,1947+41]..[51,1947+47])
                  Ppat_var "phrase" (asmcomp/asmgen.ml[51,1947+41]..[51,1947+47])
                expression (asmcomp/asmgen.ml[52,1997+2]..[53,2076+8])
                  Pexp_sequence
                  expression (asmcomp/asmgen.ml[52,1997+2]..[52,1997+77])
                    Pexp_ifthenelse
                    expression (asmcomp/asmgen.ml[52,1997+5]..[52,1997+10])
                      Pexp_apply
                      expression (asmcomp/asmgen.ml[52,1997+5]..[52,1997+6])
                        Pexp_ident "!" (asmcomp/asmgen.ml[52,1997+5]..[52,1997+6])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/asmgen.ml[52,1997+6]..[52,1997+10])
                            Pexp_ident "flag" (asmcomp/asmgen.ml[52,1997+6]..[52,1997+10])
                      ]
                    expression (asmcomp/asmgen.ml[52,1997+16]..[52,1997+77])
                      Pexp_apply
                      expression (asmcomp/asmgen.ml[52,1997+16]..[52,1997+23])
                        Pexp_ident "fprintf" (asmcomp/asmgen.ml[52,1997+16]..[52,1997+23])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/asmgen.ml[52,1997+24]..[52,1997+27])
                            Pexp_ident "ppf" (asmcomp/asmgen.ml[52,1997+24]..[52,1997+27])
                        <arg>
                        Nolabel
                          expression (asmcomp/asmgen.ml[52,1997+28]..[52,1997+42])
                            Pexp_constant PConst_string("*** %s@.%a@.",(asmcomp/asmgen.ml[52,1997+29]..[52,1997+41]),None)
                        <arg>
                        Nolabel
                          expression (asmcomp/asmgen.ml[52,1997+43]..[52,1997+50])
                            Pexp_ident "message" (asmcomp/asmgen.ml[52,1997+43]..[52,1997+50])
                        <arg>
                        Nolabel
                          expression (asmcomp/asmgen.ml[52,1997+51]..[52,1997+70])
                            Pexp_ident "Printlinear.fundecl" (asmcomp/asmgen.ml[52,1997+51]..[52,1997+70])
                        <arg>
                        Nolabel
                          expression (asmcomp/asmgen.ml[52,1997+71]..[52,1997+77])
                            Pexp_ident "phrase" (asmcomp/asmgen.ml[52,1997+71]..[52,1997+77])
                      ]
                    None
                  expression (asmcomp/asmgen.ml[53,2076+2]..[53,2076+8])
                    Pexp_ident "phrase" (asmcomp/asmgen.ml[53,2076+2]..[53,2076+8])
    ]
  structure_item (asmcomp/asmgen.ml[55,2086+0]..[55,2086+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[55,2086+4]..[55,2086+19])
          Ppat_var "start_from_emit" (asmcomp/asmgen.ml[55,2086+4]..[55,2086+19])
        expression (asmcomp/asmgen.ml[55,2086+22]..[55,2086+30])
          Pexp_apply
          expression (asmcomp/asmgen.ml[55,2086+22]..[55,2086+25])
            Pexp_ident "ref" (asmcomp/asmgen.ml[55,2086+22]..[55,2086+25])
          [
            <arg>
            Nolabel
              expression (asmcomp/asmgen.ml[55,2086+26]..[55,2086+30])
                Pexp_construct "true" (asmcomp/asmgen.ml[55,2086+26]..[55,2086+30])
                None
          ]
    ]
  structure_item (asmcomp/asmgen.ml[57,2118+0]..[58,2151+73])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[57,2118+4]..[57,2118+27])
          Ppat_var "should_save_before_emit" (asmcomp/asmgen.ml[57,2118+4]..[57,2118+27])
        expression (asmcomp/asmgen.ml[57,2118+28]..[58,2151+73]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[57,2118+28]..[57,2118+30])
            Ppat_construct "()" (asmcomp/asmgen.ml[57,2118+28]..[57,2118+30])
            None
          expression (asmcomp/asmgen.ml[58,2151+2]..[58,2151+73])
            Pexp_apply
            expression (asmcomp/asmgen.ml[58,2151+48]..[58,2151+50])
              Pexp_ident "&&" (asmcomp/asmgen.ml[58,2151+48]..[58,2151+50])
            [
              <arg>
              Nolabel
                expression (asmcomp/asmgen.ml[58,2151+2]..[58,2151+47])
                  Pexp_apply
                  expression (asmcomp/asmgen.ml[58,2151+2]..[58,2151+22])
                    Pexp_ident "should_save_ir_after" (asmcomp/asmgen.ml[58,2151+2]..[58,2151+22])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[58,2151+23]..[58,2151+47])
                        Pexp_construct "Compiler_pass.Scheduling" (asmcomp/asmgen.ml[58,2151+23]..[58,2151+47])
                        None
                  ]
              <arg>
              Nolabel
                expression (asmcomp/asmgen.ml[58,2151+51]..[58,2151+73])
                  Pexp_apply
                  expression (asmcomp/asmgen.ml[58,2151+52]..[58,2151+55])
                    Pexp_ident "not" (asmcomp/asmgen.ml[58,2151+52]..[58,2151+55])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[58,2151+56]..[58,2151+72])
                        Pexp_apply
                        expression (asmcomp/asmgen.ml[58,2151+56]..[58,2151+57])
                          Pexp_ident "!" (asmcomp/asmgen.ml[58,2151+56]..[58,2151+57])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/asmgen.ml[58,2151+57]..[58,2151+72])
                              Pexp_ident "start_from_emit" (asmcomp/asmgen.ml[58,2151+57]..[58,2151+72])
                        ]
                  ]
            ]
    ]
  structure_item (asmcomp/asmgen.ml[60,2226+0]..[64,2320+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[60,2226+4]..[60,2226+20])
          Ppat_var "linear_unit_info" (asmcomp/asmgen.ml[60,2226+4]..[60,2226+20])
        expression (asmcomp/asmgen.ml[61,2249+2]..[64,2320+3])
          Pexp_record
          [
            "Linear_format.unit_name" (asmcomp/asmgen.ml[61,2249+4]..[61,2249+27])
              expression (asmcomp/asmgen.ml[61,2249+30]..[61,2249+32])
                Pexp_constant PConst_string("",(asmcomp/asmgen.ml[61,2249+31]..[61,2249+31]),None)
            "items" (asmcomp/asmgen.ml[62,2283+4]..[62,2283+9])
              expression (asmcomp/asmgen.ml[62,2283+12]..[62,2283+14])
                Pexp_construct "[]" (asmcomp/asmgen.ml[62,2283+12]..[62,2283+14])
                None
            "for_pack" (asmcomp/asmgen.ml[63,2299+4]..[63,2299+12])
              expression (asmcomp/asmgen.ml[63,2299+15]..[63,2299+19])
                Pexp_construct "None" (asmcomp/asmgen.ml[63,2299+15]..[63,2299+19])
                None
          ]
          None
    ]
  structure_item (asmcomp/asmgen.ml[66,2325+0]..[72,2566+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[66,2325+4]..[66,2325+9])
          Ppat_var "reset" (asmcomp/asmgen.ml[66,2325+4]..[66,2325+9])
        expression (asmcomp/asmgen.ml[66,2325+10]..[72,2566+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[66,2325+10]..[66,2325+12])
            Ppat_construct "()" (asmcomp/asmgen.ml[66,2325+10]..[66,2325+12])
            None
          expression (asmcomp/asmgen.ml[67,2340+2]..[72,2566+5])
            Pexp_sequence
            expression (asmcomp/asmgen.ml[67,2340+2]..[67,2340+26])
              Pexp_apply
              expression (asmcomp/asmgen.ml[67,2340+18]..[67,2340+20])
                Pexp_ident ":=" (asmcomp/asmgen.ml[67,2340+18]..[67,2340+20])
              [
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[67,2340+2]..[67,2340+17])
                    Pexp_ident "start_from_emit" (asmcomp/asmgen.ml[67,2340+2]..[67,2340+17])
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[67,2340+21]..[67,2340+26])
                    Pexp_construct "false" (asmcomp/asmgen.ml[67,2340+21]..[67,2340+26])
                    None
              ]
            expression (asmcomp/asmgen.ml[68,2368+2]..[72,2566+5])
              Pexp_ifthenelse
              expression (asmcomp/asmgen.ml[68,2368+5]..[68,2368+31])
                Pexp_apply
                expression (asmcomp/asmgen.ml[68,2368+5]..[68,2368+28])
                  Pexp_ident "should_save_before_emit" (asmcomp/asmgen.ml[68,2368+5]..[68,2368+28])
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/asmgen.ml[68,2368+29]..[68,2368+31])
                      Pexp_construct "()" (asmcomp/asmgen.ml[68,2368+29]..[68,2368+31])
                      None
                ]
              expression (asmcomp/asmgen.ml[68,2368+37]..[72,2566+5])
                Pexp_sequence
                expression (asmcomp/asmgen.ml[69,2411+4]..[69,2411+64])
                  Pexp_setfield
                  expression (asmcomp/asmgen.ml[69,2411+4]..[69,2411+20])
                    Pexp_ident "linear_unit_info" (asmcomp/asmgen.ml[69,2411+4]..[69,2411+20])
                  "unit_name" (asmcomp/asmgen.ml[69,2411+21]..[69,2411+30])
                  expression (asmcomp/asmgen.ml[69,2411+34]..[69,2411+64])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[69,2411+34]..[69,2411+61])
                      Pexp_ident "Compilenv.current_unit_name" (asmcomp/asmgen.ml[69,2411+34]..[69,2411+61])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[69,2411+62]..[69,2411+64])
                          Pexp_construct "()" (asmcomp/asmgen.ml[69,2411+62]..[69,2411+64])
                          None
                    ]
                expression (asmcomp/asmgen.ml[70,2477+4]..[71,2511+54])
                  Pexp_sequence
                  expression (asmcomp/asmgen.ml[70,2477+4]..[70,2477+32])
                    Pexp_setfield
                    expression (asmcomp/asmgen.ml[70,2477+4]..[70,2477+20])
                      Pexp_ident "linear_unit_info" (asmcomp/asmgen.ml[70,2477+4]..[70,2477+20])
                    "items" (asmcomp/asmgen.ml[70,2477+21]..[70,2477+26])
                    expression (asmcomp/asmgen.ml[70,2477+30]..[70,2477+32])
                      Pexp_construct "[]" (asmcomp/asmgen.ml[70,2477+30]..[70,2477+32])
                      None
                  expression (asmcomp/asmgen.ml[71,2511+4]..[71,2511+53])
                    Pexp_setfield
                    expression (asmcomp/asmgen.ml[71,2511+4]..[71,2511+20])
                      Pexp_ident "linear_unit_info" (asmcomp/asmgen.ml[71,2511+4]..[71,2511+20])
                    "for_pack" (asmcomp/asmgen.ml[71,2511+21]..[71,2511+29])
                    expression (asmcomp/asmgen.ml[71,2511+33]..[71,2511+53])
                      Pexp_apply
                      expression (asmcomp/asmgen.ml[71,2511+33]..[71,2511+34])
                        Pexp_ident "!" (asmcomp/asmgen.ml[71,2511+33]..[71,2511+34])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/asmgen.ml[71,2511+34]..[71,2511+53])
                            Pexp_ident "Clflags.for_package" (asmcomp/asmgen.ml[71,2511+34]..[71,2511+53])
                      ]
              None
    ]
  structure_item (asmcomp/asmgen.ml[74,2573+0]..[78,2722+4])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[74,2573+4]..[74,2573+13])
          Ppat_var "save_data" (asmcomp/asmgen.ml[74,2573+4]..[74,2573+13])
        expression (asmcomp/asmgen.ml[74,2573+14]..[78,2722+4]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[74,2573+14]..[74,2573+16])
            Ppat_var "dl" (asmcomp/asmgen.ml[74,2573+14]..[74,2573+16])
          expression (asmcomp/asmgen.ml[75,2592+2]..[78,2722+4])
            Pexp_sequence
            expression (asmcomp/asmgen.ml[75,2592+2]..[77,2715+5])
              Pexp_ifthenelse
              expression (asmcomp/asmgen.ml[75,2592+5]..[75,2592+31])
                Pexp_apply
                expression (asmcomp/asmgen.ml[75,2592+5]..[75,2592+28])
                  Pexp_ident "should_save_before_emit" (asmcomp/asmgen.ml[75,2592+5]..[75,2592+28])
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/asmgen.ml[75,2592+29]..[75,2592+31])
                      Pexp_construct "()" (asmcomp/asmgen.ml[75,2592+29]..[75,2592+31])
                      None
                ]
              expression (asmcomp/asmgen.ml[75,2592+37]..[77,2715+5])
                Pexp_setfield
                expression (asmcomp/asmgen.ml[76,2635+4]..[76,2635+20])
                  Pexp_ident "linear_unit_info" (asmcomp/asmgen.ml[76,2635+4]..[76,2635+20])
                "items" (asmcomp/asmgen.ml[76,2635+21]..[76,2635+26])
                expression (asmcomp/asmgen.ml[76,2635+30]..[76,2635+79])
                  Pexp_construct "::" (asmcomp/asmgen.ml[76,2635+54]..[76,2635+56])
                  Some
                    expression (asmcomp/asmgen.ml[76,2635+30]..[76,2635+79]) ghost
                      Pexp_tuple
                      [
                        expression (asmcomp/asmgen.ml[76,2635+30]..[76,2635+53])
                          Pexp_open Fresh
                          module_expr (asmcomp/asmgen.ml[76,2635+30]..[76,2635+43])
                            Pmod_ident "Linear_format" (asmcomp/asmgen.ml[76,2635+30]..[76,2635+43])
                          expression (asmcomp/asmgen.ml[76,2635+45]..[76,2635+52])
                            Pexp_construct "Data" (asmcomp/asmgen.ml[76,2635+45]..[76,2635+49])
                            Some
                              expression (asmcomp/asmgen.ml[76,2635+50]..[76,2635+52])
                                Pexp_ident "dl" (asmcomp/asmgen.ml[76,2635+50]..[76,2635+52])
                        expression (asmcomp/asmgen.ml[76,2635+57]..[76,2635+79])
                          Pexp_field
                          expression (asmcomp/asmgen.ml[76,2635+57]..[76,2635+73])
                            Pexp_ident "linear_unit_info" (asmcomp/asmgen.ml[76,2635+57]..[76,2635+73])
                          "items" (asmcomp/asmgen.ml[76,2635+74]..[76,2635+79])
                      ]
              None
            expression (asmcomp/asmgen.ml[78,2722+2]..[78,2722+4])
              Pexp_ident "dl" (asmcomp/asmgen.ml[78,2722+2]..[78,2722+4])
    ]
  structure_item (asmcomp/asmgen.ml[80,2728+0]..[84,2877+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[80,2728+4]..[80,2728+15])
          Ppat_var "save_linear" (asmcomp/asmgen.ml[80,2728+4]..[80,2728+15])
        expression (asmcomp/asmgen.ml[80,2728+16]..[84,2877+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[80,2728+16]..[80,2728+17])
            Ppat_var "f" (asmcomp/asmgen.ml[80,2728+16]..[80,2728+17])
          expression (asmcomp/asmgen.ml[81,2748+2]..[84,2877+3])
            Pexp_sequence
            expression (asmcomp/asmgen.ml[81,2748+2]..[83,2870+5])
              Pexp_ifthenelse
              expression (asmcomp/asmgen.ml[81,2748+5]..[81,2748+31])
                Pexp_apply
                expression (asmcomp/asmgen.ml[81,2748+5]..[81,2748+28])
                  Pexp_ident "should_save_before_emit" (asmcomp/asmgen.ml[81,2748+5]..[81,2748+28])
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/asmgen.ml[81,2748+29]..[81,2748+31])
                      Pexp_construct "()" (asmcomp/asmgen.ml[81,2748+29]..[81,2748+31])
                      None
                ]
              expression (asmcomp/asmgen.ml[81,2748+37]..[83,2870+5])
                Pexp_setfield
                expression (asmcomp/asmgen.ml[82,2791+4]..[82,2791+20])
                  Pexp_ident "linear_unit_info" (asmcomp/asmgen.ml[82,2791+4]..[82,2791+20])
                "items" (asmcomp/asmgen.ml[82,2791+21]..[82,2791+26])
                expression (asmcomp/asmgen.ml[82,2791+30]..[82,2791+78])
                  Pexp_construct "::" (asmcomp/asmgen.ml[82,2791+53]..[82,2791+55])
                  Some
                    expression (asmcomp/asmgen.ml[82,2791+30]..[82,2791+78]) ghost
                      Pexp_tuple
                      [
                        expression (asmcomp/asmgen.ml[82,2791+30]..[82,2791+52])
                          Pexp_open Fresh
                          module_expr (asmcomp/asmgen.ml[82,2791+30]..[82,2791+43])
                            Pmod_ident "Linear_format" (asmcomp/asmgen.ml[82,2791+30]..[82,2791+43])
                          expression (asmcomp/asmgen.ml[82,2791+45]..[82,2791+51])
                            Pexp_construct "Func" (asmcomp/asmgen.ml[82,2791+45]..[82,2791+49])
                            Some
                              expression (asmcomp/asmgen.ml[82,2791+50]..[82,2791+51])
                                Pexp_ident "f" (asmcomp/asmgen.ml[82,2791+50]..[82,2791+51])
                        expression (asmcomp/asmgen.ml[82,2791+56]..[82,2791+78])
                          Pexp_field
                          expression (asmcomp/asmgen.ml[82,2791+56]..[82,2791+72])
                            Pexp_ident "linear_unit_info" (asmcomp/asmgen.ml[82,2791+56]..[82,2791+72])
                          "items" (asmcomp/asmgen.ml[82,2791+73]..[82,2791+78])
                      ]
              None
            expression (asmcomp/asmgen.ml[84,2877+2]..[84,2877+3])
              Pexp_ident "f" (asmcomp/asmgen.ml[84,2877+2]..[84,2877+3])
    ]
  structure_item (asmcomp/asmgen.ml[86,2882+0]..[91,3139+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[86,2882+4]..[86,2882+16])
          Ppat_var "write_linear" (asmcomp/asmgen.ml[86,2882+4]..[86,2882+16])
        expression (asmcomp/asmgen.ml[86,2882+17]..[91,3139+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[86,2882+17]..[86,2882+23])
            Ppat_var "prefix" (asmcomp/asmgen.ml[86,2882+17]..[86,2882+23])
          expression (asmcomp/asmgen.ml[87,2908+2]..[91,3139+5])
            Pexp_ifthenelse
            expression (asmcomp/asmgen.ml[87,2908+5]..[87,2908+31])
              Pexp_apply
              expression (asmcomp/asmgen.ml[87,2908+5]..[87,2908+28])
                Pexp_ident "should_save_before_emit" (asmcomp/asmgen.ml[87,2908+5]..[87,2908+28])
              [
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[87,2908+29]..[87,2908+31])
                    Pexp_construct "()" (asmcomp/asmgen.ml[87,2908+29]..[87,2908+31])
                    None
              ]
            expression (asmcomp/asmgen.ml[87,2908+37]..[91,3139+5])
              Pexp_let Nonrec
              [
                <def>
                  pattern (asmcomp/asmgen.ml[88,2951+8]..[88,2951+16])
                    Ppat_var "filename" (asmcomp/asmgen.ml[88,2951+8]..[88,2951+16])
                  expression (asmcomp/asmgen.ml[88,2951+19]..[88,2951+72])
                    Pexp_open Fresh
                    module_expr (asmcomp/asmgen.ml[88,2951+19]..[88,2951+32])
                      Pmod_ident "Compiler_pass" (asmcomp/asmgen.ml[88,2951+19]..[88,2951+32])
                    expression (asmcomp/asmgen.ml[88,2951+34]..[88,2951+71])
                      Pexp_apply
                      expression (asmcomp/asmgen.ml[88,2951+34]..[88,2951+52])
                        Pexp_ident "to_output_filename" (asmcomp/asmgen.ml[88,2951+34]..[88,2951+52])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/asmgen.ml[88,2951+53]..[88,2951+63])
                            Pexp_construct "Scheduling" (asmcomp/asmgen.ml[88,2951+53]..[88,2951+63])
                            None
                        <arg>
                        Labelled "prefix"
                          expression (asmcomp/asmgen.ml[88,2951+65]..[88,2951+71])
                            Pexp_ident "prefix" (asmcomp/asmgen.ml[88,2951+65]..[88,2951+71])
                      ]
              ]
              expression (asmcomp/asmgen.ml[89,3027+4]..[90,3090+48])
                Pexp_sequence
                expression (asmcomp/asmgen.ml[89,3027+4]..[89,3027+61])
                  Pexp_setfield
                  expression (asmcomp/asmgen.ml[89,3027+4]..[89,3027+20])
                    Pexp_ident "linear_unit_info" (asmcomp/asmgen.ml[89,3027+4]..[89,3027+20])
                  "items" (asmcomp/asmgen.ml[89,3027+21]..[89,3027+26])
                  expression (asmcomp/asmgen.ml[89,3027+30]..[89,3027+61])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[89,3027+30]..[89,3027+38])
                      Pexp_ident "List.rev" (asmcomp/asmgen.ml[89,3027+30]..[89,3027+38])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[89,3027+39]..[89,3027+61])
                          Pexp_field
                          expression (asmcomp/asmgen.ml[89,3027+39]..[89,3027+55])
                            Pexp_ident "linear_unit_info" (asmcomp/asmgen.ml[89,3027+39]..[89,3027+55])
                          "items" (asmcomp/asmgen.ml[89,3027+56]..[89,3027+61])
                    ]
                expression (asmcomp/asmgen.ml[90,3090+4]..[90,3090+48])
                  Pexp_apply
                  expression (asmcomp/asmgen.ml[90,3090+4]..[90,3090+22])
                    Pexp_ident "Linear_format.save" (asmcomp/asmgen.ml[90,3090+4]..[90,3090+22])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[90,3090+23]..[90,3090+31])
                        Pexp_ident "filename" (asmcomp/asmgen.ml[90,3090+23]..[90,3090+31])
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[90,3090+32]..[90,3090+48])
                        Pexp_ident "linear_unit_info" (asmcomp/asmgen.ml[90,3090+32]..[90,3090+48])
                  ]
            None
    ]
  structure_item (asmcomp/asmgen.ml[93,3146+0]..[94,3167+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[93,3146+4]..[93,3146+15])
          Ppat_var "should_emit" (asmcomp/asmgen.ml[93,3146+4]..[93,3146+15])
        expression (asmcomp/asmgen.ml[93,3146+16]..[94,3167+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[93,3146+16]..[93,3146+18])
            Ppat_construct "()" (asmcomp/asmgen.ml[93,3146+16]..[93,3146+18])
            None
          expression (asmcomp/asmgen.ml[94,3167+2]..[94,3167+50])
            Pexp_apply
            expression (asmcomp/asmgen.ml[94,3167+2]..[94,3167+5])
              Pexp_ident "not" (asmcomp/asmgen.ml[94,3167+2]..[94,3167+5])
            [
              <arg>
              Nolabel
                expression (asmcomp/asmgen.ml[94,3167+6]..[94,3167+50])
                  Pexp_apply
                  expression (asmcomp/asmgen.ml[94,3167+7]..[94,3167+24])
                    Pexp_ident "should_stop_after" (asmcomp/asmgen.ml[94,3167+7]..[94,3167+24])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[94,3167+25]..[94,3167+49])
                        Pexp_construct "Compiler_pass.Scheduling" (asmcomp/asmgen.ml[94,3167+25]..[94,3167+49])
                        None
                  ]
            ]
    ]
  structure_item (asmcomp/asmgen.ml[96,3219+0]..[96,3219+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[96,3219+4]..[96,3219+14])
          Ppat_var "if_emit_do" (asmcomp/asmgen.ml[96,3219+4]..[96,3219+14])
        expression (asmcomp/asmgen.ml[96,3219+15]..[96,3219+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[96,3219+15]..[96,3219+16])
            Ppat_var "f" (asmcomp/asmgen.ml[96,3219+15]..[96,3219+16])
          expression (asmcomp/asmgen.ml[96,3219+17]..[96,3219+55]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/asmgen.ml[96,3219+17]..[96,3219+18])
              Ppat_var "x" (asmcomp/asmgen.ml[96,3219+17]..[96,3219+18])
            expression (asmcomp/asmgen.ml[96,3219+21]..[96,3219+55])
              Pexp_ifthenelse
              expression (asmcomp/asmgen.ml[96,3219+24]..[96,3219+38])
                Pexp_apply
                expression (asmcomp/asmgen.ml[96,3219+24]..[96,3219+35])
                  Pexp_ident "should_emit" (asmcomp/asmgen.ml[96,3219+24]..[96,3219+35])
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/asmgen.ml[96,3219+36]..[96,3219+38])
                      Pexp_construct "()" (asmcomp/asmgen.ml[96,3219+36]..[96,3219+38])
                      None
                ]
              expression (asmcomp/asmgen.ml[96,3219+44]..[96,3219+47])
                Pexp_apply
                expression (asmcomp/asmgen.ml[96,3219+44]..[96,3219+45])
                  Pexp_ident "f" (asmcomp/asmgen.ml[96,3219+44]..[96,3219+45])
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/asmgen.ml[96,3219+46]..[96,3219+47])
                      Pexp_ident "x" (asmcomp/asmgen.ml[96,3219+46]..[96,3219+47])
                ]
              Some
                expression (asmcomp/asmgen.ml[96,3219+53]..[96,3219+55])
                  Pexp_construct "()" (asmcomp/asmgen.ml[96,3219+53]..[96,3219+55])
                  None
    ]
  structure_item (asmcomp/asmgen.ml[97,3275+0]..[97,3275+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[97,3275+4]..[97,3275+23])
          Ppat_var "emit_begin_assembly" (asmcomp/asmgen.ml[97,3275+4]..[97,3275+23])
        expression (asmcomp/asmgen.ml[97,3275+26]..[97,3275+56])
          Pexp_apply
          expression (asmcomp/asmgen.ml[97,3275+26]..[97,3275+36])
            Pexp_ident "if_emit_do" (asmcomp/asmgen.ml[97,3275+26]..[97,3275+36])
          [
            <arg>
            Nolabel
              expression (asmcomp/asmgen.ml[97,3275+37]..[97,3275+56])
                Pexp_ident "Emit.begin_assembly" (asmcomp/asmgen.ml[97,3275+37]..[97,3275+56])
          ]
    ]
  structure_item (asmcomp/asmgen.ml[98,3332+0]..[98,3332+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[98,3332+4]..[98,3332+21])
          Ppat_var "emit_end_assembly" (asmcomp/asmgen.ml[98,3332+4]..[98,3332+21])
        expression (asmcomp/asmgen.ml[98,3332+24]..[98,3332+52])
          Pexp_apply
          expression (asmcomp/asmgen.ml[98,3332+24]..[98,3332+34])
            Pexp_ident "if_emit_do" (asmcomp/asmgen.ml[98,3332+24]..[98,3332+34])
          [
            <arg>
            Nolabel
              expression (asmcomp/asmgen.ml[98,3332+35]..[98,3332+52])
                Pexp_ident "Emit.end_assembly" (asmcomp/asmgen.ml[98,3332+35]..[98,3332+52])
          ]
    ]
  structure_item (asmcomp/asmgen.ml[99,3385+0]..[99,3385+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[99,3385+4]..[99,3385+13])
          Ppat_var "emit_data" (asmcomp/asmgen.ml[99,3385+4]..[99,3385+13])
        expression (asmcomp/asmgen.ml[99,3385+16]..[99,3385+36])
          Pexp_apply
          expression (asmcomp/asmgen.ml[99,3385+16]..[99,3385+26])
            Pexp_ident "if_emit_do" (asmcomp/asmgen.ml[99,3385+16]..[99,3385+26])
          [
            <arg>
            Nolabel
              expression (asmcomp/asmgen.ml[99,3385+27]..[99,3385+36])
                Pexp_ident "Emit.data" (asmcomp/asmgen.ml[99,3385+27]..[99,3385+36])
          ]
    ]
  structure_item (asmcomp/asmgen.ml[100,3422+0]..[106,3631+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[100,3422+4]..[100,3422+16])
          Ppat_var "emit_fundecl" (asmcomp/asmgen.ml[100,3422+4]..[100,3422+16])
        expression (asmcomp/asmgen.ml[100,3422+17]..[106,3631+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[100,3422+17]..[100,3422+19])
            Ppat_var "fd" (asmcomp/asmgen.ml[100,3422+17]..[100,3422+19])
          expression (asmcomp/asmgen.ml[101,3444+2]..[106,3631+5])
            Pexp_ifthenelse
            expression (asmcomp/asmgen.ml[101,3444+5]..[101,3444+18])
              Pexp_apply
              expression (asmcomp/asmgen.ml[101,3444+5]..[101,3444+16])
                Pexp_ident "should_emit" (asmcomp/asmgen.ml[101,3444+5]..[101,3444+16])
              [
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[101,3444+16]..[101,3444+18])
                    Pexp_construct "()" (asmcomp/asmgen.ml[101,3444+16]..[101,3444+18])
                    None
              ]
            expression (asmcomp/asmgen.ml[101,3444+24]..[106,3631+5])
              Pexp_try
              expression (asmcomp/asmgen.ml[103,3482+6]..[103,3482+60])
                Pexp_apply
                expression (asmcomp/asmgen.ml[103,3482+6]..[103,3482+20])
                  Pexp_ident "Profile.record" (asmcomp/asmgen.ml[103,3482+6]..[103,3482+20])
                [
                  <arg>
                  Labelled "accumulate"
                    expression (asmcomp/asmgen.ml[103,3482+33]..[103,3482+37])
                      Pexp_construct "true" (asmcomp/asmgen.ml[103,3482+33]..[103,3482+37])
                      None
                  <arg>
                  Nolabel
                    expression (asmcomp/asmgen.ml[103,3482+38]..[103,3482+44])
                      Pexp_constant PConst_string("emit",(asmcomp/asmgen.ml[103,3482+39]..[103,3482+43]),None)
                  <arg>
                  Nolabel
                    expression (asmcomp/asmgen.ml[103,3482+45]..[103,3482+57])
                      Pexp_ident "Emit.fundecl" (asmcomp/asmgen.ml[103,3482+45]..[103,3482+57])
                  <arg>
                  Nolabel
                    expression (asmcomp/asmgen.ml[103,3482+58]..[103,3482+60])
                      Pexp_ident "fd" (asmcomp/asmgen.ml[103,3482+58]..[103,3482+60])
                ]
              [
                <case>
                  pattern (asmcomp/asmgen.ml[104,3543+9]..[104,3543+24])
                    Ppat_construct "Emitaux.Error" (asmcomp/asmgen.ml[104,3543+9]..[104,3543+22])
                    Some
                      []
                      pattern (asmcomp/asmgen.ml[104,3543+23]..[104,3543+24])
                        Ppat_var "e" (asmcomp/asmgen.ml[104,3543+23]..[104,3543+24])
                  expression (asmcomp/asmgen.ml[105,3571+6]..[105,3571+59])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[105,3571+6]..[105,3571+11])
                      Pexp_ident "raise" (asmcomp/asmgen.ml[105,3571+6]..[105,3571+11])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[105,3571+12]..[105,3571+59])
                          Pexp_construct "Error" (asmcomp/asmgen.ml[105,3571+13]..[105,3571+18])
                          Some
                            expression (asmcomp/asmgen.ml[105,3571+19]..[105,3571+58])
                              Pexp_construct "Asm_generation" (asmcomp/asmgen.ml[105,3571+20]..[105,3571+34])
                              Some
                                expression (asmcomp/asmgen.ml[105,3571+34]..[105,3571+57])
                                  Pexp_tuple
                                  [
                                    expression (asmcomp/asmgen.ml[105,3571+35]..[105,3571+53])
                                      Pexp_field
                                      expression (asmcomp/asmgen.ml[105,3571+35]..[105,3571+37])
                                        Pexp_ident "fd" (asmcomp/asmgen.ml[105,3571+35]..[105,3571+37])
                                      "Linear.fun_name" (asmcomp/asmgen.ml[105,3571+38]..[105,3571+53])
                                    expression (asmcomp/asmgen.ml[105,3571+55]..[105,3571+56])
                                      Pexp_ident "e" (asmcomp/asmgen.ml[105,3571+55]..[105,3571+56])
                                  ]
                    ]
              ]
            None
    ]
  structure_item (asmcomp/asmgen.ml[108,3638+0]..[132,4642+16])
    Pstr_value Rec
    [
      <def>
        pattern (asmcomp/asmgen.ml[108,3638+8]..[108,3638+16])
          Ppat_var "regalloc" (asmcomp/asmgen.ml[108,3638+8]..[108,3638+16])
        expression (asmcomp/asmgen.ml[108,3638+17]..[132,4642+16]) ghost
          Pexp_fun
          Labelled "ppf_dump"
          None
          pattern (asmcomp/asmgen.ml[108,3638+18]..[108,3638+26])
            Ppat_var "ppf_dump" (asmcomp/asmgen.ml[108,3638+18]..[108,3638+26])
          expression (asmcomp/asmgen.ml[108,3638+27]..[132,4642+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/asmgen.ml[108,3638+27]..[108,3638+32])
              Ppat_var "round" (asmcomp/asmgen.ml[108,3638+27]..[108,3638+32])
            expression (asmcomp/asmgen.ml[108,3638+33]..[132,4642+16]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (asmcomp/asmgen.ml[108,3638+33]..[108,3638+35])
                Ppat_var "fd" (asmcomp/asmgen.ml[108,3638+33]..[108,3638+35])
              expression (asmcomp/asmgen.ml[109,3676+2]..[132,4642+16])
                Pexp_sequence
                expression (asmcomp/asmgen.ml[109,3676+2]..[111,3732+78])
                  Pexp_ifthenelse
                  expression (asmcomp/asmgen.ml[109,3676+5]..[109,3676+15])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[109,3676+11]..[109,3676+12])
                      Pexp_ident ">" (asmcomp/asmgen.ml[109,3676+11]..[109,3676+12])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[109,3676+5]..[109,3676+10])
                          Pexp_ident "round" (asmcomp/asmgen.ml[109,3676+5]..[109,3676+10])
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[109,3676+13]..[109,3676+15])
                          Pexp_constant PConst_int (50,None)
                    ]
                  expression (asmcomp/asmgen.ml[110,3697+4]..[111,3732+78])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[110,3697+4]..[110,3697+15])
                      Pexp_ident "fatal_error" (asmcomp/asmgen.ml[110,3697+4]..[110,3697+15])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[110,3697+15]..[111,3732+78])
                          Pexp_apply
                          expression (asmcomp/asmgen.ml[110,3697+33]..[110,3697+34])
                            Pexp_ident "^" (asmcomp/asmgen.ml[110,3697+33]..[110,3697+34])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[110,3697+16]..[110,3697+32])
                                Pexp_field
                                expression (asmcomp/asmgen.ml[110,3697+16]..[110,3697+18])
                                  Pexp_ident "fd" (asmcomp/asmgen.ml[110,3697+16]..[110,3697+18])
                                "Mach.fun_name" (asmcomp/asmgen.ml[110,3697+19]..[110,3697+32])
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[111,3732+16]..[111,3732+77])
                                Pexp_constant PConst_string(": function too complex, cannot complete register allocation",(asmcomp/asmgen.ml[111,3732+17]..[111,3732+76]),None)
                          ]
                    ]
                  None
                expression (asmcomp/asmgen.ml[112,3812+2]..[132,4642+16])
                  Pexp_sequence
                  expression (asmcomp/asmgen.ml[112,3812+2]..[112,3812+51])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[112,3812+2]..[112,3812+9])
                      Pexp_ident "dump_if" (asmcomp/asmgen.ml[112,3812+2]..[112,3812+9])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[112,3812+10]..[112,3812+18])
                          Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[112,3812+10]..[112,3812+18])
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[112,3812+19]..[112,3812+28])
                          Pexp_ident "dump_live" (asmcomp/asmgen.ml[112,3812+19]..[112,3812+28])
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[112,3812+29]..[112,3812+48])
                          Pexp_constant PConst_string("Liveness analysis",(asmcomp/asmgen.ml[112,3812+30]..[112,3812+47]),None)
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[112,3812+49]..[112,3812+51])
                          Pexp_ident "fd" (asmcomp/asmgen.ml[112,3812+49]..[112,3812+51])
                    ]
                  expression (asmcomp/asmgen.ml[113,3865+2]..[132,4642+16])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (asmcomp/asmgen.ml[113,3865+6]..[113,3865+21])
                          Ppat_var "num_stack_slots" (asmcomp/asmgen.ml[113,3865+6]..[113,3865+21])
                        expression (asmcomp/asmgen.ml[114,3889+4]..[125,4313+7])
                          Pexp_ifthenelse
                          expression (asmcomp/asmgen.ml[114,3889+7]..[114,3889+19])
                            Pexp_apply
                            expression (asmcomp/asmgen.ml[114,3889+7]..[114,3889+8])
                              Pexp_ident "!" (asmcomp/asmgen.ml[114,3889+7]..[114,3889+8])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/asmgen.ml[114,3889+8]..[114,3889+19])
                                  Pexp_ident "use_linscan" (asmcomp/asmgen.ml[114,3889+8]..[114,3889+19])
                            ]
                          expression (asmcomp/asmgen.ml[114,3889+25]..[119,4076+7])
                            Pexp_sequence
                            expression (asmcomp/asmgen.ml[116,3944+6]..[116,3944+33])
                              Pexp_apply
                              expression (asmcomp/asmgen.ml[116,3944+6]..[116,3944+30])
                                Pexp_ident "Interval.build_intervals" (asmcomp/asmgen.ml[116,3944+6]..[116,3944+30])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/asmgen.ml[116,3944+31]..[116,3944+33])
                                    Pexp_ident "fd" (asmcomp/asmgen.ml[116,3944+31]..[116,3944+33])
                              ]
                            expression (asmcomp/asmgen.ml[117,3979+6]..[118,4041+34])
                              Pexp_sequence
                              expression (asmcomp/asmgen.ml[117,3979+6]..[117,3979+60])
                                Pexp_ifthenelse
                                expression (asmcomp/asmgen.ml[117,3979+9]..[117,3979+23])
                                  Pexp_apply
                                  expression (asmcomp/asmgen.ml[117,3979+9]..[117,3979+10])
                                    Pexp_ident "!" (asmcomp/asmgen.ml[117,3979+9]..[117,3979+10])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/asmgen.ml[117,3979+10]..[117,3979+23])
                                        Pexp_ident "dump_interval" (asmcomp/asmgen.ml[117,3979+10]..[117,3979+23])
                                  ]
                                expression (asmcomp/asmgen.ml[117,3979+29]..[117,3979+60])
                                  Pexp_apply
                                  expression (asmcomp/asmgen.ml[117,3979+29]..[117,3979+48])
                                    Pexp_ident "Printmach.intervals" (asmcomp/asmgen.ml[117,3979+29]..[117,3979+48])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/asmgen.ml[117,3979+49]..[117,3979+57])
                                        Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[117,3979+49]..[117,3979+57])
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/asmgen.ml[117,3979+58]..[117,3979+60])
                                        Pexp_construct "()" (asmcomp/asmgen.ml[117,3979+58]..[117,3979+60])
                                        None
                                  ]
                                None
                              expression (asmcomp/asmgen.ml[118,4041+6]..[118,4041+34])
                                Pexp_apply
                                expression (asmcomp/asmgen.ml[118,4041+6]..[118,4041+32])
                                  Pexp_ident "Linscan.allocate_registers" (asmcomp/asmgen.ml[118,4041+6]..[118,4041+32])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[118,4041+32]..[118,4041+34])
                                      Pexp_construct "()" (asmcomp/asmgen.ml[118,4041+32]..[118,4041+34])
                                      None
                                ]
                          Some
                            expression (asmcomp/asmgen.ml[119,4076+13]..[125,4313+7])
                              Pexp_sequence
                              expression (asmcomp/asmgen.ml[121,4122+6]..[121,4122+27])
                                Pexp_apply
                                expression (asmcomp/asmgen.ml[121,4122+6]..[121,4122+24])
                                  Pexp_ident "Interf.build_graph" (asmcomp/asmgen.ml[121,4122+6]..[121,4122+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[121,4122+25]..[121,4122+27])
                                      Pexp_ident "fd" (asmcomp/asmgen.ml[121,4122+25]..[121,4122+27])
                                ]
                              expression (asmcomp/asmgen.ml[122,4151+6]..[124,4277+35])
                                Pexp_sequence
                                expression (asmcomp/asmgen.ml[122,4151+6]..[122,4151+62])
                                  Pexp_ifthenelse
                                  expression (asmcomp/asmgen.ml[122,4151+9]..[122,4151+21])
                                    Pexp_apply
                                    expression (asmcomp/asmgen.ml[122,4151+9]..[122,4151+10])
                                      Pexp_ident "!" (asmcomp/asmgen.ml[122,4151+9]..[122,4151+10])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/asmgen.ml[122,4151+10]..[122,4151+21])
                                          Pexp_ident "dump_interf" (asmcomp/asmgen.ml[122,4151+10]..[122,4151+21])
                                    ]
                                  expression (asmcomp/asmgen.ml[122,4151+27]..[122,4151+62])
                                    Pexp_apply
                                    expression (asmcomp/asmgen.ml[122,4151+27]..[122,4151+50])
                                      Pexp_ident "Printmach.interferences" (asmcomp/asmgen.ml[122,4151+27]..[122,4151+50])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/asmgen.ml[122,4151+51]..[122,4151+59])
                                          Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[122,4151+51]..[122,4151+59])
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/asmgen.ml[122,4151+60]..[122,4151+62])
                                          Pexp_construct "()" (asmcomp/asmgen.ml[122,4151+60]..[122,4151+62])
                                          None
                                    ]
                                  None
                                expression (asmcomp/asmgen.ml[123,4215+6]..[124,4277+35])
                                  Pexp_sequence
                                  expression (asmcomp/asmgen.ml[123,4215+6]..[123,4215+60])
                                    Pexp_ifthenelse
                                    expression (asmcomp/asmgen.ml[123,4215+9]..[123,4215+21])
                                      Pexp_apply
                                      expression (asmcomp/asmgen.ml[123,4215+9]..[123,4215+10])
                                        Pexp_ident "!" (asmcomp/asmgen.ml[123,4215+9]..[123,4215+10])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[123,4215+10]..[123,4215+21])
                                            Pexp_ident "dump_prefer" (asmcomp/asmgen.ml[123,4215+10]..[123,4215+21])
                                      ]
                                    expression (asmcomp/asmgen.ml[123,4215+27]..[123,4215+60])
                                      Pexp_apply
                                      expression (asmcomp/asmgen.ml[123,4215+27]..[123,4215+48])
                                        Pexp_ident "Printmach.preferences" (asmcomp/asmgen.ml[123,4215+27]..[123,4215+48])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[123,4215+49]..[123,4215+57])
                                            Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[123,4215+49]..[123,4215+57])
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[123,4215+58]..[123,4215+60])
                                            Pexp_construct "()" (asmcomp/asmgen.ml[123,4215+58]..[123,4215+60])
                                            None
                                      ]
                                    None
                                  expression (asmcomp/asmgen.ml[124,4277+6]..[124,4277+35])
                                    Pexp_apply
                                    expression (asmcomp/asmgen.ml[124,4277+6]..[124,4277+33])
                                      Pexp_ident "Coloring.allocate_registers" (asmcomp/asmgen.ml[124,4277+6]..[124,4277+33])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/asmgen.ml[124,4277+33]..[124,4277+35])
                                          Pexp_construct "()" (asmcomp/asmgen.ml[124,4277+33]..[124,4277+35])
                                          None
                                    ]
                    ]
                    expression (asmcomp/asmgen.ml[127,4326+2]..[132,4642+16])
                      Pexp_sequence
                      expression (asmcomp/asmgen.ml[127,4326+2]..[127,4326+63])
                        Pexp_apply
                        expression (asmcomp/asmgen.ml[127,4326+2]..[127,4326+9])
                          Pexp_ident "dump_if" (asmcomp/asmgen.ml[127,4326+2]..[127,4326+9])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/asmgen.ml[127,4326+10]..[127,4326+18])
                              Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[127,4326+10]..[127,4326+18])
                          <arg>
                          Nolabel
                            expression (asmcomp/asmgen.ml[127,4326+19]..[127,4326+32])
                              Pexp_ident "dump_regalloc" (asmcomp/asmgen.ml[127,4326+19]..[127,4326+32])
                          <arg>
                          Nolabel
                            expression (asmcomp/asmgen.ml[127,4326+33]..[127,4326+60])
                              Pexp_constant PConst_string("After register allocation",(asmcomp/asmgen.ml[127,4326+34]..[127,4326+59]),None)
                          <arg>
                          Nolabel
                            expression (asmcomp/asmgen.ml[127,4326+61]..[127,4326+63])
                              Pexp_ident "fd" (asmcomp/asmgen.ml[127,4326+61]..[127,4326+63])
                        ]
                      expression (asmcomp/asmgen.ml[128,4391+2]..[132,4642+16])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (asmcomp/asmgen.ml[128,4391+6]..[128,4391+28])
                              Ppat_tuple
                              [
                                pattern (asmcomp/asmgen.ml[128,4391+7]..[128,4391+12])
                                  Ppat_var "newfd" (asmcomp/asmgen.ml[128,4391+7]..[128,4391+12])
                                pattern (asmcomp/asmgen.ml[128,4391+14]..[128,4391+27])
                                  Ppat_var "redo_regalloc" (asmcomp/asmgen.ml[128,4391+14]..[128,4391+27])
                              ]
                            expression (asmcomp/asmgen.ml[128,4391+31]..[128,4391+64])
                              Pexp_apply
                              expression (asmcomp/asmgen.ml[128,4391+31]..[128,4391+45])
                                Pexp_ident "Reload.fundecl" (asmcomp/asmgen.ml[128,4391+31]..[128,4391+45])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/asmgen.ml[128,4391+46]..[128,4391+48])
                                    Pexp_ident "fd" (asmcomp/asmgen.ml[128,4391+46]..[128,4391+48])
                                <arg>
                                Nolabel
                                  expression (asmcomp/asmgen.ml[128,4391+49]..[128,4391+64])
                                    Pexp_ident "num_stack_slots" (asmcomp/asmgen.ml[128,4391+49]..[128,4391+64])
                              ]
                        ]
                        expression (asmcomp/asmgen.ml[129,4459+2]..[132,4642+16])
                          Pexp_sequence
                          expression (asmcomp/asmgen.ml[129,4459+2]..[129,4459+72])
                            Pexp_apply
                            expression (asmcomp/asmgen.ml[129,4459+2]..[129,4459+9])
                              Pexp_ident "dump_if" (asmcomp/asmgen.ml[129,4459+2]..[129,4459+9])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/asmgen.ml[129,4459+10]..[129,4459+18])
                                  Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[129,4459+10]..[129,4459+18])
                              <arg>
                              Nolabel
                                expression (asmcomp/asmgen.ml[129,4459+19]..[129,4459+30])
                                  Pexp_ident "dump_reload" (asmcomp/asmgen.ml[129,4459+19]..[129,4459+30])
                              <arg>
                              Nolabel
                                expression (asmcomp/asmgen.ml[129,4459+31]..[129,4459+66])
                                  Pexp_constant PConst_string("After insertion of reloading code",(asmcomp/asmgen.ml[129,4459+32]..[129,4459+65]),None)
                              <arg>
                              Nolabel
                                expression (asmcomp/asmgen.ml[129,4459+67]..[129,4459+72])
                                  Pexp_ident "newfd" (asmcomp/asmgen.ml[129,4459+67]..[129,4459+72])
                            ]
                          expression (asmcomp/asmgen.ml[130,4533+2]..[132,4642+16])
                            Pexp_ifthenelse
                            expression (asmcomp/asmgen.ml[130,4533+5]..[130,4533+18])
                              Pexp_ident "redo_regalloc" (asmcomp/asmgen.ml[130,4533+5]..[130,4533+18])
                            expression (asmcomp/asmgen.ml[130,4533+24]..[132,4642+5])
                              Pexp_sequence
                              expression (asmcomp/asmgen.ml[131,4563+4]..[131,4563+16])
                                Pexp_apply
                                expression (asmcomp/asmgen.ml[131,4563+4]..[131,4563+14])
                                  Pexp_ident "Reg.reinit" (asmcomp/asmgen.ml[131,4563+4]..[131,4563+14])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[131,4563+14]..[131,4563+16])
                                      Pexp_construct "()" (asmcomp/asmgen.ml[131,4563+14]..[131,4563+16])
                                      None
                                ]
                              expression (asmcomp/asmgen.ml[131,4563+18]..[131,4563+78])
                                Pexp_sequence
                                expression (asmcomp/asmgen.ml[131,4563+18]..[131,4563+40])
                                  Pexp_apply
                                  expression (asmcomp/asmgen.ml[131,4563+18]..[131,4563+34])
                                    Pexp_ident "Liveness.fundecl" (asmcomp/asmgen.ml[131,4563+18]..[131,4563+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/asmgen.ml[131,4563+35]..[131,4563+40])
                                        Pexp_ident "newfd" (asmcomp/asmgen.ml[131,4563+35]..[131,4563+40])
                                  ]
                                expression (asmcomp/asmgen.ml[131,4563+42]..[131,4563+78])
                                  Pexp_apply
                                  expression (asmcomp/asmgen.ml[131,4563+42]..[131,4563+50])
                                    Pexp_ident "regalloc" (asmcomp/asmgen.ml[131,4563+42]..[131,4563+50])
                                  [
                                    <arg>
                                    Labelled "ppf_dump"
                                      expression (asmcomp/asmgen.ml[131,4563+52]..[131,4563+60])
                                        Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[131,4563+52]..[131,4563+60])
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/asmgen.ml[131,4563+61]..[131,4563+72])
                                        Pexp_apply
                                        expression (asmcomp/asmgen.ml[131,4563+68]..[131,4563+69])
                                          Pexp_ident "+" (asmcomp/asmgen.ml[131,4563+68]..[131,4563+69])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/asmgen.ml[131,4563+62]..[131,4563+67])
                                              Pexp_ident "round" (asmcomp/asmgen.ml[131,4563+62]..[131,4563+67])
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/asmgen.ml[131,4563+70]..[131,4563+71])
                                              Pexp_constant PConst_int (1,None)
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/asmgen.ml[131,4563+73]..[131,4563+78])
                                        Pexp_ident "newfd" (asmcomp/asmgen.ml[131,4563+73]..[131,4563+78])
                                  ]
                            Some
                              expression (asmcomp/asmgen.ml[132,4642+11]..[132,4642+16])
                                Pexp_ident "newfd" (asmcomp/asmgen.ml[132,4642+11]..[132,4642+16])
    ]
  structure_item (asmcomp/asmgen.ml[134,4660+0]..[134,4660+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[134,4660+4]..[134,4660+8])
          Ppat_var "++" (asmcomp/asmgen.ml[134,4660+4]..[134,4660+8])
        expression (asmcomp/asmgen.ml[134,4660+9]..[134,4660+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[134,4660+9]..[134,4660+10])
            Ppat_var "x" (asmcomp/asmgen.ml[134,4660+9]..[134,4660+10])
          expression (asmcomp/asmgen.ml[134,4660+11]..[134,4660+18]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/asmgen.ml[134,4660+11]..[134,4660+12])
              Ppat_var "f" (asmcomp/asmgen.ml[134,4660+11]..[134,4660+12])
            expression (asmcomp/asmgen.ml[134,4660+15]..[134,4660+18])
              Pexp_apply
              expression (asmcomp/asmgen.ml[134,4660+15]..[134,4660+16])
                Pexp_ident "f" (asmcomp/asmgen.ml[134,4660+15]..[134,4660+16])
              [
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[134,4660+17]..[134,4660+18])
                    Pexp_ident "x" (asmcomp/asmgen.ml[134,4660+17]..[134,4660+18])
              ]
    ]
  structure_item (asmcomp/asmgen.ml[136,4680+0]..[165,6304+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[136,4680+4]..[136,4680+19])
          Ppat_var "compile_fundecl" (asmcomp/asmgen.ml[136,4680+4]..[136,4680+19])
        expression (asmcomp/asmgen.ml[136,4680+20]..[165,6304+17]) ghost
          Pexp_fun
          Labelled "ppf_dump"
          None
          pattern (asmcomp/asmgen.ml[136,4680+21]..[136,4680+29])
            Ppat_var "ppf_dump" (asmcomp/asmgen.ml[136,4680+21]..[136,4680+29])
          expression (asmcomp/asmgen.ml[136,4680+30]..[165,6304+17]) ghost
            Pexp_fun
            Labelled "funcnames"
            None
            pattern (asmcomp/asmgen.ml[136,4680+31]..[136,4680+40])
              Ppat_var "funcnames" (asmcomp/asmgen.ml[136,4680+31]..[136,4680+40])
            expression (asmcomp/asmgen.ml[136,4680+41]..[165,6304+17]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (asmcomp/asmgen.ml[136,4680+41]..[136,4680+47])
                Ppat_var "fd_cmm" (asmcomp/asmgen.ml[136,4680+41]..[136,4680+47])
              expression (asmcomp/asmgen.ml[137,4730+2]..[165,6304+17])
                Pexp_sequence
                expression (asmcomp/asmgen.ml[137,4730+2]..[137,4730+14])
                  Pexp_apply
                  expression (asmcomp/asmgen.ml[137,4730+2]..[137,4730+11])
                    Pexp_ident "Proc.init" (asmcomp/asmgen.ml[137,4730+2]..[137,4730+11])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[137,4730+12]..[137,4730+14])
                        Pexp_construct "()" (asmcomp/asmgen.ml[137,4730+12]..[137,4730+14])
                        None
                  ]
                expression (asmcomp/asmgen.ml[138,4746+2]..[165,6304+17])
                  Pexp_sequence
                  expression (asmcomp/asmgen.ml[138,4746+2]..[138,4746+13])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[138,4746+2]..[138,4746+11])
                      Pexp_ident "Reg.reset" (asmcomp/asmgen.ml[138,4746+2]..[138,4746+11])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[138,4746+11]..[138,4746+13])
                          Pexp_construct "()" (asmcomp/asmgen.ml[138,4746+11]..[138,4746+13])
                          None
                    ]
                  expression (asmcomp/asmgen.ml[139,4761+2]..[165,6304+17])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[165,6304+2]..[165,6304+4])
                      Pexp_ident "++" (asmcomp/asmgen.ml[165,6304+2]..[165,6304+4])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[139,4761+2]..[164,6287+16])
                          Pexp_apply
                          expression (asmcomp/asmgen.ml[164,6287+2]..[164,6287+4])
                            Pexp_ident "++" (asmcomp/asmgen.ml[164,6287+2]..[164,6287+4])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[139,4761+2]..[163,6206+80])
                                Pexp_apply
                                expression (asmcomp/asmgen.ml[163,6206+2]..[163,6206+4])
                                  Pexp_ident "++" (asmcomp/asmgen.ml[163,6206+2]..[163,6206+4])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[139,4761+2]..[162,6137+68])
                                      Pexp_apply
                                      expression (asmcomp/asmgen.ml[162,6137+2]..[162,6137+4])
                                        Pexp_ident "++" (asmcomp/asmgen.ml[162,6137+2]..[162,6137+4])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[139,4761+2]..[161,6073+63])
                                            Pexp_apply
                                            expression (asmcomp/asmgen.ml[161,6073+2]..[161,6073+4])
                                              Pexp_ident "++" (asmcomp/asmgen.ml[161,6073+2]..[161,6073+4])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (asmcomp/asmgen.ml[139,4761+2]..[160,6006+66])
                                                  Pexp_apply
                                                  expression (asmcomp/asmgen.ml[160,6006+2]..[160,6006+4])
                                                    Pexp_ident "++" (asmcomp/asmgen.ml[160,6006+2]..[160,6006+4])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (asmcomp/asmgen.ml[139,4761+2]..[159,5935+70])
                                                        Pexp_apply
                                                        expression (asmcomp/asmgen.ml[159,5935+2]..[159,5935+4])
                                                          Pexp_ident "++" (asmcomp/asmgen.ml[159,5935+2]..[159,5935+4])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (asmcomp/asmgen.ml[139,4761+2]..[158,5878+56])
                                                              Pexp_apply
                                                              expression (asmcomp/asmgen.ml[158,5878+2]..[158,5878+4])
                                                                Pexp_ident "++" (asmcomp/asmgen.ml[158,5878+2]..[158,5878+4])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/asmgen.ml[139,4761+2]..[157,5811+66])
                                                                    Pexp_apply
                                                                    expression (asmcomp/asmgen.ml[157,5811+2]..[157,5811+4])
                                                                      Pexp_ident "++" (asmcomp/asmgen.ml[157,5811+2]..[157,5811+4])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (asmcomp/asmgen.ml[139,4761+2]..[156,5752+58])
  Pexp_apply
  expression (asmcomp/asmgen.ml[156,5752+2]..[156,5752+4])
    Pexp_ident "++" (asmcomp/asmgen.ml[156,5752+2]..[156,5752+4])
  [
    <arg>
    Nolabel
      expression (asmcomp/asmgen.ml[139,4761+2]..[155,5697+54])
        Pexp_apply
        expression (asmcomp/asmgen.ml[155,5697+2]..[155,5697+4])
          Pexp_ident "++" (asmcomp/asmgen.ml[155,5697+2]..[155,5697+4])
        [
          <arg>
          Nolabel
            expression (asmcomp/asmgen.ml[139,4761+2]..[154,5640+56])
              Pexp_apply
              expression (asmcomp/asmgen.ml[154,5640+2]..[154,5640+4])
                Pexp_ident "++" (asmcomp/asmgen.ml[154,5640+2]..[154,5640+4])
              [
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[139,4761+2]..[153,5581+58])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[153,5581+2]..[153,5581+4])
                      Pexp_ident "++" (asmcomp/asmgen.ml[153,5581+2]..[153,5581+4])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[139,4761+2]..[152,5524+56])
                          Pexp_apply
                          expression (asmcomp/asmgen.ml[152,5524+2]..[152,5524+4])
                            Pexp_ident "++" (asmcomp/asmgen.ml[152,5524+2]..[152,5524+4])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[139,4761+2]..[151,5459+64])
                                Pexp_apply
                                expression (asmcomp/asmgen.ml[151,5459+2]..[151,5459+4])
                                  Pexp_ident "++" (asmcomp/asmgen.ml[151,5459+2]..[151,5459+4])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[139,4761+2]..[150,5402+56])
                                      Pexp_apply
                                      expression (asmcomp/asmgen.ml[150,5402+2]..[150,5402+4])
                                        Pexp_ident "++" (asmcomp/asmgen.ml[150,5402+2]..[150,5402+4])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[139,4761+2]..[149,5354+47])
                                            Pexp_apply
                                            expression (asmcomp/asmgen.ml[149,5354+2]..[149,5354+4])
                                              Pexp_ident "++" (asmcomp/asmgen.ml[149,5354+2]..[149,5354+4])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (asmcomp/asmgen.ml[139,4761+2]..[148,5299+54])
                                                  Pexp_apply
                                                  expression (asmcomp/asmgen.ml[148,5299+2]..[148,5299+4])
                                                    Pexp_ident "++" (asmcomp/asmgen.ml[148,5299+2]..[148,5299+4])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (asmcomp/asmgen.ml[139,4761+2]..[147,5230+68])
                                                        Pexp_apply
                                                        expression (asmcomp/asmgen.ml[147,5230+2]..[147,5230+4])
                                                          Pexp_ident "++" (asmcomp/asmgen.ml[147,5230+2]..[147,5230+4])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (asmcomp/asmgen.ml[139,4761+2]..[146,5163+66])
                                                              Pexp_apply
                                                              expression (asmcomp/asmgen.ml[146,5163+2]..[146,5163+4])
                                                                Pexp_ident "++" (asmcomp/asmgen.ml[146,5163+2]..[146,5163+4])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/asmgen.ml[139,4761+2]..[145,5091+71])
                                                                    Pexp_apply
                                                                    expression (asmcomp/asmgen.ml[145,5091+2]..[145,5091+4])
                                                                      Pexp_ident "++" (asmcomp/asmgen.ml[145,5091+2]..[145,5091+4])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (asmcomp/asmgen.ml[139,4761+2]..[144,5014+76])
  Pexp_apply
  expression (asmcomp/asmgen.ml[143,4967+2]..[143,4967+4])
    Pexp_ident "++" (asmcomp/asmgen.ml[143,4967+2]..[143,4967+4])
  [
    <arg>
    Nolabel
      expression (asmcomp/asmgen.ml[139,4761+2]..[142,4899+67])
        Pexp_apply
        expression (asmcomp/asmgen.ml[141,4850+2]..[141,4850+4])
          Pexp_ident "++" (asmcomp/asmgen.ml[141,4850+2]..[141,4850+4])
        [
          <arg>
          Nolabel
            expression (asmcomp/asmgen.ml[139,4761+2]..[140,4770+79])
              Pexp_apply
              expression (asmcomp/asmgen.ml[140,4770+2]..[140,4770+4])
                Pexp_ident "++" (asmcomp/asmgen.ml[140,4770+2]..[140,4770+4])
              [
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[139,4761+2]..[139,4761+8])
                    Pexp_ident "fd_cmm" (asmcomp/asmgen.ml[139,4761+2]..[139,4761+8])
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[140,4770+5]..[140,4770+79])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[140,4770+5]..[140,4770+19])
                      Pexp_ident "Profile.record" (asmcomp/asmgen.ml[140,4770+5]..[140,4770+19])
                    [
                      <arg>
                      Labelled "accumulate"
                        expression (asmcomp/asmgen.ml[140,4770+32]..[140,4770+36])
                          Pexp_construct "true" (asmcomp/asmgen.ml[140,4770+32]..[140,4770+36])
                          None
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[140,4770+37]..[140,4770+53])
                          Pexp_constant PConst_string("cmm_invariants",(asmcomp/asmgen.ml[140,4770+38]..[140,4770+52]),None)
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[140,4770+54]..[140,4770+79])
                          Pexp_apply
                          expression (asmcomp/asmgen.ml[140,4770+55]..[140,4770+69])
                            Pexp_ident "cmm_invariants" (asmcomp/asmgen.ml[140,4770+55]..[140,4770+69])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[140,4770+70]..[140,4770+78])
                                Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[140,4770+70]..[140,4770+78])
                          ]
                    ]
              ]
          <arg>
          Nolabel
            expression (asmcomp/asmgen.ml[141,4850+5]..[142,4899+67])
              Pexp_apply
              expression (asmcomp/asmgen.ml[141,4850+5]..[141,4850+19])
                Pexp_ident "Profile.record" (asmcomp/asmgen.ml[141,4850+5]..[141,4850+19])
              [
                <arg>
                Labelled "accumulate"
                  expression (asmcomp/asmgen.ml[141,4850+32]..[141,4850+36])
                    Pexp_construct "true" (asmcomp/asmgen.ml[141,4850+32]..[141,4850+36])
                    None
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[141,4850+37]..[141,4850+48])
                    Pexp_constant PConst_string("selection",(asmcomp/asmgen.ml[141,4850+38]..[141,4850+47]),None)
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[142,4899+20]..[142,4899+67])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[142,4899+21]..[142,4899+38])
                      Pexp_ident "Selection.fundecl" (asmcomp/asmgen.ml[142,4899+21]..[142,4899+38])
                    [
                      <arg>
                      Labelled "future_funcnames"
                        expression (asmcomp/asmgen.ml[142,4899+57]..[142,4899+66])
                          Pexp_ident "funcnames" (asmcomp/asmgen.ml[142,4899+57]..[142,4899+66])
                    ]
              ]
        ]
    <arg>
    Nolabel
      expression (asmcomp/asmgen.ml[143,4967+5]..[144,5014+76])
        Pexp_apply
        expression (asmcomp/asmgen.ml[143,4967+5]..[143,4967+19])
          Pexp_ident "Profile.record" (asmcomp/asmgen.ml[143,4967+5]..[143,4967+19])
        [
          <arg>
          Labelled "accumulate"
            expression (asmcomp/asmgen.ml[143,4967+32]..[143,4967+36])
              Pexp_construct "true" (asmcomp/asmgen.ml[143,4967+32]..[143,4967+36])
              None
          <arg>
          Nolabel
            expression (asmcomp/asmgen.ml[143,4967+37]..[143,4967+46])
              Pexp_constant PConst_string("polling",(asmcomp/asmgen.ml[143,4967+38]..[143,4967+45]),None)
          <arg>
          Nolabel
            expression (asmcomp/asmgen.ml[144,5014+20]..[144,5014+76])
              Pexp_apply
              expression (asmcomp/asmgen.ml[144,5014+21]..[144,5014+47])
                Pexp_ident "Polling.instrument_fundecl" (asmcomp/asmgen.ml[144,5014+21]..[144,5014+47])
              [
                <arg>
                Labelled "future_funcnames"
                  expression (asmcomp/asmgen.ml[144,5014+66]..[144,5014+75])
                    Pexp_ident "funcnames" (asmcomp/asmgen.ml[144,5014+66]..[144,5014+75])
              ]
        ]
  ]
                                                                      <arg>
                                                                      Nolabel
expression (asmcomp/asmgen.ml[145,5091+5]..[145,5091+71])
  Pexp_apply
  expression (asmcomp/asmgen.ml[145,5091+5]..[145,5091+17])
    Pexp_ident "pass_dump_if" (asmcomp/asmgen.ml[145,5091+5]..[145,5091+17])
  [
    <arg>
    Nolabel
      expression (asmcomp/asmgen.ml[145,5091+18]..[145,5091+26])
        Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[145,5091+18]..[145,5091+26])
    <arg>
    Nolabel
      expression (asmcomp/asmgen.ml[145,5091+27]..[145,5091+41])
        Pexp_ident "dump_selection" (asmcomp/asmgen.ml[145,5091+27]..[145,5091+41])
    <arg>
    Nolabel
      expression (asmcomp/asmgen.ml[145,5091+42]..[145,5091+71])
        Pexp_constant PConst_string("After instruction selection",(asmcomp/asmgen.ml[145,5091+43]..[145,5091+70]),None)
  ]
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/asmgen.ml[146,5163+5]..[146,5163+66])
                                                                    Pexp_apply
                                                                    expression (asmcomp/asmgen.ml[146,5163+5]..[146,5163+19])
                                                                      Pexp_ident "Profile.record" (asmcomp/asmgen.ml[146,5163+5]..[146,5163+19])
                                                                    [
                                                                      <arg>
                                                                      Labelled "accumulate"
expression (asmcomp/asmgen.ml[146,5163+32]..[146,5163+36])
  Pexp_construct "true" (asmcomp/asmgen.ml[146,5163+32]..[146,5163+36])
  None
                                                                      <arg>
                                                                      Nolabel
expression (asmcomp/asmgen.ml[146,5163+37]..[146,5163+48])
  Pexp_constant PConst_string("comballoc",(asmcomp/asmgen.ml[146,5163+38]..[146,5163+47]),None)
                                                                      <arg>
                                                                      Nolabel
expression (asmcomp/asmgen.ml[146,5163+49]..[146,5163+66])
  Pexp_ident "Comballoc.fundecl" (asmcomp/asmgen.ml[146,5163+49]..[146,5163+66])
                                                                    ]
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (asmcomp/asmgen.ml[147,5230+5]..[147,5230+68])
                                                              Pexp_apply
                                                              expression (asmcomp/asmgen.ml[147,5230+5]..[147,5230+17])
                                                                Pexp_ident "pass_dump_if" (asmcomp/asmgen.ml[147,5230+5]..[147,5230+17])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/asmgen.ml[147,5230+18]..[147,5230+26])
                                                                    Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[147,5230+18]..[147,5230+26])
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/asmgen.ml[147,5230+27]..[147,5230+39])
                                                                    Pexp_ident "dump_combine" (asmcomp/asmgen.ml[147,5230+27]..[147,5230+39])
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/asmgen.ml[147,5230+40]..[147,5230+68])
                                                                    Pexp_constant PConst_string("After allocation combining",(asmcomp/asmgen.ml[147,5230+41]..[147,5230+67]),None)
                                                              ]
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (asmcomp/asmgen.ml[148,5299+5]..[148,5299+54])
                                                        Pexp_apply
                                                        expression (asmcomp/asmgen.ml[148,5299+5]..[148,5299+19])
                                                          Pexp_ident "Profile.record" (asmcomp/asmgen.ml[148,5299+5]..[148,5299+19])
                                                        [
                                                          <arg>
                                                          Labelled "accumulate"
                                                            expression (asmcomp/asmgen.ml[148,5299+32]..[148,5299+36])
                                                              Pexp_construct "true" (asmcomp/asmgen.ml[148,5299+32]..[148,5299+36])
                                                              None
                                                          <arg>
                                                          Nolabel
                                                            expression (asmcomp/asmgen.ml[148,5299+37]..[148,5299+42])
                                                              Pexp_constant PConst_string("cse",(asmcomp/asmgen.ml[148,5299+38]..[148,5299+41]),None)
                                                          <arg>
                                                          Nolabel
                                                            expression (asmcomp/asmgen.ml[148,5299+43]..[148,5299+54])
                                                              Pexp_ident "CSE.fundecl" (asmcomp/asmgen.ml[148,5299+43]..[148,5299+54])
                                                        ]
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (asmcomp/asmgen.ml[149,5354+5]..[149,5354+47])
                                                  Pexp_apply
                                                  expression (asmcomp/asmgen.ml[149,5354+5]..[149,5354+17])
                                                    Pexp_ident "pass_dump_if" (asmcomp/asmgen.ml[149,5354+5]..[149,5354+17])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (asmcomp/asmgen.ml[149,5354+18]..[149,5354+26])
                                                        Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[149,5354+18]..[149,5354+26])
                                                    <arg>
                                                    Nolabel
                                                      expression (asmcomp/asmgen.ml[149,5354+27]..[149,5354+35])
                                                        Pexp_ident "dump_cse" (asmcomp/asmgen.ml[149,5354+27]..[149,5354+35])
                                                    <arg>
                                                    Nolabel
                                                      expression (asmcomp/asmgen.ml[149,5354+36]..[149,5354+47])
                                                        Pexp_constant PConst_string("After CSE",(asmcomp/asmgen.ml[149,5354+37]..[149,5354+46]),None)
                                                  ]
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[150,5402+5]..[150,5402+56])
                                            Pexp_apply
                                            expression (asmcomp/asmgen.ml[150,5402+5]..[150,5402+19])
                                              Pexp_ident "Profile.record" (asmcomp/asmgen.ml[150,5402+5]..[150,5402+19])
                                            [
                                              <arg>
                                              Labelled "accumulate"
                                                expression (asmcomp/asmgen.ml[150,5402+32]..[150,5402+36])
                                                  Pexp_construct "true" (asmcomp/asmgen.ml[150,5402+32]..[150,5402+36])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (asmcomp/asmgen.ml[150,5402+37]..[150,5402+47])
                                                  Pexp_constant PConst_string("liveness",(asmcomp/asmgen.ml[150,5402+38]..[150,5402+46]),None)
                                              <arg>
                                              Nolabel
                                                expression (asmcomp/asmgen.ml[150,5402+48]..[150,5402+56])
                                                  Pexp_ident "liveness" (asmcomp/asmgen.ml[150,5402+48]..[150,5402+56])
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[151,5459+5]..[151,5459+64])
                                      Pexp_apply
                                      expression (asmcomp/asmgen.ml[151,5459+5]..[151,5459+19])
                                        Pexp_ident "Profile.record" (asmcomp/asmgen.ml[151,5459+5]..[151,5459+19])
                                      [
                                        <arg>
                                        Labelled "accumulate"
                                          expression (asmcomp/asmgen.ml[151,5459+32]..[151,5459+36])
                                            Pexp_construct "true" (asmcomp/asmgen.ml[151,5459+32]..[151,5459+36])
                                            None
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[151,5459+37]..[151,5459+47])
                                            Pexp_constant PConst_string("deadcode",(asmcomp/asmgen.ml[151,5459+38]..[151,5459+46]),None)
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[151,5459+48]..[151,5459+64])
                                            Pexp_ident "Deadcode.fundecl" (asmcomp/asmgen.ml[151,5459+48]..[151,5459+64])
                                      ]
                                ]
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[152,5524+5]..[152,5524+56])
                                Pexp_apply
                                expression (asmcomp/asmgen.ml[152,5524+5]..[152,5524+17])
                                  Pexp_ident "pass_dump_if" (asmcomp/asmgen.ml[152,5524+5]..[152,5524+17])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[152,5524+18]..[152,5524+26])
                                      Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[152,5524+18]..[152,5524+26])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[152,5524+27]..[152,5524+36])
                                      Pexp_ident "dump_live" (asmcomp/asmgen.ml[152,5524+27]..[152,5524+36])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[152,5524+37]..[152,5524+56])
                                      Pexp_constant PConst_string("Liveness analysis",(asmcomp/asmgen.ml[152,5524+38]..[152,5524+55]),None)
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[153,5581+5]..[153,5581+58])
                          Pexp_apply
                          expression (asmcomp/asmgen.ml[153,5581+5]..[153,5581+19])
                            Pexp_ident "Profile.record" (asmcomp/asmgen.ml[153,5581+5]..[153,5581+19])
                          [
                            <arg>
                            Labelled "accumulate"
                              expression (asmcomp/asmgen.ml[153,5581+32]..[153,5581+36])
                                Pexp_construct "true" (asmcomp/asmgen.ml[153,5581+32]..[153,5581+36])
                                None
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[153,5581+37]..[153,5581+44])
                                Pexp_constant PConst_string("spill",(asmcomp/asmgen.ml[153,5581+38]..[153,5581+43]),None)
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[153,5581+45]..[153,5581+58])
                                Pexp_ident "Spill.fundecl" (asmcomp/asmgen.ml[153,5581+45]..[153,5581+58])
                          ]
                    ]
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[154,5640+5]..[154,5640+56])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[154,5640+5]..[154,5640+19])
                      Pexp_ident "Profile.record" (asmcomp/asmgen.ml[154,5640+5]..[154,5640+19])
                    [
                      <arg>
                      Labelled "accumulate"
                        expression (asmcomp/asmgen.ml[154,5640+32]..[154,5640+36])
                          Pexp_construct "true" (asmcomp/asmgen.ml[154,5640+32]..[154,5640+36])
                          None
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[154,5640+37]..[154,5640+47])
                          Pexp_constant PConst_string("liveness",(asmcomp/asmgen.ml[154,5640+38]..[154,5640+46]),None)
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[154,5640+48]..[154,5640+56])
                          Pexp_ident "liveness" (asmcomp/asmgen.ml[154,5640+48]..[154,5640+56])
                    ]
              ]
          <arg>
          Nolabel
            expression (asmcomp/asmgen.ml[155,5697+5]..[155,5697+54])
              Pexp_apply
              expression (asmcomp/asmgen.ml[155,5697+5]..[155,5697+17])
                Pexp_ident "pass_dump_if" (asmcomp/asmgen.ml[155,5697+5]..[155,5697+17])
              [
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[155,5697+18]..[155,5697+26])
                    Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[155,5697+18]..[155,5697+26])
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[155,5697+27]..[155,5697+37])
                    Pexp_ident "dump_spill" (asmcomp/asmgen.ml[155,5697+27]..[155,5697+37])
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[155,5697+38]..[155,5697+54])
                    Pexp_constant PConst_string("After spilling",(asmcomp/asmgen.ml[155,5697+39]..[155,5697+53]),None)
              ]
        ]
    <arg>
    Nolabel
      expression (asmcomp/asmgen.ml[156,5752+5]..[156,5752+58])
        Pexp_apply
        expression (asmcomp/asmgen.ml[156,5752+5]..[156,5752+19])
          Pexp_ident "Profile.record" (asmcomp/asmgen.ml[156,5752+5]..[156,5752+19])
        [
          <arg>
          Labelled "accumulate"
            expression (asmcomp/asmgen.ml[156,5752+32]..[156,5752+36])
              Pexp_construct "true" (asmcomp/asmgen.ml[156,5752+32]..[156,5752+36])
              None
          <arg>
          Nolabel
            expression (asmcomp/asmgen.ml[156,5752+37]..[156,5752+44])
              Pexp_constant PConst_string("split",(asmcomp/asmgen.ml[156,5752+38]..[156,5752+43]),None)
          <arg>
          Nolabel
            expression (asmcomp/asmgen.ml[156,5752+45]..[156,5752+58])
              Pexp_ident "Split.fundecl" (asmcomp/asmgen.ml[156,5752+45]..[156,5752+58])
        ]
  ]
                                                                      <arg>
                                                                      Nolabel
expression (asmcomp/asmgen.ml[157,5811+5]..[157,5811+66])
  Pexp_apply
  expression (asmcomp/asmgen.ml[157,5811+5]..[157,5811+17])
    Pexp_ident "pass_dump_if" (asmcomp/asmgen.ml[157,5811+5]..[157,5811+17])
  [
    <arg>
    Nolabel
      expression (asmcomp/asmgen.ml[157,5811+18]..[157,5811+26])
        Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[157,5811+18]..[157,5811+26])
    <arg>
    Nolabel
      expression (asmcomp/asmgen.ml[157,5811+27]..[157,5811+37])
        Pexp_ident "dump_split" (asmcomp/asmgen.ml[157,5811+27]..[157,5811+37])
    <arg>
    Nolabel
      expression (asmcomp/asmgen.ml[157,5811+38]..[157,5811+66])
        Pexp_constant PConst_string("After live range splitting",(asmcomp/asmgen.ml[157,5811+39]..[157,5811+65]),None)
  ]
                                                                    ]
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/asmgen.ml[158,5878+5]..[158,5878+56])
                                                                    Pexp_apply
                                                                    expression (asmcomp/asmgen.ml[158,5878+5]..[158,5878+19])
                                                                      Pexp_ident "Profile.record" (asmcomp/asmgen.ml[158,5878+5]..[158,5878+19])
                                                                    [
                                                                      <arg>
                                                                      Labelled "accumulate"
expression (asmcomp/asmgen.ml[158,5878+32]..[158,5878+36])
  Pexp_construct "true" (asmcomp/asmgen.ml[158,5878+32]..[158,5878+36])
  None
                                                                      <arg>
                                                                      Nolabel
expression (asmcomp/asmgen.ml[158,5878+37]..[158,5878+47])
  Pexp_constant PConst_string("liveness",(asmcomp/asmgen.ml[158,5878+38]..[158,5878+46]),None)
                                                                      <arg>
                                                                      Nolabel
expression (asmcomp/asmgen.ml[158,5878+48]..[158,5878+56])
  Pexp_ident "liveness" (asmcomp/asmgen.ml[158,5878+48]..[158,5878+56])
                                                                    ]
                                                              ]
                                                          <arg>
                                                          Nolabel
                                                            expression (asmcomp/asmgen.ml[159,5935+5]..[159,5935+70])
                                                              Pexp_apply
                                                              expression (asmcomp/asmgen.ml[159,5935+5]..[159,5935+19])
                                                                Pexp_ident "Profile.record" (asmcomp/asmgen.ml[159,5935+5]..[159,5935+19])
                                                              [
                                                                <arg>
                                                                Labelled "accumulate"
                                                                  expression (asmcomp/asmgen.ml[159,5935+32]..[159,5935+36])
                                                                    Pexp_construct "true" (asmcomp/asmgen.ml[159,5935+32]..[159,5935+36])
                                                                    None
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/asmgen.ml[159,5935+37]..[159,5935+47])
                                                                    Pexp_constant PConst_string("regalloc",(asmcomp/asmgen.ml[159,5935+38]..[159,5935+46]),None)
                                                                <arg>
                                                                Nolabel
                                                                  expression (asmcomp/asmgen.ml[159,5935+48]..[159,5935+70])
                                                                    Pexp_apply
                                                                    expression (asmcomp/asmgen.ml[159,5935+49]..[159,5935+57])
                                                                      Pexp_ident "regalloc" (asmcomp/asmgen.ml[159,5935+49]..[159,5935+57])
                                                                    [
                                                                      <arg>
                                                                      Labelled "ppf_dump"
expression (asmcomp/asmgen.ml[159,5935+59]..[159,5935+67])
  Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[159,5935+59]..[159,5935+67])
                                                                      <arg>
                                                                      Nolabel
expression (asmcomp/asmgen.ml[159,5935+68]..[159,5935+69])
  Pexp_constant PConst_int (1,None)
                                                                    ]
                                                              ]
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (asmcomp/asmgen.ml[160,6006+5]..[160,6006+66])
                                                        Pexp_apply
                                                        expression (asmcomp/asmgen.ml[160,6006+5]..[160,6006+19])
                                                          Pexp_ident "Profile.record" (asmcomp/asmgen.ml[160,6006+5]..[160,6006+19])
                                                        [
                                                          <arg>
                                                          Labelled "accumulate"
                                                            expression (asmcomp/asmgen.ml[160,6006+32]..[160,6006+36])
                                                              Pexp_construct "true" (asmcomp/asmgen.ml[160,6006+32]..[160,6006+36])
                                                              None
                                                          <arg>
                                                          Nolabel
                                                            expression (asmcomp/asmgen.ml[160,6006+37]..[160,6006+48])
                                                              Pexp_constant PConst_string("linearize",(asmcomp/asmgen.ml[160,6006+38]..[160,6006+47]),None)
                                                          <arg>
                                                          Nolabel
                                                            expression (asmcomp/asmgen.ml[160,6006+49]..[160,6006+66])
                                                              Pexp_ident "Linearize.fundecl" (asmcomp/asmgen.ml[160,6006+49]..[160,6006+66])
                                                        ]
                                                  ]
                                              <arg>
                                              Nolabel
                                                expression (asmcomp/asmgen.ml[161,6073+5]..[161,6073+63])
                                                  Pexp_apply
                                                  expression (asmcomp/asmgen.ml[161,6073+5]..[161,6073+24])
                                                    Pexp_ident "pass_dump_linear_if" (asmcomp/asmgen.ml[161,6073+5]..[161,6073+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (asmcomp/asmgen.ml[161,6073+25]..[161,6073+33])
                                                        Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[161,6073+25]..[161,6073+33])
                                                    <arg>
                                                    Nolabel
                                                      expression (asmcomp/asmgen.ml[161,6073+34]..[161,6073+45])
                                                        Pexp_ident "dump_linear" (asmcomp/asmgen.ml[161,6073+34]..[161,6073+45])
                                                    <arg>
                                                    Nolabel
                                                      expression (asmcomp/asmgen.ml[161,6073+46]..[161,6073+63])
                                                        Pexp_constant PConst_string("Linearized code",(asmcomp/asmgen.ml[161,6073+47]..[161,6073+62]),None)
                                                  ]
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[162,6137+5]..[162,6137+68])
                                            Pexp_apply
                                            expression (asmcomp/asmgen.ml[162,6137+5]..[162,6137+19])
                                              Pexp_ident "Profile.record" (asmcomp/asmgen.ml[162,6137+5]..[162,6137+19])
                                            [
                                              <arg>
                                              Labelled "accumulate"
                                                expression (asmcomp/asmgen.ml[162,6137+32]..[162,6137+36])
                                                  Pexp_construct "true" (asmcomp/asmgen.ml[162,6137+32]..[162,6137+36])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (asmcomp/asmgen.ml[162,6137+37]..[162,6137+49])
                                                  Pexp_constant PConst_string("scheduling",(asmcomp/asmgen.ml[162,6137+38]..[162,6137+48]),None)
                                              <arg>
                                              Nolabel
                                                expression (asmcomp/asmgen.ml[162,6137+50]..[162,6137+68])
                                                  Pexp_ident "Scheduling.fundecl" (asmcomp/asmgen.ml[162,6137+50]..[162,6137+68])
                                            ]
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[163,6206+5]..[163,6206+80])
                                      Pexp_apply
                                      expression (asmcomp/asmgen.ml[163,6206+5]..[163,6206+24])
                                        Pexp_ident "pass_dump_linear_if" (asmcomp/asmgen.ml[163,6206+5]..[163,6206+24])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[163,6206+25]..[163,6206+33])
                                            Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[163,6206+25]..[163,6206+33])
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[163,6206+34]..[163,6206+49])
                                            Pexp_ident "dump_scheduling" (asmcomp/asmgen.ml[163,6206+34]..[163,6206+49])
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[163,6206+50]..[163,6206+80])
                                            Pexp_constant PConst_string("After instruction scheduling",(asmcomp/asmgen.ml[163,6206+51]..[163,6206+79]),None)
                                      ]
                                ]
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[164,6287+5]..[164,6287+16])
                                Pexp_ident "save_linear" (asmcomp/asmgen.ml[164,6287+5]..[164,6287+16])
                          ]
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[165,6304+5]..[165,6304+17])
                          Pexp_ident "emit_fundecl" (asmcomp/asmgen.ml[165,6304+5]..[165,6304+17])
                    ]
    ]
  structure_item (asmcomp/asmgen.ml[167,6323+0]..[167,6323+34])
    Pstr_module
    "String" (asmcomp/asmgen.ml[167,6323+7]..[167,6323+13])
      module_expr (asmcomp/asmgen.ml[167,6323+16]..[167,6323+34])
        Pmod_ident "Misc.Stdlib.String" (asmcomp/asmgen.ml[167,6323+16]..[167,6323+34])
  structure_item (asmcomp/asmgen.ml[169,6359+0]..[172,6401+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[169,6359+4]..[169,6359+16])
          Ppat_var "compile_data" (asmcomp/asmgen.ml[169,6359+4]..[169,6359+16])
        expression (asmcomp/asmgen.ml[169,6359+17]..[172,6401+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[169,6359+17]..[169,6359+19])
            Ppat_var "dl" (asmcomp/asmgen.ml[169,6359+17]..[169,6359+19])
          expression (asmcomp/asmgen.ml[170,6381+2]..[172,6401+14])
            Pexp_apply
            expression (asmcomp/asmgen.ml[172,6401+2]..[172,6401+4])
              Pexp_ident "++" (asmcomp/asmgen.ml[172,6401+2]..[172,6401+4])
            [
              <arg>
              Nolabel
                expression (asmcomp/asmgen.ml[170,6381+2]..[171,6386+14])
                  Pexp_apply
                  expression (asmcomp/asmgen.ml[171,6386+2]..[171,6386+4])
                    Pexp_ident "++" (asmcomp/asmgen.ml[171,6386+2]..[171,6386+4])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[170,6381+2]..[170,6381+4])
                        Pexp_ident "dl" (asmcomp/asmgen.ml[170,6381+2]..[170,6381+4])
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[171,6386+5]..[171,6386+14])
                        Pexp_ident "save_data" (asmcomp/asmgen.ml[171,6386+5]..[171,6386+14])
                  ]
              <arg>
              Nolabel
                expression (asmcomp/asmgen.ml[172,6401+5]..[172,6401+14])
                  Pexp_ident "emit_data" (asmcomp/asmgen.ml[172,6401+5]..[172,6401+14])
            ]
    ]
  structure_item (asmcomp/asmgen.ml[174,6417+0]..[195,7039+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[174,6417+4]..[174,6417+19])
          Ppat_var "compile_phrases" (asmcomp/asmgen.ml[174,6417+4]..[174,6417+19])
        expression (asmcomp/asmgen.ml[174,6417+20]..[195,7039+23]) ghost
          Pexp_fun
          Labelled "ppf_dump"
          None
          pattern (asmcomp/asmgen.ml[174,6417+21]..[174,6417+29])
            Ppat_var "ppf_dump" (asmcomp/asmgen.ml[174,6417+21]..[174,6417+29])
          expression (asmcomp/asmgen.ml[174,6417+30]..[195,7039+23]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/asmgen.ml[174,6417+30]..[174,6417+32])
              Ppat_var "ps" (asmcomp/asmgen.ml[174,6417+30]..[174,6417+32])
            expression (asmcomp/asmgen.ml[175,6452+2]..[195,7039+23])
              Pexp_let Nonrec
              [
                <def>
                  pattern (asmcomp/asmgen.ml[175,6452+6]..[175,6452+15])
                    Ppat_var "funcnames" (asmcomp/asmgen.ml[175,6452+6]..[175,6452+15])
                  expression (asmcomp/asmgen.ml[176,6470+4]..[180,6601+25])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[176,6470+4]..[176,6470+18])
                      Pexp_ident "List.fold_left" (asmcomp/asmgen.ml[176,6470+4]..[176,6470+18])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[176,6470+19]..[179,6577+23])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (asmcomp/asmgen.ml[176,6470+24]..[176,6470+25])
                            Ppat_var "s" (asmcomp/asmgen.ml[176,6470+24]..[176,6470+25])
                          expression (asmcomp/asmgen.ml[176,6470+26]..[179,6577+22]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (asmcomp/asmgen.ml[176,6470+26]..[176,6470+27])
                              Ppat_var "p" (asmcomp/asmgen.ml[176,6470+26]..[176,6470+27])
                            expression (asmcomp/asmgen.ml[177,6501+8]..[179,6577+22])
                              Pexp_match
                              expression (asmcomp/asmgen.ml[177,6501+14]..[177,6501+15])
                                Pexp_ident "p" (asmcomp/asmgen.ml[177,6501+14]..[177,6501+15])
                              [
                                <case>
                                  pattern (asmcomp/asmgen.ml[178,6522+10]..[178,6522+22])
                                    Ppat_construct "Cfunction" (asmcomp/asmgen.ml[178,6522+10]..[178,6522+19])
                                    Some
                                      []
                                      pattern (asmcomp/asmgen.ml[178,6522+20]..[178,6522+22])
                                        Ppat_var "fd" (asmcomp/asmgen.ml[178,6522+20]..[178,6522+22])
                                  expression (asmcomp/asmgen.ml[178,6522+26]..[178,6522+54])
                                    Pexp_apply
                                    expression (asmcomp/asmgen.ml[178,6522+26]..[178,6522+40])
                                      Pexp_ident "String.Set.add" (asmcomp/asmgen.ml[178,6522+26]..[178,6522+40])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/asmgen.ml[178,6522+41]..[178,6522+52])
                                          Pexp_field
                                          expression (asmcomp/asmgen.ml[178,6522+41]..[178,6522+43])
                                            Pexp_ident "fd" (asmcomp/asmgen.ml[178,6522+41]..[178,6522+43])
                                          "fun_name" (asmcomp/asmgen.ml[178,6522+44]..[178,6522+52])
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/asmgen.ml[178,6522+53]..[178,6522+54])
                                          Pexp_ident "s" (asmcomp/asmgen.ml[178,6522+53]..[178,6522+54])
                                    ]
                                <case>
                                  pattern (asmcomp/asmgen.ml[179,6577+10]..[179,6577+17])
                                    Ppat_construct "Cdata" (asmcomp/asmgen.ml[179,6577+10]..[179,6577+15])
                                    Some
                                      []
                                      pattern (asmcomp/asmgen.ml[179,6577+16]..[179,6577+17])
                                        Ppat_any
                                  expression (asmcomp/asmgen.ml[179,6577+21]..[179,6577+22])
                                    Pexp_ident "s" (asmcomp/asmgen.ml[179,6577+21]..[179,6577+22])
                              ]
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[180,6601+6]..[180,6601+22])
                          Pexp_ident "String.Set.empty" (asmcomp/asmgen.ml[180,6601+6]..[180,6601+22])
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[180,6601+23]..[180,6601+25])
                          Pexp_ident "ps" (asmcomp/asmgen.ml[180,6601+23]..[180,6601+25])
                    ]
              ]
              expression (asmcomp/asmgen.ml[182,6632+2]..[195,7039+23])
                Pexp_let Rec
                [
                  <def>
                    pattern (asmcomp/asmgen.ml[182,6632+10]..[182,6632+17])
                      Ppat_var "compile" (asmcomp/asmgen.ml[182,6632+10]..[182,6632+17])
                    expression (asmcomp/asmgen.ml[182,6632+18]..[193,7002+31]) ghost
                      Pexp_fun
                      Labelled "funcnames"
                      None
                      pattern (asmcomp/asmgen.ml[182,6632+19]..[182,6632+28])
                        Ppat_var "funcnames" (asmcomp/asmgen.ml[182,6632+19]..[182,6632+28])
                      expression (asmcomp/asmgen.ml[182,6632+29]..[193,7002+31]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (asmcomp/asmgen.ml[182,6632+29]..[182,6632+31])
                          Ppat_var "ps" (asmcomp/asmgen.ml[182,6632+29]..[182,6632+31])
                        expression (asmcomp/asmgen.ml[183,6666+4]..[193,7002+31])
                          Pexp_match
                          expression (asmcomp/asmgen.ml[183,6666+10]..[183,6666+12])
                            Pexp_ident "ps" (asmcomp/asmgen.ml[183,6666+10]..[183,6666+12])
                          [
                            <case>
                              pattern (asmcomp/asmgen.ml[184,6684+6]..[184,6684+8])
                                Ppat_construct "[]" (asmcomp/asmgen.ml[184,6684+6]..[184,6684+8])
                                None
                              expression (asmcomp/asmgen.ml[184,6684+12]..[184,6684+14])
                                Pexp_construct "()" (asmcomp/asmgen.ml[184,6684+12]..[184,6684+14])
                                None
                            <case>
                              pattern (asmcomp/asmgen.ml[185,6699+6]..[185,6699+13])
                                Ppat_construct "::" (asmcomp/asmgen.ml[185,6699+8]..[185,6699+10])
                                Some
                                  []
                                  pattern (asmcomp/asmgen.ml[185,6699+6]..[185,6699+13]) ghost
                                    Ppat_tuple
                                    [
                                      pattern (asmcomp/asmgen.ml[185,6699+6]..[185,6699+7])
                                        Ppat_var "p" (asmcomp/asmgen.ml[185,6699+6]..[185,6699+7])
                                      pattern (asmcomp/asmgen.ml[185,6699+11]..[185,6699+13])
                                        Ppat_var "ps" (asmcomp/asmgen.ml[185,6699+11]..[185,6699+13])
                                    ]
                              expression (asmcomp/asmgen.ml[186,6716+7]..[193,7002+31])
                                Pexp_sequence
                                expression (asmcomp/asmgen.ml[186,6716+7]..[186,6716+66])
                                  Pexp_ifthenelse
                                  expression (asmcomp/asmgen.ml[186,6716+10]..[186,6716+19])
                                    Pexp_apply
                                    expression (asmcomp/asmgen.ml[186,6716+10]..[186,6716+11])
                                      Pexp_ident "!" (asmcomp/asmgen.ml[186,6716+10]..[186,6716+11])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/asmgen.ml[186,6716+11]..[186,6716+19])
                                          Pexp_ident "dump_cmm" (asmcomp/asmgen.ml[186,6716+11]..[186,6716+19])
                                    ]
                                  expression (asmcomp/asmgen.ml[186,6716+25]..[186,6716+66])
                                    Pexp_apply
                                    expression (asmcomp/asmgen.ml[186,6716+25]..[186,6716+32])
                                      Pexp_ident "fprintf" (asmcomp/asmgen.ml[186,6716+25]..[186,6716+32])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/asmgen.ml[186,6716+33]..[186,6716+41])
                                          Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[186,6716+33]..[186,6716+41])
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/asmgen.ml[186,6716+42]..[186,6716+48])
                                          Pexp_constant PConst_string("%a@.",(asmcomp/asmgen.ml[186,6716+43]..[186,6716+47]),None)
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/asmgen.ml[186,6716+49]..[186,6716+64])
                                          Pexp_ident "Printcmm.phrase" (asmcomp/asmgen.ml[186,6716+49]..[186,6716+64])
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/asmgen.ml[186,6716+65]..[186,6716+66])
                                          Pexp_ident "p" (asmcomp/asmgen.ml[186,6716+65]..[186,6716+66])
                                    ]
                                  None
                                expression (asmcomp/asmgen.ml[187,6784+7]..[193,7002+31])
                                  Pexp_match
                                  expression (asmcomp/asmgen.ml[187,6784+13]..[187,6784+14])
                                    Pexp_ident "p" (asmcomp/asmgen.ml[187,6784+13]..[187,6784+14])
                                  [
                                    <case>
                                      pattern (asmcomp/asmgen.ml[188,6804+9]..[188,6804+21])
                                        Ppat_construct "Cfunction" (asmcomp/asmgen.ml[188,6804+9]..[188,6804+18])
                                        Some
                                          []
                                          pattern (asmcomp/asmgen.ml[188,6804+19]..[188,6804+21])
                                            Ppat_var "fd" (asmcomp/asmgen.ml[188,6804+19]..[188,6804+21])
                                      expression (asmcomp/asmgen.ml[189,6829+10]..[190,6880+73])
                                        Pexp_sequence
                                        expression (asmcomp/asmgen.ml[189,6829+10]..[189,6829+49])
                                          Pexp_apply
                                          expression (asmcomp/asmgen.ml[189,6829+10]..[189,6829+25])
                                            Pexp_ident "compile_fundecl" (asmcomp/asmgen.ml[189,6829+10]..[189,6829+25])
                                          [
                                            <arg>
                                            Labelled "ppf_dump"
                                              expression (asmcomp/asmgen.ml[189,6829+27]..[189,6829+35])
                                                Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[189,6829+27]..[189,6829+35])
                                            <arg>
                                            Labelled "funcnames"
                                              expression (asmcomp/asmgen.ml[189,6829+37]..[189,6829+46])
                                                Pexp_ident "funcnames" (asmcomp/asmgen.ml[189,6829+37]..[189,6829+46])
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/asmgen.ml[189,6829+47]..[189,6829+49])
                                                Pexp_ident "fd" (asmcomp/asmgen.ml[189,6829+47]..[189,6829+49])
                                          ]
                                        expression (asmcomp/asmgen.ml[190,6880+10]..[190,6880+73])
                                          Pexp_apply
                                          expression (asmcomp/asmgen.ml[190,6880+10]..[190,6880+17])
                                            Pexp_ident "compile" (asmcomp/asmgen.ml[190,6880+10]..[190,6880+17])
                                          [
                                            <arg>
                                            Labelled "funcnames"
                                              expression (asmcomp/asmgen.ml[190,6880+29]..[190,6880+70])
                                                Pexp_apply
                                                expression (asmcomp/asmgen.ml[190,6880+30]..[190,6880+47])
                                                  Pexp_ident "String.Set.remove" (asmcomp/asmgen.ml[190,6880+30]..[190,6880+47])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (asmcomp/asmgen.ml[190,6880+48]..[190,6880+59])
                                                      Pexp_field
                                                      expression (asmcomp/asmgen.ml[190,6880+48]..[190,6880+50])
                                                        Pexp_ident "fd" (asmcomp/asmgen.ml[190,6880+48]..[190,6880+50])
                                                      "fun_name" (asmcomp/asmgen.ml[190,6880+51]..[190,6880+59])
                                                  <arg>
                                                  Nolabel
                                                    expression (asmcomp/asmgen.ml[190,6880+60]..[190,6880+69])
                                                      Pexp_ident "funcnames" (asmcomp/asmgen.ml[190,6880+60]..[190,6880+69])
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/asmgen.ml[190,6880+71]..[190,6880+73])
                                                Pexp_ident "ps" (asmcomp/asmgen.ml[190,6880+71]..[190,6880+73])
                                          ]
                                    <case>
                                      pattern (asmcomp/asmgen.ml[191,6954+9]..[191,6954+17])
                                        Ppat_construct "Cdata" (asmcomp/asmgen.ml[191,6954+9]..[191,6954+14])
                                        Some
                                          []
                                          pattern (asmcomp/asmgen.ml[191,6954+15]..[191,6954+17])
                                            Ppat_var "dl" (asmcomp/asmgen.ml[191,6954+15]..[191,6954+17])
                                      expression (asmcomp/asmgen.ml[192,6975+10]..[193,7002+31])
                                        Pexp_sequence
                                        expression (asmcomp/asmgen.ml[192,6975+10]..[192,6975+25])
                                          Pexp_apply
                                          expression (asmcomp/asmgen.ml[192,6975+10]..[192,6975+22])
                                            Pexp_ident "compile_data" (asmcomp/asmgen.ml[192,6975+10]..[192,6975+22])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/asmgen.ml[192,6975+23]..[192,6975+25])
                                                Pexp_ident "dl" (asmcomp/asmgen.ml[192,6975+23]..[192,6975+25])
                                          ]
                                        expression (asmcomp/asmgen.ml[193,7002+10]..[193,7002+31])
                                          Pexp_apply
                                          expression (asmcomp/asmgen.ml[193,7002+10]..[193,7002+17])
                                            Pexp_ident "compile" (asmcomp/asmgen.ml[193,7002+10]..[193,7002+17])
                                          [
                                            <arg>
                                            Labelled "funcnames"
                                              expression (asmcomp/asmgen.ml[193,7002+19]..[193,7002+28])
                                                Pexp_ident "funcnames" (asmcomp/asmgen.ml[193,7002+19]..[193,7002+28])
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/asmgen.ml[193,7002+29]..[193,7002+31])
                                                Pexp_ident "ps" (asmcomp/asmgen.ml[193,7002+29]..[193,7002+31])
                                          ]
                                  ]
                          ]
                ]
                expression (asmcomp/asmgen.ml[195,7039+2]..[195,7039+23])
                  Pexp_apply
                  expression (asmcomp/asmgen.ml[195,7039+2]..[195,7039+9])
                    Pexp_ident "compile" (asmcomp/asmgen.ml[195,7039+2]..[195,7039+9])
                  [
                    <arg>
                    Labelled "funcnames"
                      expression (asmcomp/asmgen.ml[195,7039+11]..[195,7039+20])
                        Pexp_ident "funcnames" (asmcomp/asmgen.ml[195,7039+11]..[195,7039+20])
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[195,7039+21]..[195,7039+23])
                        Pexp_ident "ps" (asmcomp/asmgen.ml[195,7039+21]..[195,7039+23])
                  ]
    ]
  structure_item (asmcomp/asmgen.ml[197,7064+0]..[198,7097+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[197,7064+4]..[197,7064+18])
          Ppat_var "compile_phrase" (asmcomp/asmgen.ml[197,7064+4]..[197,7064+18])
        expression (asmcomp/asmgen.ml[197,7064+19]..[198,7097+31]) ghost
          Pexp_fun
          Labelled "ppf_dump"
          None
          pattern (asmcomp/asmgen.ml[197,7064+20]..[197,7064+28])
            Ppat_var "ppf_dump" (asmcomp/asmgen.ml[197,7064+20]..[197,7064+28])
          expression (asmcomp/asmgen.ml[197,7064+29]..[198,7097+31]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/asmgen.ml[197,7064+29]..[197,7064+30])
              Ppat_var "p" (asmcomp/asmgen.ml[197,7064+29]..[197,7064+30])
            expression (asmcomp/asmgen.ml[198,7097+2]..[198,7097+31])
              Pexp_apply
              expression (asmcomp/asmgen.ml[198,7097+2]..[198,7097+17])
                Pexp_ident "compile_phrases" (asmcomp/asmgen.ml[198,7097+2]..[198,7097+17])
              [
                <arg>
                Labelled "ppf_dump"
                  expression (asmcomp/asmgen.ml[198,7097+19]..[198,7097+27])
                    Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[198,7097+19]..[198,7097+27])
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[198,7097+28]..[198,7097+31])
                    Pexp_construct "::" (asmcomp/asmgen.ml[198,7097+29]..[198,7097+31]) ghost
                    Some
                      expression (asmcomp/asmgen.ml[198,7097+29]..[198,7097+31]) ghost
                        Pexp_tuple
                        [
                          expression (asmcomp/asmgen.ml[198,7097+29]..[198,7097+30])
                            Pexp_ident "p" (asmcomp/asmgen.ml[198,7097+29]..[198,7097+30])
                          expression (asmcomp/asmgen.ml[198,7097+30]..[198,7097+31]) ghost
                            Pexp_construct "[]" (asmcomp/asmgen.ml[198,7097+30]..[198,7097+31]) ghost
                            None
                        ]
              ]
    ]
  structure_item (asmcomp/asmgen.ml[202,7241+0]..[208,7418+74])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[202,7241+4]..[202,7241+19])
          Ppat_var "compile_genfuns" (asmcomp/asmgen.ml[202,7241+4]..[202,7241+19])
        expression (asmcomp/asmgen.ml[202,7241+20]..[208,7418+74]) ghost
          Pexp_fun
          Labelled "ppf_dump"
          None
          pattern (asmcomp/asmgen.ml[202,7241+21]..[202,7241+29])
            Ppat_var "ppf_dump" (asmcomp/asmgen.ml[202,7241+21]..[202,7241+29])
          expression (asmcomp/asmgen.ml[202,7241+30]..[208,7418+74]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (asmcomp/asmgen.ml[202,7241+30]..[202,7241+31])
              Ppat_var "f" (asmcomp/asmgen.ml[202,7241+30]..[202,7241+31])
            expression (asmcomp/asmgen.ml[203,7275+2]..[208,7418+74])
              Pexp_apply
              expression (asmcomp/asmgen.ml[203,7275+2]..[203,7275+11])
                Pexp_ident "List.iter" (asmcomp/asmgen.ml[203,7275+2]..[203,7275+11])
              [
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[204,7287+4]..[207,7400+17])
                    Pexp_function
                    [
                      <case>
                        pattern (asmcomp/asmgen.ml[205,7301+9]..[205,7301+44])
                          Ppat_alias "ph" (asmcomp/asmgen.ml[205,7301+42]..[205,7301+44])
                          pattern (asmcomp/asmgen.ml[205,7301+9]..[205,7301+38])
                            Ppat_construct "Cfunction" (asmcomp/asmgen.ml[205,7301+10]..[205,7301+19])
                            Some
                              []
                              pattern (asmcomp/asmgen.ml[205,7301+20]..[205,7301+37])
                                Ppat_record Closed
                                [
                                  "fun_name" (asmcomp/asmgen.ml[205,7301+21]..[205,7301+29])
                                    pattern (asmcomp/asmgen.ml[205,7301+32]..[205,7301+36])
                                      Ppat_var "name" (asmcomp/asmgen.ml[205,7301+32]..[205,7301+36])
                                ]
                        <when>
                          expression (asmcomp/asmgen.ml[205,7301+50]..[205,7301+56])
                            Pexp_apply
                            expression (asmcomp/asmgen.ml[205,7301+50]..[205,7301+51])
                              Pexp_ident "f" (asmcomp/asmgen.ml[205,7301+50]..[205,7301+51])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/asmgen.ml[205,7301+52]..[205,7301+56])
                                  Pexp_ident "name" (asmcomp/asmgen.ml[205,7301+52]..[205,7301+56])
                            ]
                        expression (asmcomp/asmgen.ml[206,7361+11]..[206,7361+38])
                          Pexp_apply
                          expression (asmcomp/asmgen.ml[206,7361+11]..[206,7361+25])
                            Pexp_ident "compile_phrase" (asmcomp/asmgen.ml[206,7361+11]..[206,7361+25])
                          [
                            <arg>
                            Labelled "ppf_dump"
                              expression (asmcomp/asmgen.ml[206,7361+27]..[206,7361+35])
                                Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[206,7361+27]..[206,7361+35])
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[206,7361+36]..[206,7361+38])
                                Pexp_ident "ph" (asmcomp/asmgen.ml[206,7361+36]..[206,7361+38])
                          ]
                      <case>
                        pattern (asmcomp/asmgen.ml[207,7400+9]..[207,7400+10])
                          Ppat_any
                        expression (asmcomp/asmgen.ml[207,7400+14]..[207,7400+16])
                          Pexp_construct "()" (asmcomp/asmgen.ml[207,7400+14]..[207,7400+16])
                          None
                    ]
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[208,7418+4]..[208,7418+74])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[208,7418+5]..[208,7418+34])
                      Pexp_ident "Cmm_helpers.generic_functions" (asmcomp/asmgen.ml[208,7418+5]..[208,7418+34])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[208,7418+35]..[208,7418+39])
                          Pexp_construct "true" (asmcomp/asmgen.ml[208,7418+35]..[208,7418+39])
                          None
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[208,7418+40]..[208,7418+73])
                          Pexp_construct "::" (asmcomp/asmgen.ml[208,7418+41]..[208,7418+73]) ghost
                          Some
                            expression (asmcomp/asmgen.ml[208,7418+41]..[208,7418+73]) ghost
                              Pexp_tuple
                              [
                                expression (asmcomp/asmgen.ml[208,7418+41]..[208,7418+72])
                                  Pexp_apply
                                  expression (asmcomp/asmgen.ml[208,7418+41]..[208,7418+69])
                                    Pexp_ident "Compilenv.current_unit_infos" (asmcomp/asmgen.ml[208,7418+41]..[208,7418+69])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/asmgen.ml[208,7418+70]..[208,7418+72])
                                        Pexp_construct "()" (asmcomp/asmgen.ml[208,7418+70]..[208,7418+72])
                                        None
                                  ]
                                expression (asmcomp/asmgen.ml[208,7418+72]..[208,7418+73]) ghost
                                  Pexp_construct "[]" (asmcomp/asmgen.ml[208,7418+72]..[208,7418+73]) ghost
                                  None
                              ]
                    ]
              ]
    ]
  structure_item (asmcomp/asmgen.ml[210,7494+0]..[236,8554+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[210,7494+4]..[210,7494+16])
          Ppat_var "compile_unit" (asmcomp/asmgen.ml[210,7494+4]..[210,7494+16])
        expression (asmcomp/asmgen.ml[210,7494+17]..[236,8554+5]) ghost
          Pexp_fun
          Labelled "output_prefix"
          None
          pattern (asmcomp/asmgen.ml[210,7494+18]..[210,7494+31])
            Ppat_var "output_prefix" (asmcomp/asmgen.ml[210,7494+18]..[210,7494+31])
          expression (asmcomp/asmgen.ml[210,7494+32]..[236,8554+5]) ghost
            Pexp_fun
            Labelled "asm_filename"
            None
            pattern (asmcomp/asmgen.ml[210,7494+33]..[210,7494+45])
              Ppat_var "asm_filename" (asmcomp/asmgen.ml[210,7494+33]..[210,7494+45])
            expression (asmcomp/asmgen.ml[210,7494+46]..[236,8554+5]) ghost
              Pexp_fun
              Labelled "keep_asm"
              None
              pattern (asmcomp/asmgen.ml[210,7494+47]..[210,7494+55])
                Ppat_var "keep_asm" (asmcomp/asmgen.ml[210,7494+47]..[210,7494+55])
              expression (asmcomp/asmgen.ml[210,7494+56]..[236,8554+5]) ghost
                Pexp_fun
                Labelled "obj_filename"
                None
                pattern (asmcomp/asmgen.ml[210,7494+57]..[210,7494+69])
                  Ppat_var "obj_filename" (asmcomp/asmgen.ml[210,7494+57]..[210,7494+69])
                expression (asmcomp/asmgen.ml[210,7494+70]..[236,8554+5]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (asmcomp/asmgen.ml[210,7494+70]..[210,7494+73])
                    Ppat_var "gen" (asmcomp/asmgen.ml[210,7494+70]..[210,7494+73])
                  expression (asmcomp/asmgen.ml[211,7570+2]..[236,8554+5])
                    Pexp_sequence
                    expression (asmcomp/asmgen.ml[211,7570+2]..[211,7570+10])
                      Pexp_apply
                      expression (asmcomp/asmgen.ml[211,7570+2]..[211,7570+7])
                        Pexp_ident "reset" (asmcomp/asmgen.ml[211,7570+2]..[211,7570+7])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/asmgen.ml[211,7570+8]..[211,7570+10])
                            Pexp_construct "()" (asmcomp/asmgen.ml[211,7570+8]..[211,7570+10])
                            None
                      ]
                    expression (asmcomp/asmgen.ml[212,7582+2]..[236,8554+5])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (asmcomp/asmgen.ml[212,7582+6]..[212,7582+16])
                            Ppat_var "create_asm" (asmcomp/asmgen.ml[212,7582+6]..[212,7582+16])
                          expression (asmcomp/asmgen.ml[212,7582+19]..[213,7619+70])
                            Pexp_apply
                            expression (asmcomp/asmgen.ml[212,7582+34]..[212,7582+36])
                              Pexp_ident "&&" (asmcomp/asmgen.ml[212,7582+34]..[212,7582+36])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/asmgen.ml[212,7582+19]..[212,7582+33])
                                  Pexp_apply
                                  expression (asmcomp/asmgen.ml[212,7582+19]..[212,7582+30])
                                    Pexp_ident "should_emit" (asmcomp/asmgen.ml[212,7582+19]..[212,7582+30])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/asmgen.ml[212,7582+31]..[212,7582+33])
                                        Pexp_construct "()" (asmcomp/asmgen.ml[212,7582+31]..[212,7582+33])
                                        None
                                  ]
                              <arg>
                              Nolabel
                                expression (asmcomp/asmgen.ml[213,7619+19]..[213,7619+70])
                                  Pexp_apply
                                  expression (asmcomp/asmgen.ml[213,7619+29]..[213,7619+31])
                                    Pexp_ident "||" (asmcomp/asmgen.ml[213,7619+29]..[213,7619+31])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/asmgen.ml[213,7619+20]..[213,7619+28])
                                        Pexp_ident "keep_asm" (asmcomp/asmgen.ml[213,7619+20]..[213,7619+28])
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/asmgen.ml[213,7619+32]..[213,7619+69])
                                        Pexp_apply
                                        expression (asmcomp/asmgen.ml[213,7619+32]..[213,7619+35])
                                          Pexp_ident "not" (asmcomp/asmgen.ml[213,7619+32]..[213,7619+35])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (asmcomp/asmgen.ml[213,7619+36]..[213,7619+69])
                                              Pexp_apply
                                              expression (asmcomp/asmgen.ml[213,7619+36]..[213,7619+37])
                                                Pexp_ident "!" (asmcomp/asmgen.ml[213,7619+36]..[213,7619+37])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/asmgen.ml[213,7619+37]..[213,7619+69])
                                                    Pexp_ident "Emitaux.binary_backend_available" (asmcomp/asmgen.ml[213,7619+37]..[213,7619+69])
                                              ]
                                        ]
                                  ]
                            ]
                      ]
                      expression (asmcomp/asmgen.ml[214,7693+2]..[236,8554+5])
                        Pexp_sequence
                        expression (asmcomp/asmgen.ml[214,7693+2]..[214,7693+39])
                          Pexp_apply
                          expression (asmcomp/asmgen.ml[214,7693+26]..[214,7693+28])
                            Pexp_ident ":=" (asmcomp/asmgen.ml[214,7693+26]..[214,7693+28])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[214,7693+2]..[214,7693+25])
                                Pexp_ident "Emitaux.create_asm_file" (asmcomp/asmgen.ml[214,7693+2]..[214,7693+25])
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[214,7693+29]..[214,7693+39])
                                Pexp_ident "create_asm" (asmcomp/asmgen.ml[214,7693+29]..[214,7693+39])
                          ]
                        expression (asmcomp/asmgen.ml[215,7734+2]..[236,8554+5])
                          Pexp_apply
                          expression (asmcomp/asmgen.ml[215,7734+2]..[215,7734+18])
                            Pexp_ident "Misc.try_finally" (asmcomp/asmgen.ml[215,7734+2]..[215,7734+18])
                          [
                            <arg>
                            Labelled "exceptionally"
                              expression (asmcomp/asmgen.ml[216,7753+19]..[216,7753+55])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (asmcomp/asmgen.ml[216,7753+24]..[216,7753+26])
                                  Ppat_construct "()" (asmcomp/asmgen.ml[216,7753+24]..[216,7753+26])
                                  None
                                expression (asmcomp/asmgen.ml[216,7753+30]..[216,7753+54])
                                  Pexp_apply
                                  expression (asmcomp/asmgen.ml[216,7753+30]..[216,7753+41])
                                    Pexp_ident "remove_file" (asmcomp/asmgen.ml[216,7753+30]..[216,7753+41])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/asmgen.ml[216,7753+42]..[216,7753+54])
                                        Pexp_ident "obj_filename" (asmcomp/asmgen.ml[216,7753+42]..[216,7753+54])
                                  ]
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[217,7809+4]..[236,8554+5])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (asmcomp/asmgen.ml[217,7809+9]..[217,7809+11])
                                  Ppat_construct "()" (asmcomp/asmgen.ml[217,7809+9]..[217,7809+11])
                                  None
                                expression (asmcomp/asmgen.ml[218,7824+7]..[235,8487+66])
                                  Pexp_sequence
                                  expression (asmcomp/asmgen.ml[218,7824+7]..[218,7824+73])
                                    Pexp_ifthenelse
                                    expression (asmcomp/asmgen.ml[218,7824+10]..[218,7824+20])
                                      Pexp_ident "create_asm" (asmcomp/asmgen.ml[218,7824+10]..[218,7824+20])
                                    expression (asmcomp/asmgen.ml[218,7824+26]..[218,7824+73])
                                      Pexp_apply
                                      expression (asmcomp/asmgen.ml[218,7824+49]..[218,7824+51])
                                        Pexp_ident ":=" (asmcomp/asmgen.ml[218,7824+49]..[218,7824+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[218,7824+26]..[218,7824+48])
                                            Pexp_ident "Emitaux.output_channel" (asmcomp/asmgen.ml[218,7824+26]..[218,7824+48])
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[218,7824+52]..[218,7824+73])
                                            Pexp_apply
                                            expression (asmcomp/asmgen.ml[218,7824+52]..[218,7824+60])
                                              Pexp_ident "open_out" (asmcomp/asmgen.ml[218,7824+52]..[218,7824+60])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (asmcomp/asmgen.ml[218,7824+61]..[218,7824+73])
                                                  Pexp_ident "asm_filename" (asmcomp/asmgen.ml[218,7824+61]..[218,7824+73])
                                            ]
                                      ]
                                    None
                                  expression (asmcomp/asmgen.ml[219,7899+7]..[235,8487+66])
                                    Pexp_sequence
                                    expression (asmcomp/asmgen.ml[219,7899+7]..[226,8133+73])
                                      Pexp_apply
                                      expression (asmcomp/asmgen.ml[219,7899+7]..[219,7899+23])
                                        Pexp_ident "Misc.try_finally" (asmcomp/asmgen.ml[219,7899+7]..[219,7899+23])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[220,7923+9]..[222,7963+39])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (asmcomp/asmgen.ml[220,7923+14]..[220,7923+16])
                                              Ppat_construct "()" (asmcomp/asmgen.ml[220,7923+14]..[220,7923+16])
                                              None
                                            expression (asmcomp/asmgen.ml[221,7943+12]..[222,7963+38])
                                              Pexp_sequence
                                              expression (asmcomp/asmgen.ml[221,7943+12]..[221,7943+18])
                                                Pexp_apply
                                                expression (asmcomp/asmgen.ml[221,7943+12]..[221,7943+15])
                                                  Pexp_ident "gen" (asmcomp/asmgen.ml[221,7943+12]..[221,7943+15])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (asmcomp/asmgen.ml[221,7943+16]..[221,7943+18])
                                                      Pexp_construct "()" (asmcomp/asmgen.ml[221,7943+16]..[221,7943+18])
                                                      None
                                                ]
                                              expression (asmcomp/asmgen.ml[222,7963+12]..[222,7963+38])
                                                Pexp_apply
                                                expression (asmcomp/asmgen.ml[222,7963+12]..[222,7963+24])
                                                  Pexp_ident "write_linear" (asmcomp/asmgen.ml[222,7963+12]..[222,7963+24])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (asmcomp/asmgen.ml[222,7963+25]..[222,7963+38])
                                                      Pexp_ident "output_prefix" (asmcomp/asmgen.ml[222,7963+25]..[222,7963+38])
                                                ]
                                        <arg>
                                        Labelled "always"
                                          expression (asmcomp/asmgen.ml[223,8003+17]..[224,8031+66])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (asmcomp/asmgen.ml[223,8003+22]..[223,8003+24])
                                              Ppat_construct "()" (asmcomp/asmgen.ml[223,8003+22]..[223,8003+24])
                                              None
                                            expression (asmcomp/asmgen.ml[224,8031+13]..[224,8031+65])
                                              Pexp_ifthenelse
                                              expression (asmcomp/asmgen.ml[224,8031+16]..[224,8031+26])
                                                Pexp_ident "create_asm" (asmcomp/asmgen.ml[224,8031+16]..[224,8031+26])
                                              expression (asmcomp/asmgen.ml[224,8031+32]..[224,8031+65])
                                                Pexp_apply
                                                expression (asmcomp/asmgen.ml[224,8031+32]..[224,8031+41])
                                                  Pexp_ident "close_out" (asmcomp/asmgen.ml[224,8031+32]..[224,8031+41])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (asmcomp/asmgen.ml[224,8031+42]..[224,8031+65])
                                                      Pexp_apply
                                                      expression (asmcomp/asmgen.ml[224,8031+42]..[224,8031+43])
                                                        Pexp_ident "!" (asmcomp/asmgen.ml[224,8031+42]..[224,8031+43])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (asmcomp/asmgen.ml[224,8031+43]..[224,8031+65])
                                                            Pexp_ident "Emitaux.output_channel" (asmcomp/asmgen.ml[224,8031+43]..[224,8031+65])
                                                      ]
                                                ]
                                              None
                                        <arg>
                                        Labelled "exceptionally"
                                          expression (asmcomp/asmgen.ml[225,8098+24]..[226,8133+73])
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (asmcomp/asmgen.ml[225,8098+29]..[225,8098+31])
                                              Ppat_construct "()" (asmcomp/asmgen.ml[225,8098+29]..[225,8098+31])
                                              None
                                            expression (asmcomp/asmgen.ml[226,8133+13]..[226,8133+72])
                                              Pexp_ifthenelse
                                              expression (asmcomp/asmgen.ml[226,8133+16]..[226,8133+42])
                                                Pexp_apply
                                                expression (asmcomp/asmgen.ml[226,8133+27]..[226,8133+29])
                                                  Pexp_ident "&&" (asmcomp/asmgen.ml[226,8133+27]..[226,8133+29])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (asmcomp/asmgen.ml[226,8133+16]..[226,8133+26])
                                                      Pexp_ident "create_asm" (asmcomp/asmgen.ml[226,8133+16]..[226,8133+26])
                                                  <arg>
                                                  Nolabel
                                                    expression (asmcomp/asmgen.ml[226,8133+30]..[226,8133+42])
                                                      Pexp_apply
                                                      expression (asmcomp/asmgen.ml[226,8133+30]..[226,8133+33])
                                                        Pexp_ident "not" (asmcomp/asmgen.ml[226,8133+30]..[226,8133+33])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (asmcomp/asmgen.ml[226,8133+34]..[226,8133+42])
                                                            Pexp_ident "keep_asm" (asmcomp/asmgen.ml[226,8133+34]..[226,8133+42])
                                                      ]
                                                ]
                                              expression (asmcomp/asmgen.ml[226,8133+48]..[226,8133+72])
                                                Pexp_apply
                                                expression (asmcomp/asmgen.ml[226,8133+48]..[226,8133+59])
                                                  Pexp_ident "remove_file" (asmcomp/asmgen.ml[226,8133+48]..[226,8133+59])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (asmcomp/asmgen.ml[226,8133+60]..[226,8133+72])
                                                      Pexp_ident "asm_filename" (asmcomp/asmgen.ml[226,8133+60]..[226,8133+72])
                                                ]
                                              None
                                      ]
                                    expression (asmcomp/asmgen.ml[227,8208+7]..[235,8487+66])
                                      Pexp_sequence
                                      expression (asmcomp/asmgen.ml[227,8208+7]..[234,8475+10])
                                        Pexp_ifthenelse
                                        expression (asmcomp/asmgen.ml[227,8208+10]..[227,8208+24])
                                          Pexp_apply
                                          expression (asmcomp/asmgen.ml[227,8208+10]..[227,8208+21])
                                            Pexp_ident "should_emit" (asmcomp/asmgen.ml[227,8208+10]..[227,8208+21])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/asmgen.ml[227,8208+22]..[227,8208+24])
                                                Pexp_construct "()" (asmcomp/asmgen.ml[227,8208+22]..[227,8208+24])
                                                None
                                          ]
                                        expression (asmcomp/asmgen.ml[227,8208+30]..[234,8475+10])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (asmcomp/asmgen.ml[228,8244+13]..[228,8244+28])
                                                Ppat_var "assemble_result" (asmcomp/asmgen.ml[228,8244+13]..[228,8244+28])
                                              expression (asmcomp/asmgen.ml[229,8275+11]..[230,8312+59])
                                                Pexp_apply
                                                expression (asmcomp/asmgen.ml[229,8275+11]..[229,8275+25])
                                                  Pexp_ident "Profile.record" (asmcomp/asmgen.ml[229,8275+11]..[229,8275+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (asmcomp/asmgen.ml[229,8275+26]..[229,8275+36])
                                                      Pexp_constant PConst_string("assemble",(asmcomp/asmgen.ml[229,8275+27]..[229,8275+35]),None)
                                                  <arg>
                                                  Nolabel
                                                    expression (asmcomp/asmgen.ml[230,8312+13]..[230,8312+46])
                                                      Pexp_apply
                                                      expression (asmcomp/asmgen.ml[230,8312+14]..[230,8312+32])
                                                        Pexp_ident "Proc.assemble_file" (asmcomp/asmgen.ml[230,8312+14]..[230,8312+32])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (asmcomp/asmgen.ml[230,8312+33]..[230,8312+45])
                                                            Pexp_ident "asm_filename" (asmcomp/asmgen.ml[230,8312+33]..[230,8312+45])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (asmcomp/asmgen.ml[230,8312+47]..[230,8312+59])
                                                      Pexp_ident "obj_filename" (asmcomp/asmgen.ml[230,8312+47]..[230,8312+59])
                                                ]
                                          ]
                                          expression (asmcomp/asmgen.ml[232,8384+9]..[233,8417+56])
                                            Pexp_ifthenelse
                                            expression (asmcomp/asmgen.ml[232,8384+12]..[232,8384+32])
                                              Pexp_apply
                                              expression (asmcomp/asmgen.ml[232,8384+28]..[232,8384+30])
                                                Pexp_ident "<>" (asmcomp/asmgen.ml[232,8384+28]..[232,8384+30])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/asmgen.ml[232,8384+12]..[232,8384+27])
                                                    Pexp_ident "assemble_result" (asmcomp/asmgen.ml[232,8384+12]..[232,8384+27])
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/asmgen.ml[232,8384+31]..[232,8384+32])
                                                    Pexp_constant PConst_int (0,None)
                                              ]
                                            expression (asmcomp/asmgen.ml[233,8417+14]..[233,8417+56])
                                              Pexp_apply
                                              expression (asmcomp/asmgen.ml[233,8417+14]..[233,8417+19])
                                                Pexp_ident "raise" (asmcomp/asmgen.ml[233,8417+14]..[233,8417+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/asmgen.ml[233,8417+19]..[233,8417+56])
                                                    Pexp_construct "Error" (asmcomp/asmgen.ml[233,8417+20]..[233,8417+25])
                                                    Some
                                                      expression (asmcomp/asmgen.ml[233,8417+25]..[233,8417+55])
                                                        Pexp_construct "Assembler_error" (asmcomp/asmgen.ml[233,8417+26]..[233,8417+41])
                                                        Some
                                                          expression (asmcomp/asmgen.ml[233,8417+42]..[233,8417+54])
                                                            Pexp_ident "asm_filename" (asmcomp/asmgen.ml[233,8417+42]..[233,8417+54])
                                              ]
                                            None
                                        None
                                      expression (asmcomp/asmgen.ml[235,8487+7]..[235,8487+66])
                                        Pexp_ifthenelse
                                        expression (asmcomp/asmgen.ml[235,8487+10]..[235,8487+36])
                                          Pexp_apply
                                          expression (asmcomp/asmgen.ml[235,8487+21]..[235,8487+23])
                                            Pexp_ident "&&" (asmcomp/asmgen.ml[235,8487+21]..[235,8487+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/asmgen.ml[235,8487+10]..[235,8487+20])
                                                Pexp_ident "create_asm" (asmcomp/asmgen.ml[235,8487+10]..[235,8487+20])
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/asmgen.ml[235,8487+24]..[235,8487+36])
                                                Pexp_apply
                                                expression (asmcomp/asmgen.ml[235,8487+24]..[235,8487+27])
                                                  Pexp_ident "not" (asmcomp/asmgen.ml[235,8487+24]..[235,8487+27])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (asmcomp/asmgen.ml[235,8487+28]..[235,8487+36])
                                                      Pexp_ident "keep_asm" (asmcomp/asmgen.ml[235,8487+28]..[235,8487+36])
                                                ]
                                          ]
                                        expression (asmcomp/asmgen.ml[235,8487+42]..[235,8487+66])
                                          Pexp_apply
                                          expression (asmcomp/asmgen.ml[235,8487+42]..[235,8487+53])
                                            Pexp_ident "remove_file" (asmcomp/asmgen.ml[235,8487+42]..[235,8487+53])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/asmgen.ml[235,8487+54]..[235,8487+66])
                                                Pexp_ident "asm_filename" (asmcomp/asmgen.ml[235,8487+54]..[235,8487+66])
                                          ]
                                        None
                          ]
    ]
  structure_item (asmcomp/asmgen.ml[238,8561+0]..[257,9444+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[238,8561+4]..[238,8561+26])
          Ppat_var "end_gen_implementation" (asmcomp/asmgen.ml[238,8561+4]..[238,8561+26])
        expression (asmcomp/asmgen.ml[238,8561+27]..[257,9444+22]) ghost
          Pexp_fun
          Optional "toplevel"
          None
          pattern (asmcomp/asmgen.ml[238,8561+28]..[238,8561+36])
            Ppat_var "toplevel" (asmcomp/asmgen.ml[238,8561+28]..[238,8561+36])
          expression (asmcomp/asmgen.ml[238,8561+37]..[257,9444+22]) ghost
            Pexp_fun
            Labelled "ppf_dump"
            None
            pattern (asmcomp/asmgen.ml[238,8561+38]..[238,8561+46])
              Ppat_var "ppf_dump" (asmcomp/asmgen.ml[238,8561+38]..[238,8561+46])
            expression (asmcomp/asmgen.ml[239,8608+4]..[257,9444+22]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (asmcomp/asmgen.ml[239,8608+4]..[239,8608+38])
                Ppat_constraint
                pattern (asmcomp/asmgen.ml[239,8608+5]..[239,8608+12])
                  Ppat_var "clambda" (asmcomp/asmgen.ml[239,8608+5]..[239,8608+12])
                core_type (asmcomp/asmgen.ml[239,8608+15]..[239,8608+37])
                  Ptyp_constr "Clambda.with_constants" (asmcomp/asmgen.ml[239,8608+15]..[239,8608+37])
                  []
              expression (asmcomp/asmgen.ml[240,8649+2]..[257,9444+22])
                Pexp_sequence
                expression (asmcomp/asmgen.ml[240,8649+2]..[240,8649+24])
                  Pexp_apply
                  expression (asmcomp/asmgen.ml[240,8649+2]..[240,8649+21])
                    Pexp_ident "emit_begin_assembly" (asmcomp/asmgen.ml[240,8649+2]..[240,8649+21])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[240,8649+22]..[240,8649+24])
                        Pexp_construct "()" (asmcomp/asmgen.ml[240,8649+22]..[240,8649+24])
                        None
                  ]
                expression (asmcomp/asmgen.ml[241,8675+2]..[257,9444+22])
                  Pexp_sequence
                  expression (asmcomp/asmgen.ml[241,8675+2]..[244,8793+19])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[244,8793+2]..[244,8793+4])
                      Pexp_ident "++" (asmcomp/asmgen.ml[244,8793+2]..[244,8793+4])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[241,8675+2]..[243,8727+65])
                          Pexp_apply
                          expression (asmcomp/asmgen.ml[243,8727+2]..[243,8727+4])
                            Pexp_ident "++" (asmcomp/asmgen.ml[243,8727+2]..[243,8727+4])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[241,8675+2]..[242,8685+41])
                                Pexp_apply
                                expression (asmcomp/asmgen.ml[242,8685+2]..[242,8685+4])
                                  Pexp_ident "++" (asmcomp/asmgen.ml[242,8685+2]..[242,8685+4])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[241,8675+2]..[241,8675+9])
                                      Pexp_ident "clambda" (asmcomp/asmgen.ml[241,8675+2]..[241,8675+9])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[242,8685+5]..[242,8685+41])
                                      Pexp_apply
                                      expression (asmcomp/asmgen.ml[242,8685+5]..[242,8685+19])
                                        Pexp_ident "Profile.record" (asmcomp/asmgen.ml[242,8685+5]..[242,8685+19])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[242,8685+20]..[242,8685+25])
                                            Pexp_constant PConst_string("cmm",(asmcomp/asmgen.ml[242,8685+21]..[242,8685+24]),None)
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[242,8685+26]..[242,8685+41])
                                            Pexp_ident "Cmmgen.compunit" (asmcomp/asmgen.ml[242,8685+26]..[242,8685+41])
                                      ]
                                ]
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[243,8727+5]..[243,8727+65])
                                Pexp_apply
                                expression (asmcomp/asmgen.ml[243,8727+5]..[243,8727+19])
                                  Pexp_ident "Profile.record" (asmcomp/asmgen.ml[243,8727+5]..[243,8727+19])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[243,8727+20]..[243,8727+37])
                                      Pexp_constant PConst_string("compile_phrases",(asmcomp/asmgen.ml[243,8727+21]..[243,8727+36]),None)
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[243,8727+38]..[243,8727+65])
                                      Pexp_apply
                                      expression (asmcomp/asmgen.ml[243,8727+39]..[243,8727+54])
                                        Pexp_ident "compile_phrases" (asmcomp/asmgen.ml[243,8727+39]..[243,8727+54])
                                      [
                                        <arg>
                                        Labelled "ppf_dump"
                                          expression (asmcomp/asmgen.ml[243,8727+56]..[243,8727+64])
                                            Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[243,8727+56]..[243,8727+64])
                                      ]
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[244,8793+5]..[244,8793+19])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (asmcomp/asmgen.ml[244,8793+10]..[244,8793+12])
                            Ppat_construct "()" (asmcomp/asmgen.ml[244,8793+10]..[244,8793+12])
                            None
                          expression (asmcomp/asmgen.ml[244,8793+16]..[244,8793+18])
                            Pexp_construct "()" (asmcomp/asmgen.ml[244,8793+16]..[244,8793+18])
                            None
                    ]
                  expression (asmcomp/asmgen.ml[245,8814+2]..[257,9444+22])
                    Pexp_sequence
                    expression (asmcomp/asmgen.ml[245,8814+2]..[245,8814+74])
                      Pexp_match
                      expression (asmcomp/asmgen.ml[245,8814+9]..[245,8814+17])
                        Pexp_ident "toplevel" (asmcomp/asmgen.ml[245,8814+9]..[245,8814+17])
                      [
                        <case>
                          pattern (asmcomp/asmgen.ml[245,8814+23]..[245,8814+27])
                            Ppat_construct "None" (asmcomp/asmgen.ml[245,8814+23]..[245,8814+27])
                            None
                          expression (asmcomp/asmgen.ml[245,8814+31]..[245,8814+33])
                            Pexp_construct "()" (asmcomp/asmgen.ml[245,8814+31]..[245,8814+33])
                            None
                        <case>
                          pattern (asmcomp/asmgen.ml[245,8814+36]..[245,8814+42])
                            Ppat_construct "Some" (asmcomp/asmgen.ml[245,8814+36]..[245,8814+40])
                            Some
                              []
                              pattern (asmcomp/asmgen.ml[245,8814+41]..[245,8814+42])
                                Ppat_var "f" (asmcomp/asmgen.ml[245,8814+41]..[245,8814+42])
                          expression (asmcomp/asmgen.ml[245,8814+46]..[245,8814+73])
                            Pexp_apply
                            expression (asmcomp/asmgen.ml[245,8814+46]..[245,8814+61])
                              Pexp_ident "compile_genfuns" (asmcomp/asmgen.ml[245,8814+46]..[245,8814+61])
                            [
                              <arg>
                              Labelled "ppf_dump"
                                expression (asmcomp/asmgen.ml[245,8814+63]..[245,8814+71])
                                  Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[245,8814+63]..[245,8814+71])
                              <arg>
                              Nolabel
                                expression (asmcomp/asmgen.ml[245,8814+72]..[245,8814+73])
                                  Pexp_ident "f" (asmcomp/asmgen.ml[245,8814+72]..[245,8814+73])
                            ]
                      ]
                    expression (asmcomp/asmgen.ml[251,9178+2]..[257,9444+22])
                      Pexp_sequence
                      expression (asmcomp/asmgen.ml[251,9178+2]..[256,9397+45])
                        Pexp_apply
                        expression (asmcomp/asmgen.ml[251,9178+2]..[251,9178+16])
                          Pexp_ident "compile_phrase" (asmcomp/asmgen.ml[251,9178+2]..[251,9178+16])
                        [
                          <arg>
                          Labelled "ppf_dump"
                            expression (asmcomp/asmgen.ml[251,9178+18]..[251,9178+26])
                              Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[251,9178+18]..[251,9178+26])
                          <arg>
                          Nolabel
                            expression (asmcomp/asmgen.ml[252,9205+4]..[256,9397+45])
                              Pexp_apply
                              expression (asmcomp/asmgen.ml[252,9205+5]..[252,9205+34])
                                Pexp_ident "Cmm_helpers.reference_symbols" (asmcomp/asmgen.ml[252,9205+5]..[252,9205+34])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/asmgen.ml[253,9240+7]..[256,9397+44])
                                    Pexp_apply
                                    expression (asmcomp/asmgen.ml[253,9240+8]..[253,9240+23])
                                      Pexp_ident "List.filter_map" (asmcomp/asmgen.ml[253,9240+8]..[253,9240+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/asmgen.ml[253,9240+24]..[255,9346+50])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (asmcomp/asmgen.ml[253,9240+29]..[253,9240+33])
                                            Ppat_var "prim" (asmcomp/asmgen.ml[253,9240+29]..[253,9240+33])
                                          expression (asmcomp/asmgen.ml[254,9277+11]..[255,9346+49])
                                            Pexp_ifthenelse
                                            expression (asmcomp/asmgen.ml[254,9277+14]..[254,9277+58])
                                              Pexp_apply
                                              expression (asmcomp/asmgen.ml[254,9277+14]..[254,9277+17])
                                                Pexp_ident "not" (asmcomp/asmgen.ml[254,9277+14]..[254,9277+17])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (asmcomp/asmgen.ml[254,9277+18]..[254,9277+58])
                                                    Pexp_apply
                                                    expression (asmcomp/asmgen.ml[254,9277+19]..[254,9277+52])
                                                      Pexp_ident "Primitive.native_name_is_external" (asmcomp/asmgen.ml[254,9277+19]..[254,9277+52])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (asmcomp/asmgen.ml[254,9277+53]..[254,9277+57])
                                                          Pexp_ident "prim" (asmcomp/asmgen.ml[254,9277+53]..[254,9277+57])
                                                    ]
                                              ]
                                            expression (asmcomp/asmgen.ml[254,9277+64]..[254,9277+68])
                                              Pexp_construct "None" (asmcomp/asmgen.ml[254,9277+64]..[254,9277+68])
                                              None
                                            Some
                                              expression (asmcomp/asmgen.ml[255,9346+16]..[255,9346+49])
                                                Pexp_construct "Some" (asmcomp/asmgen.ml[255,9346+16]..[255,9346+20])
                                                Some
                                                  expression (asmcomp/asmgen.ml[255,9346+21]..[255,9346+49])
                                                    Pexp_apply
                                                    expression (asmcomp/asmgen.ml[255,9346+22]..[255,9346+43])
                                                      Pexp_ident "Primitive.native_name" (asmcomp/asmgen.ml[255,9346+22]..[255,9346+43])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (asmcomp/asmgen.ml[255,9346+44]..[255,9346+48])
                                                          Pexp_ident "prim" (asmcomp/asmgen.ml[255,9346+44]..[255,9346+48])
                                                    ]
                                      <arg>
                                      Nolabel
                                        expression (asmcomp/asmgen.ml[256,9397+10]..[256,9397+43])
                                          Pexp_apply
                                          expression (asmcomp/asmgen.ml[256,9397+10]..[256,9397+11])
                                            Pexp_ident "!" (asmcomp/asmgen.ml[256,9397+10]..[256,9397+11])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (asmcomp/asmgen.ml[256,9397+11]..[256,9397+43])
                                                Pexp_ident "Translmod.primitive_declarations" (asmcomp/asmgen.ml[256,9397+11]..[256,9397+43])
                                          ]
                                    ]
                              ]
                        ]
                      expression (asmcomp/asmgen.ml[257,9444+2]..[257,9444+22])
                        Pexp_apply
                        expression (asmcomp/asmgen.ml[257,9444+2]..[257,9444+19])
                          Pexp_ident "emit_end_assembly" (asmcomp/asmgen.ml[257,9444+2]..[257,9444+19])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/asmgen.ml[257,9444+20]..[257,9444+22])
                              Pexp_construct "()" (asmcomp/asmgen.ml[257,9444+20]..[257,9444+22])
                              None
                        ]
    ]
  structure_item (asmcomp/asmgen.ml[259,9468+0]..[264,9597+27])
    Pstr_type Rec
    [
      type_declaration "middle_end" (asmcomp/asmgen.ml[259,9468+5]..[259,9468+15]) (asmcomp/asmgen.ml[259,9468+0]..[264,9597+27])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (asmcomp/asmgen.ml[260,9486+5]..[264,9597+27])
              Ptyp_arrow
              Labelled "backend"
              core_type (asmcomp/asmgen.ml[260,9486+13]..[260,9486+36])
                Ptyp_package "Backend_intf.S" (asmcomp/asmgen.ml[260,9486+21]..[260,9486+35])
                []
              core_type (asmcomp/asmgen.ml[261,9523+5]..[264,9597+27])
                Ptyp_arrow
                Labelled "prefixname"
                core_type (asmcomp/asmgen.ml[261,9523+16]..[261,9523+22])
                  Ptyp_constr "string" (asmcomp/asmgen.ml[261,9523+16]..[261,9523+22])
                  []
                core_type (asmcomp/asmgen.ml[262,9546+5]..[264,9597+27])
                  Ptyp_arrow
                  Labelled "ppf_dump"
                  core_type (asmcomp/asmgen.ml[262,9546+14]..[262,9546+30])
                    Ptyp_constr "Format.formatter" (asmcomp/asmgen.ml[262,9546+14]..[262,9546+30])
                    []
                  core_type (asmcomp/asmgen.ml[263,9577+5]..[264,9597+27])
                    Ptyp_arrow
                    Nolabel
                    core_type (asmcomp/asmgen.ml[263,9577+5]..[263,9577+19])
                      Ptyp_constr "Lambda.program" (asmcomp/asmgen.ml[263,9577+5]..[263,9577+19])
                      []
                    core_type (asmcomp/asmgen.ml[264,9597+5]..[264,9597+27])
                      Ptyp_constr "Clambda.with_constants" (asmcomp/asmgen.ml[264,9597+5]..[264,9597+27])
                      []
    ]
  structure_item (asmcomp/asmgen.ml[266,9626+0]..[269,9751+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[266,9626+4]..[266,9626+16])
          Ppat_var "asm_filename" (asmcomp/asmgen.ml[266,9626+4]..[266,9626+16])
        expression (asmcomp/asmgen.ml[266,9626+17]..[269,9751+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[266,9626+17]..[266,9626+30])
            Ppat_var "output_prefix" (asmcomp/asmgen.ml[266,9626+17]..[266,9626+30])
          expression (asmcomp/asmgen.ml[267,9659+4]..[269,9751+45])
            Pexp_ifthenelse
            expression (asmcomp/asmgen.ml[267,9659+7]..[267,9659+58])
              Pexp_apply
              expression (asmcomp/asmgen.ml[267,9659+22]..[267,9659+24])
                Pexp_ident "||" (asmcomp/asmgen.ml[267,9659+22]..[267,9659+24])
              [
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[267,9659+7]..[267,9659+21])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[267,9659+7]..[267,9659+8])
                      Pexp_ident "!" (asmcomp/asmgen.ml[267,9659+7]..[267,9659+8])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[267,9659+8]..[267,9659+21])
                          Pexp_ident "keep_asm_file" (asmcomp/asmgen.ml[267,9659+8]..[267,9659+21])
                    ]
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[267,9659+25]..[267,9659+58])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[267,9659+25]..[267,9659+26])
                      Pexp_ident "!" (asmcomp/asmgen.ml[267,9659+25]..[267,9659+26])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[267,9659+26]..[267,9659+58])
                          Pexp_ident "Emitaux.binary_backend_available" (asmcomp/asmgen.ml[267,9659+26]..[267,9659+58])
                    ]
              ]
            expression (asmcomp/asmgen.ml[268,9718+9]..[268,9718+32])
              Pexp_apply
              expression (asmcomp/asmgen.ml[268,9718+23]..[268,9718+24])
                Pexp_ident "^" (asmcomp/asmgen.ml[268,9718+23]..[268,9718+24])
              [
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[268,9718+9]..[268,9718+22])
                    Pexp_ident "output_prefix" (asmcomp/asmgen.ml[268,9718+9]..[268,9718+22])
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[268,9718+25]..[268,9718+32])
                    Pexp_ident "ext_asm" (asmcomp/asmgen.ml[268,9718+25]..[268,9718+32])
              ]
            Some
              expression (asmcomp/asmgen.ml[269,9751+9]..[269,9751+45])
                Pexp_apply
                expression (asmcomp/asmgen.ml[269,9751+9]..[269,9751+27])
                  Pexp_ident "Filename.temp_file" (asmcomp/asmgen.ml[269,9751+9]..[269,9751+27])
                [
                  <arg>
                  Nolabel
                    expression (asmcomp/asmgen.ml[269,9751+28]..[269,9751+37])
                      Pexp_constant PConst_string("camlasm",(asmcomp/asmgen.ml[269,9751+29]..[269,9751+36]),None)
                  <arg>
                  Nolabel
                    expression (asmcomp/asmgen.ml[269,9751+38]..[269,9751+45])
                      Pexp_ident "ext_asm" (asmcomp/asmgen.ml[269,9751+38]..[269,9751+45])
                ]
    ]
  structure_item (asmcomp/asmgen.ml[271,9798+0]..[281,10253+72])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[271,9798+4]..[271,9798+26])
          Ppat_var "compile_implementation" (asmcomp/asmgen.ml[271,9798+4]..[271,9798+26])
        expression (asmcomp/asmgen.ml[271,9798+27]..[281,10253+72]) ghost
          Pexp_fun
          Optional "toplevel"
          None
          pattern (asmcomp/asmgen.ml[271,9798+28]..[271,9798+36])
            Ppat_var "toplevel" (asmcomp/asmgen.ml[271,9798+28]..[271,9798+36])
          expression (asmcomp/asmgen.ml[271,9798+37]..[281,10253+72]) ghost
            Pexp_fun
            Labelled "backend"
            None
            pattern (asmcomp/asmgen.ml[271,9798+38]..[271,9798+45])
              Ppat_var "backend" (asmcomp/asmgen.ml[271,9798+38]..[271,9798+45])
            expression (asmcomp/asmgen.ml[271,9798+46]..[281,10253+72]) ghost
              Pexp_fun
              Labelled "prefixname"
              None
              pattern (asmcomp/asmgen.ml[271,9798+47]..[271,9798+57])
                Ppat_var "prefixname" (asmcomp/asmgen.ml[271,9798+47]..[271,9798+57])
              expression (asmcomp/asmgen.ml[271,9798+58]..[281,10253+72]) ghost
                Pexp_fun
                Labelled "middle_end"
                None
                pattern (asmcomp/asmgen.ml[271,9798+59]..[271,9798+69])
                  Ppat_var "middle_end" (asmcomp/asmgen.ml[271,9798+59]..[271,9798+69])
                expression (asmcomp/asmgen.ml[272,9868+6]..[281,10253+72]) ghost
                  Pexp_fun
                  Labelled "ppf_dump"
                  None
                  pattern (asmcomp/asmgen.ml[272,9868+7]..[272,9868+15])
                    Ppat_var "ppf_dump" (asmcomp/asmgen.ml[272,9868+7]..[272,9868+15])
                  expression (asmcomp/asmgen.ml[272,9868+16]..[281,10253+72]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (asmcomp/asmgen.ml[272,9868+16]..[272,9868+42])
                      Ppat_constraint
                      pattern (asmcomp/asmgen.ml[272,9868+17]..[272,9868+24])
                        Ppat_var "program" (asmcomp/asmgen.ml[272,9868+17]..[272,9868+24])
                      core_type (asmcomp/asmgen.ml[272,9868+27]..[272,9868+41])
                        Ptyp_constr "Lambda.program" (asmcomp/asmgen.ml[272,9868+27]..[272,9868+41])
                        []
                    expression (asmcomp/asmgen.ml[273,9913+2]..[281,10253+72])
                      Pexp_apply
                      expression (asmcomp/asmgen.ml[273,9913+2]..[273,9913+14])
                        Pexp_ident "compile_unit" (asmcomp/asmgen.ml[273,9913+2]..[273,9913+14])
                      [
                        <arg>
                        Labelled "output_prefix"
                          expression (asmcomp/asmgen.ml[273,9913+30]..[273,9913+40])
                            Pexp_ident "prefixname" (asmcomp/asmgen.ml[273,9913+30]..[273,9913+40])
                        <arg>
                        Labelled "asm_filename"
                          expression (asmcomp/asmgen.ml[274,9954+18]..[274,9954+43])
                            Pexp_apply
                            expression (asmcomp/asmgen.ml[274,9954+19]..[274,9954+31])
                              Pexp_ident "asm_filename" (asmcomp/asmgen.ml[274,9954+19]..[274,9954+31])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/asmgen.ml[274,9954+32]..[274,9954+42])
                                  Pexp_ident "prefixname" (asmcomp/asmgen.ml[274,9954+32]..[274,9954+42])
                            ]
                        <arg>
                        Labelled "keep_asm"
                          expression (asmcomp/asmgen.ml[274,9954+54]..[274,9954+68])
                            Pexp_apply
                            expression (asmcomp/asmgen.ml[274,9954+54]..[274,9954+55])
                              Pexp_ident "!" (asmcomp/asmgen.ml[274,9954+54]..[274,9954+55])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/asmgen.ml[274,9954+55]..[274,9954+68])
                                  Pexp_ident "keep_asm_file" (asmcomp/asmgen.ml[274,9954+55]..[274,9954+68])
                            ]
                        <arg>
                        Labelled "obj_filename"
                          expression (asmcomp/asmgen.ml[275,10023+18]..[275,10023+40])
                            Pexp_apply
                            expression (asmcomp/asmgen.ml[275,10023+30]..[275,10023+31])
                              Pexp_ident "^" (asmcomp/asmgen.ml[275,10023+30]..[275,10023+31])
                            [
                              <arg>
                              Nolabel
                                expression (asmcomp/asmgen.ml[275,10023+19]..[275,10023+29])
                                  Pexp_ident "prefixname" (asmcomp/asmgen.ml[275,10023+19]..[275,10023+29])
                              <arg>
                              Nolabel
                                expression (asmcomp/asmgen.ml[275,10023+32]..[275,10023+39])
                                  Pexp_ident "ext_obj" (asmcomp/asmgen.ml[275,10023+32]..[275,10023+39])
                            ]
                        <arg>
                        Nolabel
                          expression (asmcomp/asmgen.ml[276,10064+4]..[281,10253+72])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (asmcomp/asmgen.ml[276,10064+9]..[276,10064+11])
                              Ppat_construct "()" (asmcomp/asmgen.ml[276,10064+9]..[276,10064+11])
                              None
                            expression (asmcomp/asmgen.ml[277,10079+6]..[281,10253+71])
                              Pexp_sequence
                              expression (asmcomp/asmgen.ml[277,10079+6]..[277,10079+70])
                                Pexp_apply
                                expression (asmcomp/asmgen.ml[277,10079+6]..[277,10079+20])
                                  Pexp_ident "Ident.Set.iter" (asmcomp/asmgen.ml[277,10079+6]..[277,10079+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[277,10079+21]..[277,10079+45])
                                      Pexp_ident "Compilenv.require_global" (asmcomp/asmgen.ml[277,10079+21]..[277,10079+45])
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[277,10079+46]..[277,10079+70])
                                      Pexp_field
                                      expression (asmcomp/asmgen.ml[277,10079+46]..[277,10079+53])
                                        Pexp_ident "program" (asmcomp/asmgen.ml[277,10079+46]..[277,10079+53])
                                      "required_globals" (asmcomp/asmgen.ml[277,10079+54]..[277,10079+70])
                                ]
                              expression (asmcomp/asmgen.ml[278,10151+6]..[281,10253+71])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (asmcomp/asmgen.ml[278,10151+10]..[278,10151+32])
                                      Ppat_var "clambda_with_constants" (asmcomp/asmgen.ml[278,10151+10]..[278,10151+32])
                                    expression (asmcomp/asmgen.ml[279,10186+8]..[279,10186+57])
                                      Pexp_apply
                                      expression (asmcomp/asmgen.ml[279,10186+8]..[279,10186+18])
                                        Pexp_ident "middle_end" (asmcomp/asmgen.ml[279,10186+8]..[279,10186+18])
                                      [
                                        <arg>
                                        Labelled "backend"
                                          expression (asmcomp/asmgen.ml[279,10186+20]..[279,10186+27])
                                            Pexp_ident "backend" (asmcomp/asmgen.ml[279,10186+20]..[279,10186+27])
                                        <arg>
                                        Labelled "prefixname"
                                          expression (asmcomp/asmgen.ml[279,10186+29]..[279,10186+39])
                                            Pexp_ident "prefixname" (asmcomp/asmgen.ml[279,10186+29]..[279,10186+39])
                                        <arg>
                                        Labelled "ppf_dump"
                                          expression (asmcomp/asmgen.ml[279,10186+41]..[279,10186+49])
                                            Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[279,10186+41]..[279,10186+49])
                                        <arg>
                                        Nolabel
                                          expression (asmcomp/asmgen.ml[279,10186+50]..[279,10186+57])
                                            Pexp_ident "program" (asmcomp/asmgen.ml[279,10186+50]..[279,10186+57])
                                      ]
                                ]
                                expression (asmcomp/asmgen.ml[281,10253+6]..[281,10253+71])
                                  Pexp_apply
                                  expression (asmcomp/asmgen.ml[281,10253+6]..[281,10253+28])
                                    Pexp_ident "end_gen_implementation" (asmcomp/asmgen.ml[281,10253+6]..[281,10253+28])
                                  [
                                    <arg>
                                    Optional "toplevel"
                                      expression (asmcomp/asmgen.ml[281,10253+30]..[281,10253+38])
                                        Pexp_ident "toplevel" (asmcomp/asmgen.ml[281,10253+30]..[281,10253+38])
                                    <arg>
                                    Labelled "ppf_dump"
                                      expression (asmcomp/asmgen.ml[281,10253+40]..[281,10253+48])
                                        Pexp_ident "ppf_dump" (asmcomp/asmgen.ml[281,10253+40]..[281,10253+48])
                                    <arg>
                                    Nolabel
                                      expression (asmcomp/asmgen.ml[281,10253+49]..[281,10253+71])
                                        Pexp_ident "clambda_with_constants" (asmcomp/asmgen.ml[281,10253+49]..[281,10253+71])
                                  ]
                      ]
    ]
  structure_item (asmcomp/asmgen.ml[283,10327+0]..[297,10873+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[283,10327+4]..[283,10327+29])
          Ppat_var "linear_gen_implementation" (asmcomp/asmgen.ml[283,10327+4]..[283,10327+29])
        expression (asmcomp/asmgen.ml[283,10327+30]..[297,10873+22]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[283,10327+30]..[283,10327+38])
            Ppat_var "filename" (asmcomp/asmgen.ml[283,10327+30]..[283,10327+38])
          expression (asmcomp/asmgen.ml[284,10368+2]..[297,10873+22])
            Pexp_open Fresh
            module_expr (asmcomp/asmgen.ml[284,10368+11]..[284,10368+24])
              Pmod_ident "Linear_format" (asmcomp/asmgen.ml[284,10368+11]..[284,10368+24])
            expression (asmcomp/asmgen.ml[285,10396+2]..[297,10873+22])
              Pexp_let Nonrec
              [
                <def>
                  pattern (asmcomp/asmgen.ml[285,10396+6]..[285,10396+25])
                    Ppat_tuple
                    [
                      pattern (asmcomp/asmgen.ml[285,10396+6]..[285,10396+22])
                        Ppat_var "linear_unit_info" (asmcomp/asmgen.ml[285,10396+6]..[285,10396+22])
                      pattern (asmcomp/asmgen.ml[285,10396+24]..[285,10396+25])
                        Ppat_any
                    ]
                  expression (asmcomp/asmgen.ml[285,10396+28]..[285,10396+44])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[285,10396+28]..[285,10396+35])
                      Pexp_ident "restore" (asmcomp/asmgen.ml[285,10396+28]..[285,10396+35])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[285,10396+36]..[285,10396+44])
                          Pexp_ident "filename" (asmcomp/asmgen.ml[285,10396+36]..[285,10396+44])
                    ]
              ]
              expression (asmcomp/asmgen.ml[286,10444+2]..[297,10873+22])
                Pexp_sequence
                expression (asmcomp/asmgen.ml[286,10444+2]..[289,10598+57])
                  Pexp_match
                  expression (asmcomp/asmgen.ml[286,10444+9]..[286,10444+56])
                    Pexp_tuple
                    [
                      expression (asmcomp/asmgen.ml[286,10444+9]..[286,10444+29])
                        Pexp_apply
                        expression (asmcomp/asmgen.ml[286,10444+9]..[286,10444+10])
                          Pexp_ident "!" (asmcomp/asmgen.ml[286,10444+9]..[286,10444+10])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/asmgen.ml[286,10444+10]..[286,10444+29])
                              Pexp_ident "Clflags.for_package" (asmcomp/asmgen.ml[286,10444+10]..[286,10444+29])
                        ]
                      expression (asmcomp/asmgen.ml[286,10444+31]..[286,10444+56])
                        Pexp_field
                        expression (asmcomp/asmgen.ml[286,10444+31]..[286,10444+47])
                          Pexp_ident "linear_unit_info" (asmcomp/asmgen.ml[286,10444+31]..[286,10444+47])
                        "for_pack" (asmcomp/asmgen.ml[286,10444+48]..[286,10444+56])
                    ]
                  [
                    <case>
                      pattern (asmcomp/asmgen.ml[287,10506+5]..[287,10506+15])
                        Ppat_tuple
                        [
                          pattern (asmcomp/asmgen.ml[287,10506+5]..[287,10506+9])
                            Ppat_construct "None" (asmcomp/asmgen.ml[287,10506+5]..[287,10506+9])
                            None
                          pattern (asmcomp/asmgen.ml[287,10506+11]..[287,10506+15])
                            Ppat_construct "None" (asmcomp/asmgen.ml[287,10506+11]..[287,10506+15])
                            None
                        ]
                      expression (asmcomp/asmgen.ml[287,10506+19]..[287,10506+21])
                        Pexp_construct "()" (asmcomp/asmgen.ml[287,10506+19]..[287,10506+21])
                        None
                    <case>
                      pattern (asmcomp/asmgen.ml[288,10528+5]..[288,10528+30])
                        Ppat_tuple
                        [
                          pattern (asmcomp/asmgen.ml[288,10528+5]..[288,10528+18])
                            Ppat_construct "Some" (asmcomp/asmgen.ml[288,10528+5]..[288,10528+9])
                            Some
                              []
                              pattern (asmcomp/asmgen.ml[288,10528+10]..[288,10528+18])
                                Ppat_var "expected" (asmcomp/asmgen.ml[288,10528+10]..[288,10528+18])
                          pattern (asmcomp/asmgen.ml[288,10528+20]..[288,10528+30])
                            Ppat_construct "Some" (asmcomp/asmgen.ml[288,10528+20]..[288,10528+24])
                            Some
                              []
                              pattern (asmcomp/asmgen.ml[288,10528+25]..[288,10528+30])
                                Ppat_var "saved" (asmcomp/asmgen.ml[288,10528+25]..[288,10528+30])
                        ]
                      <when>
                        expression (asmcomp/asmgen.ml[288,10528+36]..[288,10528+63])
                          Pexp_apply
                          expression (asmcomp/asmgen.ml[288,10528+36]..[288,10528+48])
                            Pexp_ident "String.equal" (asmcomp/asmgen.ml[288,10528+36]..[288,10528+48])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[288,10528+49]..[288,10528+57])
                                Pexp_ident "expected" (asmcomp/asmgen.ml[288,10528+49]..[288,10528+57])
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[288,10528+58]..[288,10528+63])
                                Pexp_ident "saved" (asmcomp/asmgen.ml[288,10528+58]..[288,10528+63])
                          ]
                      expression (asmcomp/asmgen.ml[288,10528+67]..[288,10528+69])
                        Pexp_construct "()" (asmcomp/asmgen.ml[288,10528+67]..[288,10528+69])
                        None
                    <case>
                      pattern (asmcomp/asmgen.ml[289,10598+5]..[289,10598+13])
                        Ppat_tuple
                        [
                          pattern (asmcomp/asmgen.ml[289,10598+5]..[289,10598+6])
                            Ppat_any
                          pattern (asmcomp/asmgen.ml[289,10598+8]..[289,10598+13])
                            Ppat_var "saved" (asmcomp/asmgen.ml[289,10598+8]..[289,10598+13])
                        ]
                      expression (asmcomp/asmgen.ml[289,10598+17]..[289,10598+56])
                        Pexp_apply
                        expression (asmcomp/asmgen.ml[289,10598+17]..[289,10598+22])
                          Pexp_ident "raise" (asmcomp/asmgen.ml[289,10598+17]..[289,10598+22])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/asmgen.ml[289,10598+22]..[289,10598+56])
                              Pexp_construct "Error" (asmcomp/asmgen.ml[289,10598+23]..[289,10598+28])
                              Some
                                expression (asmcomp/asmgen.ml[289,10598+28]..[289,10598+55])
                                  Pexp_construct "Mismatched_for_pack" (asmcomp/asmgen.ml[289,10598+29]..[289,10598+48])
                                  Some
                                    expression (asmcomp/asmgen.ml[289,10598+49]..[289,10598+54])
                                      Pexp_ident "saved" (asmcomp/asmgen.ml[289,10598+49]..[289,10598+54])
                        ]
                  ]
                expression (asmcomp/asmgen.ml[290,10657+2]..[297,10873+22])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (asmcomp/asmgen.ml[290,10657+6]..[290,10657+15])
                        Ppat_var "emit_item" (asmcomp/asmgen.ml[290,10657+6]..[290,10657+15])
                      expression (asmcomp/asmgen.ml[290,10657+18]..[292,10714+30])
                        Pexp_function
                        [
                          <case>
                            pattern (asmcomp/asmgen.ml[291,10684+6]..[291,10684+13])
                              Ppat_construct "Data" (asmcomp/asmgen.ml[291,10684+6]..[291,10684+10])
                              Some
                                []
                                pattern (asmcomp/asmgen.ml[291,10684+11]..[291,10684+13])
                                  Ppat_var "dl" (asmcomp/asmgen.ml[291,10684+11]..[291,10684+13])
                            expression (asmcomp/asmgen.ml[291,10684+17]..[291,10684+29])
                              Pexp_apply
                              expression (asmcomp/asmgen.ml[291,10684+17]..[291,10684+26])
                                Pexp_ident "emit_data" (asmcomp/asmgen.ml[291,10684+17]..[291,10684+26])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/asmgen.ml[291,10684+27]..[291,10684+29])
                                    Pexp_ident "dl" (asmcomp/asmgen.ml[291,10684+27]..[291,10684+29])
                              ]
                          <case>
                            pattern (asmcomp/asmgen.ml[292,10714+6]..[292,10714+12])
                              Ppat_construct "Func" (asmcomp/asmgen.ml[292,10714+6]..[292,10714+10])
                              Some
                                []
                                pattern (asmcomp/asmgen.ml[292,10714+11]..[292,10714+12])
                                  Ppat_var "f" (asmcomp/asmgen.ml[292,10714+11]..[292,10714+12])
                            expression (asmcomp/asmgen.ml[292,10714+16]..[292,10714+30])
                              Pexp_apply
                              expression (asmcomp/asmgen.ml[292,10714+16]..[292,10714+28])
                                Pexp_ident "emit_fundecl" (asmcomp/asmgen.ml[292,10714+16]..[292,10714+28])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/asmgen.ml[292,10714+29]..[292,10714+30])
                                    Pexp_ident "f" (asmcomp/asmgen.ml[292,10714+29]..[292,10714+30])
                              ]
                        ]
                  ]
                  expression (asmcomp/asmgen.ml[294,10750+2]..[297,10873+22])
                    Pexp_sequence
                    expression (asmcomp/asmgen.ml[294,10750+2]..[294,10750+25])
                      Pexp_apply
                      expression (asmcomp/asmgen.ml[294,10750+18]..[294,10750+20])
                        Pexp_ident ":=" (asmcomp/asmgen.ml[294,10750+18]..[294,10750+20])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/asmgen.ml[294,10750+2]..[294,10750+17])
                            Pexp_ident "start_from_emit" (asmcomp/asmgen.ml[294,10750+2]..[294,10750+17])
                        <arg>
                        Nolabel
                          expression (asmcomp/asmgen.ml[294,10750+21]..[294,10750+25])
                            Pexp_construct "true" (asmcomp/asmgen.ml[294,10750+21]..[294,10750+25])
                            None
                      ]
                    expression (asmcomp/asmgen.ml[295,10777+2]..[297,10873+22])
                      Pexp_sequence
                      expression (asmcomp/asmgen.ml[295,10777+2]..[295,10777+24])
                        Pexp_apply
                        expression (asmcomp/asmgen.ml[295,10777+2]..[295,10777+21])
                          Pexp_ident "emit_begin_assembly" (asmcomp/asmgen.ml[295,10777+2]..[295,10777+21])
                        [
                          <arg>
                          Nolabel
                            expression (asmcomp/asmgen.ml[295,10777+22]..[295,10777+24])
                              Pexp_construct "()" (asmcomp/asmgen.ml[295,10777+22]..[295,10777+24])
                              None
                        ]
                      expression (asmcomp/asmgen.ml[296,10803+2]..[297,10873+22])
                        Pexp_sequence
                        expression (asmcomp/asmgen.ml[296,10803+2]..[296,10803+68])
                          Pexp_apply
                          expression (asmcomp/asmgen.ml[296,10803+2]..[296,10803+16])
                            Pexp_ident "Profile.record" (asmcomp/asmgen.ml[296,10803+2]..[296,10803+16])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[296,10803+17]..[296,10803+23])
                                Pexp_constant PConst_string("Emit",(asmcomp/asmgen.ml[296,10803+18]..[296,10803+22]),None)
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[296,10803+24]..[296,10803+45])
                                Pexp_apply
                                expression (asmcomp/asmgen.ml[296,10803+25]..[296,10803+34])
                                  Pexp_ident "List.iter" (asmcomp/asmgen.ml[296,10803+25]..[296,10803+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[296,10803+35]..[296,10803+44])
                                      Pexp_ident "emit_item" (asmcomp/asmgen.ml[296,10803+35]..[296,10803+44])
                                ]
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[296,10803+46]..[296,10803+68])
                                Pexp_field
                                expression (asmcomp/asmgen.ml[296,10803+46]..[296,10803+62])
                                  Pexp_ident "linear_unit_info" (asmcomp/asmgen.ml[296,10803+46]..[296,10803+62])
                                "items" (asmcomp/asmgen.ml[296,10803+63]..[296,10803+68])
                          ]
                        expression (asmcomp/asmgen.ml[297,10873+2]..[297,10873+22])
                          Pexp_apply
                          expression (asmcomp/asmgen.ml[297,10873+2]..[297,10873+19])
                            Pexp_ident "emit_end_assembly" (asmcomp/asmgen.ml[297,10873+2]..[297,10873+19])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[297,10873+20]..[297,10873+22])
                                Pexp_construct "()" (asmcomp/asmgen.ml[297,10873+20]..[297,10873+22])
                                None
                          ]
    ]
  structure_item (asmcomp/asmgen.ml[299,10897+0]..[304,11118+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[299,10897+4]..[299,10897+33])
          Ppat_var "compile_implementation_linear" (asmcomp/asmgen.ml[299,10897+4]..[299,10897+33])
        expression (asmcomp/asmgen.ml[299,10897+34]..[304,11118+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[299,10897+34]..[299,10897+47])
            Ppat_var "output_prefix" (asmcomp/asmgen.ml[299,10897+34]..[299,10897+47])
          expression (asmcomp/asmgen.ml[299,10897+48]..[304,11118+41]) ghost
            Pexp_fun
            Labelled "progname"
            None
            pattern (asmcomp/asmgen.ml[299,10897+49]..[299,10897+57])
              Ppat_var "progname" (asmcomp/asmgen.ml[299,10897+49]..[299,10897+57])
            expression (asmcomp/asmgen.ml[300,10957+2]..[304,11118+41])
              Pexp_apply
              expression (asmcomp/asmgen.ml[300,10957+2]..[300,10957+14])
                Pexp_ident "compile_unit" (asmcomp/asmgen.ml[300,10957+2]..[300,10957+14])
              [
                <arg>
                Labelled "output_prefix"
                  expression (asmcomp/asmgen.ml[300,10957+16]..[300,10957+29])
                    Pexp_ident "output_prefix" (asmcomp/asmgen.ml[300,10957+16]..[300,10957+29])
                <arg>
                Labelled "asm_filename"
                  expression (asmcomp/asmgen.ml[301,10987+18]..[301,10987+46])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[301,10987+19]..[301,10987+31])
                      Pexp_ident "asm_filename" (asmcomp/asmgen.ml[301,10987+19]..[301,10987+31])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[301,10987+32]..[301,10987+45])
                          Pexp_ident "output_prefix" (asmcomp/asmgen.ml[301,10987+32]..[301,10987+45])
                    ]
                <arg>
                Labelled "keep_asm"
                  expression (asmcomp/asmgen.ml[301,10987+57]..[301,10987+71])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[301,10987+57]..[301,10987+58])
                      Pexp_ident "!" (asmcomp/asmgen.ml[301,10987+57]..[301,10987+58])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[301,10987+58]..[301,10987+71])
                          Pexp_ident "keep_asm_file" (asmcomp/asmgen.ml[301,10987+58]..[301,10987+71])
                    ]
                <arg>
                Labelled "obj_filename"
                  expression (asmcomp/asmgen.ml[302,11059+18]..[302,11059+43])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[302,11059+33]..[302,11059+34])
                      Pexp_ident "^" (asmcomp/asmgen.ml[302,11059+33]..[302,11059+34])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[302,11059+19]..[302,11059+32])
                          Pexp_ident "output_prefix" (asmcomp/asmgen.ml[302,11059+19]..[302,11059+32])
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[302,11059+35]..[302,11059+42])
                          Pexp_ident "ext_obj" (asmcomp/asmgen.ml[302,11059+35]..[302,11059+42])
                    ]
                <arg>
                Nolabel
                  expression (asmcomp/asmgen.ml[303,11103+4]..[304,11118+41])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (asmcomp/asmgen.ml[303,11103+9]..[303,11103+11])
                      Ppat_construct "()" (asmcomp/asmgen.ml[303,11103+9]..[303,11103+11])
                      None
                    expression (asmcomp/asmgen.ml[304,11118+6]..[304,11118+40])
                      Pexp_apply
                      expression (asmcomp/asmgen.ml[304,11118+6]..[304,11118+31])
                        Pexp_ident "linear_gen_implementation" (asmcomp/asmgen.ml[304,11118+6]..[304,11118+31])
                      [
                        <arg>
                        Nolabel
                          expression (asmcomp/asmgen.ml[304,11118+32]..[304,11118+40])
                            Pexp_ident "progname" (asmcomp/asmgen.ml[304,11118+32]..[304,11118+40])
                      ]
              ]
    ]
  structure_item (asmcomp/asmgen.ml[308,11181+0]..[323,11716+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[308,11181+4]..[308,11181+16])
          Ppat_var "report_error" (asmcomp/asmgen.ml[308,11181+4]..[308,11181+16])
        expression (asmcomp/asmgen.ml[308,11181+17]..[323,11716+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (asmcomp/asmgen.ml[308,11181+17]..[308,11181+20])
            Ppat_var "ppf" (asmcomp/asmgen.ml[308,11181+17]..[308,11181+20])
          expression (asmcomp/asmgen.ml[308,11181+23]..[323,11716+34])
            Pexp_function
            [
              <case>
                pattern (asmcomp/asmgen.ml[309,11213+4]..[309,11213+24])
                  Ppat_construct "Assembler_error" (asmcomp/asmgen.ml[309,11213+4]..[309,11213+19])
                  Some
                    []
                    pattern (asmcomp/asmgen.ml[309,11213+20]..[309,11213+24])
                      Ppat_var "file" (asmcomp/asmgen.ml[309,11213+20]..[309,11213+24])
                expression (asmcomp/asmgen.ml[310,11241+6]..[311,11300+36])
                  Pexp_apply
                  expression (asmcomp/asmgen.ml[310,11241+6]..[310,11241+13])
                    Pexp_ident "fprintf" (asmcomp/asmgen.ml[310,11241+6]..[310,11241+13])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[310,11241+14]..[310,11241+17])
                        Pexp_ident "ppf" (asmcomp/asmgen.ml[310,11241+14]..[310,11241+17])
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[310,11241+18]..[310,11241+58])
                        Pexp_constant PConst_string("Assembler error, input left in file %a",(asmcomp/asmgen.ml[310,11241+19]..[310,11241+57]),None)
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[311,11300+8]..[311,11300+31])
                        Pexp_ident "Location.print_filename" (asmcomp/asmgen.ml[311,11300+8]..[311,11300+31])
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[311,11300+32]..[311,11300+36])
                        Pexp_ident "file" (asmcomp/asmgen.ml[311,11300+32]..[311,11300+36])
                  ]
              <case>
                pattern (asmcomp/asmgen.ml[312,11337+4]..[312,11337+29])
                  Ppat_construct "Mismatched_for_pack" (asmcomp/asmgen.ml[312,11337+4]..[312,11337+23])
                  Some
                    []
                    pattern (asmcomp/asmgen.ml[312,11337+24]..[312,11337+29])
                      Ppat_var "saved" (asmcomp/asmgen.ml[312,11337+24]..[312,11337+29])
                expression (asmcomp/asmgen.ml[313,11370+4]..[319,11563+45])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (asmcomp/asmgen.ml[313,11370+8]..[313,11370+11])
                        Ppat_var "msg" (asmcomp/asmgen.ml[313,11370+8]..[313,11370+11])
                      expression (asmcomp/asmgen.ml[313,11370+14]..[315,11430+38])
                        Pexp_function
                        [
                          <case>
                            pattern (asmcomp/asmgen.ml[314,11393+9]..[314,11393+13])
                              Ppat_construct "None" (asmcomp/asmgen.ml[314,11393+9]..[314,11393+13])
                              None
                            expression (asmcomp/asmgen.ml[314,11393+17]..[314,11393+36])
                              Pexp_constant PConst_string("without -for-pack",(asmcomp/asmgen.ml[314,11393+18]..[314,11393+35]),None)
                          <case>
                            pattern (asmcomp/asmgen.ml[315,11430+9]..[315,11430+15])
                              Ppat_construct "Some" (asmcomp/asmgen.ml[315,11430+9]..[315,11430+13])
                              Some
                                []
                                pattern (asmcomp/asmgen.ml[315,11430+14]..[315,11430+15])
                                  Ppat_var "s" (asmcomp/asmgen.ml[315,11430+14]..[315,11430+15])
                            expression (asmcomp/asmgen.ml[315,11430+19]..[315,11430+38])
                              Pexp_apply
                              expression (asmcomp/asmgen.ml[315,11430+36]..[315,11430+37])
                                Pexp_ident "^" (asmcomp/asmgen.ml[315,11430+36]..[315,11430+37])
                              [
                                <arg>
                                Nolabel
                                  expression (asmcomp/asmgen.ml[315,11430+19]..[315,11430+36])
                                    Pexp_constant PConst_string("with -for-pack ",(asmcomp/asmgen.ml[315,11430+20]..[315,11430+35]),None)
                                <arg>
                                Nolabel
                                  expression (asmcomp/asmgen.ml[315,11430+37]..[315,11430+38])
                                    Pexp_ident "s" (asmcomp/asmgen.ml[315,11430+37]..[315,11430+38])
                              ]
                        ]
                  ]
                  expression (asmcomp/asmgen.ml[317,11477+5]..[319,11563+45])
                    Pexp_apply
                    expression (asmcomp/asmgen.ml[317,11477+5]..[317,11477+12])
                      Pexp_ident "fprintf" (asmcomp/asmgen.ml[317,11477+5]..[317,11477+12])
                    [
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[317,11477+13]..[317,11477+16])
                          Pexp_ident "ppf" (asmcomp/asmgen.ml[317,11477+13]..[317,11477+16])
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[318,11494+7]..[318,11494+68])
                          Pexp_constant PConst_string("This input file cannot be compiled %s: it was generated %s.",(asmcomp/asmgen.ml[318,11494+8]..[318,11494+67]),None)
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[319,11563+7]..[319,11563+33])
                          Pexp_apply
                          expression (asmcomp/asmgen.ml[319,11563+8]..[319,11563+11])
                            Pexp_ident "msg" (asmcomp/asmgen.ml[319,11563+8]..[319,11563+11])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[319,11563+12]..[319,11563+32])
                                Pexp_apply
                                expression (asmcomp/asmgen.ml[319,11563+12]..[319,11563+13])
                                  Pexp_ident "!" (asmcomp/asmgen.ml[319,11563+12]..[319,11563+13])
                                [
                                  <arg>
                                  Nolabel
                                    expression (asmcomp/asmgen.ml[319,11563+13]..[319,11563+32])
                                      Pexp_ident "Clflags.for_package" (asmcomp/asmgen.ml[319,11563+13]..[319,11563+32])
                                ]
                          ]
                      <arg>
                      Nolabel
                        expression (asmcomp/asmgen.ml[319,11563+34]..[319,11563+45])
                          Pexp_apply
                          expression (asmcomp/asmgen.ml[319,11563+35]..[319,11563+38])
                            Pexp_ident "msg" (asmcomp/asmgen.ml[319,11563+35]..[319,11563+38])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[319,11563+39]..[319,11563+44])
                                Pexp_ident "saved" (asmcomp/asmgen.ml[319,11563+39]..[319,11563+44])
                          ]
                    ]
              <case>
                pattern (asmcomp/asmgen.ml[320,11609+4]..[320,11609+27])
                  Ppat_construct "Asm_generation" (asmcomp/asmgen.ml[320,11609+4]..[320,11609+18])
                  Some
                    []
                    pattern (asmcomp/asmgen.ml[320,11609+18]..[320,11609+27])
                      Ppat_tuple
                      [
                        pattern (asmcomp/asmgen.ml[320,11609+19]..[320,11609+21])
                          Ppat_var "fn" (asmcomp/asmgen.ml[320,11609+19]..[320,11609+21])
                        pattern (asmcomp/asmgen.ml[320,11609+23]..[320,11609+26])
                          Ppat_var "err" (asmcomp/asmgen.ml[320,11609+23]..[320,11609+26])
                      ]
                expression (asmcomp/asmgen.ml[321,11640+5]..[323,11716+34])
                  Pexp_apply
                  expression (asmcomp/asmgen.ml[321,11640+5]..[321,11640+12])
                    Pexp_ident "fprintf" (asmcomp/asmgen.ml[321,11640+5]..[321,11640+12])
                  [
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[321,11640+13]..[321,11640+16])
                        Pexp_ident "ppf" (asmcomp/asmgen.ml[321,11640+13]..[321,11640+16])
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[322,11657+7]..[322,11657+58])
                        Pexp_constant PConst_string("Error producing assembly code for function %s: %a",(asmcomp/asmgen.ml[322,11657+8]..[322,11657+57]),None)
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[323,11716+7]..[323,11716+9])
                        Pexp_ident "fn" (asmcomp/asmgen.ml[323,11716+7]..[323,11716+9])
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[323,11716+10]..[323,11716+30])
                        Pexp_ident "Emitaux.report_error" (asmcomp/asmgen.ml[323,11716+10]..[323,11716+30])
                    <arg>
                    Nolabel
                      expression (asmcomp/asmgen.ml[323,11716+31]..[323,11716+34])
                        Pexp_ident "err" (asmcomp/asmgen.ml[323,11716+31]..[323,11716+34])
                  ]
            ]
    ]
  structure_item (asmcomp/asmgen.ml[325,11752+0]..[330,11902+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (asmcomp/asmgen.ml[325,11752+4]..[325,11752+6])
          Ppat_construct "()" (asmcomp/asmgen.ml[325,11752+4]..[325,11752+6])
          None
        expression (asmcomp/asmgen.ml[326,11761+2]..[330,11902+5])
          Pexp_apply
          expression (asmcomp/asmgen.ml[326,11761+2]..[326,11761+32])
            Pexp_ident "Location.register_error_of_exn" (asmcomp/asmgen.ml[326,11761+2]..[326,11761+32])
          [
            <arg>
            Nolabel
              expression (asmcomp/asmgen.ml[327,11794+4]..[330,11902+5])
                Pexp_function
                [
                  <case>
                    pattern (asmcomp/asmgen.ml[328,11808+8]..[328,11808+17])
                      Ppat_construct "Error" (asmcomp/asmgen.ml[328,11808+8]..[328,11808+13])
                      Some
                        []
                        pattern (asmcomp/asmgen.ml[328,11808+14]..[328,11808+17])
                          Ppat_var "err" (asmcomp/asmgen.ml[328,11808+14]..[328,11808+17])
                    expression (asmcomp/asmgen.ml[328,11808+21]..[328,11808+75])
                      Pexp_construct "Some" (asmcomp/asmgen.ml[328,11808+21]..[328,11808+25])
                      Some
                        expression (asmcomp/asmgen.ml[328,11808+26]..[328,11808+75])
                          Pexp_apply
                          expression (asmcomp/asmgen.ml[328,11808+27]..[328,11808+57])
                            Pexp_ident "Location.error_of_printer_file" (asmcomp/asmgen.ml[328,11808+27]..[328,11808+57])
                          [
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[328,11808+58]..[328,11808+70])
                                Pexp_ident "report_error" (asmcomp/asmgen.ml[328,11808+58]..[328,11808+70])
                            <arg>
                            Nolabel
                              expression (asmcomp/asmgen.ml[328,11808+71]..[328,11808+74])
                                Pexp_ident "err" (asmcomp/asmgen.ml[328,11808+71]..[328,11808+74])
                          ]
                  <case>
                    pattern (asmcomp/asmgen.ml[329,11884+8]..[329,11884+9])
                      Ppat_any
                    expression (asmcomp/asmgen.ml[329,11884+13]..[329,11884+17])
                      Pexp_construct "None" (asmcomp/asmgen.ml[329,11884+13]..[329,11884+17])
                      None
                ]
          ]
    ]
]

