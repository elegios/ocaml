[
  structure_item (file_formats/cmt_format.ml[16,1079+0]..[16,1079+15])
    Pstr_open Fresh
    module_expr (file_formats/cmt_format.ml[16,1079+5]..[16,1079+15])
      Pmod_ident "Cmi_format" (file_formats/cmt_format.ml[16,1079+5]..[16,1079+15])
  structure_item (file_formats/cmt_format.ml[17,1095+0]..[17,1095+14])
    Pstr_open Fresh
    module_expr (file_formats/cmt_format.ml[17,1095+5]..[17,1095+14])
      Pmod_ident "Typedtree" (file_formats/cmt_format.ml[17,1095+5]..[17,1095+14])
  structure_item (file_formats/cmt_format.ml[27,1352+0]..[29,1445+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[27,1352+4]..[27,1352+21])
          Ppat_var "read_magic_number" (file_formats/cmt_format.ml[27,1352+4]..[27,1352+21])
        expression (file_formats/cmt_format.ml[27,1352+22]..[29,1445+41]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/cmt_format.ml[27,1352+22]..[27,1352+24])
            Ppat_var "ic" (file_formats/cmt_format.ml[27,1352+22]..[27,1352+24])
          expression (file_formats/cmt_format.ml[28,1379+2]..[29,1445+41])
            Pexp_let Nonrec
            [
              <def>
                pattern (file_formats/cmt_format.ml[28,1379+6]..[28,1379+22])
                  Ppat_var "len_magic_number" (file_formats/cmt_format.ml[28,1379+6]..[28,1379+22])
                expression (file_formats/cmt_format.ml[28,1379+25]..[28,1379+62])
                  Pexp_apply
                  expression (file_formats/cmt_format.ml[28,1379+25]..[28,1379+38])
                    Pexp_ident "String.length" (file_formats/cmt_format.ml[28,1379+25]..[28,1379+38])
                  [
                    <arg>
                    Nolabel
                      expression (file_formats/cmt_format.ml[28,1379+39]..[28,1379+62])
                        Pexp_ident "Config.cmt_magic_number" (file_formats/cmt_format.ml[28,1379+39]..[28,1379+62])
                  ]
            ]
            expression (file_formats/cmt_format.ml[29,1445+2]..[29,1445+41])
              Pexp_apply
              expression (file_formats/cmt_format.ml[29,1445+2]..[29,1445+21])
                Pexp_ident "really_input_string" (file_formats/cmt_format.ml[29,1445+2]..[29,1445+21])
              [
                <arg>
                Nolabel
                  expression (file_formats/cmt_format.ml[29,1445+22]..[29,1445+24])
                    Pexp_ident "ic" (file_formats/cmt_format.ml[29,1445+22]..[29,1445+24])
                <arg>
                Nolabel
                  expression (file_formats/cmt_format.ml[29,1445+25]..[29,1445+41])
                    Pexp_ident "len_magic_number" (file_formats/cmt_format.ml[29,1445+25]..[29,1445+41])
              ]
    ]
  structure_item (file_formats/cmt_format.ml[31,1488+0]..[46,2020+36])
    Pstr_type Rec
    [
      type_declaration "binary_annots" (file_formats/cmt_format.ml[31,1488+5]..[31,1488+18]) (file_formats/cmt_format.ml[31,1488+0]..[36,1660+42])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (file_formats/cmt_format.ml[32,1509+2]..[32,1509+43])
                "Packed" (file_formats/cmt_format.ml[32,1509+4]..[32,1509+10])
                [
                  core_type (file_formats/cmt_format.ml[32,1509+14]..[32,1509+29])
                    Ptyp_constr "Types.signature" (file_formats/cmt_format.ml[32,1509+14]..[32,1509+29])
                    []
                  core_type (file_formats/cmt_format.ml[32,1509+32]..[32,1509+43])
                    Ptyp_constr "list" (file_formats/cmt_format.ml[32,1509+39]..[32,1509+43])
                    [
                      core_type (file_formats/cmt_format.ml[32,1509+32]..[32,1509+38])
                        Ptyp_constr "string" (file_formats/cmt_format.ml[32,1509+32]..[32,1509+38])
                        []
                    ]
                ]
                None
              (file_formats/cmt_format.ml[33,1553+2]..[33,1553+31])
                "Implementation" (file_formats/cmt_format.ml[33,1553+4]..[33,1553+18])
                [
                  core_type (file_formats/cmt_format.ml[33,1553+22]..[33,1553+31])
                    Ptyp_constr "structure" (file_formats/cmt_format.ml[33,1553+22]..[33,1553+31])
                    []
                ]
                None
              (file_formats/cmt_format.ml[34,1585+2]..[34,1585+26])
                "Interface" (file_formats/cmt_format.ml[34,1585+4]..[34,1585+13])
                [
                  core_type (file_formats/cmt_format.ml[34,1585+17]..[34,1585+26])
                    Ptyp_constr "signature" (file_formats/cmt_format.ml[34,1585+17]..[34,1585+26])
                    []
                ]
                None
              (file_formats/cmt_format.ml[35,1612+2]..[35,1612+47])
                "Partial_implementation" (file_formats/cmt_format.ml[35,1612+4]..[35,1612+26])
                [
                  core_type (file_formats/cmt_format.ml[35,1612+30]..[35,1612+47])
                    Ptyp_constr "array" (file_formats/cmt_format.ml[35,1612+42]..[35,1612+47])
                    [
                      core_type (file_formats/cmt_format.ml[35,1612+30]..[35,1612+41])
                        Ptyp_constr "binary_part" (file_formats/cmt_format.ml[35,1612+30]..[35,1612+41])
                        []
                    ]
                ]
                None
              (file_formats/cmt_format.ml[36,1660+2]..[36,1660+42])
                "Partial_interface" (file_formats/cmt_format.ml[36,1660+4]..[36,1660+21])
                [
                  core_type (file_formats/cmt_format.ml[36,1660+25]..[36,1660+42])
                    Ptyp_constr "array" (file_formats/cmt_format.ml[36,1660+37]..[36,1660+42])
                    [
                      core_type (file_formats/cmt_format.ml[36,1660+25]..[36,1660+36])
                        Ptyp_constr "binary_part" (file_formats/cmt_format.ml[36,1660+25]..[36,1660+36])
                        []
                    ]
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "binary_part" (file_formats/cmt_format.ml[38,1704+4]..[38,1704+15]) (file_formats/cmt_format.ml[38,1704+0]..[46,2020+36])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (file_formats/cmt_format.ml[39,1722+0]..[39,1722+32])
                "Partial_structure" (file_formats/cmt_format.ml[39,1722+2]..[39,1722+19])
                [
                  core_type (file_formats/cmt_format.ml[39,1722+23]..[39,1722+32])
                    Ptyp_constr "structure" (file_formats/cmt_format.ml[39,1722+23]..[39,1722+32])
                    []
                ]
                None
              (file_formats/cmt_format.ml[40,1755+0]..[40,1755+42])
                "Partial_structure_item" (file_formats/cmt_format.ml[40,1755+2]..[40,1755+24])
                [
                  core_type (file_formats/cmt_format.ml[40,1755+28]..[40,1755+42])
                    Ptyp_constr "structure_item" (file_formats/cmt_format.ml[40,1755+28]..[40,1755+42])
                    []
                ]
                None
              (file_formats/cmt_format.ml[41,1798+0]..[41,1798+34])
                "Partial_expression" (file_formats/cmt_format.ml[41,1798+2]..[41,1798+20])
                [
                  core_type (file_formats/cmt_format.ml[41,1798+24]..[41,1798+34])
                    Ptyp_constr "expression" (file_formats/cmt_format.ml[41,1798+24]..[41,1798+34])
                    []
                ]
                None
              (file_formats/cmt_format.ml[42,1833+0]..[42,1833+75])
                "Partial_pattern" (file_formats/cmt_format.ml[42,1833+2]..[42,1833+17])
                [
                  core_type (file_formats/cmt_format.ml[42,1833+20]..[42,1833+39])
                    Ptyp_constr "pattern_category" (file_formats/cmt_format.ml[42,1833+23]..[42,1833+39])
                    [
                      core_type (file_formats/cmt_format.ml[42,1833+20]..[42,1833+22])
                        Ptyp_var k
                    ]
                  core_type (file_formats/cmt_format.ml[42,1833+42]..[42,1833+60])
                    Ptyp_constr "general_pattern" (file_formats/cmt_format.ml[42,1833+45]..[42,1833+60])
                    [
                      core_type (file_formats/cmt_format.ml[42,1833+42]..[42,1833+44])
                        Ptyp_var k
                    ]
                ]
                Some
                  core_type (file_formats/cmt_format.ml[42,1833+64]..[42,1833+75])
                    Ptyp_constr "binary_part" (file_formats/cmt_format.ml[42,1833+64]..[42,1833+75])
                    []
              (file_formats/cmt_format.ml[43,1909+0]..[43,1909+34])
                "Partial_class_expr" (file_formats/cmt_format.ml[43,1909+2]..[43,1909+20])
                [
                  core_type (file_formats/cmt_format.ml[43,1909+24]..[43,1909+34])
                    Ptyp_constr "class_expr" (file_formats/cmt_format.ml[43,1909+24]..[43,1909+34])
                    []
                ]
                None
              (file_formats/cmt_format.ml[44,1944+0]..[44,1944+32])
                "Partial_signature" (file_formats/cmt_format.ml[44,1944+2]..[44,1944+19])
                [
                  core_type (file_formats/cmt_format.ml[44,1944+23]..[44,1944+32])
                    Ptyp_constr "signature" (file_formats/cmt_format.ml[44,1944+23]..[44,1944+32])
                    []
                ]
                None
              (file_formats/cmt_format.ml[45,1977+0]..[45,1977+42])
                "Partial_signature_item" (file_formats/cmt_format.ml[45,1977+2]..[45,1977+24])
                [
                  core_type (file_formats/cmt_format.ml[45,1977+28]..[45,1977+42])
                    Ptyp_constr "signature_item" (file_formats/cmt_format.ml[45,1977+28]..[45,1977+42])
                    []
                ]
                None
              (file_formats/cmt_format.ml[46,2020+0]..[46,2020+36])
                "Partial_module_type" (file_formats/cmt_format.ml[46,2020+2]..[46,2020+21])
                [
                  core_type (file_formats/cmt_format.ml[46,2020+25]..[46,2020+36])
                    Ptyp_constr "module_type" (file_formats/cmt_format.ml[46,2020+25]..[46,2020+36])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (file_formats/cmt_format.ml[48,2058+0]..[63,2566+1])
    Pstr_type Rec
    [
      type_declaration "cmt_infos" (file_formats/cmt_format.ml[48,2058+5]..[48,2058+14]) (file_formats/cmt_format.ml[48,2058+0]..[63,2566+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (file_formats/cmt_format.ml[49,2077+2]..[49,2077+23])
                Immutable
                "cmt_modname" (file_formats/cmt_format.ml[49,2077+2]..[49,2077+13])                core_type (file_formats/cmt_format.ml[49,2077+16]..[49,2077+22])
                  Ptyp_constr "string" (file_formats/cmt_format.ml[49,2077+16]..[49,2077+22])
                  []
              (file_formats/cmt_format.ml[50,2101+2]..[50,2101+29])
                Immutable
                "cmt_annots" (file_formats/cmt_format.ml[50,2101+2]..[50,2101+12])                core_type (file_formats/cmt_format.ml[50,2101+15]..[50,2101+28])
                  Ptyp_constr "binary_annots" (file_formats/cmt_format.ml[50,2101+15]..[50,2101+28])
                  []
              (file_formats/cmt_format.ml[51,2131+2]..[52,2158+61])
                Immutable
                "cmt_value_dependencies" (file_formats/cmt_format.ml[51,2131+2]..[51,2131+24])                core_type (file_formats/cmt_format.ml[52,2158+4]..[52,2158+60])
                  Ptyp_constr "list" (file_formats/cmt_format.ml[52,2158+56]..[52,2158+60])
                  [
                    core_type (file_formats/cmt_format.ml[52,2158+5]..[52,2158+54])
                      Ptyp_tuple
                      [
                        core_type (file_formats/cmt_format.ml[52,2158+5]..[52,2158+28])
                          Ptyp_constr "Types.value_description" (file_formats/cmt_format.ml[52,2158+5]..[52,2158+28])
                          []
                        core_type (file_formats/cmt_format.ml[52,2158+31]..[52,2158+54])
                          Ptyp_constr "Types.value_description" (file_formats/cmt_format.ml[52,2158+31]..[52,2158+54])
                          []
                      ]
                  ]
              (file_formats/cmt_format.ml[53,2220+2]..[53,2220+44])
                Immutable
                "cmt_comments" (file_formats/cmt_format.ml[53,2220+2]..[53,2220+14])                core_type (file_formats/cmt_format.ml[53,2220+17]..[53,2220+43])
                  Ptyp_constr "list" (file_formats/cmt_format.ml[53,2220+39]..[53,2220+43])
                  [
                    core_type (file_formats/cmt_format.ml[53,2220+18]..[53,2220+37])
                      Ptyp_tuple
                      [
                        core_type (file_formats/cmt_format.ml[53,2220+18]..[53,2220+24])
                          Ptyp_constr "string" (file_formats/cmt_format.ml[53,2220+18]..[53,2220+24])
                          []
                        core_type (file_formats/cmt_format.ml[53,2220+27]..[53,2220+37])
                          Ptyp_constr "Location.t" (file_formats/cmt_format.ml[53,2220+27]..[53,2220+37])
                          []
                      ]
                  ]
              (file_formats/cmt_format.ml[54,2265+2]..[54,2265+26])
                Immutable
                "cmt_args" (file_formats/cmt_format.ml[54,2265+2]..[54,2265+10])                core_type (file_formats/cmt_format.ml[54,2265+13]..[54,2265+25])
                  Ptyp_constr "array" (file_formats/cmt_format.ml[54,2265+20]..[54,2265+25])
                  [
                    core_type (file_formats/cmt_format.ml[54,2265+13]..[54,2265+19])
                      Ptyp_constr "string" (file_formats/cmt_format.ml[54,2265+13]..[54,2265+19])
                      []
                  ]
              (file_formats/cmt_format.ml[55,2292+2]..[55,2292+33])
                Immutable
                "cmt_sourcefile" (file_formats/cmt_format.ml[55,2292+2]..[55,2292+16])                core_type (file_formats/cmt_format.ml[55,2292+19]..[55,2292+32])
                  Ptyp_constr "option" (file_formats/cmt_format.ml[55,2292+26]..[55,2292+32])
                  [
                    core_type (file_formats/cmt_format.ml[55,2292+19]..[55,2292+25])
                      Ptyp_constr "string" (file_formats/cmt_format.ml[55,2292+19]..[55,2292+25])
                      []
                  ]
              (file_formats/cmt_format.ml[56,2326+2]..[56,2326+24])
                Immutable
                "cmt_builddir" (file_formats/cmt_format.ml[56,2326+2]..[56,2326+14])                core_type (file_formats/cmt_format.ml[56,2326+17]..[56,2326+23])
                  Ptyp_constr "string" (file_formats/cmt_format.ml[56,2326+17]..[56,2326+23])
                  []
              (file_formats/cmt_format.ml[57,2351+2]..[57,2351+29])
                Immutable
                "cmt_loadpath" (file_formats/cmt_format.ml[57,2351+2]..[57,2351+14])                core_type (file_formats/cmt_format.ml[57,2351+17]..[57,2351+28])
                  Ptyp_constr "list" (file_formats/cmt_format.ml[57,2351+24]..[57,2351+28])
                  [
                    core_type (file_formats/cmt_format.ml[57,2351+17]..[57,2351+23])
                      Ptyp_constr "string" (file_formats/cmt_format.ml[57,2351+17]..[57,2351+23])
                      []
                  ]
              (file_formats/cmt_format.ml[58,2381+2]..[58,2381+38])
                Immutable
                "cmt_source_digest" (file_formats/cmt_format.ml[58,2381+2]..[58,2381+19])                core_type (file_formats/cmt_format.ml[58,2381+22]..[58,2381+37])
                  Ptyp_constr "option" (file_formats/cmt_format.ml[58,2381+31]..[58,2381+37])
                  [
                    core_type (file_formats/cmt_format.ml[58,2381+22]..[58,2381+30])
                      Ptyp_constr "Digest.t" (file_formats/cmt_format.ml[58,2381+22]..[58,2381+30])
                      []
                  ]
              (file_formats/cmt_format.ml[59,2420+2]..[59,2420+26])
                Immutable
                "cmt_initial_env" (file_formats/cmt_format.ml[59,2420+2]..[59,2420+17])                core_type (file_formats/cmt_format.ml[59,2420+20]..[59,2420+25])
                  Ptyp_constr "Env.t" (file_formats/cmt_format.ml[59,2420+20]..[59,2420+25])
                  []
              (file_formats/cmt_format.ml[60,2447+2]..[60,2447+48])
                Immutable
                "cmt_imports" (file_formats/cmt_format.ml[60,2447+2]..[60,2447+13])                core_type (file_formats/cmt_format.ml[60,2447+16]..[60,2447+47])
                  Ptyp_constr "list" (file_formats/cmt_format.ml[60,2447+43]..[60,2447+47])
                  [
                    core_type (file_formats/cmt_format.ml[60,2447+17]..[60,2447+41])
                      Ptyp_tuple
                      [
                        core_type (file_formats/cmt_format.ml[60,2447+17]..[60,2447+23])
                          Ptyp_constr "string" (file_formats/cmt_format.ml[60,2447+17]..[60,2447+23])
                          []
                        core_type (file_formats/cmt_format.ml[60,2447+26]..[60,2447+41])
                          Ptyp_constr "option" (file_formats/cmt_format.ml[60,2447+35]..[60,2447+41])
                          [
                            core_type (file_formats/cmt_format.ml[60,2447+26]..[60,2447+34])
                              Ptyp_constr "Digest.t" (file_formats/cmt_format.ml[60,2447+26]..[60,2447+34])
                              []
                          ]
                      ]
                  ]
              (file_formats/cmt_format.ml[61,2496+2]..[61,2496+41])
                Immutable
                "cmt_interface_digest" (file_formats/cmt_format.ml[61,2496+2]..[61,2496+22])                core_type (file_formats/cmt_format.ml[61,2496+25]..[61,2496+40])
                  Ptyp_constr "option" (file_formats/cmt_format.ml[61,2496+34]..[61,2496+40])
                  [
                    core_type (file_formats/cmt_format.ml[61,2496+25]..[61,2496+33])
                      Ptyp_constr "Digest.t" (file_formats/cmt_format.ml[61,2496+25]..[61,2496+33])
                      []
                  ]
              (file_formats/cmt_format.ml[62,2538+2]..[62,2538+27])
                Immutable
                "cmt_use_summaries" (file_formats/cmt_format.ml[62,2538+2]..[62,2538+19])                core_type (file_formats/cmt_format.ml[62,2538+22]..[62,2538+26])
                  Ptyp_constr "bool" (file_formats/cmt_format.ml[62,2538+22]..[62,2538+26])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (file_formats/cmt_format.ml[65,2569+0]..[66,2582+29])
    Pstr_type Rec
    [
      type_declaration "error" (file_formats/cmt_format.ml[65,2569+5]..[65,2569+10]) (file_formats/cmt_format.ml[65,2569+0]..[66,2582+29])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (file_formats/cmt_format.ml[66,2582+4]..[66,2582+29])
                "Not_a_typedtree" (file_formats/cmt_format.ml[66,2582+4]..[66,2582+19])
                [
                  core_type (file_formats/cmt_format.ml[66,2582+23]..[66,2582+29])
                    Ptyp_constr "string" (file_formats/cmt_format.ml[66,2582+23]..[66,2582+29])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (file_formats/cmt_format.ml[68,2613+0]..[70,2695+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[68,2613+4]..[68,2613+21])
          Ppat_var "need_to_clear_env" (file_formats/cmt_format.ml[68,2613+4]..[68,2613+21])
        expression (file_formats/cmt_format.ml[69,2637+2]..[70,2695+24])
          Pexp_try
          expression (file_formats/cmt_format.ml[69,2637+6]..[69,2637+57])
            Pexp_sequence
            expression (file_formats/cmt_format.ml[69,2637+6]..[69,2637+50])
              Pexp_apply
              expression (file_formats/cmt_format.ml[69,2637+6]..[69,2637+12])
                Pexp_ident "ignore" (file_formats/cmt_format.ml[69,2637+6]..[69,2637+12])
              [
                <arg>
                Nolabel
                  expression (file_formats/cmt_format.ml[69,2637+13]..[69,2637+50])
                    Pexp_apply
                    expression (file_formats/cmt_format.ml[69,2637+14]..[69,2637+24])
                      Pexp_ident "Sys.getenv" (file_formats/cmt_format.ml[69,2637+14]..[69,2637+24])
                    [
                      <arg>
                      Nolabel
                        expression (file_formats/cmt_format.ml[69,2637+25]..[69,2637+49])
                          Pexp_constant PConst_string("OCAML_BINANNOT_WITHENV",(file_formats/cmt_format.ml[69,2637+26]..[69,2637+48]),None)
                    ]
              ]
            expression (file_formats/cmt_format.ml[69,2637+52]..[69,2637+57])
              Pexp_construct "false" (file_formats/cmt_format.ml[69,2637+52]..[69,2637+57])
              None
          [
            <case>
              pattern (file_formats/cmt_format.ml[70,2695+7]..[70,2695+16])
                Ppat_construct "Not_found" (file_formats/cmt_format.ml[70,2695+7]..[70,2695+16])
                None
              expression (file_formats/cmt_format.ml[70,2695+20]..[70,2695+24])
                Pexp_construct "true" (file_formats/cmt_format.ml[70,2695+20]..[70,2695+24])
                None
          ]
    ]
  structure_item (file_formats/cmt_format.ml[72,2721+0]..[72,2721+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[72,2721+4]..[72,2721+21])
          Ppat_var "keep_only_summary" (file_formats/cmt_format.ml[72,2721+4]..[72,2721+21])
        expression (file_formats/cmt_format.ml[72,2721+24]..[72,2721+45])
          Pexp_ident "Env.keep_only_summary" (file_formats/cmt_format.ml[72,2721+24]..[72,2721+45])
    ]
  structure_item (file_formats/cmt_format.ml[74,2768+0]..[74,2768+16])
    Pstr_open Fresh
    module_expr (file_formats/cmt_format.ml[74,2768+5]..[74,2768+16])
      Pmod_ident "Tast_mapper" (file_formats/cmt_format.ml[74,2768+5]..[74,2768+16])
  structure_item (file_formats/cmt_format.ml[76,2786+0]..[77,2797+72])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[76,2786+4]..[76,2786+8])
          Ppat_var "cenv" (file_formats/cmt_format.ml[76,2786+4]..[76,2786+8])
        expression (file_formats/cmt_format.ml[77,2797+2]..[77,2797+72])
          Pexp_record
          [
            "env" (file_formats/cmt_format.ml[77,2797+28]..[77,2797+31])
              expression (file_formats/cmt_format.ml[77,2797+34]..[77,2797+71])
                Pexp_fun
                Nolabel
                None
                pattern (file_formats/cmt_format.ml[77,2797+38]..[77,2797+42])
                  Ppat_var "_sub" (file_formats/cmt_format.ml[77,2797+38]..[77,2797+42])
                expression (file_formats/cmt_format.ml[77,2797+43]..[77,2797+71]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (file_formats/cmt_format.ml[77,2797+43]..[77,2797+46])
                    Ppat_var "env" (file_formats/cmt_format.ml[77,2797+43]..[77,2797+46])
                  expression (file_formats/cmt_format.ml[77,2797+50]..[77,2797+71])
                    Pexp_apply
                    expression (file_formats/cmt_format.ml[77,2797+50]..[77,2797+67])
                      Pexp_ident "keep_only_summary" (file_formats/cmt_format.ml[77,2797+50]..[77,2797+67])
                    [
                      <arg>
                      Nolabel
                        expression (file_formats/cmt_format.ml[77,2797+68]..[77,2797+71])
                          Pexp_ident "env" (file_formats/cmt_format.ml[77,2797+68]..[77,2797+71])
                    ]
          ]
          Some
            expression (file_formats/cmt_format.ml[77,2797+3]..[77,2797+22])
              Pexp_ident "Tast_mapper.default" (file_formats/cmt_format.ml[77,2797+3]..[77,2797+22])
    ]
  structure_item (file_formats/cmt_format.ml[79,2871+0]..[89,3436+74])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[79,2871+4]..[79,2871+14])
          Ppat_var "clear_part" (file_formats/cmt_format.ml[79,2871+4]..[79,2871+14])
        expression (file_formats/cmt_format.ml[79,2871+17]..[89,3436+74])
          Pexp_function
          [
            <case>
              pattern (file_formats/cmt_format.ml[80,2897+4]..[80,2897+23])
                Ppat_construct "Partial_structure" (file_formats/cmt_format.ml[80,2897+4]..[80,2897+21])
                Some
                  []
                  pattern (file_formats/cmt_format.ml[80,2897+22]..[80,2897+23])
                    Ppat_var "s" (file_formats/cmt_format.ml[80,2897+22]..[80,2897+23])
              expression (file_formats/cmt_format.ml[80,2897+27]..[80,2897+68])
                Pexp_construct "Partial_structure" (file_formats/cmt_format.ml[80,2897+27]..[80,2897+44])
                Some
                  expression (file_formats/cmt_format.ml[80,2897+45]..[80,2897+68])
                    Pexp_apply
                    expression (file_formats/cmt_format.ml[80,2897+46]..[80,2897+60])
                      Pexp_field
                      expression (file_formats/cmt_format.ml[80,2897+46]..[80,2897+50])
                        Pexp_ident "cenv" (file_formats/cmt_format.ml[80,2897+46]..[80,2897+50])
                      "structure" (file_formats/cmt_format.ml[80,2897+51]..[80,2897+60])
                    [
                      <arg>
                      Nolabel
                        expression (file_formats/cmt_format.ml[80,2897+61]..[80,2897+65])
                          Pexp_ident "cenv" (file_formats/cmt_format.ml[80,2897+61]..[80,2897+65])
                      <arg>
                      Nolabel
                        expression (file_formats/cmt_format.ml[80,2897+66]..[80,2897+67])
                          Pexp_ident "s" (file_formats/cmt_format.ml[80,2897+66]..[80,2897+67])
                    ]
            <case>
              pattern (file_formats/cmt_format.ml[81,2966+4]..[81,2966+28])
                Ppat_construct "Partial_structure_item" (file_formats/cmt_format.ml[81,2966+4]..[81,2966+26])
                Some
                  []
                  pattern (file_formats/cmt_format.ml[81,2966+27]..[81,2966+28])
                    Ppat_var "s" (file_formats/cmt_format.ml[81,2966+27]..[81,2966+28])
              expression (file_formats/cmt_format.ml[82,2998+6]..[82,2998+57])
                Pexp_construct "Partial_structure_item" (file_formats/cmt_format.ml[82,2998+6]..[82,2998+28])
                Some
                  expression (file_formats/cmt_format.ml[82,2998+29]..[82,2998+57])
                    Pexp_apply
                    expression (file_formats/cmt_format.ml[82,2998+30]..[82,2998+49])
                      Pexp_field
                      expression (file_formats/cmt_format.ml[82,2998+30]..[82,2998+34])
                        Pexp_ident "cenv" (file_formats/cmt_format.ml[82,2998+30]..[82,2998+34])
                      "structure_item" (file_formats/cmt_format.ml[82,2998+35]..[82,2998+49])
                    [
                      <arg>
                      Nolabel
                        expression (file_formats/cmt_format.ml[82,2998+50]..[82,2998+54])
                          Pexp_ident "cenv" (file_formats/cmt_format.ml[82,2998+50]..[82,2998+54])
                      <arg>
                      Nolabel
                        expression (file_formats/cmt_format.ml[82,2998+55]..[82,2998+56])
                          Pexp_ident "s" (file_formats/cmt_format.ml[82,2998+55]..[82,2998+56])
                    ]
            <case>
              pattern (file_formats/cmt_format.ml[83,3056+4]..[83,3056+24])
                Ppat_construct "Partial_expression" (file_formats/cmt_format.ml[83,3056+4]..[83,3056+22])
                Some
                  []
                  pattern (file_formats/cmt_format.ml[83,3056+23]..[83,3056+24])
                    Ppat_var "e" (file_formats/cmt_format.ml[83,3056+23]..[83,3056+24])
              expression (file_formats/cmt_format.ml[83,3056+28]..[83,3056+65])
                Pexp_construct "Partial_expression" (file_formats/cmt_format.ml[83,3056+28]..[83,3056+46])
                Some
                  expression (file_formats/cmt_format.ml[83,3056+47]..[83,3056+65])
                    Pexp_apply
                    expression (file_formats/cmt_format.ml[83,3056+48]..[83,3056+57])
                      Pexp_field
                      expression (file_formats/cmt_format.ml[83,3056+48]..[83,3056+52])
                        Pexp_ident "cenv" (file_formats/cmt_format.ml[83,3056+48]..[83,3056+52])
                      "expr" (file_formats/cmt_format.ml[83,3056+53]..[83,3056+57])
                    [
                      <arg>
                      Nolabel
                        expression (file_formats/cmt_format.ml[83,3056+58]..[83,3056+62])
                          Pexp_ident "cenv" (file_formats/cmt_format.ml[83,3056+58]..[83,3056+62])
                      <arg>
                      Nolabel
                        expression (file_formats/cmt_format.ml[83,3056+63]..[83,3056+64])
                          Pexp_ident "e" (file_formats/cmt_format.ml[83,3056+63]..[83,3056+64])
                    ]
            <case>
              pattern (file_formats/cmt_format.ml[84,3122+4]..[84,3122+33])
                Ppat_construct "Partial_pattern" (file_formats/cmt_format.ml[84,3122+4]..[84,3122+19])
                Some
                  []
                  pattern (file_formats/cmt_format.ml[84,3122+20]..[84,3122+33])
                    Ppat_tuple
                    [
                      pattern (file_formats/cmt_format.ml[84,3122+21]..[84,3122+29])
                        Ppat_var "category" (file_formats/cmt_format.ml[84,3122+21]..[84,3122+29])
                      pattern (file_formats/cmt_format.ml[84,3122+31]..[84,3122+32])
                        Ppat_var "p" (file_formats/cmt_format.ml[84,3122+31]..[84,3122+32])
                    ]
              expression (file_formats/cmt_format.ml[84,3122+37]..[84,3122+80])
                Pexp_construct "Partial_pattern" (file_formats/cmt_format.ml[84,3122+37]..[84,3122+52])
                Some
                  expression (file_formats/cmt_format.ml[84,3122+53]..[84,3122+80])
                    Pexp_tuple
                    [
                      expression (file_formats/cmt_format.ml[84,3122+54]..[84,3122+62])
                        Pexp_ident "category" (file_formats/cmt_format.ml[84,3122+54]..[84,3122+62])
                      expression (file_formats/cmt_format.ml[84,3122+64]..[84,3122+79])
                        Pexp_apply
                        expression (file_formats/cmt_format.ml[84,3122+64]..[84,3122+72])
                          Pexp_field
                          expression (file_formats/cmt_format.ml[84,3122+64]..[84,3122+68])
                            Pexp_ident "cenv" (file_formats/cmt_format.ml[84,3122+64]..[84,3122+68])
                          "pat" (file_formats/cmt_format.ml[84,3122+69]..[84,3122+72])
                        [
                          <arg>
                          Nolabel
                            expression (file_formats/cmt_format.ml[84,3122+73]..[84,3122+77])
                              Pexp_ident "cenv" (file_formats/cmt_format.ml[84,3122+73]..[84,3122+77])
                          <arg>
                          Nolabel
                            expression (file_formats/cmt_format.ml[84,3122+78]..[84,3122+79])
                              Pexp_ident "p" (file_formats/cmt_format.ml[84,3122+78]..[84,3122+79])
                        ]
                    ]
            <case>
              pattern (file_formats/cmt_format.ml[85,3203+4]..[85,3203+25])
                Ppat_construct "Partial_class_expr" (file_formats/cmt_format.ml[85,3203+4]..[85,3203+22])
                Some
                  []
                  pattern (file_formats/cmt_format.ml[85,3203+23]..[85,3203+25])
                    Ppat_var "ce" (file_formats/cmt_format.ml[85,3203+23]..[85,3203+25])
              expression (file_formats/cmt_format.ml[85,3203+29]..[85,3203+73])
                Pexp_construct "Partial_class_expr" (file_formats/cmt_format.ml[85,3203+29]..[85,3203+47])
                Some
                  expression (file_formats/cmt_format.ml[85,3203+48]..[85,3203+73])
                    Pexp_apply
                    expression (file_formats/cmt_format.ml[85,3203+49]..[85,3203+64])
                      Pexp_field
                      expression (file_formats/cmt_format.ml[85,3203+49]..[85,3203+53])
                        Pexp_ident "cenv" (file_formats/cmt_format.ml[85,3203+49]..[85,3203+53])
                      "class_expr" (file_formats/cmt_format.ml[85,3203+54]..[85,3203+64])
                    [
                      <arg>
                      Nolabel
                        expression (file_formats/cmt_format.ml[85,3203+65]..[85,3203+69])
                          Pexp_ident "cenv" (file_formats/cmt_format.ml[85,3203+65]..[85,3203+69])
                      <arg>
                      Nolabel
                        expression (file_formats/cmt_format.ml[85,3203+70]..[85,3203+72])
                          Pexp_ident "ce" (file_formats/cmt_format.ml[85,3203+70]..[85,3203+72])
                    ]
            <case>
              pattern (file_formats/cmt_format.ml[86,3277+4]..[86,3277+23])
                Ppat_construct "Partial_signature" (file_formats/cmt_format.ml[86,3277+4]..[86,3277+21])
                Some
                  []
                  pattern (file_formats/cmt_format.ml[86,3277+22]..[86,3277+23])
                    Ppat_var "s" (file_formats/cmt_format.ml[86,3277+22]..[86,3277+23])
              expression (file_formats/cmt_format.ml[86,3277+27]..[86,3277+68])
                Pexp_construct "Partial_signature" (file_formats/cmt_format.ml[86,3277+27]..[86,3277+44])
                Some
                  expression (file_formats/cmt_format.ml[86,3277+45]..[86,3277+68])
                    Pexp_apply
                    expression (file_formats/cmt_format.ml[86,3277+46]..[86,3277+60])
                      Pexp_field
                      expression (file_formats/cmt_format.ml[86,3277+46]..[86,3277+50])
                        Pexp_ident "cenv" (file_formats/cmt_format.ml[86,3277+46]..[86,3277+50])
                      "signature" (file_formats/cmt_format.ml[86,3277+51]..[86,3277+60])
                    [
                      <arg>
                      Nolabel
                        expression (file_formats/cmt_format.ml[86,3277+61]..[86,3277+65])
                          Pexp_ident "cenv" (file_formats/cmt_format.ml[86,3277+61]..[86,3277+65])
                      <arg>
                      Nolabel
                        expression (file_formats/cmt_format.ml[86,3277+66]..[86,3277+67])
                          Pexp_ident "s" (file_formats/cmt_format.ml[86,3277+66]..[86,3277+67])
                    ]
            <case>
              pattern (file_formats/cmt_format.ml[87,3346+4]..[87,3346+28])
                Ppat_construct "Partial_signature_item" (file_formats/cmt_format.ml[87,3346+4]..[87,3346+26])
                Some
                  []
                  pattern (file_formats/cmt_format.ml[87,3346+27]..[87,3346+28])
                    Ppat_var "s" (file_formats/cmt_format.ml[87,3346+27]..[87,3346+28])
              expression (file_formats/cmt_format.ml[88,3378+6]..[88,3378+57])
                Pexp_construct "Partial_signature_item" (file_formats/cmt_format.ml[88,3378+6]..[88,3378+28])
                Some
                  expression (file_formats/cmt_format.ml[88,3378+29]..[88,3378+57])
                    Pexp_apply
                    expression (file_formats/cmt_format.ml[88,3378+30]..[88,3378+49])
                      Pexp_field
                      expression (file_formats/cmt_format.ml[88,3378+30]..[88,3378+34])
                        Pexp_ident "cenv" (file_formats/cmt_format.ml[88,3378+30]..[88,3378+34])
                      "signature_item" (file_formats/cmt_format.ml[88,3378+35]..[88,3378+49])
                    [
                      <arg>
                      Nolabel
                        expression (file_formats/cmt_format.ml[88,3378+50]..[88,3378+54])
                          Pexp_ident "cenv" (file_formats/cmt_format.ml[88,3378+50]..[88,3378+54])
                      <arg>
                      Nolabel
                        expression (file_formats/cmt_format.ml[88,3378+55]..[88,3378+56])
                          Pexp_ident "s" (file_formats/cmt_format.ml[88,3378+55]..[88,3378+56])
                    ]
            <case>
              pattern (file_formats/cmt_format.ml[89,3436+4]..[89,3436+25])
                Ppat_construct "Partial_module_type" (file_formats/cmt_format.ml[89,3436+4]..[89,3436+23])
                Some
                  []
                  pattern (file_formats/cmt_format.ml[89,3436+24]..[89,3436+25])
                    Ppat_var "s" (file_formats/cmt_format.ml[89,3436+24]..[89,3436+25])
              expression (file_formats/cmt_format.ml[89,3436+29]..[89,3436+74])
                Pexp_construct "Partial_module_type" (file_formats/cmt_format.ml[89,3436+29]..[89,3436+48])
                Some
                  expression (file_formats/cmt_format.ml[89,3436+49]..[89,3436+74])
                    Pexp_apply
                    expression (file_formats/cmt_format.ml[89,3436+50]..[89,3436+66])
                      Pexp_field
                      expression (file_formats/cmt_format.ml[89,3436+50]..[89,3436+54])
                        Pexp_ident "cenv" (file_formats/cmt_format.ml[89,3436+50]..[89,3436+54])
                      "module_type" (file_formats/cmt_format.ml[89,3436+55]..[89,3436+66])
                    [
                      <arg>
                      Nolabel
                        expression (file_formats/cmt_format.ml[89,3436+67]..[89,3436+71])
                          Pexp_ident "cenv" (file_formats/cmt_format.ml[89,3436+67]..[89,3436+71])
                      <arg>
                      Nolabel
                        expression (file_formats/cmt_format.ml[89,3436+72]..[89,3436+73])
                          Pexp_ident "s" (file_formats/cmt_format.ml[89,3436+72]..[89,3436+73])
                    ]
          ]
    ]
  structure_item (file_formats/cmt_format.ml[91,3512+0]..[102,3938+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[91,3512+4]..[91,3512+13])
          Ppat_var "clear_env" (file_formats/cmt_format.ml[91,3512+4]..[91,3512+13])
        expression (file_formats/cmt_format.ml[91,3512+14]..[102,3938+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/cmt_format.ml[91,3512+14]..[91,3512+27])
            Ppat_var "binary_annots" (file_formats/cmt_format.ml[91,3512+14]..[91,3512+27])
          expression (file_formats/cmt_format.ml[92,3542+2]..[102,3938+20])
            Pexp_ifthenelse
            expression (file_formats/cmt_format.ml[92,3542+5]..[92,3542+22])
              Pexp_ident "need_to_clear_env" (file_formats/cmt_format.ml[92,3542+5]..[92,3542+22])
            expression (file_formats/cmt_format.ml[93,3570+4]..[100,3882+54])
              Pexp_match
              expression (file_formats/cmt_format.ml[93,3570+10]..[93,3570+23])
                Pexp_ident "binary_annots" (file_formats/cmt_format.ml[93,3570+10]..[93,3570+23])
              [
                <case>
                  pattern (file_formats/cmt_format.ml[94,3599+6]..[94,3599+22])
                    Ppat_construct "Implementation" (file_formats/cmt_format.ml[94,3599+6]..[94,3599+20])
                    Some
                      []
                      pattern (file_formats/cmt_format.ml[94,3599+21]..[94,3599+22])
                        Ppat_var "s" (file_formats/cmt_format.ml[94,3599+21]..[94,3599+22])
                  expression (file_formats/cmt_format.ml[94,3599+26]..[94,3599+64])
                    Pexp_construct "Implementation" (file_formats/cmt_format.ml[94,3599+26]..[94,3599+40])
                    Some
                      expression (file_formats/cmt_format.ml[94,3599+41]..[94,3599+64])
                        Pexp_apply
                        expression (file_formats/cmt_format.ml[94,3599+42]..[94,3599+56])
                          Pexp_field
                          expression (file_formats/cmt_format.ml[94,3599+42]..[94,3599+46])
                            Pexp_ident "cenv" (file_formats/cmt_format.ml[94,3599+42]..[94,3599+46])
                          "structure" (file_formats/cmt_format.ml[94,3599+47]..[94,3599+56])
                        [
                          <arg>
                          Nolabel
                            expression (file_formats/cmt_format.ml[94,3599+57]..[94,3599+61])
                              Pexp_ident "cenv" (file_formats/cmt_format.ml[94,3599+57]..[94,3599+61])
                          <arg>
                          Nolabel
                            expression (file_formats/cmt_format.ml[94,3599+62]..[94,3599+63])
                              Pexp_ident "s" (file_formats/cmt_format.ml[94,3599+62]..[94,3599+63])
                        ]
                <case>
                  pattern (file_formats/cmt_format.ml[95,3664+6]..[95,3664+17])
                    Ppat_construct "Interface" (file_formats/cmt_format.ml[95,3664+6]..[95,3664+15])
                    Some
                      []
                      pattern (file_formats/cmt_format.ml[95,3664+16]..[95,3664+17])
                        Ppat_var "s" (file_formats/cmt_format.ml[95,3664+16]..[95,3664+17])
                  expression (file_formats/cmt_format.ml[95,3664+21]..[95,3664+54])
                    Pexp_construct "Interface" (file_formats/cmt_format.ml[95,3664+21]..[95,3664+30])
                    Some
                      expression (file_formats/cmt_format.ml[95,3664+31]..[95,3664+54])
                        Pexp_apply
                        expression (file_formats/cmt_format.ml[95,3664+32]..[95,3664+46])
                          Pexp_field
                          expression (file_formats/cmt_format.ml[95,3664+32]..[95,3664+36])
                            Pexp_ident "cenv" (file_formats/cmt_format.ml[95,3664+32]..[95,3664+36])
                          "signature" (file_formats/cmt_format.ml[95,3664+37]..[95,3664+46])
                        [
                          <arg>
                          Nolabel
                            expression (file_formats/cmt_format.ml[95,3664+47]..[95,3664+51])
                              Pexp_ident "cenv" (file_formats/cmt_format.ml[95,3664+47]..[95,3664+51])
                          <arg>
                          Nolabel
                            expression (file_formats/cmt_format.ml[95,3664+52]..[95,3664+53])
                              Pexp_ident "s" (file_formats/cmt_format.ml[95,3664+52]..[95,3664+53])
                        ]
                <case>
                  pattern (file_formats/cmt_format.ml[96,3719+6]..[96,3719+14])
                    Ppat_construct "Packed" (file_formats/cmt_format.ml[96,3719+6]..[96,3719+12])
                    Some
                      []
                      pattern (file_formats/cmt_format.ml[96,3719+13]..[96,3719+14])
                        Ppat_any
                  expression (file_formats/cmt_format.ml[96,3719+18]..[96,3719+31])
                    Pexp_ident "binary_annots" (file_formats/cmt_format.ml[96,3719+18]..[96,3719+31])
                <case>
                  pattern (file_formats/cmt_format.ml[97,3751+6]..[97,3751+34])
                    Ppat_construct "Partial_implementation" (file_formats/cmt_format.ml[97,3751+6]..[97,3751+28])
                    Some
                      []
                      pattern (file_formats/cmt_format.ml[97,3751+29]..[97,3751+34])
                        Ppat_var "array" (file_formats/cmt_format.ml[97,3751+29]..[97,3751+34])
                  expression (file_formats/cmt_format.ml[98,3789+8]..[98,3789+59])
                    Pexp_construct "Partial_implementation" (file_formats/cmt_format.ml[98,3789+8]..[98,3789+30])
                    Some
                      expression (file_formats/cmt_format.ml[98,3789+31]..[98,3789+59])
                        Pexp_apply
                        expression (file_formats/cmt_format.ml[98,3789+32]..[98,3789+41])
                          Pexp_ident "Array.map" (file_formats/cmt_format.ml[98,3789+32]..[98,3789+41])
                        [
                          <arg>
                          Nolabel
                            expression (file_formats/cmt_format.ml[98,3789+42]..[98,3789+52])
                              Pexp_ident "clear_part" (file_formats/cmt_format.ml[98,3789+42]..[98,3789+52])
                          <arg>
                          Nolabel
                            expression (file_formats/cmt_format.ml[98,3789+53]..[98,3789+58])
                              Pexp_ident "array" (file_formats/cmt_format.ml[98,3789+53]..[98,3789+58])
                        ]
                <case>
                  pattern (file_formats/cmt_format.ml[99,3849+6]..[99,3849+29])
                    Ppat_construct "Partial_interface" (file_formats/cmt_format.ml[99,3849+6]..[99,3849+23])
                    Some
                      []
                      pattern (file_formats/cmt_format.ml[99,3849+24]..[99,3849+29])
                        Ppat_var "array" (file_formats/cmt_format.ml[99,3849+24]..[99,3849+29])
                  expression (file_formats/cmt_format.ml[100,3882+8]..[100,3882+54])
                    Pexp_construct "Partial_interface" (file_formats/cmt_format.ml[100,3882+8]..[100,3882+25])
                    Some
                      expression (file_formats/cmt_format.ml[100,3882+26]..[100,3882+54])
                        Pexp_apply
                        expression (file_formats/cmt_format.ml[100,3882+27]..[100,3882+36])
                          Pexp_ident "Array.map" (file_formats/cmt_format.ml[100,3882+27]..[100,3882+36])
                        [
                          <arg>
                          Nolabel
                            expression (file_formats/cmt_format.ml[100,3882+37]..[100,3882+47])
                              Pexp_ident "clear_part" (file_formats/cmt_format.ml[100,3882+37]..[100,3882+47])
                          <arg>
                          Nolabel
                            expression (file_formats/cmt_format.ml[100,3882+48]..[100,3882+53])
                              Pexp_ident "array" (file_formats/cmt_format.ml[100,3882+48]..[100,3882+53])
                        ]
              ]
            Some
              expression (file_formats/cmt_format.ml[102,3938+7]..[102,3938+20])
                Pexp_ident "binary_annots" (file_formats/cmt_format.ml[102,3938+7]..[102,3938+20])
    ]
  structure_item (file_formats/cmt_format.ml[104,3960+0]..[104,3960+24])
    Pstr_exception
    type_exception
      ptyext_constructor =
        extension_constructor (file_formats/cmt_format.ml[104,3960+0]..[104,3960+24])
          pext_name = "Error"
          pext_kind =
            Pext_decl
              [
                core_type (file_formats/cmt_format.ml[104,3960+19]..[104,3960+24])
                  Ptyp_constr "error" (file_formats/cmt_format.ml[104,3960+19]..[104,3960+24])
                  []
              ]
              None
  structure_item (file_formats/cmt_format.ml[106,3986+0]..[106,3986+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[106,3986+4]..[106,3986+13])
          Ppat_var "input_cmt" (file_formats/cmt_format.ml[106,3986+4]..[106,3986+13])
        expression (file_formats/cmt_format.ml[106,3986+14]..[106,3986+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/cmt_format.ml[106,3986+14]..[106,3986+16])
            Ppat_var "ic" (file_formats/cmt_format.ml[106,3986+14]..[106,3986+16])
          expression (file_formats/cmt_format.ml[106,3986+19]..[106,3986+47])
            Pexp_constraint
            expression (file_formats/cmt_format.ml[106,3986+20]..[106,3986+34])
              Pexp_apply
              expression (file_formats/cmt_format.ml[106,3986+20]..[106,3986+31])
                Pexp_ident "input_value" (file_formats/cmt_format.ml[106,3986+20]..[106,3986+31])
              [
                <arg>
                Nolabel
                  expression (file_formats/cmt_format.ml[106,3986+32]..[106,3986+34])
                    Pexp_ident "ic" (file_formats/cmt_format.ml[106,3986+32]..[106,3986+34])
              ]
            core_type (file_formats/cmt_format.ml[106,3986+37]..[106,3986+46])
              Ptyp_constr "cmt_infos" (file_formats/cmt_format.ml[106,3986+37]..[106,3986+46])
              []
    ]
  structure_item (file_formats/cmt_format.ml[108,4035+0]..[110,4103+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[108,4035+4]..[108,4035+14])
          Ppat_var "output_cmt" (file_formats/cmt_format.ml[108,4035+4]..[108,4035+14])
        expression (file_formats/cmt_format.ml[108,4035+15]..[110,4103+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/cmt_format.ml[108,4035+15]..[108,4035+17])
            Ppat_var "oc" (file_formats/cmt_format.ml[108,4035+15]..[108,4035+17])
          expression (file_formats/cmt_format.ml[108,4035+18]..[110,4103+35]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (file_formats/cmt_format.ml[108,4035+18]..[108,4035+21])
              Ppat_var "cmt" (file_formats/cmt_format.ml[108,4035+18]..[108,4035+21])
            expression (file_formats/cmt_format.ml[109,4059+2]..[110,4103+35])
              Pexp_sequence
              expression (file_formats/cmt_format.ml[109,4059+2]..[109,4059+42])
                Pexp_apply
                expression (file_formats/cmt_format.ml[109,4059+2]..[109,4059+15])
                  Pexp_ident "output_string" (file_formats/cmt_format.ml[109,4059+2]..[109,4059+15])
                [
                  <arg>
                  Nolabel
                    expression (file_formats/cmt_format.ml[109,4059+16]..[109,4059+18])
                      Pexp_ident "oc" (file_formats/cmt_format.ml[109,4059+16]..[109,4059+18])
                  <arg>
                  Nolabel
                    expression (file_formats/cmt_format.ml[109,4059+19]..[109,4059+42])
                      Pexp_ident "Config.cmt_magic_number" (file_formats/cmt_format.ml[109,4059+19]..[109,4059+42])
                ]
              expression (file_formats/cmt_format.ml[110,4103+2]..[110,4103+35])
                Pexp_apply
                expression (file_formats/cmt_format.ml[110,4103+2]..[110,4103+14])
                  Pexp_ident "output_value" (file_formats/cmt_format.ml[110,4103+2]..[110,4103+14])
                [
                  <arg>
                  Nolabel
                    expression (file_formats/cmt_format.ml[110,4103+15]..[110,4103+17])
                      Pexp_ident "oc" (file_formats/cmt_format.ml[110,4103+15]..[110,4103+17])
                  <arg>
                  Nolabel
                    expression (file_formats/cmt_format.ml[110,4103+18]..[110,4103+35])
                      Pexp_constraint
                      expression (file_formats/cmt_format.ml[110,4103+19]..[110,4103+22])
                        Pexp_ident "cmt" (file_formats/cmt_format.ml[110,4103+19]..[110,4103+22])
                      core_type (file_formats/cmt_format.ml[110,4103+25]..[110,4103+34])
                        Ptyp_constr "cmt_infos" (file_formats/cmt_format.ml[110,4103+25]..[110,4103+34])
                        []
                ]
    ]
  structure_item (file_formats/cmt_format.ml[112,4140+0]..[137,5022+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[112,4140+4]..[112,4140+8])
          Ppat_var "read" (file_formats/cmt_format.ml[112,4140+4]..[112,4140+8])
        expression (file_formats/cmt_format.ml[112,4140+9]..[137,5022+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/cmt_format.ml[112,4140+9]..[112,4140+17])
            Ppat_var "filename" (file_formats/cmt_format.ml[112,4140+9]..[112,4140+17])
          expression (file_formats/cmt_format.ml[114,4224+2]..[137,5022+5])
            Pexp_let Nonrec
            [
              <def>
                pattern (file_formats/cmt_format.ml[114,4224+6]..[114,4224+8])
                  Ppat_var "ic" (file_formats/cmt_format.ml[114,4224+6]..[114,4224+8])
                expression (file_formats/cmt_format.ml[114,4224+11]..[114,4224+31])
                  Pexp_apply
                  expression (file_formats/cmt_format.ml[114,4224+11]..[114,4224+22])
                    Pexp_ident "open_in_bin" (file_formats/cmt_format.ml[114,4224+11]..[114,4224+22])
                  [
                    <arg>
                    Nolabel
                      expression (file_formats/cmt_format.ml[114,4224+23]..[114,4224+31])
                        Pexp_ident "filename" (file_formats/cmt_format.ml[114,4224+23]..[114,4224+31])
                  ]
            ]
            expression (file_formats/cmt_format.ml[115,4259+2]..[137,5022+5])
              Pexp_apply
              expression (file_formats/cmt_format.ml[115,4259+2]..[115,4259+18])
                Pexp_ident "Misc.try_finally" (file_formats/cmt_format.ml[115,4259+2]..[115,4259+18])
              [
                <arg>
                Labelled "always"
                  expression (file_formats/cmt_format.ml[116,4278+12]..[116,4278+35])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (file_formats/cmt_format.ml[116,4278+17]..[116,4278+19])
                      Ppat_construct "()" (file_formats/cmt_format.ml[116,4278+17]..[116,4278+19])
                      None
                    expression (file_formats/cmt_format.ml[116,4278+23]..[116,4278+34])
                      Pexp_apply
                      expression (file_formats/cmt_format.ml[116,4278+23]..[116,4278+31])
                        Pexp_ident "close_in" (file_formats/cmt_format.ml[116,4278+23]..[116,4278+31])
                      [
                        <arg>
                        Nolabel
                          expression (file_formats/cmt_format.ml[116,4278+32]..[116,4278+34])
                            Pexp_ident "ic" (file_formats/cmt_format.ml[116,4278+32]..[116,4278+34])
                      ]
                <arg>
                Nolabel
                  expression (file_formats/cmt_format.ml[117,4314+4]..[137,5022+5])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (file_formats/cmt_format.ml[117,4314+9]..[117,4314+11])
                      Ppat_construct "()" (file_formats/cmt_format.ml[117,4314+9]..[117,4314+11])
                      None
                    expression (file_formats/cmt_format.ml[118,4329+7]..[136,5006+15])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (file_formats/cmt_format.ml[118,4329+11]..[118,4329+23])
                            Ppat_var "magic_number" (file_formats/cmt_format.ml[118,4329+11]..[118,4329+23])
                          expression (file_formats/cmt_format.ml[118,4329+26]..[118,4329+46])
                            Pexp_apply
                            expression (file_formats/cmt_format.ml[118,4329+26]..[118,4329+43])
                              Pexp_ident "read_magic_number" (file_formats/cmt_format.ml[118,4329+26]..[118,4329+43])
                            [
                              <arg>
                              Nolabel
                                expression (file_formats/cmt_format.ml[118,4329+44]..[118,4329+46])
                                  Pexp_ident "ic" (file_formats/cmt_format.ml[118,4329+44]..[118,4329+46])
                            ]
                      ]
                      expression (file_formats/cmt_format.ml[119,4379+7]..[136,5006+15])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (file_formats/cmt_format.ml[119,4379+11]..[119,4379+19])
                              Ppat_tuple
                              [
                                pattern (file_formats/cmt_format.ml[119,4379+11]..[119,4379+14])
                                  Ppat_var "cmi" (file_formats/cmt_format.ml[119,4379+11]..[119,4379+14])
                                pattern (file_formats/cmt_format.ml[119,4379+16]..[119,4379+19])
                                  Ppat_var "cmt" (file_formats/cmt_format.ml[119,4379+16]..[119,4379+19])
                              ]
                            expression (file_formats/cmt_format.ml[120,4401+9]..[134,4923+72])
                              Pexp_ifthenelse
                              expression (file_formats/cmt_format.ml[120,4401+12]..[120,4401+50])
                                Pexp_apply
                                expression (file_formats/cmt_format.ml[120,4401+25]..[120,4401+26])
                                  Pexp_ident "=" (file_formats/cmt_format.ml[120,4401+25]..[120,4401+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (file_formats/cmt_format.ml[120,4401+12]..[120,4401+24])
                                      Pexp_ident "magic_number" (file_formats/cmt_format.ml[120,4401+12]..[120,4401+24])
                                  <arg>
                                  Nolabel
                                    expression (file_formats/cmt_format.ml[120,4401+27]..[120,4401+50])
                                      Pexp_ident "Config.cmt_magic_number" (file_formats/cmt_format.ml[120,4401+27]..[120,4401+50])
                                ]
                              expression (file_formats/cmt_format.ml[121,4457+11]..[121,4457+36])
                                Pexp_tuple
                                [
                                  expression (file_formats/cmt_format.ml[121,4457+11]..[121,4457+15])
                                    Pexp_construct "None" (file_formats/cmt_format.ml[121,4457+11]..[121,4457+15])
                                    None
                                  expression (file_formats/cmt_format.ml[121,4457+17]..[121,4457+36])
                                    Pexp_construct "Some" (file_formats/cmt_format.ml[121,4457+17]..[121,4457+21])
                                    Some
                                      expression (file_formats/cmt_format.ml[121,4457+22]..[121,4457+36])
                                        Pexp_apply
                                        expression (file_formats/cmt_format.ml[121,4457+23]..[121,4457+32])
                                          Pexp_ident "input_cmt" (file_formats/cmt_format.ml[121,4457+23]..[121,4457+32])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (file_formats/cmt_format.ml[121,4457+33]..[121,4457+35])
                                              Pexp_ident "ic" (file_formats/cmt_format.ml[121,4457+33]..[121,4457+35])
                                        ]
                                ]
                              Some
                                expression (file_formats/cmt_format.ml[122,4494+14]..[134,4923+72])
                                  Pexp_ifthenelse
                                  expression (file_formats/cmt_format.ml[122,4494+17]..[122,4494+55])
                                    Pexp_apply
                                    expression (file_formats/cmt_format.ml[122,4494+30]..[122,4494+31])
                                      Pexp_ident "=" (file_formats/cmt_format.ml[122,4494+30]..[122,4494+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (file_formats/cmt_format.ml[122,4494+17]..[122,4494+29])
                                          Pexp_ident "magic_number" (file_formats/cmt_format.ml[122,4494+17]..[122,4494+29])
                                      <arg>
                                      Nolabel
                                        expression (file_formats/cmt_format.ml[122,4494+32]..[122,4494+55])
                                          Pexp_ident "Config.cmi_magic_number" (file_formats/cmt_format.ml[122,4494+32]..[122,4494+55])
                                    ]
                                  expression (file_formats/cmt_format.ml[123,4555+11]..[132,4884+24])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (file_formats/cmt_format.ml[123,4555+15]..[123,4555+18])
                                          Ppat_var "cmi" (file_formats/cmt_format.ml[123,4555+15]..[123,4555+18])
                                        expression (file_formats/cmt_format.ml[123,4555+21]..[123,4555+44])
                                          Pexp_apply
                                          expression (file_formats/cmt_format.ml[123,4555+21]..[123,4555+41])
                                            Pexp_ident "Cmi_format.input_cmi" (file_formats/cmt_format.ml[123,4555+21]..[123,4555+41])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (file_formats/cmt_format.ml[123,4555+42]..[123,4555+44])
                                                Pexp_ident "ic" (file_formats/cmt_format.ml[123,4555+42]..[123,4555+44])
                                          ]
                                    ]
                                    expression (file_formats/cmt_format.ml[124,4603+11]..[132,4884+24])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (file_formats/cmt_format.ml[124,4603+15]..[124,4603+18])
                                            Ppat_var "cmt" (file_formats/cmt_format.ml[124,4603+15]..[124,4603+18])
                                          expression (file_formats/cmt_format.ml[124,4603+21]..[130,4842+27])
                                            Pexp_try
                                            expression (file_formats/cmt_format.ml[125,4628+15]..[129,4817+24])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (file_formats/cmt_format.ml[125,4628+19]..[125,4628+31])
                                                    Ppat_var "magic_number" (file_formats/cmt_format.ml[125,4628+19]..[125,4628+31])
                                                  expression (file_formats/cmt_format.ml[125,4628+34]..[125,4628+54])
                                                    Pexp_apply
                                                    expression (file_formats/cmt_format.ml[125,4628+34]..[125,4628+51])
                                                      Pexp_ident "read_magic_number" (file_formats/cmt_format.ml[125,4628+34]..[125,4628+51])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (file_formats/cmt_format.ml[125,4628+52]..[125,4628+54])
                                                          Pexp_ident "ic" (file_formats/cmt_format.ml[125,4628+52]..[125,4628+54])
                                                    ]
                                              ]
                                              expression (file_formats/cmt_format.ml[126,4686+15]..[129,4817+24])
                                                Pexp_ifthenelse
                                                expression (file_formats/cmt_format.ml[126,4686+18]..[126,4686+56])
                                                  Pexp_apply
                                                  expression (file_formats/cmt_format.ml[126,4686+31]..[126,4686+32])
                                                    Pexp_ident "=" (file_formats/cmt_format.ml[126,4686+31]..[126,4686+32])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (file_formats/cmt_format.ml[126,4686+18]..[126,4686+30])
                                                        Pexp_ident "magic_number" (file_formats/cmt_format.ml[126,4686+18]..[126,4686+30])
                                                    <arg>
                                                    Nolabel
                                                      expression (file_formats/cmt_format.ml[126,4686+33]..[126,4686+56])
                                                        Pexp_ident "Config.cmt_magic_number" (file_formats/cmt_format.ml[126,4686+33]..[126,4686+56])
                                                  ]
                                                expression (file_formats/cmt_format.ml[127,4748+17]..[128,4791+25])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (file_formats/cmt_format.ml[127,4748+21]..[127,4748+24])
                                                        Ppat_var "cmt" (file_formats/cmt_format.ml[127,4748+21]..[127,4748+24])
                                                      expression (file_formats/cmt_format.ml[127,4748+27]..[127,4748+39])
                                                        Pexp_apply
                                                        expression (file_formats/cmt_format.ml[127,4748+27]..[127,4748+36])
                                                          Pexp_ident "input_cmt" (file_formats/cmt_format.ml[127,4748+27]..[127,4748+36])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (file_formats/cmt_format.ml[127,4748+37]..[127,4748+39])
                                                              Pexp_ident "ic" (file_formats/cmt_format.ml[127,4748+37]..[127,4748+39])
                                                        ]
                                                  ]
                                                  expression (file_formats/cmt_format.ml[128,4791+17]..[128,4791+25])
                                                    Pexp_construct "Some" (file_formats/cmt_format.ml[128,4791+17]..[128,4791+21])
                                                    Some
                                                      expression (file_formats/cmt_format.ml[128,4791+22]..[128,4791+25])
                                                        Pexp_ident "cmt" (file_formats/cmt_format.ml[128,4791+22]..[128,4791+25])
                                                Some
                                                  expression (file_formats/cmt_format.ml[129,4817+20]..[129,4817+24])
                                                    Pexp_construct "None" (file_formats/cmt_format.ml[129,4817+20]..[129,4817+24])
                                                    None
                                            [
                                              <case>
                                                pattern (file_formats/cmt_format.ml[130,4842+18]..[130,4842+19])
                                                  Ppat_any
                                                expression (file_formats/cmt_format.ml[130,4842+23]..[130,4842+27])
                                                  Pexp_construct "None" (file_formats/cmt_format.ml[130,4842+23]..[130,4842+27])
                                                  None
                                            ]
                                      ]
                                      expression (file_formats/cmt_format.ml[132,4884+11]..[132,4884+24])
                                        Pexp_tuple
                                        [
                                          expression (file_formats/cmt_format.ml[132,4884+11]..[132,4884+19])
                                            Pexp_construct "Some" (file_formats/cmt_format.ml[132,4884+11]..[132,4884+15])
                                            Some
                                              expression (file_formats/cmt_format.ml[132,4884+16]..[132,4884+19])
                                                Pexp_ident "cmi" (file_formats/cmt_format.ml[132,4884+16]..[132,4884+19])
                                          expression (file_formats/cmt_format.ml[132,4884+21]..[132,4884+24])
                                            Pexp_ident "cmt" (file_formats/cmt_format.ml[132,4884+21]..[132,4884+24])
                                        ]
                                  Some
                                    expression (file_formats/cmt_format.ml[134,4923+11]..[134,4923+72])
                                      Pexp_apply
                                      expression (file_formats/cmt_format.ml[134,4923+11]..[134,4923+16])
                                        Pexp_ident "raise" (file_formats/cmt_format.ml[134,4923+11]..[134,4923+16])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (file_formats/cmt_format.ml[134,4923+16]..[134,4923+72])
                                            Pexp_construct "Cmi_format.Error" (file_formats/cmt_format.ml[134,4923+17]..[134,4923+33])
                                            Some
                                              expression (file_formats/cmt_format.ml[134,4923+33]..[134,4923+71])
                                                Pexp_construct "Cmi_format.Not_an_interface" (file_formats/cmt_format.ml[134,4923+34]..[134,4923+61])
                                                Some
                                                  expression (file_formats/cmt_format.ml[134,4923+62]..[134,4923+70])
                                                    Pexp_ident "filename" (file_formats/cmt_format.ml[134,4923+62]..[134,4923+70])
                                      ]
                        ]
                        expression (file_formats/cmt_format.ml[136,5006+7]..[136,5006+15])
                          Pexp_tuple
                          [
                            expression (file_formats/cmt_format.ml[136,5006+7]..[136,5006+10])
                              Pexp_ident "cmi" (file_formats/cmt_format.ml[136,5006+7]..[136,5006+10])
                            expression (file_formats/cmt_format.ml[136,5006+12]..[136,5006+15])
                              Pexp_ident "cmt" (file_formats/cmt_format.ml[136,5006+12]..[136,5006+15])
                          ]
              ]
    ]
  structure_item (file_formats/cmt_format.ml[139,5029+0]..[142,5138+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[139,5029+4]..[139,5029+12])
          Ppat_var "read_cmt" (file_formats/cmt_format.ml[139,5029+4]..[139,5029+12])
        expression (file_formats/cmt_format.ml[139,5029+13]..[142,5138+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/cmt_format.ml[139,5029+13]..[139,5029+21])
            Ppat_var "filename" (file_formats/cmt_format.ml[139,5029+13]..[139,5029+21])
          expression (file_formats/cmt_format.ml[140,5053+2]..[142,5138+24])
            Pexp_match
            expression (file_formats/cmt_format.ml[140,5053+8]..[140,5053+21])
              Pexp_apply
              expression (file_formats/cmt_format.ml[140,5053+8]..[140,5053+12])
                Pexp_ident "read" (file_formats/cmt_format.ml[140,5053+8]..[140,5053+12])
              [
                <arg>
                Nolabel
                  expression (file_formats/cmt_format.ml[140,5053+13]..[140,5053+21])
                    Pexp_ident "filename" (file_formats/cmt_format.ml[140,5053+13]..[140,5053+21])
              ]
            [
              <case>
                pattern (file_formats/cmt_format.ml[141,5080+6]..[141,5080+13])
                  Ppat_tuple
                  [
                    pattern (file_formats/cmt_format.ml[141,5080+6]..[141,5080+7])
                      Ppat_any
                    pattern (file_formats/cmt_format.ml[141,5080+9]..[141,5080+13])
                      Ppat_construct "None" (file_formats/cmt_format.ml[141,5080+9]..[141,5080+13])
                      None
                  ]
                expression (file_formats/cmt_format.ml[141,5080+17]..[141,5080+57])
                  Pexp_apply
                  expression (file_formats/cmt_format.ml[141,5080+17]..[141,5080+22])
                    Pexp_ident "raise" (file_formats/cmt_format.ml[141,5080+17]..[141,5080+22])
                  [
                    <arg>
                    Nolabel
                      expression (file_formats/cmt_format.ml[141,5080+23]..[141,5080+57])
                        Pexp_construct "Error" (file_formats/cmt_format.ml[141,5080+24]..[141,5080+29])
                        Some
                          expression (file_formats/cmt_format.ml[141,5080+30]..[141,5080+56])
                            Pexp_construct "Not_a_typedtree" (file_formats/cmt_format.ml[141,5080+31]..[141,5080+46])
                            Some
                              expression (file_formats/cmt_format.ml[141,5080+47]..[141,5080+55])
                                Pexp_ident "filename" (file_formats/cmt_format.ml[141,5080+47]..[141,5080+55])
                  ]
              <case>
                pattern (file_formats/cmt_format.ml[142,5138+6]..[142,5138+17])
                  Ppat_tuple
                  [
                    pattern (file_formats/cmt_format.ml[142,5138+6]..[142,5138+7])
                      Ppat_any
                    pattern (file_formats/cmt_format.ml[142,5138+9]..[142,5138+17])
                      Ppat_construct "Some" (file_formats/cmt_format.ml[142,5138+9]..[142,5138+13])
                      Some
                        []
                        pattern (file_formats/cmt_format.ml[142,5138+14]..[142,5138+17])
                          Ppat_var "cmt" (file_formats/cmt_format.ml[142,5138+14]..[142,5138+17])
                  ]
                expression (file_formats/cmt_format.ml[142,5138+21]..[142,5138+24])
                  Pexp_ident "cmt" (file_formats/cmt_format.ml[142,5138+21]..[142,5138+24])
            ]
    ]
  structure_item (file_formats/cmt_format.ml[144,5164+0]..[148,5304+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[144,5164+4]..[144,5164+12])
          Ppat_var "read_cmi" (file_formats/cmt_format.ml[144,5164+4]..[144,5164+12])
        expression (file_formats/cmt_format.ml[144,5164+13]..[148,5304+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/cmt_format.ml[144,5164+13]..[144,5164+21])
            Ppat_var "filename" (file_formats/cmt_format.ml[144,5164+13]..[144,5164+21])
          expression (file_formats/cmt_format.ml[145,5188+2]..[148,5304+24])
            Pexp_match
            expression (file_formats/cmt_format.ml[145,5188+8]..[145,5188+21])
              Pexp_apply
              expression (file_formats/cmt_format.ml[145,5188+8]..[145,5188+12])
                Pexp_ident "read" (file_formats/cmt_format.ml[145,5188+8]..[145,5188+12])
              [
                <arg>
                Nolabel
                  expression (file_formats/cmt_format.ml[145,5188+13]..[145,5188+21])
                    Pexp_ident "filename" (file_formats/cmt_format.ml[145,5188+13]..[145,5188+21])
              ]
            [
              <case>
                pattern (file_formats/cmt_format.ml[146,5215+6]..[146,5215+13])
                  Ppat_tuple
                  [
                    pattern (file_formats/cmt_format.ml[146,5215+6]..[146,5215+10])
                      Ppat_construct "None" (file_formats/cmt_format.ml[146,5215+6]..[146,5215+10])
                      None
                    pattern (file_formats/cmt_format.ml[146,5215+12]..[146,5215+13])
                      Ppat_any
                  ]
                expression (file_formats/cmt_format.ml[147,5232+8]..[147,5232+71])
                  Pexp_apply
                  expression (file_formats/cmt_format.ml[147,5232+8]..[147,5232+13])
                    Pexp_ident "raise" (file_formats/cmt_format.ml[147,5232+8]..[147,5232+13])
                  [
                    <arg>
                    Nolabel
                      expression (file_formats/cmt_format.ml[147,5232+14]..[147,5232+71])
                        Pexp_construct "Cmi_format.Error" (file_formats/cmt_format.ml[147,5232+15]..[147,5232+31])
                        Some
                          expression (file_formats/cmt_format.ml[147,5232+32]..[147,5232+70])
                            Pexp_construct "Cmi_format.Not_an_interface" (file_formats/cmt_format.ml[147,5232+33]..[147,5232+60])
                            Some
                              expression (file_formats/cmt_format.ml[147,5232+61]..[147,5232+69])
                                Pexp_ident "filename" (file_formats/cmt_format.ml[147,5232+61]..[147,5232+69])
                  ]
              <case>
                pattern (file_formats/cmt_format.ml[148,5304+6]..[148,5304+17])
                  Ppat_tuple
                  [
                    pattern (file_formats/cmt_format.ml[148,5304+6]..[148,5304+14])
                      Ppat_construct "Some" (file_formats/cmt_format.ml[148,5304+6]..[148,5304+10])
                      Some
                        []
                        pattern (file_formats/cmt_format.ml[148,5304+11]..[148,5304+14])
                          Ppat_var "cmi" (file_formats/cmt_format.ml[148,5304+11]..[148,5304+14])
                    pattern (file_formats/cmt_format.ml[148,5304+16]..[148,5304+17])
                      Ppat_any
                  ]
                expression (file_formats/cmt_format.ml[148,5304+21]..[148,5304+24])
                  Pexp_ident "cmi" (file_formats/cmt_format.ml[148,5304+21]..[148,5304+24])
            ]
    ]
  structure_item (file_formats/cmt_format.ml[150,5330+0]..[150,5330+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[150,5330+4]..[150,5330+15])
          Ppat_var "saved_types" (file_formats/cmt_format.ml[150,5330+4]..[150,5330+15])
        expression (file_formats/cmt_format.ml[150,5330+18]..[150,5330+24])
          Pexp_apply
          expression (file_formats/cmt_format.ml[150,5330+18]..[150,5330+21])
            Pexp_ident "ref" (file_formats/cmt_format.ml[150,5330+18]..[150,5330+21])
          [
            <arg>
            Nolabel
              expression (file_formats/cmt_format.ml[150,5330+22]..[150,5330+24])
                Pexp_construct "[]" (file_formats/cmt_format.ml[150,5330+22]..[150,5330+24])
                None
          ]
    ]
  structure_item (file_formats/cmt_format.ml[151,5355+0]..[151,5355+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[151,5355+4]..[151,5355+14])
          Ppat_var "value_deps" (file_formats/cmt_format.ml[151,5355+4]..[151,5355+14])
        expression (file_formats/cmt_format.ml[151,5355+17]..[151,5355+23])
          Pexp_apply
          expression (file_formats/cmt_format.ml[151,5355+17]..[151,5355+20])
            Pexp_ident "ref" (file_formats/cmt_format.ml[151,5355+17]..[151,5355+20])
          [
            <arg>
            Nolabel
              expression (file_formats/cmt_format.ml[151,5355+21]..[151,5355+23])
                Pexp_construct "[]" (file_formats/cmt_format.ml[151,5355+21]..[151,5355+23])
                None
          ]
    ]
  structure_item (file_formats/cmt_format.ml[153,5380+0]..[155,5416+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[153,5380+4]..[153,5380+9])
          Ppat_var "clear" (file_formats/cmt_format.ml[153,5380+4]..[153,5380+9])
        expression (file_formats/cmt_format.ml[153,5380+10]..[155,5416+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/cmt_format.ml[153,5380+10]..[153,5380+12])
            Ppat_construct "()" (file_formats/cmt_format.ml[153,5380+10]..[153,5380+12])
            None
          expression (file_formats/cmt_format.ml[154,5395+2]..[155,5416+18])
            Pexp_sequence
            expression (file_formats/cmt_format.ml[154,5395+2]..[154,5395+19])
              Pexp_apply
              expression (file_formats/cmt_format.ml[154,5395+14]..[154,5395+16])
                Pexp_ident ":=" (file_formats/cmt_format.ml[154,5395+14]..[154,5395+16])
              [
                <arg>
                Nolabel
                  expression (file_formats/cmt_format.ml[154,5395+2]..[154,5395+13])
                    Pexp_ident "saved_types" (file_formats/cmt_format.ml[154,5395+2]..[154,5395+13])
                <arg>
                Nolabel
                  expression (file_formats/cmt_format.ml[154,5395+17]..[154,5395+19])
                    Pexp_construct "[]" (file_formats/cmt_format.ml[154,5395+17]..[154,5395+19])
                    None
              ]
            expression (file_formats/cmt_format.ml[155,5416+2]..[155,5416+18])
              Pexp_apply
              expression (file_formats/cmt_format.ml[155,5416+13]..[155,5416+15])
                Pexp_ident ":=" (file_formats/cmt_format.ml[155,5416+13]..[155,5416+15])
              [
                <arg>
                Nolabel
                  expression (file_formats/cmt_format.ml[155,5416+2]..[155,5416+12])
                    Pexp_ident "value_deps" (file_formats/cmt_format.ml[155,5416+2]..[155,5416+12])
                <arg>
                Nolabel
                  expression (file_formats/cmt_format.ml[155,5416+16]..[155,5416+18])
                    Pexp_construct "[]" (file_formats/cmt_format.ml[155,5416+16]..[155,5416+18])
                    None
              ]
    ]
  structure_item (file_formats/cmt_format.ml[157,5436+0]..[157,5436+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[157,5436+4]..[157,5436+18])
          Ppat_var "add_saved_type" (file_formats/cmt_format.ml[157,5436+4]..[157,5436+18])
        expression (file_formats/cmt_format.ml[157,5436+19]..[157,5436+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/cmt_format.ml[157,5436+19]..[157,5436+20])
            Ppat_var "b" (file_formats/cmt_format.ml[157,5436+19]..[157,5436+20])
          expression (file_formats/cmt_format.ml[157,5436+23]..[157,5436+55])
            Pexp_apply
            expression (file_formats/cmt_format.ml[157,5436+35]..[157,5436+37])
              Pexp_ident ":=" (file_formats/cmt_format.ml[157,5436+35]..[157,5436+37])
            [
              <arg>
              Nolabel
                expression (file_formats/cmt_format.ml[157,5436+23]..[157,5436+34])
                  Pexp_ident "saved_types" (file_formats/cmt_format.ml[157,5436+23]..[157,5436+34])
              <arg>
              Nolabel
                expression (file_formats/cmt_format.ml[157,5436+38]..[157,5436+55])
                  Pexp_construct "::" (file_formats/cmt_format.ml[157,5436+40]..[157,5436+42])
                  Some
                    expression (file_formats/cmt_format.ml[157,5436+38]..[157,5436+55]) ghost
                      Pexp_tuple
                      [
                        expression (file_formats/cmt_format.ml[157,5436+38]..[157,5436+39])
                          Pexp_ident "b" (file_formats/cmt_format.ml[157,5436+38]..[157,5436+39])
                        expression (file_formats/cmt_format.ml[157,5436+43]..[157,5436+55])
                          Pexp_apply
                          expression (file_formats/cmt_format.ml[157,5436+43]..[157,5436+44])
                            Pexp_ident "!" (file_formats/cmt_format.ml[157,5436+43]..[157,5436+44])
                          [
                            <arg>
                            Nolabel
                              expression (file_formats/cmt_format.ml[157,5436+44]..[157,5436+55])
                                Pexp_ident "saved_types" (file_formats/cmt_format.ml[157,5436+44]..[157,5436+55])
                          ]
                      ]
            ]
    ]
  structure_item (file_formats/cmt_format.ml[158,5492+0]..[158,5492+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[158,5492+4]..[158,5492+19])
          Ppat_var "get_saved_types" (file_formats/cmt_format.ml[158,5492+4]..[158,5492+19])
        expression (file_formats/cmt_format.ml[158,5492+20]..[158,5492+37]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/cmt_format.ml[158,5492+20]..[158,5492+22])
            Ppat_construct "()" (file_formats/cmt_format.ml[158,5492+20]..[158,5492+22])
            None
          expression (file_formats/cmt_format.ml[158,5492+25]..[158,5492+37])
            Pexp_apply
            expression (file_formats/cmt_format.ml[158,5492+25]..[158,5492+26])
              Pexp_ident "!" (file_formats/cmt_format.ml[158,5492+25]..[158,5492+26])
            [
              <arg>
              Nolabel
                expression (file_formats/cmt_format.ml[158,5492+26]..[158,5492+37])
                  Pexp_ident "saved_types" (file_formats/cmt_format.ml[158,5492+26]..[158,5492+37])
            ]
    ]
  structure_item (file_formats/cmt_format.ml[159,5530+0]..[159,5530+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[159,5530+4]..[159,5530+19])
          Ppat_var "set_saved_types" (file_formats/cmt_format.ml[159,5530+4]..[159,5530+19])
        expression (file_formats/cmt_format.ml[159,5530+20]..[159,5530+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/cmt_format.ml[159,5530+20]..[159,5530+21])
            Ppat_var "l" (file_formats/cmt_format.ml[159,5530+20]..[159,5530+21])
          expression (file_formats/cmt_format.ml[159,5530+24]..[159,5530+40])
            Pexp_apply
            expression (file_formats/cmt_format.ml[159,5530+36]..[159,5530+38])
              Pexp_ident ":=" (file_formats/cmt_format.ml[159,5530+36]..[159,5530+38])
            [
              <arg>
              Nolabel
                expression (file_formats/cmt_format.ml[159,5530+24]..[159,5530+35])
                  Pexp_ident "saved_types" (file_formats/cmt_format.ml[159,5530+24]..[159,5530+35])
              <arg>
              Nolabel
                expression (file_formats/cmt_format.ml[159,5530+39]..[159,5530+40])
                  Pexp_ident "l" (file_formats/cmt_format.ml[159,5530+39]..[159,5530+40])
            ]
    ]
  structure_item (file_formats/cmt_format.ml[161,5572+0]..[163,5659+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[161,5572+4]..[161,5572+27])
          Ppat_var "record_value_dependency" (file_formats/cmt_format.ml[161,5572+4]..[161,5572+27])
        expression (file_formats/cmt_format.ml[161,5572+28]..[163,5659+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/cmt_format.ml[161,5572+28]..[161,5572+31])
            Ppat_var "vd1" (file_formats/cmt_format.ml[161,5572+28]..[161,5572+31])
          expression (file_formats/cmt_format.ml[161,5572+32]..[163,5659+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (file_formats/cmt_format.ml[161,5572+32]..[161,5572+35])
              Ppat_var "vd2" (file_formats/cmt_format.ml[161,5572+32]..[161,5572+35])
            expression (file_formats/cmt_format.ml[162,5610+2]..[163,5659+43])
              Pexp_ifthenelse
              expression (file_formats/cmt_format.ml[162,5610+5]..[162,5610+43])
                Pexp_apply
                expression (file_formats/cmt_format.ml[162,5610+23]..[162,5610+25])
                  Pexp_ident "<>" (file_formats/cmt_format.ml[162,5610+23]..[162,5610+25])
                [
                  <arg>
                  Nolabel
                    expression (file_formats/cmt_format.ml[162,5610+5]..[162,5610+22])
                      Pexp_field
                      expression (file_formats/cmt_format.ml[162,5610+5]..[162,5610+8])
                        Pexp_ident "vd1" (file_formats/cmt_format.ml[162,5610+5]..[162,5610+8])
                      "Types.val_loc" (file_formats/cmt_format.ml[162,5610+9]..[162,5610+22])
                  <arg>
                  Nolabel
                    expression (file_formats/cmt_format.ml[162,5610+26]..[162,5610+43])
                      Pexp_field
                      expression (file_formats/cmt_format.ml[162,5610+26]..[162,5610+29])
                        Pexp_ident "vd2" (file_formats/cmt_format.ml[162,5610+26]..[162,5610+29])
                      "Types.val_loc" (file_formats/cmt_format.ml[162,5610+30]..[162,5610+43])
                ]
              expression (file_formats/cmt_format.ml[163,5659+4]..[163,5659+43])
                Pexp_apply
                expression (file_formats/cmt_format.ml[163,5659+15]..[163,5659+17])
                  Pexp_ident ":=" (file_formats/cmt_format.ml[163,5659+15]..[163,5659+17])
                [
                  <arg>
                  Nolabel
                    expression (file_formats/cmt_format.ml[163,5659+4]..[163,5659+14])
                      Pexp_ident "value_deps" (file_formats/cmt_format.ml[163,5659+4]..[163,5659+14])
                  <arg>
                  Nolabel
                    expression (file_formats/cmt_format.ml[163,5659+18]..[163,5659+43])
                      Pexp_construct "::" (file_formats/cmt_format.ml[163,5659+29]..[163,5659+31])
                      Some
                        expression (file_formats/cmt_format.ml[163,5659+18]..[163,5659+43]) ghost
                          Pexp_tuple
                          [
                            expression (file_formats/cmt_format.ml[163,5659+18]..[163,5659+28])
                              Pexp_tuple
                              [
                                expression (file_formats/cmt_format.ml[163,5659+19]..[163,5659+22])
                                  Pexp_ident "vd1" (file_formats/cmt_format.ml[163,5659+19]..[163,5659+22])
                                expression (file_formats/cmt_format.ml[163,5659+24]..[163,5659+27])
                                  Pexp_ident "vd2" (file_formats/cmt_format.ml[163,5659+24]..[163,5659+27])
                              ]
                            expression (file_formats/cmt_format.ml[163,5659+32]..[163,5659+43])
                              Pexp_apply
                              expression (file_formats/cmt_format.ml[163,5659+32]..[163,5659+33])
                                Pexp_ident "!" (file_formats/cmt_format.ml[163,5659+32]..[163,5659+33])
                              [
                                <arg>
                                Nolabel
                                  expression (file_formats/cmt_format.ml[163,5659+33]..[163,5659+43])
                                    Pexp_ident "value_deps" (file_formats/cmt_format.ml[163,5659+33]..[163,5659+43])
                              ]
                          ]
                ]
              None
    ]
  structure_item (file_formats/cmt_format.ml[165,5704+0]..[194,6937+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (file_formats/cmt_format.ml[165,5704+4]..[165,5704+12])
          Ppat_var "save_cmt" (file_formats/cmt_format.ml[165,5704+4]..[165,5704+12])
        expression (file_formats/cmt_format.ml[165,5704+13]..[194,6937+10]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (file_formats/cmt_format.ml[165,5704+13]..[165,5704+21])
            Ppat_var "filename" (file_formats/cmt_format.ml[165,5704+13]..[165,5704+21])
          expression (file_formats/cmt_format.ml[165,5704+22]..[194,6937+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (file_formats/cmt_format.ml[165,5704+22]..[165,5704+29])
              Ppat_var "modname" (file_formats/cmt_format.ml[165,5704+22]..[165,5704+29])
            expression (file_formats/cmt_format.ml[165,5704+30]..[194,6937+10]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (file_formats/cmt_format.ml[165,5704+30]..[165,5704+43])
                Ppat_var "binary_annots" (file_formats/cmt_format.ml[165,5704+30]..[165,5704+43])
              expression (file_formats/cmt_format.ml[165,5704+44]..[194,6937+10]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (file_formats/cmt_format.ml[165,5704+44]..[165,5704+54])
                  Ppat_var "sourcefile" (file_formats/cmt_format.ml[165,5704+44]..[165,5704+54])
                expression (file_formats/cmt_format.ml[165,5704+55]..[194,6937+10]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (file_formats/cmt_format.ml[165,5704+55]..[165,5704+66])
                    Ppat_var "initial_env" (file_formats/cmt_format.ml[165,5704+55]..[165,5704+66])
                  expression (file_formats/cmt_format.ml[165,5704+67]..[194,6937+10]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (file_formats/cmt_format.ml[165,5704+67]..[165,5704+70])
                      Ppat_var "cmi" (file_formats/cmt_format.ml[165,5704+67]..[165,5704+70])
                    expression (file_formats/cmt_format.ml[166,5777+2]..[194,6937+10])
                      Pexp_sequence
                      expression (file_formats/cmt_format.ml[166,5777+2]..[193,6930+5])
                        Pexp_ifthenelse
                        expression (file_formats/cmt_format.ml[166,5777+5]..[166,5777+60])
                          Pexp_apply
                          expression (file_formats/cmt_format.ml[166,5777+33]..[166,5777+35])
                            Pexp_ident "&&" (file_formats/cmt_format.ml[166,5777+33]..[166,5777+35])
                          [
                            <arg>
                            Nolabel
                              expression (file_formats/cmt_format.ml[166,5777+5]..[166,5777+32])
                                Pexp_apply
                                expression (file_formats/cmt_format.ml[166,5777+5]..[166,5777+6])
                                  Pexp_ident "!" (file_formats/cmt_format.ml[166,5777+5]..[166,5777+6])
                                [
                                  <arg>
                                  Nolabel
                                    expression (file_formats/cmt_format.ml[166,5777+6]..[166,5777+32])
                                      Pexp_ident "Clflags.binary_annotations" (file_formats/cmt_format.ml[166,5777+6]..[166,5777+32])
                                ]
                            <arg>
                            Nolabel
                              expression (file_formats/cmt_format.ml[166,5777+36]..[166,5777+60])
                                Pexp_apply
                                expression (file_formats/cmt_format.ml[166,5777+36]..[166,5777+39])
                                  Pexp_ident "not" (file_formats/cmt_format.ml[166,5777+36]..[166,5777+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (file_formats/cmt_format.ml[166,5777+40]..[166,5777+60])
                                      Pexp_apply
                                      expression (file_formats/cmt_format.ml[166,5777+40]..[166,5777+41])
                                        Pexp_ident "!" (file_formats/cmt_format.ml[166,5777+40]..[166,5777+41])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (file_formats/cmt_format.ml[166,5777+41]..[166,5777+60])
                                            Pexp_ident "Clflags.print_types" (file_formats/cmt_format.ml[166,5777+41]..[166,5777+60])
                                      ]
                                ]
                          ]
                        expression (file_formats/cmt_format.ml[166,5777+66]..[193,6930+5])
                          Pexp_apply
                          expression (file_formats/cmt_format.ml[167,5849+4]..[167,5849+37])
                            Pexp_ident "Misc.output_to_file_via_temporary" (file_formats/cmt_format.ml[167,5849+4]..[167,5849+37])
                          [
                            <arg>
                            Labelled "mode"
                              expression (file_formats/cmt_format.ml[168,5887+13]..[168,5887+26])
                                Pexp_construct "::" (file_formats/cmt_format.ml[168,5887+14]..[168,5887+26]) ghost
                                Some
                                  expression (file_formats/cmt_format.ml[168,5887+14]..[168,5887+26]) ghost
                                    Pexp_tuple
                                    [
                                      expression (file_formats/cmt_format.ml[168,5887+14]..[168,5887+25])
                                        Pexp_construct "Open_binary" (file_formats/cmt_format.ml[168,5887+14]..[168,5887+25])
                                        None
                                      expression (file_formats/cmt_format.ml[168,5887+25]..[168,5887+26]) ghost
                                        Pexp_construct "[]" (file_formats/cmt_format.ml[168,5887+25]..[168,5887+26]) ghost
                                        None
                                    ]
                            <arg>
                            Nolabel
                              expression (file_formats/cmt_format.ml[168,5887+27]..[168,5887+35])
                                Pexp_ident "filename" (file_formats/cmt_format.ml[168,5887+27]..[168,5887+35])
                            <arg>
                            Nolabel
                              expression (file_formats/cmt_format.ml[169,5923+7]..[192,6902+27])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (file_formats/cmt_format.ml[169,5923+12]..[169,5923+26])
                                  Ppat_var "temp_file_name" (file_formats/cmt_format.ml[169,5923+12]..[169,5923+26])
                                expression (file_formats/cmt_format.ml[169,5923+27]..[192,6902+26]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (file_formats/cmt_format.ml[169,5923+27]..[169,5923+29])
                                    Ppat_var "oc" (file_formats/cmt_format.ml[169,5923+27]..[169,5923+29])
                                  expression (file_formats/cmt_format.ml[170,5956+9]..[192,6902+26])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (file_formats/cmt_format.ml[170,5956+13]..[170,5956+21])
                                          Ppat_var "this_crc" (file_formats/cmt_format.ml[170,5956+13]..[170,5956+21])
                                        expression (file_formats/cmt_format.ml[171,5980+11]..[173,6032+64])
                                          Pexp_match
                                          expression (file_formats/cmt_format.ml[171,5980+17]..[171,5980+20])
                                            Pexp_ident "cmi" (file_formats/cmt_format.ml[171,5980+17]..[171,5980+20])
                                          [
                                            <case>
                                              pattern (file_formats/cmt_format.ml[172,6006+13]..[172,6006+17])
                                                Ppat_construct "None" (file_formats/cmt_format.ml[172,6006+13]..[172,6006+17])
                                                None
                                              expression (file_formats/cmt_format.ml[172,6006+21]..[172,6006+25])
                                                Pexp_construct "None" (file_formats/cmt_format.ml[172,6006+21]..[172,6006+25])
                                                None
                                            <case>
                                              pattern (file_formats/cmt_format.ml[173,6032+13]..[173,6032+21])
                                                Ppat_construct "Some" (file_formats/cmt_format.ml[173,6032+13]..[173,6032+17])
                                                Some
                                                  []
                                                  pattern (file_formats/cmt_format.ml[173,6032+18]..[173,6032+21])
                                                    Ppat_var "cmi" (file_formats/cmt_format.ml[173,6032+18]..[173,6032+21])
                                              expression (file_formats/cmt_format.ml[173,6032+25]..[173,6032+64])
                                                Pexp_construct "Some" (file_formats/cmt_format.ml[173,6032+25]..[173,6032+29])
                                                Some
                                                  expression (file_formats/cmt_format.ml[173,6032+30]..[173,6032+64])
                                                    Pexp_apply
                                                    expression (file_formats/cmt_format.ml[173,6032+31]..[173,6032+41])
                                                      Pexp_ident "output_cmi" (file_formats/cmt_format.ml[173,6032+31]..[173,6032+41])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (file_formats/cmt_format.ml[173,6032+42]..[173,6032+56])
                                                          Pexp_ident "temp_file_name" (file_formats/cmt_format.ml[173,6032+42]..[173,6032+56])
                                                      <arg>
                                                      Nolabel
                                                        expression (file_formats/cmt_format.ml[173,6032+57]..[173,6032+59])
                                                          Pexp_ident "oc" (file_formats/cmt_format.ml[173,6032+57]..[173,6032+59])
                                                      <arg>
                                                      Nolabel
                                                        expression (file_formats/cmt_format.ml[173,6032+60]..[173,6032+63])
                                                          Pexp_ident "cmi" (file_formats/cmt_format.ml[173,6032+60]..[173,6032+63])
                                                    ]
                                          ]
                                    ]
                                    expression (file_formats/cmt_format.ml[175,6109+9]..[192,6902+26])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (file_formats/cmt_format.ml[175,6109+13]..[175,6109+26])
                                            Ppat_var "source_digest" (file_formats/cmt_format.ml[175,6109+13]..[175,6109+26])
                                          expression (file_formats/cmt_format.ml[175,6109+29]..[175,6109+62])
                                            Pexp_apply
                                            expression (file_formats/cmt_format.ml[175,6109+29]..[175,6109+39])
                                              Pexp_ident "Option.map" (file_formats/cmt_format.ml[175,6109+29]..[175,6109+39])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (file_formats/cmt_format.ml[175,6109+40]..[175,6109+51])
                                                  Pexp_ident "Digest.file" (file_formats/cmt_format.ml[175,6109+40]..[175,6109+51])
                                              <arg>
                                              Nolabel
                                                expression (file_formats/cmt_format.ml[175,6109+52]..[175,6109+62])
                                                  Pexp_ident "sourcefile" (file_formats/cmt_format.ml[175,6109+52]..[175,6109+62])
                                            ]
                                      ]
                                      expression (file_formats/cmt_format.ml[176,6175+9]..[192,6902+26])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (file_formats/cmt_format.ml[176,6175+13]..[176,6175+16])
                                              Ppat_var "cmt" (file_formats/cmt_format.ml[176,6175+13]..[176,6175+16])
                                            expression (file_formats/cmt_format.ml[176,6175+19]..[191,6888+10])
                                              Pexp_record
                                              [
                                                "cmt_modname" (file_formats/cmt_format.ml[177,6196+11]..[177,6196+22])
                                                  expression (file_formats/cmt_format.ml[177,6196+25]..[177,6196+32])
                                                    Pexp_ident "modname" (file_formats/cmt_format.ml[177,6196+25]..[177,6196+32])
                                                "cmt_annots" (file_formats/cmt_format.ml[178,6230+11]..[178,6230+21])
                                                  expression (file_formats/cmt_format.ml[178,6230+24]..[178,6230+47])
                                                    Pexp_apply
                                                    expression (file_formats/cmt_format.ml[178,6230+24]..[178,6230+33])
                                                      Pexp_ident "clear_env" (file_formats/cmt_format.ml[178,6230+24]..[178,6230+33])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (file_formats/cmt_format.ml[178,6230+34]..[178,6230+47])
                                                          Pexp_ident "binary_annots" (file_formats/cmt_format.ml[178,6230+34]..[178,6230+47])
                                                    ]
                                                "cmt_value_dependencies" (file_formats/cmt_format.ml[179,6279+11]..[179,6279+33])
                                                  expression (file_formats/cmt_format.ml[179,6279+36]..[179,6279+47])
                                                    Pexp_apply
                                                    expression (file_formats/cmt_format.ml[179,6279+36]..[179,6279+37])
                                                      Pexp_ident "!" (file_formats/cmt_format.ml[179,6279+36]..[179,6279+37])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (file_formats/cmt_format.ml[179,6279+37]..[179,6279+47])
                                                          Pexp_ident "value_deps" (file_formats/cmt_format.ml[179,6279+37]..[179,6279+47])
                                                    ]
                                                "cmt_comments" (file_formats/cmt_format.ml[180,6328+11]..[180,6328+23])
                                                  expression (file_formats/cmt_format.ml[180,6328+26]..[180,6328+43])
                                                    Pexp_apply
                                                    expression (file_formats/cmt_format.ml[180,6328+26]..[180,6328+40])
                                                      Pexp_ident "Lexer.comments" (file_formats/cmt_format.ml[180,6328+26]..[180,6328+40])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (file_formats/cmt_format.ml[180,6328+41]..[180,6328+43])
                                                          Pexp_construct "()" (file_formats/cmt_format.ml[180,6328+41]..[180,6328+43])
                                                          None
                                                    ]
                                                "cmt_args" (file_formats/cmt_format.ml[181,6373+11]..[181,6373+19])
                                                  expression (file_formats/cmt_format.ml[181,6373+22]..[181,6373+30])
                                                    Pexp_ident "Sys.argv" (file_formats/cmt_format.ml[181,6373+22]..[181,6373+30])
                                                "cmt_sourcefile" (file_formats/cmt_format.ml[182,6405+11]..[182,6405+25])
                                                  expression (file_formats/cmt_format.ml[182,6405+28]..[182,6405+38])
                                                    Pexp_ident "sourcefile" (file_formats/cmt_format.ml[182,6405+28]..[182,6405+38])
                                                "cmt_builddir" (file_formats/cmt_format.ml[183,6445+11]..[183,6445+23])
                                                  expression (file_formats/cmt_format.ml[183,6445+26]..[183,6445+72])
                                                    Pexp_apply
                                                    expression (file_formats/cmt_format.ml[183,6445+26]..[183,6445+56])
                                                      Pexp_ident "Location.rewrite_absolute_path" (file_formats/cmt_format.ml[183,6445+26]..[183,6445+56])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (file_formats/cmt_format.ml[183,6445+57]..[183,6445+72])
                                                          Pexp_apply
                                                          expression (file_formats/cmt_format.ml[183,6445+58]..[183,6445+68])
                                                            Pexp_ident "Sys.getcwd" (file_formats/cmt_format.ml[183,6445+58]..[183,6445+68])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (file_formats/cmt_format.ml[183,6445+69]..[183,6445+71])
                                                                Pexp_construct "()" (file_formats/cmt_format.ml[183,6445+69]..[183,6445+71])
                                                                None
                                                          ]
                                                    ]
                                                "cmt_loadpath" (file_formats/cmt_format.ml[184,6519+11]..[184,6519+23])
                                                  expression (file_formats/cmt_format.ml[184,6519+26]..[184,6519+48])
                                                    Pexp_apply
                                                    expression (file_formats/cmt_format.ml[184,6519+26]..[184,6519+45])
                                                      Pexp_ident "Load_path.get_paths" (file_formats/cmt_format.ml[184,6519+26]..[184,6519+45])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (file_formats/cmt_format.ml[184,6519+46]..[184,6519+48])
                                                          Pexp_construct "()" (file_formats/cmt_format.ml[184,6519+46]..[184,6519+48])
                                                          None
                                                    ]
                                                "cmt_source_digest" (file_formats/cmt_format.ml[185,6569+11]..[185,6569+28])
                                                  expression (file_formats/cmt_format.ml[185,6569+31]..[185,6569+44])
                                                    Pexp_ident "source_digest" (file_formats/cmt_format.ml[185,6569+31]..[185,6569+44])
                                                "cmt_initial_env" (file_formats/cmt_format.ml[186,6615+11]..[186,6615+26])
                                                  expression (file_formats/cmt_format.ml[186,6615+29]..[187,6670+61])
                                                    Pexp_ifthenelse
                                                    expression (file_formats/cmt_format.ml[186,6615+32]..[186,6615+49])
                                                      Pexp_ident "need_to_clear_env" (file_formats/cmt_format.ml[186,6615+32]..[186,6615+49])
                                                    expression (file_formats/cmt_format.ml[187,6670+15]..[187,6670+44])
                                                      Pexp_apply
                                                      expression (file_formats/cmt_format.ml[187,6670+15]..[187,6670+32])
                                                        Pexp_ident "keep_only_summary" (file_formats/cmt_format.ml[187,6670+15]..[187,6670+32])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (file_formats/cmt_format.ml[187,6670+33]..[187,6670+44])
                                                            Pexp_ident "initial_env" (file_formats/cmt_format.ml[187,6670+33]..[187,6670+44])
                                                      ]
                                                    Some
                                                      expression (file_formats/cmt_format.ml[187,6670+50]..[187,6670+61])
                                                        Pexp_ident "initial_env" (file_formats/cmt_format.ml[187,6670+50]..[187,6670+61])
                                                "cmt_imports" (file_formats/cmt_format.ml[188,6733+11]..[188,6733+22])
                                                  expression (file_formats/cmt_format.ml[188,6733+25]..[188,6733+59])
                                                    Pexp_apply
                                                    expression (file_formats/cmt_format.ml[188,6733+25]..[188,6733+34])
                                                      Pexp_ident "List.sort" (file_formats/cmt_format.ml[188,6733+25]..[188,6733+34])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (file_formats/cmt_format.ml[188,6733+35]..[188,6733+42])
                                                          Pexp_ident "compare" (file_formats/cmt_format.ml[188,6733+35]..[188,6733+42])
                                                      <arg>
                                                      Nolabel
                                                        expression (file_formats/cmt_format.ml[188,6733+43]..[188,6733+59])
                                                          Pexp_apply
                                                          expression (file_formats/cmt_format.ml[188,6733+44]..[188,6733+55])
                                                            Pexp_ident "Env.imports" (file_formats/cmt_format.ml[188,6733+44]..[188,6733+55])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (file_formats/cmt_format.ml[188,6733+56]..[188,6733+58])
                                                                Pexp_construct "()" (file_formats/cmt_format.ml[188,6733+56]..[188,6733+58])
                                                                None
                                                          ]
                                                    ]
                                                "cmt_interface_digest" (file_formats/cmt_format.ml[189,6794+11]..[189,6794+31])
                                                  expression (file_formats/cmt_format.ml[189,6794+34]..[189,6794+42])
                                                    Pexp_ident "this_crc" (file_formats/cmt_format.ml[189,6794+34]..[189,6794+42])
                                                "cmt_use_summaries" (file_formats/cmt_format.ml[190,6838+11]..[190,6838+28])
                                                  expression (file_formats/cmt_format.ml[190,6838+31]..[190,6838+48])
                                                    Pexp_ident "need_to_clear_env" (file_formats/cmt_format.ml[190,6838+31]..[190,6838+48])
                                              ]
                                              None
                                        ]
                                        expression (file_formats/cmt_format.ml[192,6902+9]..[192,6902+26])
                                          Pexp_apply
                                          expression (file_formats/cmt_format.ml[192,6902+9]..[192,6902+19])
                                            Pexp_ident "output_cmt" (file_formats/cmt_format.ml[192,6902+9]..[192,6902+19])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (file_formats/cmt_format.ml[192,6902+20]..[192,6902+22])
                                                Pexp_ident "oc" (file_formats/cmt_format.ml[192,6902+20]..[192,6902+22])
                                            <arg>
                                            Nolabel
                                              expression (file_formats/cmt_format.ml[192,6902+23]..[192,6902+26])
                                                Pexp_ident "cmt" (file_formats/cmt_format.ml[192,6902+23]..[192,6902+26])
                                          ]
                          ]
                        None
                      expression (file_formats/cmt_format.ml[194,6937+2]..[194,6937+10])
                        Pexp_apply
                        expression (file_formats/cmt_format.ml[194,6937+2]..[194,6937+7])
                          Pexp_ident "clear" (file_formats/cmt_format.ml[194,6937+2]..[194,6937+7])
                        [
                          <arg>
                          Nolabel
                            expression (file_formats/cmt_format.ml[194,6937+8]..[194,6937+10])
                              Pexp_construct "()" (file_formats/cmt_format.ml[194,6937+8]..[194,6937+10])
                              None
                        ]
    ]
]

