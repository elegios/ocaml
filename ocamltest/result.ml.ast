[
  structure_item (ocamltest/result.ml[18,1140+0]..[18,1140+32])
    Pstr_type Rec
    [
      type_declaration "status" (ocamltest/result.ml[18,1140+5]..[18,1140+11]) (ocamltest/result.ml[18,1140+0]..[18,1140+32])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (ocamltest/result.ml[18,1140+14]..[18,1140+18])
                "Pass" (ocamltest/result.ml[18,1140+14]..[18,1140+18])
                []
                None
              (ocamltest/result.ml[18,1140+19]..[18,1140+25])
                "Skip" (ocamltest/result.ml[18,1140+21]..[18,1140+25])
                []
                None
              (ocamltest/result.ml[18,1140+26]..[18,1140+32])
                "Fail" (ocamltest/result.ml[18,1140+28]..[18,1140+32])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (ocamltest/result.ml[20,1174+0]..[23,1229+1])
    Pstr_type Rec
    [
      type_declaration "t" (ocamltest/result.ml[20,1174+5]..[20,1174+6]) (ocamltest/result.ml[20,1174+0]..[23,1229+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (ocamltest/result.ml[21,1185+2]..[21,1185+18])
                Immutable
                "status" (ocamltest/result.ml[21,1185+2]..[21,1185+8])                core_type (ocamltest/result.ml[21,1185+11]..[21,1185+17])
                  Ptyp_constr "status" (ocamltest/result.ml[21,1185+11]..[21,1185+17])
                  []
              (ocamltest/result.ml[22,1204+2]..[22,1204+24])
                Immutable
                "reason" (ocamltest/result.ml[22,1204+2]..[22,1204+8])                core_type (ocamltest/result.ml[22,1204+11]..[22,1204+24])
                  Ptyp_constr "option" (ocamltest/result.ml[22,1204+18]..[22,1204+24])
                  [
                    core_type (ocamltest/result.ml[22,1204+11]..[22,1204+17])
                      Ptyp_constr "string" (ocamltest/result.ml[22,1204+11]..[22,1204+17])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (ocamltest/result.ml[25,1232+0]..[25,1232+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/result.ml[25,1232+4]..[25,1232+20])
          Ppat_var "result_of_status" (ocamltest/result.ml[25,1232+4]..[25,1232+20])
        expression (ocamltest/result.ml[25,1232+21]..[25,1232+54]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (ocamltest/result.ml[25,1232+21]..[25,1232+22])
            Ppat_var "s" (ocamltest/result.ml[25,1232+21]..[25,1232+22])
          expression (ocamltest/result.ml[25,1232+25]..[25,1232+54])
            Pexp_record
            [
              "status" (ocamltest/result.ml[25,1232+27]..[25,1232+33])
                expression (ocamltest/result.ml[25,1232+36]..[25,1232+37])
                  Pexp_ident "s" (ocamltest/result.ml[25,1232+36]..[25,1232+37])
              "reason" (ocamltest/result.ml[25,1232+39]..[25,1232+45])
                expression (ocamltest/result.ml[25,1232+48]..[25,1232+52])
                  Pexp_construct "None" (ocamltest/result.ml[25,1232+48]..[25,1232+52])
                  None
            ]
            None
    ]
  structure_item (ocamltest/result.ml[27,1288+0]..[27,1288+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/result.ml[27,1288+4]..[27,1288+8])
          Ppat_var "pass" (ocamltest/result.ml[27,1288+4]..[27,1288+8])
        expression (ocamltest/result.ml[27,1288+11]..[27,1288+32])
          Pexp_apply
          expression (ocamltest/result.ml[27,1288+11]..[27,1288+27])
            Pexp_ident "result_of_status" (ocamltest/result.ml[27,1288+11]..[27,1288+27])
          [
            <arg>
            Nolabel
              expression (ocamltest/result.ml[27,1288+28]..[27,1288+32])
                Pexp_construct "Pass" (ocamltest/result.ml[27,1288+28]..[27,1288+32])
                None
          ]
    ]
  structure_item (ocamltest/result.ml[29,1322+0]..[29,1322+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/result.ml[29,1322+4]..[29,1322+8])
          Ppat_var "skip" (ocamltest/result.ml[29,1322+4]..[29,1322+8])
        expression (ocamltest/result.ml[29,1322+11]..[29,1322+32])
          Pexp_apply
          expression (ocamltest/result.ml[29,1322+11]..[29,1322+27])
            Pexp_ident "result_of_status" (ocamltest/result.ml[29,1322+11]..[29,1322+27])
          [
            <arg>
            Nolabel
              expression (ocamltest/result.ml[29,1322+28]..[29,1322+32])
                Pexp_construct "Skip" (ocamltest/result.ml[29,1322+28]..[29,1322+32])
                None
          ]
    ]
  structure_item (ocamltest/result.ml[31,1356+0]..[31,1356+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/result.ml[31,1356+4]..[31,1356+8])
          Ppat_var "fail" (ocamltest/result.ml[31,1356+4]..[31,1356+8])
        expression (ocamltest/result.ml[31,1356+11]..[31,1356+32])
          Pexp_apply
          expression (ocamltest/result.ml[31,1356+11]..[31,1356+27])
            Pexp_ident "result_of_status" (ocamltest/result.ml[31,1356+11]..[31,1356+27])
          [
            <arg>
            Nolabel
              expression (ocamltest/result.ml[31,1356+28]..[31,1356+32])
                Pexp_construct "Fail" (ocamltest/result.ml[31,1356+28]..[31,1356+32])
                None
          ]
    ]
  structure_item (ocamltest/result.ml[33,1390+0]..[33,1390+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/result.ml[33,1390+4]..[33,1390+22])
          Ppat_var "result_with_reason" (ocamltest/result.ml[33,1390+4]..[33,1390+22])
        expression (ocamltest/result.ml[33,1390+23]..[33,1390+60]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (ocamltest/result.ml[33,1390+23]..[33,1390+24])
            Ppat_var "s" (ocamltest/result.ml[33,1390+23]..[33,1390+24])
          expression (ocamltest/result.ml[33,1390+25]..[33,1390+60]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (ocamltest/result.ml[33,1390+25]..[33,1390+26])
              Ppat_var "r" (ocamltest/result.ml[33,1390+25]..[33,1390+26])
            expression (ocamltest/result.ml[33,1390+29]..[33,1390+60])
              Pexp_record
              [
                "status" (ocamltest/result.ml[33,1390+31]..[33,1390+37])
                  expression (ocamltest/result.ml[33,1390+40]..[33,1390+41])
                    Pexp_ident "s" (ocamltest/result.ml[33,1390+40]..[33,1390+41])
                "reason" (ocamltest/result.ml[33,1390+43]..[33,1390+49])
                  expression (ocamltest/result.ml[33,1390+52]..[33,1390+58])
                    Pexp_construct "Some" (ocamltest/result.ml[33,1390+52]..[33,1390+56])
                    Some
                      expression (ocamltest/result.ml[33,1390+57]..[33,1390+58])
                        Pexp_ident "r" (ocamltest/result.ml[33,1390+57]..[33,1390+58])
              ]
              None
    ]
  structure_item (ocamltest/result.ml[35,1452+0]..[35,1452+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/result.ml[35,1452+4]..[35,1452+20])
          Ppat_var "pass_with_reason" (ocamltest/result.ml[35,1452+4]..[35,1452+20])
        expression (ocamltest/result.ml[35,1452+21]..[35,1452+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (ocamltest/result.ml[35,1452+21]..[35,1452+22])
            Ppat_var "r" (ocamltest/result.ml[35,1452+21]..[35,1452+22])
          expression (ocamltest/result.ml[35,1452+25]..[35,1452+50])
            Pexp_apply
            expression (ocamltest/result.ml[35,1452+25]..[35,1452+43])
              Pexp_ident "result_with_reason" (ocamltest/result.ml[35,1452+25]..[35,1452+43])
            [
              <arg>
              Nolabel
                expression (ocamltest/result.ml[35,1452+44]..[35,1452+48])
                  Pexp_construct "Pass" (ocamltest/result.ml[35,1452+44]..[35,1452+48])
                  None
              <arg>
              Nolabel
                expression (ocamltest/result.ml[35,1452+49]..[35,1452+50])
                  Pexp_ident "r" (ocamltest/result.ml[35,1452+49]..[35,1452+50])
            ]
    ]
  structure_item (ocamltest/result.ml[37,1504+0]..[37,1504+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/result.ml[37,1504+4]..[37,1504+20])
          Ppat_var "skip_with_reason" (ocamltest/result.ml[37,1504+4]..[37,1504+20])
        expression (ocamltest/result.ml[37,1504+21]..[37,1504+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (ocamltest/result.ml[37,1504+21]..[37,1504+22])
            Ppat_var "r" (ocamltest/result.ml[37,1504+21]..[37,1504+22])
          expression (ocamltest/result.ml[37,1504+25]..[37,1504+50])
            Pexp_apply
            expression (ocamltest/result.ml[37,1504+25]..[37,1504+43])
              Pexp_ident "result_with_reason" (ocamltest/result.ml[37,1504+25]..[37,1504+43])
            [
              <arg>
              Nolabel
                expression (ocamltest/result.ml[37,1504+44]..[37,1504+48])
                  Pexp_construct "Skip" (ocamltest/result.ml[37,1504+44]..[37,1504+48])
                  None
              <arg>
              Nolabel
                expression (ocamltest/result.ml[37,1504+49]..[37,1504+50])
                  Pexp_ident "r" (ocamltest/result.ml[37,1504+49]..[37,1504+50])
            ]
    ]
  structure_item (ocamltest/result.ml[39,1556+0]..[39,1556+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/result.ml[39,1556+4]..[39,1556+20])
          Ppat_var "fail_with_reason" (ocamltest/result.ml[39,1556+4]..[39,1556+20])
        expression (ocamltest/result.ml[39,1556+21]..[39,1556+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (ocamltest/result.ml[39,1556+21]..[39,1556+22])
            Ppat_var "r" (ocamltest/result.ml[39,1556+21]..[39,1556+22])
          expression (ocamltest/result.ml[39,1556+25]..[39,1556+50])
            Pexp_apply
            expression (ocamltest/result.ml[39,1556+25]..[39,1556+43])
              Pexp_ident "result_with_reason" (ocamltest/result.ml[39,1556+25]..[39,1556+43])
            [
              <arg>
              Nolabel
                expression (ocamltest/result.ml[39,1556+44]..[39,1556+48])
                  Pexp_construct "Fail" (ocamltest/result.ml[39,1556+44]..[39,1556+48])
                  None
              <arg>
              Nolabel
                expression (ocamltest/result.ml[39,1556+49]..[39,1556+50])
                  Pexp_ident "r" (ocamltest/result.ml[39,1556+49]..[39,1556+50])
            ]
    ]
  structure_item (ocamltest/result.ml[41,1608+0]..[44,1683+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/result.ml[41,1608+4]..[41,1608+20])
          Ppat_var "string_of_status" (ocamltest/result.ml[41,1608+4]..[41,1608+20])
        expression (ocamltest/result.ml[41,1608+23]..[44,1683+20])
          Pexp_function
          [
            <case>
              pattern (ocamltest/result.ml[42,1640+4]..[42,1640+8])
                Ppat_construct "Pass" (ocamltest/result.ml[42,1640+4]..[42,1640+8])
                None
              expression (ocamltest/result.ml[42,1640+12]..[42,1640+20])
                Pexp_constant PConst_string("passed",(ocamltest/result.ml[42,1640+13]..[42,1640+19]),None)
            <case>
              pattern (ocamltest/result.ml[43,1661+4]..[43,1661+8])
                Ppat_construct "Skip" (ocamltest/result.ml[43,1661+4]..[43,1661+8])
                None
              expression (ocamltest/result.ml[43,1661+12]..[43,1661+21])
                Pexp_constant PConst_string("skipped",(ocamltest/result.ml[43,1661+13]..[43,1661+20]),None)
            <case>
              pattern (ocamltest/result.ml[44,1683+4]..[44,1683+8])
                Ppat_construct "Fail" (ocamltest/result.ml[44,1683+4]..[44,1683+8])
                None
              expression (ocamltest/result.ml[44,1683+12]..[44,1683+20])
                Pexp_constant PConst_string("failed",(ocamltest/result.ml[44,1683+13]..[44,1683+19]),None)
          ]
    ]
  structure_item (ocamltest/result.ml[46,1705+0]..[48,1752+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/result.ml[46,1705+4]..[46,1705+20])
          Ppat_var "string_of_reason" (ocamltest/result.ml[46,1705+4]..[46,1705+20])
        expression (ocamltest/result.ml[46,1705+23]..[48,1752+40])
          Pexp_function
          [
            <case>
              pattern (ocamltest/result.ml[47,1737+4]..[47,1737+8])
                Ppat_construct "None" (ocamltest/result.ml[47,1737+4]..[47,1737+8])
                None
              expression (ocamltest/result.ml[47,1737+12]..[47,1737+14])
                Pexp_constant PConst_string("",(ocamltest/result.ml[47,1737+13]..[47,1737+13]),None)
            <case>
              pattern (ocamltest/result.ml[48,1752+4]..[48,1752+15])
                Ppat_construct "Some" (ocamltest/result.ml[48,1752+4]..[48,1752+8])
                Some
                  []
                  pattern (ocamltest/result.ml[48,1752+9]..[48,1752+15])
                    Ppat_var "reason" (ocamltest/result.ml[48,1752+9]..[48,1752+15])
              expression (ocamltest/result.ml[48,1752+19]..[48,1752+40])
                Pexp_apply
                expression (ocamltest/result.ml[48,1752+25]..[48,1752+26])
                  Pexp_ident "^" (ocamltest/result.ml[48,1752+25]..[48,1752+26])
                [
                  <arg>
                  Nolabel
                    expression (ocamltest/result.ml[48,1752+20]..[48,1752+24])
                      Pexp_constant PConst_string(" (",(ocamltest/result.ml[48,1752+21]..[48,1752+23]),None)
                  <arg>
                  Nolabel
                    expression (ocamltest/result.ml[48,1752+27]..[48,1752+39])
                      Pexp_apply
                      expression (ocamltest/result.ml[48,1752+34]..[48,1752+35])
                        Pexp_ident "^" (ocamltest/result.ml[48,1752+34]..[48,1752+35])
                      [
                        <arg>
                        Nolabel
                          expression (ocamltest/result.ml[48,1752+27]..[48,1752+33])
                            Pexp_ident "reason" (ocamltest/result.ml[48,1752+27]..[48,1752+33])
                        <arg>
                        Nolabel
                          expression (ocamltest/result.ml[48,1752+36]..[48,1752+39])
                            Pexp_constant PConst_string(")",(ocamltest/result.ml[48,1752+37]..[48,1752+38]),None)
                      ]
                ]
          ]
    ]
  structure_item (ocamltest/result.ml[50,1794+0]..[51,1819+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/result.ml[50,1794+4]..[50,1794+20])
          Ppat_var "string_of_result" (ocamltest/result.ml[50,1794+4]..[50,1794+20])
        expression (ocamltest/result.ml[50,1794+21]..[51,1819+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (ocamltest/result.ml[50,1794+21]..[50,1794+22])
            Ppat_var "r" (ocamltest/result.ml[50,1794+21]..[50,1794+22])
          expression (ocamltest/result.ml[51,1819+2]..[51,1819+59])
            Pexp_apply
            expression (ocamltest/result.ml[51,1819+30]..[51,1819+31])
              Pexp_ident "^" (ocamltest/result.ml[51,1819+30]..[51,1819+31])
            [
              <arg>
              Nolabel
                expression (ocamltest/result.ml[51,1819+2]..[51,1819+29])
                  Pexp_apply
                  expression (ocamltest/result.ml[51,1819+3]..[51,1819+19])
                    Pexp_ident "string_of_status" (ocamltest/result.ml[51,1819+3]..[51,1819+19])
                  [
                    <arg>
                    Nolabel
                      expression (ocamltest/result.ml[51,1819+20]..[51,1819+28])
                        Pexp_field
                        expression (ocamltest/result.ml[51,1819+20]..[51,1819+21])
                          Pexp_ident "r" (ocamltest/result.ml[51,1819+20]..[51,1819+21])
                        "status" (ocamltest/result.ml[51,1819+22]..[51,1819+28])
                  ]
              <arg>
              Nolabel
                expression (ocamltest/result.ml[51,1819+32]..[51,1819+59])
                  Pexp_apply
                  expression (ocamltest/result.ml[51,1819+33]..[51,1819+49])
                    Pexp_ident "string_of_reason" (ocamltest/result.ml[51,1819+33]..[51,1819+49])
                  [
                    <arg>
                    Nolabel
                      expression (ocamltest/result.ml[51,1819+50]..[51,1819+58])
                        Pexp_field
                        expression (ocamltest/result.ml[51,1819+50]..[51,1819+51])
                          Pexp_ident "r" (ocamltest/result.ml[51,1819+50]..[51,1819+51])
                        "reason" (ocamltest/result.ml[51,1819+52]..[51,1819+58])
                  ]
            ]
    ]
  structure_item (ocamltest/result.ml[53,1880+0]..[53,1880+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/result.ml[53,1880+4]..[53,1880+11])
          Ppat_var "is_pass" (ocamltest/result.ml[53,1880+4]..[53,1880+11])
        expression (ocamltest/result.ml[53,1880+12]..[53,1880+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (ocamltest/result.ml[53,1880+12]..[53,1880+13])
            Ppat_var "r" (ocamltest/result.ml[53,1880+12]..[53,1880+13])
          expression (ocamltest/result.ml[53,1880+16]..[53,1880+31])
            Pexp_apply
            expression (ocamltest/result.ml[53,1880+25]..[53,1880+26])
              Pexp_ident "=" (ocamltest/result.ml[53,1880+25]..[53,1880+26])
            [
              <arg>
              Nolabel
                expression (ocamltest/result.ml[53,1880+16]..[53,1880+24])
                  Pexp_field
                  expression (ocamltest/result.ml[53,1880+16]..[53,1880+17])
                    Pexp_ident "r" (ocamltest/result.ml[53,1880+16]..[53,1880+17])
                  "status" (ocamltest/result.ml[53,1880+18]..[53,1880+24])
              <arg>
              Nolabel
                expression (ocamltest/result.ml[53,1880+27]..[53,1880+31])
                  Pexp_construct "Pass" (ocamltest/result.ml[53,1880+27]..[53,1880+31])
                  None
            ]
    ]
  structure_item (ocamltest/result.ml[55,1913+0]..[55,1913+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/result.ml[55,1913+4]..[55,1913+11])
          Ppat_var "is_skip" (ocamltest/result.ml[55,1913+4]..[55,1913+11])
        expression (ocamltest/result.ml[55,1913+12]..[55,1913+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (ocamltest/result.ml[55,1913+12]..[55,1913+13])
            Ppat_var "r" (ocamltest/result.ml[55,1913+12]..[55,1913+13])
          expression (ocamltest/result.ml[55,1913+16]..[55,1913+31])
            Pexp_apply
            expression (ocamltest/result.ml[55,1913+25]..[55,1913+26])
              Pexp_ident "=" (ocamltest/result.ml[55,1913+25]..[55,1913+26])
            [
              <arg>
              Nolabel
                expression (ocamltest/result.ml[55,1913+16]..[55,1913+24])
                  Pexp_field
                  expression (ocamltest/result.ml[55,1913+16]..[55,1913+17])
                    Pexp_ident "r" (ocamltest/result.ml[55,1913+16]..[55,1913+17])
                  "status" (ocamltest/result.ml[55,1913+18]..[55,1913+24])
              <arg>
              Nolabel
                expression (ocamltest/result.ml[55,1913+27]..[55,1913+31])
                  Pexp_construct "Skip" (ocamltest/result.ml[55,1913+27]..[55,1913+31])
                  None
            ]
    ]
  structure_item (ocamltest/result.ml[57,1946+0]..[57,1946+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/result.ml[57,1946+4]..[57,1946+11])
          Ppat_var "is_fail" (ocamltest/result.ml[57,1946+4]..[57,1946+11])
        expression (ocamltest/result.ml[57,1946+12]..[57,1946+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (ocamltest/result.ml[57,1946+12]..[57,1946+13])
            Ppat_var "r" (ocamltest/result.ml[57,1946+12]..[57,1946+13])
          expression (ocamltest/result.ml[57,1946+16]..[57,1946+31])
            Pexp_apply
            expression (ocamltest/result.ml[57,1946+25]..[57,1946+26])
              Pexp_ident "=" (ocamltest/result.ml[57,1946+25]..[57,1946+26])
            [
              <arg>
              Nolabel
                expression (ocamltest/result.ml[57,1946+16]..[57,1946+24])
                  Pexp_field
                  expression (ocamltest/result.ml[57,1946+16]..[57,1946+17])
                    Pexp_ident "r" (ocamltest/result.ml[57,1946+16]..[57,1946+17])
                  "status" (ocamltest/result.ml[57,1946+18]..[57,1946+24])
              <arg>
              Nolabel
                expression (ocamltest/result.ml[57,1946+27]..[57,1946+31])
                  Pexp_construct "Fail" (ocamltest/result.ml[57,1946+27]..[57,1946+31])
                  None
            ]
    ]
]

