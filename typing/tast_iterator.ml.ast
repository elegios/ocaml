[
  structure_item (typing/tast_iterator.ml[16,1079+0]..[16,1079+13])
    Pstr_open Fresh
    module_expr (typing/tast_iterator.ml[16,1079+5]..[16,1079+13])
      Pmod_ident "Asttypes" (typing/tast_iterator.ml[16,1079+5]..[16,1079+13])
  structure_item (typing/tast_iterator.ml[17,1093+0]..[17,1093+14])
    Pstr_open Fresh
    module_expr (typing/tast_iterator.ml[17,1093+5]..[17,1093+14])
      Pmod_ident "Typedtree" (typing/tast_iterator.ml[17,1093+5]..[17,1093+14])
  structure_item (typing/tast_iterator.ml[19,1109+0]..[62,3417+3])
    Pstr_type Rec
    [
      type_declaration "iterator" (typing/tast_iterator.ml[19,1109+5]..[19,1109+13]) (typing/tast_iterator.ml[19,1109+0]..[62,3417+3])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (typing/tast_iterator.ml[21,1129+4]..[21,1129+47])
                Immutable
                "binding_op" (typing/tast_iterator.ml[21,1129+4]..[21,1129+14])                core_type (typing/tast_iterator.ml[21,1129+16]..[21,1129+46])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[21,1129+16]..[21,1129+24])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[21,1129+16]..[21,1129+24])
                    []
                  core_type (typing/tast_iterator.ml[21,1129+28]..[21,1129+46])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[21,1129+28]..[21,1129+38])
                      Ptyp_constr "binding_op" (typing/tast_iterator.ml[21,1129+28]..[21,1129+38])
                      []
                    core_type (typing/tast_iterator.ml[21,1129+42]..[21,1129+46])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[21,1129+42]..[21,1129+46])
                      []
              (typing/tast_iterator.ml[22,1177+4]..[22,1177+43])
                Immutable
                "case" (typing/tast_iterator.ml[22,1177+4]..[22,1177+8])                core_type (typing/tast_iterator.ml[22,1177+10]..[22,1177+42])
                  Ptyp_poly 'k
                  core_type (typing/tast_iterator.ml[22,1177+15]..[22,1177+42])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[22,1177+15]..[22,1177+23])
                      Ptyp_constr "iterator" (typing/tast_iterator.ml[22,1177+15]..[22,1177+23])
                      []
                    core_type (typing/tast_iterator.ml[22,1177+27]..[22,1177+42])
                      Ptyp_arrow
                      Nolabel
                      core_type (typing/tast_iterator.ml[22,1177+27]..[22,1177+34])
                        Ptyp_constr "case" (typing/tast_iterator.ml[22,1177+30]..[22,1177+34])
                        [
                          core_type (typing/tast_iterator.ml[22,1177+27]..[22,1177+29])
                            Ptyp_var k
                        ]
                      core_type (typing/tast_iterator.ml[22,1177+38]..[22,1177+42])
                        Ptyp_constr "unit" (typing/tast_iterator.ml[22,1177+38]..[22,1177+42])
                        []
              (typing/tast_iterator.ml[23,1221+4]..[23,1221+61])
                Immutable
                "class_declaration" (typing/tast_iterator.ml[23,1221+4]..[23,1221+21])                core_type (typing/tast_iterator.ml[23,1221+23]..[23,1221+60])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[23,1221+23]..[23,1221+31])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[23,1221+23]..[23,1221+31])
                    []
                  core_type (typing/tast_iterator.ml[23,1221+35]..[23,1221+60])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[23,1221+35]..[23,1221+52])
                      Ptyp_constr "class_declaration" (typing/tast_iterator.ml[23,1221+35]..[23,1221+52])
                      []
                    core_type (typing/tast_iterator.ml[23,1221+56]..[23,1221+60])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[23,1221+56]..[23,1221+60])
                      []
              (typing/tast_iterator.ml[24,1283+4]..[24,1283+61])
                Immutable
                "class_description" (typing/tast_iterator.ml[24,1283+4]..[24,1283+21])                core_type (typing/tast_iterator.ml[24,1283+23]..[24,1283+60])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[24,1283+23]..[24,1283+31])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[24,1283+23]..[24,1283+31])
                    []
                  core_type (typing/tast_iterator.ml[24,1283+35]..[24,1283+60])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[24,1283+35]..[24,1283+52])
                      Ptyp_constr "class_description" (typing/tast_iterator.ml[24,1283+35]..[24,1283+52])
                      []
                    core_type (typing/tast_iterator.ml[24,1283+56]..[24,1283+60])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[24,1283+56]..[24,1283+60])
                      []
              (typing/tast_iterator.ml[25,1345+4]..[25,1345+47])
                Immutable
                "class_expr" (typing/tast_iterator.ml[25,1345+4]..[25,1345+14])                core_type (typing/tast_iterator.ml[25,1345+16]..[25,1345+46])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[25,1345+16]..[25,1345+24])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[25,1345+16]..[25,1345+24])
                    []
                  core_type (typing/tast_iterator.ml[25,1345+28]..[25,1345+46])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[25,1345+28]..[25,1345+38])
                      Ptyp_constr "class_expr" (typing/tast_iterator.ml[25,1345+28]..[25,1345+38])
                      []
                    core_type (typing/tast_iterator.ml[25,1345+42]..[25,1345+46])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[25,1345+42]..[25,1345+46])
                      []
              (typing/tast_iterator.ml[26,1393+4]..[26,1393+49])
                Immutable
                "class_field" (typing/tast_iterator.ml[26,1393+4]..[26,1393+15])                core_type (typing/tast_iterator.ml[26,1393+17]..[26,1393+48])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[26,1393+17]..[26,1393+25])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[26,1393+17]..[26,1393+25])
                    []
                  core_type (typing/tast_iterator.ml[26,1393+29]..[26,1393+48])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[26,1393+29]..[26,1393+40])
                      Ptyp_constr "class_field" (typing/tast_iterator.ml[26,1393+29]..[26,1393+40])
                      []
                    core_type (typing/tast_iterator.ml[26,1393+44]..[26,1393+48])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[26,1393+44]..[26,1393+48])
                      []
              (typing/tast_iterator.ml[27,1443+4]..[27,1443+57])
                Immutable
                "class_signature" (typing/tast_iterator.ml[27,1443+4]..[27,1443+19])                core_type (typing/tast_iterator.ml[27,1443+21]..[27,1443+56])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[27,1443+21]..[27,1443+29])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[27,1443+21]..[27,1443+29])
                    []
                  core_type (typing/tast_iterator.ml[27,1443+33]..[27,1443+56])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[27,1443+33]..[27,1443+48])
                      Ptyp_constr "class_signature" (typing/tast_iterator.ml[27,1443+33]..[27,1443+48])
                      []
                    core_type (typing/tast_iterator.ml[27,1443+52]..[27,1443+56])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[27,1443+52]..[27,1443+56])
                      []
              (typing/tast_iterator.ml[28,1501+4]..[28,1501+57])
                Immutable
                "class_structure" (typing/tast_iterator.ml[28,1501+4]..[28,1501+19])                core_type (typing/tast_iterator.ml[28,1501+21]..[28,1501+56])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[28,1501+21]..[28,1501+29])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[28,1501+21]..[28,1501+29])
                    []
                  core_type (typing/tast_iterator.ml[28,1501+33]..[28,1501+56])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[28,1501+33]..[28,1501+48])
                      Ptyp_constr "class_structure" (typing/tast_iterator.ml[28,1501+33]..[28,1501+48])
                      []
                    core_type (typing/tast_iterator.ml[28,1501+52]..[28,1501+56])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[28,1501+52]..[28,1501+56])
                      []
              (typing/tast_iterator.ml[29,1559+4]..[29,1559+47])
                Immutable
                "class_type" (typing/tast_iterator.ml[29,1559+4]..[29,1559+14])                core_type (typing/tast_iterator.ml[29,1559+16]..[29,1559+46])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[29,1559+16]..[29,1559+24])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[29,1559+16]..[29,1559+24])
                    []
                  core_type (typing/tast_iterator.ml[29,1559+28]..[29,1559+46])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[29,1559+28]..[29,1559+38])
                      Ptyp_constr "class_type" (typing/tast_iterator.ml[29,1559+28]..[29,1559+38])
                      []
                    core_type (typing/tast_iterator.ml[29,1559+42]..[29,1559+46])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[29,1559+42]..[29,1559+46])
                      []
              (typing/tast_iterator.ml[30,1607+4]..[30,1607+71])
                Immutable
                "class_type_declaration" (typing/tast_iterator.ml[30,1607+4]..[30,1607+26])                core_type (typing/tast_iterator.ml[30,1607+28]..[30,1607+70])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[30,1607+28]..[30,1607+36])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[30,1607+28]..[30,1607+36])
                    []
                  core_type (typing/tast_iterator.ml[30,1607+40]..[30,1607+70])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[30,1607+40]..[30,1607+62])
                      Ptyp_constr "class_type_declaration" (typing/tast_iterator.ml[30,1607+40]..[30,1607+62])
                      []
                    core_type (typing/tast_iterator.ml[30,1607+66]..[30,1607+70])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[30,1607+66]..[30,1607+70])
                      []
              (typing/tast_iterator.ml[31,1679+4]..[31,1679+59])
                Immutable
                "class_type_field" (typing/tast_iterator.ml[31,1679+4]..[31,1679+20])                core_type (typing/tast_iterator.ml[31,1679+22]..[31,1679+58])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[31,1679+22]..[31,1679+30])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[31,1679+22]..[31,1679+30])
                    []
                  core_type (typing/tast_iterator.ml[31,1679+34]..[31,1679+58])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[31,1679+34]..[31,1679+50])
                      Ptyp_constr "class_type_field" (typing/tast_iterator.ml[31,1679+34]..[31,1679+50])
                      []
                    core_type (typing/tast_iterator.ml[31,1679+54]..[31,1679+58])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[31,1679+54]..[31,1679+58])
                      []
              (typing/tast_iterator.ml[32,1739+4]..[32,1739+35])
                Immutable
                "env" (typing/tast_iterator.ml[32,1739+4]..[32,1739+7])                core_type (typing/tast_iterator.ml[32,1739+9]..[32,1739+34])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[32,1739+9]..[32,1739+17])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[32,1739+9]..[32,1739+17])
                    []
                  core_type (typing/tast_iterator.ml[32,1739+21]..[32,1739+34])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[32,1739+21]..[32,1739+26])
                      Ptyp_constr "Env.t" (typing/tast_iterator.ml[32,1739+21]..[32,1739+26])
                      []
                    core_type (typing/tast_iterator.ml[32,1739+30]..[32,1739+34])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[32,1739+30]..[32,1739+34])
                      []
              (typing/tast_iterator.ml[33,1775+4]..[33,1775+41])
                Immutable
                "expr" (typing/tast_iterator.ml[33,1775+4]..[33,1775+8])                core_type (typing/tast_iterator.ml[33,1775+10]..[33,1775+40])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[33,1775+10]..[33,1775+18])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[33,1775+10]..[33,1775+18])
                    []
                  core_type (typing/tast_iterator.ml[33,1775+22]..[33,1775+40])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[33,1775+22]..[33,1775+32])
                      Ptyp_constr "expression" (typing/tast_iterator.ml[33,1775+22]..[33,1775+32])
                      []
                    core_type (typing/tast_iterator.ml[33,1775+36]..[33,1775+40])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[33,1775+36]..[33,1775+40])
                      []
              (typing/tast_iterator.ml[34,1817+4]..[34,1817+69])
                Immutable
                "extension_constructor" (typing/tast_iterator.ml[34,1817+4]..[34,1817+25])                core_type (typing/tast_iterator.ml[34,1817+27]..[34,1817+68])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[34,1817+27]..[34,1817+35])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[34,1817+27]..[34,1817+35])
                    []
                  core_type (typing/tast_iterator.ml[34,1817+39]..[34,1817+68])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[34,1817+39]..[34,1817+60])
                      Ptyp_constr "extension_constructor" (typing/tast_iterator.ml[34,1817+39]..[34,1817+60])
                      []
                    core_type (typing/tast_iterator.ml[34,1817+64]..[34,1817+68])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[34,1817+64]..[34,1817+68])
                      []
              (typing/tast_iterator.ml[35,1887+4]..[35,1887+55])
                Immutable
                "module_binding" (typing/tast_iterator.ml[35,1887+4]..[35,1887+18])                core_type (typing/tast_iterator.ml[35,1887+20]..[35,1887+54])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[35,1887+20]..[35,1887+28])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[35,1887+20]..[35,1887+28])
                    []
                  core_type (typing/tast_iterator.ml[35,1887+32]..[35,1887+54])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[35,1887+32]..[35,1887+46])
                      Ptyp_constr "module_binding" (typing/tast_iterator.ml[35,1887+32]..[35,1887+46])
                      []
                    core_type (typing/tast_iterator.ml[35,1887+50]..[35,1887+54])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[35,1887+50]..[35,1887+54])
                      []
              (typing/tast_iterator.ml[36,1943+4]..[36,1943+57])
                Immutable
                "module_coercion" (typing/tast_iterator.ml[36,1943+4]..[36,1943+19])                core_type (typing/tast_iterator.ml[36,1943+21]..[36,1943+56])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[36,1943+21]..[36,1943+29])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[36,1943+21]..[36,1943+29])
                    []
                  core_type (typing/tast_iterator.ml[36,1943+33]..[36,1943+56])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[36,1943+33]..[36,1943+48])
                      Ptyp_constr "module_coercion" (typing/tast_iterator.ml[36,1943+33]..[36,1943+48])
                      []
                    core_type (typing/tast_iterator.ml[36,1943+52]..[36,1943+56])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[36,1943+52]..[36,1943+56])
                      []
              (typing/tast_iterator.ml[37,2001+4]..[37,2001+63])
                Immutable
                "module_declaration" (typing/tast_iterator.ml[37,2001+4]..[37,2001+22])                core_type (typing/tast_iterator.ml[37,2001+24]..[37,2001+62])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[37,2001+24]..[37,2001+32])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[37,2001+24]..[37,2001+32])
                    []
                  core_type (typing/tast_iterator.ml[37,2001+36]..[37,2001+62])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[37,2001+36]..[37,2001+54])
                      Ptyp_constr "module_declaration" (typing/tast_iterator.ml[37,2001+36]..[37,2001+54])
                      []
                    core_type (typing/tast_iterator.ml[37,2001+58]..[37,2001+62])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[37,2001+58]..[37,2001+62])
                      []
              (typing/tast_iterator.ml[38,2065+4]..[38,2065+65])
                Immutable
                "module_substitution" (typing/tast_iterator.ml[38,2065+4]..[38,2065+23])                core_type (typing/tast_iterator.ml[38,2065+25]..[38,2065+64])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[38,2065+25]..[38,2065+33])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[38,2065+25]..[38,2065+33])
                    []
                  core_type (typing/tast_iterator.ml[38,2065+37]..[38,2065+64])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[38,2065+37]..[38,2065+56])
                      Ptyp_constr "module_substitution" (typing/tast_iterator.ml[38,2065+37]..[38,2065+56])
                      []
                    core_type (typing/tast_iterator.ml[38,2065+60]..[38,2065+64])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[38,2065+60]..[38,2065+64])
                      []
              (typing/tast_iterator.ml[39,2131+4]..[39,2131+49])
                Immutable
                "module_expr" (typing/tast_iterator.ml[39,2131+4]..[39,2131+15])                core_type (typing/tast_iterator.ml[39,2131+17]..[39,2131+48])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[39,2131+17]..[39,2131+25])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[39,2131+17]..[39,2131+25])
                    []
                  core_type (typing/tast_iterator.ml[39,2131+29]..[39,2131+48])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[39,2131+29]..[39,2131+40])
                      Ptyp_constr "module_expr" (typing/tast_iterator.ml[39,2131+29]..[39,2131+40])
                      []
                    core_type (typing/tast_iterator.ml[39,2131+44]..[39,2131+48])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[39,2131+44]..[39,2131+48])
                      []
              (typing/tast_iterator.ml[40,2181+4]..[40,2181+49])
                Immutable
                "module_type" (typing/tast_iterator.ml[40,2181+4]..[40,2181+15])                core_type (typing/tast_iterator.ml[40,2181+17]..[40,2181+48])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[40,2181+17]..[40,2181+25])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[40,2181+17]..[40,2181+25])
                    []
                  core_type (typing/tast_iterator.ml[40,2181+29]..[40,2181+48])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[40,2181+29]..[40,2181+40])
                      Ptyp_constr "module_type" (typing/tast_iterator.ml[40,2181+29]..[40,2181+40])
                      []
                    core_type (typing/tast_iterator.ml[40,2181+44]..[40,2181+48])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[40,2181+44]..[40,2181+48])
                      []
              (typing/tast_iterator.ml[41,2231+4]..[41,2231+73])
                Immutable
                "module_type_declaration" (typing/tast_iterator.ml[41,2231+4]..[41,2231+27])                core_type (typing/tast_iterator.ml[41,2231+29]..[41,2231+72])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[41,2231+29]..[41,2231+37])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[41,2231+29]..[41,2231+37])
                    []
                  core_type (typing/tast_iterator.ml[41,2231+41]..[41,2231+72])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[41,2231+41]..[41,2231+64])
                      Ptyp_constr "module_type_declaration" (typing/tast_iterator.ml[41,2231+41]..[41,2231+64])
                      []
                    core_type (typing/tast_iterator.ml[41,2231+68]..[41,2231+72])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[41,2231+68]..[41,2231+72])
                      []
              (typing/tast_iterator.ml[42,2305+4]..[42,2305+51])
                Immutable
                "package_type" (typing/tast_iterator.ml[42,2305+4]..[42,2305+16])                core_type (typing/tast_iterator.ml[42,2305+18]..[42,2305+50])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[42,2305+18]..[42,2305+26])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[42,2305+18]..[42,2305+26])
                    []
                  core_type (typing/tast_iterator.ml[42,2305+30]..[42,2305+50])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[42,2305+30]..[42,2305+42])
                      Ptyp_constr "package_type" (typing/tast_iterator.ml[42,2305+30]..[42,2305+42])
                      []
                    core_type (typing/tast_iterator.ml[42,2305+46]..[42,2305+50])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[42,2305+46]..[42,2305+50])
                      []
              (typing/tast_iterator.ml[43,2357+4]..[43,2357+53])
                Immutable
                "pat" (typing/tast_iterator.ml[43,2357+4]..[43,2357+7])                core_type (typing/tast_iterator.ml[43,2357+9]..[43,2357+52])
                  Ptyp_poly 'k
                  core_type (typing/tast_iterator.ml[43,2357+14]..[43,2357+52])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[43,2357+14]..[43,2357+22])
                      Ptyp_constr "iterator" (typing/tast_iterator.ml[43,2357+14]..[43,2357+22])
                      []
                    core_type (typing/tast_iterator.ml[43,2357+26]..[43,2357+52])
                      Ptyp_arrow
                      Nolabel
                      core_type (typing/tast_iterator.ml[43,2357+26]..[43,2357+44])
                        Ptyp_constr "general_pattern" (typing/tast_iterator.ml[43,2357+29]..[43,2357+44])
                        [
                          core_type (typing/tast_iterator.ml[43,2357+26]..[43,2357+28])
                            Ptyp_var k
                        ]
                      core_type (typing/tast_iterator.ml[43,2357+48]..[43,2357+52])
                        Ptyp_constr "unit" (typing/tast_iterator.ml[43,2357+48]..[43,2357+52])
                        []
              (typing/tast_iterator.ml[44,2411+4]..[44,2411+45])
                Immutable
                "row_field" (typing/tast_iterator.ml[44,2411+4]..[44,2411+13])                core_type (typing/tast_iterator.ml[44,2411+15]..[44,2411+44])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[44,2411+15]..[44,2411+23])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[44,2411+15]..[44,2411+23])
                    []
                  core_type (typing/tast_iterator.ml[44,2411+27]..[44,2411+44])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[44,2411+27]..[44,2411+36])
                      Ptyp_constr "row_field" (typing/tast_iterator.ml[44,2411+27]..[44,2411+36])
                      []
                    core_type (typing/tast_iterator.ml[44,2411+40]..[44,2411+44])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[44,2411+40]..[44,2411+44])
                      []
              (typing/tast_iterator.ml[45,2457+4]..[45,2457+51])
                Immutable
                "object_field" (typing/tast_iterator.ml[45,2457+4]..[45,2457+16])                core_type (typing/tast_iterator.ml[45,2457+18]..[45,2457+50])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[45,2457+18]..[45,2457+26])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[45,2457+18]..[45,2457+26])
                    []
                  core_type (typing/tast_iterator.ml[45,2457+30]..[45,2457+50])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[45,2457+30]..[45,2457+42])
                      Ptyp_constr "object_field" (typing/tast_iterator.ml[45,2457+30]..[45,2457+42])
                      []
                    core_type (typing/tast_iterator.ml[45,2457+46]..[45,2457+50])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[45,2457+46]..[45,2457+50])
                      []
              (typing/tast_iterator.ml[46,2509+4]..[46,2509+59])
                Immutable
                "open_declaration" (typing/tast_iterator.ml[46,2509+4]..[46,2509+20])                core_type (typing/tast_iterator.ml[46,2509+22]..[46,2509+58])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[46,2509+22]..[46,2509+30])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[46,2509+22]..[46,2509+30])
                    []
                  core_type (typing/tast_iterator.ml[46,2509+34]..[46,2509+58])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[46,2509+34]..[46,2509+50])
                      Ptyp_constr "open_declaration" (typing/tast_iterator.ml[46,2509+34]..[46,2509+50])
                      []
                    core_type (typing/tast_iterator.ml[46,2509+54]..[46,2509+58])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[46,2509+54]..[46,2509+58])
                      []
              (typing/tast_iterator.ml[47,2569+4]..[47,2569+59])
                Immutable
                "open_description" (typing/tast_iterator.ml[47,2569+4]..[47,2569+20])                core_type (typing/tast_iterator.ml[47,2569+22]..[47,2569+58])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[47,2569+22]..[47,2569+30])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[47,2569+22]..[47,2569+30])
                    []
                  core_type (typing/tast_iterator.ml[47,2569+34]..[47,2569+58])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[47,2569+34]..[47,2569+50])
                      Ptyp_constr "open_description" (typing/tast_iterator.ml[47,2569+34]..[47,2569+50])
                      []
                    core_type (typing/tast_iterator.ml[47,2569+54]..[47,2569+58])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[47,2569+54]..[47,2569+58])
                      []
              (typing/tast_iterator.ml[48,2629+4]..[48,2629+45])
                Immutable
                "signature" (typing/tast_iterator.ml[48,2629+4]..[48,2629+13])                core_type (typing/tast_iterator.ml[48,2629+15]..[48,2629+44])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[48,2629+15]..[48,2629+23])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[48,2629+15]..[48,2629+23])
                    []
                  core_type (typing/tast_iterator.ml[48,2629+27]..[48,2629+44])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[48,2629+27]..[48,2629+36])
                      Ptyp_constr "signature" (typing/tast_iterator.ml[48,2629+27]..[48,2629+36])
                      []
                    core_type (typing/tast_iterator.ml[48,2629+40]..[48,2629+44])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[48,2629+40]..[48,2629+44])
                      []
              (typing/tast_iterator.ml[49,2675+4]..[49,2675+55])
                Immutable
                "signature_item" (typing/tast_iterator.ml[49,2675+4]..[49,2675+18])                core_type (typing/tast_iterator.ml[49,2675+20]..[49,2675+54])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[49,2675+20]..[49,2675+28])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[49,2675+20]..[49,2675+28])
                    []
                  core_type (typing/tast_iterator.ml[49,2675+32]..[49,2675+54])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[49,2675+32]..[49,2675+46])
                      Ptyp_constr "signature_item" (typing/tast_iterator.ml[49,2675+32]..[49,2675+46])
                      []
                    core_type (typing/tast_iterator.ml[49,2675+50]..[49,2675+54])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[49,2675+50]..[49,2675+54])
                      []
              (typing/tast_iterator.ml[50,2731+4]..[50,2731+45])
                Immutable
                "structure" (typing/tast_iterator.ml[50,2731+4]..[50,2731+13])                core_type (typing/tast_iterator.ml[50,2731+15]..[50,2731+44])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[50,2731+15]..[50,2731+23])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[50,2731+15]..[50,2731+23])
                    []
                  core_type (typing/tast_iterator.ml[50,2731+27]..[50,2731+44])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[50,2731+27]..[50,2731+36])
                      Ptyp_constr "structure" (typing/tast_iterator.ml[50,2731+27]..[50,2731+36])
                      []
                    core_type (typing/tast_iterator.ml[50,2731+40]..[50,2731+44])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[50,2731+40]..[50,2731+44])
                      []
              (typing/tast_iterator.ml[51,2777+4]..[51,2777+55])
                Immutable
                "structure_item" (typing/tast_iterator.ml[51,2777+4]..[51,2777+18])                core_type (typing/tast_iterator.ml[51,2777+20]..[51,2777+54])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[51,2777+20]..[51,2777+28])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[51,2777+20]..[51,2777+28])
                    []
                  core_type (typing/tast_iterator.ml[51,2777+32]..[51,2777+54])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[51,2777+32]..[51,2777+46])
                      Ptyp_constr "structure_item" (typing/tast_iterator.ml[51,2777+32]..[51,2777+46])
                      []
                    core_type (typing/tast_iterator.ml[51,2777+50]..[51,2777+54])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[51,2777+50]..[51,2777+54])
                      []
              (typing/tast_iterator.ml[52,2833+4]..[52,2833+39])
                Immutable
                "typ" (typing/tast_iterator.ml[52,2833+4]..[52,2833+7])                core_type (typing/tast_iterator.ml[52,2833+9]..[52,2833+38])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[52,2833+9]..[52,2833+17])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[52,2833+9]..[52,2833+17])
                    []
                  core_type (typing/tast_iterator.ml[52,2833+21]..[52,2833+38])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[52,2833+21]..[52,2833+30])
                      Ptyp_constr "core_type" (typing/tast_iterator.ml[52,2833+21]..[52,2833+30])
                      []
                    core_type (typing/tast_iterator.ml[52,2833+34]..[52,2833+38])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[52,2833+34]..[52,2833+38])
                      []
              (typing/tast_iterator.ml[53,2873+4]..[53,2873+59])
                Immutable
                "type_declaration" (typing/tast_iterator.ml[53,2873+4]..[53,2873+20])                core_type (typing/tast_iterator.ml[53,2873+22]..[53,2873+58])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[53,2873+22]..[53,2873+30])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[53,2873+22]..[53,2873+30])
                    []
                  core_type (typing/tast_iterator.ml[53,2873+34]..[53,2873+58])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[53,2873+34]..[53,2873+50])
                      Ptyp_constr "type_declaration" (typing/tast_iterator.ml[53,2873+34]..[53,2873+50])
                      []
                    core_type (typing/tast_iterator.ml[53,2873+54]..[53,2873+58])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[53,2873+54]..[53,2873+58])
                      []
              (typing/tast_iterator.ml[54,2933+4]..[54,2933+78])
                Immutable
                "type_declarations" (typing/tast_iterator.ml[54,2933+4]..[54,2933+21])                core_type (typing/tast_iterator.ml[54,2933+23]..[54,2933+77])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[54,2933+23]..[54,2933+31])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[54,2933+23]..[54,2933+31])
                    []
                  core_type (typing/tast_iterator.ml[54,2933+35]..[54,2933+77])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[54,2933+36]..[54,2933+68])
                      Ptyp_tuple
                      [
                        core_type (typing/tast_iterator.ml[54,2933+36]..[54,2933+44])
                          Ptyp_constr "rec_flag" (typing/tast_iterator.ml[54,2933+36]..[54,2933+44])
                          []
                        core_type (typing/tast_iterator.ml[54,2933+47]..[54,2933+68])
                          Ptyp_constr "list" (typing/tast_iterator.ml[54,2933+64]..[54,2933+68])
                          [
                            core_type (typing/tast_iterator.ml[54,2933+47]..[54,2933+63])
                              Ptyp_constr "type_declaration" (typing/tast_iterator.ml[54,2933+47]..[54,2933+63])
                              []
                          ]
                      ]
                    core_type (typing/tast_iterator.ml[54,2933+73]..[54,2933+77])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[54,2933+73]..[54,2933+77])
                      []
              (typing/tast_iterator.ml[55,3012+4]..[55,3012+55])
                Immutable
                "type_extension" (typing/tast_iterator.ml[55,3012+4]..[55,3012+18])                core_type (typing/tast_iterator.ml[55,3012+20]..[55,3012+54])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[55,3012+20]..[55,3012+28])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[55,3012+20]..[55,3012+28])
                    []
                  core_type (typing/tast_iterator.ml[55,3012+32]..[55,3012+54])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[55,3012+32]..[55,3012+46])
                      Ptyp_constr "type_extension" (typing/tast_iterator.ml[55,3012+32]..[55,3012+46])
                      []
                    core_type (typing/tast_iterator.ml[55,3012+50]..[55,3012+54])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[55,3012+50]..[55,3012+54])
                      []
              (typing/tast_iterator.ml[56,3068+4]..[56,3068+55])
                Immutable
                "type_exception" (typing/tast_iterator.ml[56,3068+4]..[56,3068+18])                core_type (typing/tast_iterator.ml[56,3068+20]..[56,3068+54])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[56,3068+20]..[56,3068+28])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[56,3068+20]..[56,3068+28])
                    []
                  core_type (typing/tast_iterator.ml[56,3068+32]..[56,3068+54])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[56,3068+32]..[56,3068+46])
                      Ptyp_constr "type_exception" (typing/tast_iterator.ml[56,3068+32]..[56,3068+46])
                      []
                    core_type (typing/tast_iterator.ml[56,3068+50]..[56,3068+54])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[56,3068+50]..[56,3068+54])
                      []
              (typing/tast_iterator.ml[57,3124+4]..[57,3124+45])
                Immutable
                "type_kind" (typing/tast_iterator.ml[57,3124+4]..[57,3124+13])                core_type (typing/tast_iterator.ml[57,3124+15]..[57,3124+44])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[57,3124+15]..[57,3124+23])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[57,3124+15]..[57,3124+23])
                    []
                  core_type (typing/tast_iterator.ml[57,3124+27]..[57,3124+44])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[57,3124+27]..[57,3124+36])
                      Ptyp_constr "type_kind" (typing/tast_iterator.ml[57,3124+27]..[57,3124+36])
                      []
                    core_type (typing/tast_iterator.ml[57,3124+40]..[57,3124+44])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[57,3124+40]..[57,3124+44])
                      []
              (typing/tast_iterator.ml[58,3170+4]..[58,3170+53])
                Immutable
                "value_binding" (typing/tast_iterator.ml[58,3170+4]..[58,3170+17])                core_type (typing/tast_iterator.ml[58,3170+19]..[58,3170+52])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[58,3170+19]..[58,3170+27])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[58,3170+19]..[58,3170+27])
                    []
                  core_type (typing/tast_iterator.ml[58,3170+31]..[58,3170+52])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[58,3170+31]..[58,3170+44])
                      Ptyp_constr "value_binding" (typing/tast_iterator.ml[58,3170+31]..[58,3170+44])
                      []
                    core_type (typing/tast_iterator.ml[58,3170+48]..[58,3170+52])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[58,3170+48]..[58,3170+52])
                      []
              (typing/tast_iterator.ml[59,3224+4]..[59,3224+72])
                Immutable
                "value_bindings" (typing/tast_iterator.ml[59,3224+4]..[59,3224+18])                core_type (typing/tast_iterator.ml[59,3224+20]..[59,3224+71])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[59,3224+20]..[59,3224+28])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[59,3224+20]..[59,3224+28])
                    []
                  core_type (typing/tast_iterator.ml[59,3224+32]..[59,3224+71])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[59,3224+33]..[59,3224+62])
                      Ptyp_tuple
                      [
                        core_type (typing/tast_iterator.ml[59,3224+33]..[59,3224+41])
                          Ptyp_constr "rec_flag" (typing/tast_iterator.ml[59,3224+33]..[59,3224+41])
                          []
                        core_type (typing/tast_iterator.ml[59,3224+44]..[59,3224+62])
                          Ptyp_constr "list" (typing/tast_iterator.ml[59,3224+58]..[59,3224+62])
                          [
                            core_type (typing/tast_iterator.ml[59,3224+44]..[59,3224+57])
                              Ptyp_constr "value_binding" (typing/tast_iterator.ml[59,3224+44]..[59,3224+57])
                              []
                          ]
                      ]
                    core_type (typing/tast_iterator.ml[59,3224+67]..[59,3224+71])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[59,3224+67]..[59,3224+71])
                      []
              (typing/tast_iterator.ml[60,3297+4]..[60,3297+61])
                Immutable
                "value_description" (typing/tast_iterator.ml[60,3297+4]..[60,3297+21])                core_type (typing/tast_iterator.ml[60,3297+23]..[60,3297+60])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[60,3297+23]..[60,3297+31])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[60,3297+23]..[60,3297+31])
                    []
                  core_type (typing/tast_iterator.ml[60,3297+35]..[60,3297+60])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[60,3297+35]..[60,3297+52])
                      Ptyp_constr "value_description" (typing/tast_iterator.ml[60,3297+35]..[60,3297+52])
                      []
                    core_type (typing/tast_iterator.ml[60,3297+56]..[60,3297+60])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[60,3297+56]..[60,3297+60])
                      []
              (typing/tast_iterator.ml[61,3359+4]..[61,3359+57])
                Immutable
                "with_constraint" (typing/tast_iterator.ml[61,3359+4]..[61,3359+19])                core_type (typing/tast_iterator.ml[61,3359+21]..[61,3359+56])
                  Ptyp_arrow
                  Nolabel
                  core_type (typing/tast_iterator.ml[61,3359+21]..[61,3359+29])
                    Ptyp_constr "iterator" (typing/tast_iterator.ml[61,3359+21]..[61,3359+29])
                    []
                  core_type (typing/tast_iterator.ml[61,3359+33]..[61,3359+56])
                    Ptyp_arrow
                    Nolabel
                    core_type (typing/tast_iterator.ml[61,3359+33]..[61,3359+48])
                      Ptyp_constr "with_constraint" (typing/tast_iterator.ml[61,3359+33]..[61,3359+48])
                      []
                    core_type (typing/tast_iterator.ml[61,3359+52]..[61,3359+56])
                      Ptyp_constr "unit" (typing/tast_iterator.ml[61,3359+52]..[61,3359+56])
                      []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (typing/tast_iterator.ml[64,3422+0]..[66,3520+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[64,3422+4]..[64,3422+13])
          Ppat_var "structure" (typing/tast_iterator.ml[64,3422+4]..[64,3422+13])
        expression (typing/tast_iterator.ml[64,3422+14]..[66,3520+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[64,3422+14]..[64,3422+17])
            Ppat_var "sub" (typing/tast_iterator.ml[64,3422+14]..[64,3422+17])
          expression (typing/tast_iterator.ml[64,3422+18]..[66,3520+27]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[64,3422+18]..[64,3422+47])
              Ppat_record Open
              [
                "str_items" (typing/tast_iterator.ml[64,3422+19]..[64,3422+28]) ghost
                  pattern (typing/tast_iterator.ml[64,3422+19]..[64,3422+28])
                    Ppat_var "str_items" (typing/tast_iterator.ml[64,3422+19]..[64,3422+28])
                "str_final_env" (typing/tast_iterator.ml[64,3422+30]..[64,3422+43]) ghost
                  pattern (typing/tast_iterator.ml[64,3422+30]..[64,3422+43])
                    Ppat_var "str_final_env" (typing/tast_iterator.ml[64,3422+30]..[64,3422+43])
              ]
            expression (typing/tast_iterator.ml[65,3472+2]..[66,3520+27])
              Pexp_sequence
              expression (typing/tast_iterator.ml[65,3472+2]..[65,3472+46])
                Pexp_apply
                expression (typing/tast_iterator.ml[65,3472+2]..[65,3472+11])
                  Pexp_ident "List.iter" (typing/tast_iterator.ml[65,3472+2]..[65,3472+11])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[65,3472+12]..[65,3472+36])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[65,3472+13]..[65,3472+31])
                        Pexp_field
                        expression (typing/tast_iterator.ml[65,3472+13]..[65,3472+16])
                          Pexp_ident "sub" (typing/tast_iterator.ml[65,3472+13]..[65,3472+16])
                        "structure_item" (typing/tast_iterator.ml[65,3472+17]..[65,3472+31])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[65,3472+32]..[65,3472+35])
                            Pexp_ident "sub" (typing/tast_iterator.ml[65,3472+32]..[65,3472+35])
                      ]
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[65,3472+37]..[65,3472+46])
                      Pexp_ident "str_items" (typing/tast_iterator.ml[65,3472+37]..[65,3472+46])
                ]
              expression (typing/tast_iterator.ml[66,3520+2]..[66,3520+27])
                Pexp_apply
                expression (typing/tast_iterator.ml[66,3520+2]..[66,3520+9])
                  Pexp_field
                  expression (typing/tast_iterator.ml[66,3520+2]..[66,3520+5])
                    Pexp_ident "sub" (typing/tast_iterator.ml[66,3520+2]..[66,3520+5])
                  "env" (typing/tast_iterator.ml[66,3520+6]..[66,3520+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[66,3520+10]..[66,3520+13])
                      Pexp_ident "sub" (typing/tast_iterator.ml[66,3520+10]..[66,3520+13])
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[66,3520+14]..[66,3520+27])
                      Pexp_ident "str_final_env" (typing/tast_iterator.ml[66,3520+14]..[66,3520+27])
                ]
    ]
  structure_item (typing/tast_iterator.ml[68,3549+0]..[70,3632+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[68,3549+4]..[68,3549+15])
          Ppat_var "class_infos" (typing/tast_iterator.ml[68,3549+4]..[68,3549+15])
        expression (typing/tast_iterator.ml[68,3549+16]..[70,3632+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[68,3549+16]..[68,3549+19])
            Ppat_var "sub" (typing/tast_iterator.ml[68,3549+16]..[68,3549+19])
          expression (typing/tast_iterator.ml[68,3549+20]..[70,3632+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[68,3549+20]..[68,3549+21])
              Ppat_var "f" (typing/tast_iterator.ml[68,3549+20]..[68,3549+21])
            expression (typing/tast_iterator.ml[68,3549+22]..[70,3632+13]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (typing/tast_iterator.ml[68,3549+22]..[68,3549+23])
                Ppat_var "x" (typing/tast_iterator.ml[68,3549+22]..[68,3549+23])
              expression (typing/tast_iterator.ml[69,3575+2]..[70,3632+13])
                Pexp_sequence
                expression (typing/tast_iterator.ml[69,3575+2]..[69,3575+55])
                  Pexp_apply
                  expression (typing/tast_iterator.ml[69,3575+2]..[69,3575+11])
                    Pexp_ident "List.iter" (typing/tast_iterator.ml[69,3575+2]..[69,3575+11])
                  [
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[69,3575+12]..[69,3575+43])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/tast_iterator.ml[69,3575+17]..[69,3575+24])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[69,3575+18]..[69,3575+20])
                              Ppat_var "ct" (typing/tast_iterator.ml[69,3575+18]..[69,3575+20])
                            pattern (typing/tast_iterator.ml[69,3575+22]..[69,3575+23])
                              Ppat_any
                          ]
                        expression (typing/tast_iterator.ml[69,3575+28]..[69,3575+42])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[69,3575+28]..[69,3575+35])
                            Pexp_field
                            expression (typing/tast_iterator.ml[69,3575+28]..[69,3575+31])
                              Pexp_ident "sub" (typing/tast_iterator.ml[69,3575+28]..[69,3575+31])
                            "typ" (typing/tast_iterator.ml[69,3575+32]..[69,3575+35])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[69,3575+36]..[69,3575+39])
                                Pexp_ident "sub" (typing/tast_iterator.ml[69,3575+36]..[69,3575+39])
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[69,3575+40]..[69,3575+42])
                                Pexp_ident "ct" (typing/tast_iterator.ml[69,3575+40]..[69,3575+42])
                          ]
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[69,3575+44]..[69,3575+55])
                        Pexp_field
                        expression (typing/tast_iterator.ml[69,3575+44]..[69,3575+45])
                          Pexp_ident "x" (typing/tast_iterator.ml[69,3575+44]..[69,3575+45])
                        "ci_params" (typing/tast_iterator.ml[69,3575+46]..[69,3575+55])
                  ]
                expression (typing/tast_iterator.ml[70,3632+2]..[70,3632+13])
                  Pexp_apply
                  expression (typing/tast_iterator.ml[70,3632+2]..[70,3632+3])
                    Pexp_ident "f" (typing/tast_iterator.ml[70,3632+2]..[70,3632+3])
                  [
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[70,3632+4]..[70,3632+13])
                        Pexp_field
                        expression (typing/tast_iterator.ml[70,3632+4]..[70,3632+5])
                          Pexp_ident "x" (typing/tast_iterator.ml[70,3632+4]..[70,3632+5])
                        "ci_expr" (typing/tast_iterator.ml[70,3632+6]..[70,3632+13])
                  ]
    ]
  structure_item (typing/tast_iterator.ml[72,3647+0]..[73,3695+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[72,3647+4]..[72,3647+27])
          Ppat_var "module_type_declaration" (typing/tast_iterator.ml[72,3647+4]..[72,3647+27])
        expression (typing/tast_iterator.ml[72,3647+28]..[73,3695+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[72,3647+28]..[72,3647+31])
            Ppat_var "sub" (typing/tast_iterator.ml[72,3647+28]..[72,3647+31])
          expression (typing/tast_iterator.ml[72,3647+32]..[73,3695+44]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[72,3647+32]..[72,3647+45])
              Ppat_record Open
              [
                "mtd_type" (typing/tast_iterator.ml[72,3647+33]..[72,3647+41]) ghost
                  pattern (typing/tast_iterator.ml[72,3647+33]..[72,3647+41])
                    Ppat_var "mtd_type" (typing/tast_iterator.ml[72,3647+33]..[72,3647+41])
              ]
            expression (typing/tast_iterator.ml[73,3695+2]..[73,3695+44])
              Pexp_apply
              expression (typing/tast_iterator.ml[73,3695+2]..[73,3695+13])
                Pexp_ident "Option.iter" (typing/tast_iterator.ml[73,3695+2]..[73,3695+13])
              [
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[73,3695+14]..[73,3695+35])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[73,3695+15]..[73,3695+30])
                      Pexp_field
                      expression (typing/tast_iterator.ml[73,3695+15]..[73,3695+18])
                        Pexp_ident "sub" (typing/tast_iterator.ml[73,3695+15]..[73,3695+18])
                      "module_type" (typing/tast_iterator.ml[73,3695+19]..[73,3695+30])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[73,3695+31]..[73,3695+34])
                          Pexp_ident "sub" (typing/tast_iterator.ml[73,3695+31]..[73,3695+34])
                    ]
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[73,3695+36]..[73,3695+44])
                    Pexp_ident "mtd_type" (typing/tast_iterator.ml[73,3695+36]..[73,3695+44])
              ]
    ]
  structure_item (typing/tast_iterator.ml[75,3741+0]..[76,3783+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[75,3741+4]..[75,3741+22])
          Ppat_var "module_declaration" (typing/tast_iterator.ml[75,3741+4]..[75,3741+22])
        expression (typing/tast_iterator.ml[75,3741+23]..[76,3783+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[75,3741+23]..[75,3741+26])
            Ppat_var "sub" (typing/tast_iterator.ml[75,3741+23]..[75,3741+26])
          expression (typing/tast_iterator.ml[75,3741+27]..[76,3783+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[75,3741+27]..[75,3741+39])
              Ppat_record Open
              [
                "md_type" (typing/tast_iterator.ml[75,3741+28]..[75,3741+35]) ghost
                  pattern (typing/tast_iterator.ml[75,3741+28]..[75,3741+35])
                    Ppat_var "md_type" (typing/tast_iterator.ml[75,3741+28]..[75,3741+35])
              ]
            expression (typing/tast_iterator.ml[76,3783+2]..[76,3783+29])
              Pexp_apply
              expression (typing/tast_iterator.ml[76,3783+2]..[76,3783+17])
                Pexp_field
                expression (typing/tast_iterator.ml[76,3783+2]..[76,3783+5])
                  Pexp_ident "sub" (typing/tast_iterator.ml[76,3783+2]..[76,3783+5])
                "module_type" (typing/tast_iterator.ml[76,3783+6]..[76,3783+17])
              [
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[76,3783+18]..[76,3783+21])
                    Pexp_ident "sub" (typing/tast_iterator.ml[76,3783+18]..[76,3783+21])
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[76,3783+22]..[76,3783+29])
                    Pexp_ident "md_type" (typing/tast_iterator.ml[76,3783+22]..[76,3783+29])
              ]
    ]
  structure_item (typing/tast_iterator.ml[77,3813+0]..[77,3813+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[77,3813+4]..[77,3813+23])
          Ppat_var "module_substitution" (typing/tast_iterator.ml[77,3813+4]..[77,3813+23])
        expression (typing/tast_iterator.ml[77,3813+24]..[77,3813+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[77,3813+24]..[77,3813+25])
            Ppat_any
          expression (typing/tast_iterator.ml[77,3813+26]..[77,3813+32]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[77,3813+26]..[77,3813+27])
              Ppat_any
            expression (typing/tast_iterator.ml[77,3813+30]..[77,3813+32])
              Pexp_construct "()" (typing/tast_iterator.ml[77,3813+30]..[77,3813+32])
              None
    ]
  structure_item (typing/tast_iterator.ml[79,3847+0]..[79,3847+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[79,3847+4]..[79,3847+17])
          Ppat_var "include_infos" (typing/tast_iterator.ml[79,3847+4]..[79,3847+17])
        expression (typing/tast_iterator.ml[79,3847+18]..[79,3847+46]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[79,3847+18]..[79,3847+19])
            Ppat_var "f" (typing/tast_iterator.ml[79,3847+18]..[79,3847+19])
          expression (typing/tast_iterator.ml[79,3847+20]..[79,3847+46]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[79,3847+20]..[79,3847+33])
              Ppat_record Open
              [
                "incl_mod" (typing/tast_iterator.ml[79,3847+21]..[79,3847+29]) ghost
                  pattern (typing/tast_iterator.ml[79,3847+21]..[79,3847+29])
                    Ppat_var "incl_mod" (typing/tast_iterator.ml[79,3847+21]..[79,3847+29])
              ]
            expression (typing/tast_iterator.ml[79,3847+36]..[79,3847+46])
              Pexp_apply
              expression (typing/tast_iterator.ml[79,3847+36]..[79,3847+37])
                Pexp_ident "f" (typing/tast_iterator.ml[79,3847+36]..[79,3847+37])
              [
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[79,3847+38]..[79,3847+46])
                    Pexp_ident "incl_mod" (typing/tast_iterator.ml[79,3847+38]..[79,3847+46])
              ]
    ]
  structure_item (typing/tast_iterator.ml[81,3895+0]..[82,3930+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[81,3895+4]..[81,3895+26])
          Ppat_var "class_type_declaration" (typing/tast_iterator.ml[81,3895+4]..[81,3895+26])
        expression (typing/tast_iterator.ml[81,3895+27]..[82,3930+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[81,3895+27]..[81,3895+30])
            Ppat_var "sub" (typing/tast_iterator.ml[81,3895+27]..[81,3895+30])
          expression (typing/tast_iterator.ml[81,3895+31]..[82,3930+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[81,3895+31]..[81,3895+32])
              Ppat_var "x" (typing/tast_iterator.ml[81,3895+31]..[81,3895+32])
            expression (typing/tast_iterator.ml[82,3930+2]..[82,3930+40])
              Pexp_apply
              expression (typing/tast_iterator.ml[82,3930+2]..[82,3930+13])
                Pexp_ident "class_infos" (typing/tast_iterator.ml[82,3930+2]..[82,3930+13])
              [
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[82,3930+14]..[82,3930+17])
                    Pexp_ident "sub" (typing/tast_iterator.ml[82,3930+14]..[82,3930+17])
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[82,3930+18]..[82,3930+38])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[82,3930+19]..[82,3930+33])
                      Pexp_field
                      expression (typing/tast_iterator.ml[82,3930+19]..[82,3930+22])
                        Pexp_ident "sub" (typing/tast_iterator.ml[82,3930+19]..[82,3930+22])
                      "class_type" (typing/tast_iterator.ml[82,3930+23]..[82,3930+33])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[82,3930+34]..[82,3930+37])
                          Pexp_ident "sub" (typing/tast_iterator.ml[82,3930+34]..[82,3930+37])
                    ]
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[82,3930+39]..[82,3930+40])
                    Pexp_ident "x" (typing/tast_iterator.ml[82,3930+39]..[82,3930+40])
              ]
    ]
  structure_item (typing/tast_iterator.ml[84,3972+0]..[85,4002+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[84,3972+4]..[84,3972+21])
          Ppat_var "class_declaration" (typing/tast_iterator.ml[84,3972+4]..[84,3972+21])
        expression (typing/tast_iterator.ml[84,3972+22]..[85,4002+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[84,3972+22]..[84,3972+25])
            Ppat_var "sub" (typing/tast_iterator.ml[84,3972+22]..[84,3972+25])
          expression (typing/tast_iterator.ml[84,3972+26]..[85,4002+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[84,3972+26]..[84,3972+27])
              Ppat_var "x" (typing/tast_iterator.ml[84,3972+26]..[84,3972+27])
            expression (typing/tast_iterator.ml[85,4002+2]..[85,4002+40])
              Pexp_apply
              expression (typing/tast_iterator.ml[85,4002+2]..[85,4002+13])
                Pexp_ident "class_infos" (typing/tast_iterator.ml[85,4002+2]..[85,4002+13])
              [
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[85,4002+14]..[85,4002+17])
                    Pexp_ident "sub" (typing/tast_iterator.ml[85,4002+14]..[85,4002+17])
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[85,4002+18]..[85,4002+38])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[85,4002+19]..[85,4002+33])
                      Pexp_field
                      expression (typing/tast_iterator.ml[85,4002+19]..[85,4002+22])
                        Pexp_ident "sub" (typing/tast_iterator.ml[85,4002+19]..[85,4002+22])
                      "class_expr" (typing/tast_iterator.ml[85,4002+23]..[85,4002+33])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[85,4002+34]..[85,4002+37])
                          Pexp_ident "sub" (typing/tast_iterator.ml[85,4002+34]..[85,4002+37])
                    ]
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[85,4002+39]..[85,4002+40])
                    Pexp_ident "x" (typing/tast_iterator.ml[85,4002+39]..[85,4002+40])
              ]
    ]
  structure_item (typing/tast_iterator.ml[87,4044+0]..[105,4971+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[87,4044+4]..[87,4044+18])
          Ppat_var "structure_item" (typing/tast_iterator.ml[87,4044+4]..[87,4044+18])
        expression (typing/tast_iterator.ml[87,4044+19]..[105,4971+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[87,4044+19]..[87,4044+22])
            Ppat_var "sub" (typing/tast_iterator.ml[87,4044+19]..[87,4044+22])
          expression (typing/tast_iterator.ml[87,4044+23]..[105,4971+26]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[87,4044+23]..[87,4044+45])
              Ppat_record Open
              [
                "str_desc" (typing/tast_iterator.ml[87,4044+24]..[87,4044+32]) ghost
                  pattern (typing/tast_iterator.ml[87,4044+24]..[87,4044+32])
                    Ppat_var "str_desc" (typing/tast_iterator.ml[87,4044+24]..[87,4044+32])
                "str_env" (typing/tast_iterator.ml[87,4044+34]..[87,4044+41]) ghost
                  pattern (typing/tast_iterator.ml[87,4044+34]..[87,4044+41])
                    Ppat_var "str_env" (typing/tast_iterator.ml[87,4044+34]..[87,4044+41])
              ]
            expression (typing/tast_iterator.ml[88,4092+2]..[105,4971+26])
              Pexp_sequence
              expression (typing/tast_iterator.ml[88,4092+2]..[88,4092+21])
                Pexp_apply
                expression (typing/tast_iterator.ml[88,4092+2]..[88,4092+9])
                  Pexp_field
                  expression (typing/tast_iterator.ml[88,4092+2]..[88,4092+5])
                    Pexp_ident "sub" (typing/tast_iterator.ml[88,4092+2]..[88,4092+5])
                  "env" (typing/tast_iterator.ml[88,4092+6]..[88,4092+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[88,4092+10]..[88,4092+13])
                      Pexp_ident "sub" (typing/tast_iterator.ml[88,4092+10]..[88,4092+13])
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[88,4092+14]..[88,4092+21])
                      Pexp_ident "str_env" (typing/tast_iterator.ml[88,4092+14]..[88,4092+21])
                ]
              expression (typing/tast_iterator.ml[89,4115+2]..[105,4971+26])
                Pexp_match
                expression (typing/tast_iterator.ml[89,4115+8]..[89,4115+16])
                  Pexp_ident "str_desc" (typing/tast_iterator.ml[89,4115+8]..[89,4115+16])
                [
                  <case>
                    pattern (typing/tast_iterator.ml[90,4137+4]..[90,4137+24])
                      Ppat_construct "Tstr_eval" (typing/tast_iterator.ml[90,4137+4]..[90,4137+13])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[90,4137+16]..[90,4137+24])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[90,4137+17]..[90,4137+20])
                              Ppat_var "exp" (typing/tast_iterator.ml[90,4137+17]..[90,4137+20])
                            pattern (typing/tast_iterator.ml[90,4137+22]..[90,4137+23])
                              Ppat_any
                          ]
                    expression (typing/tast_iterator.ml[90,4137+28]..[90,4137+44])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[90,4137+28]..[90,4137+36])
                        Pexp_field
                        expression (typing/tast_iterator.ml[90,4137+28]..[90,4137+31])
                          Pexp_ident "sub" (typing/tast_iterator.ml[90,4137+28]..[90,4137+31])
                        "expr" (typing/tast_iterator.ml[90,4137+32]..[90,4137+36])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[90,4137+37]..[90,4137+40])
                            Pexp_ident "sub" (typing/tast_iterator.ml[90,4137+37]..[90,4137+40])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[90,4137+41]..[90,4137+44])
                            Pexp_ident "exp" (typing/tast_iterator.ml[90,4137+41]..[90,4137+44])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[91,4182+4]..[91,4182+32])
                      Ppat_construct "Tstr_value" (typing/tast_iterator.ml[91,4182+4]..[91,4182+14])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[91,4182+16]..[91,4182+32])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[91,4182+17]..[91,4182+25])
                              Ppat_var "rec_flag" (typing/tast_iterator.ml[91,4182+17]..[91,4182+25])
                            pattern (typing/tast_iterator.ml[91,4182+27]..[91,4182+31])
                              Ppat_var "list" (typing/tast_iterator.ml[91,4182+27]..[91,4182+31])
                          ]
                    expression (typing/tast_iterator.ml[91,4182+36]..[91,4182+75])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[91,4182+36]..[91,4182+54])
                        Pexp_field
                        expression (typing/tast_iterator.ml[91,4182+36]..[91,4182+39])
                          Pexp_ident "sub" (typing/tast_iterator.ml[91,4182+36]..[91,4182+39])
                        "value_bindings" (typing/tast_iterator.ml[91,4182+40]..[91,4182+54])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[91,4182+55]..[91,4182+58])
                            Pexp_ident "sub" (typing/tast_iterator.ml[91,4182+55]..[91,4182+58])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[91,4182+59]..[91,4182+75])
                            Pexp_tuple
                            [
                              expression (typing/tast_iterator.ml[91,4182+60]..[91,4182+68])
                                Pexp_ident "rec_flag" (typing/tast_iterator.ml[91,4182+60]..[91,4182+68])
                              expression (typing/tast_iterator.ml[91,4182+70]..[91,4182+74])
                                Pexp_ident "list" (typing/tast_iterator.ml[91,4182+70]..[91,4182+74])
                            ]
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[92,4258+4]..[92,4258+20])
                      Ppat_construct "Tstr_primitive" (typing/tast_iterator.ml[92,4258+4]..[92,4258+18])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[92,4258+19]..[92,4258+20])
                          Ppat_var "v" (typing/tast_iterator.ml[92,4258+19]..[92,4258+20])
                    expression (typing/tast_iterator.ml[92,4258+24]..[92,4258+51])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[92,4258+24]..[92,4258+45])
                        Pexp_field
                        expression (typing/tast_iterator.ml[92,4258+24]..[92,4258+27])
                          Pexp_ident "sub" (typing/tast_iterator.ml[92,4258+24]..[92,4258+27])
                        "value_description" (typing/tast_iterator.ml[92,4258+28]..[92,4258+45])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[92,4258+46]..[92,4258+49])
                            Pexp_ident "sub" (typing/tast_iterator.ml[92,4258+46]..[92,4258+49])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[92,4258+50]..[92,4258+51])
                            Pexp_ident "v" (typing/tast_iterator.ml[92,4258+50]..[92,4258+51])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[93,4310+4]..[93,4310+30])
                      Ppat_construct "Tstr_type" (typing/tast_iterator.ml[93,4310+4]..[93,4310+13])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[93,4310+14]..[93,4310+30])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[93,4310+15]..[93,4310+23])
                              Ppat_var "rec_flag" (typing/tast_iterator.ml[93,4310+15]..[93,4310+23])
                            pattern (typing/tast_iterator.ml[93,4310+25]..[93,4310+29])
                              Ppat_var "list" (typing/tast_iterator.ml[93,4310+25]..[93,4310+29])
                          ]
                    expression (typing/tast_iterator.ml[93,4310+34]..[93,4310+76])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[93,4310+34]..[93,4310+55])
                        Pexp_field
                        expression (typing/tast_iterator.ml[93,4310+34]..[93,4310+37])
                          Pexp_ident "sub" (typing/tast_iterator.ml[93,4310+34]..[93,4310+37])
                        "type_declarations" (typing/tast_iterator.ml[93,4310+38]..[93,4310+55])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[93,4310+56]..[93,4310+59])
                            Pexp_ident "sub" (typing/tast_iterator.ml[93,4310+56]..[93,4310+59])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[93,4310+60]..[93,4310+76])
                            Pexp_tuple
                            [
                              expression (typing/tast_iterator.ml[93,4310+61]..[93,4310+69])
                                Pexp_ident "rec_flag" (typing/tast_iterator.ml[93,4310+61]..[93,4310+69])
                              expression (typing/tast_iterator.ml[93,4310+71]..[93,4310+75])
                                Pexp_ident "list" (typing/tast_iterator.ml[93,4310+71]..[93,4310+75])
                            ]
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[94,4387+4]..[94,4387+18])
                      Ppat_construct "Tstr_typext" (typing/tast_iterator.ml[94,4387+4]..[94,4387+15])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[94,4387+16]..[94,4387+18])
                          Ppat_var "te" (typing/tast_iterator.ml[94,4387+16]..[94,4387+18])
                    expression (typing/tast_iterator.ml[94,4387+22]..[94,4387+47])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[94,4387+22]..[94,4387+40])
                        Pexp_field
                        expression (typing/tast_iterator.ml[94,4387+22]..[94,4387+25])
                          Pexp_ident "sub" (typing/tast_iterator.ml[94,4387+22]..[94,4387+25])
                        "type_extension" (typing/tast_iterator.ml[94,4387+26]..[94,4387+40])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[94,4387+41]..[94,4387+44])
                            Pexp_ident "sub" (typing/tast_iterator.ml[94,4387+41]..[94,4387+44])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[94,4387+45]..[94,4387+47])
                            Pexp_ident "te" (typing/tast_iterator.ml[94,4387+45]..[94,4387+47])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[95,4435+4]..[95,4435+22])
                      Ppat_construct "Tstr_exception" (typing/tast_iterator.ml[95,4435+4]..[95,4435+18])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[95,4435+19]..[95,4435+22])
                          Ppat_var "ext" (typing/tast_iterator.ml[95,4435+19]..[95,4435+22])
                    expression (typing/tast_iterator.ml[95,4435+26]..[95,4435+52])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[95,4435+26]..[95,4435+44])
                        Pexp_field
                        expression (typing/tast_iterator.ml[95,4435+26]..[95,4435+29])
                          Pexp_ident "sub" (typing/tast_iterator.ml[95,4435+26]..[95,4435+29])
                        "type_exception" (typing/tast_iterator.ml[95,4435+30]..[95,4435+44])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[95,4435+45]..[95,4435+48])
                            Pexp_ident "sub" (typing/tast_iterator.ml[95,4435+45]..[95,4435+48])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[95,4435+49]..[95,4435+52])
                            Pexp_ident "ext" (typing/tast_iterator.ml[95,4435+49]..[95,4435+52])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[96,4488+4]..[96,4488+18])
                      Ppat_construct "Tstr_module" (typing/tast_iterator.ml[96,4488+4]..[96,4488+15])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[96,4488+16]..[96,4488+18])
                          Ppat_var "mb" (typing/tast_iterator.ml[96,4488+16]..[96,4488+18])
                    expression (typing/tast_iterator.ml[96,4488+22]..[96,4488+47])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[96,4488+22]..[96,4488+40])
                        Pexp_field
                        expression (typing/tast_iterator.ml[96,4488+22]..[96,4488+25])
                          Pexp_ident "sub" (typing/tast_iterator.ml[96,4488+22]..[96,4488+25])
                        "module_binding" (typing/tast_iterator.ml[96,4488+26]..[96,4488+40])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[96,4488+41]..[96,4488+44])
                            Pexp_ident "sub" (typing/tast_iterator.ml[96,4488+41]..[96,4488+44])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[96,4488+45]..[96,4488+47])
                            Pexp_ident "mb" (typing/tast_iterator.ml[96,4488+45]..[96,4488+47])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[97,4536+4]..[97,4536+23])
                      Ppat_construct "Tstr_recmodule" (typing/tast_iterator.ml[97,4536+4]..[97,4536+18])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[97,4536+19]..[97,4536+23])
                          Ppat_var "list" (typing/tast_iterator.ml[97,4536+19]..[97,4536+23])
                    expression (typing/tast_iterator.ml[97,4536+27]..[97,4536+66])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[97,4536+27]..[97,4536+36])
                        Pexp_ident "List.iter" (typing/tast_iterator.ml[97,4536+27]..[97,4536+36])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[97,4536+37]..[97,4536+61])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[97,4536+38]..[97,4536+56])
                              Pexp_field
                              expression (typing/tast_iterator.ml[97,4536+38]..[97,4536+41])
                                Pexp_ident "sub" (typing/tast_iterator.ml[97,4536+38]..[97,4536+41])
                              "module_binding" (typing/tast_iterator.ml[97,4536+42]..[97,4536+56])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[97,4536+57]..[97,4536+60])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[97,4536+57]..[97,4536+60])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[97,4536+62]..[97,4536+66])
                            Pexp_ident "list" (typing/tast_iterator.ml[97,4536+62]..[97,4536+66])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[98,4603+4]..[98,4603+18])
                      Ppat_construct "Tstr_modtype" (typing/tast_iterator.ml[98,4603+4]..[98,4603+16])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[98,4603+17]..[98,4603+18])
                          Ppat_var "x" (typing/tast_iterator.ml[98,4603+17]..[98,4603+18])
                    expression (typing/tast_iterator.ml[98,4603+22]..[98,4603+55])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[98,4603+22]..[98,4603+49])
                        Pexp_field
                        expression (typing/tast_iterator.ml[98,4603+22]..[98,4603+25])
                          Pexp_ident "sub" (typing/tast_iterator.ml[98,4603+22]..[98,4603+25])
                        "module_type_declaration" (typing/tast_iterator.ml[98,4603+26]..[98,4603+49])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[98,4603+50]..[98,4603+53])
                            Pexp_ident "sub" (typing/tast_iterator.ml[98,4603+50]..[98,4603+53])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[98,4603+54]..[98,4603+55])
                            Pexp_ident "x" (typing/tast_iterator.ml[98,4603+54]..[98,4603+55])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[99,4659+4]..[99,4659+19])
                      Ppat_construct "Tstr_class" (typing/tast_iterator.ml[99,4659+4]..[99,4659+14])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[99,4659+15]..[99,4659+19])
                          Ppat_var "list" (typing/tast_iterator.ml[99,4659+15]..[99,4659+19])
                    expression (typing/tast_iterator.ml[100,4682+6]..[100,4682+67])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[100,4682+6]..[100,4682+15])
                        Pexp_ident "List.iter" (typing/tast_iterator.ml[100,4682+6]..[100,4682+15])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[100,4682+16]..[100,4682+62])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/tast_iterator.ml[100,4682+21]..[100,4682+28])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[100,4682+22]..[100,4682+25])
                                  Ppat_var "cls" (typing/tast_iterator.ml[100,4682+22]..[100,4682+25])
                                pattern (typing/tast_iterator.ml[100,4682+26]..[100,4682+27])
                                  Ppat_any
                              ]
                            expression (typing/tast_iterator.ml[100,4682+32]..[100,4682+61])
                              Pexp_apply
                              expression (typing/tast_iterator.ml[100,4682+32]..[100,4682+53])
                                Pexp_field
                                expression (typing/tast_iterator.ml[100,4682+32]..[100,4682+35])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[100,4682+32]..[100,4682+35])
                                "class_declaration" (typing/tast_iterator.ml[100,4682+36]..[100,4682+53])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[100,4682+54]..[100,4682+57])
                                    Pexp_ident "sub" (typing/tast_iterator.ml[100,4682+54]..[100,4682+57])
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[100,4682+58]..[100,4682+61])
                                    Pexp_ident "cls" (typing/tast_iterator.ml[100,4682+58]..[100,4682+61])
                              ]
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[100,4682+63]..[100,4682+67])
                            Pexp_ident "list" (typing/tast_iterator.ml[100,4682+63]..[100,4682+67])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[101,4750+4]..[101,4750+24])
                      Ppat_construct "Tstr_class_type" (typing/tast_iterator.ml[101,4750+4]..[101,4750+19])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[101,4750+20]..[101,4750+24])
                          Ppat_var "list" (typing/tast_iterator.ml[101,4750+20]..[101,4750+24])
                    expression (typing/tast_iterator.ml[102,4778+6]..[102,4778+78])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[102,4778+6]..[102,4778+15])
                        Pexp_ident "List.iter" (typing/tast_iterator.ml[102,4778+6]..[102,4778+15])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[102,4778+16]..[102,4778+73])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (typing/tast_iterator.ml[102,4778+21]..[102,4778+33])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[102,4778+22]..[102,4778+23])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[102,4778+25]..[102,4778+26])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[102,4778+28]..[102,4778+32])
                                  Ppat_var "cltd" (typing/tast_iterator.ml[102,4778+28]..[102,4778+32])
                              ]
                            expression (typing/tast_iterator.ml[102,4778+37]..[102,4778+72])
                              Pexp_apply
                              expression (typing/tast_iterator.ml[102,4778+37]..[102,4778+63])
                                Pexp_field
                                expression (typing/tast_iterator.ml[102,4778+37]..[102,4778+40])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[102,4778+37]..[102,4778+40])
                                "class_type_declaration" (typing/tast_iterator.ml[102,4778+41]..[102,4778+63])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[102,4778+64]..[102,4778+67])
                                    Pexp_ident "sub" (typing/tast_iterator.ml[102,4778+64]..[102,4778+67])
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[102,4778+68]..[102,4778+72])
                                    Pexp_ident "cltd" (typing/tast_iterator.ml[102,4778+68]..[102,4778+72])
                              ]
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[102,4778+74]..[102,4778+78])
                            Pexp_ident "list" (typing/tast_iterator.ml[102,4778+74]..[102,4778+78])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[103,4857+4]..[103,4857+21])
                      Ppat_construct "Tstr_include" (typing/tast_iterator.ml[103,4857+4]..[103,4857+16])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[103,4857+17]..[103,4857+21])
                          Ppat_var "incl" (typing/tast_iterator.ml[103,4857+17]..[103,4857+21])
                    expression (typing/tast_iterator.ml[103,4857+25]..[103,4857+65])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[103,4857+25]..[103,4857+38])
                        Pexp_ident "include_infos" (typing/tast_iterator.ml[103,4857+25]..[103,4857+38])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[103,4857+39]..[103,4857+60])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[103,4857+40]..[103,4857+55])
                              Pexp_field
                              expression (typing/tast_iterator.ml[103,4857+40]..[103,4857+43])
                                Pexp_ident "sub" (typing/tast_iterator.ml[103,4857+40]..[103,4857+43])
                              "module_expr" (typing/tast_iterator.ml[103,4857+44]..[103,4857+55])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[103,4857+56]..[103,4857+59])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[103,4857+56]..[103,4857+59])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[103,4857+61]..[103,4857+65])
                            Pexp_ident "incl" (typing/tast_iterator.ml[103,4857+61]..[103,4857+65])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[104,4923+4]..[104,4923+16])
                      Ppat_construct "Tstr_open" (typing/tast_iterator.ml[104,4923+4]..[104,4923+13])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[104,4923+14]..[104,4923+16])
                          Ppat_var "od" (typing/tast_iterator.ml[104,4923+14]..[104,4923+16])
                    expression (typing/tast_iterator.ml[104,4923+20]..[104,4923+47])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[104,4923+20]..[104,4923+40])
                        Pexp_field
                        expression (typing/tast_iterator.ml[104,4923+20]..[104,4923+23])
                          Pexp_ident "sub" (typing/tast_iterator.ml[104,4923+20]..[104,4923+23])
                        "open_declaration" (typing/tast_iterator.ml[104,4923+24]..[104,4923+40])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[104,4923+41]..[104,4923+44])
                            Pexp_ident "sub" (typing/tast_iterator.ml[104,4923+41]..[104,4923+44])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[104,4923+45]..[104,4923+47])
                            Pexp_ident "od" (typing/tast_iterator.ml[104,4923+45]..[104,4923+47])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[105,4971+4]..[105,4971+20])
                      Ppat_construct "Tstr_attribute" (typing/tast_iterator.ml[105,4971+4]..[105,4971+18])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[105,4971+19]..[105,4971+20])
                          Ppat_any
                    expression (typing/tast_iterator.ml[105,4971+24]..[105,4971+26])
                      Pexp_construct "()" (typing/tast_iterator.ml[105,4971+24]..[105,4971+26])
                      None
                ]
    ]
  structure_item (typing/tast_iterator.ml[107,4999+0]..[107,4999+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[107,4999+4]..[107,4999+21])
          Ppat_var "value_description" (typing/tast_iterator.ml[107,4999+4]..[107,4999+21])
        expression (typing/tast_iterator.ml[107,4999+22]..[107,4999+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[107,4999+22]..[107,4999+25])
            Ppat_var "sub" (typing/tast_iterator.ml[107,4999+22]..[107,4999+25])
          expression (typing/tast_iterator.ml[107,4999+26]..[107,4999+52]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[107,4999+26]..[107,4999+27])
              Ppat_var "x" (typing/tast_iterator.ml[107,4999+26]..[107,4999+27])
            expression (typing/tast_iterator.ml[107,4999+30]..[107,4999+52])
              Pexp_apply
              expression (typing/tast_iterator.ml[107,4999+30]..[107,4999+37])
                Pexp_field
                expression (typing/tast_iterator.ml[107,4999+30]..[107,4999+33])
                  Pexp_ident "sub" (typing/tast_iterator.ml[107,4999+30]..[107,4999+33])
                "typ" (typing/tast_iterator.ml[107,4999+34]..[107,4999+37])
              [
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[107,4999+38]..[107,4999+41])
                    Pexp_ident "sub" (typing/tast_iterator.ml[107,4999+38]..[107,4999+41])
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[107,4999+42]..[107,4999+52])
                    Pexp_field
                    expression (typing/tast_iterator.ml[107,4999+42]..[107,4999+43])
                      Pexp_ident "x" (typing/tast_iterator.ml[107,4999+42]..[107,4999+43])
                    "val_desc" (typing/tast_iterator.ml[107,4999+44]..[107,4999+52])
              ]
    ]
  structure_item (typing/tast_iterator.ml[109,5053+0]..[109,5053+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[109,5053+4]..[109,5053+14])
          Ppat_var "label_decl" (typing/tast_iterator.ml[109,5053+4]..[109,5053+14])
        expression (typing/tast_iterator.ml[109,5053+15]..[109,5053+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[109,5053+15]..[109,5053+18])
            Ppat_var "sub" (typing/tast_iterator.ml[109,5053+15]..[109,5053+18])
          expression (typing/tast_iterator.ml[109,5053+19]..[109,5053+53]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[109,5053+19]..[109,5053+31])
              Ppat_record Open
              [
                "ld_type" (typing/tast_iterator.ml[109,5053+20]..[109,5053+27]) ghost
                  pattern (typing/tast_iterator.ml[109,5053+20]..[109,5053+27])
                    Ppat_var "ld_type" (typing/tast_iterator.ml[109,5053+20]..[109,5053+27])
              ]
            expression (typing/tast_iterator.ml[109,5053+34]..[109,5053+53])
              Pexp_apply
              expression (typing/tast_iterator.ml[109,5053+34]..[109,5053+41])
                Pexp_field
                expression (typing/tast_iterator.ml[109,5053+34]..[109,5053+37])
                  Pexp_ident "sub" (typing/tast_iterator.ml[109,5053+34]..[109,5053+37])
                "typ" (typing/tast_iterator.ml[109,5053+38]..[109,5053+41])
              [
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[109,5053+42]..[109,5053+45])
                    Pexp_ident "sub" (typing/tast_iterator.ml[109,5053+42]..[109,5053+45])
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[109,5053+46]..[109,5053+53])
                    Pexp_ident "ld_type" (typing/tast_iterator.ml[109,5053+46]..[109,5053+53])
              ]
    ]
  structure_item (typing/tast_iterator.ml[111,5108+0]..[113,5190+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[111,5108+4]..[111,5108+20])
          Ppat_var "constructor_args" (typing/tast_iterator.ml[111,5108+4]..[111,5108+20])
        expression (typing/tast_iterator.ml[111,5108+21]..[113,5190+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[111,5108+21]..[111,5108+24])
            Ppat_var "sub" (typing/tast_iterator.ml[111,5108+21]..[111,5108+24])
          expression (typing/tast_iterator.ml[111,5108+27]..[113,5190+49])
            Pexp_function
            [
              <case>
                pattern (typing/tast_iterator.ml[112,5144+4]..[112,5144+16])
                  Ppat_construct "Cstr_tuple" (typing/tast_iterator.ml[112,5144+4]..[112,5144+14])
                  Some
                    []
                    pattern (typing/tast_iterator.ml[112,5144+15]..[112,5144+16])
                      Ppat_var "l" (typing/tast_iterator.ml[112,5144+15]..[112,5144+16])
                expression (typing/tast_iterator.ml[112,5144+20]..[112,5144+45])
                  Pexp_apply
                  expression (typing/tast_iterator.ml[112,5144+20]..[112,5144+29])
                    Pexp_ident "List.iter" (typing/tast_iterator.ml[112,5144+20]..[112,5144+29])
                  [
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[112,5144+30]..[112,5144+43])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[112,5144+31]..[112,5144+38])
                          Pexp_field
                          expression (typing/tast_iterator.ml[112,5144+31]..[112,5144+34])
                            Pexp_ident "sub" (typing/tast_iterator.ml[112,5144+31]..[112,5144+34])
                          "typ" (typing/tast_iterator.ml[112,5144+35]..[112,5144+38])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[112,5144+39]..[112,5144+42])
                              Pexp_ident "sub" (typing/tast_iterator.ml[112,5144+39]..[112,5144+42])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[112,5144+44]..[112,5144+45])
                        Pexp_ident "l" (typing/tast_iterator.ml[112,5144+44]..[112,5144+45])
                  ]
              <case>
                pattern (typing/tast_iterator.ml[113,5190+4]..[113,5190+17])
                  Ppat_construct "Cstr_record" (typing/tast_iterator.ml[113,5190+4]..[113,5190+15])
                  Some
                    []
                    pattern (typing/tast_iterator.ml[113,5190+16]..[113,5190+17])
                      Ppat_var "l" (typing/tast_iterator.ml[113,5190+16]..[113,5190+17])
                expression (typing/tast_iterator.ml[113,5190+21]..[113,5190+49])
                  Pexp_apply
                  expression (typing/tast_iterator.ml[113,5190+21]..[113,5190+30])
                    Pexp_ident "List.iter" (typing/tast_iterator.ml[113,5190+21]..[113,5190+30])
                  [
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[113,5190+31]..[113,5190+47])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[113,5190+32]..[113,5190+42])
                          Pexp_ident "label_decl" (typing/tast_iterator.ml[113,5190+32]..[113,5190+42])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[113,5190+43]..[113,5190+46])
                              Pexp_ident "sub" (typing/tast_iterator.ml[113,5190+43]..[113,5190+46])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[113,5190+48]..[113,5190+49])
                        Pexp_ident "l" (typing/tast_iterator.ml[113,5190+48]..[113,5190+49])
                  ]
            ]
    ]
  structure_item (typing/tast_iterator.ml[115,5241+0]..[117,5321+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[115,5241+4]..[115,5241+20])
          Ppat_var "constructor_decl" (typing/tast_iterator.ml[115,5241+4]..[115,5241+20])
        expression (typing/tast_iterator.ml[115,5241+21]..[117,5321+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[115,5241+21]..[115,5241+24])
            Ppat_var "sub" (typing/tast_iterator.ml[115,5241+21]..[115,5241+24])
          expression (typing/tast_iterator.ml[115,5241+25]..[117,5321+34]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[115,5241+25]..[115,5241+45])
              Ppat_record Open
              [
                "cd_args" (typing/tast_iterator.ml[115,5241+26]..[115,5241+33]) ghost
                  pattern (typing/tast_iterator.ml[115,5241+26]..[115,5241+33])
                    Ppat_var "cd_args" (typing/tast_iterator.ml[115,5241+26]..[115,5241+33])
                "cd_res" (typing/tast_iterator.ml[115,5241+35]..[115,5241+41]) ghost
                  pattern (typing/tast_iterator.ml[115,5241+35]..[115,5241+41])
                    Ppat_var "cd_res" (typing/tast_iterator.ml[115,5241+35]..[115,5241+41])
              ]
            expression (typing/tast_iterator.ml[116,5289+2]..[117,5321+34])
              Pexp_sequence
              expression (typing/tast_iterator.ml[116,5289+2]..[116,5289+30])
                Pexp_apply
                expression (typing/tast_iterator.ml[116,5289+2]..[116,5289+18])
                  Pexp_ident "constructor_args" (typing/tast_iterator.ml[116,5289+2]..[116,5289+18])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[116,5289+19]..[116,5289+22])
                      Pexp_ident "sub" (typing/tast_iterator.ml[116,5289+19]..[116,5289+22])
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[116,5289+23]..[116,5289+30])
                      Pexp_ident "cd_args" (typing/tast_iterator.ml[116,5289+23]..[116,5289+30])
                ]
              expression (typing/tast_iterator.ml[117,5321+2]..[117,5321+34])
                Pexp_apply
                expression (typing/tast_iterator.ml[117,5321+2]..[117,5321+13])
                  Pexp_ident "Option.iter" (typing/tast_iterator.ml[117,5321+2]..[117,5321+13])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[117,5321+14]..[117,5321+27])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[117,5321+15]..[117,5321+22])
                        Pexp_field
                        expression (typing/tast_iterator.ml[117,5321+15]..[117,5321+18])
                          Pexp_ident "sub" (typing/tast_iterator.ml[117,5321+15]..[117,5321+18])
                        "typ" (typing/tast_iterator.ml[117,5321+19]..[117,5321+22])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[117,5321+23]..[117,5321+26])
                            Pexp_ident "sub" (typing/tast_iterator.ml[117,5321+23]..[117,5321+26])
                      ]
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[117,5321+28]..[117,5321+34])
                      Pexp_ident "cd_res" (typing/tast_iterator.ml[117,5321+28]..[117,5321+34])
                ]
    ]
  structure_item (typing/tast_iterator.ml[119,5357+0]..[123,5532+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[119,5357+4]..[119,5357+13])
          Ppat_var "type_kind" (typing/tast_iterator.ml[119,5357+4]..[119,5357+13])
        expression (typing/tast_iterator.ml[119,5357+14]..[123,5532+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[119,5357+14]..[119,5357+17])
            Ppat_var "sub" (typing/tast_iterator.ml[119,5357+14]..[119,5357+17])
          expression (typing/tast_iterator.ml[119,5357+20]..[123,5532+20])
            Pexp_function
            [
              <case>
                pattern (typing/tast_iterator.ml[120,5386+4]..[120,5386+18])
                  Ppat_construct "Ttype_abstract" (typing/tast_iterator.ml[120,5386+4]..[120,5386+18])
                  None
                expression (typing/tast_iterator.ml[120,5386+22]..[120,5386+24])
                  Pexp_construct "()" (typing/tast_iterator.ml[120,5386+22]..[120,5386+24])
                  None
              <case>
                pattern (typing/tast_iterator.ml[121,5411+4]..[121,5411+22])
                  Ppat_construct "Ttype_variant" (typing/tast_iterator.ml[121,5411+4]..[121,5411+17])
                  Some
                    []
                    pattern (typing/tast_iterator.ml[121,5411+18]..[121,5411+22])
                      Ppat_var "list" (typing/tast_iterator.ml[121,5411+18]..[121,5411+22])
                expression (typing/tast_iterator.ml[121,5411+26]..[121,5411+63])
                  Pexp_apply
                  expression (typing/tast_iterator.ml[121,5411+26]..[121,5411+35])
                    Pexp_ident "List.iter" (typing/tast_iterator.ml[121,5411+26]..[121,5411+35])
                  [
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[121,5411+36]..[121,5411+58])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[121,5411+37]..[121,5411+53])
                          Pexp_ident "constructor_decl" (typing/tast_iterator.ml[121,5411+37]..[121,5411+53])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[121,5411+54]..[121,5411+57])
                              Pexp_ident "sub" (typing/tast_iterator.ml[121,5411+54]..[121,5411+57])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[121,5411+59]..[121,5411+63])
                        Pexp_ident "list" (typing/tast_iterator.ml[121,5411+59]..[121,5411+63])
                  ]
              <case>
                pattern (typing/tast_iterator.ml[122,5475+4]..[122,5475+21])
                  Ppat_construct "Ttype_record" (typing/tast_iterator.ml[122,5475+4]..[122,5475+16])
                  Some
                    []
                    pattern (typing/tast_iterator.ml[122,5475+17]..[122,5475+21])
                      Ppat_var "list" (typing/tast_iterator.ml[122,5475+17]..[122,5475+21])
                expression (typing/tast_iterator.ml[122,5475+25]..[122,5475+56])
                  Pexp_apply
                  expression (typing/tast_iterator.ml[122,5475+25]..[122,5475+34])
                    Pexp_ident "List.iter" (typing/tast_iterator.ml[122,5475+25]..[122,5475+34])
                  [
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[122,5475+35]..[122,5475+51])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[122,5475+36]..[122,5475+46])
                          Pexp_ident "label_decl" (typing/tast_iterator.ml[122,5475+36]..[122,5475+46])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[122,5475+47]..[122,5475+50])
                              Pexp_ident "sub" (typing/tast_iterator.ml[122,5475+47]..[122,5475+50])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[122,5475+52]..[122,5475+56])
                        Pexp_ident "list" (typing/tast_iterator.ml[122,5475+52]..[122,5475+56])
                  ]
              <case>
                pattern (typing/tast_iterator.ml[123,5532+4]..[123,5532+14])
                  Ppat_construct "Ttype_open" (typing/tast_iterator.ml[123,5532+4]..[123,5532+14])
                  None
                expression (typing/tast_iterator.ml[123,5532+18]..[123,5532+20])
                  Pexp_construct "()" (typing/tast_iterator.ml[123,5532+18]..[123,5532+20])
                  None
            ]
    ]
  structure_item (typing/tast_iterator.ml[125,5554+0]..[133,5799+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[125,5554+4]..[125,5554+20])
          Ppat_var "type_declaration" (typing/tast_iterator.ml[125,5554+4]..[125,5554+20])
        expression (typing/tast_iterator.ml[125,5554+21]..[133,5799+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[125,5554+21]..[125,5554+24])
            Ppat_var "sub" (typing/tast_iterator.ml[125,5554+21]..[125,5554+24])
          expression (typing/tast_iterator.ml[125,5554+25]..[133,5799+52]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[125,5554+25]..[125,5554+75])
              Ppat_record Open
              [
                "typ_cstrs" (typing/tast_iterator.ml[125,5554+26]..[125,5554+35]) ghost
                  pattern (typing/tast_iterator.ml[125,5554+26]..[125,5554+35])
                    Ppat_var "typ_cstrs" (typing/tast_iterator.ml[125,5554+26]..[125,5554+35])
                "typ_kind" (typing/tast_iterator.ml[125,5554+37]..[125,5554+45]) ghost
                  pattern (typing/tast_iterator.ml[125,5554+37]..[125,5554+45])
                    Ppat_var "typ_kind" (typing/tast_iterator.ml[125,5554+37]..[125,5554+45])
                "typ_manifest" (typing/tast_iterator.ml[125,5554+47]..[125,5554+59]) ghost
                  pattern (typing/tast_iterator.ml[125,5554+47]..[125,5554+59])
                    Ppat_var "typ_manifest" (typing/tast_iterator.ml[125,5554+47]..[125,5554+59])
                "typ_params" (typing/tast_iterator.ml[125,5554+61]..[125,5554+71]) ghost
                  pattern (typing/tast_iterator.ml[125,5554+61]..[125,5554+71])
                    Ppat_var "typ_params" (typing/tast_iterator.ml[125,5554+61]..[125,5554+71])
              ]
            expression (typing/tast_iterator.ml[126,5632+2]..[133,5799+52])
              Pexp_sequence
              expression (typing/tast_iterator.ml[126,5632+2]..[130,5712+13])
                Pexp_apply
                expression (typing/tast_iterator.ml[126,5632+2]..[126,5632+11])
                  Pexp_ident "List.iter" (typing/tast_iterator.ml[126,5632+2]..[126,5632+11])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[127,5644+4]..[129,5690+21])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/tast_iterator.ml[127,5644+9]..[127,5644+20])
                        Ppat_tuple
                        [
                          pattern (typing/tast_iterator.ml[127,5644+10]..[127,5644+12])
                            Ppat_var "c1" (typing/tast_iterator.ml[127,5644+10]..[127,5644+12])
                          pattern (typing/tast_iterator.ml[127,5644+14]..[127,5644+16])
                            Ppat_var "c2" (typing/tast_iterator.ml[127,5644+14]..[127,5644+16])
                          pattern (typing/tast_iterator.ml[127,5644+18]..[127,5644+19])
                            Ppat_any
                        ]
                      expression (typing/tast_iterator.ml[128,5668+6]..[129,5690+20])
                        Pexp_sequence
                        expression (typing/tast_iterator.ml[128,5668+6]..[128,5668+20])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[128,5668+6]..[128,5668+13])
                            Pexp_field
                            expression (typing/tast_iterator.ml[128,5668+6]..[128,5668+9])
                              Pexp_ident "sub" (typing/tast_iterator.ml[128,5668+6]..[128,5668+9])
                            "typ" (typing/tast_iterator.ml[128,5668+10]..[128,5668+13])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[128,5668+14]..[128,5668+17])
                                Pexp_ident "sub" (typing/tast_iterator.ml[128,5668+14]..[128,5668+17])
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[128,5668+18]..[128,5668+20])
                                Pexp_ident "c1" (typing/tast_iterator.ml[128,5668+18]..[128,5668+20])
                          ]
                        expression (typing/tast_iterator.ml[129,5690+6]..[129,5690+20])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[129,5690+6]..[129,5690+13])
                            Pexp_field
                            expression (typing/tast_iterator.ml[129,5690+6]..[129,5690+9])
                              Pexp_ident "sub" (typing/tast_iterator.ml[129,5690+6]..[129,5690+9])
                            "typ" (typing/tast_iterator.ml[129,5690+10]..[129,5690+13])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[129,5690+14]..[129,5690+17])
                                Pexp_ident "sub" (typing/tast_iterator.ml[129,5690+14]..[129,5690+17])
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[129,5690+18]..[129,5690+20])
                                Pexp_ident "c2" (typing/tast_iterator.ml[129,5690+18]..[129,5690+20])
                          ]
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[130,5712+4]..[130,5712+13])
                      Pexp_ident "typ_cstrs" (typing/tast_iterator.ml[130,5712+4]..[130,5712+13])
                ]
              expression (typing/tast_iterator.ml[131,5727+2]..[133,5799+52])
                Pexp_sequence
                expression (typing/tast_iterator.ml[131,5727+2]..[131,5727+28])
                  Pexp_apply
                  expression (typing/tast_iterator.ml[131,5727+2]..[131,5727+15])
                    Pexp_field
                    expression (typing/tast_iterator.ml[131,5727+2]..[131,5727+5])
                      Pexp_ident "sub" (typing/tast_iterator.ml[131,5727+2]..[131,5727+5])
                    "type_kind" (typing/tast_iterator.ml[131,5727+6]..[131,5727+15])
                  [
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[131,5727+16]..[131,5727+19])
                        Pexp_ident "sub" (typing/tast_iterator.ml[131,5727+16]..[131,5727+19])
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[131,5727+20]..[131,5727+28])
                        Pexp_ident "typ_kind" (typing/tast_iterator.ml[131,5727+20]..[131,5727+28])
                  ]
                expression (typing/tast_iterator.ml[132,5757+2]..[133,5799+52])
                  Pexp_sequence
                  expression (typing/tast_iterator.ml[132,5757+2]..[132,5757+40])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[132,5757+2]..[132,5757+13])
                      Pexp_ident "Option.iter" (typing/tast_iterator.ml[132,5757+2]..[132,5757+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[132,5757+14]..[132,5757+27])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[132,5757+15]..[132,5757+22])
                            Pexp_field
                            expression (typing/tast_iterator.ml[132,5757+15]..[132,5757+18])
                              Pexp_ident "sub" (typing/tast_iterator.ml[132,5757+15]..[132,5757+18])
                            "typ" (typing/tast_iterator.ml[132,5757+19]..[132,5757+22])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[132,5757+23]..[132,5757+26])
                                Pexp_ident "sub" (typing/tast_iterator.ml[132,5757+23]..[132,5757+26])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[132,5757+28]..[132,5757+40])
                          Pexp_ident "typ_manifest" (typing/tast_iterator.ml[132,5757+28]..[132,5757+40])
                    ]
                  expression (typing/tast_iterator.ml[133,5799+2]..[133,5799+52])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[133,5799+2]..[133,5799+11])
                      Pexp_ident "List.iter" (typing/tast_iterator.ml[133,5799+2]..[133,5799+11])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[133,5799+12]..[133,5799+41])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/tast_iterator.ml[133,5799+17]..[133,5799+23])
                            Ppat_tuple
                            [
                              pattern (typing/tast_iterator.ml[133,5799+18]..[133,5799+19])
                                Ppat_var "c" (typing/tast_iterator.ml[133,5799+18]..[133,5799+19])
                              pattern (typing/tast_iterator.ml[133,5799+21]..[133,5799+22])
                                Ppat_any
                            ]
                          expression (typing/tast_iterator.ml[133,5799+27]..[133,5799+40])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[133,5799+27]..[133,5799+34])
                              Pexp_field
                              expression (typing/tast_iterator.ml[133,5799+27]..[133,5799+30])
                                Pexp_ident "sub" (typing/tast_iterator.ml[133,5799+27]..[133,5799+30])
                              "typ" (typing/tast_iterator.ml[133,5799+31]..[133,5799+34])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[133,5799+35]..[133,5799+38])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[133,5799+35]..[133,5799+38])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[133,5799+39]..[133,5799+40])
                                  Pexp_ident "c" (typing/tast_iterator.ml[133,5799+39]..[133,5799+40])
                            ]
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[133,5799+42]..[133,5799+52])
                          Pexp_ident "typ_params" (typing/tast_iterator.ml[133,5799+42]..[133,5799+52])
                    ]
    ]
  structure_item (typing/tast_iterator.ml[135,5853+0]..[135,5853+79])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[135,5853+4]..[135,5853+21])
          Ppat_var "type_declarations" (typing/tast_iterator.ml[135,5853+4]..[135,5853+21])
        expression (typing/tast_iterator.ml[135,5853+22]..[135,5853+79]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[135,5853+22]..[135,5853+25])
            Ppat_var "sub" (typing/tast_iterator.ml[135,5853+22]..[135,5853+25])
          expression (typing/tast_iterator.ml[135,5853+26]..[135,5853+79]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[135,5853+26]..[135,5853+35])
              Ppat_tuple
              [
                pattern (typing/tast_iterator.ml[135,5853+27]..[135,5853+28])
                  Ppat_any
                pattern (typing/tast_iterator.ml[135,5853+30]..[135,5853+34])
                  Ppat_var "list" (typing/tast_iterator.ml[135,5853+30]..[135,5853+34])
              ]
            expression (typing/tast_iterator.ml[135,5853+38]..[135,5853+79])
              Pexp_apply
              expression (typing/tast_iterator.ml[135,5853+38]..[135,5853+47])
                Pexp_ident "List.iter" (typing/tast_iterator.ml[135,5853+38]..[135,5853+47])
              [
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[135,5853+48]..[135,5853+74])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[135,5853+49]..[135,5853+69])
                      Pexp_field
                      expression (typing/tast_iterator.ml[135,5853+49]..[135,5853+52])
                        Pexp_ident "sub" (typing/tast_iterator.ml[135,5853+49]..[135,5853+52])
                      "type_declaration" (typing/tast_iterator.ml[135,5853+53]..[135,5853+69])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[135,5853+70]..[135,5853+73])
                          Pexp_ident "sub" (typing/tast_iterator.ml[135,5853+70]..[135,5853+73])
                    ]
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[135,5853+75]..[135,5853+79])
                    Pexp_ident "list" (typing/tast_iterator.ml[135,5853+75]..[135,5853+79])
              ]
    ]
  structure_item (typing/tast_iterator.ml[137,5934+0]..[139,6053+62])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[137,5934+4]..[137,5934+18])
          Ppat_var "type_extension" (typing/tast_iterator.ml[137,5934+4]..[137,5934+18])
        expression (typing/tast_iterator.ml[137,5934+19]..[139,6053+62]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[137,5934+19]..[137,5934+22])
            Ppat_var "sub" (typing/tast_iterator.ml[137,5934+19]..[137,5934+22])
          expression (typing/tast_iterator.ml[137,5934+23]..[139,6053+62]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[137,5934+23]..[137,5934+60])
              Ppat_record Open
              [
                "tyext_constructors" (typing/tast_iterator.ml[137,5934+24]..[137,5934+42]) ghost
                  pattern (typing/tast_iterator.ml[137,5934+24]..[137,5934+42])
                    Ppat_var "tyext_constructors" (typing/tast_iterator.ml[137,5934+24]..[137,5934+42])
                "tyext_params" (typing/tast_iterator.ml[137,5934+44]..[137,5934+56]) ghost
                  pattern (typing/tast_iterator.ml[137,5934+44]..[137,5934+56])
                    Ppat_var "tyext_params" (typing/tast_iterator.ml[137,5934+44]..[137,5934+56])
              ]
            expression (typing/tast_iterator.ml[138,5997+2]..[139,6053+62])
              Pexp_sequence
              expression (typing/tast_iterator.ml[138,5997+2]..[138,5997+54])
                Pexp_apply
                expression (typing/tast_iterator.ml[138,5997+2]..[138,5997+11])
                  Pexp_ident "List.iter" (typing/tast_iterator.ml[138,5997+2]..[138,5997+11])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[138,5997+12]..[138,5997+41])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (typing/tast_iterator.ml[138,5997+17]..[138,5997+23])
                        Ppat_tuple
                        [
                          pattern (typing/tast_iterator.ml[138,5997+18]..[138,5997+19])
                            Ppat_var "c" (typing/tast_iterator.ml[138,5997+18]..[138,5997+19])
                          pattern (typing/tast_iterator.ml[138,5997+21]..[138,5997+22])
                            Ppat_any
                        ]
                      expression (typing/tast_iterator.ml[138,5997+27]..[138,5997+40])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[138,5997+27]..[138,5997+34])
                          Pexp_field
                          expression (typing/tast_iterator.ml[138,5997+27]..[138,5997+30])
                            Pexp_ident "sub" (typing/tast_iterator.ml[138,5997+27]..[138,5997+30])
                          "typ" (typing/tast_iterator.ml[138,5997+31]..[138,5997+34])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[138,5997+35]..[138,5997+38])
                              Pexp_ident "sub" (typing/tast_iterator.ml[138,5997+35]..[138,5997+38])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[138,5997+39]..[138,5997+40])
                              Pexp_ident "c" (typing/tast_iterator.ml[138,5997+39]..[138,5997+40])
                        ]
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[138,5997+42]..[138,5997+54])
                      Pexp_ident "tyext_params" (typing/tast_iterator.ml[138,5997+42]..[138,5997+54])
                ]
              expression (typing/tast_iterator.ml[139,6053+2]..[139,6053+62])
                Pexp_apply
                expression (typing/tast_iterator.ml[139,6053+2]..[139,6053+11])
                  Pexp_ident "List.iter" (typing/tast_iterator.ml[139,6053+2]..[139,6053+11])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[139,6053+12]..[139,6053+43])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[139,6053+13]..[139,6053+38])
                        Pexp_field
                        expression (typing/tast_iterator.ml[139,6053+13]..[139,6053+16])
                          Pexp_ident "sub" (typing/tast_iterator.ml[139,6053+13]..[139,6053+16])
                        "extension_constructor" (typing/tast_iterator.ml[139,6053+17]..[139,6053+38])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[139,6053+39]..[139,6053+42])
                            Pexp_ident "sub" (typing/tast_iterator.ml[139,6053+39]..[139,6053+42])
                      ]
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[139,6053+44]..[139,6053+62])
                      Pexp_ident "tyext_constructors" (typing/tast_iterator.ml[139,6053+44]..[139,6053+62])
                ]
    ]
  structure_item (typing/tast_iterator.ml[141,6117+0]..[142,6165+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[141,6117+4]..[141,6117+18])
          Ppat_var "type_exception" (typing/tast_iterator.ml[141,6117+4]..[141,6117+18])
        expression (typing/tast_iterator.ml[141,6117+19]..[142,6165+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[141,6117+19]..[141,6117+22])
            Ppat_var "sub" (typing/tast_iterator.ml[141,6117+19]..[141,6117+22])
          expression (typing/tast_iterator.ml[141,6117+23]..[142,6165+49]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[141,6117+23]..[141,6117+45])
              Ppat_record Open
              [
                "tyexn_constructor" (typing/tast_iterator.ml[141,6117+24]..[141,6117+41]) ghost
                  pattern (typing/tast_iterator.ml[141,6117+24]..[141,6117+41])
                    Ppat_var "tyexn_constructor" (typing/tast_iterator.ml[141,6117+24]..[141,6117+41])
              ]
            expression (typing/tast_iterator.ml[142,6165+2]..[142,6165+49])
              Pexp_apply
              expression (typing/tast_iterator.ml[142,6165+2]..[142,6165+27])
                Pexp_field
                expression (typing/tast_iterator.ml[142,6165+2]..[142,6165+5])
                  Pexp_ident "sub" (typing/tast_iterator.ml[142,6165+2]..[142,6165+5])
                "extension_constructor" (typing/tast_iterator.ml[142,6165+6]..[142,6165+27])
              [
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[142,6165+28]..[142,6165+31])
                    Pexp_ident "sub" (typing/tast_iterator.ml[142,6165+28]..[142,6165+31])
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[142,6165+32]..[142,6165+49])
                    Pexp_ident "tyexn_constructor" (typing/tast_iterator.ml[142,6165+32]..[142,6165+49])
              ]
    ]
  structure_item (typing/tast_iterator.ml[144,6216+0]..[149,6383+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[144,6216+4]..[144,6216+25])
          Ppat_var "extension_constructor" (typing/tast_iterator.ml[144,6216+4]..[144,6216+25])
        expression (typing/tast_iterator.ml[144,6216+26]..[149,6383+23]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[144,6216+26]..[144,6216+29])
            Ppat_var "sub" (typing/tast_iterator.ml[144,6216+26]..[144,6216+29])
          expression (typing/tast_iterator.ml[144,6216+30]..[149,6383+23]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[144,6216+30]..[144,6216+43])
              Ppat_record Open
              [
                "ext_kind" (typing/tast_iterator.ml[144,6216+31]..[144,6216+39]) ghost
                  pattern (typing/tast_iterator.ml[144,6216+31]..[144,6216+39])
                    Ppat_var "ext_kind" (typing/tast_iterator.ml[144,6216+31]..[144,6216+39])
              ]
            expression (typing/tast_iterator.ml[145,6262+2]..[149,6383+23])
              Pexp_match
              expression (typing/tast_iterator.ml[145,6262+8]..[145,6262+16])
                Pexp_ident "ext_kind" (typing/tast_iterator.ml[145,6262+8]..[145,6262+16])
              [
                <case>
                  pattern (typing/tast_iterator.ml[146,6284+4]..[146,6284+27])
                    Ppat_construct "Text_decl" (typing/tast_iterator.ml[146,6284+4]..[146,6284+13])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[146,6284+14]..[146,6284+27])
                        Ppat_tuple
                        [
                          pattern (typing/tast_iterator.ml[146,6284+15]..[146,6284+16])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[146,6284+18]..[146,6284+21])
                            Ppat_var "ctl" (typing/tast_iterator.ml[146,6284+18]..[146,6284+21])
                          pattern (typing/tast_iterator.ml[146,6284+23]..[146,6284+26])
                            Ppat_var "cto" (typing/tast_iterator.ml[146,6284+23]..[146,6284+26])
                        ]
                  expression (typing/tast_iterator.ml[147,6315+6]..[148,6347+35])
                    Pexp_sequence
                    expression (typing/tast_iterator.ml[147,6315+6]..[147,6315+30])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[147,6315+6]..[147,6315+22])
                        Pexp_ident "constructor_args" (typing/tast_iterator.ml[147,6315+6]..[147,6315+22])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[147,6315+23]..[147,6315+26])
                            Pexp_ident "sub" (typing/tast_iterator.ml[147,6315+23]..[147,6315+26])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[147,6315+27]..[147,6315+30])
                            Pexp_ident "ctl" (typing/tast_iterator.ml[147,6315+27]..[147,6315+30])
                      ]
                    expression (typing/tast_iterator.ml[148,6347+6]..[148,6347+35])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[148,6347+6]..[148,6347+17])
                        Pexp_ident "Option.iter" (typing/tast_iterator.ml[148,6347+6]..[148,6347+17])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[148,6347+18]..[148,6347+31])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[148,6347+19]..[148,6347+26])
                              Pexp_field
                              expression (typing/tast_iterator.ml[148,6347+19]..[148,6347+22])
                                Pexp_ident "sub" (typing/tast_iterator.ml[148,6347+19]..[148,6347+22])
                              "typ" (typing/tast_iterator.ml[148,6347+23]..[148,6347+26])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[148,6347+27]..[148,6347+30])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[148,6347+27]..[148,6347+30])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[148,6347+32]..[148,6347+35])
                            Pexp_ident "cto" (typing/tast_iterator.ml[148,6347+32]..[148,6347+35])
                      ]
                <case>
                  pattern (typing/tast_iterator.ml[149,6383+4]..[149,6383+17])
                    Ppat_construct "Text_rebind" (typing/tast_iterator.ml[149,6383+4]..[149,6383+15])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[149,6383+16]..[149,6383+17])
                        Ppat_any
                  expression (typing/tast_iterator.ml[149,6383+21]..[149,6383+23])
                    Pexp_construct "()" (typing/tast_iterator.ml[149,6383+21]..[149,6383+23])
                    None
              ]
    ]
  structure_item (typing/tast_iterator.ml[151,6408+0]..[155,6548+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[151,6408+4]..[151,6408+13])
          Ppat_var "pat_extra" (typing/tast_iterator.ml[151,6408+4]..[151,6408+13])
        expression (typing/tast_iterator.ml[151,6408+14]..[155,6548+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[151,6408+14]..[151,6408+17])
            Ppat_var "sub" (typing/tast_iterator.ml[151,6408+14]..[151,6408+17])
          expression (typing/tast_iterator.ml[151,6408+18]..[155,6548+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[151,6408+18]..[151,6408+35])
              Ppat_tuple
              [
                pattern (typing/tast_iterator.ml[151,6408+19]..[151,6408+20])
                  Ppat_var "e" (typing/tast_iterator.ml[151,6408+19]..[151,6408+20])
                pattern (typing/tast_iterator.ml[151,6408+22]..[151,6408+26])
                  Ppat_var "_loc" (typing/tast_iterator.ml[151,6408+22]..[151,6408+26])
                pattern (typing/tast_iterator.ml[151,6408+28]..[151,6408+34])
                  Ppat_var "_attrs" (typing/tast_iterator.ml[151,6408+28]..[151,6408+34])
              ]
            expression (typing/tast_iterator.ml[151,6408+38]..[155,6548+40])
              Pexp_match
              expression (typing/tast_iterator.ml[151,6408+44]..[151,6408+45])
                Pexp_ident "e" (typing/tast_iterator.ml[151,6408+44]..[151,6408+45])
              [
                <case>
                  pattern (typing/tast_iterator.ml[152,6459+4]..[152,6459+15])
                    Ppat_construct "Tpat_type" (typing/tast_iterator.ml[152,6459+4]..[152,6459+13])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[152,6459+14]..[152,6459+15])
                        Ppat_any
                  expression (typing/tast_iterator.ml[152,6459+19]..[152,6459+21])
                    Pexp_construct "()" (typing/tast_iterator.ml[152,6459+19]..[152,6459+21])
                    None
                <case>
                  pattern (typing/tast_iterator.ml[153,6481+4]..[153,6481+15])
                    Ppat_construct "Tpat_unpack" (typing/tast_iterator.ml[153,6481+4]..[153,6481+15])
                    None
                  expression (typing/tast_iterator.ml[153,6481+19]..[153,6481+21])
                    Pexp_construct "()" (typing/tast_iterator.ml[153,6481+19]..[153,6481+21])
                    None
                <case>
                  pattern (typing/tast_iterator.ml[154,6503+4]..[154,6503+25])
                    Ppat_construct "Tpat_open" (typing/tast_iterator.ml[154,6503+4]..[154,6503+13])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[154,6503+14]..[154,6503+25])
                        Ppat_tuple
                        [
                          pattern (typing/tast_iterator.ml[154,6503+15]..[154,6503+16])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[154,6503+18]..[154,6503+19])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[154,6503+21]..[154,6503+24])
                            Ppat_var "env" (typing/tast_iterator.ml[154,6503+21]..[154,6503+24])
                        ]
                  expression (typing/tast_iterator.ml[154,6503+29]..[154,6503+44])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[154,6503+29]..[154,6503+36])
                      Pexp_field
                      expression (typing/tast_iterator.ml[154,6503+29]..[154,6503+32])
                        Pexp_ident "sub" (typing/tast_iterator.ml[154,6503+29]..[154,6503+32])
                      "env" (typing/tast_iterator.ml[154,6503+33]..[154,6503+36])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[154,6503+37]..[154,6503+40])
                          Pexp_ident "sub" (typing/tast_iterator.ml[154,6503+37]..[154,6503+40])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[154,6503+41]..[154,6503+44])
                          Pexp_ident "env" (typing/tast_iterator.ml[154,6503+41]..[154,6503+44])
                    ]
                <case>
                  pattern (typing/tast_iterator.ml[155,6548+4]..[155,6548+22])
                    Ppat_construct "Tpat_constraint" (typing/tast_iterator.ml[155,6548+4]..[155,6548+19])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[155,6548+20]..[155,6548+22])
                        Ppat_var "ct" (typing/tast_iterator.ml[155,6548+20]..[155,6548+22])
                  expression (typing/tast_iterator.ml[155,6548+26]..[155,6548+40])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[155,6548+26]..[155,6548+33])
                      Pexp_field
                      expression (typing/tast_iterator.ml[155,6548+26]..[155,6548+29])
                        Pexp_ident "sub" (typing/tast_iterator.ml[155,6548+26]..[155,6548+29])
                      "typ" (typing/tast_iterator.ml[155,6548+30]..[155,6548+33])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[155,6548+34]..[155,6548+37])
                          Pexp_ident "sub" (typing/tast_iterator.ml[155,6548+34]..[155,6548+37])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[155,6548+38]..[155,6548+40])
                          Pexp_ident "ct" (typing/tast_iterator.ml[155,6548+38]..[155,6548+40])
                    ]
              ]
    ]
  structure_item (typing/tast_iterator.ml[157,6590+0]..[179,7412+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[157,6590+4]..[158,6598+50]) ghost
          Ppat_constraint
          pattern (typing/tast_iterator.ml[157,6590+4]..[157,6590+7])
            Ppat_var "pat" (typing/tast_iterator.ml[157,6590+4]..[157,6590+7])
          core_type (typing/tast_iterator.ml[157,6590+4]..[179,7412+20]) ghost
            Ptyp_poly 'k
            core_type (typing/tast_iterator.ml[158,6598+13]..[158,6598+50])
              Ptyp_arrow
              Nolabel
              core_type (typing/tast_iterator.ml[158,6598+13]..[158,6598+21])
                Ptyp_constr "iterator" (typing/tast_iterator.ml[158,6598+13]..[158,6598+21])
                []
              core_type (typing/tast_iterator.ml[158,6598+25]..[158,6598+50])
                Ptyp_arrow
                Nolabel
                core_type (typing/tast_iterator.ml[158,6598+25]..[158,6598+42])
                  Ptyp_constr "general_pattern" (typing/tast_iterator.ml[158,6598+27]..[158,6598+42])
                  [
                    core_type (typing/tast_iterator.ml[158,6598+25]..[158,6598+26])
                      Ptyp_var k
                  ]
                core_type (typing/tast_iterator.ml[158,6598+46]..[158,6598+50])
                  Ptyp_constr "unit" (typing/tast_iterator.ml[158,6598+46]..[158,6598+50])
                  []
        expression (typing/tast_iterator.ml[157,6590+4]..[179,7412+20])
          Pexp_newtype "k"
          expression (typing/tast_iterator.ml[157,6590+4]..[179,7412+20])
            Pexp_constraint
            expression (typing/tast_iterator.ml[159,6649+4]..[179,7412+20])
              Pexp_fun
              Nolabel
              None
              pattern (typing/tast_iterator.ml[159,6649+8]..[159,6649+11])
                Ppat_var "sub" (typing/tast_iterator.ml[159,6649+8]..[159,6649+11])
              expression (typing/tast_iterator.ml[159,6649+12]..[179,7412+20]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (typing/tast_iterator.ml[159,6649+12]..[159,6649+53])
                  Ppat_record Open
                  [
                    "pat_extra" (typing/tast_iterator.ml[159,6649+13]..[159,6649+22])
                      pattern (typing/tast_iterator.ml[159,6649+25]..[159,6649+30])
                        Ppat_var "extra" (typing/tast_iterator.ml[159,6649+25]..[159,6649+30])
                    "pat_desc" (typing/tast_iterator.ml[159,6649+32]..[159,6649+40]) ghost
                      pattern (typing/tast_iterator.ml[159,6649+32]..[159,6649+40])
                        Ppat_var "pat_desc" (typing/tast_iterator.ml[159,6649+32]..[159,6649+40])
                    "pat_env" (typing/tast_iterator.ml[159,6649+42]..[159,6649+49]) ghost
                      pattern (typing/tast_iterator.ml[159,6649+42]..[159,6649+49])
                        Ppat_var "pat_env" (typing/tast_iterator.ml[159,6649+42]..[159,6649+49])
                  ]
                expression (typing/tast_iterator.ml[160,6706+2]..[179,7412+20])
                  Pexp_sequence
                  expression (typing/tast_iterator.ml[160,6706+2]..[160,6706+21])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[160,6706+2]..[160,6706+9])
                      Pexp_field
                      expression (typing/tast_iterator.ml[160,6706+2]..[160,6706+5])
                        Pexp_ident "sub" (typing/tast_iterator.ml[160,6706+2]..[160,6706+5])
                      "env" (typing/tast_iterator.ml[160,6706+6]..[160,6706+9])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[160,6706+10]..[160,6706+13])
                          Pexp_ident "sub" (typing/tast_iterator.ml[160,6706+10]..[160,6706+13])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[160,6706+14]..[160,6706+21])
                          Pexp_ident "pat_env" (typing/tast_iterator.ml[160,6706+14]..[160,6706+21])
                    ]
                  expression (typing/tast_iterator.ml[161,6729+2]..[179,7412+20])
                    Pexp_sequence
                    expression (typing/tast_iterator.ml[161,6729+2]..[161,6729+33])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[161,6729+2]..[161,6729+11])
                        Pexp_ident "List.iter" (typing/tast_iterator.ml[161,6729+2]..[161,6729+11])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[161,6729+12]..[161,6729+27])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[161,6729+13]..[161,6729+22])
                              Pexp_ident "pat_extra" (typing/tast_iterator.ml[161,6729+13]..[161,6729+22])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[161,6729+23]..[161,6729+26])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[161,6729+23]..[161,6729+26])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[161,6729+28]..[161,6729+33])
                            Pexp_ident "extra" (typing/tast_iterator.ml[161,6729+28]..[161,6729+33])
                      ]
                    expression (typing/tast_iterator.ml[162,6764+2]..[179,7412+20])
                      Pexp_match
                      expression (typing/tast_iterator.ml[162,6764+8]..[162,6764+16])
                        Pexp_ident "pat_desc" (typing/tast_iterator.ml[162,6764+8]..[162,6764+16])
                      [
                        <case>
                          pattern (typing/tast_iterator.ml[163,6786+4]..[163,6786+12])
                            Ppat_construct "Tpat_any" (typing/tast_iterator.ml[163,6786+4]..[163,6786+12])
                            None
                          expression (typing/tast_iterator.ml[163,6786+17]..[163,6786+19])
                            Pexp_construct "()" (typing/tast_iterator.ml[163,6786+17]..[163,6786+19])
                            None
                        <case>
                          pattern (typing/tast_iterator.ml[164,6806+4]..[164,6806+14])
                            Ppat_construct "Tpat_var" (typing/tast_iterator.ml[164,6806+4]..[164,6806+12])
                            Some
                              []
                              pattern (typing/tast_iterator.ml[164,6806+13]..[164,6806+14])
                                Ppat_any
                          expression (typing/tast_iterator.ml[164,6806+18]..[164,6806+20])
                            Pexp_construct "()" (typing/tast_iterator.ml[164,6806+18]..[164,6806+20])
                            None
                        <case>
                          pattern (typing/tast_iterator.ml[165,6827+4]..[165,6827+19])
                            Ppat_construct "Tpat_constant" (typing/tast_iterator.ml[165,6827+4]..[165,6827+17])
                            Some
                              []
                              pattern (typing/tast_iterator.ml[165,6827+18]..[165,6827+19])
                                Ppat_any
                          expression (typing/tast_iterator.ml[165,6827+23]..[165,6827+25])
                            Pexp_construct "()" (typing/tast_iterator.ml[165,6827+23]..[165,6827+25])
                            None
                        <case>
                          pattern (typing/tast_iterator.ml[166,6853+4]..[166,6853+16])
                            Ppat_construct "Tpat_tuple" (typing/tast_iterator.ml[166,6853+4]..[166,6853+14])
                            Some
                              []
                              pattern (typing/tast_iterator.ml[166,6853+15]..[166,6853+16])
                                Ppat_var "l" (typing/tast_iterator.ml[166,6853+15]..[166,6853+16])
                          expression (typing/tast_iterator.ml[166,6853+20]..[166,6853+45])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[166,6853+20]..[166,6853+29])
                              Pexp_ident "List.iter" (typing/tast_iterator.ml[166,6853+20]..[166,6853+29])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[166,6853+30]..[166,6853+43])
                                  Pexp_apply
                                  expression (typing/tast_iterator.ml[166,6853+31]..[166,6853+38])
                                    Pexp_field
                                    expression (typing/tast_iterator.ml[166,6853+31]..[166,6853+34])
                                      Pexp_ident "sub" (typing/tast_iterator.ml[166,6853+31]..[166,6853+34])
                                    "pat" (typing/tast_iterator.ml[166,6853+35]..[166,6853+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/tast_iterator.ml[166,6853+39]..[166,6853+42])
                                        Pexp_ident "sub" (typing/tast_iterator.ml[166,6853+39]..[166,6853+42])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[166,6853+44]..[166,6853+45])
                                  Pexp_ident "l" (typing/tast_iterator.ml[166,6853+44]..[166,6853+45])
                            ]
                        <case>
                          pattern (typing/tast_iterator.ml[167,6899+4]..[167,6899+33])
                            Ppat_construct "Tpat_construct" (typing/tast_iterator.ml[167,6899+4]..[167,6899+18])
                            Some
                              []
                              pattern (typing/tast_iterator.ml[167,6899+19]..[167,6899+33])
                                Ppat_tuple
                                [
                                  pattern (typing/tast_iterator.ml[167,6899+20]..[167,6899+21])
                                    Ppat_any
                                  pattern (typing/tast_iterator.ml[167,6899+23]..[167,6899+24])
                                    Ppat_any
                                  pattern (typing/tast_iterator.ml[167,6899+26]..[167,6899+27])
                                    Ppat_var "l" (typing/tast_iterator.ml[167,6899+26]..[167,6899+27])
                                  pattern (typing/tast_iterator.ml[167,6899+29]..[167,6899+32])
                                    Ppat_var "vto" (typing/tast_iterator.ml[167,6899+29]..[167,6899+32])
                                ]
                          expression (typing/tast_iterator.ml[168,6936+6]..[169,6969+56])
                            Pexp_sequence
                            expression (typing/tast_iterator.ml[168,6936+6]..[168,6936+31])
                              Pexp_apply
                              expression (typing/tast_iterator.ml[168,6936+6]..[168,6936+15])
                                Pexp_ident "List.iter" (typing/tast_iterator.ml[168,6936+6]..[168,6936+15])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[168,6936+16]..[168,6936+29])
                                    Pexp_apply
                                    expression (typing/tast_iterator.ml[168,6936+17]..[168,6936+24])
                                      Pexp_field
                                      expression (typing/tast_iterator.ml[168,6936+17]..[168,6936+20])
                                        Pexp_ident "sub" (typing/tast_iterator.ml[168,6936+17]..[168,6936+20])
                                      "pat" (typing/tast_iterator.ml[168,6936+21]..[168,6936+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/tast_iterator.ml[168,6936+25]..[168,6936+28])
                                          Pexp_ident "sub" (typing/tast_iterator.ml[168,6936+25]..[168,6936+28])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[168,6936+30]..[168,6936+31])
                                    Pexp_ident "l" (typing/tast_iterator.ml[168,6936+30]..[168,6936+31])
                              ]
                            expression (typing/tast_iterator.ml[169,6969+6]..[169,6969+56])
                              Pexp_apply
                              expression (typing/tast_iterator.ml[169,6969+6]..[169,6969+17])
                                Pexp_ident "Option.iter" (typing/tast_iterator.ml[169,6969+6]..[169,6969+17])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[169,6969+18]..[169,6969+52])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (typing/tast_iterator.ml[169,6969+23]..[169,6969+33])
                                      Ppat_tuple
                                      [
                                        pattern (typing/tast_iterator.ml[169,6969+24]..[169,6969+28])
                                          Ppat_var "_ids" (typing/tast_iterator.ml[169,6969+24]..[169,6969+28])
                                        pattern (typing/tast_iterator.ml[169,6969+30]..[169,6969+32])
                                          Ppat_var "ct" (typing/tast_iterator.ml[169,6969+30]..[169,6969+32])
                                      ]
                                    expression (typing/tast_iterator.ml[169,6969+37]..[169,6969+51])
                                      Pexp_apply
                                      expression (typing/tast_iterator.ml[169,6969+37]..[169,6969+44])
                                        Pexp_field
                                        expression (typing/tast_iterator.ml[169,6969+37]..[169,6969+40])
                                          Pexp_ident "sub" (typing/tast_iterator.ml[169,6969+37]..[169,6969+40])
                                        "typ" (typing/tast_iterator.ml[169,6969+41]..[169,6969+44])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/tast_iterator.ml[169,6969+45]..[169,6969+48])
                                            Pexp_ident "sub" (typing/tast_iterator.ml[169,6969+45]..[169,6969+48])
                                        <arg>
                                        Nolabel
                                          expression (typing/tast_iterator.ml[169,6969+49]..[169,6969+51])
                                            Pexp_ident "ct" (typing/tast_iterator.ml[169,6969+49]..[169,6969+51])
                                      ]
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[169,6969+53]..[169,6969+56])
                                    Pexp_ident "vto" (typing/tast_iterator.ml[169,6969+53]..[169,6969+56])
                              ]
                        <case>
                          pattern (typing/tast_iterator.ml[170,7026+4]..[170,7026+27])
                            Ppat_construct "Tpat_variant" (typing/tast_iterator.ml[170,7026+4]..[170,7026+16])
                            Some
                              []
                              pattern (typing/tast_iterator.ml[170,7026+17]..[170,7026+27])
                                Ppat_tuple
                                [
                                  pattern (typing/tast_iterator.ml[170,7026+18]..[170,7026+19])
                                    Ppat_any
                                  pattern (typing/tast_iterator.ml[170,7026+21]..[170,7026+23])
                                    Ppat_var "po" (typing/tast_iterator.ml[170,7026+21]..[170,7026+23])
                                  pattern (typing/tast_iterator.ml[170,7026+25]..[170,7026+26])
                                    Ppat_any
                                ]
                          expression (typing/tast_iterator.ml[170,7026+31]..[170,7026+59])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[170,7026+31]..[170,7026+42])
                              Pexp_ident "Option.iter" (typing/tast_iterator.ml[170,7026+31]..[170,7026+42])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[170,7026+43]..[170,7026+56])
                                  Pexp_apply
                                  expression (typing/tast_iterator.ml[170,7026+44]..[170,7026+51])
                                    Pexp_field
                                    expression (typing/tast_iterator.ml[170,7026+44]..[170,7026+47])
                                      Pexp_ident "sub" (typing/tast_iterator.ml[170,7026+44]..[170,7026+47])
                                    "pat" (typing/tast_iterator.ml[170,7026+48]..[170,7026+51])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/tast_iterator.ml[170,7026+52]..[170,7026+55])
                                        Pexp_ident "sub" (typing/tast_iterator.ml[170,7026+52]..[170,7026+55])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[170,7026+57]..[170,7026+59])
                                  Pexp_ident "po" (typing/tast_iterator.ml[170,7026+57]..[170,7026+59])
                            ]
                        <case>
                          pattern (typing/tast_iterator.ml[171,7086+4]..[171,7086+22])
                            Ppat_construct "Tpat_record" (typing/tast_iterator.ml[171,7086+4]..[171,7086+15])
                            Some
                              []
                              pattern (typing/tast_iterator.ml[171,7086+16]..[171,7086+22])
                                Ppat_tuple
                                [
                                  pattern (typing/tast_iterator.ml[171,7086+17]..[171,7086+18])
                                    Ppat_var "l" (typing/tast_iterator.ml[171,7086+17]..[171,7086+18])
                                  pattern (typing/tast_iterator.ml[171,7086+20]..[171,7086+21])
                                    Ppat_any
                                ]
                          expression (typing/tast_iterator.ml[171,7086+26]..[171,7086+70])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[171,7086+26]..[171,7086+35])
                              Pexp_ident "List.iter" (typing/tast_iterator.ml[171,7086+26]..[171,7086+35])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[171,7086+36]..[171,7086+68])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/tast_iterator.ml[171,7086+41]..[171,7086+50])
                                    Ppat_tuple
                                    [
                                      pattern (typing/tast_iterator.ml[171,7086+42]..[171,7086+43])
                                        Ppat_any
                                      pattern (typing/tast_iterator.ml[171,7086+45]..[171,7086+46])
                                        Ppat_any
                                      pattern (typing/tast_iterator.ml[171,7086+48]..[171,7086+49])
                                        Ppat_var "i" (typing/tast_iterator.ml[171,7086+48]..[171,7086+49])
                                    ]
                                  expression (typing/tast_iterator.ml[171,7086+54]..[171,7086+67])
                                    Pexp_apply
                                    expression (typing/tast_iterator.ml[171,7086+54]..[171,7086+61])
                                      Pexp_field
                                      expression (typing/tast_iterator.ml[171,7086+54]..[171,7086+57])
                                        Pexp_ident "sub" (typing/tast_iterator.ml[171,7086+54]..[171,7086+57])
                                      "pat" (typing/tast_iterator.ml[171,7086+58]..[171,7086+61])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/tast_iterator.ml[171,7086+62]..[171,7086+65])
                                          Pexp_ident "sub" (typing/tast_iterator.ml[171,7086+62]..[171,7086+65])
                                      <arg>
                                      Nolabel
                                        expression (typing/tast_iterator.ml[171,7086+66]..[171,7086+67])
                                          Pexp_ident "i" (typing/tast_iterator.ml[171,7086+66]..[171,7086+67])
                                    ]
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[171,7086+69]..[171,7086+70])
                                  Pexp_ident "l" (typing/tast_iterator.ml[171,7086+69]..[171,7086+70])
                            ]
                        <case>
                          pattern (typing/tast_iterator.ml[172,7157+4]..[172,7157+16])
                            Ppat_construct "Tpat_array" (typing/tast_iterator.ml[172,7157+4]..[172,7157+14])
                            Some
                              []
                              pattern (typing/tast_iterator.ml[172,7157+15]..[172,7157+16])
                                Ppat_var "l" (typing/tast_iterator.ml[172,7157+15]..[172,7157+16])
                          expression (typing/tast_iterator.ml[172,7157+20]..[172,7157+45])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[172,7157+20]..[172,7157+29])
                              Pexp_ident "List.iter" (typing/tast_iterator.ml[172,7157+20]..[172,7157+29])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[172,7157+30]..[172,7157+43])
                                  Pexp_apply
                                  expression (typing/tast_iterator.ml[172,7157+31]..[172,7157+38])
                                    Pexp_field
                                    expression (typing/tast_iterator.ml[172,7157+31]..[172,7157+34])
                                      Pexp_ident "sub" (typing/tast_iterator.ml[172,7157+31]..[172,7157+34])
                                    "pat" (typing/tast_iterator.ml[172,7157+35]..[172,7157+38])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/tast_iterator.ml[172,7157+39]..[172,7157+42])
                                        Pexp_ident "sub" (typing/tast_iterator.ml[172,7157+39]..[172,7157+42])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[172,7157+44]..[172,7157+45])
                                  Pexp_ident "l" (typing/tast_iterator.ml[172,7157+44]..[172,7157+45])
                            ]
                        <case>
                          pattern (typing/tast_iterator.ml[173,7203+4]..[173,7203+24])
                            Ppat_construct "Tpat_alias" (typing/tast_iterator.ml[173,7203+4]..[173,7203+14])
                            Some
                              []
                              pattern (typing/tast_iterator.ml[173,7203+15]..[173,7203+24])
                                Ppat_tuple
                                [
                                  pattern (typing/tast_iterator.ml[173,7203+16]..[173,7203+17])
                                    Ppat_var "p" (typing/tast_iterator.ml[173,7203+16]..[173,7203+17])
                                  pattern (typing/tast_iterator.ml[173,7203+19]..[173,7203+20])
                                    Ppat_any
                                  pattern (typing/tast_iterator.ml[173,7203+22]..[173,7203+23])
                                    Ppat_any
                                ]
                          expression (typing/tast_iterator.ml[173,7203+28]..[173,7203+41])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[173,7203+28]..[173,7203+35])
                              Pexp_field
                              expression (typing/tast_iterator.ml[173,7203+28]..[173,7203+31])
                                Pexp_ident "sub" (typing/tast_iterator.ml[173,7203+28]..[173,7203+31])
                              "pat" (typing/tast_iterator.ml[173,7203+32]..[173,7203+35])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[173,7203+36]..[173,7203+39])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[173,7203+36]..[173,7203+39])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[173,7203+40]..[173,7203+41])
                                  Pexp_ident "p" (typing/tast_iterator.ml[173,7203+40]..[173,7203+41])
                            ]
                        <case>
                          pattern (typing/tast_iterator.ml[174,7245+4]..[174,7245+15])
                            Ppat_construct "Tpat_lazy" (typing/tast_iterator.ml[174,7245+4]..[174,7245+13])
                            Some
                              []
                              pattern (typing/tast_iterator.ml[174,7245+14]..[174,7245+15])
                                Ppat_var "p" (typing/tast_iterator.ml[174,7245+14]..[174,7245+15])
                          expression (typing/tast_iterator.ml[174,7245+19]..[174,7245+32])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[174,7245+19]..[174,7245+26])
                              Pexp_field
                              expression (typing/tast_iterator.ml[174,7245+19]..[174,7245+22])
                                Pexp_ident "sub" (typing/tast_iterator.ml[174,7245+19]..[174,7245+22])
                              "pat" (typing/tast_iterator.ml[174,7245+23]..[174,7245+26])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[174,7245+27]..[174,7245+30])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[174,7245+27]..[174,7245+30])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[174,7245+31]..[174,7245+32])
                                  Pexp_ident "p" (typing/tast_iterator.ml[174,7245+31]..[174,7245+32])
                            ]
                        <case>
                          pattern (typing/tast_iterator.ml[175,7278+4]..[175,7278+16])
                            Ppat_construct "Tpat_value" (typing/tast_iterator.ml[175,7278+4]..[175,7278+14])
                            Some
                              []
                              pattern (typing/tast_iterator.ml[175,7278+15]..[175,7278+16])
                                Ppat_var "p" (typing/tast_iterator.ml[175,7278+15]..[175,7278+16])
                          expression (typing/tast_iterator.ml[175,7278+20]..[175,7278+46])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[175,7278+20]..[175,7278+27])
                              Pexp_field
                              expression (typing/tast_iterator.ml[175,7278+20]..[175,7278+23])
                                Pexp_ident "sub" (typing/tast_iterator.ml[175,7278+20]..[175,7278+23])
                              "pat" (typing/tast_iterator.ml[175,7278+24]..[175,7278+27])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[175,7278+28]..[175,7278+31])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[175,7278+28]..[175,7278+31])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[175,7278+32]..[175,7278+46])
                                  Pexp_coerce
                                  expression (typing/tast_iterator.ml[175,7278+33]..[175,7278+34])
                                    Pexp_ident "p" (typing/tast_iterator.ml[175,7278+33]..[175,7278+34])
                                  None
                                  core_type (typing/tast_iterator.ml[175,7278+38]..[175,7278+45])
                                    Ptyp_constr "pattern" (typing/tast_iterator.ml[175,7278+38]..[175,7278+45])
                                    []
                            ]
                        <case>
                          pattern (typing/tast_iterator.ml[176,7325+4]..[176,7325+20])
                            Ppat_construct "Tpat_exception" (typing/tast_iterator.ml[176,7325+4]..[176,7325+18])
                            Some
                              []
                              pattern (typing/tast_iterator.ml[176,7325+19]..[176,7325+20])
                                Ppat_var "p" (typing/tast_iterator.ml[176,7325+19]..[176,7325+20])
                          expression (typing/tast_iterator.ml[176,7325+24]..[176,7325+37])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[176,7325+24]..[176,7325+31])
                              Pexp_field
                              expression (typing/tast_iterator.ml[176,7325+24]..[176,7325+27])
                                Pexp_ident "sub" (typing/tast_iterator.ml[176,7325+24]..[176,7325+27])
                              "pat" (typing/tast_iterator.ml[176,7325+28]..[176,7325+31])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[176,7325+32]..[176,7325+35])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[176,7325+32]..[176,7325+35])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[176,7325+36]..[176,7325+37])
                                  Pexp_ident "p" (typing/tast_iterator.ml[176,7325+36]..[176,7325+37])
                            ]
                        <case>
                          pattern (typing/tast_iterator.ml[177,7363+4]..[177,7363+23])
                            Ppat_construct "Tpat_or" (typing/tast_iterator.ml[177,7363+4]..[177,7363+11])
                            Some
                              []
                              pattern (typing/tast_iterator.ml[177,7363+12]..[177,7363+23])
                                Ppat_tuple
                                [
                                  pattern (typing/tast_iterator.ml[177,7363+13]..[177,7363+15])
                                    Ppat_var "p1" (typing/tast_iterator.ml[177,7363+13]..[177,7363+15])
                                  pattern (typing/tast_iterator.ml[177,7363+17]..[177,7363+19])
                                    Ppat_var "p2" (typing/tast_iterator.ml[177,7363+17]..[177,7363+19])
                                  pattern (typing/tast_iterator.ml[177,7363+21]..[177,7363+22])
                                    Ppat_any
                                ]
                          expression (typing/tast_iterator.ml[178,7390+6]..[179,7412+20])
                            Pexp_sequence
                            expression (typing/tast_iterator.ml[178,7390+6]..[178,7390+20])
                              Pexp_apply
                              expression (typing/tast_iterator.ml[178,7390+6]..[178,7390+13])
                                Pexp_field
                                expression (typing/tast_iterator.ml[178,7390+6]..[178,7390+9])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[178,7390+6]..[178,7390+9])
                                "pat" (typing/tast_iterator.ml[178,7390+10]..[178,7390+13])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[178,7390+14]..[178,7390+17])
                                    Pexp_ident "sub" (typing/tast_iterator.ml[178,7390+14]..[178,7390+17])
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[178,7390+18]..[178,7390+20])
                                    Pexp_ident "p1" (typing/tast_iterator.ml[178,7390+18]..[178,7390+20])
                              ]
                            expression (typing/tast_iterator.ml[179,7412+6]..[179,7412+20])
                              Pexp_apply
                              expression (typing/tast_iterator.ml[179,7412+6]..[179,7412+13])
                                Pexp_field
                                expression (typing/tast_iterator.ml[179,7412+6]..[179,7412+9])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[179,7412+6]..[179,7412+9])
                                "pat" (typing/tast_iterator.ml[179,7412+10]..[179,7412+13])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[179,7412+14]..[179,7412+17])
                                    Pexp_ident "sub" (typing/tast_iterator.ml[179,7412+14]..[179,7412+17])
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[179,7412+18]..[179,7412+20])
                                    Pexp_ident "p2" (typing/tast_iterator.ml[179,7412+18]..[179,7412+20])
                              ]
                      ]
            core_type (typing/tast_iterator.ml[158,6598+13]..[158,6598+50])
              Ptyp_arrow
              Nolabel
              core_type (typing/tast_iterator.ml[158,6598+13]..[158,6598+21])
                Ptyp_constr "iterator" (typing/tast_iterator.ml[158,6598+13]..[158,6598+21])
                []
              core_type (typing/tast_iterator.ml[158,6598+25]..[158,6598+50])
                Ptyp_arrow
                Nolabel
                core_type (typing/tast_iterator.ml[158,6598+25]..[158,6598+42])
                  Ptyp_constr "general_pattern" (typing/tast_iterator.ml[158,6598+27]..[158,6598+42])
                  [
                    core_type (typing/tast_iterator.ml[158,6598+25]..[158,6598+26])
                      Ptyp_constr "k" (typing/tast_iterator.ml[158,6598+25]..[158,6598+26])
                      []
                  ]
                core_type (typing/tast_iterator.ml[158,6598+46]..[158,6598+50])
                  Ptyp_constr "unit" (typing/tast_iterator.ml[158,6598+46]..[158,6598+50])
                  []
    ]
  structure_item (typing/tast_iterator.ml[181,7434+0]..[262,10250+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[181,7434+4]..[181,7434+8])
          Ppat_var "expr" (typing/tast_iterator.ml[181,7434+4]..[181,7434+8])
        expression (typing/tast_iterator.ml[181,7434+9]..[262,10250+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[181,7434+9]..[181,7434+12])
            Ppat_var "sub" (typing/tast_iterator.ml[181,7434+9]..[181,7434+12])
          expression (typing/tast_iterator.ml[181,7434+13]..[262,10250+20]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[181,7434+13]..[181,7434+46])
              Ppat_record Open
              [
                "exp_extra" (typing/tast_iterator.ml[181,7434+14]..[181,7434+23]) ghost
                  pattern (typing/tast_iterator.ml[181,7434+14]..[181,7434+23])
                    Ppat_var "exp_extra" (typing/tast_iterator.ml[181,7434+14]..[181,7434+23])
                "exp_desc" (typing/tast_iterator.ml[181,7434+25]..[181,7434+33]) ghost
                  pattern (typing/tast_iterator.ml[181,7434+25]..[181,7434+33])
                    Ppat_var "exp_desc" (typing/tast_iterator.ml[181,7434+25]..[181,7434+33])
                "exp_env" (typing/tast_iterator.ml[181,7434+35]..[181,7434+42]) ghost
                  pattern (typing/tast_iterator.ml[181,7434+35]..[181,7434+42])
                    Ppat_var "exp_env" (typing/tast_iterator.ml[181,7434+35]..[181,7434+42])
              ]
            expression (typing/tast_iterator.ml[182,7483+2]..[262,10250+20])
              Pexp_let Nonrec
              [
                <def>
                  pattern (typing/tast_iterator.ml[182,7483+6]..[182,7483+11])
                    Ppat_var "extra" (typing/tast_iterator.ml[182,7483+6]..[182,7483+11])
                  expression (typing/tast_iterator.ml[182,7483+14]..[188,7677+52])
                    Pexp_function
                    [
                      <case>
                        pattern (typing/tast_iterator.ml[183,7506+6]..[183,7506+25])
                          Ppat_construct "Texp_constraint" (typing/tast_iterator.ml[183,7506+6]..[183,7506+21])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[183,7506+22]..[183,7506+25])
                              Ppat_var "cty" (typing/tast_iterator.ml[183,7506+22]..[183,7506+25])
                        expression (typing/tast_iterator.ml[183,7506+29]..[183,7506+44])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[183,7506+29]..[183,7506+36])
                            Pexp_field
                            expression (typing/tast_iterator.ml[183,7506+29]..[183,7506+32])
                              Pexp_ident "sub" (typing/tast_iterator.ml[183,7506+29]..[183,7506+32])
                            "typ" (typing/tast_iterator.ml[183,7506+33]..[183,7506+36])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[183,7506+37]..[183,7506+40])
                                Pexp_ident "sub" (typing/tast_iterator.ml[183,7506+37]..[183,7506+40])
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[183,7506+41]..[183,7506+44])
                                Pexp_ident "cty" (typing/tast_iterator.ml[183,7506+41]..[183,7506+44])
                          ]
                      <case>
                        pattern (typing/tast_iterator.ml[184,7551+6]..[184,7551+30])
                          Ppat_construct "Texp_coerce" (typing/tast_iterator.ml[184,7551+6]..[184,7551+17])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[184,7551+18]..[184,7551+30])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[184,7551+19]..[184,7551+23])
                                  Ppat_var "cty1" (typing/tast_iterator.ml[184,7551+19]..[184,7551+23])
                                pattern (typing/tast_iterator.ml[184,7551+25]..[184,7551+29])
                                  Ppat_var "cty2" (typing/tast_iterator.ml[184,7551+25]..[184,7551+29])
                              ]
                        expression (typing/tast_iterator.ml[185,7585+8]..[186,7625+24])
                          Pexp_sequence
                          expression (typing/tast_iterator.ml[185,7585+8]..[185,7585+38])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[185,7585+8]..[185,7585+19])
                              Pexp_ident "Option.iter" (typing/tast_iterator.ml[185,7585+8]..[185,7585+19])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[185,7585+20]..[185,7585+33])
                                  Pexp_apply
                                  expression (typing/tast_iterator.ml[185,7585+21]..[185,7585+28])
                                    Pexp_field
                                    expression (typing/tast_iterator.ml[185,7585+21]..[185,7585+24])
                                      Pexp_ident "sub" (typing/tast_iterator.ml[185,7585+21]..[185,7585+24])
                                    "typ" (typing/tast_iterator.ml[185,7585+25]..[185,7585+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/tast_iterator.ml[185,7585+29]..[185,7585+32])
                                        Pexp_ident "sub" (typing/tast_iterator.ml[185,7585+29]..[185,7585+32])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[185,7585+34]..[185,7585+38])
                                  Pexp_ident "cty1" (typing/tast_iterator.ml[185,7585+34]..[185,7585+38])
                            ]
                          expression (typing/tast_iterator.ml[186,7625+8]..[186,7625+24])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[186,7625+8]..[186,7625+15])
                              Pexp_field
                              expression (typing/tast_iterator.ml[186,7625+8]..[186,7625+11])
                                Pexp_ident "sub" (typing/tast_iterator.ml[186,7625+8]..[186,7625+11])
                              "typ" (typing/tast_iterator.ml[186,7625+12]..[186,7625+15])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[186,7625+16]..[186,7625+19])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[186,7625+16]..[186,7625+19])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[186,7625+20]..[186,7625+24])
                                  Pexp_ident "cty2" (typing/tast_iterator.ml[186,7625+20]..[186,7625+24])
                            ]
                      <case>
                        pattern (typing/tast_iterator.ml[187,7650+6]..[187,7650+20])
                          Ppat_construct "Texp_newtype" (typing/tast_iterator.ml[187,7650+6]..[187,7650+18])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[187,7650+19]..[187,7650+20])
                              Ppat_any
                        expression (typing/tast_iterator.ml[187,7650+24]..[187,7650+26])
                          Pexp_construct "()" (typing/tast_iterator.ml[187,7650+24]..[187,7650+26])
                          None
                      <case>
                        pattern (typing/tast_iterator.ml[188,7677+6]..[188,7677+19])
                          Ppat_construct "Texp_poly" (typing/tast_iterator.ml[188,7677+6]..[188,7677+15])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[188,7677+16]..[188,7677+19])
                              Ppat_var "cto" (typing/tast_iterator.ml[188,7677+16]..[188,7677+19])
                        expression (typing/tast_iterator.ml[188,7677+23]..[188,7677+52])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[188,7677+23]..[188,7677+34])
                            Pexp_ident "Option.iter" (typing/tast_iterator.ml[188,7677+23]..[188,7677+34])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[188,7677+35]..[188,7677+48])
                                Pexp_apply
                                expression (typing/tast_iterator.ml[188,7677+36]..[188,7677+43])
                                  Pexp_field
                                  expression (typing/tast_iterator.ml[188,7677+36]..[188,7677+39])
                                    Pexp_ident "sub" (typing/tast_iterator.ml[188,7677+36]..[188,7677+39])
                                  "typ" (typing/tast_iterator.ml[188,7677+40]..[188,7677+43])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/tast_iterator.ml[188,7677+44]..[188,7677+47])
                                      Pexp_ident "sub" (typing/tast_iterator.ml[188,7677+44]..[188,7677+47])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[188,7677+49]..[188,7677+52])
                                Pexp_ident "cto" (typing/tast_iterator.ml[188,7677+49]..[188,7677+52])
                          ]
                    ]
              ]
              expression (typing/tast_iterator.ml[190,7735+2]..[262,10250+20])
                Pexp_sequence
                expression (typing/tast_iterator.ml[190,7735+2]..[190,7735+48])
                  Pexp_apply
                  expression (typing/tast_iterator.ml[190,7735+2]..[190,7735+11])
                    Pexp_ident "List.iter" (typing/tast_iterator.ml[190,7735+2]..[190,7735+11])
                  [
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[190,7735+12]..[190,7735+38])
                        Pexp_fun
                        Nolabel
                        None
                        pattern (typing/tast_iterator.ml[190,7735+17]..[190,7735+26])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[190,7735+18]..[190,7735+19])
                              Ppat_var "e" (typing/tast_iterator.ml[190,7735+18]..[190,7735+19])
                            pattern (typing/tast_iterator.ml[190,7735+21]..[190,7735+22])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[190,7735+24]..[190,7735+25])
                              Ppat_any
                          ]
                        expression (typing/tast_iterator.ml[190,7735+30]..[190,7735+37])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[190,7735+30]..[190,7735+35])
                            Pexp_ident "extra" (typing/tast_iterator.ml[190,7735+30]..[190,7735+35])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[190,7735+36]..[190,7735+37])
                                Pexp_ident "e" (typing/tast_iterator.ml[190,7735+36]..[190,7735+37])
                          ]
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[190,7735+39]..[190,7735+48])
                        Pexp_ident "exp_extra" (typing/tast_iterator.ml[190,7735+39]..[190,7735+48])
                  ]
                expression (typing/tast_iterator.ml[191,7785+2]..[262,10250+20])
                  Pexp_sequence
                  expression (typing/tast_iterator.ml[191,7785+2]..[191,7785+21])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[191,7785+2]..[191,7785+9])
                      Pexp_field
                      expression (typing/tast_iterator.ml[191,7785+2]..[191,7785+5])
                        Pexp_ident "sub" (typing/tast_iterator.ml[191,7785+2]..[191,7785+5])
                      "env" (typing/tast_iterator.ml[191,7785+6]..[191,7785+9])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[191,7785+10]..[191,7785+13])
                          Pexp_ident "sub" (typing/tast_iterator.ml[191,7785+10]..[191,7785+13])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[191,7785+14]..[191,7785+21])
                          Pexp_ident "exp_env" (typing/tast_iterator.ml[191,7785+14]..[191,7785+21])
                    ]
                  expression (typing/tast_iterator.ml[192,7808+2]..[262,10250+20])
                    Pexp_match
                    expression (typing/tast_iterator.ml[192,7808+8]..[192,7808+16])
                      Pexp_ident "exp_desc" (typing/tast_iterator.ml[192,7808+8]..[192,7808+16])
                    [
                      <case>
                        pattern (typing/tast_iterator.ml[193,7830+4]..[193,7830+16])
                          Ppat_construct "Texp_ident" (typing/tast_iterator.ml[193,7830+4]..[193,7830+14])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[193,7830+15]..[193,7830+16])
                              Ppat_any
                        expression (typing/tast_iterator.ml[193,7830+21]..[193,7830+23])
                          Pexp_construct "()" (typing/tast_iterator.ml[193,7830+21]..[193,7830+23])
                          None
                      <case>
                        pattern (typing/tast_iterator.ml[194,7854+4]..[194,7854+19])
                          Ppat_construct "Texp_constant" (typing/tast_iterator.ml[194,7854+4]..[194,7854+17])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[194,7854+18]..[194,7854+19])
                              Ppat_any
                        expression (typing/tast_iterator.ml[194,7854+23]..[194,7854+25])
                          Pexp_construct "()" (typing/tast_iterator.ml[194,7854+23]..[194,7854+25])
                          None
                      <case>
                        pattern (typing/tast_iterator.ml[195,7880+4]..[195,7880+34])
                          Ppat_construct "Texp_let" (typing/tast_iterator.ml[195,7880+4]..[195,7880+12])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[195,7880+13]..[195,7880+34])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[195,7880+14]..[195,7880+22])
                                  Ppat_var "rec_flag" (typing/tast_iterator.ml[195,7880+14]..[195,7880+22])
                                pattern (typing/tast_iterator.ml[195,7880+24]..[195,7880+28])
                                  Ppat_var "list" (typing/tast_iterator.ml[195,7880+24]..[195,7880+28])
                                pattern (typing/tast_iterator.ml[195,7880+30]..[195,7880+33])
                                  Ppat_var "exp" (typing/tast_iterator.ml[195,7880+30]..[195,7880+33])
                              ]
                        expression (typing/tast_iterator.ml[196,7918+6]..[197,7965+22])
                          Pexp_sequence
                          expression (typing/tast_iterator.ml[196,7918+6]..[196,7918+45])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[196,7918+6]..[196,7918+24])
                              Pexp_field
                              expression (typing/tast_iterator.ml[196,7918+6]..[196,7918+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[196,7918+6]..[196,7918+9])
                              "value_bindings" (typing/tast_iterator.ml[196,7918+10]..[196,7918+24])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[196,7918+25]..[196,7918+28])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[196,7918+25]..[196,7918+28])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[196,7918+29]..[196,7918+45])
                                  Pexp_tuple
                                  [
                                    expression (typing/tast_iterator.ml[196,7918+30]..[196,7918+38])
                                      Pexp_ident "rec_flag" (typing/tast_iterator.ml[196,7918+30]..[196,7918+38])
                                    expression (typing/tast_iterator.ml[196,7918+40]..[196,7918+44])
                                      Pexp_ident "list" (typing/tast_iterator.ml[196,7918+40]..[196,7918+44])
                                  ]
                            ]
                          expression (typing/tast_iterator.ml[197,7965+6]..[197,7965+22])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[197,7965+6]..[197,7965+14])
                              Pexp_field
                              expression (typing/tast_iterator.ml[197,7965+6]..[197,7965+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[197,7965+6]..[197,7965+9])
                              "expr" (typing/tast_iterator.ml[197,7965+10]..[197,7965+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[197,7965+15]..[197,7965+18])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[197,7965+15]..[197,7965+18])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[197,7965+19]..[197,7965+22])
                                  Pexp_ident "exp" (typing/tast_iterator.ml[197,7965+19]..[197,7965+22])
                            ]
                      <case>
                        pattern (typing/tast_iterator.ml[198,7988+4]..[198,7988+28])
                          Ppat_construct "Texp_function" (typing/tast_iterator.ml[198,7988+4]..[198,7988+17])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[198,7988+18]..[198,7988+28])
                              Ppat_record Open
                              [
                                "cases" (typing/tast_iterator.ml[198,7988+19]..[198,7988+24]) ghost
                                  pattern (typing/tast_iterator.ml[198,7988+19]..[198,7988+24])
                                    Ppat_var "cases" (typing/tast_iterator.ml[198,7988+19]..[198,7988+24])
                              ]
                        expression (typing/tast_iterator.ml[199,8020+5]..[199,8020+35])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[199,8020+5]..[199,8020+14])
                            Pexp_ident "List.iter" (typing/tast_iterator.ml[199,8020+5]..[199,8020+14])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[199,8020+15]..[199,8020+29])
                                Pexp_apply
                                expression (typing/tast_iterator.ml[199,8020+16]..[199,8020+24])
                                  Pexp_field
                                  expression (typing/tast_iterator.ml[199,8020+16]..[199,8020+19])
                                    Pexp_ident "sub" (typing/tast_iterator.ml[199,8020+16]..[199,8020+19])
                                  "case" (typing/tast_iterator.ml[199,8020+20]..[199,8020+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/tast_iterator.ml[199,8020+25]..[199,8020+28])
                                      Pexp_ident "sub" (typing/tast_iterator.ml[199,8020+25]..[199,8020+28])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[199,8020+30]..[199,8020+35])
                                Pexp_ident "cases" (typing/tast_iterator.ml[199,8020+30]..[199,8020+35])
                          ]
                      <case>
                        pattern (typing/tast_iterator.ml[200,8056+4]..[200,8056+26])
                          Ppat_construct "Texp_apply" (typing/tast_iterator.ml[200,8056+4]..[200,8056+14])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[200,8056+15]..[200,8056+26])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[200,8056+16]..[200,8056+19])
                                  Ppat_var "exp" (typing/tast_iterator.ml[200,8056+16]..[200,8056+19])
                                pattern (typing/tast_iterator.ml[200,8056+21]..[200,8056+25])
                                  Ppat_var "list" (typing/tast_iterator.ml[200,8056+21]..[200,8056+25])
                              ]
                        expression (typing/tast_iterator.ml[201,8086+6]..[202,8110+65])
                          Pexp_sequence
                          expression (typing/tast_iterator.ml[201,8086+6]..[201,8086+22])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[201,8086+6]..[201,8086+14])
                              Pexp_field
                              expression (typing/tast_iterator.ml[201,8086+6]..[201,8086+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[201,8086+6]..[201,8086+9])
                              "expr" (typing/tast_iterator.ml[201,8086+10]..[201,8086+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[201,8086+15]..[201,8086+18])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[201,8086+15]..[201,8086+18])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[201,8086+19]..[201,8086+22])
                                  Pexp_ident "exp" (typing/tast_iterator.ml[201,8086+19]..[201,8086+22])
                            ]
                          expression (typing/tast_iterator.ml[202,8110+6]..[202,8110+65])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[202,8110+6]..[202,8110+15])
                              Pexp_ident "List.iter" (typing/tast_iterator.ml[202,8110+6]..[202,8110+15])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[202,8110+16]..[202,8110+60])
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (typing/tast_iterator.ml[202,8110+21]..[202,8110+27])
                                    Ppat_tuple
                                    [
                                      pattern (typing/tast_iterator.ml[202,8110+22]..[202,8110+23])
                                        Ppat_any
                                      pattern (typing/tast_iterator.ml[202,8110+25]..[202,8110+26])
                                        Ppat_var "o" (typing/tast_iterator.ml[202,8110+25]..[202,8110+26])
                                    ]
                                  expression (typing/tast_iterator.ml[202,8110+31]..[202,8110+59])
                                    Pexp_apply
                                    expression (typing/tast_iterator.ml[202,8110+31]..[202,8110+42])
                                      Pexp_ident "Option.iter" (typing/tast_iterator.ml[202,8110+31]..[202,8110+42])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/tast_iterator.ml[202,8110+43]..[202,8110+57])
                                          Pexp_apply
                                          expression (typing/tast_iterator.ml[202,8110+44]..[202,8110+52])
                                            Pexp_field
                                            expression (typing/tast_iterator.ml[202,8110+44]..[202,8110+47])
                                              Pexp_ident "sub" (typing/tast_iterator.ml[202,8110+44]..[202,8110+47])
                                            "expr" (typing/tast_iterator.ml[202,8110+48]..[202,8110+52])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (typing/tast_iterator.ml[202,8110+53]..[202,8110+56])
                                                Pexp_ident "sub" (typing/tast_iterator.ml[202,8110+53]..[202,8110+56])
                                          ]
                                      <arg>
                                      Nolabel
                                        expression (typing/tast_iterator.ml[202,8110+58]..[202,8110+59])
                                          Pexp_ident "o" (typing/tast_iterator.ml[202,8110+58]..[202,8110+59])
                                    ]
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[202,8110+61]..[202,8110+65])
                                  Pexp_ident "list" (typing/tast_iterator.ml[202,8110+61]..[202,8110+65])
                            ]
                      <case>
                        pattern (typing/tast_iterator.ml[203,8176+4]..[203,8176+30])
                          Ppat_construct "Texp_match" (typing/tast_iterator.ml[203,8176+4]..[203,8176+14])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[203,8176+15]..[203,8176+30])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[203,8176+16]..[203,8176+19])
                                  Ppat_var "exp" (typing/tast_iterator.ml[203,8176+16]..[203,8176+19])
                                pattern (typing/tast_iterator.ml[203,8176+21]..[203,8176+26])
                                  Ppat_var "cases" (typing/tast_iterator.ml[203,8176+21]..[203,8176+26])
                                pattern (typing/tast_iterator.ml[203,8176+28]..[203,8176+29])
                                  Ppat_any
                              ]
                        expression (typing/tast_iterator.ml[204,8210+6]..[205,8234+36])
                          Pexp_sequence
                          expression (typing/tast_iterator.ml[204,8210+6]..[204,8210+22])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[204,8210+6]..[204,8210+14])
                              Pexp_field
                              expression (typing/tast_iterator.ml[204,8210+6]..[204,8210+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[204,8210+6]..[204,8210+9])
                              "expr" (typing/tast_iterator.ml[204,8210+10]..[204,8210+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[204,8210+15]..[204,8210+18])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[204,8210+15]..[204,8210+18])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[204,8210+19]..[204,8210+22])
                                  Pexp_ident "exp" (typing/tast_iterator.ml[204,8210+19]..[204,8210+22])
                            ]
                          expression (typing/tast_iterator.ml[205,8234+6]..[205,8234+36])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[205,8234+6]..[205,8234+15])
                              Pexp_ident "List.iter" (typing/tast_iterator.ml[205,8234+6]..[205,8234+15])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[205,8234+16]..[205,8234+30])
                                  Pexp_apply
                                  expression (typing/tast_iterator.ml[205,8234+17]..[205,8234+25])
                                    Pexp_field
                                    expression (typing/tast_iterator.ml[205,8234+17]..[205,8234+20])
                                      Pexp_ident "sub" (typing/tast_iterator.ml[205,8234+17]..[205,8234+20])
                                    "case" (typing/tast_iterator.ml[205,8234+21]..[205,8234+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/tast_iterator.ml[205,8234+26]..[205,8234+29])
                                        Pexp_ident "sub" (typing/tast_iterator.ml[205,8234+26]..[205,8234+29])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[205,8234+31]..[205,8234+36])
                                  Pexp_ident "cases" (typing/tast_iterator.ml[205,8234+31]..[205,8234+36])
                            ]
                      <case>
                        pattern (typing/tast_iterator.ml[206,8271+4]..[206,8271+25])
                          Ppat_construct "Texp_try" (typing/tast_iterator.ml[206,8271+4]..[206,8271+12])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[206,8271+13]..[206,8271+25])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[206,8271+14]..[206,8271+17])
                                  Ppat_var "exp" (typing/tast_iterator.ml[206,8271+14]..[206,8271+17])
                                pattern (typing/tast_iterator.ml[206,8271+19]..[206,8271+24])
                                  Ppat_var "cases" (typing/tast_iterator.ml[206,8271+19]..[206,8271+24])
                              ]
                        expression (typing/tast_iterator.ml[207,8300+6]..[208,8324+36])
                          Pexp_sequence
                          expression (typing/tast_iterator.ml[207,8300+6]..[207,8300+22])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[207,8300+6]..[207,8300+14])
                              Pexp_field
                              expression (typing/tast_iterator.ml[207,8300+6]..[207,8300+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[207,8300+6]..[207,8300+9])
                              "expr" (typing/tast_iterator.ml[207,8300+10]..[207,8300+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[207,8300+15]..[207,8300+18])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[207,8300+15]..[207,8300+18])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[207,8300+19]..[207,8300+22])
                                  Pexp_ident "exp" (typing/tast_iterator.ml[207,8300+19]..[207,8300+22])
                            ]
                          expression (typing/tast_iterator.ml[208,8324+6]..[208,8324+36])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[208,8324+6]..[208,8324+15])
                              Pexp_ident "List.iter" (typing/tast_iterator.ml[208,8324+6]..[208,8324+15])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[208,8324+16]..[208,8324+30])
                                  Pexp_apply
                                  expression (typing/tast_iterator.ml[208,8324+17]..[208,8324+25])
                                    Pexp_field
                                    expression (typing/tast_iterator.ml[208,8324+17]..[208,8324+20])
                                      Pexp_ident "sub" (typing/tast_iterator.ml[208,8324+17]..[208,8324+20])
                                    "case" (typing/tast_iterator.ml[208,8324+21]..[208,8324+25])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/tast_iterator.ml[208,8324+26]..[208,8324+29])
                                        Pexp_ident "sub" (typing/tast_iterator.ml[208,8324+26]..[208,8324+29])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[208,8324+31]..[208,8324+36])
                                  Pexp_ident "cases" (typing/tast_iterator.ml[208,8324+31]..[208,8324+36])
                            ]
                      <case>
                        pattern (typing/tast_iterator.ml[209,8361+4]..[209,8361+19])
                          Ppat_construct "Texp_tuple" (typing/tast_iterator.ml[209,8361+4]..[209,8361+14])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[209,8361+15]..[209,8361+19])
                              Ppat_var "list" (typing/tast_iterator.ml[209,8361+15]..[209,8361+19])
                        expression (typing/tast_iterator.ml[209,8361+23]..[209,8361+52])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[209,8361+23]..[209,8361+32])
                            Pexp_ident "List.iter" (typing/tast_iterator.ml[209,8361+23]..[209,8361+32])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[209,8361+33]..[209,8361+47])
                                Pexp_apply
                                expression (typing/tast_iterator.ml[209,8361+34]..[209,8361+42])
                                  Pexp_field
                                  expression (typing/tast_iterator.ml[209,8361+34]..[209,8361+37])
                                    Pexp_ident "sub" (typing/tast_iterator.ml[209,8361+34]..[209,8361+37])
                                  "expr" (typing/tast_iterator.ml[209,8361+38]..[209,8361+42])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/tast_iterator.ml[209,8361+43]..[209,8361+46])
                                      Pexp_ident "sub" (typing/tast_iterator.ml[209,8361+43]..[209,8361+46])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[209,8361+48]..[209,8361+52])
                                Pexp_ident "list" (typing/tast_iterator.ml[209,8361+48]..[209,8361+52])
                          ]
                      <case>
                        pattern (typing/tast_iterator.ml[210,8414+4]..[210,8414+31])
                          Ppat_construct "Texp_construct" (typing/tast_iterator.ml[210,8414+4]..[210,8414+18])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[210,8414+19]..[210,8414+31])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[210,8414+20]..[210,8414+21])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[210,8414+23]..[210,8414+24])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[210,8414+26]..[210,8414+30])
                                  Ppat_var "args" (typing/tast_iterator.ml[210,8414+26]..[210,8414+30])
                              ]
                        expression (typing/tast_iterator.ml[210,8414+35]..[210,8414+64])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[210,8414+35]..[210,8414+44])
                            Pexp_ident "List.iter" (typing/tast_iterator.ml[210,8414+35]..[210,8414+44])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[210,8414+45]..[210,8414+59])
                                Pexp_apply
                                expression (typing/tast_iterator.ml[210,8414+46]..[210,8414+54])
                                  Pexp_field
                                  expression (typing/tast_iterator.ml[210,8414+46]..[210,8414+49])
                                    Pexp_ident "sub" (typing/tast_iterator.ml[210,8414+46]..[210,8414+49])
                                  "expr" (typing/tast_iterator.ml[210,8414+50]..[210,8414+54])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/tast_iterator.ml[210,8414+55]..[210,8414+58])
                                      Pexp_ident "sub" (typing/tast_iterator.ml[210,8414+55]..[210,8414+58])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[210,8414+60]..[210,8414+64])
                                Pexp_ident "args" (typing/tast_iterator.ml[210,8414+60]..[210,8414+64])
                          ]
                      <case>
                        pattern (typing/tast_iterator.ml[211,8479+4]..[211,8479+26])
                          Ppat_construct "Texp_variant" (typing/tast_iterator.ml[211,8479+4]..[211,8479+16])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[211,8479+17]..[211,8479+26])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[211,8479+18]..[211,8479+19])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[211,8479+21]..[211,8479+25])
                                  Ppat_var "expo" (typing/tast_iterator.ml[211,8479+21]..[211,8479+25])
                              ]
                        expression (typing/tast_iterator.ml[211,8479+30]..[211,8479+61])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[211,8479+30]..[211,8479+41])
                            Pexp_ident "Option.iter" (typing/tast_iterator.ml[211,8479+30]..[211,8479+41])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[211,8479+42]..[211,8479+56])
                                Pexp_apply
                                expression (typing/tast_iterator.ml[211,8479+43]..[211,8479+51])
                                  Pexp_field
                                  expression (typing/tast_iterator.ml[211,8479+43]..[211,8479+46])
                                    Pexp_ident "sub" (typing/tast_iterator.ml[211,8479+43]..[211,8479+46])
                                  "expr" (typing/tast_iterator.ml[211,8479+47]..[211,8479+51])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/tast_iterator.ml[211,8479+52]..[211,8479+55])
                                      Pexp_ident "sub" (typing/tast_iterator.ml[211,8479+52]..[211,8479+55])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[211,8479+57]..[211,8479+61])
                                Pexp_ident "expo" (typing/tast_iterator.ml[211,8479+57]..[211,8479+61])
                          ]
                      <case>
                        pattern (typing/tast_iterator.ml[212,8541+4]..[212,8541+49])
                          Ppat_construct "Texp_record" (typing/tast_iterator.ml[212,8541+4]..[212,8541+15])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[212,8541+16]..[212,8541+49])
                              Ppat_record Open
                              [
                                "fields" (typing/tast_iterator.ml[212,8541+18]..[212,8541+24]) ghost
                                  pattern (typing/tast_iterator.ml[212,8541+18]..[212,8541+24])
                                    Ppat_var "fields" (typing/tast_iterator.ml[212,8541+18]..[212,8541+24])
                                "extended_expression" (typing/tast_iterator.ml[212,8541+26]..[212,8541+45]) ghost
                                  pattern (typing/tast_iterator.ml[212,8541+26]..[212,8541+45])
                                    Ppat_var "extended_expression" (typing/tast_iterator.ml[212,8541+26]..[212,8541+45])
                              ]
                        expression (typing/tast_iterator.ml[213,8594+6]..[217,8717+53])
                          Pexp_sequence
                          expression (typing/tast_iterator.ml[213,8594+6]..[216,8701+14])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[213,8594+6]..[213,8594+16])
                              Pexp_ident "Array.iter" (typing/tast_iterator.ml[213,8594+6]..[213,8594+16])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[213,8594+17]..[215,8647+53])
                                  Pexp_function
                                  [
                                    <case>
                                      pattern (typing/tast_iterator.ml[214,8621+10]..[214,8621+19])
                                        Ppat_tuple
                                        [
                                          pattern (typing/tast_iterator.ml[214,8621+10]..[214,8621+11])
                                            Ppat_any
                                          pattern (typing/tast_iterator.ml[214,8621+13]..[214,8621+19])
                                            Ppat_construct "Kept" (typing/tast_iterator.ml[214,8621+13]..[214,8621+17])
                                            Some
                                              []
                                              pattern (typing/tast_iterator.ml[214,8621+18]..[214,8621+19])
                                                Ppat_any
                                        ]
                                      expression (typing/tast_iterator.ml[214,8621+23]..[214,8621+25])
                                        Pexp_construct "()" (typing/tast_iterator.ml[214,8621+23]..[214,8621+25])
                                        None
                                    <case>
                                      pattern (typing/tast_iterator.ml[215,8647+10]..[215,8647+32])
                                        Ppat_tuple
                                        [
                                          pattern (typing/tast_iterator.ml[215,8647+10]..[215,8647+11])
                                            Ppat_any
                                          pattern (typing/tast_iterator.ml[215,8647+13]..[215,8647+32])
                                            Ppat_construct "Overridden" (typing/tast_iterator.ml[215,8647+13]..[215,8647+23])
                                            Some
                                              []
                                              pattern (typing/tast_iterator.ml[215,8647+24]..[215,8647+32])
                                                Ppat_tuple
                                                [
                                                  pattern (typing/tast_iterator.ml[215,8647+25]..[215,8647+26])
                                                    Ppat_any
                                                  pattern (typing/tast_iterator.ml[215,8647+28]..[215,8647+31])
                                                    Ppat_var "exp" (typing/tast_iterator.ml[215,8647+28]..[215,8647+31])
                                                ]
                                        ]
                                      expression (typing/tast_iterator.ml[215,8647+36]..[215,8647+52])
                                        Pexp_apply
                                        expression (typing/tast_iterator.ml[215,8647+36]..[215,8647+44])
                                          Pexp_field
                                          expression (typing/tast_iterator.ml[215,8647+36]..[215,8647+39])
                                            Pexp_ident "sub" (typing/tast_iterator.ml[215,8647+36]..[215,8647+39])
                                          "expr" (typing/tast_iterator.ml[215,8647+40]..[215,8647+44])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (typing/tast_iterator.ml[215,8647+45]..[215,8647+48])
                                              Pexp_ident "sub" (typing/tast_iterator.ml[215,8647+45]..[215,8647+48])
                                          <arg>
                                          Nolabel
                                            expression (typing/tast_iterator.ml[215,8647+49]..[215,8647+52])
                                              Pexp_ident "exp" (typing/tast_iterator.ml[215,8647+49]..[215,8647+52])
                                        ]
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[216,8701+8]..[216,8701+14])
                                  Pexp_ident "fields" (typing/tast_iterator.ml[216,8701+8]..[216,8701+14])
                            ]
                          expression (typing/tast_iterator.ml[217,8717+6]..[217,8717+52])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[217,8717+6]..[217,8717+17])
                              Pexp_ident "Option.iter" (typing/tast_iterator.ml[217,8717+6]..[217,8717+17])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[217,8717+18]..[217,8717+32])
                                  Pexp_apply
                                  expression (typing/tast_iterator.ml[217,8717+19]..[217,8717+27])
                                    Pexp_field
                                    expression (typing/tast_iterator.ml[217,8717+19]..[217,8717+22])
                                      Pexp_ident "sub" (typing/tast_iterator.ml[217,8717+19]..[217,8717+22])
                                    "expr" (typing/tast_iterator.ml[217,8717+23]..[217,8717+27])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/tast_iterator.ml[217,8717+28]..[217,8717+31])
                                        Pexp_ident "sub" (typing/tast_iterator.ml[217,8717+28]..[217,8717+31])
                                  ]
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[217,8717+33]..[217,8717+52])
                                  Pexp_ident "extended_expression" (typing/tast_iterator.ml[217,8717+33]..[217,8717+52])
                            ]
                      <case>
                        pattern (typing/tast_iterator.ml[218,8771+4]..[218,8771+26])
                          Ppat_construct "Texp_field" (typing/tast_iterator.ml[218,8771+4]..[218,8771+14])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[218,8771+15]..[218,8771+26])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[218,8771+16]..[218,8771+19])
                                  Ppat_var "exp" (typing/tast_iterator.ml[218,8771+16]..[218,8771+19])
                                pattern (typing/tast_iterator.ml[218,8771+21]..[218,8771+22])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[218,8771+24]..[218,8771+25])
                                  Ppat_any
                              ]
                        expression (typing/tast_iterator.ml[218,8771+30]..[218,8771+46])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[218,8771+30]..[218,8771+38])
                            Pexp_field
                            expression (typing/tast_iterator.ml[218,8771+30]..[218,8771+33])
                              Pexp_ident "sub" (typing/tast_iterator.ml[218,8771+30]..[218,8771+33])
                            "expr" (typing/tast_iterator.ml[218,8771+34]..[218,8771+38])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[218,8771+39]..[218,8771+42])
                                Pexp_ident "sub" (typing/tast_iterator.ml[218,8771+39]..[218,8771+42])
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[218,8771+43]..[218,8771+46])
                                Pexp_ident "exp" (typing/tast_iterator.ml[218,8771+43]..[218,8771+46])
                          ]
                      <case>
                        pattern (typing/tast_iterator.ml[219,8818+4]..[219,8818+36])
                          Ppat_construct "Texp_setfield" (typing/tast_iterator.ml[219,8818+4]..[219,8818+17])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[219,8818+18]..[219,8818+36])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[219,8818+19]..[219,8818+23])
                                  Ppat_var "exp1" (typing/tast_iterator.ml[219,8818+19]..[219,8818+23])
                                pattern (typing/tast_iterator.ml[219,8818+25]..[219,8818+26])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[219,8818+28]..[219,8818+29])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[219,8818+31]..[219,8818+35])
                                  Ppat_var "exp2" (typing/tast_iterator.ml[219,8818+31]..[219,8818+35])
                              ]
                        expression (typing/tast_iterator.ml[220,8858+6]..[221,8883+23])
                          Pexp_sequence
                          expression (typing/tast_iterator.ml[220,8858+6]..[220,8858+23])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[220,8858+6]..[220,8858+14])
                              Pexp_field
                              expression (typing/tast_iterator.ml[220,8858+6]..[220,8858+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[220,8858+6]..[220,8858+9])
                              "expr" (typing/tast_iterator.ml[220,8858+10]..[220,8858+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[220,8858+15]..[220,8858+18])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[220,8858+15]..[220,8858+18])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[220,8858+19]..[220,8858+23])
                                  Pexp_ident "exp1" (typing/tast_iterator.ml[220,8858+19]..[220,8858+23])
                            ]
                          expression (typing/tast_iterator.ml[221,8883+6]..[221,8883+23])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[221,8883+6]..[221,8883+14])
                              Pexp_field
                              expression (typing/tast_iterator.ml[221,8883+6]..[221,8883+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[221,8883+6]..[221,8883+9])
                              "expr" (typing/tast_iterator.ml[221,8883+10]..[221,8883+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[221,8883+15]..[221,8883+18])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[221,8883+15]..[221,8883+18])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[221,8883+19]..[221,8883+23])
                                  Pexp_ident "exp2" (typing/tast_iterator.ml[221,8883+19]..[221,8883+23])
                            ]
                      <case>
                        pattern (typing/tast_iterator.ml[222,8907+4]..[222,8907+19])
                          Ppat_construct "Texp_array" (typing/tast_iterator.ml[222,8907+4]..[222,8907+14])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[222,8907+15]..[222,8907+19])
                              Ppat_var "list" (typing/tast_iterator.ml[222,8907+15]..[222,8907+19])
                        expression (typing/tast_iterator.ml[222,8907+23]..[222,8907+52])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[222,8907+23]..[222,8907+32])
                            Pexp_ident "List.iter" (typing/tast_iterator.ml[222,8907+23]..[222,8907+32])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[222,8907+33]..[222,8907+47])
                                Pexp_apply
                                expression (typing/tast_iterator.ml[222,8907+34]..[222,8907+42])
                                  Pexp_field
                                  expression (typing/tast_iterator.ml[222,8907+34]..[222,8907+37])
                                    Pexp_ident "sub" (typing/tast_iterator.ml[222,8907+34]..[222,8907+37])
                                  "expr" (typing/tast_iterator.ml[222,8907+38]..[222,8907+42])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/tast_iterator.ml[222,8907+43]..[222,8907+46])
                                      Pexp_ident "sub" (typing/tast_iterator.ml[222,8907+43]..[222,8907+46])
                                ]
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[222,8907+48]..[222,8907+52])
                                Pexp_ident "list" (typing/tast_iterator.ml[222,8907+48]..[222,8907+52])
                          ]
                      <case>
                        pattern (typing/tast_iterator.ml[223,8960+4]..[223,8960+38])
                          Ppat_construct "Texp_ifthenelse" (typing/tast_iterator.ml[223,8960+4]..[223,8960+19])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[223,8960+20]..[223,8960+38])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[223,8960+21]..[223,8960+25])
                                  Ppat_var "exp1" (typing/tast_iterator.ml[223,8960+21]..[223,8960+25])
                                pattern (typing/tast_iterator.ml[223,8960+27]..[223,8960+31])
                                  Ppat_var "exp2" (typing/tast_iterator.ml[223,8960+27]..[223,8960+31])
                                pattern (typing/tast_iterator.ml[223,8960+33]..[223,8960+37])
                                  Ppat_var "expo" (typing/tast_iterator.ml[223,8960+33]..[223,8960+37])
                              ]
                        expression (typing/tast_iterator.ml[224,9002+6]..[226,9052+37])
                          Pexp_sequence
                          expression (typing/tast_iterator.ml[224,9002+6]..[224,9002+23])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[224,9002+6]..[224,9002+14])
                              Pexp_field
                              expression (typing/tast_iterator.ml[224,9002+6]..[224,9002+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[224,9002+6]..[224,9002+9])
                              "expr" (typing/tast_iterator.ml[224,9002+10]..[224,9002+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[224,9002+15]..[224,9002+18])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[224,9002+15]..[224,9002+18])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[224,9002+19]..[224,9002+23])
                                  Pexp_ident "exp1" (typing/tast_iterator.ml[224,9002+19]..[224,9002+23])
                            ]
                          expression (typing/tast_iterator.ml[225,9027+6]..[226,9052+37])
                            Pexp_sequence
                            expression (typing/tast_iterator.ml[225,9027+6]..[225,9027+23])
                              Pexp_apply
                              expression (typing/tast_iterator.ml[225,9027+6]..[225,9027+14])
                                Pexp_field
                                expression (typing/tast_iterator.ml[225,9027+6]..[225,9027+9])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[225,9027+6]..[225,9027+9])
                                "expr" (typing/tast_iterator.ml[225,9027+10]..[225,9027+14])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[225,9027+15]..[225,9027+18])
                                    Pexp_ident "sub" (typing/tast_iterator.ml[225,9027+15]..[225,9027+18])
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[225,9027+19]..[225,9027+23])
                                    Pexp_ident "exp2" (typing/tast_iterator.ml[225,9027+19]..[225,9027+23])
                              ]
                            expression (typing/tast_iterator.ml[226,9052+6]..[226,9052+37])
                              Pexp_apply
                              expression (typing/tast_iterator.ml[226,9052+6]..[226,9052+17])
                                Pexp_ident "Option.iter" (typing/tast_iterator.ml[226,9052+6]..[226,9052+17])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[226,9052+18]..[226,9052+32])
                                    Pexp_apply
                                    expression (typing/tast_iterator.ml[226,9052+19]..[226,9052+27])
                                      Pexp_field
                                      expression (typing/tast_iterator.ml[226,9052+19]..[226,9052+22])
                                        Pexp_ident "sub" (typing/tast_iterator.ml[226,9052+19]..[226,9052+22])
                                      "expr" (typing/tast_iterator.ml[226,9052+23]..[226,9052+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/tast_iterator.ml[226,9052+28]..[226,9052+31])
                                          Pexp_ident "sub" (typing/tast_iterator.ml[226,9052+28]..[226,9052+31])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[226,9052+33]..[226,9052+37])
                                    Pexp_ident "expo" (typing/tast_iterator.ml[226,9052+33]..[226,9052+37])
                              ]
                      <case>
                        pattern (typing/tast_iterator.ml[227,9090+4]..[227,9090+30])
                          Ppat_construct "Texp_sequence" (typing/tast_iterator.ml[227,9090+4]..[227,9090+17])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[227,9090+18]..[227,9090+30])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[227,9090+19]..[227,9090+23])
                                  Ppat_var "exp1" (typing/tast_iterator.ml[227,9090+19]..[227,9090+23])
                                pattern (typing/tast_iterator.ml[227,9090+25]..[227,9090+29])
                                  Ppat_var "exp2" (typing/tast_iterator.ml[227,9090+25]..[227,9090+29])
                              ]
                        expression (typing/tast_iterator.ml[228,9124+6]..[229,9149+23])
                          Pexp_sequence
                          expression (typing/tast_iterator.ml[228,9124+6]..[228,9124+23])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[228,9124+6]..[228,9124+14])
                              Pexp_field
                              expression (typing/tast_iterator.ml[228,9124+6]..[228,9124+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[228,9124+6]..[228,9124+9])
                              "expr" (typing/tast_iterator.ml[228,9124+10]..[228,9124+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[228,9124+15]..[228,9124+18])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[228,9124+15]..[228,9124+18])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[228,9124+19]..[228,9124+23])
                                  Pexp_ident "exp1" (typing/tast_iterator.ml[228,9124+19]..[228,9124+23])
                            ]
                          expression (typing/tast_iterator.ml[229,9149+6]..[229,9149+23])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[229,9149+6]..[229,9149+14])
                              Pexp_field
                              expression (typing/tast_iterator.ml[229,9149+6]..[229,9149+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[229,9149+6]..[229,9149+9])
                              "expr" (typing/tast_iterator.ml[229,9149+10]..[229,9149+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[229,9149+15]..[229,9149+18])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[229,9149+15]..[229,9149+18])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[229,9149+19]..[229,9149+23])
                                  Pexp_ident "exp2" (typing/tast_iterator.ml[229,9149+19]..[229,9149+23])
                            ]
                      <case>
                        pattern (typing/tast_iterator.ml[230,9173+4]..[230,9173+27])
                          Ppat_construct "Texp_while" (typing/tast_iterator.ml[230,9173+4]..[230,9173+14])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[230,9173+15]..[230,9173+27])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[230,9173+16]..[230,9173+20])
                                  Ppat_var "exp1" (typing/tast_iterator.ml[230,9173+16]..[230,9173+20])
                                pattern (typing/tast_iterator.ml[230,9173+22]..[230,9173+26])
                                  Ppat_var "exp2" (typing/tast_iterator.ml[230,9173+22]..[230,9173+26])
                              ]
                        expression (typing/tast_iterator.ml[231,9204+6]..[232,9229+23])
                          Pexp_sequence
                          expression (typing/tast_iterator.ml[231,9204+6]..[231,9204+23])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[231,9204+6]..[231,9204+14])
                              Pexp_field
                              expression (typing/tast_iterator.ml[231,9204+6]..[231,9204+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[231,9204+6]..[231,9204+9])
                              "expr" (typing/tast_iterator.ml[231,9204+10]..[231,9204+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[231,9204+15]..[231,9204+18])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[231,9204+15]..[231,9204+18])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[231,9204+19]..[231,9204+23])
                                  Pexp_ident "exp1" (typing/tast_iterator.ml[231,9204+19]..[231,9204+23])
                            ]
                          expression (typing/tast_iterator.ml[232,9229+6]..[232,9229+23])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[232,9229+6]..[232,9229+14])
                              Pexp_field
                              expression (typing/tast_iterator.ml[232,9229+6]..[232,9229+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[232,9229+6]..[232,9229+9])
                              "expr" (typing/tast_iterator.ml[232,9229+10]..[232,9229+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[232,9229+15]..[232,9229+18])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[232,9229+15]..[232,9229+18])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[232,9229+19]..[232,9229+23])
                                  Pexp_ident "exp2" (typing/tast_iterator.ml[232,9229+19]..[232,9229+23])
                            ]
                      <case>
                        pattern (typing/tast_iterator.ml[233,9253+4]..[233,9253+40])
                          Ppat_construct "Texp_for" (typing/tast_iterator.ml[233,9253+4]..[233,9253+12])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[233,9253+13]..[233,9253+40])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[233,9253+14]..[233,9253+15])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[233,9253+17]..[233,9253+18])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[233,9253+20]..[233,9253+24])
                                  Ppat_var "exp1" (typing/tast_iterator.ml[233,9253+20]..[233,9253+24])
                                pattern (typing/tast_iterator.ml[233,9253+26]..[233,9253+30])
                                  Ppat_var "exp2" (typing/tast_iterator.ml[233,9253+26]..[233,9253+30])
                                pattern (typing/tast_iterator.ml[233,9253+32]..[233,9253+33])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[233,9253+35]..[233,9253+39])
                                  Ppat_var "exp3" (typing/tast_iterator.ml[233,9253+35]..[233,9253+39])
                              ]
                        expression (typing/tast_iterator.ml[234,9297+6]..[236,9347+23])
                          Pexp_sequence
                          expression (typing/tast_iterator.ml[234,9297+6]..[234,9297+23])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[234,9297+6]..[234,9297+14])
                              Pexp_field
                              expression (typing/tast_iterator.ml[234,9297+6]..[234,9297+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[234,9297+6]..[234,9297+9])
                              "expr" (typing/tast_iterator.ml[234,9297+10]..[234,9297+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[234,9297+15]..[234,9297+18])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[234,9297+15]..[234,9297+18])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[234,9297+19]..[234,9297+23])
                                  Pexp_ident "exp1" (typing/tast_iterator.ml[234,9297+19]..[234,9297+23])
                            ]
                          expression (typing/tast_iterator.ml[235,9322+6]..[236,9347+23])
                            Pexp_sequence
                            expression (typing/tast_iterator.ml[235,9322+6]..[235,9322+23])
                              Pexp_apply
                              expression (typing/tast_iterator.ml[235,9322+6]..[235,9322+14])
                                Pexp_field
                                expression (typing/tast_iterator.ml[235,9322+6]..[235,9322+9])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[235,9322+6]..[235,9322+9])
                                "expr" (typing/tast_iterator.ml[235,9322+10]..[235,9322+14])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[235,9322+15]..[235,9322+18])
                                    Pexp_ident "sub" (typing/tast_iterator.ml[235,9322+15]..[235,9322+18])
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[235,9322+19]..[235,9322+23])
                                    Pexp_ident "exp2" (typing/tast_iterator.ml[235,9322+19]..[235,9322+23])
                              ]
                            expression (typing/tast_iterator.ml[236,9347+6]..[236,9347+23])
                              Pexp_apply
                              expression (typing/tast_iterator.ml[236,9347+6]..[236,9347+14])
                                Pexp_field
                                expression (typing/tast_iterator.ml[236,9347+6]..[236,9347+9])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[236,9347+6]..[236,9347+9])
                                "expr" (typing/tast_iterator.ml[236,9347+10]..[236,9347+14])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[236,9347+15]..[236,9347+18])
                                    Pexp_ident "sub" (typing/tast_iterator.ml[236,9347+15]..[236,9347+18])
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[236,9347+19]..[236,9347+23])
                                    Pexp_ident "exp3" (typing/tast_iterator.ml[236,9347+19]..[236,9347+23])
                              ]
                      <case>
                        pattern (typing/tast_iterator.ml[237,9371+4]..[237,9371+22])
                          Ppat_construct "Texp_send" (typing/tast_iterator.ml[237,9371+4]..[237,9371+13])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[237,9371+14]..[237,9371+22])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[237,9371+15]..[237,9371+18])
                                  Ppat_var "exp" (typing/tast_iterator.ml[237,9371+15]..[237,9371+18])
                                pattern (typing/tast_iterator.ml[237,9371+20]..[237,9371+21])
                                  Ppat_any
                              ]
                        expression (typing/tast_iterator.ml[238,9397+6]..[238,9397+22])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[238,9397+6]..[238,9397+14])
                            Pexp_field
                            expression (typing/tast_iterator.ml[238,9397+6]..[238,9397+9])
                              Pexp_ident "sub" (typing/tast_iterator.ml[238,9397+6]..[238,9397+9])
                            "expr" (typing/tast_iterator.ml[238,9397+10]..[238,9397+14])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[238,9397+15]..[238,9397+18])
                                Pexp_ident "sub" (typing/tast_iterator.ml[238,9397+15]..[238,9397+18])
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[238,9397+19]..[238,9397+22])
                                Pexp_ident "exp" (typing/tast_iterator.ml[238,9397+19]..[238,9397+22])
                          ]
                      <case>
                        pattern (typing/tast_iterator.ml[239,9420+4]..[239,9420+14])
                          Ppat_construct "Texp_new" (typing/tast_iterator.ml[239,9420+4]..[239,9420+12])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[239,9420+13]..[239,9420+14])
                              Ppat_any
                        expression (typing/tast_iterator.ml[239,9420+18]..[239,9420+20])
                          Pexp_construct "()" (typing/tast_iterator.ml[239,9420+18]..[239,9420+20])
                          None
                      <case>
                        pattern (typing/tast_iterator.ml[240,9441+4]..[240,9441+18])
                          Ppat_construct "Texp_instvar" (typing/tast_iterator.ml[240,9441+4]..[240,9441+16])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[240,9441+17]..[240,9441+18])
                              Ppat_any
                        expression (typing/tast_iterator.ml[240,9441+22]..[240,9441+24])
                          Pexp_construct "()" (typing/tast_iterator.ml[240,9441+22]..[240,9441+24])
                          None
                      <case>
                        pattern (typing/tast_iterator.ml[241,9466+4]..[241,9466+34])
                          Ppat_construct "Texp_setinstvar" (typing/tast_iterator.ml[241,9466+4]..[241,9466+19])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[241,9466+20]..[241,9466+34])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[241,9466+21]..[241,9466+22])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[241,9466+24]..[241,9466+25])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[241,9466+27]..[241,9466+28])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[241,9466+30]..[241,9466+33])
                                  Ppat_var "exp" (typing/tast_iterator.ml[241,9466+30]..[241,9466+33])
                              ]
                        expression (typing/tast_iterator.ml[241,9466+37]..[241,9466+53])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[241,9466+37]..[241,9466+45])
                            Pexp_field
                            expression (typing/tast_iterator.ml[241,9466+37]..[241,9466+40])
                              Pexp_ident "sub" (typing/tast_iterator.ml[241,9466+37]..[241,9466+40])
                            "expr" (typing/tast_iterator.ml[241,9466+41]..[241,9466+45])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[241,9466+46]..[241,9466+49])
                                Pexp_ident "sub" (typing/tast_iterator.ml[241,9466+46]..[241,9466+49])
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[241,9466+50]..[241,9466+53])
                                Pexp_ident "exp" (typing/tast_iterator.ml[241,9466+50]..[241,9466+53])
                          ]
                      <case>
                        pattern (typing/tast_iterator.ml[242,9520+4]..[242,9520+27])
                          Ppat_construct "Texp_override" (typing/tast_iterator.ml[242,9520+4]..[242,9520+17])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[242,9520+18]..[242,9520+27])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[242,9520+19]..[242,9520+20])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[242,9520+22]..[242,9520+26])
                                  Ppat_var "list" (typing/tast_iterator.ml[242,9520+22]..[242,9520+26])
                              ]
                        expression (typing/tast_iterator.ml[243,9551+6]..[243,9551+54])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[243,9551+6]..[243,9551+15])
                            Pexp_ident "List.iter" (typing/tast_iterator.ml[243,9551+6]..[243,9551+15])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[243,9551+16]..[243,9551+49])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/tast_iterator.ml[243,9551+21]..[243,9551+30])
                                  Ppat_tuple
                                  [
                                    pattern (typing/tast_iterator.ml[243,9551+22]..[243,9551+23])
                                      Ppat_any
                                    pattern (typing/tast_iterator.ml[243,9551+25]..[243,9551+26])
                                      Ppat_any
                                    pattern (typing/tast_iterator.ml[243,9551+28]..[243,9551+29])
                                      Ppat_var "e" (typing/tast_iterator.ml[243,9551+28]..[243,9551+29])
                                  ]
                                expression (typing/tast_iterator.ml[243,9551+34]..[243,9551+48])
                                  Pexp_apply
                                  expression (typing/tast_iterator.ml[243,9551+34]..[243,9551+42])
                                    Pexp_field
                                    expression (typing/tast_iterator.ml[243,9551+34]..[243,9551+37])
                                      Pexp_ident "sub" (typing/tast_iterator.ml[243,9551+34]..[243,9551+37])
                                    "expr" (typing/tast_iterator.ml[243,9551+38]..[243,9551+42])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/tast_iterator.ml[243,9551+43]..[243,9551+46])
                                        Pexp_ident "sub" (typing/tast_iterator.ml[243,9551+43]..[243,9551+46])
                                    <arg>
                                    Nolabel
                                      expression (typing/tast_iterator.ml[243,9551+47]..[243,9551+48])
                                        Pexp_ident "e" (typing/tast_iterator.ml[243,9551+47]..[243,9551+48])
                                  ]
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[243,9551+50]..[243,9551+54])
                                Pexp_ident "list" (typing/tast_iterator.ml[243,9551+50]..[243,9551+54])
                          ]
                      <case>
                        pattern (typing/tast_iterator.ml[244,9606+4]..[244,9606+40])
                          Ppat_construct "Texp_letmodule" (typing/tast_iterator.ml[244,9606+4]..[244,9606+18])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[244,9606+19]..[244,9606+40])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[244,9606+20]..[244,9606+21])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[244,9606+23]..[244,9606+24])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[244,9606+26]..[244,9606+27])
                                  Ppat_any
                                pattern (typing/tast_iterator.ml[244,9606+29]..[244,9606+34])
                                  Ppat_var "mexpr" (typing/tast_iterator.ml[244,9606+29]..[244,9606+34])
                                pattern (typing/tast_iterator.ml[244,9606+36]..[244,9606+39])
                                  Ppat_var "exp" (typing/tast_iterator.ml[244,9606+36]..[244,9606+39])
                              ]
                        expression (typing/tast_iterator.ml[245,9650+6]..[246,9683+22])
                          Pexp_sequence
                          expression (typing/tast_iterator.ml[245,9650+6]..[245,9650+31])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[245,9650+6]..[245,9650+21])
                              Pexp_field
                              expression (typing/tast_iterator.ml[245,9650+6]..[245,9650+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[245,9650+6]..[245,9650+9])
                              "module_expr" (typing/tast_iterator.ml[245,9650+10]..[245,9650+21])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[245,9650+22]..[245,9650+25])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[245,9650+22]..[245,9650+25])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[245,9650+26]..[245,9650+31])
                                  Pexp_ident "mexpr" (typing/tast_iterator.ml[245,9650+26]..[245,9650+31])
                            ]
                          expression (typing/tast_iterator.ml[246,9683+6]..[246,9683+22])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[246,9683+6]..[246,9683+14])
                              Pexp_field
                              expression (typing/tast_iterator.ml[246,9683+6]..[246,9683+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[246,9683+6]..[246,9683+9])
                              "expr" (typing/tast_iterator.ml[246,9683+10]..[246,9683+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[246,9683+15]..[246,9683+18])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[246,9683+15]..[246,9683+18])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[246,9683+19]..[246,9683+22])
                                  Pexp_ident "exp" (typing/tast_iterator.ml[246,9683+19]..[246,9683+22])
                            ]
                      <case>
                        pattern (typing/tast_iterator.ml[247,9706+4]..[247,9706+31])
                          Ppat_construct "Texp_letexception" (typing/tast_iterator.ml[247,9706+4]..[247,9706+21])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[247,9706+22]..[247,9706+31])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[247,9706+23]..[247,9706+25])
                                  Ppat_var "cd" (typing/tast_iterator.ml[247,9706+23]..[247,9706+25])
                                pattern (typing/tast_iterator.ml[247,9706+27]..[247,9706+30])
                                  Ppat_var "exp" (typing/tast_iterator.ml[247,9706+27]..[247,9706+30])
                              ]
                        expression (typing/tast_iterator.ml[248,9741+6]..[249,9781+22])
                          Pexp_sequence
                          expression (typing/tast_iterator.ml[248,9741+6]..[248,9741+38])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[248,9741+6]..[248,9741+31])
                              Pexp_field
                              expression (typing/tast_iterator.ml[248,9741+6]..[248,9741+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[248,9741+6]..[248,9741+9])
                              "extension_constructor" (typing/tast_iterator.ml[248,9741+10]..[248,9741+31])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[248,9741+32]..[248,9741+35])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[248,9741+32]..[248,9741+35])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[248,9741+36]..[248,9741+38])
                                  Pexp_ident "cd" (typing/tast_iterator.ml[248,9741+36]..[248,9741+38])
                            ]
                          expression (typing/tast_iterator.ml[249,9781+6]..[249,9781+22])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[249,9781+6]..[249,9781+14])
                              Pexp_field
                              expression (typing/tast_iterator.ml[249,9781+6]..[249,9781+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[249,9781+6]..[249,9781+9])
                              "expr" (typing/tast_iterator.ml[249,9781+10]..[249,9781+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[249,9781+15]..[249,9781+18])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[249,9781+15]..[249,9781+18])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[249,9781+19]..[249,9781+22])
                                  Pexp_ident "exp" (typing/tast_iterator.ml[249,9781+19]..[249,9781+22])
                            ]
                      <case>
                        pattern (typing/tast_iterator.ml[250,9804+4]..[250,9804+19])
                          Ppat_construct "Texp_assert" (typing/tast_iterator.ml[250,9804+4]..[250,9804+15])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[250,9804+16]..[250,9804+19])
                              Ppat_var "exp" (typing/tast_iterator.ml[250,9804+16]..[250,9804+19])
                        expression (typing/tast_iterator.ml[250,9804+23]..[250,9804+39])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[250,9804+23]..[250,9804+31])
                            Pexp_field
                            expression (typing/tast_iterator.ml[250,9804+23]..[250,9804+26])
                              Pexp_ident "sub" (typing/tast_iterator.ml[250,9804+23]..[250,9804+26])
                            "expr" (typing/tast_iterator.ml[250,9804+27]..[250,9804+31])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[250,9804+32]..[250,9804+35])
                                Pexp_ident "sub" (typing/tast_iterator.ml[250,9804+32]..[250,9804+35])
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[250,9804+36]..[250,9804+39])
                                Pexp_ident "exp" (typing/tast_iterator.ml[250,9804+36]..[250,9804+39])
                          ]
                      <case>
                        pattern (typing/tast_iterator.ml[251,9844+4]..[251,9844+17])
                          Ppat_construct "Texp_lazy" (typing/tast_iterator.ml[251,9844+4]..[251,9844+13])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[251,9844+14]..[251,9844+17])
                              Ppat_var "exp" (typing/tast_iterator.ml[251,9844+14]..[251,9844+17])
                        expression (typing/tast_iterator.ml[251,9844+21]..[251,9844+37])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[251,9844+21]..[251,9844+29])
                            Pexp_field
                            expression (typing/tast_iterator.ml[251,9844+21]..[251,9844+24])
                              Pexp_ident "sub" (typing/tast_iterator.ml[251,9844+21]..[251,9844+24])
                            "expr" (typing/tast_iterator.ml[251,9844+25]..[251,9844+29])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[251,9844+30]..[251,9844+33])
                                Pexp_ident "sub" (typing/tast_iterator.ml[251,9844+30]..[251,9844+33])
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[251,9844+34]..[251,9844+37])
                                Pexp_ident "exp" (typing/tast_iterator.ml[251,9844+34]..[251,9844+37])
                          ]
                      <case>
                        pattern (typing/tast_iterator.ml[252,9882+4]..[252,9882+23])
                          Ppat_construct "Texp_object" (typing/tast_iterator.ml[252,9882+4]..[252,9882+15])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[252,9882+16]..[252,9882+23])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[252,9882+17]..[252,9882+19])
                                  Ppat_var "cl" (typing/tast_iterator.ml[252,9882+17]..[252,9882+19])
                                pattern (typing/tast_iterator.ml[252,9882+21]..[252,9882+22])
                                  Ppat_any
                              ]
                        expression (typing/tast_iterator.ml[252,9882+27]..[252,9882+53])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[252,9882+27]..[252,9882+46])
                            Pexp_field
                            expression (typing/tast_iterator.ml[252,9882+27]..[252,9882+30])
                              Pexp_ident "sub" (typing/tast_iterator.ml[252,9882+27]..[252,9882+30])
                            "class_structure" (typing/tast_iterator.ml[252,9882+31]..[252,9882+46])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[252,9882+47]..[252,9882+50])
                                Pexp_ident "sub" (typing/tast_iterator.ml[252,9882+47]..[252,9882+50])
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[252,9882+51]..[252,9882+53])
                                Pexp_ident "cl" (typing/tast_iterator.ml[252,9882+51]..[252,9882+53])
                          ]
                      <case>
                        pattern (typing/tast_iterator.ml[253,9936+4]..[253,9936+19])
                          Ppat_construct "Texp_pack" (typing/tast_iterator.ml[253,9936+4]..[253,9936+13])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[253,9936+14]..[253,9936+19])
                              Ppat_var "mexpr" (typing/tast_iterator.ml[253,9936+14]..[253,9936+19])
                        expression (typing/tast_iterator.ml[253,9936+23]..[253,9936+48])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[253,9936+23]..[253,9936+38])
                            Pexp_field
                            expression (typing/tast_iterator.ml[253,9936+23]..[253,9936+26])
                              Pexp_ident "sub" (typing/tast_iterator.ml[253,9936+23]..[253,9936+26])
                            "module_expr" (typing/tast_iterator.ml[253,9936+27]..[253,9936+38])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[253,9936+39]..[253,9936+42])
                                Pexp_ident "sub" (typing/tast_iterator.ml[253,9936+39]..[253,9936+42])
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[253,9936+43]..[253,9936+48])
                                Pexp_ident "mexpr" (typing/tast_iterator.ml[253,9936+43]..[253,9936+48])
                          ]
                      <case>
                        pattern (typing/tast_iterator.ml[254,9985+4]..[254,9985+40])
                          Ppat_construct "Texp_letop" (typing/tast_iterator.ml[254,9985+4]..[254,9985+14])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[254,9985+15]..[254,9985+40])
                              Ppat_record Open
                              [
                                "let_" (typing/tast_iterator.ml[254,9985+16]..[254,9985+20])
                                  pattern (typing/tast_iterator.ml[254,9985+23]..[254,9985+24])
                                    Ppat_var "l" (typing/tast_iterator.ml[254,9985+23]..[254,9985+24])
                                "ands" (typing/tast_iterator.ml[254,9985+26]..[254,9985+30]) ghost
                                  pattern (typing/tast_iterator.ml[254,9985+26]..[254,9985+30])
                                    Ppat_var "ands" (typing/tast_iterator.ml[254,9985+26]..[254,9985+30])
                                "body" (typing/tast_iterator.ml[254,9985+32]..[254,9985+36]) ghost
                                  pattern (typing/tast_iterator.ml[254,9985+32]..[254,9985+36])
                                    Ppat_var "body" (typing/tast_iterator.ml[254,9985+32]..[254,9985+36])
                              ]
                        expression (typing/tast_iterator.ml[255,10029+6]..[257,10100+23])
                          Pexp_sequence
                          expression (typing/tast_iterator.ml[255,10029+6]..[255,10029+26])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[255,10029+6]..[255,10029+20])
                              Pexp_field
                              expression (typing/tast_iterator.ml[255,10029+6]..[255,10029+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[255,10029+6]..[255,10029+9])
                              "binding_op" (typing/tast_iterator.ml[255,10029+10]..[255,10029+20])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[255,10029+21]..[255,10029+24])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[255,10029+21]..[255,10029+24])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[255,10029+25]..[255,10029+26])
                                  Pexp_ident "l" (typing/tast_iterator.ml[255,10029+25]..[255,10029+26])
                            ]
                          expression (typing/tast_iterator.ml[256,10057+6]..[257,10100+23])
                            Pexp_sequence
                            expression (typing/tast_iterator.ml[256,10057+6]..[256,10057+41])
                              Pexp_apply
                              expression (typing/tast_iterator.ml[256,10057+6]..[256,10057+15])
                                Pexp_ident "List.iter" (typing/tast_iterator.ml[256,10057+6]..[256,10057+15])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[256,10057+16]..[256,10057+36])
                                    Pexp_apply
                                    expression (typing/tast_iterator.ml[256,10057+17]..[256,10057+31])
                                      Pexp_field
                                      expression (typing/tast_iterator.ml[256,10057+17]..[256,10057+20])
                                        Pexp_ident "sub" (typing/tast_iterator.ml[256,10057+17]..[256,10057+20])
                                      "binding_op" (typing/tast_iterator.ml[256,10057+21]..[256,10057+31])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (typing/tast_iterator.ml[256,10057+32]..[256,10057+35])
                                          Pexp_ident "sub" (typing/tast_iterator.ml[256,10057+32]..[256,10057+35])
                                    ]
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[256,10057+37]..[256,10057+41])
                                    Pexp_ident "ands" (typing/tast_iterator.ml[256,10057+37]..[256,10057+41])
                              ]
                            expression (typing/tast_iterator.ml[257,10100+6]..[257,10100+23])
                              Pexp_apply
                              expression (typing/tast_iterator.ml[257,10100+6]..[257,10100+14])
                                Pexp_field
                                expression (typing/tast_iterator.ml[257,10100+6]..[257,10100+9])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[257,10100+6]..[257,10100+9])
                                "case" (typing/tast_iterator.ml[257,10100+10]..[257,10100+14])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[257,10100+15]..[257,10100+18])
                                    Pexp_ident "sub" (typing/tast_iterator.ml[257,10100+15]..[257,10100+18])
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[257,10100+19]..[257,10100+23])
                                    Pexp_ident "body" (typing/tast_iterator.ml[257,10100+19]..[257,10100+23])
                              ]
                      <case>
                        pattern (typing/tast_iterator.ml[258,10124+4]..[258,10124+20])
                          Ppat_construct "Texp_unreachable" (typing/tast_iterator.ml[258,10124+4]..[258,10124+20])
                          None
                        expression (typing/tast_iterator.ml[258,10124+24]..[258,10124+26])
                          Pexp_construct "()" (typing/tast_iterator.ml[258,10124+24]..[258,10124+26])
                          None
                      <case>
                        pattern (typing/tast_iterator.ml[259,10151+4]..[259,10151+32])
                          Ppat_construct "Texp_extension_constructor" (typing/tast_iterator.ml[259,10151+4]..[259,10151+30])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[259,10151+31]..[259,10151+32])
                              Ppat_any
                        expression (typing/tast_iterator.ml[259,10151+36]..[259,10151+38])
                          Pexp_construct "()" (typing/tast_iterator.ml[259,10151+36]..[259,10151+38])
                          None
                      <case>
                        pattern (typing/tast_iterator.ml[260,10190+4]..[260,10190+21])
                          Ppat_construct "Texp_open" (typing/tast_iterator.ml[260,10190+4]..[260,10190+13])
                          Some
                            []
                            pattern (typing/tast_iterator.ml[260,10190+14]..[260,10190+21])
                              Ppat_tuple
                              [
                                pattern (typing/tast_iterator.ml[260,10190+15]..[260,10190+17])
                                  Ppat_var "od" (typing/tast_iterator.ml[260,10190+15]..[260,10190+17])
                                pattern (typing/tast_iterator.ml[260,10190+19]..[260,10190+20])
                                  Ppat_var "e" (typing/tast_iterator.ml[260,10190+19]..[260,10190+20])
                              ]
                        expression (typing/tast_iterator.ml[261,10215+6]..[262,10250+20])
                          Pexp_sequence
                          expression (typing/tast_iterator.ml[261,10215+6]..[261,10215+33])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[261,10215+6]..[261,10215+26])
                              Pexp_field
                              expression (typing/tast_iterator.ml[261,10215+6]..[261,10215+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[261,10215+6]..[261,10215+9])
                              "open_declaration" (typing/tast_iterator.ml[261,10215+10]..[261,10215+26])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[261,10215+27]..[261,10215+30])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[261,10215+27]..[261,10215+30])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[261,10215+31]..[261,10215+33])
                                  Pexp_ident "od" (typing/tast_iterator.ml[261,10215+31]..[261,10215+33])
                            ]
                          expression (typing/tast_iterator.ml[262,10250+6]..[262,10250+20])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[262,10250+6]..[262,10250+14])
                              Pexp_field
                              expression (typing/tast_iterator.ml[262,10250+6]..[262,10250+9])
                                Pexp_ident "sub" (typing/tast_iterator.ml[262,10250+6]..[262,10250+9])
                              "expr" (typing/tast_iterator.ml[262,10250+10]..[262,10250+14])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[262,10250+15]..[262,10250+18])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[262,10250+15]..[262,10250+18])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[262,10250+19]..[262,10250+20])
                                  Pexp_ident "e" (typing/tast_iterator.ml[262,10250+19]..[262,10250+20])
                            ]
                    ]
    ]
  structure_item (typing/tast_iterator.ml[265,10273+0]..[266,10313+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[265,10273+4]..[265,10273+16])
          Ppat_var "package_type" (typing/tast_iterator.ml[265,10273+4]..[265,10273+16])
        expression (typing/tast_iterator.ml[265,10273+17]..[266,10313+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[265,10273+17]..[265,10273+20])
            Ppat_var "sub" (typing/tast_iterator.ml[265,10273+17]..[265,10273+20])
          expression (typing/tast_iterator.ml[265,10273+21]..[266,10313+53]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[265,10273+21]..[265,10273+37])
              Ppat_record Open
              [
                "pack_fields" (typing/tast_iterator.ml[265,10273+22]..[265,10273+33]) ghost
                  pattern (typing/tast_iterator.ml[265,10273+22]..[265,10273+33])
                    Ppat_var "pack_fields" (typing/tast_iterator.ml[265,10273+22]..[265,10273+33])
              ]
            expression (typing/tast_iterator.ml[266,10313+2]..[266,10313+53])
              Pexp_apply
              expression (typing/tast_iterator.ml[266,10313+2]..[266,10313+11])
                Pexp_ident "List.iter" (typing/tast_iterator.ml[266,10313+2]..[266,10313+11])
              [
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[266,10313+12]..[266,10313+41])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (typing/tast_iterator.ml[266,10313+17]..[266,10313+23])
                      Ppat_tuple
                      [
                        pattern (typing/tast_iterator.ml[266,10313+18]..[266,10313+19])
                          Ppat_any
                        pattern (typing/tast_iterator.ml[266,10313+21]..[266,10313+22])
                          Ppat_var "p" (typing/tast_iterator.ml[266,10313+21]..[266,10313+22])
                      ]
                    expression (typing/tast_iterator.ml[266,10313+27]..[266,10313+40])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[266,10313+27]..[266,10313+34])
                        Pexp_field
                        expression (typing/tast_iterator.ml[266,10313+27]..[266,10313+30])
                          Pexp_ident "sub" (typing/tast_iterator.ml[266,10313+27]..[266,10313+30])
                        "typ" (typing/tast_iterator.ml[266,10313+31]..[266,10313+34])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[266,10313+35]..[266,10313+38])
                            Pexp_ident "sub" (typing/tast_iterator.ml[266,10313+35]..[266,10313+38])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[266,10313+39]..[266,10313+40])
                            Pexp_ident "p" (typing/tast_iterator.ml[266,10313+39]..[266,10313+40])
                      ]
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[266,10313+42]..[266,10313+53])
                    Pexp_ident "pack_fields" (typing/tast_iterator.ml[266,10313+42]..[266,10313+53])
              ]
    ]
  structure_item (typing/tast_iterator.ml[268,10368+0]..[268,10368+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[268,10368+4]..[268,10368+14])
          Ppat_var "binding_op" (typing/tast_iterator.ml[268,10368+4]..[268,10368+14])
        expression (typing/tast_iterator.ml[268,10368+15]..[268,10368+54]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[268,10368+15]..[268,10368+18])
            Ppat_var "sub" (typing/tast_iterator.ml[268,10368+15]..[268,10368+18])
          expression (typing/tast_iterator.ml[268,10368+19]..[268,10368+54]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[268,10368+19]..[268,10368+31])
              Ppat_record Open
              [
                "bop_exp" (typing/tast_iterator.ml[268,10368+20]..[268,10368+27]) ghost
                  pattern (typing/tast_iterator.ml[268,10368+20]..[268,10368+27])
                    Ppat_var "bop_exp" (typing/tast_iterator.ml[268,10368+20]..[268,10368+27])
              ]
            expression (typing/tast_iterator.ml[268,10368+34]..[268,10368+54])
              Pexp_apply
              expression (typing/tast_iterator.ml[268,10368+34]..[268,10368+42])
                Pexp_field
                expression (typing/tast_iterator.ml[268,10368+34]..[268,10368+37])
                  Pexp_ident "sub" (typing/tast_iterator.ml[268,10368+34]..[268,10368+37])
                "expr" (typing/tast_iterator.ml[268,10368+38]..[268,10368+42])
              [
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[268,10368+43]..[268,10368+46])
                    Pexp_ident "sub" (typing/tast_iterator.ml[268,10368+43]..[268,10368+46])
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[268,10368+47]..[268,10368+54])
                    Pexp_ident "bop_exp" (typing/tast_iterator.ml[268,10368+47]..[268,10368+54])
              ]
    ]
  structure_item (typing/tast_iterator.ml[270,10424+0]..[272,10503+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[270,10424+4]..[270,10424+13])
          Ppat_var "signature" (typing/tast_iterator.ml[270,10424+4]..[270,10424+13])
        expression (typing/tast_iterator.ml[270,10424+14]..[272,10503+46]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[270,10424+14]..[270,10424+17])
            Ppat_var "sub" (typing/tast_iterator.ml[270,10424+14]..[270,10424+17])
          expression (typing/tast_iterator.ml[270,10424+18]..[272,10503+46]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[270,10424+18]..[270,10424+47])
              Ppat_record Open
              [
                "sig_items" (typing/tast_iterator.ml[270,10424+19]..[270,10424+28]) ghost
                  pattern (typing/tast_iterator.ml[270,10424+19]..[270,10424+28])
                    Ppat_var "sig_items" (typing/tast_iterator.ml[270,10424+19]..[270,10424+28])
                "sig_final_env" (typing/tast_iterator.ml[270,10424+30]..[270,10424+43]) ghost
                  pattern (typing/tast_iterator.ml[270,10424+30]..[270,10424+43])
                    Ppat_var "sig_final_env" (typing/tast_iterator.ml[270,10424+30]..[270,10424+43])
              ]
            expression (typing/tast_iterator.ml[271,10474+2]..[272,10503+46])
              Pexp_sequence
              expression (typing/tast_iterator.ml[271,10474+2]..[271,10474+27])
                Pexp_apply
                expression (typing/tast_iterator.ml[271,10474+2]..[271,10474+9])
                  Pexp_field
                  expression (typing/tast_iterator.ml[271,10474+2]..[271,10474+5])
                    Pexp_ident "sub" (typing/tast_iterator.ml[271,10474+2]..[271,10474+5])
                  "env" (typing/tast_iterator.ml[271,10474+6]..[271,10474+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[271,10474+10]..[271,10474+13])
                      Pexp_ident "sub" (typing/tast_iterator.ml[271,10474+10]..[271,10474+13])
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[271,10474+14]..[271,10474+27])
                      Pexp_ident "sig_final_env" (typing/tast_iterator.ml[271,10474+14]..[271,10474+27])
                ]
              expression (typing/tast_iterator.ml[272,10503+2]..[272,10503+46])
                Pexp_apply
                expression (typing/tast_iterator.ml[272,10503+2]..[272,10503+11])
                  Pexp_ident "List.iter" (typing/tast_iterator.ml[272,10503+2]..[272,10503+11])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[272,10503+12]..[272,10503+36])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[272,10503+13]..[272,10503+31])
                        Pexp_field
                        expression (typing/tast_iterator.ml[272,10503+13]..[272,10503+16])
                          Pexp_ident "sub" (typing/tast_iterator.ml[272,10503+13]..[272,10503+16])
                        "signature_item" (typing/tast_iterator.ml[272,10503+17]..[272,10503+31])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[272,10503+32]..[272,10503+35])
                            Pexp_ident "sub" (typing/tast_iterator.ml[272,10503+32]..[272,10503+35])
                      ]
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[272,10503+37]..[272,10503+46])
                      Pexp_ident "sig_items" (typing/tast_iterator.ml[272,10503+37]..[272,10503+46])
                ]
    ]
  structure_item (typing/tast_iterator.ml[274,10551+0]..[291,11478+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[274,10551+4]..[274,10551+18])
          Ppat_var "signature_item" (typing/tast_iterator.ml[274,10551+4]..[274,10551+18])
        expression (typing/tast_iterator.ml[274,10551+19]..[291,11478+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[274,10551+19]..[274,10551+22])
            Ppat_var "sub" (typing/tast_iterator.ml[274,10551+19]..[274,10551+22])
          expression (typing/tast_iterator.ml[274,10551+23]..[291,11478+26]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[274,10551+23]..[274,10551+45])
              Ppat_record Open
              [
                "sig_desc" (typing/tast_iterator.ml[274,10551+24]..[274,10551+32]) ghost
                  pattern (typing/tast_iterator.ml[274,10551+24]..[274,10551+32])
                    Ppat_var "sig_desc" (typing/tast_iterator.ml[274,10551+24]..[274,10551+32])
                "sig_env" (typing/tast_iterator.ml[274,10551+34]..[274,10551+41]) ghost
                  pattern (typing/tast_iterator.ml[274,10551+34]..[274,10551+41])
                    Ppat_var "sig_env" (typing/tast_iterator.ml[274,10551+34]..[274,10551+41])
              ]
            expression (typing/tast_iterator.ml[275,10599+2]..[291,11478+26])
              Pexp_sequence
              expression (typing/tast_iterator.ml[275,10599+2]..[275,10599+21])
                Pexp_apply
                expression (typing/tast_iterator.ml[275,10599+2]..[275,10599+9])
                  Pexp_field
                  expression (typing/tast_iterator.ml[275,10599+2]..[275,10599+5])
                    Pexp_ident "sub" (typing/tast_iterator.ml[275,10599+2]..[275,10599+5])
                  "env" (typing/tast_iterator.ml[275,10599+6]..[275,10599+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[275,10599+10]..[275,10599+13])
                      Pexp_ident "sub" (typing/tast_iterator.ml[275,10599+10]..[275,10599+13])
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[275,10599+14]..[275,10599+21])
                      Pexp_ident "sig_env" (typing/tast_iterator.ml[275,10599+14]..[275,10599+21])
                ]
              expression (typing/tast_iterator.ml[276,10622+2]..[291,11478+26])
                Pexp_match
                expression (typing/tast_iterator.ml[276,10622+8]..[276,10622+16])
                  Pexp_ident "sig_desc" (typing/tast_iterator.ml[276,10622+8]..[276,10622+16])
                [
                  <case>
                    pattern (typing/tast_iterator.ml[277,10644+4]..[277,10644+16])
                      Ppat_construct "Tsig_value" (typing/tast_iterator.ml[277,10644+4]..[277,10644+14])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[277,10644+15]..[277,10644+16])
                          Ppat_var "v" (typing/tast_iterator.ml[277,10644+15]..[277,10644+16])
                    expression (typing/tast_iterator.ml[277,10644+20]..[277,10644+47])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[277,10644+20]..[277,10644+41])
                        Pexp_field
                        expression (typing/tast_iterator.ml[277,10644+20]..[277,10644+23])
                          Pexp_ident "sub" (typing/tast_iterator.ml[277,10644+20]..[277,10644+23])
                        "value_description" (typing/tast_iterator.ml[277,10644+24]..[277,10644+41])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[277,10644+42]..[277,10644+45])
                            Pexp_ident "sub" (typing/tast_iterator.ml[277,10644+42]..[277,10644+45])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[277,10644+46]..[277,10644+47])
                            Pexp_ident "v" (typing/tast_iterator.ml[277,10644+46]..[277,10644+47])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[278,10692+4]..[278,10692+23])
                      Ppat_construct "Tsig_type" (typing/tast_iterator.ml[278,10692+4]..[278,10692+13])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[278,10692+14]..[278,10692+23])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[278,10692+15]..[278,10692+17])
                              Ppat_var "rf" (typing/tast_iterator.ml[278,10692+15]..[278,10692+17])
                            pattern (typing/tast_iterator.ml[278,10692+19]..[278,10692+22])
                              Ppat_var "tdl" (typing/tast_iterator.ml[278,10692+19]..[278,10692+22])
                          ]
                    expression (typing/tast_iterator.ml[278,10692+28]..[278,10692+63])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[278,10692+28]..[278,10692+49])
                        Pexp_field
                        expression (typing/tast_iterator.ml[278,10692+28]..[278,10692+31])
                          Pexp_ident "sub" (typing/tast_iterator.ml[278,10692+28]..[278,10692+31])
                        "type_declarations" (typing/tast_iterator.ml[278,10692+32]..[278,10692+49])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[278,10692+50]..[278,10692+53])
                            Pexp_ident "sub" (typing/tast_iterator.ml[278,10692+50]..[278,10692+53])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[278,10692+54]..[278,10692+63])
                            Pexp_tuple
                            [
                              expression (typing/tast_iterator.ml[278,10692+55]..[278,10692+57])
                                Pexp_ident "rf" (typing/tast_iterator.ml[278,10692+55]..[278,10692+57])
                              expression (typing/tast_iterator.ml[278,10692+59]..[278,10692+62])
                                Pexp_ident "tdl" (typing/tast_iterator.ml[278,10692+59]..[278,10692+62])
                            ]
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[279,10756+4]..[279,10756+23])
                      Ppat_construct "Tsig_typesubst" (typing/tast_iterator.ml[279,10756+4]..[279,10756+18])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[279,10756+19]..[279,10756+23])
                          Ppat_var "list" (typing/tast_iterator.ml[279,10756+19]..[279,10756+23])
                    expression (typing/tast_iterator.ml[279,10756+27]..[279,10756+73])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[279,10756+27]..[279,10756+48])
                        Pexp_field
                        expression (typing/tast_iterator.ml[279,10756+27]..[279,10756+30])
                          Pexp_ident "sub" (typing/tast_iterator.ml[279,10756+27]..[279,10756+30])
                        "type_declarations" (typing/tast_iterator.ml[279,10756+31]..[279,10756+48])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[279,10756+49]..[279,10756+52])
                            Pexp_ident "sub" (typing/tast_iterator.ml[279,10756+49]..[279,10756+52])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[279,10756+53]..[279,10756+73])
                            Pexp_tuple
                            [
                              expression (typing/tast_iterator.ml[279,10756+54]..[279,10756+66])
                                Pexp_construct "Nonrecursive" (typing/tast_iterator.ml[279,10756+54]..[279,10756+66])
                                None
                              expression (typing/tast_iterator.ml[279,10756+68]..[279,10756+72])
                                Pexp_ident "list" (typing/tast_iterator.ml[279,10756+68]..[279,10756+72])
                            ]
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[280,10830+4]..[280,10830+18])
                      Ppat_construct "Tsig_typext" (typing/tast_iterator.ml[280,10830+4]..[280,10830+15])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[280,10830+16]..[280,10830+18])
                          Ppat_var "te" (typing/tast_iterator.ml[280,10830+16]..[280,10830+18])
                    expression (typing/tast_iterator.ml[280,10830+22]..[280,10830+47])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[280,10830+22]..[280,10830+40])
                        Pexp_field
                        expression (typing/tast_iterator.ml[280,10830+22]..[280,10830+25])
                          Pexp_ident "sub" (typing/tast_iterator.ml[280,10830+22]..[280,10830+25])
                        "type_extension" (typing/tast_iterator.ml[280,10830+26]..[280,10830+40])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[280,10830+41]..[280,10830+44])
                            Pexp_ident "sub" (typing/tast_iterator.ml[280,10830+41]..[280,10830+44])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[280,10830+45]..[280,10830+47])
                            Pexp_ident "te" (typing/tast_iterator.ml[280,10830+45]..[280,10830+47])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[281,10878+4]..[281,10878+22])
                      Ppat_construct "Tsig_exception" (typing/tast_iterator.ml[281,10878+4]..[281,10878+18])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[281,10878+19]..[281,10878+22])
                          Ppat_var "ext" (typing/tast_iterator.ml[281,10878+19]..[281,10878+22])
                    expression (typing/tast_iterator.ml[281,10878+26]..[281,10878+52])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[281,10878+26]..[281,10878+44])
                        Pexp_field
                        expression (typing/tast_iterator.ml[281,10878+26]..[281,10878+29])
                          Pexp_ident "sub" (typing/tast_iterator.ml[281,10878+26]..[281,10878+29])
                        "type_exception" (typing/tast_iterator.ml[281,10878+30]..[281,10878+44])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[281,10878+45]..[281,10878+48])
                            Pexp_ident "sub" (typing/tast_iterator.ml[281,10878+45]..[281,10878+48])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[281,10878+49]..[281,10878+52])
                            Pexp_ident "ext" (typing/tast_iterator.ml[281,10878+49]..[281,10878+52])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[282,10931+4]..[282,10931+17])
                      Ppat_construct "Tsig_module" (typing/tast_iterator.ml[282,10931+4]..[282,10931+15])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[282,10931+16]..[282,10931+17])
                          Ppat_var "x" (typing/tast_iterator.ml[282,10931+16]..[282,10931+17])
                    expression (typing/tast_iterator.ml[282,10931+21]..[282,10931+49])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[282,10931+21]..[282,10931+43])
                        Pexp_field
                        expression (typing/tast_iterator.ml[282,10931+21]..[282,10931+24])
                          Pexp_ident "sub" (typing/tast_iterator.ml[282,10931+21]..[282,10931+24])
                        "module_declaration" (typing/tast_iterator.ml[282,10931+25]..[282,10931+43])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[282,10931+44]..[282,10931+47])
                            Pexp_ident "sub" (typing/tast_iterator.ml[282,10931+44]..[282,10931+47])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[282,10931+48]..[282,10931+49])
                            Pexp_ident "x" (typing/tast_iterator.ml[282,10931+48]..[282,10931+49])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[283,10981+4]..[283,10981+19])
                      Ppat_construct "Tsig_modsubst" (typing/tast_iterator.ml[283,10981+4]..[283,10981+17])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[283,10981+18]..[283,10981+19])
                          Ppat_var "x" (typing/tast_iterator.ml[283,10981+18]..[283,10981+19])
                    expression (typing/tast_iterator.ml[283,10981+23]..[283,10981+52])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[283,10981+23]..[283,10981+46])
                        Pexp_field
                        expression (typing/tast_iterator.ml[283,10981+23]..[283,10981+26])
                          Pexp_ident "sub" (typing/tast_iterator.ml[283,10981+23]..[283,10981+26])
                        "module_substitution" (typing/tast_iterator.ml[283,10981+27]..[283,10981+46])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[283,10981+47]..[283,10981+50])
                            Pexp_ident "sub" (typing/tast_iterator.ml[283,10981+47]..[283,10981+50])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[283,10981+51]..[283,10981+52])
                            Pexp_ident "x" (typing/tast_iterator.ml[283,10981+51]..[283,10981+52])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[284,11034+4]..[284,11034+23])
                      Ppat_construct "Tsig_recmodule" (typing/tast_iterator.ml[284,11034+4]..[284,11034+18])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[284,11034+19]..[284,11034+23])
                          Ppat_var "list" (typing/tast_iterator.ml[284,11034+19]..[284,11034+23])
                    expression (typing/tast_iterator.ml[284,11034+27]..[284,11034+70])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[284,11034+27]..[284,11034+36])
                        Pexp_ident "List.iter" (typing/tast_iterator.ml[284,11034+27]..[284,11034+36])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[284,11034+37]..[284,11034+65])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[284,11034+38]..[284,11034+60])
                              Pexp_field
                              expression (typing/tast_iterator.ml[284,11034+38]..[284,11034+41])
                                Pexp_ident "sub" (typing/tast_iterator.ml[284,11034+38]..[284,11034+41])
                              "module_declaration" (typing/tast_iterator.ml[284,11034+42]..[284,11034+60])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[284,11034+61]..[284,11034+64])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[284,11034+61]..[284,11034+64])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[284,11034+66]..[284,11034+70])
                            Pexp_ident "list" (typing/tast_iterator.ml[284,11034+66]..[284,11034+70])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[285,11105+4]..[285,11105+18])
                      Ppat_construct "Tsig_modtype" (typing/tast_iterator.ml[285,11105+4]..[285,11105+16])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[285,11105+17]..[285,11105+18])
                          Ppat_var "x" (typing/tast_iterator.ml[285,11105+17]..[285,11105+18])
                    expression (typing/tast_iterator.ml[285,11105+22]..[285,11105+55])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[285,11105+22]..[285,11105+49])
                        Pexp_field
                        expression (typing/tast_iterator.ml[285,11105+22]..[285,11105+25])
                          Pexp_ident "sub" (typing/tast_iterator.ml[285,11105+22]..[285,11105+25])
                        "module_type_declaration" (typing/tast_iterator.ml[285,11105+26]..[285,11105+49])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[285,11105+50]..[285,11105+53])
                            Pexp_ident "sub" (typing/tast_iterator.ml[285,11105+50]..[285,11105+53])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[285,11105+54]..[285,11105+55])
                            Pexp_ident "x" (typing/tast_iterator.ml[285,11105+54]..[285,11105+55])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[286,11161+4]..[286,11161+23])
                      Ppat_construct "Tsig_modtypesubst" (typing/tast_iterator.ml[286,11161+4]..[286,11161+21])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[286,11161+22]..[286,11161+23])
                          Ppat_var "x" (typing/tast_iterator.ml[286,11161+22]..[286,11161+23])
                    expression (typing/tast_iterator.ml[286,11161+27]..[286,11161+60])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[286,11161+27]..[286,11161+54])
                        Pexp_field
                        expression (typing/tast_iterator.ml[286,11161+27]..[286,11161+30])
                          Pexp_ident "sub" (typing/tast_iterator.ml[286,11161+27]..[286,11161+30])
                        "module_type_declaration" (typing/tast_iterator.ml[286,11161+31]..[286,11161+54])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[286,11161+55]..[286,11161+58])
                            Pexp_ident "sub" (typing/tast_iterator.ml[286,11161+55]..[286,11161+58])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[286,11161+59]..[286,11161+60])
                            Pexp_ident "x" (typing/tast_iterator.ml[286,11161+59]..[286,11161+60])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[287,11222+4]..[287,11222+21])
                      Ppat_construct "Tsig_include" (typing/tast_iterator.ml[287,11222+4]..[287,11222+16])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[287,11222+17]..[287,11222+21])
                          Ppat_var "incl" (typing/tast_iterator.ml[287,11222+17]..[287,11222+21])
                    expression (typing/tast_iterator.ml[287,11222+25]..[287,11222+65])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[287,11222+25]..[287,11222+38])
                        Pexp_ident "include_infos" (typing/tast_iterator.ml[287,11222+25]..[287,11222+38])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[287,11222+39]..[287,11222+60])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[287,11222+40]..[287,11222+55])
                              Pexp_field
                              expression (typing/tast_iterator.ml[287,11222+40]..[287,11222+43])
                                Pexp_ident "sub" (typing/tast_iterator.ml[287,11222+40]..[287,11222+43])
                              "module_type" (typing/tast_iterator.ml[287,11222+44]..[287,11222+55])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[287,11222+56]..[287,11222+59])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[287,11222+56]..[287,11222+59])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[287,11222+61]..[287,11222+65])
                            Pexp_ident "incl" (typing/tast_iterator.ml[287,11222+61]..[287,11222+65])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[288,11288+4]..[288,11288+19])
                      Ppat_construct "Tsig_class" (typing/tast_iterator.ml[288,11288+4]..[288,11288+14])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[288,11288+15]..[288,11288+19])
                          Ppat_var "list" (typing/tast_iterator.ml[288,11288+15]..[288,11288+19])
                    expression (typing/tast_iterator.ml[288,11288+23]..[288,11288+65])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[288,11288+23]..[288,11288+32])
                        Pexp_ident "List.iter" (typing/tast_iterator.ml[288,11288+23]..[288,11288+32])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[288,11288+33]..[288,11288+60])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[288,11288+34]..[288,11288+55])
                              Pexp_field
                              expression (typing/tast_iterator.ml[288,11288+34]..[288,11288+37])
                                Pexp_ident "sub" (typing/tast_iterator.ml[288,11288+34]..[288,11288+37])
                              "class_description" (typing/tast_iterator.ml[288,11288+38]..[288,11288+55])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[288,11288+56]..[288,11288+59])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[288,11288+56]..[288,11288+59])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[288,11288+61]..[288,11288+65])
                            Pexp_ident "list" (typing/tast_iterator.ml[288,11288+61]..[288,11288+65])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[289,11354+4]..[289,11354+24])
                      Ppat_construct "Tsig_class_type" (typing/tast_iterator.ml[289,11354+4]..[289,11354+19])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[289,11354+20]..[289,11354+24])
                          Ppat_var "list" (typing/tast_iterator.ml[289,11354+20]..[289,11354+24])
                    expression (typing/tast_iterator.ml[289,11354+28]..[289,11354+75])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[289,11354+28]..[289,11354+37])
                        Pexp_ident "List.iter" (typing/tast_iterator.ml[289,11354+28]..[289,11354+37])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[289,11354+38]..[289,11354+70])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[289,11354+39]..[289,11354+65])
                              Pexp_field
                              expression (typing/tast_iterator.ml[289,11354+39]..[289,11354+42])
                                Pexp_ident "sub" (typing/tast_iterator.ml[289,11354+39]..[289,11354+42])
                              "class_type_declaration" (typing/tast_iterator.ml[289,11354+43]..[289,11354+65])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[289,11354+66]..[289,11354+69])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[289,11354+66]..[289,11354+69])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[289,11354+71]..[289,11354+75])
                            Pexp_ident "list" (typing/tast_iterator.ml[289,11354+71]..[289,11354+75])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[290,11430+4]..[290,11430+16])
                      Ppat_construct "Tsig_open" (typing/tast_iterator.ml[290,11430+4]..[290,11430+13])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[290,11430+14]..[290,11430+16])
                          Ppat_var "od" (typing/tast_iterator.ml[290,11430+14]..[290,11430+16])
                    expression (typing/tast_iterator.ml[290,11430+20]..[290,11430+47])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[290,11430+20]..[290,11430+40])
                        Pexp_field
                        expression (typing/tast_iterator.ml[290,11430+20]..[290,11430+23])
                          Pexp_ident "sub" (typing/tast_iterator.ml[290,11430+20]..[290,11430+23])
                        "open_description" (typing/tast_iterator.ml[290,11430+24]..[290,11430+40])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[290,11430+41]..[290,11430+44])
                            Pexp_ident "sub" (typing/tast_iterator.ml[290,11430+41]..[290,11430+44])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[290,11430+45]..[290,11430+47])
                            Pexp_ident "od" (typing/tast_iterator.ml[290,11430+45]..[290,11430+47])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[291,11478+4]..[291,11478+20])
                      Ppat_construct "Tsig_attribute" (typing/tast_iterator.ml[291,11478+4]..[291,11478+18])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[291,11478+19]..[291,11478+20])
                          Ppat_any
                    expression (typing/tast_iterator.ml[291,11478+24]..[291,11478+26])
                      Pexp_construct "()" (typing/tast_iterator.ml[291,11478+24]..[291,11478+26])
                      None
                ]
    ]
  structure_item (typing/tast_iterator.ml[293,11506+0]..[294,11536+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[293,11506+4]..[293,11506+21])
          Ppat_var "class_description" (typing/tast_iterator.ml[293,11506+4]..[293,11506+21])
        expression (typing/tast_iterator.ml[293,11506+22]..[294,11536+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[293,11506+22]..[293,11506+25])
            Ppat_var "sub" (typing/tast_iterator.ml[293,11506+22]..[293,11506+25])
          expression (typing/tast_iterator.ml[293,11506+26]..[294,11536+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[293,11506+26]..[293,11506+27])
              Ppat_var "x" (typing/tast_iterator.ml[293,11506+26]..[293,11506+27])
            expression (typing/tast_iterator.ml[294,11536+2]..[294,11536+40])
              Pexp_apply
              expression (typing/tast_iterator.ml[294,11536+2]..[294,11536+13])
                Pexp_ident "class_infos" (typing/tast_iterator.ml[294,11536+2]..[294,11536+13])
              [
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[294,11536+14]..[294,11536+17])
                    Pexp_ident "sub" (typing/tast_iterator.ml[294,11536+14]..[294,11536+17])
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[294,11536+18]..[294,11536+38])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[294,11536+19]..[294,11536+33])
                      Pexp_field
                      expression (typing/tast_iterator.ml[294,11536+19]..[294,11536+22])
                        Pexp_ident "sub" (typing/tast_iterator.ml[294,11536+19]..[294,11536+22])
                      "class_type" (typing/tast_iterator.ml[294,11536+23]..[294,11536+33])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[294,11536+34]..[294,11536+37])
                          Pexp_ident "sub" (typing/tast_iterator.ml[294,11536+34]..[294,11536+37])
                    ]
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[294,11536+39]..[294,11536+40])
                    Pexp_ident "x" (typing/tast_iterator.ml[294,11536+39]..[294,11536+40])
              ]
    ]
  structure_item (typing/tast_iterator.ml[296,11578+0]..[298,11630+52])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[296,11578+4]..[296,11578+21])
          Ppat_var "functor_parameter" (typing/tast_iterator.ml[296,11578+4]..[296,11578+21])
        expression (typing/tast_iterator.ml[296,11578+22]..[298,11630+52]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[296,11578+22]..[296,11578+25])
            Ppat_var "sub" (typing/tast_iterator.ml[296,11578+22]..[296,11578+25])
          expression (typing/tast_iterator.ml[296,11578+28]..[298,11630+52])
            Pexp_function
            [
              <case>
                pattern (typing/tast_iterator.ml[297,11615+4]..[297,11615+8])
                  Ppat_construct "Unit" (typing/tast_iterator.ml[297,11615+4]..[297,11615+8])
                  None
                expression (typing/tast_iterator.ml[297,11615+12]..[297,11615+14])
                  Pexp_construct "()" (typing/tast_iterator.ml[297,11615+12]..[297,11615+14])
                  None
              <case>
                pattern (typing/tast_iterator.ml[298,11630+4]..[298,11630+23])
                  Ppat_construct "Named" (typing/tast_iterator.ml[298,11630+4]..[298,11630+9])
                  Some
                    []
                    pattern (typing/tast_iterator.ml[298,11630+10]..[298,11630+23])
                      Ppat_tuple
                      [
                        pattern (typing/tast_iterator.ml[298,11630+11]..[298,11630+12])
                          Ppat_any
                        pattern (typing/tast_iterator.ml[298,11630+14]..[298,11630+15])
                          Ppat_any
                        pattern (typing/tast_iterator.ml[298,11630+17]..[298,11630+22])
                          Ppat_var "mtype" (typing/tast_iterator.ml[298,11630+17]..[298,11630+22])
                      ]
                expression (typing/tast_iterator.ml[298,11630+27]..[298,11630+52])
                  Pexp_apply
                  expression (typing/tast_iterator.ml[298,11630+27]..[298,11630+42])
                    Pexp_field
                    expression (typing/tast_iterator.ml[298,11630+27]..[298,11630+30])
                      Pexp_ident "sub" (typing/tast_iterator.ml[298,11630+27]..[298,11630+30])
                    "module_type" (typing/tast_iterator.ml[298,11630+31]..[298,11630+42])
                  [
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[298,11630+43]..[298,11630+46])
                        Pexp_ident "sub" (typing/tast_iterator.ml[298,11630+43]..[298,11630+46])
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[298,11630+47]..[298,11630+52])
                        Pexp_ident "mtype" (typing/tast_iterator.ml[298,11630+47]..[298,11630+52])
                  ]
            ]
    ]
  structure_item (typing/tast_iterator.ml[300,11684+0]..[312,12106+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[300,11684+4]..[300,11684+15])
          Ppat_var "module_type" (typing/tast_iterator.ml[300,11684+4]..[300,11684+15])
        expression (typing/tast_iterator.ml[300,11684+16]..[312,12106+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[300,11684+16]..[300,11684+19])
            Ppat_var "sub" (typing/tast_iterator.ml[300,11684+16]..[300,11684+19])
          expression (typing/tast_iterator.ml[300,11684+20]..[312,12106+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[300,11684+20]..[300,11684+42])
              Ppat_record Open
              [
                "mty_desc" (typing/tast_iterator.ml[300,11684+21]..[300,11684+29]) ghost
                  pattern (typing/tast_iterator.ml[300,11684+21]..[300,11684+29])
                    Ppat_var "mty_desc" (typing/tast_iterator.ml[300,11684+21]..[300,11684+29])
                "mty_env" (typing/tast_iterator.ml[300,11684+31]..[300,11684+38]) ghost
                  pattern (typing/tast_iterator.ml[300,11684+31]..[300,11684+38])
                    Ppat_var "mty_env" (typing/tast_iterator.ml[300,11684+31]..[300,11684+38])
              ]
            expression (typing/tast_iterator.ml[301,11729+2]..[312,12106+50])
              Pexp_sequence
              expression (typing/tast_iterator.ml[301,11729+2]..[301,11729+21])
                Pexp_apply
                expression (typing/tast_iterator.ml[301,11729+2]..[301,11729+9])
                  Pexp_field
                  expression (typing/tast_iterator.ml[301,11729+2]..[301,11729+5])
                    Pexp_ident "sub" (typing/tast_iterator.ml[301,11729+2]..[301,11729+5])
                  "env" (typing/tast_iterator.ml[301,11729+6]..[301,11729+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[301,11729+10]..[301,11729+13])
                      Pexp_ident "sub" (typing/tast_iterator.ml[301,11729+10]..[301,11729+13])
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[301,11729+14]..[301,11729+21])
                      Pexp_ident "mty_env" (typing/tast_iterator.ml[301,11729+14]..[301,11729+21])
                ]
              expression (typing/tast_iterator.ml[302,11752+2]..[312,12106+50])
                Pexp_match
                expression (typing/tast_iterator.ml[302,11752+8]..[302,11752+16])
                  Pexp_ident "mty_desc" (typing/tast_iterator.ml[302,11752+8]..[302,11752+16])
                [
                  <case>
                    pattern (typing/tast_iterator.ml[303,11774+4]..[303,11774+16])
                      Ppat_construct "Tmty_ident" (typing/tast_iterator.ml[303,11774+4]..[303,11774+14])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[303,11774+15]..[303,11774+16])
                          Ppat_any
                    expression (typing/tast_iterator.ml[303,11774+25]..[303,11774+27])
                      Pexp_construct "()" (typing/tast_iterator.ml[303,11774+25]..[303,11774+27])
                      None
                  <case>
                    pattern (typing/tast_iterator.ml[304,11802+4]..[304,11802+16])
                      Ppat_construct "Tmty_alias" (typing/tast_iterator.ml[304,11802+4]..[304,11802+14])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[304,11802+15]..[304,11802+16])
                          Ppat_any
                    expression (typing/tast_iterator.ml[304,11802+25]..[304,11802+27])
                      Pexp_construct "()" (typing/tast_iterator.ml[304,11802+25]..[304,11802+27])
                      None
                  <case>
                    pattern (typing/tast_iterator.ml[305,11830+4]..[305,11830+21])
                      Ppat_construct "Tmty_signature" (typing/tast_iterator.ml[305,11830+4]..[305,11830+18])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[305,11830+19]..[305,11830+21])
                          Ppat_var "sg" (typing/tast_iterator.ml[305,11830+19]..[305,11830+21])
                    expression (typing/tast_iterator.ml[305,11830+25]..[305,11830+45])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[305,11830+25]..[305,11830+38])
                        Pexp_field
                        expression (typing/tast_iterator.ml[305,11830+25]..[305,11830+28])
                          Pexp_ident "sub" (typing/tast_iterator.ml[305,11830+25]..[305,11830+28])
                        "signature" (typing/tast_iterator.ml[305,11830+29]..[305,11830+38])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[305,11830+39]..[305,11830+42])
                            Pexp_ident "sub" (typing/tast_iterator.ml[305,11830+39]..[305,11830+42])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[305,11830+43]..[305,11830+45])
                            Pexp_ident "sg" (typing/tast_iterator.ml[305,11830+43]..[305,11830+45])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[306,11876+4]..[306,11876+30])
                      Ppat_construct "Tmty_functor" (typing/tast_iterator.ml[306,11876+4]..[306,11876+16])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[306,11876+17]..[306,11876+30])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[306,11876+18]..[306,11876+21])
                              Ppat_var "arg" (typing/tast_iterator.ml[306,11876+18]..[306,11876+21])
                            pattern (typing/tast_iterator.ml[306,11876+23]..[306,11876+29])
                              Ppat_var "mtype2" (typing/tast_iterator.ml[306,11876+23]..[306,11876+29])
                          ]
                    expression (typing/tast_iterator.ml[307,11910+6]..[308,11943+32])
                      Pexp_sequence
                      expression (typing/tast_iterator.ml[307,11910+6]..[307,11910+31])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[307,11910+6]..[307,11910+23])
                          Pexp_ident "functor_parameter" (typing/tast_iterator.ml[307,11910+6]..[307,11910+23])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[307,11910+24]..[307,11910+27])
                              Pexp_ident "sub" (typing/tast_iterator.ml[307,11910+24]..[307,11910+27])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[307,11910+28]..[307,11910+31])
                              Pexp_ident "arg" (typing/tast_iterator.ml[307,11910+28]..[307,11910+31])
                        ]
                      expression (typing/tast_iterator.ml[308,11943+6]..[308,11943+32])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[308,11943+6]..[308,11943+21])
                          Pexp_field
                          expression (typing/tast_iterator.ml[308,11943+6]..[308,11943+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[308,11943+6]..[308,11943+9])
                          "module_type" (typing/tast_iterator.ml[308,11943+10]..[308,11943+21])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[308,11943+22]..[308,11943+25])
                              Pexp_ident "sub" (typing/tast_iterator.ml[308,11943+22]..[308,11943+25])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[308,11943+26]..[308,11943+32])
                              Pexp_ident "mtype2" (typing/tast_iterator.ml[308,11943+26]..[308,11943+32])
                        ]
                  <case>
                    pattern (typing/tast_iterator.ml[309,11976+4]..[309,11976+27])
                      Ppat_construct "Tmty_with" (typing/tast_iterator.ml[309,11976+4]..[309,11976+13])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[309,11976+14]..[309,11976+27])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[309,11976+15]..[309,11976+20])
                              Ppat_var "mtype" (typing/tast_iterator.ml[309,11976+15]..[309,11976+20])
                            pattern (typing/tast_iterator.ml[309,11976+22]..[309,11976+26])
                              Ppat_var "list" (typing/tast_iterator.ml[309,11976+22]..[309,11976+26])
                          ]
                    expression (typing/tast_iterator.ml[310,12007+6]..[311,12040+65])
                      Pexp_sequence
                      expression (typing/tast_iterator.ml[310,12007+6]..[310,12007+31])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[310,12007+6]..[310,12007+21])
                          Pexp_field
                          expression (typing/tast_iterator.ml[310,12007+6]..[310,12007+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[310,12007+6]..[310,12007+9])
                          "module_type" (typing/tast_iterator.ml[310,12007+10]..[310,12007+21])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[310,12007+22]..[310,12007+25])
                              Pexp_ident "sub" (typing/tast_iterator.ml[310,12007+22]..[310,12007+25])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[310,12007+26]..[310,12007+31])
                              Pexp_ident "mtype" (typing/tast_iterator.ml[310,12007+26]..[310,12007+31])
                        ]
                      expression (typing/tast_iterator.ml[311,12040+6]..[311,12040+65])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[311,12040+6]..[311,12040+15])
                          Pexp_ident "List.iter" (typing/tast_iterator.ml[311,12040+6]..[311,12040+15])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[311,12040+16]..[311,12040+60])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/tast_iterator.ml[311,12040+21]..[311,12040+30])
                                Ppat_tuple
                                [
                                  pattern (typing/tast_iterator.ml[311,12040+22]..[311,12040+23])
                                    Ppat_any
                                  pattern (typing/tast_iterator.ml[311,12040+25]..[311,12040+26])
                                    Ppat_any
                                  pattern (typing/tast_iterator.ml[311,12040+28]..[311,12040+29])
                                    Ppat_var "e" (typing/tast_iterator.ml[311,12040+28]..[311,12040+29])
                                ]
                              expression (typing/tast_iterator.ml[311,12040+34]..[311,12040+59])
                                Pexp_apply
                                expression (typing/tast_iterator.ml[311,12040+34]..[311,12040+53])
                                  Pexp_field
                                  expression (typing/tast_iterator.ml[311,12040+34]..[311,12040+37])
                                    Pexp_ident "sub" (typing/tast_iterator.ml[311,12040+34]..[311,12040+37])
                                  "with_constraint" (typing/tast_iterator.ml[311,12040+38]..[311,12040+53])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/tast_iterator.ml[311,12040+54]..[311,12040+57])
                                      Pexp_ident "sub" (typing/tast_iterator.ml[311,12040+54]..[311,12040+57])
                                  <arg>
                                  Nolabel
                                    expression (typing/tast_iterator.ml[311,12040+58]..[311,12040+59])
                                      Pexp_ident "e" (typing/tast_iterator.ml[311,12040+58]..[311,12040+59])
                                ]
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[311,12040+61]..[311,12040+65])
                              Pexp_ident "list" (typing/tast_iterator.ml[311,12040+61]..[311,12040+65])
                        ]
                  <case>
                    pattern (typing/tast_iterator.ml[312,12106+4]..[312,12106+21])
                      Ppat_construct "Tmty_typeof" (typing/tast_iterator.ml[312,12106+4]..[312,12106+15])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[312,12106+16]..[312,12106+21])
                          Ppat_var "mexpr" (typing/tast_iterator.ml[312,12106+16]..[312,12106+21])
                    expression (typing/tast_iterator.ml[312,12106+25]..[312,12106+50])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[312,12106+25]..[312,12106+40])
                        Pexp_field
                        expression (typing/tast_iterator.ml[312,12106+25]..[312,12106+28])
                          Pexp_ident "sub" (typing/tast_iterator.ml[312,12106+25]..[312,12106+28])
                        "module_expr" (typing/tast_iterator.ml[312,12106+29]..[312,12106+40])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[312,12106+41]..[312,12106+44])
                            Pexp_ident "sub" (typing/tast_iterator.ml[312,12106+41]..[312,12106+44])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[312,12106+45]..[312,12106+50])
                            Pexp_ident "mexpr" (typing/tast_iterator.ml[312,12106+45]..[312,12106+50])
                      ]
                ]
    ]
  structure_item (typing/tast_iterator.ml[314,12158+0]..[320,12402+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[314,12158+4]..[314,12158+19])
          Ppat_var "with_constraint" (typing/tast_iterator.ml[314,12158+4]..[314,12158+19])
        expression (typing/tast_iterator.ml[314,12158+20]..[320,12402+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[314,12158+20]..[314,12158+23])
            Ppat_var "sub" (typing/tast_iterator.ml[314,12158+20]..[314,12158+23])
          expression (typing/tast_iterator.ml[314,12158+26]..[320,12402+30])
            Pexp_function
            [
              <case>
                pattern (typing/tast_iterator.ml[315,12193+4]..[315,12193+24])
                  Ppat_construct "Twith_type" (typing/tast_iterator.ml[315,12193+4]..[315,12193+14])
                  Some
                    []
                    pattern (typing/tast_iterator.ml[315,12193+20]..[315,12193+24])
                      Ppat_var "decl" (typing/tast_iterator.ml[315,12193+20]..[315,12193+24])
                expression (typing/tast_iterator.ml[315,12193+28]..[315,12193+57])
                  Pexp_apply
                  expression (typing/tast_iterator.ml[315,12193+28]..[315,12193+48])
                    Pexp_field
                    expression (typing/tast_iterator.ml[315,12193+28]..[315,12193+31])
                      Pexp_ident "sub" (typing/tast_iterator.ml[315,12193+28]..[315,12193+31])
                    "type_declaration" (typing/tast_iterator.ml[315,12193+32]..[315,12193+48])
                  [
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[315,12193+49]..[315,12193+52])
                        Pexp_ident "sub" (typing/tast_iterator.ml[315,12193+49]..[315,12193+52])
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[315,12193+53]..[315,12193+57])
                        Pexp_ident "decl" (typing/tast_iterator.ml[315,12193+53]..[315,12193+57])
                  ]
              <case>
                pattern (typing/tast_iterator.ml[316,12251+4]..[316,12251+24])
                  Ppat_construct "Twith_typesubst" (typing/tast_iterator.ml[316,12251+4]..[316,12251+19])
                  Some
                    []
                    pattern (typing/tast_iterator.ml[316,12251+20]..[316,12251+24])
                      Ppat_var "decl" (typing/tast_iterator.ml[316,12251+20]..[316,12251+24])
                expression (typing/tast_iterator.ml[316,12251+28]..[316,12251+57])
                  Pexp_apply
                  expression (typing/tast_iterator.ml[316,12251+28]..[316,12251+48])
                    Pexp_field
                    expression (typing/tast_iterator.ml[316,12251+28]..[316,12251+31])
                      Pexp_ident "sub" (typing/tast_iterator.ml[316,12251+28]..[316,12251+31])
                    "type_declaration" (typing/tast_iterator.ml[316,12251+32]..[316,12251+48])
                  [
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[316,12251+49]..[316,12251+52])
                        Pexp_ident "sub" (typing/tast_iterator.ml[316,12251+49]..[316,12251+52])
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[316,12251+53]..[316,12251+57])
                        Pexp_ident "decl" (typing/tast_iterator.ml[316,12251+53]..[316,12251+57])
                  ]
              <case>
                pattern (typing/tast_iterator.ml[317,12309+4]..[317,12309+21])
                  Ppat_construct "Twith_module" (typing/tast_iterator.ml[317,12309+4]..[317,12309+16])
                  Some
                    []
                    pattern (typing/tast_iterator.ml[317,12309+20]..[317,12309+21])
                      Ppat_any
                expression (typing/tast_iterator.ml[317,12309+28]..[317,12309+30])
                  Pexp_construct "()" (typing/tast_iterator.ml[317,12309+28]..[317,12309+30])
                  None
              <case>
                pattern (typing/tast_iterator.ml[318,12340+4]..[318,12340+21])
                  Ppat_construct "Twith_modsubst" (typing/tast_iterator.ml[318,12340+4]..[318,12340+18])
                  Some
                    []
                    pattern (typing/tast_iterator.ml[318,12340+20]..[318,12340+21])
                      Ppat_any
                expression (typing/tast_iterator.ml[318,12340+28]..[318,12340+30])
                  Pexp_construct "()" (typing/tast_iterator.ml[318,12340+28]..[318,12340+30])
                  None
              <case>
                pattern (typing/tast_iterator.ml[319,12371+4]..[319,12371+21])
                  Ppat_construct "Twith_modtype" (typing/tast_iterator.ml[319,12371+4]..[319,12371+17])
                  Some
                    []
                    pattern (typing/tast_iterator.ml[319,12371+20]..[319,12371+21])
                      Ppat_any
                expression (typing/tast_iterator.ml[319,12371+28]..[319,12371+30])
                  Pexp_construct "()" (typing/tast_iterator.ml[319,12371+28]..[319,12371+30])
                  None
              <case>
                pattern (typing/tast_iterator.ml[320,12402+4]..[320,12402+24])
                  Ppat_construct "Twith_modtypesubst" (typing/tast_iterator.ml[320,12402+4]..[320,12402+22])
                  Some
                    []
                    pattern (typing/tast_iterator.ml[320,12402+23]..[320,12402+24])
                      Ppat_any
                expression (typing/tast_iterator.ml[320,12402+28]..[320,12402+30])
                  Pexp_construct "()" (typing/tast_iterator.ml[320,12402+28]..[320,12402+30])
                  None
            ]
    ]
  structure_item (typing/tast_iterator.ml[323,12435+0]..[323,12435+61])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[323,12435+4]..[323,12435+20])
          Ppat_var "open_description" (typing/tast_iterator.ml[323,12435+4]..[323,12435+20])
        expression (typing/tast_iterator.ml[323,12435+21]..[323,12435+61]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[323,12435+21]..[323,12435+24])
            Ppat_var "sub" (typing/tast_iterator.ml[323,12435+21]..[323,12435+24])
          expression (typing/tast_iterator.ml[323,12435+25]..[323,12435+61]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[323,12435+25]..[323,12435+38])
              Ppat_record Open
              [
                "open_env" (typing/tast_iterator.ml[323,12435+26]..[323,12435+34]) ghost
                  pattern (typing/tast_iterator.ml[323,12435+26]..[323,12435+34])
                    Ppat_var "open_env" (typing/tast_iterator.ml[323,12435+26]..[323,12435+34])
              ]
            expression (typing/tast_iterator.ml[323,12435+41]..[323,12435+61])
              Pexp_apply
              expression (typing/tast_iterator.ml[323,12435+41]..[323,12435+48])
                Pexp_field
                expression (typing/tast_iterator.ml[323,12435+41]..[323,12435+44])
                  Pexp_ident "sub" (typing/tast_iterator.ml[323,12435+41]..[323,12435+44])
                "env" (typing/tast_iterator.ml[323,12435+45]..[323,12435+48])
              [
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[323,12435+49]..[323,12435+52])
                    Pexp_ident "sub" (typing/tast_iterator.ml[323,12435+49]..[323,12435+52])
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[323,12435+53]..[323,12435+61])
                    Pexp_ident "open_env" (typing/tast_iterator.ml[323,12435+53]..[323,12435+61])
              ]
    ]
  structure_item (typing/tast_iterator.ml[325,12498+0]..[327,12583+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[325,12498+4]..[325,12498+20])
          Ppat_var "open_declaration" (typing/tast_iterator.ml[325,12498+4]..[325,12498+20])
        expression (typing/tast_iterator.ml[325,12498+21]..[327,12583+22]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[325,12498+21]..[325,12498+24])
            Ppat_var "sub" (typing/tast_iterator.ml[325,12498+21]..[325,12498+24])
          expression (typing/tast_iterator.ml[325,12498+25]..[327,12583+22]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[325,12498+25]..[325,12498+49])
              Ppat_record Open
              [
                "open_expr" (typing/tast_iterator.ml[325,12498+26]..[325,12498+35]) ghost
                  pattern (typing/tast_iterator.ml[325,12498+26]..[325,12498+35])
                    Ppat_var "open_expr" (typing/tast_iterator.ml[325,12498+26]..[325,12498+35])
                "open_env" (typing/tast_iterator.ml[325,12498+37]..[325,12498+45]) ghost
                  pattern (typing/tast_iterator.ml[325,12498+37]..[325,12498+45])
                    Ppat_var "open_env" (typing/tast_iterator.ml[325,12498+37]..[325,12498+45])
              ]
            expression (typing/tast_iterator.ml[326,12550+2]..[327,12583+22])
              Pexp_sequence
              expression (typing/tast_iterator.ml[326,12550+2]..[326,12550+31])
                Pexp_apply
                expression (typing/tast_iterator.ml[326,12550+2]..[326,12550+17])
                  Pexp_field
                  expression (typing/tast_iterator.ml[326,12550+2]..[326,12550+5])
                    Pexp_ident "sub" (typing/tast_iterator.ml[326,12550+2]..[326,12550+5])
                  "module_expr" (typing/tast_iterator.ml[326,12550+6]..[326,12550+17])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[326,12550+18]..[326,12550+21])
                      Pexp_ident "sub" (typing/tast_iterator.ml[326,12550+18]..[326,12550+21])
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[326,12550+22]..[326,12550+31])
                      Pexp_ident "open_expr" (typing/tast_iterator.ml[326,12550+22]..[326,12550+31])
                ]
              expression (typing/tast_iterator.ml[327,12583+2]..[327,12583+22])
                Pexp_apply
                expression (typing/tast_iterator.ml[327,12583+2]..[327,12583+9])
                  Pexp_field
                  expression (typing/tast_iterator.ml[327,12583+2]..[327,12583+5])
                    Pexp_ident "sub" (typing/tast_iterator.ml[327,12583+2]..[327,12583+5])
                  "env" (typing/tast_iterator.ml[327,12583+6]..[327,12583+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[327,12583+10]..[327,12583+13])
                      Pexp_ident "sub" (typing/tast_iterator.ml[327,12583+10]..[327,12583+13])
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[327,12583+14]..[327,12583+22])
                      Pexp_ident "open_env" (typing/tast_iterator.ml[327,12583+14]..[327,12583+22])
                ]
    ]
  structure_item (typing/tast_iterator.ml[329,12607+0]..[340,13013+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[329,12607+4]..[329,12607+19])
          Ppat_var "module_coercion" (typing/tast_iterator.ml[329,12607+4]..[329,12607+19])
        expression (typing/tast_iterator.ml[329,12607+20]..[340,13013+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[329,12607+20]..[329,12607+23])
            Ppat_var "sub" (typing/tast_iterator.ml[329,12607+20]..[329,12607+23])
          expression (typing/tast_iterator.ml[329,12607+26]..[340,13013+55])
            Pexp_function
            [
              <case>
                pattern (typing/tast_iterator.ml[330,12642+4]..[330,12642+16])
                  Ppat_construct "Tcoerce_none" (typing/tast_iterator.ml[330,12642+4]..[330,12642+16])
                  None
                expression (typing/tast_iterator.ml[330,12642+20]..[330,12642+22])
                  Pexp_construct "()" (typing/tast_iterator.ml[330,12642+20]..[330,12642+22])
                  None
              <case>
                pattern (typing/tast_iterator.ml[331,12665+4]..[331,12665+27])
                  Ppat_construct "Tcoerce_functor" (typing/tast_iterator.ml[331,12665+4]..[331,12665+19])
                  Some
                    []
                    pattern (typing/tast_iterator.ml[331,12665+20]..[331,12665+27])
                      Ppat_tuple
                      [
                        pattern (typing/tast_iterator.ml[331,12665+21]..[331,12665+23])
                          Ppat_var "c1" (typing/tast_iterator.ml[331,12665+21]..[331,12665+23])
                        pattern (typing/tast_iterator.ml[331,12665+24]..[331,12665+26])
                          Ppat_var "c2" (typing/tast_iterator.ml[331,12665+24]..[331,12665+26])
                      ]
                expression (typing/tast_iterator.ml[332,12696+6]..[333,12730+32])
                  Pexp_sequence
                  expression (typing/tast_iterator.ml[332,12696+6]..[332,12696+32])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[332,12696+6]..[332,12696+25])
                      Pexp_field
                      expression (typing/tast_iterator.ml[332,12696+6]..[332,12696+9])
                        Pexp_ident "sub" (typing/tast_iterator.ml[332,12696+6]..[332,12696+9])
                      "module_coercion" (typing/tast_iterator.ml[332,12696+10]..[332,12696+25])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[332,12696+26]..[332,12696+29])
                          Pexp_ident "sub" (typing/tast_iterator.ml[332,12696+26]..[332,12696+29])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[332,12696+30]..[332,12696+32])
                          Pexp_ident "c1" (typing/tast_iterator.ml[332,12696+30]..[332,12696+32])
                    ]
                  expression (typing/tast_iterator.ml[333,12730+6]..[333,12730+32])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[333,12730+6]..[333,12730+25])
                      Pexp_field
                      expression (typing/tast_iterator.ml[333,12730+6]..[333,12730+9])
                        Pexp_ident "sub" (typing/tast_iterator.ml[333,12730+6]..[333,12730+9])
                      "module_coercion" (typing/tast_iterator.ml[333,12730+10]..[333,12730+25])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[333,12730+26]..[333,12730+29])
                          Pexp_ident "sub" (typing/tast_iterator.ml[333,12730+26]..[333,12730+29])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[333,12730+30]..[333,12730+32])
                          Pexp_ident "c2" (typing/tast_iterator.ml[333,12730+30]..[333,12730+32])
                    ]
              <case>
                pattern (typing/tast_iterator.ml[334,12763+4]..[334,12763+30])
                  Ppat_construct "Tcoerce_alias" (typing/tast_iterator.ml[334,12763+4]..[334,12763+17])
                  Some
                    []
                    pattern (typing/tast_iterator.ml[334,12763+18]..[334,12763+30])
                      Ppat_tuple
                      [
                        pattern (typing/tast_iterator.ml[334,12763+19]..[334,12763+22])
                          Ppat_var "env" (typing/tast_iterator.ml[334,12763+19]..[334,12763+22])
                        pattern (typing/tast_iterator.ml[334,12763+24]..[334,12763+25])
                          Ppat_any
                        pattern (typing/tast_iterator.ml[334,12763+27]..[334,12763+29])
                          Ppat_var "c1" (typing/tast_iterator.ml[334,12763+27]..[334,12763+29])
                      ]
                expression (typing/tast_iterator.ml[335,12797+6]..[336,12820+32])
                  Pexp_sequence
                  expression (typing/tast_iterator.ml[335,12797+6]..[335,12797+21])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[335,12797+6]..[335,12797+13])
                      Pexp_field
                      expression (typing/tast_iterator.ml[335,12797+6]..[335,12797+9])
                        Pexp_ident "sub" (typing/tast_iterator.ml[335,12797+6]..[335,12797+9])
                      "env" (typing/tast_iterator.ml[335,12797+10]..[335,12797+13])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[335,12797+14]..[335,12797+17])
                          Pexp_ident "sub" (typing/tast_iterator.ml[335,12797+14]..[335,12797+17])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[335,12797+18]..[335,12797+21])
                          Pexp_ident "env" (typing/tast_iterator.ml[335,12797+18]..[335,12797+21])
                    ]
                  expression (typing/tast_iterator.ml[336,12820+6]..[336,12820+32])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[336,12820+6]..[336,12820+25])
                      Pexp_field
                      expression (typing/tast_iterator.ml[336,12820+6]..[336,12820+9])
                        Pexp_ident "sub" (typing/tast_iterator.ml[336,12820+6]..[336,12820+9])
                      "module_coercion" (typing/tast_iterator.ml[336,12820+10]..[336,12820+25])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[336,12820+26]..[336,12820+29])
                          Pexp_ident "sub" (typing/tast_iterator.ml[336,12820+26]..[336,12820+29])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[336,12820+30]..[336,12820+32])
                          Pexp_ident "c1" (typing/tast_iterator.ml[336,12820+30]..[336,12820+32])
                    ]
              <case>
                pattern (typing/tast_iterator.ml[337,12853+4]..[337,12853+30])
                  Ppat_construct "Tcoerce_structure" (typing/tast_iterator.ml[337,12853+4]..[337,12853+21])
                  Some
                    []
                    pattern (typing/tast_iterator.ml[337,12853+22]..[337,12853+30])
                      Ppat_tuple
                      [
                        pattern (typing/tast_iterator.ml[337,12853+23]..[337,12853+25])
                          Ppat_var "l1" (typing/tast_iterator.ml[337,12853+23]..[337,12853+25])
                        pattern (typing/tast_iterator.ml[337,12853+27]..[337,12853+29])
                          Ppat_var "l2" (typing/tast_iterator.ml[337,12853+27]..[337,12853+29])
                      ]
                expression (typing/tast_iterator.ml[338,12887+6]..[339,12949+63])
                  Pexp_sequence
                  expression (typing/tast_iterator.ml[338,12887+6]..[338,12887+60])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[338,12887+6]..[338,12887+15])
                      Pexp_ident "List.iter" (typing/tast_iterator.ml[338,12887+6]..[338,12887+15])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[338,12887+16]..[338,12887+57])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/tast_iterator.ml[338,12887+21]..[338,12887+27])
                            Ppat_tuple
                            [
                              pattern (typing/tast_iterator.ml[338,12887+22]..[338,12887+23])
                                Ppat_any
                              pattern (typing/tast_iterator.ml[338,12887+25]..[338,12887+26])
                                Ppat_var "c" (typing/tast_iterator.ml[338,12887+25]..[338,12887+26])
                            ]
                          expression (typing/tast_iterator.ml[338,12887+31]..[338,12887+56])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[338,12887+31]..[338,12887+50])
                              Pexp_field
                              expression (typing/tast_iterator.ml[338,12887+31]..[338,12887+34])
                                Pexp_ident "sub" (typing/tast_iterator.ml[338,12887+31]..[338,12887+34])
                              "module_coercion" (typing/tast_iterator.ml[338,12887+35]..[338,12887+50])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[338,12887+51]..[338,12887+54])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[338,12887+51]..[338,12887+54])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[338,12887+55]..[338,12887+56])
                                  Pexp_ident "c" (typing/tast_iterator.ml[338,12887+55]..[338,12887+56])
                            ]
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[338,12887+58]..[338,12887+60])
                          Pexp_ident "l1" (typing/tast_iterator.ml[338,12887+58]..[338,12887+60])
                    ]
                  expression (typing/tast_iterator.ml[339,12949+6]..[339,12949+63])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[339,12949+6]..[339,12949+15])
                      Pexp_ident "List.iter" (typing/tast_iterator.ml[339,12949+6]..[339,12949+15])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[339,12949+16]..[339,12949+60])
                          Pexp_fun
                          Nolabel
                          None
                          pattern (typing/tast_iterator.ml[339,12949+21]..[339,12949+30])
                            Ppat_tuple
                            [
                              pattern (typing/tast_iterator.ml[339,12949+22]..[339,12949+23])
                                Ppat_any
                              pattern (typing/tast_iterator.ml[339,12949+25]..[339,12949+26])
                                Ppat_any
                              pattern (typing/tast_iterator.ml[339,12949+28]..[339,12949+29])
                                Ppat_var "c" (typing/tast_iterator.ml[339,12949+28]..[339,12949+29])
                            ]
                          expression (typing/tast_iterator.ml[339,12949+34]..[339,12949+59])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[339,12949+34]..[339,12949+53])
                              Pexp_field
                              expression (typing/tast_iterator.ml[339,12949+34]..[339,12949+37])
                                Pexp_ident "sub" (typing/tast_iterator.ml[339,12949+34]..[339,12949+37])
                              "module_coercion" (typing/tast_iterator.ml[339,12949+38]..[339,12949+53])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[339,12949+54]..[339,12949+57])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[339,12949+54]..[339,12949+57])
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[339,12949+58]..[339,12949+59])
                                  Pexp_ident "c" (typing/tast_iterator.ml[339,12949+58]..[339,12949+59])
                            ]
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[339,12949+61]..[339,12949+63])
                          Pexp_ident "l2" (typing/tast_iterator.ml[339,12949+61]..[339,12949+63])
                    ]
              <case>
                pattern (typing/tast_iterator.ml[340,13013+4]..[340,13013+33])
                  Ppat_construct "Tcoerce_primitive" (typing/tast_iterator.ml[340,13013+4]..[340,13013+21])
                  Some
                    []
                    pattern (typing/tast_iterator.ml[340,13013+22]..[340,13013+33])
                      Ppat_record Open
                      [
                        "pc_env" (typing/tast_iterator.ml[340,13013+23]..[340,13013+29]) ghost
                          pattern (typing/tast_iterator.ml[340,13013+23]..[340,13013+29])
                            Ppat_var "pc_env" (typing/tast_iterator.ml[340,13013+23]..[340,13013+29])
                      ]
                expression (typing/tast_iterator.ml[340,13013+37]..[340,13013+55])
                  Pexp_apply
                  expression (typing/tast_iterator.ml[340,13013+37]..[340,13013+44])
                    Pexp_field
                    expression (typing/tast_iterator.ml[340,13013+37]..[340,13013+40])
                      Pexp_ident "sub" (typing/tast_iterator.ml[340,13013+37]..[340,13013+40])
                    "env" (typing/tast_iterator.ml[340,13013+41]..[340,13013+44])
                  [
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[340,13013+45]..[340,13013+48])
                        Pexp_ident "sub" (typing/tast_iterator.ml[340,13013+45]..[340,13013+48])
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[340,13013+49]..[340,13013+55])
                        Pexp_ident "pc_env" (typing/tast_iterator.ml[340,13013+49]..[340,13013+55])
                  ]
            ]
    ]
  structure_item (typing/tast_iterator.ml[342,13070+0]..[361,13747+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[342,13070+4]..[342,13070+15])
          Ppat_var "module_expr" (typing/tast_iterator.ml[342,13070+4]..[342,13070+15])
        expression (typing/tast_iterator.ml[342,13070+16]..[361,13747+44]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[342,13070+16]..[342,13070+19])
            Ppat_var "sub" (typing/tast_iterator.ml[342,13070+16]..[342,13070+19])
          expression (typing/tast_iterator.ml[342,13070+20]..[361,13747+44]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[342,13070+20]..[342,13070+42])
              Ppat_record Open
              [
                "mod_desc" (typing/tast_iterator.ml[342,13070+21]..[342,13070+29]) ghost
                  pattern (typing/tast_iterator.ml[342,13070+21]..[342,13070+29])
                    Ppat_var "mod_desc" (typing/tast_iterator.ml[342,13070+21]..[342,13070+29])
                "mod_env" (typing/tast_iterator.ml[342,13070+31]..[342,13070+38]) ghost
                  pattern (typing/tast_iterator.ml[342,13070+31]..[342,13070+38])
                    Ppat_var "mod_env" (typing/tast_iterator.ml[342,13070+31]..[342,13070+38])
              ]
            expression (typing/tast_iterator.ml[343,13115+2]..[361,13747+44])
              Pexp_sequence
              expression (typing/tast_iterator.ml[343,13115+2]..[343,13115+21])
                Pexp_apply
                expression (typing/tast_iterator.ml[343,13115+2]..[343,13115+9])
                  Pexp_field
                  expression (typing/tast_iterator.ml[343,13115+2]..[343,13115+5])
                    Pexp_ident "sub" (typing/tast_iterator.ml[343,13115+2]..[343,13115+5])
                  "env" (typing/tast_iterator.ml[343,13115+6]..[343,13115+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[343,13115+10]..[343,13115+13])
                      Pexp_ident "sub" (typing/tast_iterator.ml[343,13115+10]..[343,13115+13])
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[343,13115+14]..[343,13115+21])
                      Pexp_ident "mod_env" (typing/tast_iterator.ml[343,13115+14]..[343,13115+21])
                ]
              expression (typing/tast_iterator.ml[344,13138+2]..[361,13747+44])
                Pexp_match
                expression (typing/tast_iterator.ml[344,13138+8]..[344,13138+16])
                  Pexp_ident "mod_desc" (typing/tast_iterator.ml[344,13138+8]..[344,13138+16])
                [
                  <case>
                    pattern (typing/tast_iterator.ml[345,13160+4]..[345,13160+16])
                      Ppat_construct "Tmod_ident" (typing/tast_iterator.ml[345,13160+4]..[345,13160+14])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[345,13160+15]..[345,13160+16])
                          Ppat_any
                    expression (typing/tast_iterator.ml[345,13160+25]..[345,13160+27])
                      Pexp_construct "()" (typing/tast_iterator.ml[345,13160+25]..[345,13160+27])
                      None
                  <case>
                    pattern (typing/tast_iterator.ml[346,13188+4]..[346,13188+21])
                      Ppat_construct "Tmod_structure" (typing/tast_iterator.ml[346,13188+4]..[346,13188+18])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[346,13188+19]..[346,13188+21])
                          Ppat_var "st" (typing/tast_iterator.ml[346,13188+19]..[346,13188+21])
                    expression (typing/tast_iterator.ml[346,13188+25]..[346,13188+45])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[346,13188+25]..[346,13188+38])
                        Pexp_field
                        expression (typing/tast_iterator.ml[346,13188+25]..[346,13188+28])
                          Pexp_ident "sub" (typing/tast_iterator.ml[346,13188+25]..[346,13188+28])
                        "structure" (typing/tast_iterator.ml[346,13188+29]..[346,13188+38])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[346,13188+39]..[346,13188+42])
                            Pexp_ident "sub" (typing/tast_iterator.ml[346,13188+39]..[346,13188+42])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[346,13188+43]..[346,13188+45])
                            Pexp_ident "st" (typing/tast_iterator.ml[346,13188+43]..[346,13188+45])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[347,13234+4]..[347,13234+29])
                      Ppat_construct "Tmod_functor" (typing/tast_iterator.ml[347,13234+4]..[347,13234+16])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[347,13234+17]..[347,13234+29])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[347,13234+18]..[347,13234+21])
                              Ppat_var "arg" (typing/tast_iterator.ml[347,13234+18]..[347,13234+21])
                            pattern (typing/tast_iterator.ml[347,13234+23]..[347,13234+28])
                              Ppat_var "mexpr" (typing/tast_iterator.ml[347,13234+23]..[347,13234+28])
                          ]
                    expression (typing/tast_iterator.ml[348,13267+6]..[349,13300+31])
                      Pexp_sequence
                      expression (typing/tast_iterator.ml[348,13267+6]..[348,13267+31])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[348,13267+6]..[348,13267+23])
                          Pexp_ident "functor_parameter" (typing/tast_iterator.ml[348,13267+6]..[348,13267+23])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[348,13267+24]..[348,13267+27])
                              Pexp_ident "sub" (typing/tast_iterator.ml[348,13267+24]..[348,13267+27])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[348,13267+28]..[348,13267+31])
                              Pexp_ident "arg" (typing/tast_iterator.ml[348,13267+28]..[348,13267+31])
                        ]
                      expression (typing/tast_iterator.ml[349,13300+6]..[349,13300+31])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[349,13300+6]..[349,13300+21])
                          Pexp_field
                          expression (typing/tast_iterator.ml[349,13300+6]..[349,13300+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[349,13300+6]..[349,13300+9])
                          "module_expr" (typing/tast_iterator.ml[349,13300+10]..[349,13300+21])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[349,13300+22]..[349,13300+25])
                              Pexp_ident "sub" (typing/tast_iterator.ml[349,13300+22]..[349,13300+25])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[349,13300+26]..[349,13300+31])
                              Pexp_ident "mexpr" (typing/tast_iterator.ml[349,13300+26]..[349,13300+31])
                        ]
                  <case>
                    pattern (typing/tast_iterator.ml[350,13332+4]..[350,13332+32])
                      Ppat_construct "Tmod_apply" (typing/tast_iterator.ml[350,13332+4]..[350,13332+14])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[350,13332+15]..[350,13332+32])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[350,13332+16]..[350,13332+21])
                              Ppat_var "mexp1" (typing/tast_iterator.ml[350,13332+16]..[350,13332+21])
                            pattern (typing/tast_iterator.ml[350,13332+23]..[350,13332+28])
                              Ppat_var "mexp2" (typing/tast_iterator.ml[350,13332+23]..[350,13332+28])
                            pattern (typing/tast_iterator.ml[350,13332+30]..[350,13332+31])
                              Ppat_var "c" (typing/tast_iterator.ml[350,13332+30]..[350,13332+31])
                          ]
                    expression (typing/tast_iterator.ml[351,13368+6]..[353,13434+31])
                      Pexp_sequence
                      expression (typing/tast_iterator.ml[351,13368+6]..[351,13368+31])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[351,13368+6]..[351,13368+21])
                          Pexp_field
                          expression (typing/tast_iterator.ml[351,13368+6]..[351,13368+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[351,13368+6]..[351,13368+9])
                          "module_expr" (typing/tast_iterator.ml[351,13368+10]..[351,13368+21])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[351,13368+22]..[351,13368+25])
                              Pexp_ident "sub" (typing/tast_iterator.ml[351,13368+22]..[351,13368+25])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[351,13368+26]..[351,13368+31])
                              Pexp_ident "mexp1" (typing/tast_iterator.ml[351,13368+26]..[351,13368+31])
                        ]
                      expression (typing/tast_iterator.ml[352,13401+6]..[353,13434+31])
                        Pexp_sequence
                        expression (typing/tast_iterator.ml[352,13401+6]..[352,13401+31])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[352,13401+6]..[352,13401+21])
                            Pexp_field
                            expression (typing/tast_iterator.ml[352,13401+6]..[352,13401+9])
                              Pexp_ident "sub" (typing/tast_iterator.ml[352,13401+6]..[352,13401+9])
                            "module_expr" (typing/tast_iterator.ml[352,13401+10]..[352,13401+21])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[352,13401+22]..[352,13401+25])
                                Pexp_ident "sub" (typing/tast_iterator.ml[352,13401+22]..[352,13401+25])
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[352,13401+26]..[352,13401+31])
                                Pexp_ident "mexp2" (typing/tast_iterator.ml[352,13401+26]..[352,13401+31])
                          ]
                        expression (typing/tast_iterator.ml[353,13434+6]..[353,13434+31])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[353,13434+6]..[353,13434+25])
                            Pexp_field
                            expression (typing/tast_iterator.ml[353,13434+6]..[353,13434+9])
                              Pexp_ident "sub" (typing/tast_iterator.ml[353,13434+6]..[353,13434+9])
                            "module_coercion" (typing/tast_iterator.ml[353,13434+10]..[353,13434+25])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[353,13434+26]..[353,13434+29])
                                Pexp_ident "sub" (typing/tast_iterator.ml[353,13434+26]..[353,13434+29])
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[353,13434+30]..[353,13434+31])
                                Pexp_ident "c" (typing/tast_iterator.ml[353,13434+30]..[353,13434+31])
                          ]
                  <case>
                    pattern (typing/tast_iterator.ml[354,13466+4]..[354,13466+52])
                      Ppat_construct "Tmod_constraint" (typing/tast_iterator.ml[354,13466+4]..[354,13466+19])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[354,13466+20]..[354,13466+52])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[354,13466+21]..[354,13466+26])
                              Ppat_var "mexpr" (typing/tast_iterator.ml[354,13466+21]..[354,13466+26])
                            pattern (typing/tast_iterator.ml[354,13466+28]..[354,13466+29])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[354,13466+31]..[354,13466+48])
                              Ppat_construct "Tmodtype_implicit" (typing/tast_iterator.ml[354,13466+31]..[354,13466+48])
                              None
                            pattern (typing/tast_iterator.ml[354,13466+50]..[354,13466+51])
                              Ppat_var "c" (typing/tast_iterator.ml[354,13466+50]..[354,13466+51])
                          ]
                    expression (typing/tast_iterator.ml[355,13522+6]..[356,13555+31])
                      Pexp_sequence
                      expression (typing/tast_iterator.ml[355,13522+6]..[355,13522+31])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[355,13522+6]..[355,13522+21])
                          Pexp_field
                          expression (typing/tast_iterator.ml[355,13522+6]..[355,13522+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[355,13522+6]..[355,13522+9])
                          "module_expr" (typing/tast_iterator.ml[355,13522+10]..[355,13522+21])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[355,13522+22]..[355,13522+25])
                              Pexp_ident "sub" (typing/tast_iterator.ml[355,13522+22]..[355,13522+25])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[355,13522+26]..[355,13522+31])
                              Pexp_ident "mexpr" (typing/tast_iterator.ml[355,13522+26]..[355,13522+31])
                        ]
                      expression (typing/tast_iterator.ml[356,13555+6]..[356,13555+31])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[356,13555+6]..[356,13555+25])
                          Pexp_field
                          expression (typing/tast_iterator.ml[356,13555+6]..[356,13555+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[356,13555+6]..[356,13555+9])
                          "module_coercion" (typing/tast_iterator.ml[356,13555+10]..[356,13555+25])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[356,13555+26]..[356,13555+29])
                              Pexp_ident "sub" (typing/tast_iterator.ml[356,13555+26]..[356,13555+29])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[356,13555+30]..[356,13555+31])
                              Pexp_ident "c" (typing/tast_iterator.ml[356,13555+30]..[356,13555+31])
                        ]
                  <case>
                    pattern (typing/tast_iterator.ml[357,13587+4]..[357,13587+58])
                      Ppat_construct "Tmod_constraint" (typing/tast_iterator.ml[357,13587+4]..[357,13587+19])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[357,13587+20]..[357,13587+58])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[357,13587+21]..[357,13587+26])
                              Ppat_var "mexpr" (typing/tast_iterator.ml[357,13587+21]..[357,13587+26])
                            pattern (typing/tast_iterator.ml[357,13587+28]..[357,13587+29])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[357,13587+31]..[357,13587+54])
                              Ppat_construct "Tmodtype_explicit" (typing/tast_iterator.ml[357,13587+31]..[357,13587+48])
                              Some
                                []
                                pattern (typing/tast_iterator.ml[357,13587+49]..[357,13587+54])
                                  Ppat_var "mtype" (typing/tast_iterator.ml[357,13587+49]..[357,13587+54])
                            pattern (typing/tast_iterator.ml[357,13587+56]..[357,13587+57])
                              Ppat_var "c" (typing/tast_iterator.ml[357,13587+56]..[357,13587+57])
                          ]
                    expression (typing/tast_iterator.ml[358,13649+6]..[360,13715+31])
                      Pexp_sequence
                      expression (typing/tast_iterator.ml[358,13649+6]..[358,13649+31])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[358,13649+6]..[358,13649+21])
                          Pexp_field
                          expression (typing/tast_iterator.ml[358,13649+6]..[358,13649+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[358,13649+6]..[358,13649+9])
                          "module_expr" (typing/tast_iterator.ml[358,13649+10]..[358,13649+21])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[358,13649+22]..[358,13649+25])
                              Pexp_ident "sub" (typing/tast_iterator.ml[358,13649+22]..[358,13649+25])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[358,13649+26]..[358,13649+31])
                              Pexp_ident "mexpr" (typing/tast_iterator.ml[358,13649+26]..[358,13649+31])
                        ]
                      expression (typing/tast_iterator.ml[359,13682+6]..[360,13715+31])
                        Pexp_sequence
                        expression (typing/tast_iterator.ml[359,13682+6]..[359,13682+31])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[359,13682+6]..[359,13682+21])
                            Pexp_field
                            expression (typing/tast_iterator.ml[359,13682+6]..[359,13682+9])
                              Pexp_ident "sub" (typing/tast_iterator.ml[359,13682+6]..[359,13682+9])
                            "module_type" (typing/tast_iterator.ml[359,13682+10]..[359,13682+21])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[359,13682+22]..[359,13682+25])
                                Pexp_ident "sub" (typing/tast_iterator.ml[359,13682+22]..[359,13682+25])
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[359,13682+26]..[359,13682+31])
                                Pexp_ident "mtype" (typing/tast_iterator.ml[359,13682+26]..[359,13682+31])
                          ]
                        expression (typing/tast_iterator.ml[360,13715+6]..[360,13715+31])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[360,13715+6]..[360,13715+25])
                            Pexp_field
                            expression (typing/tast_iterator.ml[360,13715+6]..[360,13715+9])
                              Pexp_ident "sub" (typing/tast_iterator.ml[360,13715+6]..[360,13715+9])
                            "module_coercion" (typing/tast_iterator.ml[360,13715+10]..[360,13715+25])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[360,13715+26]..[360,13715+29])
                                Pexp_ident "sub" (typing/tast_iterator.ml[360,13715+26]..[360,13715+29])
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[360,13715+30]..[360,13715+31])
                                Pexp_ident "c" (typing/tast_iterator.ml[360,13715+30]..[360,13715+31])
                          ]
                  <case>
                    pattern (typing/tast_iterator.ml[361,13747+4]..[361,13747+24])
                      Ppat_construct "Tmod_unpack" (typing/tast_iterator.ml[361,13747+4]..[361,13747+15])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[361,13747+16]..[361,13747+24])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[361,13747+17]..[361,13747+20])
                              Ppat_var "exp" (typing/tast_iterator.ml[361,13747+17]..[361,13747+20])
                            pattern (typing/tast_iterator.ml[361,13747+22]..[361,13747+23])
                              Ppat_any
                          ]
                    expression (typing/tast_iterator.ml[361,13747+28]..[361,13747+44])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[361,13747+28]..[361,13747+36])
                        Pexp_field
                        expression (typing/tast_iterator.ml[361,13747+28]..[361,13747+31])
                          Pexp_ident "sub" (typing/tast_iterator.ml[361,13747+28]..[361,13747+31])
                        "expr" (typing/tast_iterator.ml[361,13747+32]..[361,13747+36])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[361,13747+37]..[361,13747+40])
                            Pexp_ident "sub" (typing/tast_iterator.ml[361,13747+37]..[361,13747+40])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[361,13747+41]..[361,13747+44])
                            Pexp_ident "exp" (typing/tast_iterator.ml[361,13747+41]..[361,13747+44])
                      ]
                ]
    ]
  structure_item (typing/tast_iterator.ml[363,13793+0]..[363,13793+65])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[363,13793+4]..[363,13793+18])
          Ppat_var "module_binding" (typing/tast_iterator.ml[363,13793+4]..[363,13793+18])
        expression (typing/tast_iterator.ml[363,13793+19]..[363,13793+65]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[363,13793+19]..[363,13793+22])
            Ppat_var "sub" (typing/tast_iterator.ml[363,13793+19]..[363,13793+22])
          expression (typing/tast_iterator.ml[363,13793+23]..[363,13793+65]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[363,13793+23]..[363,13793+35])
              Ppat_record Open
              [
                "mb_expr" (typing/tast_iterator.ml[363,13793+24]..[363,13793+31]) ghost
                  pattern (typing/tast_iterator.ml[363,13793+24]..[363,13793+31])
                    Ppat_var "mb_expr" (typing/tast_iterator.ml[363,13793+24]..[363,13793+31])
              ]
            expression (typing/tast_iterator.ml[363,13793+38]..[363,13793+65])
              Pexp_apply
              expression (typing/tast_iterator.ml[363,13793+38]..[363,13793+53])
                Pexp_field
                expression (typing/tast_iterator.ml[363,13793+38]..[363,13793+41])
                  Pexp_ident "sub" (typing/tast_iterator.ml[363,13793+38]..[363,13793+41])
                "module_expr" (typing/tast_iterator.ml[363,13793+42]..[363,13793+53])
              [
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[363,13793+54]..[363,13793+57])
                    Pexp_ident "sub" (typing/tast_iterator.ml[363,13793+54]..[363,13793+57])
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[363,13793+58]..[363,13793+65])
                    Pexp_ident "mb_expr" (typing/tast_iterator.ml[363,13793+58]..[363,13793+65])
              ]
    ]
  structure_item (typing/tast_iterator.ml[365,13860+0]..[386,14689+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[365,13860+4]..[365,13860+14])
          Ppat_var "class_expr" (typing/tast_iterator.ml[365,13860+4]..[365,13860+14])
        expression (typing/tast_iterator.ml[365,13860+15]..[386,14689+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[365,13860+15]..[365,13860+18])
            Ppat_var "sub" (typing/tast_iterator.ml[365,13860+15]..[365,13860+18])
          expression (typing/tast_iterator.ml[365,13860+19]..[386,14689+26]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[365,13860+19]..[365,13860+39])
              Ppat_record Open
              [
                "cl_desc" (typing/tast_iterator.ml[365,13860+20]..[365,13860+27]) ghost
                  pattern (typing/tast_iterator.ml[365,13860+20]..[365,13860+27])
                    Ppat_var "cl_desc" (typing/tast_iterator.ml[365,13860+20]..[365,13860+27])
                "cl_env" (typing/tast_iterator.ml[365,13860+29]..[365,13860+35]) ghost
                  pattern (typing/tast_iterator.ml[365,13860+29]..[365,13860+35])
                    Ppat_var "cl_env" (typing/tast_iterator.ml[365,13860+29]..[365,13860+35])
              ]
            expression (typing/tast_iterator.ml[366,13902+2]..[386,14689+26])
              Pexp_sequence
              expression (typing/tast_iterator.ml[366,13902+2]..[366,13902+20])
                Pexp_apply
                expression (typing/tast_iterator.ml[366,13902+2]..[366,13902+9])
                  Pexp_field
                  expression (typing/tast_iterator.ml[366,13902+2]..[366,13902+5])
                    Pexp_ident "sub" (typing/tast_iterator.ml[366,13902+2]..[366,13902+5])
                  "env" (typing/tast_iterator.ml[366,13902+6]..[366,13902+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[366,13902+10]..[366,13902+13])
                      Pexp_ident "sub" (typing/tast_iterator.ml[366,13902+10]..[366,13902+13])
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[366,13902+14]..[366,13902+20])
                      Pexp_ident "cl_env" (typing/tast_iterator.ml[366,13902+14]..[366,13902+20])
                ]
              expression (typing/tast_iterator.ml[367,13924+2]..[386,14689+26])
                Pexp_match
                expression (typing/tast_iterator.ml[367,13924+8]..[367,13924+15])
                  Pexp_ident "cl_desc" (typing/tast_iterator.ml[367,13924+8]..[367,13924+15])
                [
                  <case>
                    pattern (typing/tast_iterator.ml[368,13945+4]..[368,13945+38])
                      Ppat_construct "Tcl_constraint" (typing/tast_iterator.ml[368,13945+4]..[368,13945+18])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[368,13945+19]..[368,13945+38])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[368,13945+20]..[368,13945+22])
                              Ppat_var "cl" (typing/tast_iterator.ml[368,13945+20]..[368,13945+22])
                            pattern (typing/tast_iterator.ml[368,13945+24]..[368,13945+28])
                              Ppat_var "clty" (typing/tast_iterator.ml[368,13945+24]..[368,13945+28])
                            pattern (typing/tast_iterator.ml[368,13945+30]..[368,13945+31])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[368,13945+33]..[368,13945+34])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[368,13945+36]..[368,13945+37])
                              Ppat_any
                          ]
                    expression (typing/tast_iterator.ml[369,13987+6]..[370,14016+43])
                      Pexp_sequence
                      expression (typing/tast_iterator.ml[369,13987+6]..[369,13987+27])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[369,13987+6]..[369,13987+20])
                          Pexp_field
                          expression (typing/tast_iterator.ml[369,13987+6]..[369,13987+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[369,13987+6]..[369,13987+9])
                          "class_expr" (typing/tast_iterator.ml[369,13987+10]..[369,13987+20])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[369,13987+21]..[369,13987+24])
                              Pexp_ident "sub" (typing/tast_iterator.ml[369,13987+21]..[369,13987+24])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[369,13987+25]..[369,13987+27])
                              Pexp_ident "cl" (typing/tast_iterator.ml[369,13987+25]..[369,13987+27])
                        ]
                      expression (typing/tast_iterator.ml[370,14016+6]..[370,14016+43])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[370,14016+6]..[370,14016+17])
                          Pexp_ident "Option.iter" (typing/tast_iterator.ml[370,14016+6]..[370,14016+17])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[370,14016+18]..[370,14016+38])
                              Pexp_apply
                              expression (typing/tast_iterator.ml[370,14016+19]..[370,14016+33])
                                Pexp_field
                                expression (typing/tast_iterator.ml[370,14016+19]..[370,14016+22])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[370,14016+19]..[370,14016+22])
                                "class_type" (typing/tast_iterator.ml[370,14016+23]..[370,14016+33])
                              [
                                <arg>
                                Nolabel
                                  expression (typing/tast_iterator.ml[370,14016+34]..[370,14016+37])
                                    Pexp_ident "sub" (typing/tast_iterator.ml[370,14016+34]..[370,14016+37])
                              ]
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[370,14016+39]..[370,14016+43])
                              Pexp_ident "clty" (typing/tast_iterator.ml[370,14016+39]..[370,14016+43])
                        ]
                  <case>
                    pattern (typing/tast_iterator.ml[371,14060+4]..[371,14060+23])
                      Ppat_construct "Tcl_structure" (typing/tast_iterator.ml[371,14060+4]..[371,14060+17])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[371,14060+18]..[371,14060+23])
                          Ppat_var "clstr" (typing/tast_iterator.ml[371,14060+18]..[371,14060+23])
                    expression (typing/tast_iterator.ml[371,14060+27]..[371,14060+56])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[371,14060+27]..[371,14060+46])
                        Pexp_field
                        expression (typing/tast_iterator.ml[371,14060+27]..[371,14060+30])
                          Pexp_ident "sub" (typing/tast_iterator.ml[371,14060+27]..[371,14060+30])
                        "class_structure" (typing/tast_iterator.ml[371,14060+31]..[371,14060+46])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[371,14060+47]..[371,14060+50])
                            Pexp_ident "sub" (typing/tast_iterator.ml[371,14060+47]..[371,14060+50])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[371,14060+51]..[371,14060+56])
                            Pexp_ident "clstr" (typing/tast_iterator.ml[371,14060+51]..[371,14060+56])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[372,14117+4]..[372,14117+33])
                      Ppat_construct "Tcl_fun" (typing/tast_iterator.ml[372,14117+4]..[372,14117+11])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[372,14117+12]..[372,14117+33])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[372,14117+13]..[372,14117+14])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[372,14117+16]..[372,14117+19])
                              Ppat_var "pat" (typing/tast_iterator.ml[372,14117+16]..[372,14117+19])
                            pattern (typing/tast_iterator.ml[372,14117+21]..[372,14117+25])
                              Ppat_var "priv" (typing/tast_iterator.ml[372,14117+21]..[372,14117+25])
                            pattern (typing/tast_iterator.ml[372,14117+27]..[372,14117+29])
                              Ppat_var "cl" (typing/tast_iterator.ml[372,14117+27]..[372,14117+29])
                            pattern (typing/tast_iterator.ml[372,14117+31]..[372,14117+32])
                              Ppat_any
                          ]
                    expression (typing/tast_iterator.ml[373,14154+6]..[375,14230+27])
                      Pexp_sequence
                      expression (typing/tast_iterator.ml[373,14154+6]..[373,14154+21])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[373,14154+6]..[373,14154+13])
                          Pexp_field
                          expression (typing/tast_iterator.ml[373,14154+6]..[373,14154+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[373,14154+6]..[373,14154+9])
                          "pat" (typing/tast_iterator.ml[373,14154+10]..[373,14154+13])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[373,14154+14]..[373,14154+17])
                              Pexp_ident "sub" (typing/tast_iterator.ml[373,14154+14]..[373,14154+17])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[373,14154+18]..[373,14154+21])
                              Pexp_ident "pat" (typing/tast_iterator.ml[373,14154+18]..[373,14154+21])
                        ]
                      expression (typing/tast_iterator.ml[374,14177+6]..[375,14230+27])
                        Pexp_sequence
                        expression (typing/tast_iterator.ml[374,14177+6]..[374,14177+51])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[374,14177+6]..[374,14177+15])
                            Pexp_ident "List.iter" (typing/tast_iterator.ml[374,14177+6]..[374,14177+15])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[374,14177+16]..[374,14177+46])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/tast_iterator.ml[374,14177+21]..[374,14177+27])
                                  Ppat_tuple
                                  [
                                    pattern (typing/tast_iterator.ml[374,14177+22]..[374,14177+23])
                                      Ppat_any
                                    pattern (typing/tast_iterator.ml[374,14177+25]..[374,14177+26])
                                      Ppat_var "e" (typing/tast_iterator.ml[374,14177+25]..[374,14177+26])
                                  ]
                                expression (typing/tast_iterator.ml[374,14177+31]..[374,14177+45])
                                  Pexp_apply
                                  expression (typing/tast_iterator.ml[374,14177+31]..[374,14177+39])
                                    Pexp_field
                                    expression (typing/tast_iterator.ml[374,14177+31]..[374,14177+34])
                                      Pexp_ident "sub" (typing/tast_iterator.ml[374,14177+31]..[374,14177+34])
                                    "expr" (typing/tast_iterator.ml[374,14177+35]..[374,14177+39])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/tast_iterator.ml[374,14177+40]..[374,14177+43])
                                        Pexp_ident "sub" (typing/tast_iterator.ml[374,14177+40]..[374,14177+43])
                                    <arg>
                                    Nolabel
                                      expression (typing/tast_iterator.ml[374,14177+44]..[374,14177+45])
                                        Pexp_ident "e" (typing/tast_iterator.ml[374,14177+44]..[374,14177+45])
                                  ]
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[374,14177+47]..[374,14177+51])
                                Pexp_ident "priv" (typing/tast_iterator.ml[374,14177+47]..[374,14177+51])
                          ]
                        expression (typing/tast_iterator.ml[375,14230+6]..[375,14230+27])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[375,14230+6]..[375,14230+20])
                            Pexp_field
                            expression (typing/tast_iterator.ml[375,14230+6]..[375,14230+9])
                              Pexp_ident "sub" (typing/tast_iterator.ml[375,14230+6]..[375,14230+9])
                            "class_expr" (typing/tast_iterator.ml[375,14230+10]..[375,14230+20])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[375,14230+21]..[375,14230+24])
                                Pexp_ident "sub" (typing/tast_iterator.ml[375,14230+21]..[375,14230+24])
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[375,14230+25]..[375,14230+27])
                                Pexp_ident "cl" (typing/tast_iterator.ml[375,14230+25]..[375,14230+27])
                          ]
                  <case>
                    pattern (typing/tast_iterator.ml[376,14258+4]..[376,14258+24])
                      Ppat_construct "Tcl_apply" (typing/tast_iterator.ml[376,14258+4]..[376,14258+13])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[376,14258+14]..[376,14258+24])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[376,14258+15]..[376,14258+17])
                              Ppat_var "cl" (typing/tast_iterator.ml[376,14258+15]..[376,14258+17])
                            pattern (typing/tast_iterator.ml[376,14258+19]..[376,14258+23])
                              Ppat_var "args" (typing/tast_iterator.ml[376,14258+19]..[376,14258+23])
                          ]
                    expression (typing/tast_iterator.ml[377,14286+6]..[378,14315+65])
                      Pexp_sequence
                      expression (typing/tast_iterator.ml[377,14286+6]..[377,14286+27])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[377,14286+6]..[377,14286+20])
                          Pexp_field
                          expression (typing/tast_iterator.ml[377,14286+6]..[377,14286+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[377,14286+6]..[377,14286+9])
                          "class_expr" (typing/tast_iterator.ml[377,14286+10]..[377,14286+20])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[377,14286+21]..[377,14286+24])
                              Pexp_ident "sub" (typing/tast_iterator.ml[377,14286+21]..[377,14286+24])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[377,14286+25]..[377,14286+27])
                              Pexp_ident "cl" (typing/tast_iterator.ml[377,14286+25]..[377,14286+27])
                        ]
                      expression (typing/tast_iterator.ml[378,14315+6]..[378,14315+65])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[378,14315+6]..[378,14315+15])
                          Pexp_ident "List.iter" (typing/tast_iterator.ml[378,14315+6]..[378,14315+15])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[378,14315+16]..[378,14315+60])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (typing/tast_iterator.ml[378,14315+21]..[378,14315+27])
                                Ppat_tuple
                                [
                                  pattern (typing/tast_iterator.ml[378,14315+22]..[378,14315+23])
                                    Ppat_any
                                  pattern (typing/tast_iterator.ml[378,14315+25]..[378,14315+26])
                                    Ppat_var "e" (typing/tast_iterator.ml[378,14315+25]..[378,14315+26])
                                ]
                              expression (typing/tast_iterator.ml[378,14315+31]..[378,14315+59])
                                Pexp_apply
                                expression (typing/tast_iterator.ml[378,14315+31]..[378,14315+42])
                                  Pexp_ident "Option.iter" (typing/tast_iterator.ml[378,14315+31]..[378,14315+42])
                                [
                                  <arg>
                                  Nolabel
                                    expression (typing/tast_iterator.ml[378,14315+43]..[378,14315+57])
                                      Pexp_apply
                                      expression (typing/tast_iterator.ml[378,14315+44]..[378,14315+52])
                                        Pexp_field
                                        expression (typing/tast_iterator.ml[378,14315+44]..[378,14315+47])
                                          Pexp_ident "sub" (typing/tast_iterator.ml[378,14315+44]..[378,14315+47])
                                        "expr" (typing/tast_iterator.ml[378,14315+48]..[378,14315+52])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (typing/tast_iterator.ml[378,14315+53]..[378,14315+56])
                                            Pexp_ident "sub" (typing/tast_iterator.ml[378,14315+53]..[378,14315+56])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (typing/tast_iterator.ml[378,14315+58]..[378,14315+59])
                                      Pexp_ident "e" (typing/tast_iterator.ml[378,14315+58]..[378,14315+59])
                                ]
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[378,14315+61]..[378,14315+65])
                              Pexp_ident "args" (typing/tast_iterator.ml[378,14315+61]..[378,14315+65])
                        ]
                  <case>
                    pattern (typing/tast_iterator.ml[379,14381+4]..[379,14381+49])
                      Ppat_construct "Tcl_let" (typing/tast_iterator.ml[379,14381+4]..[379,14381+11])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[379,14381+12]..[379,14381+49])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[379,14381+13]..[379,14381+21])
                              Ppat_var "rec_flag" (typing/tast_iterator.ml[379,14381+13]..[379,14381+21])
                            pattern (typing/tast_iterator.ml[379,14381+23]..[379,14381+37])
                              Ppat_var "value_bindings" (typing/tast_iterator.ml[379,14381+23]..[379,14381+37])
                            pattern (typing/tast_iterator.ml[379,14381+39]..[379,14381+44])
                              Ppat_var "ivars" (typing/tast_iterator.ml[379,14381+39]..[379,14381+44])
                            pattern (typing/tast_iterator.ml[379,14381+46]..[379,14381+48])
                              Ppat_var "cl" (typing/tast_iterator.ml[379,14381+46]..[379,14381+48])
                          ]
                    expression (typing/tast_iterator.ml[380,14434+6]..[382,14545+27])
                      Pexp_sequence
                      expression (typing/tast_iterator.ml[380,14434+6]..[380,14434+55])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[380,14434+6]..[380,14434+24])
                          Pexp_field
                          expression (typing/tast_iterator.ml[380,14434+6]..[380,14434+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[380,14434+6]..[380,14434+9])
                          "value_bindings" (typing/tast_iterator.ml[380,14434+10]..[380,14434+24])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[380,14434+25]..[380,14434+28])
                              Pexp_ident "sub" (typing/tast_iterator.ml[380,14434+25]..[380,14434+28])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[380,14434+29]..[380,14434+55])
                              Pexp_tuple
                              [
                                expression (typing/tast_iterator.ml[380,14434+30]..[380,14434+38])
                                  Pexp_ident "rec_flag" (typing/tast_iterator.ml[380,14434+30]..[380,14434+38])
                                expression (typing/tast_iterator.ml[380,14434+40]..[380,14434+54])
                                  Pexp_ident "value_bindings" (typing/tast_iterator.ml[380,14434+40]..[380,14434+54])
                              ]
                        ]
                      expression (typing/tast_iterator.ml[381,14491+6]..[382,14545+27])
                        Pexp_sequence
                        expression (typing/tast_iterator.ml[381,14491+6]..[381,14491+52])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[381,14491+6]..[381,14491+15])
                            Pexp_ident "List.iter" (typing/tast_iterator.ml[381,14491+6]..[381,14491+15])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[381,14491+16]..[381,14491+46])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (typing/tast_iterator.ml[381,14491+21]..[381,14491+27])
                                  Ppat_tuple
                                  [
                                    pattern (typing/tast_iterator.ml[381,14491+22]..[381,14491+23])
                                      Ppat_any
                                    pattern (typing/tast_iterator.ml[381,14491+25]..[381,14491+26])
                                      Ppat_var "e" (typing/tast_iterator.ml[381,14491+25]..[381,14491+26])
                                  ]
                                expression (typing/tast_iterator.ml[381,14491+31]..[381,14491+45])
                                  Pexp_apply
                                  expression (typing/tast_iterator.ml[381,14491+31]..[381,14491+39])
                                    Pexp_field
                                    expression (typing/tast_iterator.ml[381,14491+31]..[381,14491+34])
                                      Pexp_ident "sub" (typing/tast_iterator.ml[381,14491+31]..[381,14491+34])
                                    "expr" (typing/tast_iterator.ml[381,14491+35]..[381,14491+39])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (typing/tast_iterator.ml[381,14491+40]..[381,14491+43])
                                        Pexp_ident "sub" (typing/tast_iterator.ml[381,14491+40]..[381,14491+43])
                                    <arg>
                                    Nolabel
                                      expression (typing/tast_iterator.ml[381,14491+44]..[381,14491+45])
                                        Pexp_ident "e" (typing/tast_iterator.ml[381,14491+44]..[381,14491+45])
                                  ]
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[381,14491+47]..[381,14491+52])
                                Pexp_ident "ivars" (typing/tast_iterator.ml[381,14491+47]..[381,14491+52])
                          ]
                        expression (typing/tast_iterator.ml[382,14545+6]..[382,14545+27])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[382,14545+6]..[382,14545+20])
                            Pexp_field
                            expression (typing/tast_iterator.ml[382,14545+6]..[382,14545+9])
                              Pexp_ident "sub" (typing/tast_iterator.ml[382,14545+6]..[382,14545+9])
                            "class_expr" (typing/tast_iterator.ml[382,14545+10]..[382,14545+20])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[382,14545+21]..[382,14545+24])
                                Pexp_ident "sub" (typing/tast_iterator.ml[382,14545+21]..[382,14545+24])
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[382,14545+25]..[382,14545+27])
                                Pexp_ident "cl" (typing/tast_iterator.ml[382,14545+25]..[382,14545+27])
                          ]
                  <case>
                    pattern (typing/tast_iterator.ml[383,14573+4]..[383,14573+25])
                      Ppat_construct "Tcl_ident" (typing/tast_iterator.ml[383,14573+4]..[383,14573+13])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[383,14573+14]..[383,14573+25])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[383,14573+15]..[383,14573+16])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[383,14573+18]..[383,14573+19])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[383,14573+21]..[383,14573+24])
                              Ppat_var "tyl" (typing/tast_iterator.ml[383,14573+21]..[383,14573+24])
                          ]
                    expression (typing/tast_iterator.ml[383,14573+29]..[383,14573+56])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[383,14573+29]..[383,14573+38])
                        Pexp_ident "List.iter" (typing/tast_iterator.ml[383,14573+29]..[383,14573+38])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[383,14573+39]..[383,14573+52])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[383,14573+40]..[383,14573+47])
                              Pexp_field
                              expression (typing/tast_iterator.ml[383,14573+40]..[383,14573+43])
                                Pexp_ident "sub" (typing/tast_iterator.ml[383,14573+40]..[383,14573+43])
                              "typ" (typing/tast_iterator.ml[383,14573+44]..[383,14573+47])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[383,14573+48]..[383,14573+51])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[383,14573+48]..[383,14573+51])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[383,14573+53]..[383,14573+56])
                            Pexp_ident "tyl" (typing/tast_iterator.ml[383,14573+53]..[383,14573+56])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[384,14630+4]..[384,14630+20])
                      Ppat_construct "Tcl_open" (typing/tast_iterator.ml[384,14630+4]..[384,14630+12])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[384,14630+13]..[384,14630+20])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[384,14630+14]..[384,14630+16])
                              Ppat_var "od" (typing/tast_iterator.ml[384,14630+14]..[384,14630+16])
                            pattern (typing/tast_iterator.ml[384,14630+18]..[384,14630+19])
                              Ppat_var "e" (typing/tast_iterator.ml[384,14630+18]..[384,14630+19])
                          ]
                    expression (typing/tast_iterator.ml[385,14654+6]..[386,14689+26])
                      Pexp_sequence
                      expression (typing/tast_iterator.ml[385,14654+6]..[385,14654+33])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[385,14654+6]..[385,14654+26])
                          Pexp_field
                          expression (typing/tast_iterator.ml[385,14654+6]..[385,14654+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[385,14654+6]..[385,14654+9])
                          "open_description" (typing/tast_iterator.ml[385,14654+10]..[385,14654+26])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[385,14654+27]..[385,14654+30])
                              Pexp_ident "sub" (typing/tast_iterator.ml[385,14654+27]..[385,14654+30])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[385,14654+31]..[385,14654+33])
                              Pexp_ident "od" (typing/tast_iterator.ml[385,14654+31]..[385,14654+33])
                        ]
                      expression (typing/tast_iterator.ml[386,14689+6]..[386,14689+26])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[386,14689+6]..[386,14689+20])
                          Pexp_field
                          expression (typing/tast_iterator.ml[386,14689+6]..[386,14689+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[386,14689+6]..[386,14689+9])
                          "class_expr" (typing/tast_iterator.ml[386,14689+10]..[386,14689+20])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[386,14689+21]..[386,14689+24])
                              Pexp_ident "sub" (typing/tast_iterator.ml[386,14689+21]..[386,14689+24])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[386,14689+25]..[386,14689+26])
                              Pexp_ident "e" (typing/tast_iterator.ml[386,14689+25]..[386,14689+26])
                        ]
                ]
    ]
  structure_item (typing/tast_iterator.ml[388,14717+0]..[398,15069+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[388,14717+4]..[388,14717+14])
          Ppat_var "class_type" (typing/tast_iterator.ml[388,14717+4]..[388,14717+14])
        expression (typing/tast_iterator.ml[388,14717+15]..[398,15069+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[388,14717+15]..[388,14717+18])
            Ppat_var "sub" (typing/tast_iterator.ml[388,14717+15]..[388,14717+18])
          expression (typing/tast_iterator.ml[388,14717+19]..[398,15069+26]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[388,14717+19]..[388,14717+45])
              Ppat_record Open
              [
                "cltyp_desc" (typing/tast_iterator.ml[388,14717+20]..[388,14717+30]) ghost
                  pattern (typing/tast_iterator.ml[388,14717+20]..[388,14717+30])
                    Ppat_var "cltyp_desc" (typing/tast_iterator.ml[388,14717+20]..[388,14717+30])
                "cltyp_env" (typing/tast_iterator.ml[388,14717+32]..[388,14717+41]) ghost
                  pattern (typing/tast_iterator.ml[388,14717+32]..[388,14717+41])
                    Ppat_var "cltyp_env" (typing/tast_iterator.ml[388,14717+32]..[388,14717+41])
              ]
            expression (typing/tast_iterator.ml[389,14765+2]..[398,15069+26])
              Pexp_sequence
              expression (typing/tast_iterator.ml[389,14765+2]..[389,14765+23])
                Pexp_apply
                expression (typing/tast_iterator.ml[389,14765+2]..[389,14765+9])
                  Pexp_field
                  expression (typing/tast_iterator.ml[389,14765+2]..[389,14765+5])
                    Pexp_ident "sub" (typing/tast_iterator.ml[389,14765+2]..[389,14765+5])
                  "env" (typing/tast_iterator.ml[389,14765+6]..[389,14765+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[389,14765+10]..[389,14765+13])
                      Pexp_ident "sub" (typing/tast_iterator.ml[389,14765+10]..[389,14765+13])
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[389,14765+14]..[389,14765+23])
                      Pexp_ident "cltyp_env" (typing/tast_iterator.ml[389,14765+14]..[389,14765+23])
                ]
              expression (typing/tast_iterator.ml[390,14790+2]..[398,15069+26])
                Pexp_match
                expression (typing/tast_iterator.ml[390,14790+8]..[390,14790+18])
                  Pexp_ident "cltyp_desc" (typing/tast_iterator.ml[390,14790+8]..[390,14790+18])
                [
                  <case>
                    pattern (typing/tast_iterator.ml[391,14814+4]..[391,14814+22])
                      Ppat_construct "Tcty_signature" (typing/tast_iterator.ml[391,14814+4]..[391,14814+18])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[391,14814+19]..[391,14814+22])
                          Ppat_var "csg" (typing/tast_iterator.ml[391,14814+19]..[391,14814+22])
                    expression (typing/tast_iterator.ml[391,14814+26]..[391,14814+53])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[391,14814+26]..[391,14814+45])
                        Pexp_field
                        expression (typing/tast_iterator.ml[391,14814+26]..[391,14814+29])
                          Pexp_ident "sub" (typing/tast_iterator.ml[391,14814+26]..[391,14814+29])
                        "class_signature" (typing/tast_iterator.ml[391,14814+30]..[391,14814+45])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[391,14814+46]..[391,14814+49])
                            Pexp_ident "sub" (typing/tast_iterator.ml[391,14814+46]..[391,14814+49])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[391,14814+50]..[391,14814+53])
                            Pexp_ident "csg" (typing/tast_iterator.ml[391,14814+50]..[391,14814+53])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[392,14868+4]..[392,14868+28])
                      Ppat_construct "Tcty_constr" (typing/tast_iterator.ml[392,14868+4]..[392,14868+15])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[392,14868+16]..[392,14868+28])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[392,14868+17]..[392,14868+18])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[392,14868+20]..[392,14868+21])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[392,14868+23]..[392,14868+27])
                              Ppat_var "list" (typing/tast_iterator.ml[392,14868+23]..[392,14868+27])
                          ]
                    expression (typing/tast_iterator.ml[392,14868+32]..[392,14868+60])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[392,14868+32]..[392,14868+41])
                        Pexp_ident "List.iter" (typing/tast_iterator.ml[392,14868+32]..[392,14868+41])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[392,14868+42]..[392,14868+55])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[392,14868+43]..[392,14868+50])
                              Pexp_field
                              expression (typing/tast_iterator.ml[392,14868+43]..[392,14868+46])
                                Pexp_ident "sub" (typing/tast_iterator.ml[392,14868+43]..[392,14868+46])
                              "typ" (typing/tast_iterator.ml[392,14868+47]..[392,14868+50])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[392,14868+51]..[392,14868+54])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[392,14868+51]..[392,14868+54])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[392,14868+56]..[392,14868+60])
                            Pexp_ident "list" (typing/tast_iterator.ml[392,14868+56]..[392,14868+60])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[393,14929+4]..[393,14929+26])
                      Ppat_construct "Tcty_arrow" (typing/tast_iterator.ml[393,14929+4]..[393,14929+14])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[393,14929+15]..[393,14929+26])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[393,14929+16]..[393,14929+17])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[393,14929+19]..[393,14929+21])
                              Ppat_var "ct" (typing/tast_iterator.ml[393,14929+19]..[393,14929+21])
                            pattern (typing/tast_iterator.ml[393,14929+23]..[393,14929+25])
                              Ppat_var "cl" (typing/tast_iterator.ml[393,14929+23]..[393,14929+25])
                          ]
                    expression (typing/tast_iterator.ml[394,14959+6]..[395,14981+27])
                      Pexp_sequence
                      expression (typing/tast_iterator.ml[394,14959+6]..[394,14959+20])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[394,14959+6]..[394,14959+13])
                          Pexp_field
                          expression (typing/tast_iterator.ml[394,14959+6]..[394,14959+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[394,14959+6]..[394,14959+9])
                          "typ" (typing/tast_iterator.ml[394,14959+10]..[394,14959+13])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[394,14959+14]..[394,14959+17])
                              Pexp_ident "sub" (typing/tast_iterator.ml[394,14959+14]..[394,14959+17])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[394,14959+18]..[394,14959+20])
                              Pexp_ident "ct" (typing/tast_iterator.ml[394,14959+18]..[394,14959+20])
                        ]
                      expression (typing/tast_iterator.ml[395,14981+6]..[395,14981+27])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[395,14981+6]..[395,14981+20])
                          Pexp_field
                          expression (typing/tast_iterator.ml[395,14981+6]..[395,14981+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[395,14981+6]..[395,14981+9])
                          "class_type" (typing/tast_iterator.ml[395,14981+10]..[395,14981+20])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[395,14981+21]..[395,14981+24])
                              Pexp_ident "sub" (typing/tast_iterator.ml[395,14981+21]..[395,14981+24])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[395,14981+25]..[395,14981+27])
                              Pexp_ident "cl" (typing/tast_iterator.ml[395,14981+25]..[395,14981+27])
                        ]
                  <case>
                    pattern (typing/tast_iterator.ml[396,15009+4]..[396,15009+21])
                      Ppat_construct "Tcty_open" (typing/tast_iterator.ml[396,15009+4]..[396,15009+13])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[396,15009+14]..[396,15009+21])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[396,15009+15]..[396,15009+17])
                              Ppat_var "od" (typing/tast_iterator.ml[396,15009+15]..[396,15009+17])
                            pattern (typing/tast_iterator.ml[396,15009+19]..[396,15009+20])
                              Ppat_var "e" (typing/tast_iterator.ml[396,15009+19]..[396,15009+20])
                          ]
                    expression (typing/tast_iterator.ml[397,15034+6]..[398,15069+26])
                      Pexp_sequence
                      expression (typing/tast_iterator.ml[397,15034+6]..[397,15034+33])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[397,15034+6]..[397,15034+26])
                          Pexp_field
                          expression (typing/tast_iterator.ml[397,15034+6]..[397,15034+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[397,15034+6]..[397,15034+9])
                          "open_description" (typing/tast_iterator.ml[397,15034+10]..[397,15034+26])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[397,15034+27]..[397,15034+30])
                              Pexp_ident "sub" (typing/tast_iterator.ml[397,15034+27]..[397,15034+30])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[397,15034+31]..[397,15034+33])
                              Pexp_ident "od" (typing/tast_iterator.ml[397,15034+31]..[397,15034+33])
                        ]
                      expression (typing/tast_iterator.ml[398,15069+6]..[398,15069+26])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[398,15069+6]..[398,15069+20])
                          Pexp_field
                          expression (typing/tast_iterator.ml[398,15069+6]..[398,15069+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[398,15069+6]..[398,15069+9])
                          "class_type" (typing/tast_iterator.ml[398,15069+10]..[398,15069+20])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[398,15069+21]..[398,15069+24])
                              Pexp_ident "sub" (typing/tast_iterator.ml[398,15069+21]..[398,15069+24])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[398,15069+25]..[398,15069+26])
                              Pexp_ident "e" (typing/tast_iterator.ml[398,15069+25]..[398,15069+26])
                        ]
                ]
    ]
  structure_item (typing/tast_iterator.ml[400,15097+0]..[402,15176+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[400,15097+4]..[400,15097+19])
          Ppat_var "class_signature" (typing/tast_iterator.ml[400,15097+4]..[400,15097+19])
        expression (typing/tast_iterator.ml[400,15097+20]..[402,15176+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[400,15097+20]..[400,15097+23])
            Ppat_var "sub" (typing/tast_iterator.ml[400,15097+20]..[400,15097+23])
          expression (typing/tast_iterator.ml[400,15097+24]..[402,15176+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[400,15097+24]..[400,15097+51])
              Ppat_record Open
              [
                "csig_self" (typing/tast_iterator.ml[400,15097+25]..[400,15097+34]) ghost
                  pattern (typing/tast_iterator.ml[400,15097+25]..[400,15097+34])
                    Ppat_var "csig_self" (typing/tast_iterator.ml[400,15097+25]..[400,15097+34])
                "csig_fields" (typing/tast_iterator.ml[400,15097+36]..[400,15097+47]) ghost
                  pattern (typing/tast_iterator.ml[400,15097+36]..[400,15097+47])
                    Ppat_var "csig_fields" (typing/tast_iterator.ml[400,15097+36]..[400,15097+47])
              ]
            expression (typing/tast_iterator.ml[401,15151+2]..[402,15176+50])
              Pexp_sequence
              expression (typing/tast_iterator.ml[401,15151+2]..[401,15151+23])
                Pexp_apply
                expression (typing/tast_iterator.ml[401,15151+2]..[401,15151+9])
                  Pexp_field
                  expression (typing/tast_iterator.ml[401,15151+2]..[401,15151+5])
                    Pexp_ident "sub" (typing/tast_iterator.ml[401,15151+2]..[401,15151+5])
                  "typ" (typing/tast_iterator.ml[401,15151+6]..[401,15151+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[401,15151+10]..[401,15151+13])
                      Pexp_ident "sub" (typing/tast_iterator.ml[401,15151+10]..[401,15151+13])
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[401,15151+14]..[401,15151+23])
                      Pexp_ident "csig_self" (typing/tast_iterator.ml[401,15151+14]..[401,15151+23])
                ]
              expression (typing/tast_iterator.ml[402,15176+2]..[402,15176+50])
                Pexp_apply
                expression (typing/tast_iterator.ml[402,15176+2]..[402,15176+11])
                  Pexp_ident "List.iter" (typing/tast_iterator.ml[402,15176+2]..[402,15176+11])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[402,15176+12]..[402,15176+38])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[402,15176+13]..[402,15176+33])
                        Pexp_field
                        expression (typing/tast_iterator.ml[402,15176+13]..[402,15176+16])
                          Pexp_ident "sub" (typing/tast_iterator.ml[402,15176+13]..[402,15176+16])
                        "class_type_field" (typing/tast_iterator.ml[402,15176+17]..[402,15176+33])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[402,15176+34]..[402,15176+37])
                            Pexp_ident "sub" (typing/tast_iterator.ml[402,15176+34]..[402,15176+37])
                      ]
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[402,15176+39]..[402,15176+50])
                      Pexp_ident "csig_fields" (typing/tast_iterator.ml[402,15176+39]..[402,15176+50])
                ]
    ]
  structure_item (typing/tast_iterator.ml[404,15228+0]..[412,15510+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[404,15228+4]..[404,15228+20])
          Ppat_var "class_type_field" (typing/tast_iterator.ml[404,15228+4]..[404,15228+20])
        expression (typing/tast_iterator.ml[404,15228+21]..[412,15510+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[404,15228+21]..[404,15228+24])
            Ppat_var "sub" (typing/tast_iterator.ml[404,15228+21]..[404,15228+24])
          expression (typing/tast_iterator.ml[404,15228+25]..[412,15510+26]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[404,15228+25]..[404,15228+38])
              Ppat_record Open
              [
                "ctf_desc" (typing/tast_iterator.ml[404,15228+26]..[404,15228+34]) ghost
                  pattern (typing/tast_iterator.ml[404,15228+26]..[404,15228+34])
                    Ppat_var "ctf_desc" (typing/tast_iterator.ml[404,15228+26]..[404,15228+34])
              ]
            expression (typing/tast_iterator.ml[405,15269+2]..[412,15510+26])
              Pexp_match
              expression (typing/tast_iterator.ml[405,15269+8]..[405,15269+16])
                Pexp_ident "ctf_desc" (typing/tast_iterator.ml[405,15269+8]..[405,15269+16])
              [
                <case>
                  pattern (typing/tast_iterator.ml[406,15291+4]..[406,15291+19])
                    Ppat_construct "Tctf_inherit" (typing/tast_iterator.ml[406,15291+4]..[406,15291+16])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[406,15291+17]..[406,15291+19])
                        Ppat_var "ct" (typing/tast_iterator.ml[406,15291+17]..[406,15291+19])
                  expression (typing/tast_iterator.ml[406,15291+23]..[406,15291+44])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[406,15291+23]..[406,15291+37])
                      Pexp_field
                      expression (typing/tast_iterator.ml[406,15291+23]..[406,15291+26])
                        Pexp_ident "sub" (typing/tast_iterator.ml[406,15291+23]..[406,15291+26])
                      "class_type" (typing/tast_iterator.ml[406,15291+27]..[406,15291+37])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[406,15291+38]..[406,15291+41])
                          Pexp_ident "sub" (typing/tast_iterator.ml[406,15291+38]..[406,15291+41])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[406,15291+42]..[406,15291+44])
                          Pexp_ident "ct" (typing/tast_iterator.ml[406,15291+42]..[406,15291+44])
                    ]
                <case>
                  pattern (typing/tast_iterator.ml[407,15336+4]..[407,15336+26])
                    Ppat_construct "Tctf_val" (typing/tast_iterator.ml[407,15336+4]..[407,15336+12])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[407,15336+13]..[407,15336+26])
                        Ppat_tuple
                        [
                          pattern (typing/tast_iterator.ml[407,15336+14]..[407,15336+15])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[407,15336+17]..[407,15336+18])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[407,15336+20]..[407,15336+21])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[407,15336+23]..[407,15336+25])
                            Ppat_var "ct" (typing/tast_iterator.ml[407,15336+23]..[407,15336+25])
                        ]
                  expression (typing/tast_iterator.ml[407,15336+31]..[407,15336+45])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[407,15336+31]..[407,15336+38])
                      Pexp_field
                      expression (typing/tast_iterator.ml[407,15336+31]..[407,15336+34])
                        Pexp_ident "sub" (typing/tast_iterator.ml[407,15336+31]..[407,15336+34])
                      "typ" (typing/tast_iterator.ml[407,15336+35]..[407,15336+38])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[407,15336+39]..[407,15336+42])
                          Pexp_ident "sub" (typing/tast_iterator.ml[407,15336+39]..[407,15336+42])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[407,15336+43]..[407,15336+45])
                          Pexp_ident "ct" (typing/tast_iterator.ml[407,15336+43]..[407,15336+45])
                    ]
                <case>
                  pattern (typing/tast_iterator.ml[408,15382+4]..[408,15382+29])
                    Ppat_construct "Tctf_method" (typing/tast_iterator.ml[408,15382+4]..[408,15382+15])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[408,15382+16]..[408,15382+29])
                        Ppat_tuple
                        [
                          pattern (typing/tast_iterator.ml[408,15382+17]..[408,15382+18])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[408,15382+20]..[408,15382+21])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[408,15382+23]..[408,15382+24])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[408,15382+26]..[408,15382+28])
                            Ppat_var "ct" (typing/tast_iterator.ml[408,15382+26]..[408,15382+28])
                        ]
                  expression (typing/tast_iterator.ml[408,15382+33]..[408,15382+47])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[408,15382+33]..[408,15382+40])
                      Pexp_field
                      expression (typing/tast_iterator.ml[408,15382+33]..[408,15382+36])
                        Pexp_ident "sub" (typing/tast_iterator.ml[408,15382+33]..[408,15382+36])
                      "typ" (typing/tast_iterator.ml[408,15382+37]..[408,15382+40])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[408,15382+41]..[408,15382+44])
                          Pexp_ident "sub" (typing/tast_iterator.ml[408,15382+41]..[408,15382+44])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[408,15382+45]..[408,15382+47])
                          Pexp_ident "ct" (typing/tast_iterator.ml[408,15382+45]..[408,15382+47])
                    ]
                <case>
                  pattern (typing/tast_iterator.ml[409,15430+4]..[409,15430+31])
                    Ppat_construct "Tctf_constraint" (typing/tast_iterator.ml[409,15430+4]..[409,15430+19])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[409,15430+21]..[409,15430+31])
                        Ppat_tuple
                        [
                          pattern (typing/tast_iterator.ml[409,15430+22]..[409,15430+25])
                            Ppat_var "ct1" (typing/tast_iterator.ml[409,15430+22]..[409,15430+25])
                          pattern (typing/tast_iterator.ml[409,15430+27]..[409,15430+30])
                            Ppat_var "ct2" (typing/tast_iterator.ml[409,15430+27]..[409,15430+30])
                        ]
                  expression (typing/tast_iterator.ml[410,15465+6]..[411,15488+21])
                    Pexp_sequence
                    expression (typing/tast_iterator.ml[410,15465+6]..[410,15465+21])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[410,15465+6]..[410,15465+13])
                        Pexp_field
                        expression (typing/tast_iterator.ml[410,15465+6]..[410,15465+9])
                          Pexp_ident "sub" (typing/tast_iterator.ml[410,15465+6]..[410,15465+9])
                        "typ" (typing/tast_iterator.ml[410,15465+10]..[410,15465+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[410,15465+14]..[410,15465+17])
                            Pexp_ident "sub" (typing/tast_iterator.ml[410,15465+14]..[410,15465+17])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[410,15465+18]..[410,15465+21])
                            Pexp_ident "ct1" (typing/tast_iterator.ml[410,15465+18]..[410,15465+21])
                      ]
                    expression (typing/tast_iterator.ml[411,15488+6]..[411,15488+21])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[411,15488+6]..[411,15488+13])
                        Pexp_field
                        expression (typing/tast_iterator.ml[411,15488+6]..[411,15488+9])
                          Pexp_ident "sub" (typing/tast_iterator.ml[411,15488+6]..[411,15488+9])
                        "typ" (typing/tast_iterator.ml[411,15488+10]..[411,15488+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[411,15488+14]..[411,15488+17])
                            Pexp_ident "sub" (typing/tast_iterator.ml[411,15488+14]..[411,15488+17])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[411,15488+18]..[411,15488+21])
                            Pexp_ident "ct2" (typing/tast_iterator.ml[411,15488+18]..[411,15488+21])
                      ]
                <case>
                  pattern (typing/tast_iterator.ml[412,15510+4]..[412,15510+20])
                    Ppat_construct "Tctf_attribute" (typing/tast_iterator.ml[412,15510+4]..[412,15510+18])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[412,15510+19]..[412,15510+20])
                        Ppat_any
                  expression (typing/tast_iterator.ml[412,15510+24]..[412,15510+26])
                    Pexp_construct "()" (typing/tast_iterator.ml[412,15510+24]..[412,15510+26])
                    None
              ]
    ]
  structure_item (typing/tast_iterator.ml[414,15538+0]..[429,16133+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[414,15538+4]..[414,15538+7])
          Ppat_var "typ" (typing/tast_iterator.ml[414,15538+4]..[414,15538+7])
        expression (typing/tast_iterator.ml[414,15538+8]..[429,16133+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[414,15538+8]..[414,15538+11])
            Ppat_var "sub" (typing/tast_iterator.ml[414,15538+8]..[414,15538+11])
          expression (typing/tast_iterator.ml[414,15538+12]..[429,16133+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[414,15538+12]..[414,15538+36])
              Ppat_record Open
              [
                "ctyp_desc" (typing/tast_iterator.ml[414,15538+13]..[414,15538+22]) ghost
                  pattern (typing/tast_iterator.ml[414,15538+13]..[414,15538+22])
                    Ppat_var "ctyp_desc" (typing/tast_iterator.ml[414,15538+13]..[414,15538+22])
                "ctyp_env" (typing/tast_iterator.ml[414,15538+24]..[414,15538+32]) ghost
                  pattern (typing/tast_iterator.ml[414,15538+24]..[414,15538+32])
                    Ppat_var "ctyp_env" (typing/tast_iterator.ml[414,15538+24]..[414,15538+32])
              ]
            expression (typing/tast_iterator.ml[415,15577+2]..[429,16133+50])
              Pexp_sequence
              expression (typing/tast_iterator.ml[415,15577+2]..[415,15577+22])
                Pexp_apply
                expression (typing/tast_iterator.ml[415,15577+2]..[415,15577+9])
                  Pexp_field
                  expression (typing/tast_iterator.ml[415,15577+2]..[415,15577+5])
                    Pexp_ident "sub" (typing/tast_iterator.ml[415,15577+2]..[415,15577+5])
                  "env" (typing/tast_iterator.ml[415,15577+6]..[415,15577+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[415,15577+10]..[415,15577+13])
                      Pexp_ident "sub" (typing/tast_iterator.ml[415,15577+10]..[415,15577+13])
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[415,15577+14]..[415,15577+22])
                      Pexp_ident "ctyp_env" (typing/tast_iterator.ml[415,15577+14]..[415,15577+22])
                ]
              expression (typing/tast_iterator.ml[416,15601+2]..[429,16133+50])
                Pexp_match
                expression (typing/tast_iterator.ml[416,15601+8]..[416,15601+17])
                  Pexp_ident "ctyp_desc" (typing/tast_iterator.ml[416,15601+8]..[416,15601+17])
                [
                  <case>
                    pattern (typing/tast_iterator.ml[417,15624+4]..[417,15624+12])
                      Ppat_construct "Ttyp_any" (typing/tast_iterator.ml[417,15624+4]..[417,15624+12])
                      None
                    expression (typing/tast_iterator.ml[417,15624+18]..[417,15624+20])
                      Pexp_construct "()" (typing/tast_iterator.ml[417,15624+18]..[417,15624+20])
                      None
                  <case>
                    pattern (typing/tast_iterator.ml[418,15645+4]..[418,15645+14])
                      Ppat_construct "Ttyp_var" (typing/tast_iterator.ml[418,15645+4]..[418,15645+12])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[418,15645+13]..[418,15645+14])
                          Ppat_any
                    expression (typing/tast_iterator.ml[418,15645+18]..[418,15645+20])
                      Pexp_construct "()" (typing/tast_iterator.ml[418,15645+18]..[418,15645+20])
                      None
                  <case>
                    pattern (typing/tast_iterator.ml[419,15666+4]..[419,15666+28])
                      Ppat_construct "Ttyp_arrow" (typing/tast_iterator.ml[419,15666+4]..[419,15666+14])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[419,15666+15]..[419,15666+28])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[419,15666+16]..[419,15666+17])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[419,15666+19]..[419,15666+22])
                              Ppat_var "ct1" (typing/tast_iterator.ml[419,15666+19]..[419,15666+22])
                            pattern (typing/tast_iterator.ml[419,15666+24]..[419,15666+27])
                              Ppat_var "ct2" (typing/tast_iterator.ml[419,15666+24]..[419,15666+27])
                          ]
                    expression (typing/tast_iterator.ml[420,15698+6]..[421,15721+21])
                      Pexp_sequence
                      expression (typing/tast_iterator.ml[420,15698+6]..[420,15698+21])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[420,15698+6]..[420,15698+13])
                          Pexp_field
                          expression (typing/tast_iterator.ml[420,15698+6]..[420,15698+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[420,15698+6]..[420,15698+9])
                          "typ" (typing/tast_iterator.ml[420,15698+10]..[420,15698+13])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[420,15698+14]..[420,15698+17])
                              Pexp_ident "sub" (typing/tast_iterator.ml[420,15698+14]..[420,15698+17])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[420,15698+18]..[420,15698+21])
                              Pexp_ident "ct1" (typing/tast_iterator.ml[420,15698+18]..[420,15698+21])
                        ]
                      expression (typing/tast_iterator.ml[421,15721+6]..[421,15721+21])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[421,15721+6]..[421,15721+13])
                          Pexp_field
                          expression (typing/tast_iterator.ml[421,15721+6]..[421,15721+9])
                            Pexp_ident "sub" (typing/tast_iterator.ml[421,15721+6]..[421,15721+9])
                          "typ" (typing/tast_iterator.ml[421,15721+10]..[421,15721+13])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[421,15721+14]..[421,15721+17])
                              Pexp_ident "sub" (typing/tast_iterator.ml[421,15721+14]..[421,15721+17])
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[421,15721+18]..[421,15721+21])
                              Pexp_ident "ct2" (typing/tast_iterator.ml[421,15721+18]..[421,15721+21])
                        ]
                  <case>
                    pattern (typing/tast_iterator.ml[422,15743+4]..[422,15743+19])
                      Ppat_construct "Ttyp_tuple" (typing/tast_iterator.ml[422,15743+4]..[422,15743+14])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[422,15743+15]..[422,15743+19])
                          Ppat_var "list" (typing/tast_iterator.ml[422,15743+15]..[422,15743+19])
                    expression (typing/tast_iterator.ml[422,15743+23]..[422,15743+51])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[422,15743+23]..[422,15743+32])
                        Pexp_ident "List.iter" (typing/tast_iterator.ml[422,15743+23]..[422,15743+32])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[422,15743+33]..[422,15743+46])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[422,15743+34]..[422,15743+41])
                              Pexp_field
                              expression (typing/tast_iterator.ml[422,15743+34]..[422,15743+37])
                                Pexp_ident "sub" (typing/tast_iterator.ml[422,15743+34]..[422,15743+37])
                              "typ" (typing/tast_iterator.ml[422,15743+38]..[422,15743+41])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[422,15743+42]..[422,15743+45])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[422,15743+42]..[422,15743+45])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[422,15743+47]..[422,15743+51])
                            Pexp_ident "list" (typing/tast_iterator.ml[422,15743+47]..[422,15743+51])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[423,15795+4]..[423,15795+28])
                      Ppat_construct "Ttyp_constr" (typing/tast_iterator.ml[423,15795+4]..[423,15795+15])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[423,15795+16]..[423,15795+28])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[423,15795+17]..[423,15795+18])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[423,15795+20]..[423,15795+21])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[423,15795+23]..[423,15795+27])
                              Ppat_var "list" (typing/tast_iterator.ml[423,15795+23]..[423,15795+27])
                          ]
                    expression (typing/tast_iterator.ml[423,15795+33]..[423,15795+61])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[423,15795+33]..[423,15795+42])
                        Pexp_ident "List.iter" (typing/tast_iterator.ml[423,15795+33]..[423,15795+42])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[423,15795+43]..[423,15795+56])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[423,15795+44]..[423,15795+51])
                              Pexp_field
                              expression (typing/tast_iterator.ml[423,15795+44]..[423,15795+47])
                                Pexp_ident "sub" (typing/tast_iterator.ml[423,15795+44]..[423,15795+47])
                              "typ" (typing/tast_iterator.ml[423,15795+48]..[423,15795+51])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[423,15795+52]..[423,15795+55])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[423,15795+52]..[423,15795+55])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[423,15795+57]..[423,15795+61])
                            Pexp_ident "list" (typing/tast_iterator.ml[423,15795+57]..[423,15795+61])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[424,15857+4]..[424,15857+25])
                      Ppat_construct "Ttyp_object" (typing/tast_iterator.ml[424,15857+4]..[424,15857+15])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[424,15857+16]..[424,15857+25])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[424,15857+17]..[424,15857+21])
                              Ppat_var "list" (typing/tast_iterator.ml[424,15857+17]..[424,15857+21])
                            pattern (typing/tast_iterator.ml[424,15857+23]..[424,15857+24])
                              Ppat_any
                          ]
                    expression (typing/tast_iterator.ml[424,15857+29]..[424,15857+66])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[424,15857+29]..[424,15857+38])
                        Pexp_ident "List.iter" (typing/tast_iterator.ml[424,15857+29]..[424,15857+38])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[424,15857+39]..[424,15857+61])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[424,15857+40]..[424,15857+56])
                              Pexp_field
                              expression (typing/tast_iterator.ml[424,15857+40]..[424,15857+43])
                                Pexp_ident "sub" (typing/tast_iterator.ml[424,15857+40]..[424,15857+43])
                              "object_field" (typing/tast_iterator.ml[424,15857+44]..[424,15857+56])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[424,15857+57]..[424,15857+60])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[424,15857+57]..[424,15857+60])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[424,15857+62]..[424,15857+66])
                            Pexp_ident "list" (typing/tast_iterator.ml[424,15857+62]..[424,15857+66])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[425,15924+4]..[425,15924+27])
                      Ppat_construct "Ttyp_class" (typing/tast_iterator.ml[425,15924+4]..[425,15924+14])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[425,15924+15]..[425,15924+27])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[425,15924+16]..[425,15924+17])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[425,15924+19]..[425,15924+20])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[425,15924+22]..[425,15924+26])
                              Ppat_var "list" (typing/tast_iterator.ml[425,15924+22]..[425,15924+26])
                          ]
                    expression (typing/tast_iterator.ml[425,15924+31]..[425,15924+59])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[425,15924+31]..[425,15924+40])
                        Pexp_ident "List.iter" (typing/tast_iterator.ml[425,15924+31]..[425,15924+40])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[425,15924+41]..[425,15924+54])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[425,15924+42]..[425,15924+49])
                              Pexp_field
                              expression (typing/tast_iterator.ml[425,15924+42]..[425,15924+45])
                                Pexp_ident "sub" (typing/tast_iterator.ml[425,15924+42]..[425,15924+45])
                              "typ" (typing/tast_iterator.ml[425,15924+46]..[425,15924+49])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[425,15924+50]..[425,15924+53])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[425,15924+50]..[425,15924+53])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[425,15924+55]..[425,15924+59])
                            Pexp_ident "list" (typing/tast_iterator.ml[425,15924+55]..[425,15924+59])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[426,15984+4]..[426,15984+22])
                      Ppat_construct "Ttyp_alias" (typing/tast_iterator.ml[426,15984+4]..[426,15984+14])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[426,15984+15]..[426,15984+22])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[426,15984+16]..[426,15984+18])
                              Ppat_var "ct" (typing/tast_iterator.ml[426,15984+16]..[426,15984+18])
                            pattern (typing/tast_iterator.ml[426,15984+20]..[426,15984+21])
                              Ppat_any
                          ]
                    expression (typing/tast_iterator.ml[426,15984+26]..[426,15984+40])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[426,15984+26]..[426,15984+33])
                        Pexp_field
                        expression (typing/tast_iterator.ml[426,15984+26]..[426,15984+29])
                          Pexp_ident "sub" (typing/tast_iterator.ml[426,15984+26]..[426,15984+29])
                        "typ" (typing/tast_iterator.ml[426,15984+30]..[426,15984+33])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[426,15984+34]..[426,15984+37])
                            Pexp_ident "sub" (typing/tast_iterator.ml[426,15984+34]..[426,15984+37])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[426,15984+38]..[426,15984+40])
                            Pexp_ident "ct" (typing/tast_iterator.ml[426,15984+38]..[426,15984+40])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[427,16025+4]..[427,16025+29])
                      Ppat_construct "Ttyp_variant" (typing/tast_iterator.ml[427,16025+4]..[427,16025+16])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[427,16025+17]..[427,16025+29])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[427,16025+18]..[427,16025+22])
                              Ppat_var "list" (typing/tast_iterator.ml[427,16025+18]..[427,16025+22])
                            pattern (typing/tast_iterator.ml[427,16025+24]..[427,16025+25])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[427,16025+27]..[427,16025+28])
                              Ppat_any
                          ]
                    expression (typing/tast_iterator.ml[427,16025+33]..[427,16025+67])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[427,16025+33]..[427,16025+42])
                        Pexp_ident "List.iter" (typing/tast_iterator.ml[427,16025+33]..[427,16025+42])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[427,16025+43]..[427,16025+62])
                            Pexp_apply
                            expression (typing/tast_iterator.ml[427,16025+44]..[427,16025+57])
                              Pexp_field
                              expression (typing/tast_iterator.ml[427,16025+44]..[427,16025+47])
                                Pexp_ident "sub" (typing/tast_iterator.ml[427,16025+44]..[427,16025+47])
                              "row_field" (typing/tast_iterator.ml[427,16025+48]..[427,16025+57])
                            [
                              <arg>
                              Nolabel
                                expression (typing/tast_iterator.ml[427,16025+58]..[427,16025+61])
                                  Pexp_ident "sub" (typing/tast_iterator.ml[427,16025+58]..[427,16025+61])
                            ]
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[427,16025+63]..[427,16025+67])
                            Pexp_ident "list" (typing/tast_iterator.ml[427,16025+63]..[427,16025+67])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[428,16093+4]..[428,16093+21])
                      Ppat_construct "Ttyp_poly" (typing/tast_iterator.ml[428,16093+4]..[428,16093+13])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[428,16093+14]..[428,16093+21])
                          Ppat_tuple
                          [
                            pattern (typing/tast_iterator.ml[428,16093+15]..[428,16093+16])
                              Ppat_any
                            pattern (typing/tast_iterator.ml[428,16093+18]..[428,16093+20])
                              Ppat_var "ct" (typing/tast_iterator.ml[428,16093+18]..[428,16093+20])
                          ]
                    expression (typing/tast_iterator.ml[428,16093+25]..[428,16093+39])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[428,16093+25]..[428,16093+32])
                        Pexp_field
                        expression (typing/tast_iterator.ml[428,16093+25]..[428,16093+28])
                          Pexp_ident "sub" (typing/tast_iterator.ml[428,16093+25]..[428,16093+28])
                        "typ" (typing/tast_iterator.ml[428,16093+29]..[428,16093+32])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[428,16093+33]..[428,16093+36])
                            Pexp_ident "sub" (typing/tast_iterator.ml[428,16093+33]..[428,16093+36])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[428,16093+37]..[428,16093+39])
                            Pexp_ident "ct" (typing/tast_iterator.ml[428,16093+37]..[428,16093+39])
                      ]
                  <case>
                    pattern (typing/tast_iterator.ml[429,16133+4]..[429,16133+21])
                      Ppat_construct "Ttyp_package" (typing/tast_iterator.ml[429,16133+4]..[429,16133+16])
                      Some
                        []
                        pattern (typing/tast_iterator.ml[429,16133+17]..[429,16133+21])
                          Ppat_var "pack" (typing/tast_iterator.ml[429,16133+17]..[429,16133+21])
                    expression (typing/tast_iterator.ml[429,16133+25]..[429,16133+50])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[429,16133+25]..[429,16133+41])
                        Pexp_field
                        expression (typing/tast_iterator.ml[429,16133+25]..[429,16133+28])
                          Pexp_ident "sub" (typing/tast_iterator.ml[429,16133+25]..[429,16133+28])
                        "package_type" (typing/tast_iterator.ml[429,16133+29]..[429,16133+41])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[429,16133+42]..[429,16133+45])
                            Pexp_ident "sub" (typing/tast_iterator.ml[429,16133+42]..[429,16133+45])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[429,16133+46]..[429,16133+50])
                            Pexp_ident "pack" (typing/tast_iterator.ml[429,16133+46]..[429,16133+50])
                      ]
                ]
    ]
  structure_item (typing/tast_iterator.ml[431,16185+0]..[433,16264+45])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[431,16185+4]..[431,16185+19])
          Ppat_var "class_structure" (typing/tast_iterator.ml[431,16185+4]..[431,16185+19])
        expression (typing/tast_iterator.ml[431,16185+20]..[433,16264+45]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[431,16185+20]..[431,16185+23])
            Ppat_var "sub" (typing/tast_iterator.ml[431,16185+20]..[431,16185+23])
          expression (typing/tast_iterator.ml[431,16185+24]..[433,16264+45]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[431,16185+24]..[431,16185+51])
              Ppat_record Open
              [
                "cstr_self" (typing/tast_iterator.ml[431,16185+25]..[431,16185+34]) ghost
                  pattern (typing/tast_iterator.ml[431,16185+25]..[431,16185+34])
                    Ppat_var "cstr_self" (typing/tast_iterator.ml[431,16185+25]..[431,16185+34])
                "cstr_fields" (typing/tast_iterator.ml[431,16185+36]..[431,16185+47]) ghost
                  pattern (typing/tast_iterator.ml[431,16185+36]..[431,16185+47])
                    Ppat_var "cstr_fields" (typing/tast_iterator.ml[431,16185+36]..[431,16185+47])
              ]
            expression (typing/tast_iterator.ml[432,16239+2]..[433,16264+45])
              Pexp_sequence
              expression (typing/tast_iterator.ml[432,16239+2]..[432,16239+23])
                Pexp_apply
                expression (typing/tast_iterator.ml[432,16239+2]..[432,16239+9])
                  Pexp_field
                  expression (typing/tast_iterator.ml[432,16239+2]..[432,16239+5])
                    Pexp_ident "sub" (typing/tast_iterator.ml[432,16239+2]..[432,16239+5])
                  "pat" (typing/tast_iterator.ml[432,16239+6]..[432,16239+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[432,16239+10]..[432,16239+13])
                      Pexp_ident "sub" (typing/tast_iterator.ml[432,16239+10]..[432,16239+13])
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[432,16239+14]..[432,16239+23])
                      Pexp_ident "cstr_self" (typing/tast_iterator.ml[432,16239+14]..[432,16239+23])
                ]
              expression (typing/tast_iterator.ml[433,16264+2]..[433,16264+45])
                Pexp_apply
                expression (typing/tast_iterator.ml[433,16264+2]..[433,16264+11])
                  Pexp_ident "List.iter" (typing/tast_iterator.ml[433,16264+2]..[433,16264+11])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[433,16264+12]..[433,16264+33])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[433,16264+13]..[433,16264+28])
                        Pexp_field
                        expression (typing/tast_iterator.ml[433,16264+13]..[433,16264+16])
                          Pexp_ident "sub" (typing/tast_iterator.ml[433,16264+13]..[433,16264+16])
                        "class_field" (typing/tast_iterator.ml[433,16264+17]..[433,16264+28])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[433,16264+29]..[433,16264+32])
                            Pexp_ident "sub" (typing/tast_iterator.ml[433,16264+29]..[433,16264+32])
                      ]
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[433,16264+34]..[433,16264+45])
                      Pexp_ident "cstr_fields" (typing/tast_iterator.ml[433,16264+34]..[433,16264+45])
                ]
    ]
  structure_item (typing/tast_iterator.ml[435,16311+0]..[438,16419+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[435,16311+4]..[435,16311+13])
          Ppat_var "row_field" (typing/tast_iterator.ml[435,16311+4]..[435,16311+13])
        expression (typing/tast_iterator.ml[435,16311+14]..[438,16419+33]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[435,16311+14]..[435,16311+17])
            Ppat_var "sub" (typing/tast_iterator.ml[435,16311+14]..[435,16311+17])
          expression (typing/tast_iterator.ml[435,16311+18]..[438,16419+33]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[435,16311+18]..[435,16311+30])
              Ppat_record Open
              [
                "rf_desc" (typing/tast_iterator.ml[435,16311+19]..[435,16311+26]) ghost
                  pattern (typing/tast_iterator.ml[435,16311+19]..[435,16311+26])
                    Ppat_var "rf_desc" (typing/tast_iterator.ml[435,16311+19]..[435,16311+26])
              ]
            expression (typing/tast_iterator.ml[436,16344+2]..[438,16419+33])
              Pexp_match
              expression (typing/tast_iterator.ml[436,16344+8]..[436,16344+15])
                Pexp_ident "rf_desc" (typing/tast_iterator.ml[436,16344+8]..[436,16344+15])
              [
                <case>
                  pattern (typing/tast_iterator.ml[437,16365+4]..[437,16365+21])
                    Ppat_construct "Ttag" (typing/tast_iterator.ml[437,16365+4]..[437,16365+8])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[437,16365+9]..[437,16365+21])
                        Ppat_tuple
                        [
                          pattern (typing/tast_iterator.ml[437,16365+10]..[437,16365+11])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[437,16365+13]..[437,16365+14])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[437,16365+16]..[437,16365+20])
                            Ppat_var "list" (typing/tast_iterator.ml[437,16365+16]..[437,16365+20])
                        ]
                  expression (typing/tast_iterator.ml[437,16365+25]..[437,16365+53])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[437,16365+25]..[437,16365+34])
                      Pexp_ident "List.iter" (typing/tast_iterator.ml[437,16365+25]..[437,16365+34])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[437,16365+35]..[437,16365+48])
                          Pexp_apply
                          expression (typing/tast_iterator.ml[437,16365+36]..[437,16365+43])
                            Pexp_field
                            expression (typing/tast_iterator.ml[437,16365+36]..[437,16365+39])
                              Pexp_ident "sub" (typing/tast_iterator.ml[437,16365+36]..[437,16365+39])
                            "typ" (typing/tast_iterator.ml[437,16365+40]..[437,16365+43])
                          [
                            <arg>
                            Nolabel
                              expression (typing/tast_iterator.ml[437,16365+44]..[437,16365+47])
                                Pexp_ident "sub" (typing/tast_iterator.ml[437,16365+44]..[437,16365+47])
                          ]
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[437,16365+49]..[437,16365+53])
                          Pexp_ident "list" (typing/tast_iterator.ml[437,16365+49]..[437,16365+53])
                    ]
                <case>
                  pattern (typing/tast_iterator.ml[438,16419+4]..[438,16419+15])
                    Ppat_construct "Tinherit" (typing/tast_iterator.ml[438,16419+4]..[438,16419+12])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[438,16419+13]..[438,16419+15])
                        Ppat_var "ct" (typing/tast_iterator.ml[438,16419+13]..[438,16419+15])
                  expression (typing/tast_iterator.ml[438,16419+19]..[438,16419+33])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[438,16419+19]..[438,16419+26])
                      Pexp_field
                      expression (typing/tast_iterator.ml[438,16419+19]..[438,16419+22])
                        Pexp_ident "sub" (typing/tast_iterator.ml[438,16419+19]..[438,16419+22])
                      "typ" (typing/tast_iterator.ml[438,16419+23]..[438,16419+26])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[438,16419+27]..[438,16419+30])
                          Pexp_ident "sub" (typing/tast_iterator.ml[438,16419+27]..[438,16419+30])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[438,16419+31]..[438,16419+33])
                          Pexp_ident "ct" (typing/tast_iterator.ml[438,16419+31]..[438,16419+33])
                    ]
              ]
    ]
  structure_item (typing/tast_iterator.ml[440,16454+0]..[443,16547+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[440,16454+4]..[440,16454+16])
          Ppat_var "object_field" (typing/tast_iterator.ml[440,16454+4]..[440,16454+16])
        expression (typing/tast_iterator.ml[440,16454+17]..[443,16547+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[440,16454+17]..[440,16454+20])
            Ppat_var "sub" (typing/tast_iterator.ml[440,16454+17]..[440,16454+20])
          expression (typing/tast_iterator.ml[440,16454+21]..[443,16547+34]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[440,16454+21]..[440,16454+33])
              Ppat_record Open
              [
                "of_desc" (typing/tast_iterator.ml[440,16454+22]..[440,16454+29]) ghost
                  pattern (typing/tast_iterator.ml[440,16454+22]..[440,16454+29])
                    Ppat_var "of_desc" (typing/tast_iterator.ml[440,16454+22]..[440,16454+29])
              ]
            expression (typing/tast_iterator.ml[441,16490+2]..[443,16547+34])
              Pexp_match
              expression (typing/tast_iterator.ml[441,16490+8]..[441,16490+15])
                Pexp_ident "of_desc" (typing/tast_iterator.ml[441,16490+8]..[441,16490+15])
              [
                <case>
                  pattern (typing/tast_iterator.ml[442,16511+4]..[442,16511+17])
                    Ppat_construct "OTtag" (typing/tast_iterator.ml[442,16511+4]..[442,16511+9])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[442,16511+10]..[442,16511+17])
                        Ppat_tuple
                        [
                          pattern (typing/tast_iterator.ml[442,16511+11]..[442,16511+12])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[442,16511+14]..[442,16511+16])
                            Ppat_var "ct" (typing/tast_iterator.ml[442,16511+14]..[442,16511+16])
                        ]
                  expression (typing/tast_iterator.ml[442,16511+21]..[442,16511+35])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[442,16511+21]..[442,16511+28])
                      Pexp_field
                      expression (typing/tast_iterator.ml[442,16511+21]..[442,16511+24])
                        Pexp_ident "sub" (typing/tast_iterator.ml[442,16511+21]..[442,16511+24])
                      "typ" (typing/tast_iterator.ml[442,16511+25]..[442,16511+28])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[442,16511+29]..[442,16511+32])
                          Pexp_ident "sub" (typing/tast_iterator.ml[442,16511+29]..[442,16511+32])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[442,16511+33]..[442,16511+35])
                          Pexp_ident "ct" (typing/tast_iterator.ml[442,16511+33]..[442,16511+35])
                    ]
                <case>
                  pattern (typing/tast_iterator.ml[443,16547+4]..[443,16547+16])
                    Ppat_construct "OTinherit" (typing/tast_iterator.ml[443,16547+4]..[443,16547+13])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[443,16547+14]..[443,16547+16])
                        Ppat_var "ct" (typing/tast_iterator.ml[443,16547+14]..[443,16547+16])
                  expression (typing/tast_iterator.ml[443,16547+20]..[443,16547+34])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[443,16547+20]..[443,16547+27])
                      Pexp_field
                      expression (typing/tast_iterator.ml[443,16547+20]..[443,16547+23])
                        Pexp_ident "sub" (typing/tast_iterator.ml[443,16547+20]..[443,16547+23])
                      "typ" (typing/tast_iterator.ml[443,16547+24]..[443,16547+27])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[443,16547+28]..[443,16547+31])
                          Pexp_ident "sub" (typing/tast_iterator.ml[443,16547+28]..[443,16547+31])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[443,16547+32]..[443,16547+34])
                          Pexp_ident "ct" (typing/tast_iterator.ml[443,16547+32]..[443,16547+34])
                    ]
              ]
    ]
  structure_item (typing/tast_iterator.ml[445,16583+0]..[447,16657+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[445,16583+4]..[445,16583+20])
          Ppat_var "class_field_kind" (typing/tast_iterator.ml[445,16583+4]..[445,16583+20])
        expression (typing/tast_iterator.ml[445,16583+21]..[447,16657+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[445,16583+21]..[445,16583+24])
            Ppat_var "sub" (typing/tast_iterator.ml[445,16583+21]..[445,16583+24])
          expression (typing/tast_iterator.ml[445,16583+27]..[447,16657+42])
            Pexp_function
            [
              <case>
                pattern (typing/tast_iterator.ml[446,16619+4]..[446,16619+19])
                  Ppat_construct "Tcfk_virtual" (typing/tast_iterator.ml[446,16619+4]..[446,16619+16])
                  Some
                    []
                    pattern (typing/tast_iterator.ml[446,16619+17]..[446,16619+19])
                      Ppat_var "ct" (typing/tast_iterator.ml[446,16619+17]..[446,16619+19])
                expression (typing/tast_iterator.ml[446,16619+23]..[446,16619+37])
                  Pexp_apply
                  expression (typing/tast_iterator.ml[446,16619+23]..[446,16619+30])
                    Pexp_field
                    expression (typing/tast_iterator.ml[446,16619+23]..[446,16619+26])
                      Pexp_ident "sub" (typing/tast_iterator.ml[446,16619+23]..[446,16619+26])
                    "typ" (typing/tast_iterator.ml[446,16619+27]..[446,16619+30])
                  [
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[446,16619+31]..[446,16619+34])
                        Pexp_ident "sub" (typing/tast_iterator.ml[446,16619+31]..[446,16619+34])
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[446,16619+35]..[446,16619+37])
                        Pexp_ident "ct" (typing/tast_iterator.ml[446,16619+35]..[446,16619+37])
                  ]
              <case>
                pattern (typing/tast_iterator.ml[447,16657+4]..[447,16657+24])
                  Ppat_construct "Tcfk_concrete" (typing/tast_iterator.ml[447,16657+4]..[447,16657+17])
                  Some
                    []
                    pattern (typing/tast_iterator.ml[447,16657+18]..[447,16657+24])
                      Ppat_tuple
                      [
                        pattern (typing/tast_iterator.ml[447,16657+19]..[447,16657+20])
                          Ppat_any
                        pattern (typing/tast_iterator.ml[447,16657+22]..[447,16657+23])
                          Ppat_var "e" (typing/tast_iterator.ml[447,16657+22]..[447,16657+23])
                      ]
                expression (typing/tast_iterator.ml[447,16657+28]..[447,16657+42])
                  Pexp_apply
                  expression (typing/tast_iterator.ml[447,16657+28]..[447,16657+36])
                    Pexp_field
                    expression (typing/tast_iterator.ml[447,16657+28]..[447,16657+31])
                      Pexp_ident "sub" (typing/tast_iterator.ml[447,16657+28]..[447,16657+31])
                    "expr" (typing/tast_iterator.ml[447,16657+32]..[447,16657+36])
                  [
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[447,16657+37]..[447,16657+40])
                        Pexp_ident "sub" (typing/tast_iterator.ml[447,16657+37]..[447,16657+40])
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[447,16657+41]..[447,16657+42])
                        Pexp_ident "e" (typing/tast_iterator.ml[447,16657+41]..[447,16657+42])
                  ]
            ]
    ]
  structure_item (typing/tast_iterator.ml[449,16701+0]..[457,17044+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[449,16701+4]..[449,16701+15])
          Ppat_var "class_field" (typing/tast_iterator.ml[449,16701+4]..[449,16701+15])
        expression (typing/tast_iterator.ml[449,16701+16]..[457,17044+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[449,16701+16]..[449,16701+19])
            Ppat_var "sub" (typing/tast_iterator.ml[449,16701+16]..[449,16701+19])
          expression (typing/tast_iterator.ml[449,16701+20]..[457,17044+25]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[449,16701+20]..[449,16701+32])
              Ppat_record Open
              [
                "cf_desc" (typing/tast_iterator.ml[449,16701+21]..[449,16701+28]) ghost
                  pattern (typing/tast_iterator.ml[449,16701+21]..[449,16701+28])
                    Ppat_var "cf_desc" (typing/tast_iterator.ml[449,16701+21]..[449,16701+28])
              ]
            expression (typing/tast_iterator.ml[449,16701+35]..[457,17044+25])
              Pexp_match
              expression (typing/tast_iterator.ml[449,16701+41]..[449,16701+48])
                Pexp_ident "cf_desc" (typing/tast_iterator.ml[449,16701+41]..[449,16701+48])
              [
                <case>
                  pattern (typing/tast_iterator.ml[450,16755+4]..[450,16755+32])
                    Ppat_construct "Tcf_inherit" (typing/tast_iterator.ml[450,16755+4]..[450,16755+15])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[450,16755+16]..[450,16755+32])
                        Ppat_tuple
                        [
                          pattern (typing/tast_iterator.ml[450,16755+17]..[450,16755+18])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[450,16755+20]..[450,16755+22])
                            Ppat_var "cl" (typing/tast_iterator.ml[450,16755+20]..[450,16755+22])
                          pattern (typing/tast_iterator.ml[450,16755+24]..[450,16755+25])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[450,16755+27]..[450,16755+28])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[450,16755+30]..[450,16755+31])
                            Ppat_any
                        ]
                  expression (typing/tast_iterator.ml[450,16755+36]..[450,16755+57])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[450,16755+36]..[450,16755+50])
                      Pexp_field
                      expression (typing/tast_iterator.ml[450,16755+36]..[450,16755+39])
                        Pexp_ident "sub" (typing/tast_iterator.ml[450,16755+36]..[450,16755+39])
                      "class_expr" (typing/tast_iterator.ml[450,16755+40]..[450,16755+50])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[450,16755+51]..[450,16755+54])
                          Pexp_ident "sub" (typing/tast_iterator.ml[450,16755+51]..[450,16755+54])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[450,16755+55]..[450,16755+57])
                          Pexp_ident "cl" (typing/tast_iterator.ml[450,16755+55]..[450,16755+57])
                    ]
                <case>
                  pattern (typing/tast_iterator.ml[451,16813+4]..[451,16813+31])
                    Ppat_construct "Tcf_constraint" (typing/tast_iterator.ml[451,16813+4]..[451,16813+18])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[451,16813+19]..[451,16813+31])
                        Ppat_tuple
                        [
                          pattern (typing/tast_iterator.ml[451,16813+20]..[451,16813+24])
                            Ppat_var "cty1" (typing/tast_iterator.ml[451,16813+20]..[451,16813+24])
                          pattern (typing/tast_iterator.ml[451,16813+26]..[451,16813+30])
                            Ppat_var "cty2" (typing/tast_iterator.ml[451,16813+26]..[451,16813+30])
                        ]
                  expression (typing/tast_iterator.ml[452,16848+6]..[453,16872+22])
                    Pexp_sequence
                    expression (typing/tast_iterator.ml[452,16848+6]..[452,16848+22])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[452,16848+6]..[452,16848+13])
                        Pexp_field
                        expression (typing/tast_iterator.ml[452,16848+6]..[452,16848+9])
                          Pexp_ident "sub" (typing/tast_iterator.ml[452,16848+6]..[452,16848+9])
                        "typ" (typing/tast_iterator.ml[452,16848+10]..[452,16848+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[452,16848+14]..[452,16848+17])
                            Pexp_ident "sub" (typing/tast_iterator.ml[452,16848+14]..[452,16848+17])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[452,16848+18]..[452,16848+22])
                            Pexp_ident "cty1" (typing/tast_iterator.ml[452,16848+18]..[452,16848+22])
                      ]
                    expression (typing/tast_iterator.ml[453,16872+6]..[453,16872+22])
                      Pexp_apply
                      expression (typing/tast_iterator.ml[453,16872+6]..[453,16872+13])
                        Pexp_field
                        expression (typing/tast_iterator.ml[453,16872+6]..[453,16872+9])
                          Pexp_ident "sub" (typing/tast_iterator.ml[453,16872+6]..[453,16872+9])
                        "typ" (typing/tast_iterator.ml[453,16872+10]..[453,16872+13])
                      [
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[453,16872+14]..[453,16872+17])
                            Pexp_ident "sub" (typing/tast_iterator.ml[453,16872+14]..[453,16872+17])
                        <arg>
                        Nolabel
                          expression (typing/tast_iterator.ml[453,16872+18]..[453,16872+22])
                            Pexp_ident "cty2" (typing/tast_iterator.ml[453,16872+18]..[453,16872+22])
                      ]
                <case>
                  pattern (typing/tast_iterator.ml[454,16895+4]..[454,16895+27])
                    Ppat_construct "Tcf_val" (typing/tast_iterator.ml[454,16895+4]..[454,16895+11])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[454,16895+12]..[454,16895+27])
                        Ppat_tuple
                        [
                          pattern (typing/tast_iterator.ml[454,16895+13]..[454,16895+14])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[454,16895+16]..[454,16895+17])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[454,16895+19]..[454,16895+20])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[454,16895+22]..[454,16895+23])
                            Ppat_var "k" (typing/tast_iterator.ml[454,16895+22]..[454,16895+23])
                          pattern (typing/tast_iterator.ml[454,16895+25]..[454,16895+26])
                            Ppat_any
                        ]
                  expression (typing/tast_iterator.ml[454,16895+31]..[454,16895+53])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[454,16895+31]..[454,16895+47])
                      Pexp_ident "class_field_kind" (typing/tast_iterator.ml[454,16895+31]..[454,16895+47])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[454,16895+48]..[454,16895+51])
                          Pexp_ident "sub" (typing/tast_iterator.ml[454,16895+48]..[454,16895+51])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[454,16895+52]..[454,16895+53])
                          Pexp_ident "k" (typing/tast_iterator.ml[454,16895+52]..[454,16895+53])
                    ]
                <case>
                  pattern (typing/tast_iterator.ml[455,16949+4]..[455,16949+24])
                    Ppat_construct "Tcf_method" (typing/tast_iterator.ml[455,16949+4]..[455,16949+14])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[455,16949+15]..[455,16949+24])
                        Ppat_tuple
                        [
                          pattern (typing/tast_iterator.ml[455,16949+16]..[455,16949+17])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[455,16949+19]..[455,16949+20])
                            Ppat_any
                          pattern (typing/tast_iterator.ml[455,16949+22]..[455,16949+23])
                            Ppat_var "k" (typing/tast_iterator.ml[455,16949+22]..[455,16949+23])
                        ]
                  expression (typing/tast_iterator.ml[455,16949+28]..[455,16949+50])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[455,16949+28]..[455,16949+44])
                      Pexp_ident "class_field_kind" (typing/tast_iterator.ml[455,16949+28]..[455,16949+44])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[455,16949+45]..[455,16949+48])
                          Pexp_ident "sub" (typing/tast_iterator.ml[455,16949+45]..[455,16949+48])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[455,16949+49]..[455,16949+50])
                          Pexp_ident "k" (typing/tast_iterator.ml[455,16949+49]..[455,16949+50])
                    ]
                <case>
                  pattern (typing/tast_iterator.ml[456,17000+4]..[456,17000+23])
                    Ppat_construct "Tcf_initializer" (typing/tast_iterator.ml[456,17000+4]..[456,17000+19])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[456,17000+20]..[456,17000+23])
                        Ppat_var "exp" (typing/tast_iterator.ml[456,17000+20]..[456,17000+23])
                  expression (typing/tast_iterator.ml[456,17000+27]..[456,17000+43])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[456,17000+27]..[456,17000+35])
                      Pexp_field
                      expression (typing/tast_iterator.ml[456,17000+27]..[456,17000+30])
                        Pexp_ident "sub" (typing/tast_iterator.ml[456,17000+27]..[456,17000+30])
                      "expr" (typing/tast_iterator.ml[456,17000+31]..[456,17000+35])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[456,17000+36]..[456,17000+39])
                          Pexp_ident "sub" (typing/tast_iterator.ml[456,17000+36]..[456,17000+39])
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[456,17000+40]..[456,17000+43])
                          Pexp_ident "exp" (typing/tast_iterator.ml[456,17000+40]..[456,17000+43])
                    ]
                <case>
                  pattern (typing/tast_iterator.ml[457,17044+4]..[457,17044+19])
                    Ppat_construct "Tcf_attribute" (typing/tast_iterator.ml[457,17044+4]..[457,17044+17])
                    Some
                      []
                      pattern (typing/tast_iterator.ml[457,17044+18]..[457,17044+19])
                        Ppat_any
                  expression (typing/tast_iterator.ml[457,17044+23]..[457,17044+25])
                    Pexp_construct "()" (typing/tast_iterator.ml[457,17044+23]..[457,17044+25])
                    None
              ]
    ]
  structure_item (typing/tast_iterator.ml[459,17071+0]..[459,17071+73])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[459,17071+4]..[459,17071+18])
          Ppat_var "value_bindings" (typing/tast_iterator.ml[459,17071+4]..[459,17071+18])
        expression (typing/tast_iterator.ml[459,17071+19]..[459,17071+73]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[459,17071+19]..[459,17071+22])
            Ppat_var "sub" (typing/tast_iterator.ml[459,17071+19]..[459,17071+22])
          expression (typing/tast_iterator.ml[459,17071+23]..[459,17071+73]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[459,17071+23]..[459,17071+32])
              Ppat_tuple
              [
                pattern (typing/tast_iterator.ml[459,17071+24]..[459,17071+25])
                  Ppat_any
                pattern (typing/tast_iterator.ml[459,17071+27]..[459,17071+31])
                  Ppat_var "list" (typing/tast_iterator.ml[459,17071+27]..[459,17071+31])
              ]
            expression (typing/tast_iterator.ml[459,17071+35]..[459,17071+73])
              Pexp_apply
              expression (typing/tast_iterator.ml[459,17071+35]..[459,17071+44])
                Pexp_ident "List.iter" (typing/tast_iterator.ml[459,17071+35]..[459,17071+44])
              [
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[459,17071+45]..[459,17071+68])
                    Pexp_apply
                    expression (typing/tast_iterator.ml[459,17071+46]..[459,17071+63])
                      Pexp_field
                      expression (typing/tast_iterator.ml[459,17071+46]..[459,17071+49])
                        Pexp_ident "sub" (typing/tast_iterator.ml[459,17071+46]..[459,17071+49])
                      "value_binding" (typing/tast_iterator.ml[459,17071+50]..[459,17071+63])
                    [
                      <arg>
                      Nolabel
                        expression (typing/tast_iterator.ml[459,17071+64]..[459,17071+67])
                          Pexp_ident "sub" (typing/tast_iterator.ml[459,17071+64]..[459,17071+67])
                    ]
                <arg>
                Nolabel
                  expression (typing/tast_iterator.ml[459,17071+69]..[459,17071+73])
                    Pexp_ident "list" (typing/tast_iterator.ml[459,17071+69]..[459,17071+73])
              ]
    ]
  structure_item (typing/tast_iterator.ml[461,17146+0]..[464,17244+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[461,17146+4]..[461,17146+8])
          Ppat_var "case" (typing/tast_iterator.ml[461,17146+4]..[461,17146+8])
        expression (typing/tast_iterator.ml[461,17146+9]..[464,17244+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[461,17146+9]..[461,17146+12])
            Ppat_var "sub" (typing/tast_iterator.ml[461,17146+9]..[461,17146+12])
          expression (typing/tast_iterator.ml[461,17146+13]..[464,17244+20]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[461,17146+13]..[461,17146+36])
              Ppat_record Closed
              [
                "c_lhs" (typing/tast_iterator.ml[461,17146+14]..[461,17146+19]) ghost
                  pattern (typing/tast_iterator.ml[461,17146+14]..[461,17146+19])
                    Ppat_var "c_lhs" (typing/tast_iterator.ml[461,17146+14]..[461,17146+19])
                "c_guard" (typing/tast_iterator.ml[461,17146+21]..[461,17146+28]) ghost
                  pattern (typing/tast_iterator.ml[461,17146+21]..[461,17146+28])
                    Ppat_var "c_guard" (typing/tast_iterator.ml[461,17146+21]..[461,17146+28])
                "c_rhs" (typing/tast_iterator.ml[461,17146+30]..[461,17146+35]) ghost
                  pattern (typing/tast_iterator.ml[461,17146+30]..[461,17146+35])
                    Ppat_var "c_rhs" (typing/tast_iterator.ml[461,17146+30]..[461,17146+35])
              ]
            expression (typing/tast_iterator.ml[462,17185+2]..[464,17244+20])
              Pexp_sequence
              expression (typing/tast_iterator.ml[462,17185+2]..[462,17185+19])
                Pexp_apply
                expression (typing/tast_iterator.ml[462,17185+2]..[462,17185+9])
                  Pexp_field
                  expression (typing/tast_iterator.ml[462,17185+2]..[462,17185+5])
                    Pexp_ident "sub" (typing/tast_iterator.ml[462,17185+2]..[462,17185+5])
                  "pat" (typing/tast_iterator.ml[462,17185+6]..[462,17185+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[462,17185+10]..[462,17185+13])
                      Pexp_ident "sub" (typing/tast_iterator.ml[462,17185+10]..[462,17185+13])
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[462,17185+14]..[462,17185+19])
                      Pexp_ident "c_lhs" (typing/tast_iterator.ml[462,17185+14]..[462,17185+19])
                ]
              expression (typing/tast_iterator.ml[463,17206+2]..[464,17244+20])
                Pexp_sequence
                expression (typing/tast_iterator.ml[463,17206+2]..[463,17206+36])
                  Pexp_apply
                  expression (typing/tast_iterator.ml[463,17206+2]..[463,17206+13])
                    Pexp_ident "Option.iter" (typing/tast_iterator.ml[463,17206+2]..[463,17206+13])
                  [
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[463,17206+14]..[463,17206+28])
                        Pexp_apply
                        expression (typing/tast_iterator.ml[463,17206+15]..[463,17206+23])
                          Pexp_field
                          expression (typing/tast_iterator.ml[463,17206+15]..[463,17206+18])
                            Pexp_ident "sub" (typing/tast_iterator.ml[463,17206+15]..[463,17206+18])
                          "expr" (typing/tast_iterator.ml[463,17206+19]..[463,17206+23])
                        [
                          <arg>
                          Nolabel
                            expression (typing/tast_iterator.ml[463,17206+24]..[463,17206+27])
                              Pexp_ident "sub" (typing/tast_iterator.ml[463,17206+24]..[463,17206+27])
                        ]
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[463,17206+29]..[463,17206+36])
                        Pexp_ident "c_guard" (typing/tast_iterator.ml[463,17206+29]..[463,17206+36])
                  ]
                expression (typing/tast_iterator.ml[464,17244+2]..[464,17244+20])
                  Pexp_apply
                  expression (typing/tast_iterator.ml[464,17244+2]..[464,17244+10])
                    Pexp_field
                    expression (typing/tast_iterator.ml[464,17244+2]..[464,17244+5])
                      Pexp_ident "sub" (typing/tast_iterator.ml[464,17244+2]..[464,17244+5])
                    "expr" (typing/tast_iterator.ml[464,17244+6]..[464,17244+10])
                  [
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[464,17244+11]..[464,17244+14])
                        Pexp_ident "sub" (typing/tast_iterator.ml[464,17244+11]..[464,17244+14])
                    <arg>
                    Nolabel
                      expression (typing/tast_iterator.ml[464,17244+15]..[464,17244+20])
                        Pexp_ident "c_rhs" (typing/tast_iterator.ml[464,17244+15]..[464,17244+20])
                  ]
    ]
  structure_item (typing/tast_iterator.ml[466,17266+0]..[468,17333+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[466,17266+4]..[466,17266+17])
          Ppat_var "value_binding" (typing/tast_iterator.ml[466,17266+4]..[466,17266+17])
        expression (typing/tast_iterator.ml[466,17266+18]..[468,17333+22]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[466,17266+18]..[466,17266+21])
            Ppat_var "sub" (typing/tast_iterator.ml[466,17266+18]..[466,17266+21])
          expression (typing/tast_iterator.ml[466,17266+22]..[468,17333+22]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[466,17266+22]..[466,17266+42])
              Ppat_record Open
              [
                "vb_pat" (typing/tast_iterator.ml[466,17266+23]..[466,17266+29]) ghost
                  pattern (typing/tast_iterator.ml[466,17266+23]..[466,17266+29])
                    Ppat_var "vb_pat" (typing/tast_iterator.ml[466,17266+23]..[466,17266+29])
                "vb_expr" (typing/tast_iterator.ml[466,17266+31]..[466,17266+38]) ghost
                  pattern (typing/tast_iterator.ml[466,17266+31]..[466,17266+38])
                    Ppat_var "vb_expr" (typing/tast_iterator.ml[466,17266+31]..[466,17266+38])
              ]
            expression (typing/tast_iterator.ml[467,17311+2]..[468,17333+22])
              Pexp_sequence
              expression (typing/tast_iterator.ml[467,17311+2]..[467,17311+20])
                Pexp_apply
                expression (typing/tast_iterator.ml[467,17311+2]..[467,17311+9])
                  Pexp_field
                  expression (typing/tast_iterator.ml[467,17311+2]..[467,17311+5])
                    Pexp_ident "sub" (typing/tast_iterator.ml[467,17311+2]..[467,17311+5])
                  "pat" (typing/tast_iterator.ml[467,17311+6]..[467,17311+9])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[467,17311+10]..[467,17311+13])
                      Pexp_ident "sub" (typing/tast_iterator.ml[467,17311+10]..[467,17311+13])
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[467,17311+14]..[467,17311+20])
                      Pexp_ident "vb_pat" (typing/tast_iterator.ml[467,17311+14]..[467,17311+20])
                ]
              expression (typing/tast_iterator.ml[468,17333+2]..[468,17333+22])
                Pexp_apply
                expression (typing/tast_iterator.ml[468,17333+2]..[468,17333+10])
                  Pexp_field
                  expression (typing/tast_iterator.ml[468,17333+2]..[468,17333+5])
                    Pexp_ident "sub" (typing/tast_iterator.ml[468,17333+2]..[468,17333+5])
                  "expr" (typing/tast_iterator.ml[468,17333+6]..[468,17333+10])
                [
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[468,17333+11]..[468,17333+14])
                      Pexp_ident "sub" (typing/tast_iterator.ml[468,17333+11]..[468,17333+14])
                  <arg>
                  Nolabel
                    expression (typing/tast_iterator.ml[468,17333+15]..[468,17333+22])
                      Pexp_ident "vb_expr" (typing/tast_iterator.ml[468,17333+15]..[468,17333+22])
                ]
    ]
  structure_item (typing/tast_iterator.ml[470,17357+0]..[470,17357+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[470,17357+4]..[470,17357+7])
          Ppat_var "env" (typing/tast_iterator.ml[470,17357+4]..[470,17357+7])
        expression (typing/tast_iterator.ml[470,17357+8]..[470,17357+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (typing/tast_iterator.ml[470,17357+8]..[470,17357+12])
            Ppat_var "_sub" (typing/tast_iterator.ml[470,17357+8]..[470,17357+12])
          expression (typing/tast_iterator.ml[470,17357+13]..[470,17357+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (typing/tast_iterator.ml[470,17357+13]..[470,17357+14])
              Ppat_any
            expression (typing/tast_iterator.ml[470,17357+17]..[470,17357+19])
              Pexp_construct "()" (typing/tast_iterator.ml[470,17357+17]..[470,17357+19])
              None
    ]
  structure_item (typing/tast_iterator.ml[472,17378+0]..[515,18183+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (typing/tast_iterator.ml[472,17378+4]..[472,17378+20])
          Ppat_var "default_iterator" (typing/tast_iterator.ml[472,17378+4]..[472,17378+20])
        expression (typing/tast_iterator.ml[473,17401+2]..[515,18183+3])
          Pexp_record
          [
            "binding_op" (typing/tast_iterator.ml[474,17405+4]..[474,17405+14]) ghost
              expression (typing/tast_iterator.ml[474,17405+4]..[474,17405+14])
                Pexp_ident "binding_op" (typing/tast_iterator.ml[474,17405+4]..[474,17405+14])
            "case" (typing/tast_iterator.ml[475,17421+4]..[475,17421+8]) ghost
              expression (typing/tast_iterator.ml[475,17421+4]..[475,17421+8])
                Pexp_ident "case" (typing/tast_iterator.ml[475,17421+4]..[475,17421+8])
            "class_declaration" (typing/tast_iterator.ml[476,17431+4]..[476,17431+21]) ghost
              expression (typing/tast_iterator.ml[476,17431+4]..[476,17431+21])
                Pexp_ident "class_declaration" (typing/tast_iterator.ml[476,17431+4]..[476,17431+21])
            "class_description" (typing/tast_iterator.ml[477,17454+4]..[477,17454+21]) ghost
              expression (typing/tast_iterator.ml[477,17454+4]..[477,17454+21])
                Pexp_ident "class_description" (typing/tast_iterator.ml[477,17454+4]..[477,17454+21])
            "class_expr" (typing/tast_iterator.ml[478,17477+4]..[478,17477+14]) ghost
              expression (typing/tast_iterator.ml[478,17477+4]..[478,17477+14])
                Pexp_ident "class_expr" (typing/tast_iterator.ml[478,17477+4]..[478,17477+14])
            "class_field" (typing/tast_iterator.ml[479,17493+4]..[479,17493+15]) ghost
              expression (typing/tast_iterator.ml[479,17493+4]..[479,17493+15])
                Pexp_ident "class_field" (typing/tast_iterator.ml[479,17493+4]..[479,17493+15])
            "class_signature" (typing/tast_iterator.ml[480,17510+4]..[480,17510+19]) ghost
              expression (typing/tast_iterator.ml[480,17510+4]..[480,17510+19])
                Pexp_ident "class_signature" (typing/tast_iterator.ml[480,17510+4]..[480,17510+19])
            "class_structure" (typing/tast_iterator.ml[481,17531+4]..[481,17531+19]) ghost
              expression (typing/tast_iterator.ml[481,17531+4]..[481,17531+19])
                Pexp_ident "class_structure" (typing/tast_iterator.ml[481,17531+4]..[481,17531+19])
            "class_type" (typing/tast_iterator.ml[482,17552+4]..[482,17552+14]) ghost
              expression (typing/tast_iterator.ml[482,17552+4]..[482,17552+14])
                Pexp_ident "class_type" (typing/tast_iterator.ml[482,17552+4]..[482,17552+14])
            "class_type_declaration" (typing/tast_iterator.ml[483,17568+4]..[483,17568+26]) ghost
              expression (typing/tast_iterator.ml[483,17568+4]..[483,17568+26])
                Pexp_ident "class_type_declaration" (typing/tast_iterator.ml[483,17568+4]..[483,17568+26])
            "class_type_field" (typing/tast_iterator.ml[484,17596+4]..[484,17596+20]) ghost
              expression (typing/tast_iterator.ml[484,17596+4]..[484,17596+20])
                Pexp_ident "class_type_field" (typing/tast_iterator.ml[484,17596+4]..[484,17596+20])
            "env" (typing/tast_iterator.ml[485,17618+4]..[485,17618+7]) ghost
              expression (typing/tast_iterator.ml[485,17618+4]..[485,17618+7])
                Pexp_ident "env" (typing/tast_iterator.ml[485,17618+4]..[485,17618+7])
            "expr" (typing/tast_iterator.ml[486,17627+4]..[486,17627+8]) ghost
              expression (typing/tast_iterator.ml[486,17627+4]..[486,17627+8])
                Pexp_ident "expr" (typing/tast_iterator.ml[486,17627+4]..[486,17627+8])
            "extension_constructor" (typing/tast_iterator.ml[487,17637+4]..[487,17637+25]) ghost
              expression (typing/tast_iterator.ml[487,17637+4]..[487,17637+25])
                Pexp_ident "extension_constructor" (typing/tast_iterator.ml[487,17637+4]..[487,17637+25])
            "module_binding" (typing/tast_iterator.ml[488,17664+4]..[488,17664+18]) ghost
              expression (typing/tast_iterator.ml[488,17664+4]..[488,17664+18])
                Pexp_ident "module_binding" (typing/tast_iterator.ml[488,17664+4]..[488,17664+18])
            "module_coercion" (typing/tast_iterator.ml[489,17684+4]..[489,17684+19]) ghost
              expression (typing/tast_iterator.ml[489,17684+4]..[489,17684+19])
                Pexp_ident "module_coercion" (typing/tast_iterator.ml[489,17684+4]..[489,17684+19])
            "module_declaration" (typing/tast_iterator.ml[490,17705+4]..[490,17705+22]) ghost
              expression (typing/tast_iterator.ml[490,17705+4]..[490,17705+22])
                Pexp_ident "module_declaration" (typing/tast_iterator.ml[490,17705+4]..[490,17705+22])
            "module_substitution" (typing/tast_iterator.ml[491,17729+4]..[491,17729+23]) ghost
              expression (typing/tast_iterator.ml[491,17729+4]..[491,17729+23])
                Pexp_ident "module_substitution" (typing/tast_iterator.ml[491,17729+4]..[491,17729+23])
            "module_expr" (typing/tast_iterator.ml[492,17754+4]..[492,17754+15]) ghost
              expression (typing/tast_iterator.ml[492,17754+4]..[492,17754+15])
                Pexp_ident "module_expr" (typing/tast_iterator.ml[492,17754+4]..[492,17754+15])
            "module_type" (typing/tast_iterator.ml[493,17771+4]..[493,17771+15]) ghost
              expression (typing/tast_iterator.ml[493,17771+4]..[493,17771+15])
                Pexp_ident "module_type" (typing/tast_iterator.ml[493,17771+4]..[493,17771+15])
            "module_type_declaration" (typing/tast_iterator.ml[494,17788+4]..[494,17788+27]) ghost
              expression (typing/tast_iterator.ml[494,17788+4]..[494,17788+27])
                Pexp_ident "module_type_declaration" (typing/tast_iterator.ml[494,17788+4]..[494,17788+27])
            "package_type" (typing/tast_iterator.ml[495,17817+4]..[495,17817+16]) ghost
              expression (typing/tast_iterator.ml[495,17817+4]..[495,17817+16])
                Pexp_ident "package_type" (typing/tast_iterator.ml[495,17817+4]..[495,17817+16])
            "pat" (typing/tast_iterator.ml[496,17835+4]..[496,17835+7]) ghost
              expression (typing/tast_iterator.ml[496,17835+4]..[496,17835+7])
                Pexp_ident "pat" (typing/tast_iterator.ml[496,17835+4]..[496,17835+7])
            "row_field" (typing/tast_iterator.ml[497,17844+4]..[497,17844+13]) ghost
              expression (typing/tast_iterator.ml[497,17844+4]..[497,17844+13])
                Pexp_ident "row_field" (typing/tast_iterator.ml[497,17844+4]..[497,17844+13])
            "object_field" (typing/tast_iterator.ml[498,17859+4]..[498,17859+16]) ghost
              expression (typing/tast_iterator.ml[498,17859+4]..[498,17859+16])
                Pexp_ident "object_field" (typing/tast_iterator.ml[498,17859+4]..[498,17859+16])
            "open_declaration" (typing/tast_iterator.ml[499,17877+4]..[499,17877+20]) ghost
              expression (typing/tast_iterator.ml[499,17877+4]..[499,17877+20])
                Pexp_ident "open_declaration" (typing/tast_iterator.ml[499,17877+4]..[499,17877+20])
            "open_description" (typing/tast_iterator.ml[500,17899+4]..[500,17899+20]) ghost
              expression (typing/tast_iterator.ml[500,17899+4]..[500,17899+20])
                Pexp_ident "open_description" (typing/tast_iterator.ml[500,17899+4]..[500,17899+20])
            "signature" (typing/tast_iterator.ml[501,17921+4]..[501,17921+13]) ghost
              expression (typing/tast_iterator.ml[501,17921+4]..[501,17921+13])
                Pexp_ident "signature" (typing/tast_iterator.ml[501,17921+4]..[501,17921+13])
            "signature_item" (typing/tast_iterator.ml[502,17936+4]..[502,17936+18]) ghost
              expression (typing/tast_iterator.ml[502,17936+4]..[502,17936+18])
                Pexp_ident "signature_item" (typing/tast_iterator.ml[502,17936+4]..[502,17936+18])
            "structure" (typing/tast_iterator.ml[503,17956+4]..[503,17956+13]) ghost
              expression (typing/tast_iterator.ml[503,17956+4]..[503,17956+13])
                Pexp_ident "structure" (typing/tast_iterator.ml[503,17956+4]..[503,17956+13])
            "structure_item" (typing/tast_iterator.ml[504,17971+4]..[504,17971+18]) ghost
              expression (typing/tast_iterator.ml[504,17971+4]..[504,17971+18])
                Pexp_ident "structure_item" (typing/tast_iterator.ml[504,17971+4]..[504,17971+18])
            "typ" (typing/tast_iterator.ml[505,17991+4]..[505,17991+7]) ghost
              expression (typing/tast_iterator.ml[505,17991+4]..[505,17991+7])
                Pexp_ident "typ" (typing/tast_iterator.ml[505,17991+4]..[505,17991+7])
            "type_declaration" (typing/tast_iterator.ml[506,18000+4]..[506,18000+20]) ghost
              expression (typing/tast_iterator.ml[506,18000+4]..[506,18000+20])
                Pexp_ident "type_declaration" (typing/tast_iterator.ml[506,18000+4]..[506,18000+20])
            "type_declarations" (typing/tast_iterator.ml[507,18022+4]..[507,18022+21]) ghost
              expression (typing/tast_iterator.ml[507,18022+4]..[507,18022+21])
                Pexp_ident "type_declarations" (typing/tast_iterator.ml[507,18022+4]..[507,18022+21])
            "type_extension" (typing/tast_iterator.ml[508,18045+4]..[508,18045+18]) ghost
              expression (typing/tast_iterator.ml[508,18045+4]..[508,18045+18])
                Pexp_ident "type_extension" (typing/tast_iterator.ml[508,18045+4]..[508,18045+18])
            "type_exception" (typing/tast_iterator.ml[509,18065+4]..[509,18065+18]) ghost
              expression (typing/tast_iterator.ml[509,18065+4]..[509,18065+18])
                Pexp_ident "type_exception" (typing/tast_iterator.ml[509,18065+4]..[509,18065+18])
            "type_kind" (typing/tast_iterator.ml[510,18085+4]..[510,18085+13]) ghost
              expression (typing/tast_iterator.ml[510,18085+4]..[510,18085+13])
                Pexp_ident "type_kind" (typing/tast_iterator.ml[510,18085+4]..[510,18085+13])
            "value_binding" (typing/tast_iterator.ml[511,18100+4]..[511,18100+17]) ghost
              expression (typing/tast_iterator.ml[511,18100+4]..[511,18100+17])
                Pexp_ident "value_binding" (typing/tast_iterator.ml[511,18100+4]..[511,18100+17])
            "value_bindings" (typing/tast_iterator.ml[512,18119+4]..[512,18119+18]) ghost
              expression (typing/tast_iterator.ml[512,18119+4]..[512,18119+18])
                Pexp_ident "value_bindings" (typing/tast_iterator.ml[512,18119+4]..[512,18119+18])
            "value_description" (typing/tast_iterator.ml[513,18139+4]..[513,18139+21]) ghost
              expression (typing/tast_iterator.ml[513,18139+4]..[513,18139+21])
                Pexp_ident "value_description" (typing/tast_iterator.ml[513,18139+4]..[513,18139+21])
            "with_constraint" (typing/tast_iterator.ml[514,18162+4]..[514,18162+19]) ghost
              expression (typing/tast_iterator.ml[514,18162+4]..[514,18162+19])
                Pexp_ident "with_constraint" (typing/tast_iterator.ml[514,18162+4]..[514,18162+19])
          ]
          None
    ]
]

