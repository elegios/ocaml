[
  structure_item (lambda/lambda.ml[16,1079+0]..[16,1079+9])
    Pstr_open Fresh
    module_expr (lambda/lambda.ml[16,1079+5]..[16,1079+9])
      Pmod_ident "Misc" (lambda/lambda.ml[16,1079+5]..[16,1079+9])
  structure_item (lambda/lambda.ml[17,1089+0]..[17,1089+13])
    Pstr_open Fresh
    module_expr (lambda/lambda.ml[17,1089+5]..[17,1089+13])
      Pmod_ident "Asttypes" (lambda/lambda.ml[17,1089+5]..[17,1089+13])
  structure_item (lambda/lambda.ml[19,1104+0]..[27,1241+16])
    Pstr_type Rec
    [
      type_declaration "compile_time_constant" (lambda/lambda.ml[19,1104+5]..[19,1104+26]) (lambda/lambda.ml[19,1104+0]..[27,1241+16])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[20,1133+2]..[20,1133+14])
                "Big_endian" (lambda/lambda.ml[20,1133+4]..[20,1133+14])
                []
                None
              (lambda/lambda.ml[21,1148+2]..[21,1148+13])
                "Word_size" (lambda/lambda.ml[21,1148+4]..[21,1148+13])
                []
                None
              (lambda/lambda.ml[22,1162+2]..[22,1162+12])
                "Int_size" (lambda/lambda.ml[22,1162+4]..[22,1162+12])
                []
                None
              (lambda/lambda.ml[23,1175+2]..[23,1175+14])
                "Max_wosize" (lambda/lambda.ml[23,1175+4]..[23,1175+14])
                []
                None
              (lambda/lambda.ml[24,1190+2]..[24,1190+15])
                "Ostype_unix" (lambda/lambda.ml[24,1190+4]..[24,1190+15])
                []
                None
              (lambda/lambda.ml[25,1206+2]..[25,1206+16])
                "Ostype_win32" (lambda/lambda.ml[25,1206+4]..[25,1206+16])
                []
                None
              (lambda/lambda.ml[26,1223+2]..[26,1223+17])
                "Ostype_cygwin" (lambda/lambda.ml[26,1223+4]..[26,1223+17])
                []
                None
              (lambda/lambda.ml[27,1241+2]..[27,1241+16])
                "Backend_type" (lambda/lambda.ml[27,1241+4]..[27,1241+16])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/lambda.ml[29,1259+0]..[31,1301+11])
    Pstr_type Rec
    [
      type_declaration "immediate_or_pointer" (lambda/lambda.ml[29,1259+5]..[29,1259+25]) (lambda/lambda.ml[29,1259+0]..[31,1301+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[30,1287+2]..[30,1287+13])
                "Immediate" (lambda/lambda.ml[30,1287+4]..[30,1287+13])
                []
                None
              (lambda/lambda.ml[31,1301+2]..[31,1301+11])
                "Pointer" (lambda/lambda.ml[31,1301+4]..[31,1301+11])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/lambda.ml[33,1314+0]..[36,1389+23])
    Pstr_type Rec
    [
      type_declaration "initialization_or_assignment" (lambda/lambda.ml[33,1314+5]..[33,1314+33]) (lambda/lambda.ml[33,1314+0]..[36,1389+23])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[34,1350+2]..[34,1350+14])
                "Assignment" (lambda/lambda.ml[34,1350+4]..[34,1350+14])
                []
                None
              (lambda/lambda.ml[35,1365+2]..[35,1365+23])
                "Heap_initialization" (lambda/lambda.ml[35,1365+4]..[35,1365+23])
                []
                None
              (lambda/lambda.ml[36,1389+2]..[36,1389+23])
                "Root_initialization" (lambda/lambda.ml[36,1389+4]..[36,1389+23])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/lambda.ml[38,1414+0]..[40,1438+10])
    Pstr_type Rec
    [
      type_declaration "is_safe" (lambda/lambda.ml[38,1414+5]..[38,1414+12]) (lambda/lambda.ml[38,1414+0]..[40,1438+10])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[39,1429+2]..[39,1429+8])
                "Safe" (lambda/lambda.ml[39,1429+4]..[39,1429+8])
                []
                None
              (lambda/lambda.ml[40,1438+2]..[40,1438+10])
                "Unsafe" (lambda/lambda.ml[40,1438+4]..[40,1438+10])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/lambda.ml[42,1450+0]..[179,5887+17])
    Pstr_type Rec
    [
      type_declaration "primitive" (lambda/lambda.ml[42,1450+5]..[42,1450+14]) (lambda/lambda.ml[42,1450+0]..[142,4980+11])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[43,1467+2]..[43,1467+20])
                "Pbytes_to_string" (lambda/lambda.ml[43,1467+4]..[43,1467+20])
                []
                None
              (lambda/lambda.ml[44,1488+2]..[44,1488+20])
                "Pbytes_of_string" (lambda/lambda.ml[44,1488+4]..[44,1488+20])
                []
                None
              (lambda/lambda.ml[45,1509+2]..[45,1509+11])
                "Pignore" (lambda/lambda.ml[45,1509+4]..[45,1509+11])
                []
                None
              (lambda/lambda.ml[47,1539+2]..[47,1539+25])
                "Pgetglobal" (lambda/lambda.ml[47,1539+4]..[47,1539+14])
                [
                  core_type (lambda/lambda.ml[47,1539+18]..[47,1539+25])
                    Ptyp_constr "Ident.t" (lambda/lambda.ml[47,1539+18]..[47,1539+25])
                    []
                ]
                None
              (lambda/lambda.ml[48,1565+2]..[48,1565+25])
                "Psetglobal" (lambda/lambda.ml[48,1565+4]..[48,1565+14])
                [
                  core_type (lambda/lambda.ml[48,1565+18]..[48,1565+25])
                    Ptyp_constr "Ident.t" (lambda/lambda.ml[48,1565+18]..[48,1565+25])
                    []
                ]
                None
              (lambda/lambda.ml[50,1625+2]..[50,1625+50])
                "Pmakeblock" (lambda/lambda.ml[50,1625+4]..[50,1625+14])
                [
                  core_type (lambda/lambda.ml[50,1625+18]..[50,1625+21])
                    Ptyp_constr "int" (lambda/lambda.ml[50,1625+18]..[50,1625+21])
                    []
                  core_type (lambda/lambda.ml[50,1625+24]..[50,1625+36])
                    Ptyp_constr "mutable_flag" (lambda/lambda.ml[50,1625+24]..[50,1625+36])
                    []
                  core_type (lambda/lambda.ml[50,1625+39]..[50,1625+50])
                    Ptyp_constr "block_shape" (lambda/lambda.ml[50,1625+39]..[50,1625+50])
                    []
                ]
                None
              (lambda/lambda.ml[51,1676+2]..[51,1676+17])
                "Pfield" (lambda/lambda.ml[51,1676+4]..[51,1676+10])
                [
                  core_type (lambda/lambda.ml[51,1676+14]..[51,1676+17])
                    Ptyp_constr "int" (lambda/lambda.ml[51,1676+14]..[51,1676+17])
                    []
                ]
                None
              (lambda/lambda.ml[52,1694+2]..[52,1694+19])
                "Pfield_computed" (lambda/lambda.ml[52,1694+4]..[52,1694+19])
                []
                None
              (lambda/lambda.ml[53,1714+2]..[53,1714+74])
                "Psetfield" (lambda/lambda.ml[53,1714+4]..[53,1714+13])
                [
                  core_type (lambda/lambda.ml[53,1714+17]..[53,1714+20])
                    Ptyp_constr "int" (lambda/lambda.ml[53,1714+17]..[53,1714+20])
                    []
                  core_type (lambda/lambda.ml[53,1714+23]..[53,1714+43])
                    Ptyp_constr "immediate_or_pointer" (lambda/lambda.ml[53,1714+23]..[53,1714+43])
                    []
                  core_type (lambda/lambda.ml[53,1714+46]..[53,1714+74])
                    Ptyp_constr "initialization_or_assignment" (lambda/lambda.ml[53,1714+46]..[53,1714+74])
                    []
                ]
                None
              (lambda/lambda.ml[54,1789+2]..[54,1789+77])
                "Psetfield_computed" (lambda/lambda.ml[54,1789+4]..[54,1789+22])
                [
                  core_type (lambda/lambda.ml[54,1789+26]..[54,1789+46])
                    Ptyp_constr "immediate_or_pointer" (lambda/lambda.ml[54,1789+26]..[54,1789+46])
                    []
                  core_type (lambda/lambda.ml[54,1789+49]..[54,1789+77])
                    Ptyp_constr "initialization_or_assignment" (lambda/lambda.ml[54,1789+49]..[54,1789+77])
                    []
                ]
                None
              (lambda/lambda.ml[55,1867+2]..[55,1867+22])
                "Pfloatfield" (lambda/lambda.ml[55,1867+4]..[55,1867+15])
                [
                  core_type (lambda/lambda.ml[55,1867+19]..[55,1867+22])
                    Ptyp_constr "int" (lambda/lambda.ml[55,1867+19]..[55,1867+22])
                    []
                ]
                None
              (lambda/lambda.ml[56,1890+2]..[56,1890+56])
                "Psetfloatfield" (lambda/lambda.ml[56,1890+4]..[56,1890+18])
                [
                  core_type (lambda/lambda.ml[56,1890+22]..[56,1890+25])
                    Ptyp_constr "int" (lambda/lambda.ml[56,1890+22]..[56,1890+25])
                    []
                  core_type (lambda/lambda.ml[56,1890+28]..[56,1890+56])
                    Ptyp_constr "initialization_or_assignment" (lambda/lambda.ml[56,1890+28]..[56,1890+56])
                    []
                ]
                None
              (lambda/lambda.ml[57,1947+2]..[57,1947+51])
                "Pduprecord" (lambda/lambda.ml[57,1947+4]..[57,1947+14])
                [
                  core_type (lambda/lambda.ml[57,1947+18]..[57,1947+45])
                    Ptyp_constr "Types.record_representation" (lambda/lambda.ml[57,1947+18]..[57,1947+45])
                    []
                  core_type (lambda/lambda.ml[57,1947+48]..[57,1947+51])
                    Ptyp_constr "int" (lambda/lambda.ml[57,1947+48]..[57,1947+51])
                    []
                ]
                None
              (lambda/lambda.ml[60,2047+2]..[60,2047+35])
                "Pccall" (lambda/lambda.ml[60,2047+4]..[60,2047+10])
                [
                  core_type (lambda/lambda.ml[60,2047+14]..[60,2047+35])
                    Ptyp_constr "Primitive.description" (lambda/lambda.ml[60,2047+14]..[60,2047+35])
                    []
                ]
                None
              (lambda/lambda.ml[62,2102+2]..[62,2102+24])
                "Praise" (lambda/lambda.ml[62,2102+4]..[62,2102+10])
                [
                  core_type (lambda/lambda.ml[62,2102+14]..[62,2102+24])
                    Ptyp_constr "raise_kind" (lambda/lambda.ml[62,2102+14]..[62,2102+24])
                    []
                ]
                None
              (lambda/lambda.ml[64,2154+2]..[64,2154+12])
                "Psequand" (lambda/lambda.ml[64,2154+4]..[64,2154+12])
                []
                None
              (lambda/lambda.ml[64,2154+13]..[64,2154+22])
                "Psequor" (lambda/lambda.ml[64,2154+15]..[64,2154+22])
                []
                None
              (lambda/lambda.ml[64,2154+23]..[64,2154+29])
                "Pnot" (lambda/lambda.ml[64,2154+25]..[64,2154+29])
                []
                None
              (lambda/lambda.ml[66,2211+2]..[66,2211+11])
                "Pnegint" (lambda/lambda.ml[66,2211+4]..[66,2211+11])
                []
                None
              (lambda/lambda.ml[66,2211+12]..[66,2211+21])
                "Paddint" (lambda/lambda.ml[66,2211+14]..[66,2211+21])
                []
                None
              (lambda/lambda.ml[66,2211+22]..[66,2211+31])
                "Psubint" (lambda/lambda.ml[66,2211+24]..[66,2211+31])
                []
                None
              (lambda/lambda.ml[66,2211+32]..[66,2211+41])
                "Pmulint" (lambda/lambda.ml[66,2211+34]..[66,2211+41])
                []
                None
              (lambda/lambda.ml[67,2253+2]..[67,2253+22])
                "Pdivint" (lambda/lambda.ml[67,2253+4]..[67,2253+11])
                [
                  core_type (lambda/lambda.ml[67,2253+15]..[67,2253+22])
                    Ptyp_constr "is_safe" (lambda/lambda.ml[67,2253+15]..[67,2253+22])
                    []
                ]
                None
              (lambda/lambda.ml[67,2253+23]..[67,2253+43])
                "Pmodint" (lambda/lambda.ml[67,2253+25]..[67,2253+32])
                [
                  core_type (lambda/lambda.ml[67,2253+36]..[67,2253+43])
                    Ptyp_constr "is_safe" (lambda/lambda.ml[67,2253+36]..[67,2253+43])
                    []
                ]
                None
              (lambda/lambda.ml[68,2297+2]..[68,2297+11])
                "Pandint" (lambda/lambda.ml[68,2297+4]..[68,2297+11])
                []
                None
              (lambda/lambda.ml[68,2297+12]..[68,2297+20])
                "Porint" (lambda/lambda.ml[68,2297+14]..[68,2297+20])
                []
                None
              (lambda/lambda.ml[68,2297+21]..[68,2297+30])
                "Pxorint" (lambda/lambda.ml[68,2297+23]..[68,2297+30])
                []
                None
              (lambda/lambda.ml[69,2328+2]..[69,2328+11])
                "Plslint" (lambda/lambda.ml[69,2328+4]..[69,2328+11])
                []
                None
              (lambda/lambda.ml[69,2328+12]..[69,2328+21])
                "Plsrint" (lambda/lambda.ml[69,2328+14]..[69,2328+21])
                []
                None
              (lambda/lambda.ml[69,2328+22]..[69,2328+31])
                "Pasrint" (lambda/lambda.ml[69,2328+24]..[69,2328+31])
                []
                None
              (lambda/lambda.ml[70,2360+2]..[70,2360+34])
                "Pintcomp" (lambda/lambda.ml[70,2360+4]..[70,2360+12])
                [
                  core_type (lambda/lambda.ml[70,2360+16]..[70,2360+34])
                    Ptyp_constr "integer_comparison" (lambda/lambda.ml[70,2360+16]..[70,2360+34])
                    []
                ]
                None
              (lambda/lambda.ml[71,2395+2]..[71,2395+17])
                "Pcompare_ints" (lambda/lambda.ml[71,2395+4]..[71,2395+17])
                []
                None
              (lambda/lambda.ml[71,2395+18]..[71,2395+35])
                "Pcompare_floats" (lambda/lambda.ml[71,2395+20]..[71,2395+35])
                []
                None
              (lambda/lambda.ml[71,2395+36]..[71,2395+69])
                "Pcompare_bints" (lambda/lambda.ml[71,2395+38]..[71,2395+52])
                [
                  core_type (lambda/lambda.ml[71,2395+56]..[71,2395+69])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[71,2395+56]..[71,2395+69])
                    []
                ]
                None
              (lambda/lambda.ml[72,2465+2]..[72,2465+21])
                "Poffsetint" (lambda/lambda.ml[72,2465+4]..[72,2465+14])
                [
                  core_type (lambda/lambda.ml[72,2465+18]..[72,2465+21])
                    Ptyp_constr "int" (lambda/lambda.ml[72,2465+18]..[72,2465+21])
                    []
                ]
                None
              (lambda/lambda.ml[73,2487+2]..[73,2487+21])
                "Poffsetref" (lambda/lambda.ml[73,2487+4]..[73,2487+14])
                [
                  core_type (lambda/lambda.ml[73,2487+18]..[73,2487+21])
                    Ptyp_constr "int" (lambda/lambda.ml[73,2487+18]..[73,2487+21])
                    []
                ]
                None
              (lambda/lambda.ml[75,2534+2]..[75,2534+15])
                "Pintoffloat" (lambda/lambda.ml[75,2534+4]..[75,2534+15])
                []
                None
              (lambda/lambda.ml[75,2534+16]..[75,2534+29])
                "Pfloatofint" (lambda/lambda.ml[75,2534+18]..[75,2534+29])
                []
                None
              (lambda/lambda.ml[76,2564+2]..[76,2564+13])
                "Pnegfloat" (lambda/lambda.ml[76,2564+4]..[76,2564+13])
                []
                None
              (lambda/lambda.ml[76,2564+14]..[76,2564+25])
                "Pabsfloat" (lambda/lambda.ml[76,2564+16]..[76,2564+25])
                []
                None
              (lambda/lambda.ml[77,2590+2]..[77,2590+13])
                "Paddfloat" (lambda/lambda.ml[77,2590+4]..[77,2590+13])
                []
                None
              (lambda/lambda.ml[77,2590+14]..[77,2590+25])
                "Psubfloat" (lambda/lambda.ml[77,2590+16]..[77,2590+25])
                []
                None
              (lambda/lambda.ml[77,2590+26]..[77,2590+37])
                "Pmulfloat" (lambda/lambda.ml[77,2590+28]..[77,2590+37])
                []
                None
              (lambda/lambda.ml[77,2590+38]..[77,2590+49])
                "Pdivfloat" (lambda/lambda.ml[77,2590+40]..[77,2590+49])
                []
                None
              (lambda/lambda.ml[78,2640+2]..[78,2640+34])
                "Pfloatcomp" (lambda/lambda.ml[78,2640+4]..[78,2640+14])
                [
                  core_type (lambda/lambda.ml[78,2640+18]..[78,2640+34])
                    Ptyp_constr "float_comparison" (lambda/lambda.ml[78,2640+18]..[78,2640+34])
                    []
                ]
                None
              (lambda/lambda.ml[80,2701+2]..[80,2701+17])
                "Pstringlength" (lambda/lambda.ml[80,2701+4]..[80,2701+17])
                []
                None
              (lambda/lambda.ml[80,2701+18]..[80,2701+31])
                "Pstringrefu" (lambda/lambda.ml[80,2701+20]..[80,2701+31])
                []
                None
              (lambda/lambda.ml[80,2701+33]..[80,2701+46])
                "Pstringrefs" (lambda/lambda.ml[80,2701+35]..[80,2701+46])
                []
                None
              (lambda/lambda.ml[81,2748+2]..[81,2748+16])
                "Pbyteslength" (lambda/lambda.ml[81,2748+4]..[81,2748+16])
                []
                None
              (lambda/lambda.ml[81,2748+17]..[81,2748+29])
                "Pbytesrefu" (lambda/lambda.ml[81,2748+19]..[81,2748+29])
                []
                None
              (lambda/lambda.ml[81,2748+30]..[81,2748+42])
                "Pbytessetu" (lambda/lambda.ml[81,2748+32]..[81,2748+42])
                []
                None
              (lambda/lambda.ml[81,2748+43]..[81,2748+55])
                "Pbytesrefs" (lambda/lambda.ml[81,2748+45]..[81,2748+55])
                []
                None
              (lambda/lambda.ml[81,2748+56]..[81,2748+68])
                "Pbytessets" (lambda/lambda.ml[81,2748+58]..[81,2748+68])
                []
                None
              (lambda/lambda.ml[83,2842+2]..[83,2842+43])
                "Pmakearray" (lambda/lambda.ml[83,2842+4]..[83,2842+14])
                [
                  core_type (lambda/lambda.ml[83,2842+18]..[83,2842+28])
                    Ptyp_constr "array_kind" (lambda/lambda.ml[83,2842+18]..[83,2842+28])
                    []
                  core_type (lambda/lambda.ml[83,2842+31]..[83,2842+43])
                    Ptyp_constr "mutable_flag" (lambda/lambda.ml[83,2842+31]..[83,2842+43])
                    []
                ]
                None
              (lambda/lambda.ml[84,2886+2]..[84,2886+42])
                "Pduparray" (lambda/lambda.ml[84,2886+4]..[84,2886+13])
                [
                  core_type (lambda/lambda.ml[84,2886+17]..[84,2886+27])
                    Ptyp_constr "array_kind" (lambda/lambda.ml[84,2886+17]..[84,2886+27])
                    []
                  core_type (lambda/lambda.ml[84,2886+30]..[84,2886+42])
                    Ptyp_constr "mutable_flag" (lambda/lambda.ml[84,2886+30]..[84,2886+42])
                    []
                ]
                None
              (lambda/lambda.ml[85,2929+2]..[85,2929+30])
                "Parraylength" (lambda/lambda.ml[85,2929+4]..[85,2929+16])
                [
                  core_type (lambda/lambda.ml[85,2929+20]..[85,2929+30])
                    Ptyp_constr "array_kind" (lambda/lambda.ml[85,2929+20]..[85,2929+30])
                    []
                ]
                None
              (lambda/lambda.ml[86,2960+2]..[86,2960+28])
                "Parrayrefu" (lambda/lambda.ml[86,2960+4]..[86,2960+14])
                [
                  core_type (lambda/lambda.ml[86,2960+18]..[86,2960+28])
                    Ptyp_constr "array_kind" (lambda/lambda.ml[86,2960+18]..[86,2960+28])
                    []
                ]
                None
              (lambda/lambda.ml[87,2989+2]..[87,2989+28])
                "Parraysetu" (lambda/lambda.ml[87,2989+4]..[87,2989+14])
                [
                  core_type (lambda/lambda.ml[87,2989+18]..[87,2989+28])
                    Ptyp_constr "array_kind" (lambda/lambda.ml[87,2989+18]..[87,2989+28])
                    []
                ]
                None
              (lambda/lambda.ml[88,3018+2]..[88,3018+28])
                "Parrayrefs" (lambda/lambda.ml[88,3018+4]..[88,3018+14])
                [
                  core_type (lambda/lambda.ml[88,3018+18]..[88,3018+28])
                    Ptyp_constr "array_kind" (lambda/lambda.ml[88,3018+18]..[88,3018+28])
                    []
                ]
                None
              (lambda/lambda.ml[89,3047+2]..[89,3047+28])
                "Parraysets" (lambda/lambda.ml[89,3047+4]..[89,3047+14])
                [
                  core_type (lambda/lambda.ml[89,3047+18]..[89,3047+28])
                    Ptyp_constr "array_kind" (lambda/lambda.ml[89,3047+18]..[89,3047+28])
                    []
                ]
                None
              (lambda/lambda.ml[91,3140+2]..[91,3140+10])
                "Pisint" (lambda/lambda.ml[91,3140+4]..[91,3140+10])
                []
                None
              (lambda/lambda.ml[93,3213+2]..[93,3213+10])
                "Pisout" (lambda/lambda.ml[93,3213+4]..[93,3213+10])
                []
                None
              (lambda/lambda.ml[95,3293+2]..[95,3293+31])
                "Pbintofint" (lambda/lambda.ml[95,3293+4]..[95,3293+14])
                [
                  core_type (lambda/lambda.ml[95,3293+18]..[95,3293+31])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[95,3293+18]..[95,3293+31])
                    []
                ]
                None
              (lambda/lambda.ml[96,3325+2]..[96,3325+31])
                "Pintofbint" (lambda/lambda.ml[96,3325+4]..[96,3325+14])
                [
                  core_type (lambda/lambda.ml[96,3325+18]..[96,3325+31])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[96,3325+18]..[96,3325+31])
                    []
                ]
                None
              (lambda/lambda.ml[97,3357+2]..[97,3357+56])
                "Pcvtbint" (lambda/lambda.ml[97,3357+4]..[97,3357+12])
                [
                  core_type (lambda/lambda.ml[97,3357+16]..[97,3357+29])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[97,3357+16]..[97,3357+29])
                    []
                  core_type (lambda/lambda.ml[97,3357+43]..[97,3357+56])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[97,3357+43]..[97,3357+56])
                    []
                ]
                None
              (lambda/lambda.ml[98,3430+2]..[98,3430+29])
                "Pnegbint" (lambda/lambda.ml[98,3430+4]..[98,3430+12])
                [
                  core_type (lambda/lambda.ml[98,3430+16]..[98,3430+29])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[98,3430+16]..[98,3430+29])
                    []
                ]
                None
              (lambda/lambda.ml[99,3460+2]..[99,3460+29])
                "Paddbint" (lambda/lambda.ml[99,3460+4]..[99,3460+12])
                [
                  core_type (lambda/lambda.ml[99,3460+16]..[99,3460+29])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[99,3460+16]..[99,3460+29])
                    []
                ]
                None
              (lambda/lambda.ml[100,3490+2]..[100,3490+29])
                "Psubbint" (lambda/lambda.ml[100,3490+4]..[100,3490+12])
                [
                  core_type (lambda/lambda.ml[100,3490+16]..[100,3490+29])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[100,3490+16]..[100,3490+29])
                    []
                ]
                None
              (lambda/lambda.ml[101,3520+2]..[101,3520+29])
                "Pmulbint" (lambda/lambda.ml[101,3520+4]..[101,3520+12])
                [
                  core_type (lambda/lambda.ml[101,3520+16]..[101,3520+29])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[101,3520+16]..[101,3520+29])
                    []
                ]
                None
              (lambda/lambda.ml[102,3550+2]..[102,3550+59])
                "Pdivbint" (lambda/lambda.ml[102,3550+4]..[102,3550+12])
                [
                  (lambda/lambda.ml[102,3550+18]..[102,3550+39])
                    Immutable
                    "size" (lambda/lambda.ml[102,3550+18]..[102,3550+22])                    core_type (lambda/lambda.ml[102,3550+25]..[102,3550+38])
                      Ptyp_constr "boxed_integer" (lambda/lambda.ml[102,3550+25]..[102,3550+38])
                      []
                  (lambda/lambda.ml[102,3550+40]..[102,3550+57])
                    Immutable
                    "is_safe" (lambda/lambda.ml[102,3550+40]..[102,3550+47])                    core_type (lambda/lambda.ml[102,3550+50]..[102,3550+57])
                      Ptyp_constr "is_safe" (lambda/lambda.ml[102,3550+50]..[102,3550+57])
                      []
                ]
                None
              (lambda/lambda.ml[103,3610+2]..[103,3610+59])
                "Pmodbint" (lambda/lambda.ml[103,3610+4]..[103,3610+12])
                [
                  (lambda/lambda.ml[103,3610+18]..[103,3610+39])
                    Immutable
                    "size" (lambda/lambda.ml[103,3610+18]..[103,3610+22])                    core_type (lambda/lambda.ml[103,3610+25]..[103,3610+38])
                      Ptyp_constr "boxed_integer" (lambda/lambda.ml[103,3610+25]..[103,3610+38])
                      []
                  (lambda/lambda.ml[103,3610+40]..[103,3610+57])
                    Immutable
                    "is_safe" (lambda/lambda.ml[103,3610+40]..[103,3610+47])                    core_type (lambda/lambda.ml[103,3610+50]..[103,3610+57])
                      Ptyp_constr "is_safe" (lambda/lambda.ml[103,3610+50]..[103,3610+57])
                      []
                ]
                None
              (lambda/lambda.ml[104,3670+2]..[104,3670+29])
                "Pandbint" (lambda/lambda.ml[104,3670+4]..[104,3670+12])
                [
                  core_type (lambda/lambda.ml[104,3670+16]..[104,3670+29])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[104,3670+16]..[104,3670+29])
                    []
                ]
                None
              (lambda/lambda.ml[105,3700+2]..[105,3700+28])
                "Porbint" (lambda/lambda.ml[105,3700+4]..[105,3700+11])
                [
                  core_type (lambda/lambda.ml[105,3700+15]..[105,3700+28])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[105,3700+15]..[105,3700+28])
                    []
                ]
                None
              (lambda/lambda.ml[106,3729+2]..[106,3729+29])
                "Pxorbint" (lambda/lambda.ml[106,3729+4]..[106,3729+12])
                [
                  core_type (lambda/lambda.ml[106,3729+16]..[106,3729+29])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[106,3729+16]..[106,3729+29])
                    []
                ]
                None
              (lambda/lambda.ml[107,3759+2]..[107,3759+29])
                "Plslbint" (lambda/lambda.ml[107,3759+4]..[107,3759+12])
                [
                  core_type (lambda/lambda.ml[107,3759+16]..[107,3759+29])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[107,3759+16]..[107,3759+29])
                    []
                ]
                None
              (lambda/lambda.ml[108,3789+2]..[108,3789+29])
                "Plsrbint" (lambda/lambda.ml[108,3789+4]..[108,3789+12])
                [
                  core_type (lambda/lambda.ml[108,3789+16]..[108,3789+29])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[108,3789+16]..[108,3789+29])
                    []
                ]
                None
              (lambda/lambda.ml[109,3819+2]..[109,3819+29])
                "Pasrbint" (lambda/lambda.ml[109,3819+4]..[109,3819+12])
                [
                  core_type (lambda/lambda.ml[109,3819+16]..[109,3819+29])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[109,3819+16]..[109,3819+29])
                    []
                ]
                None
              (lambda/lambda.ml[110,3849+2]..[110,3849+51])
                "Pbintcomp" (lambda/lambda.ml[110,3849+4]..[110,3849+13])
                [
                  core_type (lambda/lambda.ml[110,3849+17]..[110,3849+30])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[110,3849+17]..[110,3849+30])
                    []
                  core_type (lambda/lambda.ml[110,3849+33]..[110,3849+51])
                    Ptyp_constr "integer_comparison" (lambda/lambda.ml[110,3849+33]..[110,3849+51])
                    []
                ]
                None
              (lambda/lambda.ml[112,3970+2]..[112,3970+64])
                "Pbigarrayref" (lambda/lambda.ml[112,3970+4]..[112,3970+16])
                [
                  core_type (lambda/lambda.ml[112,3970+20]..[112,3970+24])
                    Ptyp_constr "bool" (lambda/lambda.ml[112,3970+20]..[112,3970+24])
                    []
                  core_type (lambda/lambda.ml[112,3970+27]..[112,3970+30])
                    Ptyp_constr "int" (lambda/lambda.ml[112,3970+27]..[112,3970+30])
                    []
                  core_type (lambda/lambda.ml[112,3970+33]..[112,3970+46])
                    Ptyp_constr "bigarray_kind" (lambda/lambda.ml[112,3970+33]..[112,3970+46])
                    []
                  core_type (lambda/lambda.ml[112,3970+49]..[112,3970+64])
                    Ptyp_constr "bigarray_layout" (lambda/lambda.ml[112,3970+49]..[112,3970+64])
                    []
                ]
                None
              (lambda/lambda.ml[113,4035+2]..[113,4035+64])
                "Pbigarrayset" (lambda/lambda.ml[113,4035+4]..[113,4035+16])
                [
                  core_type (lambda/lambda.ml[113,4035+20]..[113,4035+24])
                    Ptyp_constr "bool" (lambda/lambda.ml[113,4035+20]..[113,4035+24])
                    []
                  core_type (lambda/lambda.ml[113,4035+27]..[113,4035+30])
                    Ptyp_constr "int" (lambda/lambda.ml[113,4035+27]..[113,4035+30])
                    []
                  core_type (lambda/lambda.ml[113,4035+33]..[113,4035+46])
                    Ptyp_constr "bigarray_kind" (lambda/lambda.ml[113,4035+33]..[113,4035+46])
                    []
                  core_type (lambda/lambda.ml[113,4035+49]..[113,4035+64])
                    Ptyp_constr "bigarray_layout" (lambda/lambda.ml[113,4035+49]..[113,4035+64])
                    []
                ]
                None
              (lambda/lambda.ml[115,4148+2]..[115,4148+23])
                "Pbigarraydim" (lambda/lambda.ml[115,4148+4]..[115,4148+16])
                [
                  core_type (lambda/lambda.ml[115,4148+20]..[115,4148+23])
                    Ptyp_constr "int" (lambda/lambda.ml[115,4148+20]..[115,4148+23])
                    []
                ]
                None
              (lambda/lambda.ml[117,4226+2]..[117,4226+27])
                "Pstring_load_16" (lambda/lambda.ml[117,4226+4]..[117,4226+19])
                [
                  core_type (lambda/lambda.ml[117,4226+23]..[117,4226+27])
                    Ptyp_constr "bool" (lambda/lambda.ml[117,4226+23]..[117,4226+27])
                    []
                ]
                None
              (lambda/lambda.ml[118,4254+2]..[118,4254+27])
                "Pstring_load_32" (lambda/lambda.ml[118,4254+4]..[118,4254+19])
                [
                  core_type (lambda/lambda.ml[118,4254+23]..[118,4254+27])
                    Ptyp_constr "bool" (lambda/lambda.ml[118,4254+23]..[118,4254+27])
                    []
                ]
                None
              (lambda/lambda.ml[119,4282+2]..[119,4282+27])
                "Pstring_load_64" (lambda/lambda.ml[119,4282+4]..[119,4282+19])
                [
                  core_type (lambda/lambda.ml[119,4282+23]..[119,4282+27])
                    Ptyp_constr "bool" (lambda/lambda.ml[119,4282+23]..[119,4282+27])
                    []
                ]
                None
              (lambda/lambda.ml[120,4310+2]..[120,4310+26])
                "Pbytes_load_16" (lambda/lambda.ml[120,4310+4]..[120,4310+18])
                [
                  core_type (lambda/lambda.ml[120,4310+22]..[120,4310+26])
                    Ptyp_constr "bool" (lambda/lambda.ml[120,4310+22]..[120,4310+26])
                    []
                ]
                None
              (lambda/lambda.ml[121,4337+2]..[121,4337+26])
                "Pbytes_load_32" (lambda/lambda.ml[121,4337+4]..[121,4337+18])
                [
                  core_type (lambda/lambda.ml[121,4337+22]..[121,4337+26])
                    Ptyp_constr "bool" (lambda/lambda.ml[121,4337+22]..[121,4337+26])
                    []
                ]
                None
              (lambda/lambda.ml[122,4364+2]..[122,4364+26])
                "Pbytes_load_64" (lambda/lambda.ml[122,4364+4]..[122,4364+18])
                [
                  core_type (lambda/lambda.ml[122,4364+22]..[122,4364+26])
                    Ptyp_constr "bool" (lambda/lambda.ml[122,4364+22]..[122,4364+26])
                    []
                ]
                None
              (lambda/lambda.ml[123,4391+2]..[123,4391+25])
                "Pbytes_set_16" (lambda/lambda.ml[123,4391+4]..[123,4391+17])
                [
                  core_type (lambda/lambda.ml[123,4391+21]..[123,4391+25])
                    Ptyp_constr "bool" (lambda/lambda.ml[123,4391+21]..[123,4391+25])
                    []
                ]
                None
              (lambda/lambda.ml[124,4417+2]..[124,4417+25])
                "Pbytes_set_32" (lambda/lambda.ml[124,4417+4]..[124,4417+17])
                [
                  core_type (lambda/lambda.ml[124,4417+21]..[124,4417+25])
                    Ptyp_constr "bool" (lambda/lambda.ml[124,4417+21]..[124,4417+25])
                    []
                ]
                None
              (lambda/lambda.ml[125,4443+2]..[125,4443+25])
                "Pbytes_set_64" (lambda/lambda.ml[125,4443+4]..[125,4443+17])
                [
                  core_type (lambda/lambda.ml[125,4443+21]..[125,4443+25])
                    Ptyp_constr "bool" (lambda/lambda.ml[125,4443+21]..[125,4443+25])
                    []
                ]
                None
              (lambda/lambda.ml[128,4577+2]..[128,4577+30])
                "Pbigstring_load_16" (lambda/lambda.ml[128,4577+4]..[128,4577+22])
                [
                  core_type (lambda/lambda.ml[128,4577+26]..[128,4577+30])
                    Ptyp_constr "bool" (lambda/lambda.ml[128,4577+26]..[128,4577+30])
                    []
                ]
                None
              (lambda/lambda.ml[129,4608+2]..[129,4608+30])
                "Pbigstring_load_32" (lambda/lambda.ml[129,4608+4]..[129,4608+22])
                [
                  core_type (lambda/lambda.ml[129,4608+26]..[129,4608+30])
                    Ptyp_constr "bool" (lambda/lambda.ml[129,4608+26]..[129,4608+30])
                    []
                ]
                None
              (lambda/lambda.ml[130,4639+2]..[130,4639+30])
                "Pbigstring_load_64" (lambda/lambda.ml[130,4639+4]..[130,4639+22])
                [
                  core_type (lambda/lambda.ml[130,4639+26]..[130,4639+30])
                    Ptyp_constr "bool" (lambda/lambda.ml[130,4639+26]..[130,4639+30])
                    []
                ]
                None
              (lambda/lambda.ml[131,4670+2]..[131,4670+29])
                "Pbigstring_set_16" (lambda/lambda.ml[131,4670+4]..[131,4670+21])
                [
                  core_type (lambda/lambda.ml[131,4670+25]..[131,4670+29])
                    Ptyp_constr "bool" (lambda/lambda.ml[131,4670+25]..[131,4670+29])
                    []
                ]
                None
              (lambda/lambda.ml[132,4700+2]..[132,4700+29])
                "Pbigstring_set_32" (lambda/lambda.ml[132,4700+4]..[132,4700+21])
                [
                  core_type (lambda/lambda.ml[132,4700+25]..[132,4700+29])
                    Ptyp_constr "bool" (lambda/lambda.ml[132,4700+25]..[132,4700+29])
                    []
                ]
                None
              (lambda/lambda.ml[133,4730+2]..[133,4730+29])
                "Pbigstring_set_64" (lambda/lambda.ml[133,4730+4]..[133,4730+21])
                [
                  core_type (lambda/lambda.ml[133,4730+25]..[133,4730+29])
                    Ptyp_constr "bool" (lambda/lambda.ml[133,4730+25]..[133,4730+29])
                    []
                ]
                None
              (lambda/lambda.ml[135,4791+2]..[135,4791+37])
                "Pctconst" (lambda/lambda.ml[135,4791+4]..[135,4791+12])
                [
                  core_type (lambda/lambda.ml[135,4791+16]..[135,4791+37])
                    Ptyp_constr "compile_time_constant" (lambda/lambda.ml[135,4791+16]..[135,4791+37])
                    []
                ]
                None
              (lambda/lambda.ml[137,4847+2]..[137,4847+12])
                "Pbswap16" (lambda/lambda.ml[137,4847+4]..[137,4847+12])
                []
                None
              (lambda/lambda.ml[138,4860+2]..[138,4860+28])
                "Pbbswap" (lambda/lambda.ml[138,4860+4]..[138,4860+11])
                [
                  core_type (lambda/lambda.ml[138,4860+15]..[138,4860+28])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[138,4860+15]..[138,4860+28])
                    []
                ]
                None
              (lambda/lambda.ml[140,4925+2]..[140,4925+19])
                "Pint_as_pointer" (lambda/lambda.ml[140,4925+4]..[140,4925+19])
                []
                None
              (lambda/lambda.ml[142,4980+2]..[142,4980+11])
                "Popaque" (lambda/lambda.ml[142,4980+4]..[142,4980+11])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "integer_comparison" (lambda/lambda.ml[144,4993+4]..[144,4993+22]) (lambda/lambda.ml[144,4993+0]..[145,5018+37])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[145,5018+4]..[145,5018+7])
                "Ceq" (lambda/lambda.ml[145,5018+4]..[145,5018+7])
                []
                None
              (lambda/lambda.ml[145,5018+8]..[145,5018+13])
                "Cne" (lambda/lambda.ml[145,5018+10]..[145,5018+13])
                []
                None
              (lambda/lambda.ml[145,5018+14]..[145,5018+19])
                "Clt" (lambda/lambda.ml[145,5018+16]..[145,5018+19])
                []
                None
              (lambda/lambda.ml[145,5018+20]..[145,5018+25])
                "Cgt" (lambda/lambda.ml[145,5018+22]..[145,5018+25])
                []
                None
              (lambda/lambda.ml[145,5018+26]..[145,5018+31])
                "Cle" (lambda/lambda.ml[145,5018+28]..[145,5018+31])
                []
                None
              (lambda/lambda.ml[145,5018+32]..[145,5018+37])
                "Cge" (lambda/lambda.ml[145,5018+34]..[145,5018+37])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "float_comparison" (lambda/lambda.ml[147,5057+4]..[147,5057+20]) (lambda/lambda.ml[147,5057+0]..[148,5080+76])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[148,5080+4]..[148,5080+8])
                "CFeq" (lambda/lambda.ml[148,5080+4]..[148,5080+8])
                []
                None
              (lambda/lambda.ml[148,5080+9]..[148,5080+16])
                "CFneq" (lambda/lambda.ml[148,5080+11]..[148,5080+16])
                []
                None
              (lambda/lambda.ml[148,5080+17]..[148,5080+23])
                "CFlt" (lambda/lambda.ml[148,5080+19]..[148,5080+23])
                []
                None
              (lambda/lambda.ml[148,5080+24]..[148,5080+31])
                "CFnlt" (lambda/lambda.ml[148,5080+26]..[148,5080+31])
                []
                None
              (lambda/lambda.ml[148,5080+32]..[148,5080+38])
                "CFgt" (lambda/lambda.ml[148,5080+34]..[148,5080+38])
                []
                None
              (lambda/lambda.ml[148,5080+39]..[148,5080+46])
                "CFngt" (lambda/lambda.ml[148,5080+41]..[148,5080+46])
                []
                None
              (lambda/lambda.ml[148,5080+47]..[148,5080+53])
                "CFle" (lambda/lambda.ml[148,5080+49]..[148,5080+53])
                []
                None
              (lambda/lambda.ml[148,5080+54]..[148,5080+61])
                "CFnle" (lambda/lambda.ml[148,5080+56]..[148,5080+61])
                []
                None
              (lambda/lambda.ml[148,5080+62]..[148,5080+68])
                "CFge" (lambda/lambda.ml[148,5080+64]..[148,5080+68])
                []
                None
              (lambda/lambda.ml[148,5080+69]..[148,5080+76])
                "CFnge" (lambda/lambda.ml[148,5080+71]..[148,5080+76])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "value_kind" (lambda/lambda.ml[150,5158+4]..[150,5158+14]) (lambda/lambda.ml[150,5158+0]..[151,5175+65])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[151,5175+4]..[151,5175+11])
                "Pgenval" (lambda/lambda.ml[151,5175+4]..[151,5175+11])
                []
                None
              (lambda/lambda.ml[151,5175+12]..[151,5175+23])
                "Pfloatval" (lambda/lambda.ml[151,5175+14]..[151,5175+23])
                []
                None
              (lambda/lambda.ml[151,5175+24]..[151,5175+55])
                "Pboxedintval" (lambda/lambda.ml[151,5175+26]..[151,5175+38])
                [
                  core_type (lambda/lambda.ml[151,5175+42]..[151,5175+55])
                    Ptyp_constr "boxed_integer" (lambda/lambda.ml[151,5175+42]..[151,5175+55])
                    []
                ]
                None
              (lambda/lambda.ml[151,5175+56]..[151,5175+65])
                "Pintval" (lambda/lambda.ml[151,5175+58]..[151,5175+65])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "block_shape" (lambda/lambda.ml[153,5242+4]..[153,5242+15]) (lambda/lambda.ml[153,5242+0]..[154,5260+24])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lambda/lambda.ml[154,5260+2]..[154,5260+24])
              Ptyp_constr "option" (lambda/lambda.ml[154,5260+18]..[154,5260+24])
              [
                core_type (lambda/lambda.ml[154,5260+2]..[154,5260+17])
                  Ptyp_constr "list" (lambda/lambda.ml[154,5260+13]..[154,5260+17])
                  [
                    core_type (lambda/lambda.ml[154,5260+2]..[154,5260+12])
                      Ptyp_constr "value_kind" (lambda/lambda.ml[154,5260+2]..[154,5260+12])
                      []
                  ]
              ]
      type_declaration "array_kind" (lambda/lambda.ml[156,5286+4]..[156,5286+14]) (lambda/lambda.ml[156,5286+0]..[157,5303+52])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[157,5303+4]..[157,5303+13])
                "Pgenarray" (lambda/lambda.ml[157,5303+4]..[157,5303+13])
                []
                None
              (lambda/lambda.ml[157,5303+14]..[157,5303+26])
                "Paddrarray" (lambda/lambda.ml[157,5303+16]..[157,5303+26])
                []
                None
              (lambda/lambda.ml[157,5303+27]..[157,5303+38])
                "Pintarray" (lambda/lambda.ml[157,5303+29]..[157,5303+38])
                []
                None
              (lambda/lambda.ml[157,5303+39]..[157,5303+52])
                "Pfloatarray" (lambda/lambda.ml[157,5303+41]..[157,5303+52])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "boxed_integer" (lambda/lambda.ml[159,5357+4]..[159,5357+17]) (lambda/lambda.ml[159,5357+0]..[160,5403+32])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[160,5403+4]..[160,5403+14])
                "Pnativeint" (lambda/lambda.ml[160,5403+4]..[160,5403+14])
                []
                None
              (lambda/lambda.ml[160,5403+15]..[160,5403+23])
                "Pint32" (lambda/lambda.ml[160,5403+17]..[160,5403+23])
                []
                None
              (lambda/lambda.ml[160,5403+24]..[160,5403+32])
                "Pint64" (lambda/lambda.ml[160,5403+26]..[160,5403+32])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lambda/lambda.ml[159,5357+20]..[159,5357+43])
              Ptyp_constr "Primitive.boxed_integer" (lambda/lambda.ml[159,5357+20]..[159,5357+43])
              []
      type_declaration "bigarray_kind" (lambda/lambda.ml[162,5437+4]..[162,5437+17]) (lambda/lambda.ml[162,5437+0]..[169,5683+45])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[163,5457+4]..[163,5457+21])
                "Pbigarray_unknown" (lambda/lambda.ml[163,5457+4]..[163,5457+21])
                []
                None
              (lambda/lambda.ml[164,5479+2]..[164,5479+21])
                "Pbigarray_float32" (lambda/lambda.ml[164,5479+4]..[164,5479+21])
                []
                None
              (lambda/lambda.ml[164,5479+22]..[164,5479+41])
                "Pbigarray_float64" (lambda/lambda.ml[164,5479+24]..[164,5479+41])
                []
                None
              (lambda/lambda.ml[165,5521+2]..[165,5521+19])
                "Pbigarray_sint8" (lambda/lambda.ml[165,5521+4]..[165,5521+19])
                []
                None
              (lambda/lambda.ml[165,5521+20]..[165,5521+37])
                "Pbigarray_uint8" (lambda/lambda.ml[165,5521+22]..[165,5521+37])
                []
                None
              (lambda/lambda.ml[166,5559+2]..[166,5559+20])
                "Pbigarray_sint16" (lambda/lambda.ml[166,5559+4]..[166,5559+20])
                []
                None
              (lambda/lambda.ml[166,5559+21]..[166,5559+39])
                "Pbigarray_uint16" (lambda/lambda.ml[166,5559+23]..[166,5559+39])
                []
                None
              (lambda/lambda.ml[167,5599+2]..[167,5599+19])
                "Pbigarray_int32" (lambda/lambda.ml[167,5599+4]..[167,5599+19])
                []
                None
              (lambda/lambda.ml[167,5599+20]..[167,5599+37])
                "Pbigarray_int64" (lambda/lambda.ml[167,5599+22]..[167,5599+37])
                []
                None
              (lambda/lambda.ml[168,5637+2]..[168,5637+22])
                "Pbigarray_caml_int" (lambda/lambda.ml[168,5637+4]..[168,5637+22])
                []
                None
              (lambda/lambda.ml[168,5637+23]..[168,5637+45])
                "Pbigarray_native_int" (lambda/lambda.ml[168,5637+25]..[168,5637+45])
                []
                None
              (lambda/lambda.ml[169,5683+2]..[169,5683+23])
                "Pbigarray_complex32" (lambda/lambda.ml[169,5683+4]..[169,5683+23])
                []
                None
              (lambda/lambda.ml[169,5683+24]..[169,5683+45])
                "Pbigarray_complex64" (lambda/lambda.ml[169,5683+26]..[169,5683+45])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "bigarray_layout" (lambda/lambda.ml[171,5730+4]..[171,5730+19]) (lambda/lambda.ml[171,5730+0]..[174,5804+28])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[172,5752+4]..[172,5752+28])
                "Pbigarray_unknown_layout" (lambda/lambda.ml[172,5752+4]..[172,5752+28])
                []
                None
              (lambda/lambda.ml[173,5781+2]..[173,5781+22])
                "Pbigarray_c_layout" (lambda/lambda.ml[173,5781+4]..[173,5781+22])
                []
                None
              (lambda/lambda.ml[174,5804+2]..[174,5804+28])
                "Pbigarray_fortran_layout" (lambda/lambda.ml[174,5804+4]..[174,5804+28])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "raise_kind" (lambda/lambda.ml[176,5834+4]..[176,5834+14]) (lambda/lambda.ml[176,5834+0]..[179,5887+17])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[177,5851+2]..[177,5851+17])
                "Raise_regular" (lambda/lambda.ml[177,5851+4]..[177,5851+17])
                []
                None
              (lambda/lambda.ml[178,5869+2]..[178,5869+17])
                "Raise_reraise" (lambda/lambda.ml[178,5869+4]..[178,5869+17])
                []
                None
              (lambda/lambda.ml[179,5887+2]..[179,5887+17])
                "Raise_notrace" (lambda/lambda.ml[179,5887+4]..[179,5887+17])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/lambda.ml[181,5906+0]..[181,5906+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[181,5906+4]..[181,5906+23])
          Ppat_var "equal_boxed_integer" (lambda/lambda.ml[181,5906+4]..[181,5906+23])
        expression (lambda/lambda.ml[181,5906+26]..[181,5906+55])
          Pexp_ident "Primitive.equal_boxed_integer" (lambda/lambda.ml[181,5906+26]..[181,5906+55])
    ]
  structure_item (lambda/lambda.ml[183,5963+0]..[187,6169+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[183,5963+4]..[183,5963+19])
          Ppat_var "equal_primitive" (lambda/lambda.ml[183,5963+4]..[183,5963+19])
        expression (lambda/lambda.ml[187,6169+2]..[187,6169+5])
          Pexp_ident "=" (lambda/lambda.ml[187,6169+2]..[187,6169+5])
    ]
  structure_item (lambda/lambda.ml[189,6176+0]..[195,6382+64])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[189,6176+4]..[189,6176+20])
          Ppat_var "equal_value_kind" (lambda/lambda.ml[189,6176+4]..[189,6176+20])
        expression (lambda/lambda.ml[189,6176+21]..[195,6382+64]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[189,6176+21]..[189,6176+22])
            Ppat_var "x" (lambda/lambda.ml[189,6176+21]..[189,6176+22])
          expression (lambda/lambda.ml[189,6176+23]..[195,6382+64]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[189,6176+23]..[189,6176+24])
              Ppat_var "y" (lambda/lambda.ml[189,6176+23]..[189,6176+24])
            expression (lambda/lambda.ml[190,6203+2]..[195,6382+64])
              Pexp_match
              expression (lambda/lambda.ml[190,6203+8]..[190,6203+12])
                Pexp_tuple
                [
                  expression (lambda/lambda.ml[190,6203+8]..[190,6203+9])
                    Pexp_ident "x" (lambda/lambda.ml[190,6203+8]..[190,6203+9])
                  expression (lambda/lambda.ml[190,6203+11]..[190,6203+12])
                    Pexp_ident "y" (lambda/lambda.ml[190,6203+11]..[190,6203+12])
                ]
              [
                <case>
                  pattern (lambda/lambda.ml[191,6221+4]..[191,6221+20])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[191,6221+4]..[191,6221+11])
                        Ppat_construct "Pgenval" (lambda/lambda.ml[191,6221+4]..[191,6221+11])
                        None
                      pattern (lambda/lambda.ml[191,6221+13]..[191,6221+20])
                        Ppat_construct "Pgenval" (lambda/lambda.ml[191,6221+13]..[191,6221+20])
                        None
                    ]
                  expression (lambda/lambda.ml[191,6221+24]..[191,6221+28])
                    Pexp_construct "true" (lambda/lambda.ml[191,6221+24]..[191,6221+28])
                    None
                <case>
                  pattern (lambda/lambda.ml[192,6250+4]..[192,6250+24])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[192,6250+4]..[192,6250+13])
                        Ppat_construct "Pfloatval" (lambda/lambda.ml[192,6250+4]..[192,6250+13])
                        None
                      pattern (lambda/lambda.ml[192,6250+15]..[192,6250+24])
                        Ppat_construct "Pfloatval" (lambda/lambda.ml[192,6250+15]..[192,6250+24])
                        None
                    ]
                  expression (lambda/lambda.ml[192,6250+28]..[192,6250+32])
                    Pexp_construct "true" (lambda/lambda.ml[192,6250+28]..[192,6250+32])
                    None
                <case>
                  pattern (lambda/lambda.ml[193,6283+4]..[193,6283+38])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[193,6283+4]..[193,6283+20])
                        Ppat_construct "Pboxedintval" (lambda/lambda.ml[193,6283+4]..[193,6283+16])
                        Some
                          []
                          pattern (lambda/lambda.ml[193,6283+17]..[193,6283+20])
                            Ppat_var "bi1" (lambda/lambda.ml[193,6283+17]..[193,6283+20])
                      pattern (lambda/lambda.ml[193,6283+22]..[193,6283+38])
                        Ppat_construct "Pboxedintval" (lambda/lambda.ml[193,6283+22]..[193,6283+34])
                        Some
                          []
                          pattern (lambda/lambda.ml[193,6283+35]..[193,6283+38])
                            Ppat_var "bi2" (lambda/lambda.ml[193,6283+35]..[193,6283+38])
                    ]
                  expression (lambda/lambda.ml[193,6283+42]..[193,6283+69])
                    Pexp_apply
                    expression (lambda/lambda.ml[193,6283+42]..[193,6283+61])
                      Pexp_ident "equal_boxed_integer" (lambda/lambda.ml[193,6283+42]..[193,6283+61])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[193,6283+62]..[193,6283+65])
                          Pexp_ident "bi1" (lambda/lambda.ml[193,6283+62]..[193,6283+65])
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[193,6283+66]..[193,6283+69])
                          Pexp_ident "bi2" (lambda/lambda.ml[193,6283+66]..[193,6283+69])
                    ]
                <case>
                  pattern (lambda/lambda.ml[194,6353+4]..[194,6353+20])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[194,6353+4]..[194,6353+11])
                        Ppat_construct "Pintval" (lambda/lambda.ml[194,6353+4]..[194,6353+11])
                        None
                      pattern (lambda/lambda.ml[194,6353+13]..[194,6353+20])
                        Ppat_construct "Pintval" (lambda/lambda.ml[194,6353+13]..[194,6353+20])
                        None
                    ]
                  expression (lambda/lambda.ml[194,6353+24]..[194,6353+28])
                    Pexp_construct "true" (lambda/lambda.ml[194,6353+24]..[194,6353+28])
                    None
                <case>
                  pattern (lambda/lambda.ml[195,6382+4]..[195,6382+55])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[195,6382+4]..[195,6382+52])
                        Ppat_or
                        pattern (lambda/lambda.ml[195,6382+5]..[195,6382+41])
                          Ppat_or
                          pattern (lambda/lambda.ml[195,6382+5]..[195,6382+24])
                            Ppat_or
                            pattern (lambda/lambda.ml[195,6382+5]..[195,6382+12])
                              Ppat_construct "Pgenval" (lambda/lambda.ml[195,6382+5]..[195,6382+12])
                              None
                            pattern (lambda/lambda.ml[195,6382+15]..[195,6382+24])
                              Ppat_construct "Pfloatval" (lambda/lambda.ml[195,6382+15]..[195,6382+24])
                              None
                          pattern (lambda/lambda.ml[195,6382+27]..[195,6382+41])
                            Ppat_construct "Pboxedintval" (lambda/lambda.ml[195,6382+27]..[195,6382+39])
                            Some
                              []
                              pattern (lambda/lambda.ml[195,6382+40]..[195,6382+41])
                                Ppat_any
                        pattern (lambda/lambda.ml[195,6382+44]..[195,6382+51])
                          Ppat_construct "Pintval" (lambda/lambda.ml[195,6382+44]..[195,6382+51])
                          None
                      pattern (lambda/lambda.ml[195,6382+54]..[195,6382+55])
                        Ppat_any
                    ]
                  expression (lambda/lambda.ml[195,6382+59]..[195,6382+64])
                    Pexp_construct "false" (lambda/lambda.ml[195,6382+59]..[195,6382+64])
                    None
              ]
    ]
  structure_item (lambda/lambda.ml[198,6449+0]..[202,6590+29])
    Pstr_type Rec
    [
      type_declaration "structured_constant" (lambda/lambda.ml[198,6449+5]..[198,6449+24]) (lambda/lambda.ml[198,6449+0]..[202,6590+29])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[199,6476+4]..[199,6476+26])
                "Const_base" (lambda/lambda.ml[199,6476+4]..[199,6476+14])
                [
                  core_type (lambda/lambda.ml[199,6476+18]..[199,6476+26])
                    Ptyp_constr "constant" (lambda/lambda.ml[199,6476+18]..[199,6476+26])
                    []
                ]
                None
              (lambda/lambda.ml[200,6503+2]..[200,6503+49])
                "Const_block" (lambda/lambda.ml[200,6503+4]..[200,6503+15])
                [
                  core_type (lambda/lambda.ml[200,6503+19]..[200,6503+22])
                    Ptyp_constr "int" (lambda/lambda.ml[200,6503+19]..[200,6503+22])
                    []
                  core_type (lambda/lambda.ml[200,6503+25]..[200,6503+49])
                    Ptyp_constr "list" (lambda/lambda.ml[200,6503+45]..[200,6503+49])
                    [
                      core_type (lambda/lambda.ml[200,6503+25]..[200,6503+44])
                        Ptyp_constr "structured_constant" (lambda/lambda.ml[200,6503+25]..[200,6503+44])
                        []
                    ]
                ]
                None
              (lambda/lambda.ml[201,6553+2]..[201,6553+36])
                "Const_float_array" (lambda/lambda.ml[201,6553+4]..[201,6553+21])
                [
                  core_type (lambda/lambda.ml[201,6553+25]..[201,6553+36])
                    Ptyp_constr "list" (lambda/lambda.ml[201,6553+32]..[201,6553+36])
                    [
                      core_type (lambda/lambda.ml[201,6553+25]..[201,6553+31])
                        Ptyp_constr "string" (lambda/lambda.ml[201,6553+25]..[201,6553+31])
                        []
                    ]
                ]
                None
              (lambda/lambda.ml[202,6590+2]..[202,6590+29])
                "Const_immstring" (lambda/lambda.ml[202,6590+4]..[202,6590+19])
                [
                  core_type (lambda/lambda.ml[202,6590+23]..[202,6590+29])
                    Ptyp_constr "string" (lambda/lambda.ml[202,6590+23]..[202,6590+29])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/lambda.ml[204,6621+0]..[208,6773+20])
    Pstr_type Rec
    [
      type_declaration "tailcall_attribute" (lambda/lambda.ml[204,6621+5]..[204,6621+23]) (lambda/lambda.ml[204,6621+0]..[208,6773+20])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[205,6647+2]..[205,6647+32])
                "Tailcall_expectation" (lambda/lambda.ml[205,6647+4]..[205,6647+24])
                [
                  core_type (lambda/lambda.ml[205,6647+28]..[205,6647+32])
                    Ptyp_constr "bool" (lambda/lambda.ml[205,6647+28]..[205,6647+32])
                    []
                ]
                None
              (lambda/lambda.ml[208,6773+2]..[208,6773+20])
                "Default_tailcall" (lambda/lambda.ml[208,6773+4]..[208,6773+20])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/lambda.ml[210,6826+0]..[215,7027+18])
    Pstr_type Rec
    [
      type_declaration "inline_attribute" (lambda/lambda.ml[210,6826+5]..[210,6826+21]) (lambda/lambda.ml[210,6826+0]..[215,7027+18])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[211,6850+2]..[211,6850+17])
                "Always_inline" (lambda/lambda.ml[211,6850+4]..[211,6850+17])
                []
                None
              (lambda/lambda.ml[212,6904+2]..[212,6904+16])
                "Never_inline" (lambda/lambda.ml[212,6904+4]..[212,6904+16])
                []
                None
              (lambda/lambda.ml[213,6943+2]..[213,6943+15])
                "Hint_inline" (lambda/lambda.ml[213,6943+4]..[213,6943+15])
                []
                None
              (lambda/lambda.ml[214,6991+2]..[214,6991+17])
                "Unroll" (lambda/lambda.ml[214,6991+4]..[214,6991+10])
                [
                  core_type (lambda/lambda.ml[214,6991+14]..[214,6991+17])
                    Ptyp_constr "int" (lambda/lambda.ml[214,6991+14]..[214,6991+17])
                    []
                ]
                None
              (lambda/lambda.ml[215,7027+2]..[215,7027+18])
                "Default_inline" (lambda/lambda.ml[215,7027+4]..[215,7027+18])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/lambda.ml[217,7076+0]..[229,7394+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[217,7076+4]..[217,7076+26])
          Ppat_var "equal_inline_attribute" (lambda/lambda.ml[217,7076+4]..[217,7076+26])
        expression (lambda/lambda.ml[217,7076+27]..[229,7394+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[217,7076+27]..[217,7076+28])
            Ppat_var "x" (lambda/lambda.ml[217,7076+27]..[217,7076+28])
          expression (lambda/lambda.ml[217,7076+29]..[229,7394+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[217,7076+29]..[217,7076+30])
              Ppat_var "y" (lambda/lambda.ml[217,7076+29]..[217,7076+30])
            expression (lambda/lambda.ml[218,7109+2]..[229,7394+9])
              Pexp_match
              expression (lambda/lambda.ml[218,7109+8]..[218,7109+12])
                Pexp_tuple
                [
                  expression (lambda/lambda.ml[218,7109+8]..[218,7109+9])
                    Pexp_ident "x" (lambda/lambda.ml[218,7109+8]..[218,7109+9])
                  expression (lambda/lambda.ml[218,7109+11]..[218,7109+12])
                    Pexp_ident "y" (lambda/lambda.ml[218,7109+11]..[218,7109+12])
                ]
              [
                <case>
                  pattern (lambda/lambda.ml[219,7127+4]..[222,7220+34])
                    Ppat_or
                    pattern (lambda/lambda.ml[219,7127+4]..[221,7191+28])
                      Ppat_or
                      pattern (lambda/lambda.ml[219,7127+4]..[220,7160+30])
                        Ppat_or
                        pattern (lambda/lambda.ml[219,7127+4]..[219,7127+32])
                          Ppat_tuple
                          [
                            pattern (lambda/lambda.ml[219,7127+4]..[219,7127+17])
                              Ppat_construct "Always_inline" (lambda/lambda.ml[219,7127+4]..[219,7127+17])
                              None
                            pattern (lambda/lambda.ml[219,7127+19]..[219,7127+32])
                              Ppat_construct "Always_inline" (lambda/lambda.ml[219,7127+19]..[219,7127+32])
                              None
                          ]
                        pattern (lambda/lambda.ml[220,7160+4]..[220,7160+30])
                          Ppat_tuple
                          [
                            pattern (lambda/lambda.ml[220,7160+4]..[220,7160+16])
                              Ppat_construct "Never_inline" (lambda/lambda.ml[220,7160+4]..[220,7160+16])
                              None
                            pattern (lambda/lambda.ml[220,7160+18]..[220,7160+30])
                              Ppat_construct "Never_inline" (lambda/lambda.ml[220,7160+18]..[220,7160+30])
                              None
                          ]
                      pattern (lambda/lambda.ml[221,7191+4]..[221,7191+28])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[221,7191+4]..[221,7191+15])
                            Ppat_construct "Hint_inline" (lambda/lambda.ml[221,7191+4]..[221,7191+15])
                            None
                          pattern (lambda/lambda.ml[221,7191+17]..[221,7191+28])
                            Ppat_construct "Hint_inline" (lambda/lambda.ml[221,7191+17]..[221,7191+28])
                            None
                        ]
                    pattern (lambda/lambda.ml[222,7220+4]..[222,7220+34])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[222,7220+4]..[222,7220+18])
                          Ppat_construct "Default_inline" (lambda/lambda.ml[222,7220+4]..[222,7220+18])
                          None
                        pattern (lambda/lambda.ml[222,7220+20]..[222,7220+34])
                          Ppat_construct "Default_inline" (lambda/lambda.ml[222,7220+20]..[222,7220+34])
                          None
                      ]
                  expression (lambda/lambda.ml[224,7262+4]..[224,7262+8])
                    Pexp_construct "true" (lambda/lambda.ml[224,7262+4]..[224,7262+8])
                    None
                <case>
                  pattern (lambda/lambda.ml[225,7271+4]..[225,7271+22])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[225,7271+4]..[225,7271+12])
                        Ppat_construct "Unroll" (lambda/lambda.ml[225,7271+4]..[225,7271+10])
                        Some
                          []
                          pattern (lambda/lambda.ml[225,7271+11]..[225,7271+12])
                            Ppat_var "u" (lambda/lambda.ml[225,7271+11]..[225,7271+12])
                      pattern (lambda/lambda.ml[225,7271+14]..[225,7271+22])
                        Ppat_construct "Unroll" (lambda/lambda.ml[225,7271+14]..[225,7271+20])
                        Some
                          []
                          pattern (lambda/lambda.ml[225,7271+21]..[225,7271+22])
                            Ppat_var "v" (lambda/lambda.ml[225,7271+21]..[225,7271+22])
                    ]
                  expression (lambda/lambda.ml[226,7297+4]..[226,7297+9])
                    Pexp_apply
                    expression (lambda/lambda.ml[226,7297+6]..[226,7297+7])
                      Pexp_ident "=" (lambda/lambda.ml[226,7297+6]..[226,7297+7])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[226,7297+4]..[226,7297+5])
                          Pexp_ident "u" (lambda/lambda.ml[226,7297+4]..[226,7297+5])
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[226,7297+8]..[226,7297+9])
                          Pexp_ident "v" (lambda/lambda.ml[226,7297+8]..[226,7297+9])
                    ]
                <case>
                  pattern (lambda/lambda.ml[227,7307+4]..[228,7341+49])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[227,7307+4]..[228,7341+46])
                        Ppat_or
                        pattern (lambda/lambda.ml[227,7307+5]..[228,7341+28])
                          Ppat_or
                          pattern (lambda/lambda.ml[227,7307+5]..[228,7341+17])
                            Ppat_or
                            pattern (lambda/lambda.ml[227,7307+5]..[227,7307+33])
                              Ppat_or
                              pattern (lambda/lambda.ml[227,7307+5]..[227,7307+18])
                                Ppat_construct "Always_inline" (lambda/lambda.ml[227,7307+5]..[227,7307+18])
                                None
                              pattern (lambda/lambda.ml[227,7307+21]..[227,7307+33])
                                Ppat_construct "Never_inline" (lambda/lambda.ml[227,7307+21]..[227,7307+33])
                                None
                            pattern (lambda/lambda.ml[228,7341+6]..[228,7341+17])
                              Ppat_construct "Hint_inline" (lambda/lambda.ml[228,7341+6]..[228,7341+17])
                              None
                          pattern (lambda/lambda.ml[228,7341+20]..[228,7341+28])
                            Ppat_construct "Unroll" (lambda/lambda.ml[228,7341+20]..[228,7341+26])
                            Some
                              []
                              pattern (lambda/lambda.ml[228,7341+27]..[228,7341+28])
                                Ppat_any
                        pattern (lambda/lambda.ml[228,7341+31]..[228,7341+45])
                          Ppat_construct "Default_inline" (lambda/lambda.ml[228,7341+31]..[228,7341+45])
                          None
                      pattern (lambda/lambda.ml[228,7341+48]..[228,7341+49])
                        Ppat_any
                    ]
                  expression (lambda/lambda.ml[229,7394+4]..[229,7394+9])
                    Pexp_construct "false" (lambda/lambda.ml[229,7394+4]..[229,7394+9])
                    None
              ]
    ]
  structure_item (lambda/lambda.ml[231,7405+0]..[234,7546+22])
    Pstr_type Rec
    [
      type_declaration "specialise_attribute" (lambda/lambda.ml[231,7405+5]..[231,7405+25]) (lambda/lambda.ml[231,7405+0]..[234,7546+22])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[232,7433+2]..[232,7433+21])
                "Always_specialise" (lambda/lambda.ml[232,7433+4]..[232,7433+21])
                []
                None
              (lambda/lambda.ml[233,7499+2]..[233,7499+20])
                "Never_specialise" (lambda/lambda.ml[233,7499+4]..[233,7499+20])
                []
                None
              (lambda/lambda.ml[234,7546+2]..[234,7546+22])
                "Default_specialise" (lambda/lambda.ml[234,7546+4]..[234,7546+22])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/lambda.ml[236,7603+0]..[243,7863+9])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[236,7603+4]..[236,7603+30])
          Ppat_var "equal_specialise_attribute" (lambda/lambda.ml[236,7603+4]..[236,7603+30])
        expression (lambda/lambda.ml[236,7603+31]..[243,7863+9]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[236,7603+31]..[236,7603+32])
            Ppat_var "x" (lambda/lambda.ml[236,7603+31]..[236,7603+32])
          expression (lambda/lambda.ml[236,7603+33]..[243,7863+9]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[236,7603+33]..[236,7603+34])
              Ppat_var "y" (lambda/lambda.ml[236,7603+33]..[236,7603+34])
            expression (lambda/lambda.ml[237,7640+2]..[243,7863+9])
              Pexp_match
              expression (lambda/lambda.ml[237,7640+8]..[237,7640+12])
                Pexp_tuple
                [
                  expression (lambda/lambda.ml[237,7640+8]..[237,7640+9])
                    Pexp_ident "x" (lambda/lambda.ml[237,7640+8]..[237,7640+9])
                  expression (lambda/lambda.ml[237,7640+11]..[237,7640+12])
                    Pexp_ident "y" (lambda/lambda.ml[237,7640+11]..[237,7640+12])
                ]
              [
                <case>
                  pattern (lambda/lambda.ml[238,7658+4]..[240,7738+42])
                    Ppat_or
                    pattern (lambda/lambda.ml[238,7658+4]..[239,7699+38])
                      Ppat_or
                      pattern (lambda/lambda.ml[238,7658+4]..[238,7658+40])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[238,7658+4]..[238,7658+21])
                            Ppat_construct "Always_specialise" (lambda/lambda.ml[238,7658+4]..[238,7658+21])
                            None
                          pattern (lambda/lambda.ml[238,7658+23]..[238,7658+40])
                            Ppat_construct "Always_specialise" (lambda/lambda.ml[238,7658+23]..[238,7658+40])
                            None
                        ]
                      pattern (lambda/lambda.ml[239,7699+4]..[239,7699+38])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[239,7699+4]..[239,7699+20])
                            Ppat_construct "Never_specialise" (lambda/lambda.ml[239,7699+4]..[239,7699+20])
                            None
                          pattern (lambda/lambda.ml[239,7699+22]..[239,7699+38])
                            Ppat_construct "Never_specialise" (lambda/lambda.ml[239,7699+22]..[239,7699+38])
                            None
                        ]
                    pattern (lambda/lambda.ml[240,7738+4]..[240,7738+42])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[240,7738+4]..[240,7738+22])
                          Ppat_construct "Default_specialise" (lambda/lambda.ml[240,7738+4]..[240,7738+22])
                          None
                        pattern (lambda/lambda.ml[240,7738+24]..[240,7738+42])
                          Ppat_construct "Default_specialise" (lambda/lambda.ml[240,7738+24]..[240,7738+42])
                          None
                      ]
                  expression (lambda/lambda.ml[241,7784+4]..[241,7784+8])
                    Pexp_construct "true" (lambda/lambda.ml[241,7784+4]..[241,7784+8])
                    None
                <case>
                  pattern (lambda/lambda.ml[242,7793+4]..[242,7793+66])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[242,7793+4]..[242,7793+63])
                        Ppat_or
                        pattern (lambda/lambda.ml[242,7793+5]..[242,7793+41])
                          Ppat_or
                          pattern (lambda/lambda.ml[242,7793+5]..[242,7793+22])
                            Ppat_construct "Always_specialise" (lambda/lambda.ml[242,7793+5]..[242,7793+22])
                            None
                          pattern (lambda/lambda.ml[242,7793+25]..[242,7793+41])
                            Ppat_construct "Never_specialise" (lambda/lambda.ml[242,7793+25]..[242,7793+41])
                            None
                        pattern (lambda/lambda.ml[242,7793+44]..[242,7793+62])
                          Ppat_construct "Default_specialise" (lambda/lambda.ml[242,7793+44]..[242,7793+62])
                          None
                      pattern (lambda/lambda.ml[242,7793+65]..[242,7793+66])
                        Ppat_any
                    ]
                  expression (lambda/lambda.ml[243,7863+4]..[243,7863+9])
                    Pexp_construct "false" (lambda/lambda.ml[243,7863+4]..[243,7863+9])
                    None
              ]
    ]
  structure_item (lambda/lambda.ml[245,7874+0]..[248,7985+17])
    Pstr_type Rec
    [
      type_declaration "local_attribute" (lambda/lambda.ml[245,7874+5]..[245,7874+20]) (lambda/lambda.ml[245,7874+0]..[248,7985+17])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[246,7897+2]..[246,7897+16])
                "Always_local" (lambda/lambda.ml[246,7897+4]..[246,7897+16])
                []
                None
              (lambda/lambda.ml[247,7948+2]..[247,7948+15])
                "Never_local" (lambda/lambda.ml[247,7948+4]..[247,7948+15])
                []
                None
              (lambda/lambda.ml[248,7985+2]..[248,7985+17])
                "Default_local" (lambda/lambda.ml[248,7985+4]..[248,7985+17])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/lambda.ml[250,8050+0]..[250,8050+37])
    Pstr_type Rec
    [
      type_declaration "function_kind" (lambda/lambda.ml[250,8050+5]..[250,8050+18]) (lambda/lambda.ml[250,8050+0]..[250,8050+37])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[250,8050+21]..[250,8050+28])
                "Curried" (lambda/lambda.ml[250,8050+21]..[250,8050+28])
                []
                None
              (lambda/lambda.ml[250,8050+29]..[250,8050+37])
                "Tupled" (lambda/lambda.ml[250,8050+31]..[250,8050+37])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/lambda.ml[252,8089+0]..[252,8089+42])
    Pstr_type Rec
    [
      type_declaration "let_kind" (lambda/lambda.ml[252,8089+5]..[252,8089+13]) (lambda/lambda.ml[252,8089+0]..[252,8089+42])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[252,8089+16]..[252,8089+22])
                "Strict" (lambda/lambda.ml[252,8089+16]..[252,8089+22])
                []
                None
              (lambda/lambda.ml[252,8089+23]..[252,8089+30])
                "Alias" (lambda/lambda.ml[252,8089+25]..[252,8089+30])
                []
                None
              (lambda/lambda.ml[252,8089+31]..[252,8089+42])
                "StrictOpt" (lambda/lambda.ml[252,8089+33]..[252,8089+42])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/lambda.ml[254,8133+0]..[254,8133+39])
    Pstr_type Rec
    [
      type_declaration "meth_kind" (lambda/lambda.ml[254,8133+5]..[254,8133+14]) (lambda/lambda.ml[254,8133+0]..[254,8133+39])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[254,8133+17]..[254,8133+21])
                "Self" (lambda/lambda.ml[254,8133+17]..[254,8133+21])
                []
                None
              (lambda/lambda.ml[254,8133+22]..[254,8133+30])
                "Public" (lambda/lambda.ml[254,8133+24]..[254,8133+30])
                []
                None
              (lambda/lambda.ml[254,8133+31]..[254,8133+39])
                "Cached" (lambda/lambda.ml[254,8133+33]..[254,8133+39])
                []
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/lambda.ml[256,8174+0]..[261,8295+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[256,8174+4]..[256,8174+19])
          Ppat_var "equal_meth_kind" (lambda/lambda.ml[256,8174+4]..[256,8174+19])
        expression (lambda/lambda.ml[256,8174+20]..[261,8295+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[256,8174+20]..[256,8174+21])
            Ppat_var "x" (lambda/lambda.ml[256,8174+20]..[256,8174+21])
          expression (lambda/lambda.ml[256,8174+22]..[261,8295+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[256,8174+22]..[256,8174+23])
              Ppat_var "y" (lambda/lambda.ml[256,8174+22]..[256,8174+23])
            expression (lambda/lambda.ml[257,8200+2]..[261,8295+40])
              Pexp_match
              expression (lambda/lambda.ml[257,8200+8]..[257,8200+12])
                Pexp_tuple
                [
                  expression (lambda/lambda.ml[257,8200+8]..[257,8200+9])
                    Pexp_ident "x" (lambda/lambda.ml[257,8200+8]..[257,8200+9])
                  expression (lambda/lambda.ml[257,8200+11]..[257,8200+12])
                    Pexp_ident "y" (lambda/lambda.ml[257,8200+11]..[257,8200+12])
                ]
              [
                <case>
                  pattern (lambda/lambda.ml[258,8218+4]..[258,8218+14])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[258,8218+4]..[258,8218+8])
                        Ppat_construct "Self" (lambda/lambda.ml[258,8218+4]..[258,8218+8])
                        None
                      pattern (lambda/lambda.ml[258,8218+10]..[258,8218+14])
                        Ppat_construct "Self" (lambda/lambda.ml[258,8218+10]..[258,8218+14])
                        None
                    ]
                  expression (lambda/lambda.ml[258,8218+18]..[258,8218+22])
                    Pexp_construct "true" (lambda/lambda.ml[258,8218+18]..[258,8218+22])
                    None
                <case>
                  pattern (lambda/lambda.ml[259,8241+4]..[259,8241+18])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[259,8241+4]..[259,8241+10])
                        Ppat_construct "Public" (lambda/lambda.ml[259,8241+4]..[259,8241+10])
                        None
                      pattern (lambda/lambda.ml[259,8241+12]..[259,8241+18])
                        Ppat_construct "Public" (lambda/lambda.ml[259,8241+12]..[259,8241+18])
                        None
                    ]
                  expression (lambda/lambda.ml[259,8241+22]..[259,8241+26])
                    Pexp_construct "true" (lambda/lambda.ml[259,8241+22]..[259,8241+26])
                    None
                <case>
                  pattern (lambda/lambda.ml[260,8268+4]..[260,8268+18])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[260,8268+4]..[260,8268+10])
                        Ppat_construct "Cached" (lambda/lambda.ml[260,8268+4]..[260,8268+10])
                        None
                      pattern (lambda/lambda.ml[260,8268+12]..[260,8268+18])
                        Ppat_construct "Cached" (lambda/lambda.ml[260,8268+12]..[260,8268+18])
                        None
                    ]
                  expression (lambda/lambda.ml[260,8268+22]..[260,8268+26])
                    Pexp_construct "true" (lambda/lambda.ml[260,8268+22]..[260,8268+26])
                    None
                <case>
                  pattern (lambda/lambda.ml[261,8295+4]..[261,8295+31])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[261,8295+4]..[261,8295+28])
                        Ppat_or
                        pattern (lambda/lambda.ml[261,8295+5]..[261,8295+18])
                          Ppat_or
                          pattern (lambda/lambda.ml[261,8295+5]..[261,8295+9])
                            Ppat_construct "Self" (lambda/lambda.ml[261,8295+5]..[261,8295+9])
                            None
                          pattern (lambda/lambda.ml[261,8295+12]..[261,8295+18])
                            Ppat_construct "Public" (lambda/lambda.ml[261,8295+12]..[261,8295+18])
                            None
                        pattern (lambda/lambda.ml[261,8295+21]..[261,8295+27])
                          Ppat_construct "Cached" (lambda/lambda.ml[261,8295+21]..[261,8295+27])
                          None
                      pattern (lambda/lambda.ml[261,8295+30]..[261,8295+31])
                        Ppat_any
                    ]
                  expression (lambda/lambda.ml[261,8295+35]..[261,8295+40])
                    Pexp_construct "false" (lambda/lambda.ml[261,8295+35]..[261,8295+40])
                    None
              ]
    ]
  structure_item (lambda/lambda.ml[263,8337+0]..[263,8337+35])
    Pstr_type Rec
    [
      type_declaration "shared_code" (lambda/lambda.ml[263,8337+5]..[263,8337+16]) (lambda/lambda.ml[263,8337+0]..[263,8337+35])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lambda/lambda.ml[263,8337+19]..[263,8337+35])
              Ptyp_constr "list" (lambda/lambda.ml[263,8337+31]..[263,8337+35])
              [
                core_type (lambda/lambda.ml[263,8337+20]..[263,8337+29])
                  Ptyp_tuple
                  [
                    core_type (lambda/lambda.ml[263,8337+20]..[263,8337+23])
                      Ptyp_constr "int" (lambda/lambda.ml[263,8337+20]..[263,8337+23])
                      []
                    core_type (lambda/lambda.ml[263,8337+26]..[263,8337+29])
                      Ptyp_constr "int" (lambda/lambda.ml[263,8337+26]..[263,8337+29])
                      []
                  ]
              ]
    ]
  structure_item (lambda/lambda.ml[265,8374+0]..[271,8530+1])
    Pstr_type Rec
    [
      type_declaration "function_attribute" (lambda/lambda.ml[265,8374+5]..[265,8374+23]) (lambda/lambda.ml[265,8374+0]..[271,8530+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lambda/lambda.ml[266,8402+2]..[266,8402+28])
                Immutable
                "inline" (lambda/lambda.ml[266,8402+2]..[266,8402+8])                core_type (lambda/lambda.ml[266,8402+11]..[266,8402+27])
                  Ptyp_constr "inline_attribute" (lambda/lambda.ml[266,8402+11]..[266,8402+27])
                  []
              (lambda/lambda.ml[267,8431+2]..[267,8431+36])
                Immutable
                "specialise" (lambda/lambda.ml[267,8431+2]..[267,8431+12])                core_type (lambda/lambda.ml[267,8431+15]..[267,8431+35])
                  Ptyp_constr "specialise_attribute" (lambda/lambda.ml[267,8431+15]..[267,8431+35])
                  []
              (lambda/lambda.ml[268,8468+2]..[268,8468+25])
                Immutable
                "local" (lambda/lambda.ml[268,8468+2]..[268,8468+7])                core_type (lambda/lambda.ml[268,8468+9]..[268,8468+24])
                  Ptyp_constr "local_attribute" (lambda/lambda.ml[268,8468+9]..[268,8468+24])
                  []
              (lambda/lambda.ml[269,8494+2]..[269,8494+21])
                Immutable
                "is_a_functor" (lambda/lambda.ml[269,8494+2]..[269,8494+14])                core_type (lambda/lambda.ml[269,8494+16]..[269,8494+20])
                  Ptyp_constr "bool" (lambda/lambda.ml[269,8494+16]..[269,8494+20])
                  []
              (lambda/lambda.ml[270,8516+2]..[270,8516+13])
                Immutable
                "stub" (lambda/lambda.ml[270,8516+2]..[270,8516+6])                core_type (lambda/lambda.ml[270,8516+8]..[270,8516+12])
                  Ptyp_constr "bool" (lambda/lambda.ml[270,8516+8]..[270,8516+12])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/lambda.ml[273,8533+0]..[273,8533+50])
    Pstr_type Rec
    [
      type_declaration "scoped_location" (lambda/lambda.ml[273,8533+5]..[273,8533+20]) (lambda/lambda.ml[273,8533+0]..[273,8533+50])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_abstract
        ptype_private = Public
        ptype_manifest =
          Some
            core_type (lambda/lambda.ml[273,8533+23]..[273,8533+50])
              Ptyp_constr "Debuginfo.Scoped_location.t" (lambda/lambda.ml[273,8533+23]..[273,8533+50])
              []
    ]
  structure_item (lambda/lambda.ml[275,8585+0]..[334,10450+36])
    Pstr_type Rec
    [
      type_declaration "lambda" (lambda/lambda.ml[275,8585+5]..[275,8585+11]) (lambda/lambda.ml[275,8585+0]..[298,9564+31])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[276,8599+4]..[276,8599+19])
                "Lvar" (lambda/lambda.ml[276,8599+4]..[276,8599+8])
                [
                  core_type (lambda/lambda.ml[276,8599+12]..[276,8599+19])
                    Ptyp_constr "Ident.t" (lambda/lambda.ml[276,8599+12]..[276,8599+19])
                    []
                ]
                None
              (lambda/lambda.ml[277,8619+2]..[277,8619+22])
                "Lmutvar" (lambda/lambda.ml[277,8619+4]..[277,8619+11])
                [
                  core_type (lambda/lambda.ml[277,8619+15]..[277,8619+22])
                    Ptyp_constr "Ident.t" (lambda/lambda.ml[277,8619+15]..[277,8619+22])
                    []
                ]
                None
              (lambda/lambda.ml[278,8642+2]..[278,8642+33])
                "Lconst" (lambda/lambda.ml[278,8642+4]..[278,8642+10])
                [
                  core_type (lambda/lambda.ml[278,8642+14]..[278,8642+33])
                    Ptyp_constr "structured_constant" (lambda/lambda.ml[278,8642+14]..[278,8642+33])
                    []
                ]
                None
              (lambda/lambda.ml[279,8676+2]..[279,8676+26])
                "Lapply" (lambda/lambda.ml[279,8676+4]..[279,8676+10])
                [
                  core_type (lambda/lambda.ml[279,8676+14]..[279,8676+26])
                    Ptyp_constr "lambda_apply" (lambda/lambda.ml[279,8676+14]..[279,8676+26])
                    []
                ]
                None
              (lambda/lambda.ml[280,8703+2]..[280,8703+26])
                "Lfunction" (lambda/lambda.ml[280,8703+4]..[280,8703+13])
                [
                  core_type (lambda/lambda.ml[280,8703+17]..[280,8703+26])
                    Ptyp_constr "lfunction" (lambda/lambda.ml[280,8703+17]..[280,8703+26])
                    []
                ]
                None
              (lambda/lambda.ml[281,8730+2]..[281,8730+61])
                "Llet" (lambda/lambda.ml[281,8730+4]..[281,8730+8])
                [
                  core_type (lambda/lambda.ml[281,8730+12]..[281,8730+20])
                    Ptyp_constr "let_kind" (lambda/lambda.ml[281,8730+12]..[281,8730+20])
                    []
                  core_type (lambda/lambda.ml[281,8730+23]..[281,8730+33])
                    Ptyp_constr "value_kind" (lambda/lambda.ml[281,8730+23]..[281,8730+33])
                    []
                  core_type (lambda/lambda.ml[281,8730+36]..[281,8730+43])
                    Ptyp_constr "Ident.t" (lambda/lambda.ml[281,8730+36]..[281,8730+43])
                    []
                  core_type (lambda/lambda.ml[281,8730+46]..[281,8730+52])
                    Ptyp_constr "lambda" (lambda/lambda.ml[281,8730+46]..[281,8730+52])
                    []
                  core_type (lambda/lambda.ml[281,8730+55]..[281,8730+61])
                    Ptyp_constr "lambda" (lambda/lambda.ml[281,8730+55]..[281,8730+61])
                    []
                ]
                None
              (lambda/lambda.ml[282,8792+2]..[282,8792+53])
                "Lmutlet" (lambda/lambda.ml[282,8792+4]..[282,8792+11])
                [
                  core_type (lambda/lambda.ml[282,8792+15]..[282,8792+25])
                    Ptyp_constr "value_kind" (lambda/lambda.ml[282,8792+15]..[282,8792+25])
                    []
                  core_type (lambda/lambda.ml[282,8792+28]..[282,8792+35])
                    Ptyp_constr "Ident.t" (lambda/lambda.ml[282,8792+28]..[282,8792+35])
                    []
                  core_type (lambda/lambda.ml[282,8792+38]..[282,8792+44])
                    Ptyp_constr "lambda" (lambda/lambda.ml[282,8792+38]..[282,8792+44])
                    []
                  core_type (lambda/lambda.ml[282,8792+47]..[282,8792+53])
                    Ptyp_constr "lambda" (lambda/lambda.ml[282,8792+47]..[282,8792+53])
                    []
                ]
                None
              (lambda/lambda.ml[283,8846+2]..[283,8846+47])
                "Lletrec" (lambda/lambda.ml[283,8846+4]..[283,8846+11])
                [
                  core_type (lambda/lambda.ml[283,8846+15]..[283,8846+38])
                    Ptyp_constr "list" (lambda/lambda.ml[283,8846+34]..[283,8846+38])
                    [
                      core_type (lambda/lambda.ml[283,8846+16]..[283,8846+32])
                        Ptyp_tuple
                        [
                          core_type (lambda/lambda.ml[283,8846+16]..[283,8846+23])
                            Ptyp_constr "Ident.t" (lambda/lambda.ml[283,8846+16]..[283,8846+23])
                            []
                          core_type (lambda/lambda.ml[283,8846+26]..[283,8846+32])
                            Ptyp_constr "lambda" (lambda/lambda.ml[283,8846+26]..[283,8846+32])
                            []
                        ]
                    ]
                  core_type (lambda/lambda.ml[283,8846+41]..[283,8846+47])
                    Ptyp_constr "lambda" (lambda/lambda.ml[283,8846+41]..[283,8846+47])
                    []
                ]
                None
              (lambda/lambda.ml[284,8894+2]..[284,8894+54])
                "Lprim" (lambda/lambda.ml[284,8894+4]..[284,8894+9])
                [
                  core_type (lambda/lambda.ml[284,8894+13]..[284,8894+22])
                    Ptyp_constr "primitive" (lambda/lambda.ml[284,8894+13]..[284,8894+22])
                    []
                  core_type (lambda/lambda.ml[284,8894+25]..[284,8894+36])
                    Ptyp_constr "list" (lambda/lambda.ml[284,8894+32]..[284,8894+36])
                    [
                      core_type (lambda/lambda.ml[284,8894+25]..[284,8894+31])
                        Ptyp_constr "lambda" (lambda/lambda.ml[284,8894+25]..[284,8894+31])
                        []
                    ]
                  core_type (lambda/lambda.ml[284,8894+39]..[284,8894+54])
                    Ptyp_constr "scoped_location" (lambda/lambda.ml[284,8894+39]..[284,8894+54])
                    []
                ]
                None
              (lambda/lambda.ml[285,8949+2]..[285,8949+55])
                "Lswitch" (lambda/lambda.ml[285,8949+4]..[285,8949+11])
                [
                  core_type (lambda/lambda.ml[285,8949+15]..[285,8949+21])
                    Ptyp_constr "lambda" (lambda/lambda.ml[285,8949+15]..[285,8949+21])
                    []
                  core_type (lambda/lambda.ml[285,8949+24]..[285,8949+37])
                    Ptyp_constr "lambda_switch" (lambda/lambda.ml[285,8949+24]..[285,8949+37])
                    []
                  core_type (lambda/lambda.ml[285,8949+40]..[285,8949+55])
                    Ptyp_constr "scoped_location" (lambda/lambda.ml[285,8949+40]..[285,8949+55])
                    []
                ]
                None
              (lambda/lambda.ml[286,9005+2]..[287,9026+71])
                "Lstringswitch" (lambda/lambda.ml[286,9005+4]..[286,9005+17])
                [
                  core_type (lambda/lambda.ml[287,9026+6]..[287,9026+12])
                    Ptyp_constr "lambda" (lambda/lambda.ml[287,9026+6]..[287,9026+12])
                    []
                  core_type (lambda/lambda.ml[287,9026+15]..[287,9026+37])
                    Ptyp_constr "list" (lambda/lambda.ml[287,9026+33]..[287,9026+37])
                    [
                      core_type (lambda/lambda.ml[287,9026+16]..[287,9026+31])
                        Ptyp_tuple
                        [
                          core_type (lambda/lambda.ml[287,9026+16]..[287,9026+22])
                            Ptyp_constr "string" (lambda/lambda.ml[287,9026+16]..[287,9026+22])
                            []
                          core_type (lambda/lambda.ml[287,9026+25]..[287,9026+31])
                            Ptyp_constr "lambda" (lambda/lambda.ml[287,9026+25]..[287,9026+31])
                            []
                        ]
                    ]
                  core_type (lambda/lambda.ml[287,9026+40]..[287,9026+53])
                    Ptyp_constr "option" (lambda/lambda.ml[287,9026+47]..[287,9026+53])
                    [
                      core_type (lambda/lambda.ml[287,9026+40]..[287,9026+46])
                        Ptyp_constr "lambda" (lambda/lambda.ml[287,9026+40]..[287,9026+46])
                        []
                    ]
                  core_type (lambda/lambda.ml[287,9026+56]..[287,9026+71])
                    Ptyp_constr "scoped_location" (lambda/lambda.ml[287,9026+56]..[287,9026+71])
                    []
                ]
                None
              (lambda/lambda.ml[288,9098+2]..[288,9098+37])
                "Lstaticraise" (lambda/lambda.ml[288,9098+4]..[288,9098+16])
                [
                  core_type (lambda/lambda.ml[288,9098+20]..[288,9098+23])
                    Ptyp_constr "int" (lambda/lambda.ml[288,9098+20]..[288,9098+23])
                    []
                  core_type (lambda/lambda.ml[288,9098+26]..[288,9098+37])
                    Ptyp_constr "list" (lambda/lambda.ml[288,9098+33]..[288,9098+37])
                    [
                      core_type (lambda/lambda.ml[288,9098+26]..[288,9098+32])
                        Ptyp_constr "lambda" (lambda/lambda.ml[288,9098+26]..[288,9098+32])
                        []
                    ]
                ]
                None
              (lambda/lambda.ml[289,9136+2]..[289,9136+73])
                "Lstaticcatch" (lambda/lambda.ml[289,9136+4]..[289,9136+16])
                [
                  core_type (lambda/lambda.ml[289,9136+20]..[289,9136+26])
                    Ptyp_constr "lambda" (lambda/lambda.ml[289,9136+20]..[289,9136+26])
                    []
                  core_type (lambda/lambda.ml[289,9136+30]..[289,9136+63])
                    Ptyp_tuple
                    [
                      core_type (lambda/lambda.ml[289,9136+30]..[289,9136+33])
                        Ptyp_constr "int" (lambda/lambda.ml[289,9136+30]..[289,9136+33])
                        []
                      core_type (lambda/lambda.ml[289,9136+36]..[289,9136+63])
                        Ptyp_constr "list" (lambda/lambda.ml[289,9136+59]..[289,9136+63])
                        [
                          core_type (lambda/lambda.ml[289,9136+37]..[289,9136+57])
                            Ptyp_tuple
                            [
                              core_type (lambda/lambda.ml[289,9136+37]..[289,9136+44])
                                Ptyp_constr "Ident.t" (lambda/lambda.ml[289,9136+37]..[289,9136+44])
                                []
                              core_type (lambda/lambda.ml[289,9136+47]..[289,9136+57])
                                Ptyp_constr "value_kind" (lambda/lambda.ml[289,9136+47]..[289,9136+57])
                                []
                            ]
                        ]
                    ]
                  core_type (lambda/lambda.ml[289,9136+67]..[289,9136+73])
                    Ptyp_constr "lambda" (lambda/lambda.ml[289,9136+67]..[289,9136+73])
                    []
                ]
                None
              (lambda/lambda.ml[290,9210+2]..[290,9210+41])
                "Ltrywith" (lambda/lambda.ml[290,9210+4]..[290,9210+12])
                [
                  core_type (lambda/lambda.ml[290,9210+16]..[290,9210+22])
                    Ptyp_constr "lambda" (lambda/lambda.ml[290,9210+16]..[290,9210+22])
                    []
                  core_type (lambda/lambda.ml[290,9210+25]..[290,9210+32])
                    Ptyp_constr "Ident.t" (lambda/lambda.ml[290,9210+25]..[290,9210+32])
                    []
                  core_type (lambda/lambda.ml[290,9210+35]..[290,9210+41])
                    Ptyp_constr "lambda" (lambda/lambda.ml[290,9210+35]..[290,9210+41])
                    []
                ]
                None
              (lambda/lambda.ml[291,9252+2]..[291,9252+43])
                "Lifthenelse" (lambda/lambda.ml[291,9252+4]..[291,9252+15])
                [
                  core_type (lambda/lambda.ml[291,9252+19]..[291,9252+25])
                    Ptyp_constr "lambda" (lambda/lambda.ml[291,9252+19]..[291,9252+25])
                    []
                  core_type (lambda/lambda.ml[291,9252+28]..[291,9252+34])
                    Ptyp_constr "lambda" (lambda/lambda.ml[291,9252+28]..[291,9252+34])
                    []
                  core_type (lambda/lambda.ml[291,9252+37]..[291,9252+43])
                    Ptyp_constr "lambda" (lambda/lambda.ml[291,9252+37]..[291,9252+43])
                    []
                ]
                None
              (lambda/lambda.ml[292,9296+2]..[292,9296+32])
                "Lsequence" (lambda/lambda.ml[292,9296+4]..[292,9296+13])
                [
                  core_type (lambda/lambda.ml[292,9296+17]..[292,9296+23])
                    Ptyp_constr "lambda" (lambda/lambda.ml[292,9296+17]..[292,9296+23])
                    []
                  core_type (lambda/lambda.ml[292,9296+26]..[292,9296+32])
                    Ptyp_constr "lambda" (lambda/lambda.ml[292,9296+26]..[292,9296+32])
                    []
                ]
                None
              (lambda/lambda.ml[293,9329+2]..[293,9329+29])
                "Lwhile" (lambda/lambda.ml[293,9329+4]..[293,9329+10])
                [
                  core_type (lambda/lambda.ml[293,9329+14]..[293,9329+20])
                    Ptyp_constr "lambda" (lambda/lambda.ml[293,9329+14]..[293,9329+20])
                    []
                  core_type (lambda/lambda.ml[293,9329+23]..[293,9329+29])
                    Ptyp_constr "lambda" (lambda/lambda.ml[293,9329+23]..[293,9329+29])
                    []
                ]
                None
              (lambda/lambda.ml[294,9359+2]..[294,9359+63])
                "Lfor" (lambda/lambda.ml[294,9359+4]..[294,9359+8])
                [
                  core_type (lambda/lambda.ml[294,9359+12]..[294,9359+19])
                    Ptyp_constr "Ident.t" (lambda/lambda.ml[294,9359+12]..[294,9359+19])
                    []
                  core_type (lambda/lambda.ml[294,9359+22]..[294,9359+28])
                    Ptyp_constr "lambda" (lambda/lambda.ml[294,9359+22]..[294,9359+28])
                    []
                  core_type (lambda/lambda.ml[294,9359+31]..[294,9359+37])
                    Ptyp_constr "lambda" (lambda/lambda.ml[294,9359+31]..[294,9359+37])
                    []
                  core_type (lambda/lambda.ml[294,9359+40]..[294,9359+54])
                    Ptyp_constr "direction_flag" (lambda/lambda.ml[294,9359+40]..[294,9359+54])
                    []
                  core_type (lambda/lambda.ml[294,9359+57]..[294,9359+63])
                    Ptyp_constr "lambda" (lambda/lambda.ml[294,9359+57]..[294,9359+63])
                    []
                ]
                None
              (lambda/lambda.ml[295,9423+2]..[295,9423+31])
                "Lassign" (lambda/lambda.ml[295,9423+4]..[295,9423+11])
                [
                  core_type (lambda/lambda.ml[295,9423+15]..[295,9423+22])
                    Ptyp_constr "Ident.t" (lambda/lambda.ml[295,9423+15]..[295,9423+22])
                    []
                  core_type (lambda/lambda.ml[295,9423+25]..[295,9423+31])
                    Ptyp_constr "lambda" (lambda/lambda.ml[295,9423+25]..[295,9423+31])
                    []
                ]
                None
              (lambda/lambda.ml[296,9455+2]..[296,9455+72])
                "Lsend" (lambda/lambda.ml[296,9455+4]..[296,9455+9])
                [
                  core_type (lambda/lambda.ml[296,9455+13]..[296,9455+22])
                    Ptyp_constr "meth_kind" (lambda/lambda.ml[296,9455+13]..[296,9455+22])
                    []
                  core_type (lambda/lambda.ml[296,9455+25]..[296,9455+31])
                    Ptyp_constr "lambda" (lambda/lambda.ml[296,9455+25]..[296,9455+31])
                    []
                  core_type (lambda/lambda.ml[296,9455+34]..[296,9455+40])
                    Ptyp_constr "lambda" (lambda/lambda.ml[296,9455+34]..[296,9455+40])
                    []
                  core_type (lambda/lambda.ml[296,9455+43]..[296,9455+54])
                    Ptyp_constr "list" (lambda/lambda.ml[296,9455+50]..[296,9455+54])
                    [
                      core_type (lambda/lambda.ml[296,9455+43]..[296,9455+49])
                        Ptyp_constr "lambda" (lambda/lambda.ml[296,9455+43]..[296,9455+49])
                        []
                    ]
                  core_type (lambda/lambda.ml[296,9455+57]..[296,9455+72])
                    Ptyp_constr "scoped_location" (lambda/lambda.ml[296,9455+57]..[296,9455+72])
                    []
                ]
                None
              (lambda/lambda.ml[297,9528+2]..[297,9528+35])
                "Levent" (lambda/lambda.ml[297,9528+4]..[297,9528+10])
                [
                  core_type (lambda/lambda.ml[297,9528+14]..[297,9528+20])
                    Ptyp_constr "lambda" (lambda/lambda.ml[297,9528+14]..[297,9528+20])
                    []
                  core_type (lambda/lambda.ml[297,9528+23]..[297,9528+35])
                    Ptyp_constr "lambda_event" (lambda/lambda.ml[297,9528+23]..[297,9528+35])
                    []
                ]
                None
              (lambda/lambda.ml[298,9564+2]..[298,9564+31])
                "Lifused" (lambda/lambda.ml[298,9564+4]..[298,9564+11])
                [
                  core_type (lambda/lambda.ml[298,9564+15]..[298,9564+22])
                    Ptyp_constr "Ident.t" (lambda/lambda.ml[298,9564+15]..[298,9564+22])
                    []
                  core_type (lambda/lambda.ml[298,9564+25]..[298,9564+31])
                    Ptyp_constr "lambda" (lambda/lambda.ml[298,9564+25]..[298,9564+31])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "lfunction" (lambda/lambda.ml[300,9597+4]..[300,9597+13]) (lambda/lambda.ml[300,9597+0]..[306,9792+27])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lambda/lambda.ml[301,9613+4]..[301,9613+24])
                Immutable
                "kind" (lambda/lambda.ml[301,9613+4]..[301,9613+8])                core_type (lambda/lambda.ml[301,9613+10]..[301,9613+23])
                  Ptyp_constr "function_kind" (lambda/lambda.ml[301,9613+10]..[301,9613+23])
                  []
              (lambda/lambda.ml[302,9638+4]..[302,9638+40])
                Immutable
                "params" (lambda/lambda.ml[302,9638+4]..[302,9638+10])                core_type (lambda/lambda.ml[302,9638+12]..[302,9638+39])
                  Ptyp_constr "list" (lambda/lambda.ml[302,9638+35]..[302,9638+39])
                  [
                    core_type (lambda/lambda.ml[302,9638+13]..[302,9638+33])
                      Ptyp_tuple
                      [
                        core_type (lambda/lambda.ml[302,9638+13]..[302,9638+20])
                          Ptyp_constr "Ident.t" (lambda/lambda.ml[302,9638+13]..[302,9638+20])
                          []
                        core_type (lambda/lambda.ml[302,9638+23]..[302,9638+33])
                          Ptyp_constr "value_kind" (lambda/lambda.ml[302,9638+23]..[302,9638+33])
                          []
                      ]
                  ]
              (lambda/lambda.ml[303,9679+4]..[303,9679+23])
                Immutable
                "return" (lambda/lambda.ml[303,9679+4]..[303,9679+10])                core_type (lambda/lambda.ml[303,9679+12]..[303,9679+22])
                  Ptyp_constr "value_kind" (lambda/lambda.ml[303,9679+12]..[303,9679+22])
                  []
              (lambda/lambda.ml[304,9703+4]..[304,9703+17])
                Immutable
                "body" (lambda/lambda.ml[304,9703+4]..[304,9703+8])                core_type (lambda/lambda.ml[304,9703+10]..[304,9703+16])
                  Ptyp_constr "lambda" (lambda/lambda.ml[304,9703+10]..[304,9703+16])
                  []
              (lambda/lambda.ml[305,9721+4]..[305,9721+29])
                Immutable
                "attr" (lambda/lambda.ml[305,9721+4]..[305,9721+8])                core_type (lambda/lambda.ml[305,9721+10]..[305,9721+28])
                  Ptyp_constr "function_attribute" (lambda/lambda.ml[305,9721+10]..[305,9721+28])
                  []
              (lambda/lambda.ml[306,9792+4]..[306,9792+25])
                Immutable
                "loc" (lambda/lambda.ml[306,9792+4]..[306,9792+7])                core_type (lambda/lambda.ml[306,9792+9]..[306,9792+24])
                  Ptyp_constr "scoped_location" (lambda/lambda.ml[306,9792+9]..[306,9792+24])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "lambda_apply" (lambda/lambda.ml[308,9821+4]..[308,9821+16]) (lambda/lambda.ml[308,9821+0]..[314,9992+44])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lambda/lambda.ml[309,9840+4]..[309,9840+21])
                Immutable
                "ap_func" (lambda/lambda.ml[309,9840+4]..[309,9840+11])                core_type (lambda/lambda.ml[309,9840+14]..[309,9840+20])
                  Ptyp_constr "lambda" (lambda/lambda.ml[309,9840+14]..[309,9840+20])
                  []
              (lambda/lambda.ml[310,9862+4]..[310,9862+26])
                Immutable
                "ap_args" (lambda/lambda.ml[310,9862+4]..[310,9862+11])                core_type (lambda/lambda.ml[310,9862+14]..[310,9862+25])
                  Ptyp_constr "list" (lambda/lambda.ml[310,9862+21]..[310,9862+25])
                  [
                    core_type (lambda/lambda.ml[310,9862+14]..[310,9862+20])
                      Ptyp_constr "lambda" (lambda/lambda.ml[310,9862+14]..[310,9862+20])
                      []
                  ]
              (lambda/lambda.ml[311,9889+4]..[311,9889+29])
                Immutable
                "ap_loc" (lambda/lambda.ml[311,9889+4]..[311,9889+10])                core_type (lambda/lambda.ml[311,9889+13]..[311,9889+28])
                  Ptyp_constr "scoped_location" (lambda/lambda.ml[311,9889+13]..[311,9889+28])
                  []
              (lambda/lambda.ml[312,9919+4]..[312,9919+37])
                Immutable
                "ap_tailcall" (lambda/lambda.ml[312,9919+4]..[312,9919+15])                core_type (lambda/lambda.ml[312,9919+18]..[312,9919+36])
                  Ptyp_constr "tailcall_attribute" (lambda/lambda.ml[312,9919+18]..[312,9919+36])
                  []
              (lambda/lambda.ml[313,9957+4]..[313,9957+34])
                Immutable
                "ap_inlined" (lambda/lambda.ml[313,9957+4]..[313,9957+14])                core_type (lambda/lambda.ml[313,9957+17]..[313,9957+33])
                  Ptyp_constr "inline_attribute" (lambda/lambda.ml[313,9957+17]..[313,9957+33])
                  []
              (lambda/lambda.ml[314,9992+4]..[314,9992+42])
                Immutable
                "ap_specialised" (lambda/lambda.ml[314,9992+4]..[314,9992+18])                core_type (lambda/lambda.ml[314,9992+21]..[314,9992+41])
                  Ptyp_constr "specialise_attribute" (lambda/lambda.ml[314,9992+21]..[314,9992+41])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "lambda_switch" (lambda/lambda.ml[316,10038+4]..[316,10038+17]) (lambda/lambda.ml[316,10038+0]..[321,10176+34])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lambda/lambda.ml[317,10058+4]..[317,10058+22])
                Immutable
                "sw_numconsts" (lambda/lambda.ml[317,10058+4]..[317,10058+16])                core_type (lambda/lambda.ml[317,10058+18]..[317,10058+21])
                  Ptyp_constr "int" (lambda/lambda.ml[317,10058+18]..[317,10058+21])
                  []
              (lambda/lambda.ml[318,10081+4]..[318,10081+35])
                Immutable
                "sw_consts" (lambda/lambda.ml[318,10081+4]..[318,10081+13])                core_type (lambda/lambda.ml[318,10081+15]..[318,10081+34])
                  Ptyp_constr "list" (lambda/lambda.ml[318,10081+30]..[318,10081+34])
                  [
                    core_type (lambda/lambda.ml[318,10081+16]..[318,10081+28])
                      Ptyp_tuple
                      [
                        core_type (lambda/lambda.ml[318,10081+16]..[318,10081+19])
                          Ptyp_constr "int" (lambda/lambda.ml[318,10081+16]..[318,10081+19])
                          []
                        core_type (lambda/lambda.ml[318,10081+22]..[318,10081+28])
                          Ptyp_constr "lambda" (lambda/lambda.ml[318,10081+22]..[318,10081+28])
                          []
                      ]
                  ]
              (lambda/lambda.ml[319,10117+4]..[319,10117+22])
                Immutable
                "sw_numblocks" (lambda/lambda.ml[319,10117+4]..[319,10117+16])                core_type (lambda/lambda.ml[319,10117+18]..[319,10117+21])
                  Ptyp_constr "int" (lambda/lambda.ml[319,10117+18]..[319,10117+21])
                  []
              (lambda/lambda.ml[320,10140+4]..[320,10140+35])
                Immutable
                "sw_blocks" (lambda/lambda.ml[320,10140+4]..[320,10140+13])                core_type (lambda/lambda.ml[320,10140+15]..[320,10140+34])
                  Ptyp_constr "list" (lambda/lambda.ml[320,10140+30]..[320,10140+34])
                  [
                    core_type (lambda/lambda.ml[320,10140+16]..[320,10140+28])
                      Ptyp_tuple
                      [
                        core_type (lambda/lambda.ml[320,10140+16]..[320,10140+19])
                          Ptyp_constr "int" (lambda/lambda.ml[320,10140+16]..[320,10140+19])
                          []
                        core_type (lambda/lambda.ml[320,10140+22]..[320,10140+28])
                          Ptyp_constr "lambda" (lambda/lambda.ml[320,10140+22]..[320,10140+28])
                          []
                      ]
                  ]
              (lambda/lambda.ml[321,10176+4]..[321,10176+33])
                Immutable
                "sw_failaction" (lambda/lambda.ml[321,10176+4]..[321,10176+17])                core_type (lambda/lambda.ml[321,10176+20]..[321,10176+33])
                  Ptyp_constr "option" (lambda/lambda.ml[321,10176+27]..[321,10176+33])
                  [
                    core_type (lambda/lambda.ml[321,10176+20]..[321,10176+26])
                      Ptyp_constr "lambda" (lambda/lambda.ml[321,10176+20]..[321,10176+26])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "lambda_event" (lambda/lambda.ml[323,10212+4]..[323,10212+16]) (lambda/lambda.ml[323,10212+0]..[327,10324+20])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lambda/lambda.ml[324,10231+4]..[324,10231+29])
                Immutable
                "lev_loc" (lambda/lambda.ml[324,10231+4]..[324,10231+11])                core_type (lambda/lambda.ml[324,10231+13]..[324,10231+28])
                  Ptyp_constr "scoped_location" (lambda/lambda.ml[324,10231+13]..[324,10231+28])
                  []
              (lambda/lambda.ml[325,10261+4]..[325,10261+32])
                Immutable
                "lev_kind" (lambda/lambda.ml[325,10261+4]..[325,10261+12])                core_type (lambda/lambda.ml[325,10261+14]..[325,10261+31])
                  Ptyp_constr "lambda_event_kind" (lambda/lambda.ml[325,10261+14]..[325,10261+31])
                  []
              (lambda/lambda.ml[326,10294+4]..[326,10294+29])
                Immutable
                "lev_repr" (lambda/lambda.ml[326,10294+4]..[326,10294+12])                core_type (lambda/lambda.ml[326,10294+14]..[326,10294+28])
                  Ptyp_constr "option" (lambda/lambda.ml[326,10294+22]..[326,10294+28])
                  [
                    core_type (lambda/lambda.ml[326,10294+14]..[326,10294+21])
                      Ptyp_constr "ref" (lambda/lambda.ml[326,10294+18]..[326,10294+21])
                      [
                        core_type (lambda/lambda.ml[326,10294+14]..[326,10294+17])
                          Ptyp_constr "int" (lambda/lambda.ml[326,10294+14]..[326,10294+17])
                          []
                      ]
                  ]
              (lambda/lambda.ml[327,10324+4]..[327,10324+18])
                Immutable
                "lev_env" (lambda/lambda.ml[327,10324+4]..[327,10324+11])                core_type (lambda/lambda.ml[327,10324+13]..[327,10324+18])
                  Ptyp_constr "Env.t" (lambda/lambda.ml[327,10324+13]..[327,10324+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
      type_declaration "lambda_event_kind" (lambda/lambda.ml[329,10346+4]..[329,10346+21]) (lambda/lambda.ml[329,10346+0]..[334,10450+36])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_variant
            [
              (lambda/lambda.ml[330,10370+4]..[330,10370+14])
                "Lev_before" (lambda/lambda.ml[330,10370+4]..[330,10370+14])
                []
                None
              (lambda/lambda.ml[331,10385+2]..[331,10385+32])
                "Lev_after" (lambda/lambda.ml[331,10385+4]..[331,10385+13])
                [
                  core_type (lambda/lambda.ml[331,10385+17]..[331,10385+32])
                    Ptyp_constr "Types.type_expr" (lambda/lambda.ml[331,10385+17]..[331,10385+32])
                    []
                ]
                None
              (lambda/lambda.ml[332,10418+2]..[332,10418+16])
                "Lev_function" (lambda/lambda.ml[332,10418+4]..[332,10418+16])
                []
                None
              (lambda/lambda.ml[333,10435+2]..[333,10435+14])
                "Lev_pseudo" (lambda/lambda.ml[333,10435+4]..[333,10435+14])
                []
                None
              (lambda/lambda.ml[334,10450+2]..[334,10450+36])
                "Lev_module_definition" (lambda/lambda.ml[334,10450+4]..[334,10450+25])
                [
                  core_type (lambda/lambda.ml[334,10450+29]..[334,10450+36])
                    Ptyp_constr "Ident.t" (lambda/lambda.ml[334,10450+29]..[334,10450+36])
                    []
                ]
                None
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/lambda.ml[336,10488+0]..[340,10601+19])
    Pstr_type Rec
    [
      type_declaration "program" (lambda/lambda.ml[336,10488+5]..[336,10488+12]) (lambda/lambda.ml[336,10488+0]..[340,10601+19])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (lambda/lambda.ml[337,10503+4]..[337,10503+27])
                Immutable
                "module_ident" (lambda/lambda.ml[337,10503+4]..[337,10503+16])                core_type (lambda/lambda.ml[337,10503+19]..[337,10503+26])
                  Ptyp_constr "Ident.t" (lambda/lambda.ml[337,10503+19]..[337,10503+26])
                  []
              (lambda/lambda.ml[338,10531+4]..[338,10531+33])
                Immutable
                "main_module_block_size" (lambda/lambda.ml[338,10531+4]..[338,10531+26])                core_type (lambda/lambda.ml[338,10531+29]..[338,10531+32])
                  Ptyp_constr "int" (lambda/lambda.ml[338,10531+29]..[338,10531+32])
                  []
              (lambda/lambda.ml[339,10565+4]..[339,10565+35])
                Immutable
                "required_globals" (lambda/lambda.ml[339,10565+4]..[339,10565+20])                core_type (lambda/lambda.ml[339,10565+23]..[339,10565+34])
                  Ptyp_constr "Ident.Set.t" (lambda/lambda.ml[339,10565+23]..[339,10565+34])
                  []
              (lambda/lambda.ml[340,10601+4]..[340,10601+17])
                Immutable
                "code" (lambda/lambda.ml[340,10601+4]..[340,10601+8])                core_type (lambda/lambda.ml[340,10601+11]..[340,10601+17])
                  Ptyp_constr "lambda" (lambda/lambda.ml[340,10601+11]..[340,10601+17])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (lambda/lambda.ml[342,10622+0]..[342,10622+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[342,10622+4]..[342,10622+13])
          Ppat_var "const_int" (lambda/lambda.ml[342,10622+4]..[342,10622+13])
        expression (lambda/lambda.ml[342,10622+14]..[342,10622+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[342,10622+14]..[342,10622+15])
            Ppat_var "n" (lambda/lambda.ml[342,10622+14]..[342,10622+15])
          expression (lambda/lambda.ml[342,10622+18]..[342,10622+42])
            Pexp_construct "Const_base" (lambda/lambda.ml[342,10622+18]..[342,10622+28])
            Some
              expression (lambda/lambda.ml[342,10622+29]..[342,10622+42])
                Pexp_construct "Const_int" (lambda/lambda.ml[342,10622+30]..[342,10622+39])
                Some
                  expression (lambda/lambda.ml[342,10622+40]..[342,10622+41])
                    Pexp_ident "n" (lambda/lambda.ml[342,10622+40]..[342,10622+41])
    ]
  structure_item (lambda/lambda.ml[344,10666+0]..[344,10666+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[344,10666+4]..[344,10666+14])
          Ppat_var "const_unit" (lambda/lambda.ml[344,10666+4]..[344,10666+14])
        expression (lambda/lambda.ml[344,10666+17]..[344,10666+28])
          Pexp_apply
          expression (lambda/lambda.ml[344,10666+17]..[344,10666+26])
            Pexp_ident "const_int" (lambda/lambda.ml[344,10666+17]..[344,10666+26])
          [
            <arg>
            Nolabel
              expression (lambda/lambda.ml[344,10666+27]..[344,10666+28])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (lambda/lambda.ml[346,10696+0]..[346,10696+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[346,10696+4]..[346,10696+15])
          Ppat_var "lambda_unit" (lambda/lambda.ml[346,10696+4]..[346,10696+15])
        expression (lambda/lambda.ml[346,10696+18]..[346,10696+35])
          Pexp_construct "Lconst" (lambda/lambda.ml[346,10696+18]..[346,10696+24])
          Some
            expression (lambda/lambda.ml[346,10696+25]..[346,10696+35])
              Pexp_ident "const_unit" (lambda/lambda.ml[346,10696+25]..[346,10696+35])
    ]
  structure_item (lambda/lambda.ml[348,10733+0]..[354,10895+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[348,10733+4]..[348,10733+30])
          Ppat_var "default_function_attribute" (lambda/lambda.ml[348,10733+4]..[348,10733+30])
        expression (lambda/lambda.ml[348,10733+33]..[354,10895+1])
          Pexp_record
          [
            "inline" (lambda/lambda.ml[349,10768+2]..[349,10768+8])
              expression (lambda/lambda.ml[349,10768+11]..[349,10768+25])
                Pexp_construct "Default_inline" (lambda/lambda.ml[349,10768+11]..[349,10768+25])
                None
            "specialise" (lambda/lambda.ml[350,10795+2]..[350,10795+12])
              expression (lambda/lambda.ml[350,10795+15]..[350,10795+33])
                Pexp_construct "Default_specialise" (lambda/lambda.ml[350,10795+15]..[350,10795+33])
                None
            "local" (lambda/lambda.ml[351,10830+2]..[351,10830+7])
              expression (lambda/lambda.ml[351,10830+10]..[351,10830+23])
                Pexp_construct "Default_local" (lambda/lambda.ml[351,10830+10]..[351,10830+23])
                None
            "is_a_functor" (lambda/lambda.ml[352,10855+2]..[352,10855+14])
              expression (lambda/lambda.ml[352,10855+17]..[352,10855+22])
                Pexp_construct "false" (lambda/lambda.ml[352,10855+17]..[352,10855+22])
                None
            "stub" (lambda/lambda.ml[353,10879+2]..[353,10879+6])
              expression (lambda/lambda.ml[353,10879+9]..[353,10879+14])
                Pexp_construct "false" (lambda/lambda.ml[353,10879+9]..[353,10879+14])
                None
          ]
          None
    ]
  structure_item (lambda/lambda.ml[356,10898+0]..[357,10927+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[356,10898+4]..[356,10898+26])
          Ppat_var "default_stub_attribute" (lambda/lambda.ml[356,10898+4]..[356,10898+26])
        expression (lambda/lambda.ml[357,10927+2]..[357,10927+49])
          Pexp_record
          [
            "stub" (lambda/lambda.ml[357,10927+36]..[357,10927+40])
              expression (lambda/lambda.ml[357,10927+43]..[357,10927+47])
                Pexp_construct "true" (lambda/lambda.ml[357,10927+43]..[357,10927+47])
                None
          ]
          Some
            expression (lambda/lambda.ml[357,10927+4]..[357,10927+30])
              Pexp_ident "default_function_attribute" (lambda/lambda.ml[357,10927+4]..[357,10927+30])
    ]
  structure_item (lambda/lambda.ml[365,11116+0]..[365,11116+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[365,11116+4]..[365,11116+11])
          Ppat_var "max_raw" (lambda/lambda.ml[365,11116+4]..[365,11116+11])
        expression (lambda/lambda.ml[365,11116+14]..[365,11116+16])
          Pexp_constant PConst_int (32,None)
    ]
  structure_item (lambda/lambda.ml[367,11134+0]..[450,14093+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[367,11134+4]..[367,11134+12])
          Ppat_var "make_key" (lambda/lambda.ml[367,11134+4]..[367,11134+12])
        expression (lambda/lambda.ml[367,11134+13]..[450,14093+25]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[367,11134+13]..[367,11134+14])
            Ppat_var "e" (lambda/lambda.ml[367,11134+13]..[367,11134+14])
          expression (lambda/lambda.ml[368,11151+2]..[450,14093+25])
            Pexp_letexception
            extension_constructor (lambda/lambda.ml[368,11151+16]..[368,11151+26])
              pext_name = "Not_simple"
              pext_kind =
                Pext_decl
                  []
                  None
            expression (lambda/lambda.ml[369,11181+2]..[450,14093+25])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lambda/lambda.ml[369,11181+6]..[369,11181+11])
                    Ppat_var "count" (lambda/lambda.ml[369,11181+6]..[369,11181+11])
                  expression (lambda/lambda.ml[369,11181+14]..[369,11181+19])
                    Pexp_apply
                    expression (lambda/lambda.ml[369,11181+14]..[369,11181+17])
                      Pexp_ident "ref" (lambda/lambda.ml[369,11181+14]..[369,11181+17])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[369,11181+18]..[369,11181+19])
                          Pexp_constant PConst_int (0,None)
                    ]
                <def>
                  pattern (lambda/lambda.ml[370,11235+6]..[370,11235+14])
                    Ppat_var "make_key" (lambda/lambda.ml[370,11235+6]..[370,11235+14])
                  expression (lambda/lambda.ml[370,11235+17]..[370,11235+44])
                    Pexp_apply
                    expression (lambda/lambda.ml[370,11235+17]..[370,11235+41])
                      Pexp_ident "Ident.make_key_generator" (lambda/lambda.ml[370,11235+17]..[370,11235+41])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[370,11235+42]..[370,11235+44])
                          Pexp_construct "()" (lambda/lambda.ml[370,11235+42]..[370,11235+44])
                          None
                    ]
              ]
              expression (lambda/lambda.ml[372,11344+2]..[450,14093+25])
                Pexp_let Rec
                [
                  <def>
                    pattern (lambda/lambda.ml[372,11344+10]..[372,11344+16])
                      Ppat_var "tr_rec" (lambda/lambda.ml[372,11344+10]..[372,11344+16])
                    expression (lambda/lambda.ml[372,11344+17]..[434,13659+24]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/lambda.ml[372,11344+17]..[372,11344+20])
                        Ppat_var "env" (lambda/lambda.ml[372,11344+17]..[372,11344+20])
                      expression (lambda/lambda.ml[372,11344+21]..[434,13659+24]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/lambda.ml[372,11344+21]..[372,11344+22])
                          Ppat_var "e" (lambda/lambda.ml[372,11344+21]..[372,11344+22])
                        expression (lambda/lambda.ml[373,11369+4]..[434,13659+24])
                          Pexp_sequence
                          expression (lambda/lambda.ml[373,11369+4]..[373,11369+14])
                            Pexp_apply
                            expression (lambda/lambda.ml[373,11369+4]..[373,11369+8])
                              Pexp_ident "incr" (lambda/lambda.ml[373,11369+4]..[373,11369+8])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[373,11369+9]..[373,11369+14])
                                  Pexp_ident "count" (lambda/lambda.ml[373,11369+9]..[373,11369+14])
                            ]
                          expression (lambda/lambda.ml[374,11386+4]..[434,13659+24])
                            Pexp_sequence
                            expression (lambda/lambda.ml[374,11386+4]..[374,11386+45])
                              Pexp_ifthenelse
                              expression (lambda/lambda.ml[374,11386+7]..[374,11386+23])
                                Pexp_apply
                                expression (lambda/lambda.ml[374,11386+14]..[374,11386+15])
                                  Pexp_ident ">" (lambda/lambda.ml[374,11386+14]..[374,11386+15])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[374,11386+7]..[374,11386+13])
                                      Pexp_apply
                                      expression (lambda/lambda.ml[374,11386+7]..[374,11386+8])
                                        Pexp_ident "!" (lambda/lambda.ml[374,11386+7]..[374,11386+8])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[374,11386+8]..[374,11386+13])
                                            Pexp_ident "count" (lambda/lambda.ml[374,11386+8]..[374,11386+13])
                                      ]
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[374,11386+16]..[374,11386+23])
                                      Pexp_ident "max_raw" (lambda/lambda.ml[374,11386+16]..[374,11386+23])
                                ]
                              expression (lambda/lambda.ml[374,11386+29]..[374,11386+45])
                                Pexp_apply
                                expression (lambda/lambda.ml[374,11386+29]..[374,11386+34])
                                  Pexp_ident "raise" (lambda/lambda.ml[374,11386+29]..[374,11386+34])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[374,11386+35]..[374,11386+45])
                                      Pexp_construct "Not_simple" (lambda/lambda.ml[374,11386+35]..[374,11386+45])
                                      None
                                ]
                              None
                            expression (lambda/lambda.ml[375,11450+4]..[434,13659+24])
                              Pexp_match
                              expression (lambda/lambda.ml[375,11450+10]..[375,11450+11])
                                Pexp_ident "e" (lambda/lambda.ml[375,11450+10]..[375,11450+11])
                              [
                                <case>
                                  pattern (lambda/lambda.ml[376,11467+6]..[377,11481+16])
                                    Ppat_or
                                    pattern (lambda/lambda.ml[376,11467+6]..[376,11467+13])
                                      Ppat_construct "Lvar" (lambda/lambda.ml[376,11467+6]..[376,11467+10])
                                      Some
                                        []
                                        pattern (lambda/lambda.ml[376,11467+11]..[376,11467+13])
                                          Ppat_var "id" (lambda/lambda.ml[376,11467+11]..[376,11467+13])
                                    pattern (lambda/lambda.ml[377,11481+6]..[377,11481+16])
                                      Ppat_construct "Lmutvar" (lambda/lambda.ml[377,11481+6]..[377,11481+13])
                                      Some
                                        []
                                        pattern (lambda/lambda.ml[377,11481+14]..[377,11481+16])
                                          Ppat_var "id" (lambda/lambda.ml[377,11481+14]..[377,11481+16])
                                  expression (lambda/lambda.ml[378,11501+6]..[381,11576+9])
                                    Pexp_try
                                    expression (lambda/lambda.ml[379,11513+12]..[379,11513+34])
                                      Pexp_apply
                                      expression (lambda/lambda.ml[379,11513+12]..[379,11513+27])
                                        Pexp_ident "Ident.find_same" (lambda/lambda.ml[379,11513+12]..[379,11513+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[379,11513+28]..[379,11513+30])
                                            Pexp_ident "id" (lambda/lambda.ml[379,11513+28]..[379,11513+30])
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[379,11513+31]..[379,11513+34])
                                            Pexp_ident "env" (lambda/lambda.ml[379,11513+31]..[379,11513+34])
                                      ]
                                    [
                                      <case>
                                        pattern (lambda/lambda.ml[380,11548+13]..[380,11548+22])
                                          Ppat_construct "Not_found" (lambda/lambda.ml[380,11548+13]..[380,11548+22])
                                          None
                                        expression (lambda/lambda.ml[380,11548+26]..[380,11548+27])
                                          Pexp_ident "e" (lambda/lambda.ml[380,11548+26]..[380,11548+27])
                                    ]
                                <case>
                                  pattern (lambda/lambda.ml[382,11586+6]..[382,11586+43])
                                    Ppat_construct "Lconst" (lambda/lambda.ml[382,11586+6]..[382,11586+12])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[382,11586+14]..[382,11586+43])
                                        Ppat_construct "Const_base" (lambda/lambda.ml[382,11586+15]..[382,11586+25])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[382,11586+26]..[382,11586+42])
                                            Ppat_construct "Const_string" (lambda/lambda.ml[382,11586+27]..[382,11586+39])
                                            Some
                                              []
                                              pattern (lambda/lambda.ml[382,11586+40]..[382,11586+41])
                                                Ppat_any
                                  expression (lambda/lambda.ml[384,11680+8]..[384,11680+24])
                                    Pexp_apply
                                    expression (lambda/lambda.ml[384,11680+8]..[384,11680+13])
                                      Pexp_ident "raise" (lambda/lambda.ml[384,11680+8]..[384,11680+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/lambda.ml[384,11680+14]..[384,11680+24])
                                          Pexp_construct "Not_simple" (lambda/lambda.ml[384,11680+14]..[384,11680+24])
                                          None
                                    ]
                                <case>
                                  pattern (lambda/lambda.ml[385,11705+6]..[385,11705+14])
                                    Ppat_construct "Lconst" (lambda/lambda.ml[385,11705+6]..[385,11705+12])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[385,11705+13]..[385,11705+14])
                                        Ppat_any
                                  expression (lambda/lambda.ml[385,11705+18]..[385,11705+19])
                                    Pexp_ident "e" (lambda/lambda.ml[385,11705+18]..[385,11705+19])
                                <case>
                                  pattern (lambda/lambda.ml[386,11725+6]..[386,11725+15])
                                    Ppat_construct "Lapply" (lambda/lambda.ml[386,11725+6]..[386,11725+12])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[386,11725+13]..[386,11725+15])
                                        Ppat_var "ap" (lambda/lambda.ml[386,11725+13]..[386,11725+15])
                                  expression (lambda/lambda.ml[387,11744+8]..[389,11859+45])
                                    Pexp_construct "Lapply" (lambda/lambda.ml[387,11744+8]..[387,11744+14])
                                    Some
                                      expression (lambda/lambda.ml[387,11744+15]..[389,11859+45])
                                        Pexp_record
                                        [
                                          "ap_func" (lambda/lambda.ml[387,11744+24]..[387,11744+31])
                                            expression (lambda/lambda.ml[387,11744+34]..[387,11744+55])
                                              Pexp_apply
                                              expression (lambda/lambda.ml[387,11744+34]..[387,11744+40])
                                                Pexp_ident "tr_rec" (lambda/lambda.ml[387,11744+34]..[387,11744+40])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[387,11744+41]..[387,11744+44])
                                                    Pexp_ident "env" (lambda/lambda.ml[387,11744+41]..[387,11744+44])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[387,11744+45]..[387,11744+55])
                                                    Pexp_field
                                                    expression (lambda/lambda.ml[387,11744+45]..[387,11744+47])
                                                      Pexp_ident "ap" (lambda/lambda.ml[387,11744+45]..[387,11744+47])
                                                    "ap_func" (lambda/lambda.ml[387,11744+48]..[387,11744+55])
                                              ]
                                          "ap_args" (lambda/lambda.ml[388,11801+24]..[388,11801+31])
                                            expression (lambda/lambda.ml[388,11801+34]..[388,11801+56])
                                              Pexp_apply
                                              expression (lambda/lambda.ml[388,11801+34]..[388,11801+41])
                                                Pexp_ident "tr_recs" (lambda/lambda.ml[388,11801+34]..[388,11801+41])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[388,11801+42]..[388,11801+45])
                                                    Pexp_ident "env" (lambda/lambda.ml[388,11801+42]..[388,11801+45])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[388,11801+46]..[388,11801+56])
                                                    Pexp_field
                                                    expression (lambda/lambda.ml[388,11801+46]..[388,11801+48])
                                                      Pexp_ident "ap" (lambda/lambda.ml[388,11801+46]..[388,11801+48])
                                                    "ap_args" (lambda/lambda.ml[388,11801+49]..[388,11801+56])
                                              ]
                                          "ap_loc" (lambda/lambda.ml[389,11859+24]..[389,11859+30])
                                            expression (lambda/lambda.ml[389,11859+33]..[389,11859+44])
                                              Pexp_construct "Loc_unknown" (lambda/lambda.ml[389,11859+33]..[389,11859+44])
                                              None
                                        ]
                                        Some
                                          expression (lambda/lambda.ml[387,11744+16]..[387,11744+18])
                                            Pexp_ident "ap" (lambda/lambda.ml[387,11744+16]..[387,11744+18])
                                <case>
                                  pattern (lambda/lambda.ml[390,11905+6]..[390,11905+28])
                                    Ppat_construct "Llet" (lambda/lambda.ml[390,11905+6]..[390,11905+10])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[390,11905+11]..[390,11905+28])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[390,11905+12]..[390,11905+17])
                                            Ppat_construct "Alias" (lambda/lambda.ml[390,11905+12]..[390,11905+17])
                                            None
                                          pattern (lambda/lambda.ml[390,11905+18]..[390,11905+20])
                                            Ppat_var "_k" (lambda/lambda.ml[390,11905+18]..[390,11905+20])
                                          pattern (lambda/lambda.ml[390,11905+21]..[390,11905+22])
                                            Ppat_var "x" (lambda/lambda.ml[390,11905+21]..[390,11905+22])
                                          pattern (lambda/lambda.ml[390,11905+23]..[390,11905+25])
                                            Ppat_var "ex" (lambda/lambda.ml[390,11905+23]..[390,11905+25])
                                          pattern (lambda/lambda.ml[390,11905+26]..[390,11905+27])
                                            Ppat_var "e" (lambda/lambda.ml[390,11905+26]..[390,11905+27])
                                        ]
                                  expression (lambda/lambda.ml[391,11972+8]..[392,12006+37])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/lambda.ml[391,11972+12]..[391,11972+14])
                                          Ppat_var "ex" (lambda/lambda.ml[391,11972+12]..[391,11972+14])
                                        expression (lambda/lambda.ml[391,11972+17]..[391,11972+30])
                                          Pexp_apply
                                          expression (lambda/lambda.ml[391,11972+17]..[391,11972+23])
                                            Pexp_ident "tr_rec" (lambda/lambda.ml[391,11972+17]..[391,11972+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/lambda.ml[391,11972+24]..[391,11972+27])
                                                Pexp_ident "env" (lambda/lambda.ml[391,11972+24]..[391,11972+27])
                                            <arg>
                                            Nolabel
                                              expression (lambda/lambda.ml[391,11972+28]..[391,11972+30])
                                                Pexp_ident "ex" (lambda/lambda.ml[391,11972+28]..[391,11972+30])
                                          ]
                                    ]
                                    expression (lambda/lambda.ml[392,12006+8]..[392,12006+37])
                                      Pexp_apply
                                      expression (lambda/lambda.ml[392,12006+8]..[392,12006+14])
                                        Pexp_ident "tr_rec" (lambda/lambda.ml[392,12006+8]..[392,12006+14])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[392,12006+15]..[392,12006+35])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[392,12006+16]..[392,12006+25])
                                              Pexp_ident "Ident.add" (lambda/lambda.ml[392,12006+16]..[392,12006+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[392,12006+26]..[392,12006+27])
                                                  Pexp_ident "x" (lambda/lambda.ml[392,12006+26]..[392,12006+27])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[392,12006+28]..[392,12006+30])
                                                  Pexp_ident "ex" (lambda/lambda.ml[392,12006+28]..[392,12006+30])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[392,12006+31]..[392,12006+34])
                                                  Pexp_ident "env" (lambda/lambda.ml[392,12006+31]..[392,12006+34])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[392,12006+36]..[392,12006+37])
                                            Pexp_ident "e" (lambda/lambda.ml[392,12006+36]..[392,12006+37])
                                      ]
                                <case>
                                  pattern (lambda/lambda.ml[393,12044+6]..[393,12044+48])
                                    Ppat_construct "Llet" (lambda/lambda.ml[393,12044+6]..[393,12044+10])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[393,12044+11]..[393,12044+48])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[393,12044+12]..[393,12044+32])
                                            Ppat_or
                                            pattern (lambda/lambda.ml[393,12044+13]..[393,12044+19])
                                              Ppat_construct "Strict" (lambda/lambda.ml[393,12044+13]..[393,12044+19])
                                              None
                                            pattern (lambda/lambda.ml[393,12044+22]..[393,12044+31])
                                              Ppat_construct "StrictOpt" (lambda/lambda.ml[393,12044+22]..[393,12044+31])
                                              None
                                          pattern (lambda/lambda.ml[393,12044+33]..[393,12044+35])
                                            Ppat_var "_k" (lambda/lambda.ml[393,12044+33]..[393,12044+35])
                                          pattern (lambda/lambda.ml[393,12044+36]..[393,12044+37])
                                            Ppat_var "x" (lambda/lambda.ml[393,12044+36]..[393,12044+37])
                                          pattern (lambda/lambda.ml[393,12044+38]..[393,12044+40])
                                            Ppat_var "ex" (lambda/lambda.ml[393,12044+38]..[393,12044+40])
                                          pattern (lambda/lambda.ml[393,12044+41]..[393,12044+47])
                                            Ppat_construct "Lvar" (lambda/lambda.ml[393,12044+41]..[393,12044+45])
                                            Some
                                              []
                                              pattern (lambda/lambda.ml[393,12044+46]..[393,12044+47])
                                                Ppat_var "v" (lambda/lambda.ml[393,12044+46]..[393,12044+47])
                                        ]
                                  <when>
                                    expression (lambda/lambda.ml[393,12044+54]..[393,12044+68])
                                      Pexp_apply
                                      expression (lambda/lambda.ml[393,12044+54]..[393,12044+64])
                                        Pexp_ident "Ident.same" (lambda/lambda.ml[393,12044+54]..[393,12044+64])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[393,12044+65]..[393,12044+66])
                                            Pexp_ident "v" (lambda/lambda.ml[393,12044+65]..[393,12044+66])
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[393,12044+67]..[393,12044+68])
                                            Pexp_ident "x" (lambda/lambda.ml[393,12044+67]..[393,12044+68])
                                      ]
                                  expression (lambda/lambda.ml[394,12116+8]..[394,12116+21])
                                    Pexp_apply
                                    expression (lambda/lambda.ml[394,12116+8]..[394,12116+14])
                                      Pexp_ident "tr_rec" (lambda/lambda.ml[394,12116+8]..[394,12116+14])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/lambda.ml[394,12116+15]..[394,12116+18])
                                          Pexp_ident "env" (lambda/lambda.ml[394,12116+15]..[394,12116+18])
                                      <arg>
                                      Nolabel
                                        expression (lambda/lambda.ml[394,12116+19]..[394,12116+21])
                                          Pexp_ident "ex" (lambda/lambda.ml[394,12116+19]..[394,12116+21])
                                    ]
                                <case>
                                  pattern (lambda/lambda.ml[395,12138+6]..[395,12138+25])
                                    Ppat_construct "Llet" (lambda/lambda.ml[395,12138+6]..[395,12138+10])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[395,12138+11]..[395,12138+25])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[395,12138+12]..[395,12138+15])
                                            Ppat_var "str" (lambda/lambda.ml[395,12138+12]..[395,12138+15])
                                          pattern (lambda/lambda.ml[395,12138+16]..[395,12138+17])
                                            Ppat_var "k" (lambda/lambda.ml[395,12138+16]..[395,12138+17])
                                          pattern (lambda/lambda.ml[395,12138+18]..[395,12138+19])
                                            Ppat_var "x" (lambda/lambda.ml[395,12138+18]..[395,12138+19])
                                          pattern (lambda/lambda.ml[395,12138+20]..[395,12138+22])
                                            Ppat_var "ex" (lambda/lambda.ml[395,12138+20]..[395,12138+22])
                                          pattern (lambda/lambda.ml[395,12138+23]..[395,12138+24])
                                            Ppat_var "e" (lambda/lambda.ml[395,12138+23]..[395,12138+24])
                                        ]
                                  expression (lambda/lambda.ml[397,12241+8]..[399,12305+61])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/lambda.ml[397,12241+12]..[397,12241+14])
                                          Ppat_var "ex" (lambda/lambda.ml[397,12241+12]..[397,12241+14])
                                        expression (lambda/lambda.ml[397,12241+17]..[397,12241+30])
                                          Pexp_apply
                                          expression (lambda/lambda.ml[397,12241+17]..[397,12241+23])
                                            Pexp_ident "tr_rec" (lambda/lambda.ml[397,12241+17]..[397,12241+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/lambda.ml[397,12241+24]..[397,12241+27])
                                                Pexp_ident "env" (lambda/lambda.ml[397,12241+24]..[397,12241+27])
                                            <arg>
                                            Nolabel
                                              expression (lambda/lambda.ml[397,12241+28]..[397,12241+30])
                                                Pexp_ident "ex" (lambda/lambda.ml[397,12241+28]..[397,12241+30])
                                          ]
                                    ]
                                    expression (lambda/lambda.ml[398,12275+8]..[399,12305+61])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/lambda.ml[398,12275+12]..[398,12275+13])
                                            Ppat_var "y" (lambda/lambda.ml[398,12275+12]..[398,12275+13])
                                          expression (lambda/lambda.ml[398,12275+16]..[398,12275+26])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[398,12275+16]..[398,12275+24])
                                              Pexp_ident "make_key" (lambda/lambda.ml[398,12275+16]..[398,12275+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[398,12275+25]..[398,12275+26])
                                                  Pexp_ident "x" (lambda/lambda.ml[398,12275+25]..[398,12275+26])
                                            ]
                                      ]
                                      expression (lambda/lambda.ml[399,12305+8]..[399,12305+61])
                                        Pexp_construct "Llet" (lambda/lambda.ml[399,12305+8]..[399,12305+12])
                                        Some
                                          expression (lambda/lambda.ml[399,12305+13]..[399,12305+61])
                                            Pexp_tuple
                                            [
                                              expression (lambda/lambda.ml[399,12305+14]..[399,12305+17])
                                                Pexp_ident "str" (lambda/lambda.ml[399,12305+14]..[399,12305+17])
                                              expression (lambda/lambda.ml[399,12305+18]..[399,12305+19])
                                                Pexp_ident "k" (lambda/lambda.ml[399,12305+18]..[399,12305+19])
                                              expression (lambda/lambda.ml[399,12305+20]..[399,12305+21])
                                                Pexp_ident "y" (lambda/lambda.ml[399,12305+20]..[399,12305+21])
                                              expression (lambda/lambda.ml[399,12305+22]..[399,12305+24])
                                                Pexp_ident "ex" (lambda/lambda.ml[399,12305+22]..[399,12305+24])
                                              expression (lambda/lambda.ml[399,12305+25]..[399,12305+60])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[399,12305+25]..[399,12305+31])
                                                  Pexp_ident "tr_rec" (lambda/lambda.ml[399,12305+25]..[399,12305+31])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[399,12305+32]..[399,12305+58])
                                                      Pexp_apply
                                                      expression (lambda/lambda.ml[399,12305+33]..[399,12305+42])
                                                        Pexp_ident "Ident.add" (lambda/lambda.ml[399,12305+33]..[399,12305+42])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[399,12305+43]..[399,12305+44])
                                                            Pexp_ident "x" (lambda/lambda.ml[399,12305+43]..[399,12305+44])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[399,12305+45]..[399,12305+53])
                                                            Pexp_construct "Lvar" (lambda/lambda.ml[399,12305+46]..[399,12305+50])
                                                            Some
                                                              expression (lambda/lambda.ml[399,12305+51]..[399,12305+52])
                                                                Pexp_ident "y" (lambda/lambda.ml[399,12305+51]..[399,12305+52])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[399,12305+54]..[399,12305+57])
                                                            Pexp_ident "env" (lambda/lambda.ml[399,12305+54]..[399,12305+57])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[399,12305+59]..[399,12305+60])
                                                      Pexp_ident "e" (lambda/lambda.ml[399,12305+59]..[399,12305+60])
                                                ]
                                            ]
                                <case>
                                  pattern (lambda/lambda.ml[400,12367+6]..[400,12367+24])
                                    Ppat_construct "Lmutlet" (lambda/lambda.ml[400,12367+6]..[400,12367+13])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[400,12367+14]..[400,12367+24])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[400,12367+15]..[400,12367+16])
                                            Ppat_var "k" (lambda/lambda.ml[400,12367+15]..[400,12367+16])
                                          pattern (lambda/lambda.ml[400,12367+17]..[400,12367+18])
                                            Ppat_var "x" (lambda/lambda.ml[400,12367+17]..[400,12367+18])
                                          pattern (lambda/lambda.ml[400,12367+19]..[400,12367+21])
                                            Ppat_var "ex" (lambda/lambda.ml[400,12367+19]..[400,12367+21])
                                          pattern (lambda/lambda.ml[400,12367+22]..[400,12367+23])
                                            Ppat_var "e" (lambda/lambda.ml[400,12367+22]..[400,12367+23])
                                        ]
                                  expression (lambda/lambda.ml[401,12395+8]..[403,12459+63])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (lambda/lambda.ml[401,12395+12]..[401,12395+14])
                                          Ppat_var "ex" (lambda/lambda.ml[401,12395+12]..[401,12395+14])
                                        expression (lambda/lambda.ml[401,12395+17]..[401,12395+30])
                                          Pexp_apply
                                          expression (lambda/lambda.ml[401,12395+17]..[401,12395+23])
                                            Pexp_ident "tr_rec" (lambda/lambda.ml[401,12395+17]..[401,12395+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/lambda.ml[401,12395+24]..[401,12395+27])
                                                Pexp_ident "env" (lambda/lambda.ml[401,12395+24]..[401,12395+27])
                                            <arg>
                                            Nolabel
                                              expression (lambda/lambda.ml[401,12395+28]..[401,12395+30])
                                                Pexp_ident "ex" (lambda/lambda.ml[401,12395+28]..[401,12395+30])
                                          ]
                                    ]
                                    expression (lambda/lambda.ml[402,12429+8]..[403,12459+63])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (lambda/lambda.ml[402,12429+12]..[402,12429+13])
                                            Ppat_var "y" (lambda/lambda.ml[402,12429+12]..[402,12429+13])
                                          expression (lambda/lambda.ml[402,12429+16]..[402,12429+26])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[402,12429+16]..[402,12429+24])
                                              Pexp_ident "make_key" (lambda/lambda.ml[402,12429+16]..[402,12429+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[402,12429+25]..[402,12429+26])
                                                  Pexp_ident "x" (lambda/lambda.ml[402,12429+25]..[402,12429+26])
                                            ]
                                      ]
                                      expression (lambda/lambda.ml[403,12459+8]..[403,12459+63])
                                        Pexp_construct "Lmutlet" (lambda/lambda.ml[403,12459+8]..[403,12459+15])
                                        Some
                                          expression (lambda/lambda.ml[403,12459+16]..[403,12459+63])
                                            Pexp_tuple
                                            [
                                              expression (lambda/lambda.ml[403,12459+17]..[403,12459+18])
                                                Pexp_ident "k" (lambda/lambda.ml[403,12459+17]..[403,12459+18])
                                              expression (lambda/lambda.ml[403,12459+19]..[403,12459+20])
                                                Pexp_ident "y" (lambda/lambda.ml[403,12459+19]..[403,12459+20])
                                              expression (lambda/lambda.ml[403,12459+21]..[403,12459+23])
                                                Pexp_ident "ex" (lambda/lambda.ml[403,12459+21]..[403,12459+23])
                                              expression (lambda/lambda.ml[403,12459+24]..[403,12459+62])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[403,12459+24]..[403,12459+30])
                                                  Pexp_ident "tr_rec" (lambda/lambda.ml[403,12459+24]..[403,12459+30])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[403,12459+31]..[403,12459+60])
                                                      Pexp_apply
                                                      expression (lambda/lambda.ml[403,12459+32]..[403,12459+41])
                                                        Pexp_ident "Ident.add" (lambda/lambda.ml[403,12459+32]..[403,12459+41])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[403,12459+42]..[403,12459+43])
                                                            Pexp_ident "x" (lambda/lambda.ml[403,12459+42]..[403,12459+43])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[403,12459+44]..[403,12459+55])
                                                            Pexp_construct "Lmutvar" (lambda/lambda.ml[403,12459+45]..[403,12459+52])
                                                            Some
                                                              expression (lambda/lambda.ml[403,12459+53]..[403,12459+54])
                                                                Pexp_ident "y" (lambda/lambda.ml[403,12459+53]..[403,12459+54])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[403,12459+56]..[403,12459+59])
                                                            Pexp_ident "env" (lambda/lambda.ml[403,12459+56]..[403,12459+59])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[403,12459+61]..[403,12459+62])
                                                      Pexp_ident "e" (lambda/lambda.ml[403,12459+61]..[403,12459+62])
                                                ]
                                            ]
                                <case>
                                  pattern (lambda/lambda.ml[404,12523+6]..[404,12523+20])
                                    Ppat_construct "Lprim" (lambda/lambda.ml[404,12523+6]..[404,12523+11])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[404,12523+12]..[404,12523+20])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[404,12523+13]..[404,12523+14])
                                            Ppat_var "p" (lambda/lambda.ml[404,12523+13]..[404,12523+14])
                                          pattern (lambda/lambda.ml[404,12523+15]..[404,12523+17])
                                            Ppat_var "es" (lambda/lambda.ml[404,12523+15]..[404,12523+17])
                                          pattern (lambda/lambda.ml[404,12523+18]..[404,12523+19])
                                            Ppat_any
                                        ]
                                  expression (lambda/lambda.ml[405,12547+8]..[405,12547+45])
                                    Pexp_construct "Lprim" (lambda/lambda.ml[405,12547+8]..[405,12547+13])
                                    Some
                                      expression (lambda/lambda.ml[405,12547+14]..[405,12547+45])
                                        Pexp_tuple
                                        [
                                          expression (lambda/lambda.ml[405,12547+15]..[405,12547+16])
                                            Pexp_ident "p" (lambda/lambda.ml[405,12547+15]..[405,12547+16])
                                          expression (lambda/lambda.ml[405,12547+17]..[405,12547+31])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[405,12547+17]..[405,12547+24])
                                              Pexp_ident "tr_recs" (lambda/lambda.ml[405,12547+17]..[405,12547+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[405,12547+25]..[405,12547+28])
                                                  Pexp_ident "env" (lambda/lambda.ml[405,12547+25]..[405,12547+28])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[405,12547+29]..[405,12547+31])
                                                  Pexp_ident "es" (lambda/lambda.ml[405,12547+29]..[405,12547+31])
                                            ]
                                          expression (lambda/lambda.ml[405,12547+33]..[405,12547+44])
                                            Pexp_construct "Loc_unknown" (lambda/lambda.ml[405,12547+33]..[405,12547+44])
                                            None
                                        ]
                                <case>
                                  pattern (lambda/lambda.ml[406,12593+6]..[406,12593+24])
                                    Ppat_construct "Lswitch" (lambda/lambda.ml[406,12593+6]..[406,12593+13])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[406,12593+14]..[406,12593+24])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[406,12593+15]..[406,12593+16])
                                            Ppat_var "e" (lambda/lambda.ml[406,12593+15]..[406,12593+16])
                                          pattern (lambda/lambda.ml[406,12593+17]..[406,12593+19])
                                            Ppat_var "sw" (lambda/lambda.ml[406,12593+17]..[406,12593+19])
                                          pattern (lambda/lambda.ml[406,12593+20]..[406,12593+23])
                                            Ppat_var "loc" (lambda/lambda.ml[406,12593+20]..[406,12593+23])
                                        ]
                                  expression (lambda/lambda.ml[407,12621+8]..[407,12621+47])
                                    Pexp_construct "Lswitch" (lambda/lambda.ml[407,12621+8]..[407,12621+15])
                                    Some
                                      expression (lambda/lambda.ml[407,12621+16]..[407,12621+47])
                                        Pexp_tuple
                                        [
                                          expression (lambda/lambda.ml[407,12621+17]..[407,12621+29])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[407,12621+17]..[407,12621+23])
                                              Pexp_ident "tr_rec" (lambda/lambda.ml[407,12621+17]..[407,12621+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[407,12621+24]..[407,12621+27])
                                                  Pexp_ident "env" (lambda/lambda.ml[407,12621+24]..[407,12621+27])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[407,12621+28]..[407,12621+29])
                                                  Pexp_ident "e" (lambda/lambda.ml[407,12621+28]..[407,12621+29])
                                            ]
                                          expression (lambda/lambda.ml[407,12621+30]..[407,12621+42])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[407,12621+30]..[407,12621+35])
                                              Pexp_ident "tr_sw" (lambda/lambda.ml[407,12621+30]..[407,12621+35])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[407,12621+36]..[407,12621+39])
                                                  Pexp_ident "env" (lambda/lambda.ml[407,12621+36]..[407,12621+39])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[407,12621+40]..[407,12621+42])
                                                  Pexp_ident "sw" (lambda/lambda.ml[407,12621+40]..[407,12621+42])
                                            ]
                                          expression (lambda/lambda.ml[407,12621+43]..[407,12621+46])
                                            Pexp_ident "loc" (lambda/lambda.ml[407,12621+43]..[407,12621+46])
                                        ]
                                <case>
                                  pattern (lambda/lambda.ml[408,12669+6]..[408,12669+30])
                                    Ppat_construct "Lstringswitch" (lambda/lambda.ml[408,12669+6]..[408,12669+19])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[408,12669+20]..[408,12669+30])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[408,12669+21]..[408,12669+22])
                                            Ppat_var "e" (lambda/lambda.ml[408,12669+21]..[408,12669+22])
                                          pattern (lambda/lambda.ml[408,12669+23]..[408,12669+25])
                                            Ppat_var "sw" (lambda/lambda.ml[408,12669+23]..[408,12669+25])
                                          pattern (lambda/lambda.ml[408,12669+26]..[408,12669+27])
                                            Ppat_var "d" (lambda/lambda.ml[408,12669+26]..[408,12669+27])
                                          pattern (lambda/lambda.ml[408,12669+28]..[408,12669+29])
                                            Ppat_any
                                        ]
                                  expression (lambda/lambda.ml[409,12703+8]..[413,12829+22])
                                    Pexp_construct "Lstringswitch" (lambda/lambda.ml[409,12703+8]..[409,12703+21])
                                    Some
                                      expression (lambda/lambda.ml[410,12725+10]..[413,12829+22])
                                        Pexp_tuple
                                        [
                                          expression (lambda/lambda.ml[410,12725+11]..[410,12725+23])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[410,12725+11]..[410,12725+17])
                                              Pexp_ident "tr_rec" (lambda/lambda.ml[410,12725+11]..[410,12725+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[410,12725+18]..[410,12725+21])
                                                  Pexp_ident "env" (lambda/lambda.ml[410,12725+18]..[410,12725+21])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[410,12725+22]..[410,12725+23])
                                                  Pexp_ident "e" (lambda/lambda.ml[410,12725+22]..[410,12725+23])
                                            ]
                                          expression (lambda/lambda.ml[411,12750+11]..[411,12750+52])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[411,12750+11]..[411,12750+19])
                                              Pexp_ident "List.map" (lambda/lambda.ml[411,12750+11]..[411,12750+19])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[411,12750+20]..[411,12750+49])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (lambda/lambda.ml[411,12750+25]..[411,12750+30])
                                                    Ppat_tuple
                                                    [
                                                      pattern (lambda/lambda.ml[411,12750+26]..[411,12750+27])
                                                        Ppat_var "s" (lambda/lambda.ml[411,12750+26]..[411,12750+27])
                                                      pattern (lambda/lambda.ml[411,12750+28]..[411,12750+29])
                                                        Ppat_var "e" (lambda/lambda.ml[411,12750+28]..[411,12750+29])
                                                    ]
                                                  expression (lambda/lambda.ml[411,12750+34]..[411,12750+48])
                                                    Pexp_tuple
                                                    [
                                                      expression (lambda/lambda.ml[411,12750+34]..[411,12750+35])
                                                        Pexp_ident "s" (lambda/lambda.ml[411,12750+34]..[411,12750+35])
                                                      expression (lambda/lambda.ml[411,12750+36]..[411,12750+48])
                                                        Pexp_apply
                                                        expression (lambda/lambda.ml[411,12750+36]..[411,12750+42])
                                                          Pexp_ident "tr_rec" (lambda/lambda.ml[411,12750+36]..[411,12750+42])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/lambda.ml[411,12750+43]..[411,12750+46])
                                                              Pexp_ident "env" (lambda/lambda.ml[411,12750+43]..[411,12750+46])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/lambda.ml[411,12750+47]..[411,12750+48])
                                                              Pexp_ident "e" (lambda/lambda.ml[411,12750+47]..[411,12750+48])
                                                        ]
                                                    ]
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[411,12750+50]..[411,12750+52])
                                                  Pexp_ident "sw" (lambda/lambda.ml[411,12750+50]..[411,12750+52])
                                            ]
                                          expression (lambda/lambda.ml[412,12804+11]..[412,12804+23])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[412,12804+11]..[412,12804+17])
                                              Pexp_ident "tr_opt" (lambda/lambda.ml[412,12804+11]..[412,12804+17])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[412,12804+18]..[412,12804+21])
                                                  Pexp_ident "env" (lambda/lambda.ml[412,12804+18]..[412,12804+21])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[412,12804+22]..[412,12804+23])
                                                  Pexp_ident "d" (lambda/lambda.ml[412,12804+22]..[412,12804+23])
                                            ]
                                          expression (lambda/lambda.ml[413,12829+10]..[413,12829+21])
                                            Pexp_construct "Loc_unknown" (lambda/lambda.ml[413,12829+10]..[413,12829+21])
                                            None
                                        ]
                                <case>
                                  pattern (lambda/lambda.ml[414,12852+6]..[414,12852+25])
                                    Ppat_construct "Lstaticraise" (lambda/lambda.ml[414,12852+6]..[414,12852+18])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[414,12852+19]..[414,12852+25])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[414,12852+20]..[414,12852+21])
                                            Ppat_var "i" (lambda/lambda.ml[414,12852+20]..[414,12852+21])
                                          pattern (lambda/lambda.ml[414,12852+22]..[414,12852+24])
                                            Ppat_var "es" (lambda/lambda.ml[414,12852+22]..[414,12852+24])
                                        ]
                                  expression (lambda/lambda.ml[415,12881+8]..[415,12881+39])
                                    Pexp_construct "Lstaticraise" (lambda/lambda.ml[415,12881+8]..[415,12881+20])
                                    Some
                                      expression (lambda/lambda.ml[415,12881+21]..[415,12881+39])
                                        Pexp_tuple
                                        [
                                          expression (lambda/lambda.ml[415,12881+22]..[415,12881+23])
                                            Pexp_ident "i" (lambda/lambda.ml[415,12881+22]..[415,12881+23])
                                          expression (lambda/lambda.ml[415,12881+24]..[415,12881+38])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[415,12881+24]..[415,12881+31])
                                              Pexp_ident "tr_recs" (lambda/lambda.ml[415,12881+24]..[415,12881+31])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[415,12881+32]..[415,12881+35])
                                                  Pexp_ident "env" (lambda/lambda.ml[415,12881+32]..[415,12881+35])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[415,12881+36]..[415,12881+38])
                                                  Pexp_ident "es" (lambda/lambda.ml[415,12881+36]..[415,12881+38])
                                            ]
                                        ]
                                <case>
                                  pattern (lambda/lambda.ml[416,12921+6]..[416,12921+29])
                                    Ppat_construct "Lstaticcatch" (lambda/lambda.ml[416,12921+6]..[416,12921+18])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[416,12921+19]..[416,12921+29])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[416,12921+20]..[416,12921+22])
                                            Ppat_var "e1" (lambda/lambda.ml[416,12921+20]..[416,12921+22])
                                          pattern (lambda/lambda.ml[416,12921+23]..[416,12921+25])
                                            Ppat_var "xs" (lambda/lambda.ml[416,12921+23]..[416,12921+25])
                                          pattern (lambda/lambda.ml[416,12921+26]..[416,12921+28])
                                            Ppat_var "e2" (lambda/lambda.ml[416,12921+26]..[416,12921+28])
                                        ]
                                  expression (lambda/lambda.ml[417,12954+8]..[417,12954+53])
                                    Pexp_construct "Lstaticcatch" (lambda/lambda.ml[417,12954+8]..[417,12954+20])
                                    Some
                                      expression (lambda/lambda.ml[417,12954+21]..[417,12954+53])
                                        Pexp_tuple
                                        [
                                          expression (lambda/lambda.ml[417,12954+22]..[417,12954+35])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[417,12954+22]..[417,12954+28])
                                              Pexp_ident "tr_rec" (lambda/lambda.ml[417,12954+22]..[417,12954+28])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[417,12954+29]..[417,12954+32])
                                                  Pexp_ident "env" (lambda/lambda.ml[417,12954+29]..[417,12954+32])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[417,12954+33]..[417,12954+35])
                                                  Pexp_ident "e1" (lambda/lambda.ml[417,12954+33]..[417,12954+35])
                                            ]
                                          expression (lambda/lambda.ml[417,12954+36]..[417,12954+38])
                                            Pexp_ident "xs" (lambda/lambda.ml[417,12954+36]..[417,12954+38])
                                          expression (lambda/lambda.ml[417,12954+39]..[417,12954+52])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[417,12954+39]..[417,12954+45])
                                              Pexp_ident "tr_rec" (lambda/lambda.ml[417,12954+39]..[417,12954+45])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[417,12954+46]..[417,12954+49])
                                                  Pexp_ident "env" (lambda/lambda.ml[417,12954+46]..[417,12954+49])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[417,12954+50]..[417,12954+52])
                                                  Pexp_ident "e2" (lambda/lambda.ml[417,12954+50]..[417,12954+52])
                                            ]
                                        ]
                                <case>
                                  pattern (lambda/lambda.ml[418,13008+6]..[418,13008+24])
                                    Ppat_construct "Ltrywith" (lambda/lambda.ml[418,13008+6]..[418,13008+14])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[418,13008+15]..[418,13008+24])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[418,13008+16]..[418,13008+18])
                                            Ppat_var "e1" (lambda/lambda.ml[418,13008+16]..[418,13008+18])
                                          pattern (lambda/lambda.ml[418,13008+19]..[418,13008+20])
                                            Ppat_var "x" (lambda/lambda.ml[418,13008+19]..[418,13008+20])
                                          pattern (lambda/lambda.ml[418,13008+21]..[418,13008+23])
                                            Ppat_var "e2" (lambda/lambda.ml[418,13008+21]..[418,13008+23])
                                        ]
                                  expression (lambda/lambda.ml[419,13036+8]..[419,13036+48])
                                    Pexp_construct "Ltrywith" (lambda/lambda.ml[419,13036+8]..[419,13036+16])
                                    Some
                                      expression (lambda/lambda.ml[419,13036+17]..[419,13036+48])
                                        Pexp_tuple
                                        [
                                          expression (lambda/lambda.ml[419,13036+18]..[419,13036+31])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[419,13036+18]..[419,13036+24])
                                              Pexp_ident "tr_rec" (lambda/lambda.ml[419,13036+18]..[419,13036+24])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[419,13036+25]..[419,13036+28])
                                                  Pexp_ident "env" (lambda/lambda.ml[419,13036+25]..[419,13036+28])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[419,13036+29]..[419,13036+31])
                                                  Pexp_ident "e1" (lambda/lambda.ml[419,13036+29]..[419,13036+31])
                                            ]
                                          expression (lambda/lambda.ml[419,13036+32]..[419,13036+33])
                                            Pexp_ident "x" (lambda/lambda.ml[419,13036+32]..[419,13036+33])
                                          expression (lambda/lambda.ml[419,13036+34]..[419,13036+47])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[419,13036+34]..[419,13036+40])
                                              Pexp_ident "tr_rec" (lambda/lambda.ml[419,13036+34]..[419,13036+40])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[419,13036+41]..[419,13036+44])
                                                  Pexp_ident "env" (lambda/lambda.ml[419,13036+41]..[419,13036+44])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[419,13036+45]..[419,13036+47])
                                                  Pexp_ident "e2" (lambda/lambda.ml[419,13036+45]..[419,13036+47])
                                            ]
                                        ]
                                <case>
                                  pattern (lambda/lambda.ml[420,13085+6]..[420,13085+35])
                                    Ppat_construct "Lifthenelse" (lambda/lambda.ml[420,13085+6]..[420,13085+17])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[420,13085+18]..[420,13085+35])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[420,13085+19]..[420,13085+23])
                                            Ppat_var "cond" (lambda/lambda.ml[420,13085+19]..[420,13085+23])
                                          pattern (lambda/lambda.ml[420,13085+24]..[420,13085+28])
                                            Ppat_var "ifso" (lambda/lambda.ml[420,13085+24]..[420,13085+28])
                                          pattern (lambda/lambda.ml[420,13085+29]..[420,13085+34])
                                            Ppat_var "ifnot" (lambda/lambda.ml[420,13085+29]..[420,13085+34])
                                        ]
                                  expression (lambda/lambda.ml[421,13124+8]..[421,13124+70])
                                    Pexp_construct "Lifthenelse" (lambda/lambda.ml[421,13124+8]..[421,13124+19])
                                    Some
                                      expression (lambda/lambda.ml[421,13124+20]..[421,13124+70])
                                        Pexp_tuple
                                        [
                                          expression (lambda/lambda.ml[421,13124+21]..[421,13124+36])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[421,13124+21]..[421,13124+27])
                                              Pexp_ident "tr_rec" (lambda/lambda.ml[421,13124+21]..[421,13124+27])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[421,13124+28]..[421,13124+31])
                                                  Pexp_ident "env" (lambda/lambda.ml[421,13124+28]..[421,13124+31])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[421,13124+32]..[421,13124+36])
                                                  Pexp_ident "cond" (lambda/lambda.ml[421,13124+32]..[421,13124+36])
                                            ]
                                          expression (lambda/lambda.ml[421,13124+37]..[421,13124+52])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[421,13124+37]..[421,13124+43])
                                              Pexp_ident "tr_rec" (lambda/lambda.ml[421,13124+37]..[421,13124+43])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[421,13124+44]..[421,13124+47])
                                                  Pexp_ident "env" (lambda/lambda.ml[421,13124+44]..[421,13124+47])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[421,13124+48]..[421,13124+52])
                                                  Pexp_ident "ifso" (lambda/lambda.ml[421,13124+48]..[421,13124+52])
                                            ]
                                          expression (lambda/lambda.ml[421,13124+53]..[421,13124+69])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[421,13124+53]..[421,13124+59])
                                              Pexp_ident "tr_rec" (lambda/lambda.ml[421,13124+53]..[421,13124+59])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[421,13124+60]..[421,13124+63])
                                                  Pexp_ident "env" (lambda/lambda.ml[421,13124+60]..[421,13124+63])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[421,13124+64]..[421,13124+69])
                                                  Pexp_ident "ifnot" (lambda/lambda.ml[421,13124+64]..[421,13124+69])
                                            ]
                                        ]
                                <case>
                                  pattern (lambda/lambda.ml[422,13195+6]..[422,13195+23])
                                    Ppat_construct "Lsequence" (lambda/lambda.ml[422,13195+6]..[422,13195+15])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[422,13195+16]..[422,13195+23])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[422,13195+17]..[422,13195+19])
                                            Ppat_var "e1" (lambda/lambda.ml[422,13195+17]..[422,13195+19])
                                          pattern (lambda/lambda.ml[422,13195+20]..[422,13195+22])
                                            Ppat_var "e2" (lambda/lambda.ml[422,13195+20]..[422,13195+22])
                                        ]
                                  expression (lambda/lambda.ml[423,13222+8]..[423,13222+47])
                                    Pexp_construct "Lsequence" (lambda/lambda.ml[423,13222+8]..[423,13222+17])
                                    Some
                                      expression (lambda/lambda.ml[423,13222+18]..[423,13222+47])
                                        Pexp_tuple
                                        [
                                          expression (lambda/lambda.ml[423,13222+19]..[423,13222+32])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[423,13222+19]..[423,13222+25])
                                              Pexp_ident "tr_rec" (lambda/lambda.ml[423,13222+19]..[423,13222+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[423,13222+26]..[423,13222+29])
                                                  Pexp_ident "env" (lambda/lambda.ml[423,13222+26]..[423,13222+29])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[423,13222+30]..[423,13222+32])
                                                  Pexp_ident "e1" (lambda/lambda.ml[423,13222+30]..[423,13222+32])
                                            ]
                                          expression (lambda/lambda.ml[423,13222+33]..[423,13222+46])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[423,13222+33]..[423,13222+39])
                                              Pexp_ident "tr_rec" (lambda/lambda.ml[423,13222+33]..[423,13222+39])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[423,13222+40]..[423,13222+43])
                                                  Pexp_ident "env" (lambda/lambda.ml[423,13222+40]..[423,13222+43])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[423,13222+44]..[423,13222+46])
                                                  Pexp_ident "e2" (lambda/lambda.ml[423,13222+44]..[423,13222+46])
                                            ]
                                        ]
                                <case>
                                  pattern (lambda/lambda.ml[424,13270+6]..[424,13270+19])
                                    Ppat_construct "Lassign" (lambda/lambda.ml[424,13270+6]..[424,13270+13])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[424,13270+14]..[424,13270+19])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[424,13270+15]..[424,13270+16])
                                            Ppat_var "x" (lambda/lambda.ml[424,13270+15]..[424,13270+16])
                                          pattern (lambda/lambda.ml[424,13270+17]..[424,13270+18])
                                            Ppat_var "e" (lambda/lambda.ml[424,13270+17]..[424,13270+18])
                                        ]
                                  expression (lambda/lambda.ml[425,13293+8]..[425,13293+32])
                                    Pexp_construct "Lassign" (lambda/lambda.ml[425,13293+8]..[425,13293+15])
                                    Some
                                      expression (lambda/lambda.ml[425,13293+16]..[425,13293+32])
                                        Pexp_tuple
                                        [
                                          expression (lambda/lambda.ml[425,13293+17]..[425,13293+18])
                                            Pexp_ident "x" (lambda/lambda.ml[425,13293+17]..[425,13293+18])
                                          expression (lambda/lambda.ml[425,13293+19]..[425,13293+31])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[425,13293+19]..[425,13293+25])
                                              Pexp_ident "tr_rec" (lambda/lambda.ml[425,13293+19]..[425,13293+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[425,13293+26]..[425,13293+29])
                                                  Pexp_ident "env" (lambda/lambda.ml[425,13293+26]..[425,13293+29])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[425,13293+30]..[425,13293+31])
                                                  Pexp_ident "e" (lambda/lambda.ml[425,13293+30]..[425,13293+31])
                                            ]
                                        ]
                                <case>
                                  pattern (lambda/lambda.ml[426,13326+6]..[426,13326+29])
                                    Ppat_construct "Lsend" (lambda/lambda.ml[426,13326+6]..[426,13326+11])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[426,13326+12]..[426,13326+29])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[426,13326+13]..[426,13326+14])
                                            Ppat_var "m" (lambda/lambda.ml[426,13326+13]..[426,13326+14])
                                          pattern (lambda/lambda.ml[426,13326+15]..[426,13326+17])
                                            Ppat_var "e1" (lambda/lambda.ml[426,13326+15]..[426,13326+17])
                                          pattern (lambda/lambda.ml[426,13326+18]..[426,13326+20])
                                            Ppat_var "e2" (lambda/lambda.ml[426,13326+18]..[426,13326+20])
                                          pattern (lambda/lambda.ml[426,13326+21]..[426,13326+23])
                                            Ppat_var "es" (lambda/lambda.ml[426,13326+21]..[426,13326+23])
                                          pattern (lambda/lambda.ml[426,13326+24]..[426,13326+28])
                                            Ppat_var "_loc" (lambda/lambda.ml[426,13326+24]..[426,13326+28])
                                        ]
                                  expression (lambda/lambda.ml[427,13359+8]..[427,13359+72])
                                    Pexp_construct "Lsend" (lambda/lambda.ml[427,13359+8]..[427,13359+13])
                                    Some
                                      expression (lambda/lambda.ml[427,13359+14]..[427,13359+72])
                                        Pexp_tuple
                                        [
                                          expression (lambda/lambda.ml[427,13359+15]..[427,13359+16])
                                            Pexp_ident "m" (lambda/lambda.ml[427,13359+15]..[427,13359+16])
                                          expression (lambda/lambda.ml[427,13359+17]..[427,13359+30])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[427,13359+17]..[427,13359+23])
                                              Pexp_ident "tr_rec" (lambda/lambda.ml[427,13359+17]..[427,13359+23])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[427,13359+24]..[427,13359+27])
                                                  Pexp_ident "env" (lambda/lambda.ml[427,13359+24]..[427,13359+27])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[427,13359+28]..[427,13359+30])
                                                  Pexp_ident "e1" (lambda/lambda.ml[427,13359+28]..[427,13359+30])
                                            ]
                                          expression (lambda/lambda.ml[427,13359+31]..[427,13359+44])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[427,13359+31]..[427,13359+37])
                                              Pexp_ident "tr_rec" (lambda/lambda.ml[427,13359+31]..[427,13359+37])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[427,13359+38]..[427,13359+41])
                                                  Pexp_ident "env" (lambda/lambda.ml[427,13359+38]..[427,13359+41])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[427,13359+42]..[427,13359+44])
                                                  Pexp_ident "e2" (lambda/lambda.ml[427,13359+42]..[427,13359+44])
                                            ]
                                          expression (lambda/lambda.ml[427,13359+45]..[427,13359+59])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[427,13359+45]..[427,13359+52])
                                              Pexp_ident "tr_recs" (lambda/lambda.ml[427,13359+45]..[427,13359+52])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[427,13359+53]..[427,13359+56])
                                                  Pexp_ident "env" (lambda/lambda.ml[427,13359+53]..[427,13359+56])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[427,13359+57]..[427,13359+59])
                                                  Pexp_ident "es" (lambda/lambda.ml[427,13359+57]..[427,13359+59])
                                            ]
                                          expression (lambda/lambda.ml[427,13359+60]..[427,13359+71])
                                            Pexp_construct "Loc_unknown" (lambda/lambda.ml[427,13359+60]..[427,13359+71])
                                            None
                                        ]
                                <case>
                                  pattern (lambda/lambda.ml[428,13432+6]..[428,13432+20])
                                    Ppat_construct "Lifused" (lambda/lambda.ml[428,13432+6]..[428,13432+13])
                                    Some
                                      []
                                      pattern (lambda/lambda.ml[428,13432+14]..[428,13432+20])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[428,13432+15]..[428,13432+17])
                                            Ppat_var "id" (lambda/lambda.ml[428,13432+15]..[428,13432+17])
                                          pattern (lambda/lambda.ml[428,13432+18]..[428,13432+19])
                                            Ppat_var "e" (lambda/lambda.ml[428,13432+18]..[428,13432+19])
                                        ]
                                  expression (lambda/lambda.ml[428,13432+24]..[428,13432+49])
                                    Pexp_construct "Lifused" (lambda/lambda.ml[428,13432+24]..[428,13432+31])
                                    Some
                                      expression (lambda/lambda.ml[428,13432+32]..[428,13432+49])
                                        Pexp_tuple
                                        [
                                          expression (lambda/lambda.ml[428,13432+33]..[428,13432+35])
                                            Pexp_ident "id" (lambda/lambda.ml[428,13432+33]..[428,13432+35])
                                          expression (lambda/lambda.ml[428,13432+36]..[428,13432+48])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[428,13432+36]..[428,13432+42])
                                              Pexp_ident "tr_rec" (lambda/lambda.ml[428,13432+36]..[428,13432+42])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[428,13432+43]..[428,13432+46])
                                                  Pexp_ident "env" (lambda/lambda.ml[428,13432+43]..[428,13432+46])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[428,13432+47]..[428,13432+48])
                                                  Pexp_ident "e" (lambda/lambda.ml[428,13432+47]..[428,13432+48])
                                            ]
                                        ]
                                <case>
                                  pattern (lambda/lambda.ml[429,13482+6]..[433,13640+14])
                                    Ppat_or
                                    pattern (lambda/lambda.ml[429,13482+6]..[430,13510+23])
                                      Ppat_or
                                      pattern (lambda/lambda.ml[429,13482+6]..[430,13510+12])
                                        Ppat_or
                                        pattern (lambda/lambda.ml[429,13482+6]..[429,13482+27])
                                          Ppat_or
                                          pattern (lambda/lambda.ml[429,13482+6]..[429,13482+15])
                                            Ppat_construct "Lletrec" (lambda/lambda.ml[429,13482+6]..[429,13482+13])
                                            Some
                                              []
                                              pattern (lambda/lambda.ml[429,13482+14]..[429,13482+15])
                                                Ppat_any
                                          pattern (lambda/lambda.ml[429,13482+16]..[429,13482+27])
                                            Ppat_construct "Lfunction" (lambda/lambda.ml[429,13482+16]..[429,13482+25])
                                            Some
                                              []
                                              pattern (lambda/lambda.ml[429,13482+26]..[429,13482+27])
                                                Ppat_any
                                        pattern (lambda/lambda.ml[430,13510+6]..[430,13510+12])
                                          Ppat_construct "Lfor" (lambda/lambda.ml[430,13510+6]..[430,13510+10])
                                          Some
                                            []
                                            pattern (lambda/lambda.ml[430,13510+11]..[430,13510+12])
                                              Ppat_any
                                      pattern (lambda/lambda.ml[430,13510+15]..[430,13510+23])
                                        Ppat_construct "Lwhile" (lambda/lambda.ml[430,13510+15]..[430,13510+21])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[430,13510+22]..[430,13510+23])
                                            Ppat_any
                                    pattern (lambda/lambda.ml[433,13640+6]..[433,13640+14])
                                      Ppat_construct "Levent" (lambda/lambda.ml[433,13640+6]..[433,13640+12])
                                      Some
                                        []
                                        pattern (lambda/lambda.ml[433,13640+13]..[433,13640+14])
                                          Ppat_any
                                  expression (lambda/lambda.ml[434,13659+8]..[434,13659+24])
                                    Pexp_apply
                                    expression (lambda/lambda.ml[434,13659+8]..[434,13659+13])
                                      Pexp_ident "raise" (lambda/lambda.ml[434,13659+8]..[434,13659+13])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/lambda.ml[434,13659+14]..[434,13659+24])
                                          Pexp_construct "Not_simple" (lambda/lambda.ml[434,13659+14]..[434,13659+24])
                                          None
                                    ]
                              ]
                  <def>
                    pattern (lambda/lambda.ml[436,13685+6]..[436,13685+13])
                      Ppat_var "tr_recs" (lambda/lambda.ml[436,13685+6]..[436,13685+13])
                    expression (lambda/lambda.ml[436,13685+14]..[436,13685+47]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/lambda.ml[436,13685+14]..[436,13685+17])
                        Ppat_var "env" (lambda/lambda.ml[436,13685+14]..[436,13685+17])
                      expression (lambda/lambda.ml[436,13685+18]..[436,13685+47]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/lambda.ml[436,13685+18]..[436,13685+20])
                          Ppat_var "es" (lambda/lambda.ml[436,13685+18]..[436,13685+20])
                        expression (lambda/lambda.ml[436,13685+23]..[436,13685+47])
                          Pexp_apply
                          expression (lambda/lambda.ml[436,13685+23]..[436,13685+31])
                            Pexp_ident "List.map" (lambda/lambda.ml[436,13685+23]..[436,13685+31])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[436,13685+32]..[436,13685+44])
                                Pexp_apply
                                expression (lambda/lambda.ml[436,13685+33]..[436,13685+39])
                                  Pexp_ident "tr_rec" (lambda/lambda.ml[436,13685+33]..[436,13685+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[436,13685+40]..[436,13685+43])
                                      Pexp_ident "env" (lambda/lambda.ml[436,13685+40]..[436,13685+43])
                                ]
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[436,13685+45]..[436,13685+47])
                                Pexp_ident "es" (lambda/lambda.ml[436,13685+45]..[436,13685+47])
                          ]
                  <def>
                    pattern (lambda/lambda.ml[438,13734+6]..[438,13734+11])
                      Ppat_var "tr_sw" (lambda/lambda.ml[438,13734+6]..[438,13734+11])
                    expression (lambda/lambda.ml[438,13734+12]..[442,13913+53]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/lambda.ml[438,13734+12]..[438,13734+15])
                        Ppat_var "env" (lambda/lambda.ml[438,13734+12]..[438,13734+15])
                      expression (lambda/lambda.ml[438,13734+16]..[442,13913+53]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/lambda.ml[438,13734+16]..[438,13734+18])
                          Ppat_var "sw" (lambda/lambda.ml[438,13734+16]..[438,13734+18])
                        expression (lambda/lambda.ml[439,13755+4]..[442,13913+53])
                          Pexp_record
                          [
                            "sw_consts" (lambda/lambda.ml[440,13769+6]..[440,13769+15])
                              expression (lambda/lambda.ml[440,13769+18]..[440,13769+69])
                                Pexp_apply
                                expression (lambda/lambda.ml[440,13769+18]..[440,13769+26])
                                  Pexp_ident "List.map" (lambda/lambda.ml[440,13769+18]..[440,13769+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[440,13769+27]..[440,13769+56])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lambda/lambda.ml[440,13769+32]..[440,13769+37])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[440,13769+33]..[440,13769+34])
                                            Ppat_var "i" (lambda/lambda.ml[440,13769+33]..[440,13769+34])
                                          pattern (lambda/lambda.ml[440,13769+35]..[440,13769+36])
                                            Ppat_var "e" (lambda/lambda.ml[440,13769+35]..[440,13769+36])
                                        ]
                                      expression (lambda/lambda.ml[440,13769+41]..[440,13769+55])
                                        Pexp_tuple
                                        [
                                          expression (lambda/lambda.ml[440,13769+41]..[440,13769+42])
                                            Pexp_ident "i" (lambda/lambda.ml[440,13769+41]..[440,13769+42])
                                          expression (lambda/lambda.ml[440,13769+43]..[440,13769+55])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[440,13769+43]..[440,13769+49])
                                              Pexp_ident "tr_rec" (lambda/lambda.ml[440,13769+43]..[440,13769+49])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[440,13769+50]..[440,13769+53])
                                                  Pexp_ident "env" (lambda/lambda.ml[440,13769+50]..[440,13769+53])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[440,13769+54]..[440,13769+55])
                                                  Pexp_ident "e" (lambda/lambda.ml[440,13769+54]..[440,13769+55])
                                            ]
                                        ]
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[440,13769+57]..[440,13769+69])
                                      Pexp_field
                                      expression (lambda/lambda.ml[440,13769+57]..[440,13769+59])
                                        Pexp_ident "sw" (lambda/lambda.ml[440,13769+57]..[440,13769+59])
                                      "sw_consts" (lambda/lambda.ml[440,13769+60]..[440,13769+69])
                                ]
                            "sw_blocks" (lambda/lambda.ml[441,13841+6]..[441,13841+15])
                              expression (lambda/lambda.ml[441,13841+18]..[441,13841+69])
                                Pexp_apply
                                expression (lambda/lambda.ml[441,13841+18]..[441,13841+26])
                                  Pexp_ident "List.map" (lambda/lambda.ml[441,13841+18]..[441,13841+26])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[441,13841+27]..[441,13841+56])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lambda/lambda.ml[441,13841+32]..[441,13841+37])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[441,13841+33]..[441,13841+34])
                                            Ppat_var "i" (lambda/lambda.ml[441,13841+33]..[441,13841+34])
                                          pattern (lambda/lambda.ml[441,13841+35]..[441,13841+36])
                                            Ppat_var "e" (lambda/lambda.ml[441,13841+35]..[441,13841+36])
                                        ]
                                      expression (lambda/lambda.ml[441,13841+41]..[441,13841+55])
                                        Pexp_tuple
                                        [
                                          expression (lambda/lambda.ml[441,13841+41]..[441,13841+42])
                                            Pexp_ident "i" (lambda/lambda.ml[441,13841+41]..[441,13841+42])
                                          expression (lambda/lambda.ml[441,13841+43]..[441,13841+55])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[441,13841+43]..[441,13841+49])
                                              Pexp_ident "tr_rec" (lambda/lambda.ml[441,13841+43]..[441,13841+49])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[441,13841+50]..[441,13841+53])
                                                  Pexp_ident "env" (lambda/lambda.ml[441,13841+50]..[441,13841+53])
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[441,13841+54]..[441,13841+55])
                                                  Pexp_ident "e" (lambda/lambda.ml[441,13841+54]..[441,13841+55])
                                            ]
                                        ]
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[441,13841+57]..[441,13841+69])
                                      Pexp_field
                                      expression (lambda/lambda.ml[441,13841+57]..[441,13841+59])
                                        Pexp_ident "sw" (lambda/lambda.ml[441,13841+57]..[441,13841+59])
                                      "sw_blocks" (lambda/lambda.ml[441,13841+60]..[441,13841+69])
                                ]
                            "sw_failaction" (lambda/lambda.ml[442,13913+6]..[442,13913+19])
                              expression (lambda/lambda.ml[442,13913+22]..[442,13913+49])
                                Pexp_apply
                                expression (lambda/lambda.ml[442,13913+22]..[442,13913+28])
                                  Pexp_ident "tr_opt" (lambda/lambda.ml[442,13913+22]..[442,13913+28])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[442,13913+29]..[442,13913+32])
                                      Pexp_ident "env" (lambda/lambda.ml[442,13913+29]..[442,13913+32])
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[442,13913+33]..[442,13913+49])
                                      Pexp_field
                                      expression (lambda/lambda.ml[442,13913+33]..[442,13913+35])
                                        Pexp_ident "sw" (lambda/lambda.ml[442,13913+33]..[442,13913+35])
                                      "sw_failaction" (lambda/lambda.ml[442,13913+36]..[442,13913+49])
                                ]
                          ]
                          Some
                            expression (lambda/lambda.ml[439,13755+6]..[439,13755+8])
                              Pexp_ident "sw" (lambda/lambda.ml[439,13755+6]..[439,13755+8])
                  <def>
                    pattern (lambda/lambda.ml[444,13968+6]..[444,13968+12])
                      Ppat_var "tr_opt" (lambda/lambda.ml[444,13968+6]..[444,13968+12])
                    expression (lambda/lambda.ml[444,13968+13]..[446,14015+35]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/lambda.ml[444,13968+13]..[444,13968+16])
                        Ppat_var "env" (lambda/lambda.ml[444,13968+13]..[444,13968+16])
                      expression (lambda/lambda.ml[444,13968+19]..[446,14015+35])
                        Pexp_function
                        [
                          <case>
                            pattern (lambda/lambda.ml[445,13996+6]..[445,13996+10])
                              Ppat_construct "None" (lambda/lambda.ml[445,13996+6]..[445,13996+10])
                              None
                            expression (lambda/lambda.ml[445,13996+14]..[445,13996+18])
                              Pexp_construct "None" (lambda/lambda.ml[445,13996+14]..[445,13996+18])
                              None
                          <case>
                            pattern (lambda/lambda.ml[446,14015+6]..[446,14015+12])
                              Ppat_construct "Some" (lambda/lambda.ml[446,14015+6]..[446,14015+10])
                              Some
                                []
                                pattern (lambda/lambda.ml[446,14015+11]..[446,14015+12])
                                  Ppat_var "e" (lambda/lambda.ml[446,14015+11]..[446,14015+12])
                            expression (lambda/lambda.ml[446,14015+16]..[446,14015+35])
                              Pexp_construct "Some" (lambda/lambda.ml[446,14015+16]..[446,14015+20])
                              Some
                                expression (lambda/lambda.ml[446,14015+21]..[446,14015+35])
                                  Pexp_apply
                                  expression (lambda/lambda.ml[446,14015+22]..[446,14015+28])
                                    Pexp_ident "tr_rec" (lambda/lambda.ml[446,14015+22]..[446,14015+28])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/lambda.ml[446,14015+29]..[446,14015+32])
                                        Pexp_ident "env" (lambda/lambda.ml[446,14015+29]..[446,14015+32])
                                    <arg>
                                    Nolabel
                                      expression (lambda/lambda.ml[446,14015+33]..[446,14015+34])
                                        Pexp_ident "e" (lambda/lambda.ml[446,14015+33]..[446,14015+34])
                                  ]
                        ]
                ]
                expression (lambda/lambda.ml[448,14055+2]..[450,14093+25])
                  Pexp_try
                  expression (lambda/lambda.ml[449,14061+4]..[449,14061+31])
                    Pexp_construct "Some" (lambda/lambda.ml[449,14061+4]..[449,14061+8])
                    Some
                      expression (lambda/lambda.ml[449,14061+9]..[449,14061+31])
                        Pexp_apply
                        expression (lambda/lambda.ml[449,14061+10]..[449,14061+16])
                          Pexp_ident "tr_rec" (lambda/lambda.ml[449,14061+10]..[449,14061+16])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[449,14061+17]..[449,14061+28])
                              Pexp_ident "Ident.empty" (lambda/lambda.ml[449,14061+17]..[449,14061+28])
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[449,14061+29]..[449,14061+30])
                              Pexp_ident "e" (lambda/lambda.ml[449,14061+29]..[449,14061+30])
                        ]
                  [
                    <case>
                      pattern (lambda/lambda.ml[450,14093+7]..[450,14093+17])
                        Ppat_construct "Not_simple" (lambda/lambda.ml[450,14093+7]..[450,14093+17])
                        None
                      expression (lambda/lambda.ml[450,14093+21]..[450,14093+25])
                        Pexp_construct "None" (lambda/lambda.ml[450,14093+21]..[450,14093+25])
                        None
                  ]
    ]
  structure_item (lambda/lambda.ml[454,14139+0]..[459,14261+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[454,14139+4]..[454,14139+15])
          Ppat_var "name_lambda" (lambda/lambda.ml[454,14139+4]..[454,14139+15])
        expression (lambda/lambda.ml[454,14139+16]..[459,14261+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[454,14139+16]..[454,14139+22])
            Ppat_var "strict" (lambda/lambda.ml[454,14139+16]..[454,14139+22])
          expression (lambda/lambda.ml[454,14139+23]..[459,14261+43]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[454,14139+23]..[454,14139+26])
              Ppat_var "arg" (lambda/lambda.ml[454,14139+23]..[454,14139+26])
            expression (lambda/lambda.ml[454,14139+27]..[459,14261+43]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/lambda.ml[454,14139+27]..[454,14139+29])
                Ppat_var "fn" (lambda/lambda.ml[454,14139+27]..[454,14139+29])
              expression (lambda/lambda.ml[455,14171+2]..[459,14261+43])
                Pexp_match
                expression (lambda/lambda.ml[455,14171+8]..[455,14171+11])
                  Pexp_ident "arg" (lambda/lambda.ml[455,14171+8]..[455,14171+11])
                [
                  <case>
                    pattern (lambda/lambda.ml[456,14188+4]..[456,14188+11])
                      Ppat_construct "Lvar" (lambda/lambda.ml[456,14188+4]..[456,14188+8])
                      Some
                        []
                        pattern (lambda/lambda.ml[456,14188+9]..[456,14188+11])
                          Ppat_var "id" (lambda/lambda.ml[456,14188+9]..[456,14188+11])
                    expression (lambda/lambda.ml[456,14188+15]..[456,14188+20])
                      Pexp_apply
                      expression (lambda/lambda.ml[456,14188+15]..[456,14188+17])
                        Pexp_ident "fn" (lambda/lambda.ml[456,14188+15]..[456,14188+17])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[456,14188+18]..[456,14188+20])
                            Pexp_ident "id" (lambda/lambda.ml[456,14188+18]..[456,14188+20])
                      ]
                  <case>
                    pattern (lambda/lambda.ml[457,14209+4]..[457,14209+5])
                      Ppat_any
                    expression (lambda/lambda.ml[458,14218+6]..[459,14261+43])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (lambda/lambda.ml[458,14218+10]..[458,14218+12])
                            Ppat_var "id" (lambda/lambda.ml[458,14218+10]..[458,14218+12])
                          expression (lambda/lambda.ml[458,14218+15]..[458,14218+39])
                            Pexp_apply
                            expression (lambda/lambda.ml[458,14218+15]..[458,14218+33])
                              Pexp_ident "Ident.create_local" (lambda/lambda.ml[458,14218+15]..[458,14218+33])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[458,14218+34]..[458,14218+39])
                                  Pexp_constant PConst_string("let",(lambda/lambda.ml[458,14218+35]..[458,14218+38]),None)
                            ]
                      ]
                      expression (lambda/lambda.ml[459,14261+6]..[459,14261+43])
                        Pexp_construct "Llet" (lambda/lambda.ml[459,14261+6]..[459,14261+10])
                        Some
                          expression (lambda/lambda.ml[459,14261+10]..[459,14261+43])
                            Pexp_tuple
                            [
                              expression (lambda/lambda.ml[459,14261+11]..[459,14261+17])
                                Pexp_ident "strict" (lambda/lambda.ml[459,14261+11]..[459,14261+17])
                              expression (lambda/lambda.ml[459,14261+19]..[459,14261+26])
                                Pexp_construct "Pgenval" (lambda/lambda.ml[459,14261+19]..[459,14261+26])
                                None
                              expression (lambda/lambda.ml[459,14261+28]..[459,14261+30])
                                Pexp_ident "id" (lambda/lambda.ml[459,14261+28]..[459,14261+30])
                              expression (lambda/lambda.ml[459,14261+32]..[459,14261+35])
                                Pexp_ident "arg" (lambda/lambda.ml[459,14261+32]..[459,14261+35])
                              expression (lambda/lambda.ml[459,14261+37]..[459,14261+42])
                                Pexp_apply
                                expression (lambda/lambda.ml[459,14261+37]..[459,14261+39])
                                  Pexp_ident "fn" (lambda/lambda.ml[459,14261+37]..[459,14261+39])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[459,14261+40]..[459,14261+42])
                                      Pexp_ident "id" (lambda/lambda.ml[459,14261+40]..[459,14261+42])
                                ]
                            ]
                ]
    ]
  structure_item (lambda/lambda.ml[461,14306+0]..[469,14604+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[461,14306+4]..[461,14306+20])
          Ppat_var "name_lambda_list" (lambda/lambda.ml[461,14306+4]..[461,14306+20])
        expression (lambda/lambda.ml[461,14306+21]..[469,14604+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[461,14306+21]..[461,14306+25])
            Ppat_var "args" (lambda/lambda.ml[461,14306+21]..[461,14306+25])
          expression (lambda/lambda.ml[461,14306+26]..[469,14604+19]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[461,14306+26]..[461,14306+28])
              Ppat_var "fn" (lambda/lambda.ml[461,14306+26]..[461,14306+28])
            expression (lambda/lambda.ml[462,14337+2]..[469,14604+19])
              Pexp_let Rec
              [
                <def>
                  pattern (lambda/lambda.ml[462,14337+10]..[462,14337+19])
                    Ppat_var "name_list" (lambda/lambda.ml[462,14337+10]..[462,14337+19])
                  expression (lambda/lambda.ml[462,14337+20]..[468,14530+70]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/lambda.ml[462,14337+20]..[462,14337+25])
                      Ppat_var "names" (lambda/lambda.ml[462,14337+20]..[462,14337+25])
                    expression (lambda/lambda.ml[462,14337+28]..[468,14530+70])
                      Pexp_function
                      [
                        <case>
                          pattern (lambda/lambda.ml[463,14374+4]..[463,14374+6])
                            Ppat_construct "[]" (lambda/lambda.ml[463,14374+4]..[463,14374+6])
                            None
                          expression (lambda/lambda.ml[463,14374+10]..[463,14374+29])
                            Pexp_apply
                            expression (lambda/lambda.ml[463,14374+10]..[463,14374+12])
                              Pexp_ident "fn" (lambda/lambda.ml[463,14374+10]..[463,14374+12])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[463,14374+13]..[463,14374+29])
                                  Pexp_apply
                                  expression (lambda/lambda.ml[463,14374+14]..[463,14374+22])
                                    Pexp_ident "List.rev" (lambda/lambda.ml[463,14374+14]..[463,14374+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/lambda.ml[463,14374+23]..[463,14374+28])
                                        Pexp_ident "names" (lambda/lambda.ml[463,14374+23]..[463,14374+28])
                                  ]
                            ]
                        <case>
                          pattern (lambda/lambda.ml[464,14404+4]..[464,14404+26])
                            Ppat_construct "::" (lambda/lambda.ml[464,14404+20]..[464,14404+22])
                            Some
                              []
                              pattern (lambda/lambda.ml[464,14404+4]..[464,14404+26]) ghost
                                Ppat_tuple
                                [
                                  pattern (lambda/lambda.ml[464,14404+4]..[464,14404+19])
                                    Ppat_alias "arg" (lambda/lambda.ml[464,14404+15]..[464,14404+18])
                                    pattern (lambda/lambda.ml[464,14404+5]..[464,14404+11])
                                      Ppat_construct "Lvar" (lambda/lambda.ml[464,14404+5]..[464,14404+9])
                                      Some
                                        []
                                        pattern (lambda/lambda.ml[464,14404+10]..[464,14404+11])
                                          Ppat_any
                                  pattern (lambda/lambda.ml[464,14404+23]..[464,14404+26])
                                    Ppat_var "rem" (lambda/lambda.ml[464,14404+23]..[464,14404+26])
                                ]
                          expression (lambda/lambda.ml[465,14434+6]..[465,14434+34])
                            Pexp_apply
                            expression (lambda/lambda.ml[465,14434+6]..[465,14434+15])
                              Pexp_ident "name_list" (lambda/lambda.ml[465,14434+6]..[465,14434+15])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[465,14434+16]..[465,14434+30])
                                  Pexp_construct "::" (lambda/lambda.ml[465,14434+21]..[465,14434+23])
                                  Some
                                    expression (lambda/lambda.ml[465,14434+17]..[465,14434+29]) ghost
                                      Pexp_tuple
                                      [
                                        expression (lambda/lambda.ml[465,14434+17]..[465,14434+20])
                                          Pexp_ident "arg" (lambda/lambda.ml[465,14434+17]..[465,14434+20])
                                        expression (lambda/lambda.ml[465,14434+24]..[465,14434+29])
                                          Pexp_ident "names" (lambda/lambda.ml[465,14434+24]..[465,14434+29])
                                      ]
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[465,14434+31]..[465,14434+34])
                                  Pexp_ident "rem" (lambda/lambda.ml[465,14434+31]..[465,14434+34])
                            ]
                        <case>
                          pattern (lambda/lambda.ml[466,14469+4]..[466,14469+14])
                            Ppat_construct "::" (lambda/lambda.ml[466,14469+8]..[466,14469+10])
                            Some
                              []
                              pattern (lambda/lambda.ml[466,14469+4]..[466,14469+14]) ghost
                                Ppat_tuple
                                [
                                  pattern (lambda/lambda.ml[466,14469+4]..[466,14469+7])
                                    Ppat_var "arg" (lambda/lambda.ml[466,14469+4]..[466,14469+7])
                                  pattern (lambda/lambda.ml[466,14469+11]..[466,14469+14])
                                    Ppat_var "rem" (lambda/lambda.ml[466,14469+11]..[466,14469+14])
                                ]
                          expression (lambda/lambda.ml[467,14487+6]..[468,14530+70])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/lambda.ml[467,14487+10]..[467,14487+12])
                                  Ppat_var "id" (lambda/lambda.ml[467,14487+10]..[467,14487+12])
                                expression (lambda/lambda.ml[467,14487+15]..[467,14487+39])
                                  Pexp_apply
                                  expression (lambda/lambda.ml[467,14487+15]..[467,14487+33])
                                    Pexp_ident "Ident.create_local" (lambda/lambda.ml[467,14487+15]..[467,14487+33])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/lambda.ml[467,14487+34]..[467,14487+39])
                                        Pexp_constant PConst_string("let",(lambda/lambda.ml[467,14487+35]..[467,14487+38]),None)
                                  ]
                            ]
                            expression (lambda/lambda.ml[468,14530+6]..[468,14530+70])
                              Pexp_construct "Llet" (lambda/lambda.ml[468,14530+6]..[468,14530+10])
                              Some
                                expression (lambda/lambda.ml[468,14530+10]..[468,14530+70])
                                  Pexp_tuple
                                  [
                                    expression (lambda/lambda.ml[468,14530+11]..[468,14530+17])
                                      Pexp_construct "Strict" (lambda/lambda.ml[468,14530+11]..[468,14530+17])
                                      None
                                    expression (lambda/lambda.ml[468,14530+19]..[468,14530+26])
                                      Pexp_construct "Pgenval" (lambda/lambda.ml[468,14530+19]..[468,14530+26])
                                      None
                                    expression (lambda/lambda.ml[468,14530+28]..[468,14530+30])
                                      Pexp_ident "id" (lambda/lambda.ml[468,14530+28]..[468,14530+30])
                                    expression (lambda/lambda.ml[468,14530+32]..[468,14530+35])
                                      Pexp_ident "arg" (lambda/lambda.ml[468,14530+32]..[468,14530+35])
                                    expression (lambda/lambda.ml[468,14530+37]..[468,14530+69])
                                      Pexp_apply
                                      expression (lambda/lambda.ml[468,14530+37]..[468,14530+46])
                                        Pexp_ident "name_list" (lambda/lambda.ml[468,14530+37]..[468,14530+46])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[468,14530+47]..[468,14530+65])
                                            Pexp_construct "::" (lambda/lambda.ml[468,14530+56]..[468,14530+58])
                                            Some
                                              expression (lambda/lambda.ml[468,14530+48]..[468,14530+64]) ghost
                                                Pexp_tuple
                                                [
                                                  expression (lambda/lambda.ml[468,14530+48]..[468,14530+55])
                                                    Pexp_construct "Lvar" (lambda/lambda.ml[468,14530+48]..[468,14530+52])
                                                    Some
                                                      expression (lambda/lambda.ml[468,14530+53]..[468,14530+55])
                                                        Pexp_ident "id" (lambda/lambda.ml[468,14530+53]..[468,14530+55])
                                                  expression (lambda/lambda.ml[468,14530+59]..[468,14530+64])
                                                    Pexp_ident "names" (lambda/lambda.ml[468,14530+59]..[468,14530+64])
                                                ]
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[468,14530+66]..[468,14530+69])
                                            Pexp_ident "rem" (lambda/lambda.ml[468,14530+66]..[468,14530+69])
                                      ]
                                  ]
                      ]
              ]
              expression (lambda/lambda.ml[469,14604+2]..[469,14604+19])
                Pexp_apply
                expression (lambda/lambda.ml[469,14604+2]..[469,14604+11])
                  Pexp_ident "name_list" (lambda/lambda.ml[469,14604+2]..[469,14604+11])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[469,14604+12]..[469,14604+14])
                      Pexp_construct "[]" (lambda/lambda.ml[469,14604+12]..[469,14604+14])
                      None
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[469,14604+15]..[469,14604+19])
                      Pexp_ident "args" (lambda/lambda.ml[469,14604+15]..[469,14604+19])
                ]
    ]
  structure_item (lambda/lambda.ml[472,14626+0]..[474,14667+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[472,14626+4]..[472,14626+12])
          Ppat_var "iter_opt" (lambda/lambda.ml[472,14626+4]..[472,14626+12])
        expression (lambda/lambda.ml[472,14626+13]..[474,14667+17]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[472,14626+13]..[472,14626+14])
            Ppat_var "f" (lambda/lambda.ml[472,14626+13]..[472,14626+14])
          expression (lambda/lambda.ml[472,14626+17]..[474,14667+17])
            Pexp_function
            [
              <case>
                pattern (lambda/lambda.ml[473,14652+4]..[473,14652+8])
                  Ppat_construct "None" (lambda/lambda.ml[473,14652+4]..[473,14652+8])
                  None
                expression (lambda/lambda.ml[473,14652+12]..[473,14652+14])
                  Pexp_construct "()" (lambda/lambda.ml[473,14652+12]..[473,14652+14])
                  None
              <case>
                pattern (lambda/lambda.ml[474,14667+4]..[474,14667+10])
                  Ppat_construct "Some" (lambda/lambda.ml[474,14667+4]..[474,14667+8])
                  Some
                    []
                    pattern (lambda/lambda.ml[474,14667+9]..[474,14667+10])
                      Ppat_var "e" (lambda/lambda.ml[474,14667+9]..[474,14667+10])
                expression (lambda/lambda.ml[474,14667+14]..[474,14667+17])
                  Pexp_apply
                  expression (lambda/lambda.ml[474,14667+14]..[474,14667+15])
                    Pexp_ident "f" (lambda/lambda.ml[474,14667+14]..[474,14667+15])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/lambda.ml[474,14667+16]..[474,14667+17])
                        Pexp_ident "e" (lambda/lambda.ml[474,14667+16]..[474,14667+17])
                  ]
            ]
    ]
  structure_item (lambda/lambda.ml[476,14686+0]..[526,16066+12])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[476,14686+4]..[476,14686+16])
          Ppat_var "shallow_iter" (lambda/lambda.ml[476,14686+4]..[476,14686+16])
        expression (lambda/lambda.ml[476,14686+17]..[526,16066+12]) ghost
          Pexp_fun
          Labelled "tail"
          None
          pattern (lambda/lambda.ml[476,14686+18]..[476,14686+22])
            Ppat_var "tail" (lambda/lambda.ml[476,14686+18]..[476,14686+22])
          expression (lambda/lambda.ml[476,14686+23]..[526,16066+12]) ghost
            Pexp_fun
            Labelled "non_tail"
            None
            pattern (lambda/lambda.ml[476,14686+33]..[476,14686+34])
              Ppat_var "f" (lambda/lambda.ml[476,14686+33]..[476,14686+34])
            expression (lambda/lambda.ml[476,14686+37]..[526,16066+12])
              Pexp_function
              [
                <case>
                  pattern (lambda/lambda.ml[477,14732+4]..[479,14757+12])
                    Ppat_or
                    pattern (lambda/lambda.ml[477,14732+4]..[478,14743+13])
                      Ppat_or
                      pattern (lambda/lambda.ml[477,14732+4]..[477,14732+10])
                        Ppat_construct "Lvar" (lambda/lambda.ml[477,14732+4]..[477,14732+8])
                        Some
                          []
                          pattern (lambda/lambda.ml[477,14732+9]..[477,14732+10])
                            Ppat_any
                      pattern (lambda/lambda.ml[478,14743+4]..[478,14743+13])
                        Ppat_construct "Lmutvar" (lambda/lambda.ml[478,14743+4]..[478,14743+11])
                        Some
                          []
                          pattern (lambda/lambda.ml[478,14743+12]..[478,14743+13])
                            Ppat_any
                    pattern (lambda/lambda.ml[479,14757+4]..[479,14757+12])
                      Ppat_construct "Lconst" (lambda/lambda.ml[479,14757+4]..[479,14757+10])
                      Some
                        []
                        pattern (lambda/lambda.ml[479,14757+11]..[479,14757+12])
                          Ppat_any
                  expression (lambda/lambda.ml[479,14757+16]..[479,14757+18])
                    Pexp_construct "()" (lambda/lambda.ml[479,14757+16]..[479,14757+18])
                    None
                <case>
                  pattern (lambda/lambda.ml[480,14776+4]..[480,14776+40])
                    Ppat_construct "Lapply" (lambda/lambda.ml[480,14776+4]..[480,14776+10])
                    Some
                      []
                      pattern (lambda/lambda.ml[480,14776+10]..[480,14776+40])
                        Ppat_record Closed
                        [
                          "ap_func" (lambda/lambda.ml[480,14776+11]..[480,14776+18])
                            pattern (lambda/lambda.ml[480,14776+21]..[480,14776+23])
                              Ppat_var "fn" (lambda/lambda.ml[480,14776+21]..[480,14776+23])
                          "ap_args" (lambda/lambda.ml[480,14776+25]..[480,14776+32])
                            pattern (lambda/lambda.ml[480,14776+35]..[480,14776+39])
                              Ppat_var "args" (lambda/lambda.ml[480,14776+35]..[480,14776+39])
                        ]
                  expression (lambda/lambda.ml[481,14820+6]..[481,14820+28])
                    Pexp_sequence
                    expression (lambda/lambda.ml[481,14820+6]..[481,14820+10])
                      Pexp_apply
                      expression (lambda/lambda.ml[481,14820+6]..[481,14820+7])
                        Pexp_ident "f" (lambda/lambda.ml[481,14820+6]..[481,14820+7])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[481,14820+8]..[481,14820+10])
                            Pexp_ident "fn" (lambda/lambda.ml[481,14820+8]..[481,14820+10])
                      ]
                    expression (lambda/lambda.ml[481,14820+12]..[481,14820+28])
                      Pexp_apply
                      expression (lambda/lambda.ml[481,14820+12]..[481,14820+21])
                        Pexp_ident "List.iter" (lambda/lambda.ml[481,14820+12]..[481,14820+21])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[481,14820+22]..[481,14820+23])
                            Pexp_ident "f" (lambda/lambda.ml[481,14820+22]..[481,14820+23])
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[481,14820+24]..[481,14820+28])
                            Pexp_ident "args" (lambda/lambda.ml[481,14820+24]..[481,14820+28])
                      ]
                <case>
                  pattern (lambda/lambda.ml[482,14849+4]..[482,14849+19])
                    Ppat_construct "Lfunction" (lambda/lambda.ml[482,14849+4]..[482,14849+13])
                    Some
                      []
                      pattern (lambda/lambda.ml[482,14849+13]..[482,14849+19])
                        Ppat_record Closed
                        [
                          "body" (lambda/lambda.ml[482,14849+14]..[482,14849+18]) ghost
                            pattern (lambda/lambda.ml[482,14849+14]..[482,14849+18])
                              Ppat_var "body" (lambda/lambda.ml[482,14849+14]..[482,14849+18])
                        ]
                  expression (lambda/lambda.ml[483,14872+6]..[483,14872+12])
                    Pexp_apply
                    expression (lambda/lambda.ml[483,14872+6]..[483,14872+7])
                      Pexp_ident "f" (lambda/lambda.ml[483,14872+6]..[483,14872+7])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[483,14872+8]..[483,14872+12])
                          Pexp_ident "body" (lambda/lambda.ml[483,14872+8]..[483,14872+12])
                    ]
                <case>
                  pattern (lambda/lambda.ml[484,14885+4]..[485,14917+31])
                    Ppat_or
                    pattern (lambda/lambda.ml[484,14885+4]..[484,14885+31])
                      Ppat_construct "Llet" (lambda/lambda.ml[484,14885+4]..[484,14885+8])
                      Some
                        []
                        pattern (lambda/lambda.ml[484,14885+8]..[484,14885+31])
                          Ppat_tuple
                          [
                            pattern (lambda/lambda.ml[484,14885+9]..[484,14885+10])
                              Ppat_any
                            pattern (lambda/lambda.ml[484,14885+12]..[484,14885+14])
                              Ppat_var "_k" (lambda/lambda.ml[484,14885+12]..[484,14885+14])
                            pattern (lambda/lambda.ml[484,14885+16]..[484,14885+19])
                              Ppat_var "_id" (lambda/lambda.ml[484,14885+16]..[484,14885+19])
                            pattern (lambda/lambda.ml[484,14885+21]..[484,14885+24])
                              Ppat_var "arg" (lambda/lambda.ml[484,14885+21]..[484,14885+24])
                            pattern (lambda/lambda.ml[484,14885+26]..[484,14885+30])
                              Ppat_var "body" (lambda/lambda.ml[484,14885+26]..[484,14885+30])
                          ]
                    pattern (lambda/lambda.ml[485,14917+4]..[485,14917+31])
                      Ppat_construct "Lmutlet" (lambda/lambda.ml[485,14917+4]..[485,14917+11])
                      Some
                        []
                        pattern (lambda/lambda.ml[485,14917+11]..[485,14917+31])
                          Ppat_tuple
                          [
                            pattern (lambda/lambda.ml[485,14917+12]..[485,14917+14])
                              Ppat_var "_k" (lambda/lambda.ml[485,14917+12]..[485,14917+14])
                            pattern (lambda/lambda.ml[485,14917+16]..[485,14917+19])
                              Ppat_var "_id" (lambda/lambda.ml[485,14917+16]..[485,14917+19])
                            pattern (lambda/lambda.ml[485,14917+21]..[485,14917+24])
                              Ppat_var "arg" (lambda/lambda.ml[485,14917+21]..[485,14917+24])
                            pattern (lambda/lambda.ml[485,14917+26]..[485,14917+30])
                              Ppat_var "body" (lambda/lambda.ml[485,14917+26]..[485,14917+30])
                          ]
                  expression (lambda/lambda.ml[486,14952+6]..[486,14952+22])
                    Pexp_sequence
                    expression (lambda/lambda.ml[486,14952+6]..[486,14952+11])
                      Pexp_apply
                      expression (lambda/lambda.ml[486,14952+6]..[486,14952+7])
                        Pexp_ident "f" (lambda/lambda.ml[486,14952+6]..[486,14952+7])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[486,14952+8]..[486,14952+11])
                            Pexp_ident "arg" (lambda/lambda.ml[486,14952+8]..[486,14952+11])
                      ]
                    expression (lambda/lambda.ml[486,14952+13]..[486,14952+22])
                      Pexp_apply
                      expression (lambda/lambda.ml[486,14952+13]..[486,14952+17])
                        Pexp_ident "tail" (lambda/lambda.ml[486,14952+13]..[486,14952+17])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[486,14952+18]..[486,14952+22])
                            Pexp_ident "body" (lambda/lambda.ml[486,14952+18]..[486,14952+22])
                      ]
                <case>
                  pattern (lambda/lambda.ml[487,14975+4]..[487,14975+23])
                    Ppat_construct "Lletrec" (lambda/lambda.ml[487,14975+4]..[487,14975+11])
                    Some
                      []
                      pattern (lambda/lambda.ml[487,14975+11]..[487,14975+23])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[487,14975+12]..[487,14975+16])
                            Ppat_var "decl" (lambda/lambda.ml[487,14975+12]..[487,14975+16])
                          pattern (lambda/lambda.ml[487,14975+18]..[487,14975+22])
                            Ppat_var "body" (lambda/lambda.ml[487,14975+18]..[487,14975+22])
                        ]
                  expression (lambda/lambda.ml[488,15002+6]..[489,15019+46])
                    Pexp_sequence
                    expression (lambda/lambda.ml[488,15002+6]..[488,15002+15])
                      Pexp_apply
                      expression (lambda/lambda.ml[488,15002+6]..[488,15002+10])
                        Pexp_ident "tail" (lambda/lambda.ml[488,15002+6]..[488,15002+10])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[488,15002+11]..[488,15002+15])
                            Pexp_ident "body" (lambda/lambda.ml[488,15002+11]..[488,15002+15])
                      ]
                    expression (lambda/lambda.ml[489,15019+6]..[489,15019+46])
                      Pexp_apply
                      expression (lambda/lambda.ml[489,15019+6]..[489,15019+15])
                        Pexp_ident "List.iter" (lambda/lambda.ml[489,15019+6]..[489,15019+15])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[489,15019+16]..[489,15019+41])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/lambda.ml[489,15019+21]..[489,15019+31])
                              Ppat_tuple
                              [
                                pattern (lambda/lambda.ml[489,15019+22]..[489,15019+25])
                                  Ppat_var "_id" (lambda/lambda.ml[489,15019+22]..[489,15019+25])
                                pattern (lambda/lambda.ml[489,15019+27]..[489,15019+30])
                                  Ppat_var "exp" (lambda/lambda.ml[489,15019+27]..[489,15019+30])
                              ]
                            expression (lambda/lambda.ml[489,15019+35]..[489,15019+40])
                              Pexp_apply
                              expression (lambda/lambda.ml[489,15019+35]..[489,15019+36])
                                Pexp_ident "f" (lambda/lambda.ml[489,15019+35]..[489,15019+36])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/lambda.ml[489,15019+37]..[489,15019+40])
                                    Pexp_ident "exp" (lambda/lambda.ml[489,15019+37]..[489,15019+40])
                              ]
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[489,15019+42]..[489,15019+46])
                            Pexp_ident "decl" (lambda/lambda.ml[489,15019+42]..[489,15019+46])
                      ]
                <case>
                  pattern (lambda/lambda.ml[490,15066+4]..[491,15100+32])
                    Ppat_or
                    pattern (lambda/lambda.ml[490,15066+4]..[490,15066+33])
                      Ppat_construct "Lprim" (lambda/lambda.ml[490,15066+4]..[490,15066+9])
                      Some
                        []
                        pattern (lambda/lambda.ml[490,15066+10]..[490,15066+33])
                          Ppat_tuple
                          [
                            pattern (lambda/lambda.ml[490,15066+11]..[490,15066+19])
                              Ppat_construct "Psequand" (lambda/lambda.ml[490,15066+11]..[490,15066+19])
                              None
                            pattern (lambda/lambda.ml[490,15066+21]..[490,15066+29])
                              Ppat_construct "::" (lambda/lambda.ml[490,15066+22]..[490,15066+29]) ghost
                              Some
                                []
                                pattern (lambda/lambda.ml[490,15066+22]..[490,15066+29]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (lambda/lambda.ml[490,15066+22]..[490,15066+24])
                                      Ppat_var "l1" (lambda/lambda.ml[490,15066+22]..[490,15066+24])
                                    pattern (lambda/lambda.ml[490,15066+26]..[490,15066+29]) ghost
                                      Ppat_construct "::" (lambda/lambda.ml[490,15066+26]..[490,15066+29]) ghost
                                      Some
                                        []
                                        pattern (lambda/lambda.ml[490,15066+26]..[490,15066+29]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (lambda/lambda.ml[490,15066+26]..[490,15066+28])
                                              Ppat_var "l2" (lambda/lambda.ml[490,15066+26]..[490,15066+28])
                                            pattern (lambda/lambda.ml[490,15066+28]..[490,15066+29]) ghost
                                              Ppat_construct "[]" (lambda/lambda.ml[490,15066+28]..[490,15066+29]) ghost
                                              None
                                          ]
                                  ]
                            pattern (lambda/lambda.ml[490,15066+31]..[490,15066+32])
                              Ppat_any
                          ]
                    pattern (lambda/lambda.ml[491,15100+4]..[491,15100+32])
                      Ppat_construct "Lprim" (lambda/lambda.ml[491,15100+4]..[491,15100+9])
                      Some
                        []
                        pattern (lambda/lambda.ml[491,15100+10]..[491,15100+32])
                          Ppat_tuple
                          [
                            pattern (lambda/lambda.ml[491,15100+11]..[491,15100+18])
                              Ppat_construct "Psequor" (lambda/lambda.ml[491,15100+11]..[491,15100+18])
                              None
                            pattern (lambda/lambda.ml[491,15100+20]..[491,15100+28])
                              Ppat_construct "::" (lambda/lambda.ml[491,15100+21]..[491,15100+28]) ghost
                              Some
                                []
                                pattern (lambda/lambda.ml[491,15100+21]..[491,15100+28]) ghost
                                  Ppat_tuple
                                  [
                                    pattern (lambda/lambda.ml[491,15100+21]..[491,15100+23])
                                      Ppat_var "l1" (lambda/lambda.ml[491,15100+21]..[491,15100+23])
                                    pattern (lambda/lambda.ml[491,15100+25]..[491,15100+28]) ghost
                                      Ppat_construct "::" (lambda/lambda.ml[491,15100+25]..[491,15100+28]) ghost
                                      Some
                                        []
                                        pattern (lambda/lambda.ml[491,15100+25]..[491,15100+28]) ghost
                                          Ppat_tuple
                                          [
                                            pattern (lambda/lambda.ml[491,15100+25]..[491,15100+27])
                                              Ppat_var "l2" (lambda/lambda.ml[491,15100+25]..[491,15100+27])
                                            pattern (lambda/lambda.ml[491,15100+27]..[491,15100+28]) ghost
                                              Ppat_construct "[]" (lambda/lambda.ml[491,15100+27]..[491,15100+28]) ghost
                                              None
                                          ]
                                  ]
                            pattern (lambda/lambda.ml[491,15100+30]..[491,15100+31])
                              Ppat_any
                          ]
                  expression (lambda/lambda.ml[492,15136+6]..[493,15148+13])
                    Pexp_sequence
                    expression (lambda/lambda.ml[492,15136+6]..[492,15136+10])
                      Pexp_apply
                      expression (lambda/lambda.ml[492,15136+6]..[492,15136+7])
                        Pexp_ident "f" (lambda/lambda.ml[492,15136+6]..[492,15136+7])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[492,15136+8]..[492,15136+10])
                            Pexp_ident "l1" (lambda/lambda.ml[492,15136+8]..[492,15136+10])
                      ]
                    expression (lambda/lambda.ml[493,15148+6]..[493,15148+13])
                      Pexp_apply
                      expression (lambda/lambda.ml[493,15148+6]..[493,15148+10])
                        Pexp_ident "tail" (lambda/lambda.ml[493,15148+6]..[493,15148+10])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[493,15148+11]..[493,15148+13])
                            Pexp_ident "l2" (lambda/lambda.ml[493,15148+11]..[493,15148+13])
                      ]
                <case>
                  pattern (lambda/lambda.ml[494,15162+4]..[494,15162+25])
                    Ppat_construct "Lprim" (lambda/lambda.ml[494,15162+4]..[494,15162+9])
                    Some
                      []
                      pattern (lambda/lambda.ml[494,15162+9]..[494,15162+25])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[494,15162+10]..[494,15162+12])
                            Ppat_var "_p" (lambda/lambda.ml[494,15162+10]..[494,15162+12])
                          pattern (lambda/lambda.ml[494,15162+14]..[494,15162+18])
                            Ppat_var "args" (lambda/lambda.ml[494,15162+14]..[494,15162+18])
                          pattern (lambda/lambda.ml[494,15162+20]..[494,15162+24])
                            Ppat_var "_loc" (lambda/lambda.ml[494,15162+20]..[494,15162+24])
                        ]
                  expression (lambda/lambda.ml[495,15191+6]..[495,15191+22])
                    Pexp_apply
                    expression (lambda/lambda.ml[495,15191+6]..[495,15191+15])
                      Pexp_ident "List.iter" (lambda/lambda.ml[495,15191+6]..[495,15191+15])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[495,15191+16]..[495,15191+17])
                          Pexp_ident "f" (lambda/lambda.ml[495,15191+16]..[495,15191+17])
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[495,15191+18]..[495,15191+22])
                          Pexp_ident "args" (lambda/lambda.ml[495,15191+18]..[495,15191+22])
                    ]
                <case>
                  pattern (lambda/lambda.ml[496,15214+4]..[496,15214+22])
                    Ppat_construct "Lswitch" (lambda/lambda.ml[496,15214+4]..[496,15214+11])
                    Some
                      []
                      pattern (lambda/lambda.ml[496,15214+11]..[496,15214+22])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[496,15214+12]..[496,15214+15])
                            Ppat_var "arg" (lambda/lambda.ml[496,15214+12]..[496,15214+15])
                          pattern (lambda/lambda.ml[496,15214+17]..[496,15214+19])
                            Ppat_var "sw" (lambda/lambda.ml[496,15214+17]..[496,15214+19])
                          pattern (lambda/lambda.ml[496,15214+20]..[496,15214+21])
                            Ppat_any
                        ]
                  expression (lambda/lambda.ml[497,15240+6]..[500,15377+36])
                    Pexp_sequence
                    expression (lambda/lambda.ml[497,15240+6]..[497,15240+11])
                      Pexp_apply
                      expression (lambda/lambda.ml[497,15240+6]..[497,15240+7])
                        Pexp_ident "f" (lambda/lambda.ml[497,15240+6]..[497,15240+7])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[497,15240+8]..[497,15240+11])
                            Pexp_ident "arg" (lambda/lambda.ml[497,15240+8]..[497,15240+11])
                      ]
                    expression (lambda/lambda.ml[498,15253+6]..[500,15377+36])
                      Pexp_sequence
                      expression (lambda/lambda.ml[498,15253+6]..[498,15253+60])
                        Pexp_apply
                        expression (lambda/lambda.ml[498,15253+6]..[498,15253+15])
                          Pexp_ident "List.iter" (lambda/lambda.ml[498,15253+6]..[498,15253+15])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[498,15253+16]..[498,15253+47])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/lambda.ml[498,15253+21]..[498,15253+33])
                                Ppat_tuple
                                [
                                  pattern (lambda/lambda.ml[498,15253+22]..[498,15253+26])
                                    Ppat_var "_key" (lambda/lambda.ml[498,15253+22]..[498,15253+26])
                                  pattern (lambda/lambda.ml[498,15253+28]..[498,15253+32])
                                    Ppat_var "case" (lambda/lambda.ml[498,15253+28]..[498,15253+32])
                                ]
                              expression (lambda/lambda.ml[498,15253+37]..[498,15253+46])
                                Pexp_apply
                                expression (lambda/lambda.ml[498,15253+37]..[498,15253+41])
                                  Pexp_ident "tail" (lambda/lambda.ml[498,15253+37]..[498,15253+41])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[498,15253+42]..[498,15253+46])
                                      Pexp_ident "case" (lambda/lambda.ml[498,15253+42]..[498,15253+46])
                                ]
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[498,15253+48]..[498,15253+60])
                              Pexp_field
                              expression (lambda/lambda.ml[498,15253+48]..[498,15253+50])
                                Pexp_ident "sw" (lambda/lambda.ml[498,15253+48]..[498,15253+50])
                              "sw_consts" (lambda/lambda.ml[498,15253+51]..[498,15253+60])
                        ]
                      expression (lambda/lambda.ml[499,15315+6]..[500,15377+36])
                        Pexp_sequence
                        expression (lambda/lambda.ml[499,15315+6]..[499,15315+60])
                          Pexp_apply
                          expression (lambda/lambda.ml[499,15315+6]..[499,15315+15])
                            Pexp_ident "List.iter" (lambda/lambda.ml[499,15315+6]..[499,15315+15])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[499,15315+16]..[499,15315+47])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/lambda.ml[499,15315+21]..[499,15315+33])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/lambda.ml[499,15315+22]..[499,15315+26])
                                      Ppat_var "_key" (lambda/lambda.ml[499,15315+22]..[499,15315+26])
                                    pattern (lambda/lambda.ml[499,15315+28]..[499,15315+32])
                                      Ppat_var "case" (lambda/lambda.ml[499,15315+28]..[499,15315+32])
                                  ]
                                expression (lambda/lambda.ml[499,15315+37]..[499,15315+46])
                                  Pexp_apply
                                  expression (lambda/lambda.ml[499,15315+37]..[499,15315+41])
                                    Pexp_ident "tail" (lambda/lambda.ml[499,15315+37]..[499,15315+41])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/lambda.ml[499,15315+42]..[499,15315+46])
                                        Pexp_ident "case" (lambda/lambda.ml[499,15315+42]..[499,15315+46])
                                  ]
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[499,15315+48]..[499,15315+60])
                                Pexp_field
                                expression (lambda/lambda.ml[499,15315+48]..[499,15315+50])
                                  Pexp_ident "sw" (lambda/lambda.ml[499,15315+48]..[499,15315+50])
                                "sw_blocks" (lambda/lambda.ml[499,15315+51]..[499,15315+60])
                          ]
                        expression (lambda/lambda.ml[500,15377+6]..[500,15377+36])
                          Pexp_apply
                          expression (lambda/lambda.ml[500,15377+6]..[500,15377+14])
                            Pexp_ident "iter_opt" (lambda/lambda.ml[500,15377+6]..[500,15377+14])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[500,15377+15]..[500,15377+19])
                                Pexp_ident "tail" (lambda/lambda.ml[500,15377+15]..[500,15377+19])
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[500,15377+20]..[500,15377+36])
                                Pexp_field
                                expression (lambda/lambda.ml[500,15377+20]..[500,15377+22])
                                  Pexp_ident "sw" (lambda/lambda.ml[500,15377+20]..[500,15377+22])
                                "sw_failaction" (lambda/lambda.ml[500,15377+23]..[500,15377+36])
                          ]
                <case>
                  pattern (lambda/lambda.ml[501,15414+4]..[501,15414+39])
                    Ppat_construct "Lstringswitch" (lambda/lambda.ml[501,15414+4]..[501,15414+17])
                    Some
                      []
                      pattern (lambda/lambda.ml[501,15414+18]..[501,15414+39])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[501,15414+19]..[501,15414+22])
                            Ppat_var "arg" (lambda/lambda.ml[501,15414+19]..[501,15414+22])
                          pattern (lambda/lambda.ml[501,15414+23]..[501,15414+28])
                            Ppat_var "cases" (lambda/lambda.ml[501,15414+23]..[501,15414+28])
                          pattern (lambda/lambda.ml[501,15414+29]..[501,15414+36])
                            Ppat_var "default" (lambda/lambda.ml[501,15414+29]..[501,15414+36])
                          pattern (lambda/lambda.ml[501,15414+37]..[501,15414+38])
                            Ppat_any
                        ]
                  expression (lambda/lambda.ml[502,15457+6]..[504,15521+27])
                    Pexp_sequence
                    expression (lambda/lambda.ml[502,15457+6]..[502,15457+11])
                      Pexp_apply
                      expression (lambda/lambda.ml[502,15457+6]..[502,15457+7])
                        Pexp_ident "f" (lambda/lambda.ml[502,15457+6]..[502,15457+7])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[502,15457+8]..[502,15457+11])
                            Pexp_ident "arg" (lambda/lambda.ml[502,15457+8]..[502,15457+11])
                      ]
                    expression (lambda/lambda.ml[503,15471+6]..[504,15521+27])
                      Pexp_sequence
                      expression (lambda/lambda.ml[503,15471+6]..[503,15471+47])
                        Pexp_apply
                        expression (lambda/lambda.ml[503,15471+6]..[503,15471+15])
                          Pexp_ident "List.iter" (lambda/lambda.ml[503,15471+6]..[503,15471+15])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[503,15471+16]..[503,15471+41])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/lambda.ml[503,15471+21]..[503,15471+28])
                                Ppat_tuple
                                [
                                  pattern (lambda/lambda.ml[503,15471+22]..[503,15471+23])
                                    Ppat_any
                                  pattern (lambda/lambda.ml[503,15471+24]..[503,15471+27])
                                    Ppat_var "act" (lambda/lambda.ml[503,15471+24]..[503,15471+27])
                                ]
                              expression (lambda/lambda.ml[503,15471+32]..[503,15471+40])
                                Pexp_apply
                                expression (lambda/lambda.ml[503,15471+32]..[503,15471+36])
                                  Pexp_ident "tail" (lambda/lambda.ml[503,15471+32]..[503,15471+36])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[503,15471+37]..[503,15471+40])
                                      Pexp_ident "act" (lambda/lambda.ml[503,15471+37]..[503,15471+40])
                                ]
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[503,15471+42]..[503,15471+47])
                              Pexp_ident "cases" (lambda/lambda.ml[503,15471+42]..[503,15471+47])
                        ]
                      expression (lambda/lambda.ml[504,15521+6]..[504,15521+27])
                        Pexp_apply
                        expression (lambda/lambda.ml[504,15521+6]..[504,15521+14])
                          Pexp_ident "iter_opt" (lambda/lambda.ml[504,15521+6]..[504,15521+14])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[504,15521+15]..[504,15521+19])
                              Pexp_ident "tail" (lambda/lambda.ml[504,15521+15]..[504,15521+19])
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[504,15521+20]..[504,15521+27])
                              Pexp_ident "default" (lambda/lambda.ml[504,15521+20]..[504,15521+27])
                        ]
                <case>
                  pattern (lambda/lambda.ml[505,15549+4]..[505,15549+25])
                    Ppat_construct "Lstaticraise" (lambda/lambda.ml[505,15549+4]..[505,15549+16])
                    Some
                      []
                      pattern (lambda/lambda.ml[505,15549+17]..[505,15549+25])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[505,15549+18]..[505,15549+19])
                            Ppat_any
                          pattern (lambda/lambda.ml[505,15549+20]..[505,15549+24])
                            Ppat_var "args" (lambda/lambda.ml[505,15549+20]..[505,15549+24])
                        ]
                  expression (lambda/lambda.ml[506,15578+6]..[506,15578+22])
                    Pexp_apply
                    expression (lambda/lambda.ml[506,15578+6]..[506,15578+15])
                      Pexp_ident "List.iter" (lambda/lambda.ml[506,15578+6]..[506,15578+15])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[506,15578+16]..[506,15578+17])
                          Pexp_ident "f" (lambda/lambda.ml[506,15578+16]..[506,15578+17])
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[506,15578+18]..[506,15578+22])
                          Pexp_ident "args" (lambda/lambda.ml[506,15578+18]..[506,15578+22])
                    ]
                <case>
                  pattern (lambda/lambda.ml[507,15601+4]..[507,15601+27])
                    Ppat_construct "Lstaticcatch" (lambda/lambda.ml[507,15601+4]..[507,15601+16])
                    Some
                      []
                      pattern (lambda/lambda.ml[507,15601+16]..[507,15601+27])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[507,15601+17]..[507,15601+19])
                            Ppat_var "e1" (lambda/lambda.ml[507,15601+17]..[507,15601+19])
                          pattern (lambda/lambda.ml[507,15601+21]..[507,15601+22])
                            Ppat_any
                          pattern (lambda/lambda.ml[507,15601+24]..[507,15601+26])
                            Ppat_var "e2" (lambda/lambda.ml[507,15601+24]..[507,15601+26])
                        ]
                  expression (lambda/lambda.ml[508,15632+6]..[508,15632+22])
                    Pexp_sequence
                    expression (lambda/lambda.ml[508,15632+6]..[508,15632+13])
                      Pexp_apply
                      expression (lambda/lambda.ml[508,15632+6]..[508,15632+10])
                        Pexp_ident "tail" (lambda/lambda.ml[508,15632+6]..[508,15632+10])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[508,15632+11]..[508,15632+13])
                            Pexp_ident "e1" (lambda/lambda.ml[508,15632+11]..[508,15632+13])
                      ]
                    expression (lambda/lambda.ml[508,15632+15]..[508,15632+22])
                      Pexp_apply
                      expression (lambda/lambda.ml[508,15632+15]..[508,15632+19])
                        Pexp_ident "tail" (lambda/lambda.ml[508,15632+15]..[508,15632+19])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[508,15632+20]..[508,15632+22])
                            Pexp_ident "e2" (lambda/lambda.ml[508,15632+20]..[508,15632+22])
                      ]
                <case>
                  pattern (lambda/lambda.ml[509,15655+4]..[509,15655+23])
                    Ppat_construct "Ltrywith" (lambda/lambda.ml[509,15655+4]..[509,15655+12])
                    Some
                      []
                      pattern (lambda/lambda.ml[509,15655+12]..[509,15655+23])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[509,15655+13]..[509,15655+15])
                            Ppat_var "e1" (lambda/lambda.ml[509,15655+13]..[509,15655+15])
                          pattern (lambda/lambda.ml[509,15655+17]..[509,15655+18])
                            Ppat_any
                          pattern (lambda/lambda.ml[509,15655+20]..[509,15655+22])
                            Ppat_var "e2" (lambda/lambda.ml[509,15655+20]..[509,15655+22])
                        ]
                  expression (lambda/lambda.ml[510,15682+6]..[510,15682+19])
                    Pexp_sequence
                    expression (lambda/lambda.ml[510,15682+6]..[510,15682+10])
                      Pexp_apply
                      expression (lambda/lambda.ml[510,15682+6]..[510,15682+7])
                        Pexp_ident "f" (lambda/lambda.ml[510,15682+6]..[510,15682+7])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[510,15682+8]..[510,15682+10])
                            Pexp_ident "e1" (lambda/lambda.ml[510,15682+8]..[510,15682+10])
                      ]
                    expression (lambda/lambda.ml[510,15682+12]..[510,15682+19])
                      Pexp_apply
                      expression (lambda/lambda.ml[510,15682+12]..[510,15682+16])
                        Pexp_ident "tail" (lambda/lambda.ml[510,15682+12]..[510,15682+16])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[510,15682+17]..[510,15682+19])
                            Pexp_ident "e2" (lambda/lambda.ml[510,15682+17]..[510,15682+19])
                      ]
                <case>
                  pattern (lambda/lambda.ml[511,15702+4]..[511,15702+27])
                    Ppat_construct "Lifthenelse" (lambda/lambda.ml[511,15702+4]..[511,15702+15])
                    Some
                      []
                      pattern (lambda/lambda.ml[511,15702+15]..[511,15702+27])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[511,15702+16]..[511,15702+18])
                            Ppat_var "e1" (lambda/lambda.ml[511,15702+16]..[511,15702+18])
                          pattern (lambda/lambda.ml[511,15702+20]..[511,15702+22])
                            Ppat_var "e2" (lambda/lambda.ml[511,15702+20]..[511,15702+22])
                          pattern (lambda/lambda.ml[511,15702+24]..[511,15702+26])
                            Ppat_var "e3" (lambda/lambda.ml[511,15702+24]..[511,15702+26])
                        ]
                  expression (lambda/lambda.ml[512,15733+6]..[512,15733+28])
                    Pexp_sequence
                    expression (lambda/lambda.ml[512,15733+6]..[512,15733+10])
                      Pexp_apply
                      expression (lambda/lambda.ml[512,15733+6]..[512,15733+7])
                        Pexp_ident "f" (lambda/lambda.ml[512,15733+6]..[512,15733+7])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[512,15733+8]..[512,15733+10])
                            Pexp_ident "e1" (lambda/lambda.ml[512,15733+8]..[512,15733+10])
                      ]
                    expression (lambda/lambda.ml[512,15733+12]..[512,15733+28])
                      Pexp_sequence
                      expression (lambda/lambda.ml[512,15733+12]..[512,15733+19])
                        Pexp_apply
                        expression (lambda/lambda.ml[512,15733+12]..[512,15733+16])
                          Pexp_ident "tail" (lambda/lambda.ml[512,15733+12]..[512,15733+16])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[512,15733+17]..[512,15733+19])
                              Pexp_ident "e2" (lambda/lambda.ml[512,15733+17]..[512,15733+19])
                        ]
                      expression (lambda/lambda.ml[512,15733+21]..[512,15733+28])
                        Pexp_apply
                        expression (lambda/lambda.ml[512,15733+21]..[512,15733+25])
                          Pexp_ident "tail" (lambda/lambda.ml[512,15733+21]..[512,15733+25])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[512,15733+26]..[512,15733+28])
                              Pexp_ident "e3" (lambda/lambda.ml[512,15733+26]..[512,15733+28])
                        ]
                <case>
                  pattern (lambda/lambda.ml[513,15762+4]..[513,15762+21])
                    Ppat_construct "Lsequence" (lambda/lambda.ml[513,15762+4]..[513,15762+13])
                    Some
                      []
                      pattern (lambda/lambda.ml[513,15762+13]..[513,15762+21])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[513,15762+14]..[513,15762+16])
                            Ppat_var "e1" (lambda/lambda.ml[513,15762+14]..[513,15762+16])
                          pattern (lambda/lambda.ml[513,15762+18]..[513,15762+20])
                            Ppat_var "e2" (lambda/lambda.ml[513,15762+18]..[513,15762+20])
                        ]
                  expression (lambda/lambda.ml[514,15787+6]..[514,15787+19])
                    Pexp_sequence
                    expression (lambda/lambda.ml[514,15787+6]..[514,15787+10])
                      Pexp_apply
                      expression (lambda/lambda.ml[514,15787+6]..[514,15787+7])
                        Pexp_ident "f" (lambda/lambda.ml[514,15787+6]..[514,15787+7])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[514,15787+8]..[514,15787+10])
                            Pexp_ident "e1" (lambda/lambda.ml[514,15787+8]..[514,15787+10])
                      ]
                    expression (lambda/lambda.ml[514,15787+12]..[514,15787+19])
                      Pexp_apply
                      expression (lambda/lambda.ml[514,15787+12]..[514,15787+16])
                        Pexp_ident "tail" (lambda/lambda.ml[514,15787+12]..[514,15787+16])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[514,15787+17]..[514,15787+19])
                            Pexp_ident "e2" (lambda/lambda.ml[514,15787+17]..[514,15787+19])
                      ]
                <case>
                  pattern (lambda/lambda.ml[515,15807+4]..[515,15807+18])
                    Ppat_construct "Lwhile" (lambda/lambda.ml[515,15807+4]..[515,15807+10])
                    Some
                      []
                      pattern (lambda/lambda.ml[515,15807+10]..[515,15807+18])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[515,15807+11]..[515,15807+13])
                            Ppat_var "e1" (lambda/lambda.ml[515,15807+11]..[515,15807+13])
                          pattern (lambda/lambda.ml[515,15807+15]..[515,15807+17])
                            Ppat_var "e2" (lambda/lambda.ml[515,15807+15]..[515,15807+17])
                        ]
                  expression (lambda/lambda.ml[516,15829+6]..[516,15829+16])
                    Pexp_sequence
                    expression (lambda/lambda.ml[516,15829+6]..[516,15829+10])
                      Pexp_apply
                      expression (lambda/lambda.ml[516,15829+6]..[516,15829+7])
                        Pexp_ident "f" (lambda/lambda.ml[516,15829+6]..[516,15829+7])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[516,15829+8]..[516,15829+10])
                            Pexp_ident "e1" (lambda/lambda.ml[516,15829+8]..[516,15829+10])
                      ]
                    expression (lambda/lambda.ml[516,15829+12]..[516,15829+16])
                      Pexp_apply
                      expression (lambda/lambda.ml[516,15829+12]..[516,15829+13])
                        Pexp_ident "f" (lambda/lambda.ml[516,15829+12]..[516,15829+13])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[516,15829+14]..[516,15829+16])
                            Pexp_ident "e2" (lambda/lambda.ml[516,15829+14]..[516,15829+16])
                      ]
                <case>
                  pattern (lambda/lambda.ml[517,15846+4]..[517,15846+30])
                    Ppat_construct "Lfor" (lambda/lambda.ml[517,15846+4]..[517,15846+8])
                    Some
                      []
                      pattern (lambda/lambda.ml[517,15846+8]..[517,15846+30])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[517,15846+9]..[517,15846+11])
                            Ppat_var "_v" (lambda/lambda.ml[517,15846+9]..[517,15846+11])
                          pattern (lambda/lambda.ml[517,15846+13]..[517,15846+15])
                            Ppat_var "e1" (lambda/lambda.ml[517,15846+13]..[517,15846+15])
                          pattern (lambda/lambda.ml[517,15846+17]..[517,15846+19])
                            Ppat_var "e2" (lambda/lambda.ml[517,15846+17]..[517,15846+19])
                          pattern (lambda/lambda.ml[517,15846+21]..[517,15846+25])
                            Ppat_var "_dir" (lambda/lambda.ml[517,15846+21]..[517,15846+25])
                          pattern (lambda/lambda.ml[517,15846+27]..[517,15846+29])
                            Ppat_var "e3" (lambda/lambda.ml[517,15846+27]..[517,15846+29])
                        ]
                  expression (lambda/lambda.ml[518,15880+6]..[518,15880+22])
                    Pexp_sequence
                    expression (lambda/lambda.ml[518,15880+6]..[518,15880+10])
                      Pexp_apply
                      expression (lambda/lambda.ml[518,15880+6]..[518,15880+7])
                        Pexp_ident "f" (lambda/lambda.ml[518,15880+6]..[518,15880+7])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[518,15880+8]..[518,15880+10])
                            Pexp_ident "e1" (lambda/lambda.ml[518,15880+8]..[518,15880+10])
                      ]
                    expression (lambda/lambda.ml[518,15880+12]..[518,15880+22])
                      Pexp_sequence
                      expression (lambda/lambda.ml[518,15880+12]..[518,15880+16])
                        Pexp_apply
                        expression (lambda/lambda.ml[518,15880+12]..[518,15880+13])
                          Pexp_ident "f" (lambda/lambda.ml[518,15880+12]..[518,15880+13])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[518,15880+14]..[518,15880+16])
                              Pexp_ident "e2" (lambda/lambda.ml[518,15880+14]..[518,15880+16])
                        ]
                      expression (lambda/lambda.ml[518,15880+18]..[518,15880+22])
                        Pexp_apply
                        expression (lambda/lambda.ml[518,15880+18]..[518,15880+19])
                          Pexp_ident "f" (lambda/lambda.ml[518,15880+18]..[518,15880+19])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[518,15880+20]..[518,15880+22])
                              Pexp_ident "e3" (lambda/lambda.ml[518,15880+20]..[518,15880+22])
                        ]
                <case>
                  pattern (lambda/lambda.ml[519,15903+4]..[519,15903+17])
                    Ppat_construct "Lassign" (lambda/lambda.ml[519,15903+4]..[519,15903+11])
                    Some
                      []
                      pattern (lambda/lambda.ml[519,15903+11]..[519,15903+17])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[519,15903+12]..[519,15903+13])
                            Ppat_any
                          pattern (lambda/lambda.ml[519,15903+15]..[519,15903+16])
                            Ppat_var "e" (lambda/lambda.ml[519,15903+15]..[519,15903+16])
                        ]
                  expression (lambda/lambda.ml[520,15924+6]..[520,15924+9])
                    Pexp_apply
                    expression (lambda/lambda.ml[520,15924+6]..[520,15924+7])
                      Pexp_ident "f" (lambda/lambda.ml[520,15924+6]..[520,15924+7])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[520,15924+8]..[520,15924+9])
                          Pexp_ident "e" (lambda/lambda.ml[520,15924+8]..[520,15924+9])
                    ]
                <case>
                  pattern (lambda/lambda.ml[521,15934+4]..[521,15934+33])
                    Ppat_construct "Lsend" (lambda/lambda.ml[521,15934+4]..[521,15934+9])
                    Some
                      []
                      pattern (lambda/lambda.ml[521,15934+10]..[521,15934+33])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[521,15934+11]..[521,15934+13])
                            Ppat_var "_k" (lambda/lambda.ml[521,15934+11]..[521,15934+13])
                          pattern (lambda/lambda.ml[521,15934+15]..[521,15934+18])
                            Ppat_var "met" (lambda/lambda.ml[521,15934+15]..[521,15934+18])
                          pattern (lambda/lambda.ml[521,15934+20]..[521,15934+23])
                            Ppat_var "obj" (lambda/lambda.ml[521,15934+20]..[521,15934+23])
                          pattern (lambda/lambda.ml[521,15934+25]..[521,15934+29])
                            Ppat_var "args" (lambda/lambda.ml[521,15934+25]..[521,15934+29])
                          pattern (lambda/lambda.ml[521,15934+31]..[521,15934+32])
                            Ppat_any
                        ]
                  expression (lambda/lambda.ml[522,15971+6]..[522,15971+34])
                    Pexp_apply
                    expression (lambda/lambda.ml[522,15971+6]..[522,15971+15])
                      Pexp_ident "List.iter" (lambda/lambda.ml[522,15971+6]..[522,15971+15])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[522,15971+16]..[522,15971+17])
                          Pexp_ident "f" (lambda/lambda.ml[522,15971+16]..[522,15971+17])
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[522,15971+18]..[522,15971+34])
                          Pexp_construct "::" (lambda/lambda.ml[522,15971+22]..[522,15971+24])
                          Some
                            expression (lambda/lambda.ml[522,15971+19]..[522,15971+33]) ghost
                              Pexp_tuple
                              [
                                expression (lambda/lambda.ml[522,15971+19]..[522,15971+22])
                                  Pexp_ident "met" (lambda/lambda.ml[522,15971+19]..[522,15971+22])
                                expression (lambda/lambda.ml[522,15971+24]..[522,15971+33])
                                  Pexp_construct "::" (lambda/lambda.ml[522,15971+27]..[522,15971+29])
                                  Some
                                    expression (lambda/lambda.ml[522,15971+24]..[522,15971+33]) ghost
                                      Pexp_tuple
                                      [
                                        expression (lambda/lambda.ml[522,15971+24]..[522,15971+27])
                                          Pexp_ident "obj" (lambda/lambda.ml[522,15971+24]..[522,15971+27])
                                        expression (lambda/lambda.ml[522,15971+29]..[522,15971+33])
                                          Pexp_ident "args" (lambda/lambda.ml[522,15971+29]..[522,15971+33])
                                      ]
                              ]
                    ]
                <case>
                  pattern (lambda/lambda.ml[523,16006+4]..[523,16006+20])
                    Ppat_construct "Levent" (lambda/lambda.ml[523,16006+4]..[523,16006+10])
                    Some
                      []
                      pattern (lambda/lambda.ml[523,16006+11]..[523,16006+20])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[523,16006+12]..[523,16006+13])
                            Ppat_var "e" (lambda/lambda.ml[523,16006+12]..[523,16006+13])
                          pattern (lambda/lambda.ml[523,16006+15]..[523,16006+19])
                            Ppat_var "_evt" (lambda/lambda.ml[523,16006+15]..[523,16006+19])
                        ]
                  expression (lambda/lambda.ml[524,16030+6]..[524,16030+12])
                    Pexp_apply
                    expression (lambda/lambda.ml[524,16030+6]..[524,16030+10])
                      Pexp_ident "tail" (lambda/lambda.ml[524,16030+6]..[524,16030+10])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[524,16030+11]..[524,16030+12])
                          Pexp_ident "e" (lambda/lambda.ml[524,16030+11]..[524,16030+12])
                    ]
                <case>
                  pattern (lambda/lambda.ml[525,16043+4]..[525,16043+19])
                    Ppat_construct "Lifused" (lambda/lambda.ml[525,16043+4]..[525,16043+11])
                    Some
                      []
                      pattern (lambda/lambda.ml[525,16043+12]..[525,16043+19])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[525,16043+13]..[525,16043+15])
                            Ppat_var "_v" (lambda/lambda.ml[525,16043+13]..[525,16043+15])
                          pattern (lambda/lambda.ml[525,16043+17]..[525,16043+18])
                            Ppat_var "e" (lambda/lambda.ml[525,16043+17]..[525,16043+18])
                        ]
                  expression (lambda/lambda.ml[526,16066+6]..[526,16066+12])
                    Pexp_apply
                    expression (lambda/lambda.ml[526,16066+6]..[526,16066+10])
                      Pexp_ident "tail" (lambda/lambda.ml[526,16066+6]..[526,16066+10])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[526,16066+11]..[526,16066+12])
                          Pexp_ident "e" (lambda/lambda.ml[526,16066+11]..[526,16066+12])
                    ]
              ]
    ]
  structure_item (lambda/lambda.ml[528,16080+0]..[529,16112+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[528,16080+4]..[528,16080+25])
          Ppat_var "iter_head_constructor" (lambda/lambda.ml[528,16080+4]..[528,16080+25])
        expression (lambda/lambda.ml[528,16080+26]..[529,16112+36]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[528,16080+26]..[528,16080+27])
            Ppat_var "f" (lambda/lambda.ml[528,16080+26]..[528,16080+27])
          expression (lambda/lambda.ml[528,16080+28]..[529,16112+36]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[528,16080+28]..[528,16080+29])
              Ppat_var "l" (lambda/lambda.ml[528,16080+28]..[528,16080+29])
            expression (lambda/lambda.ml[529,16112+2]..[529,16112+36])
              Pexp_apply
              expression (lambda/lambda.ml[529,16112+2]..[529,16112+14])
                Pexp_ident "shallow_iter" (lambda/lambda.ml[529,16112+2]..[529,16112+14])
              [
                <arg>
                Labelled "tail"
                  expression (lambda/lambda.ml[529,16112+21]..[529,16112+22])
                    Pexp_ident "f" (lambda/lambda.ml[529,16112+21]..[529,16112+22])
                <arg>
                Labelled "non_tail"
                  expression (lambda/lambda.ml[529,16112+33]..[529,16112+34])
                    Pexp_ident "f" (lambda/lambda.ml[529,16112+33]..[529,16112+34])
                <arg>
                Nolabel
                  expression (lambda/lambda.ml[529,16112+35]..[529,16112+36])
                    Pexp_ident "l" (lambda/lambda.ml[529,16112+35]..[529,16112+36])
              ]
    ]
  structure_item (lambda/lambda.ml[531,16150+0]..[609,18971+13])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/lambda.ml[531,16150+8]..[531,16150+22])
          Ppat_var "free_variables" (lambda/lambda.ml[531,16150+8]..[531,16150+22])
        expression (lambda/lambda.ml[531,16150+25]..[605,18834+22])
          Pexp_function
          [
            <case>
              pattern (lambda/lambda.ml[532,16184+4]..[533,16196+14])
                Ppat_or
                pattern (lambda/lambda.ml[532,16184+4]..[532,16184+11])
                  Ppat_construct "Lvar" (lambda/lambda.ml[532,16184+4]..[532,16184+8])
                  Some
                    []
                    pattern (lambda/lambda.ml[532,16184+9]..[532,16184+11])
                      Ppat_var "id" (lambda/lambda.ml[532,16184+9]..[532,16184+11])
                pattern (lambda/lambda.ml[533,16196+4]..[533,16196+14])
                  Ppat_construct "Lmutvar" (lambda/lambda.ml[533,16196+4]..[533,16196+11])
                  Some
                    []
                    pattern (lambda/lambda.ml[533,16196+12]..[533,16196+14])
                      Ppat_var "id" (lambda/lambda.ml[533,16196+12]..[533,16196+14])
              expression (lambda/lambda.ml[533,16196+18]..[533,16196+40])
                Pexp_apply
                expression (lambda/lambda.ml[533,16196+18]..[533,16196+37])
                  Pexp_ident "Ident.Set.singleton" (lambda/lambda.ml[533,16196+18]..[533,16196+37])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[533,16196+38]..[533,16196+40])
                      Pexp_ident "id" (lambda/lambda.ml[533,16196+38]..[533,16196+40])
                ]
            <case>
              pattern (lambda/lambda.ml[534,16237+4]..[534,16237+12])
                Ppat_construct "Lconst" (lambda/lambda.ml[534,16237+4]..[534,16237+10])
                Some
                  []
                  pattern (lambda/lambda.ml[534,16237+11]..[534,16237+12])
                    Ppat_any
              expression (lambda/lambda.ml[534,16237+16]..[534,16237+31])
                Pexp_ident "Ident.Set.empty" (lambda/lambda.ml[534,16237+16]..[534,16237+31])
            <case>
              pattern (lambda/lambda.ml[535,16269+4]..[535,16269+40])
                Ppat_construct "Lapply" (lambda/lambda.ml[535,16269+4]..[535,16269+10])
                Some
                  []
                  pattern (lambda/lambda.ml[535,16269+10]..[535,16269+40])
                    Ppat_record Closed
                    [
                      "ap_func" (lambda/lambda.ml[535,16269+11]..[535,16269+18])
                        pattern (lambda/lambda.ml[535,16269+21]..[535,16269+23])
                          Ppat_var "fn" (lambda/lambda.ml[535,16269+21]..[535,16269+23])
                      "ap_args" (lambda/lambda.ml[535,16269+25]..[535,16269+32])
                        pattern (lambda/lambda.ml[535,16269+35]..[535,16269+39])
                          Ppat_var "args" (lambda/lambda.ml[535,16269+35]..[535,16269+39])
                    ]
              expression (lambda/lambda.ml[536,16313+6]..[536,16313+50])
                Pexp_apply
                expression (lambda/lambda.ml[536,16313+6]..[536,16313+25])
                  Pexp_ident "free_variables_list" (lambda/lambda.ml[536,16313+6]..[536,16313+25])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[536,16313+26]..[536,16313+45])
                      Pexp_apply
                      expression (lambda/lambda.ml[536,16313+27]..[536,16313+41])
                        Pexp_ident "free_variables" (lambda/lambda.ml[536,16313+27]..[536,16313+41])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[536,16313+42]..[536,16313+44])
                            Pexp_ident "fn" (lambda/lambda.ml[536,16313+42]..[536,16313+44])
                      ]
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[536,16313+46]..[536,16313+50])
                      Pexp_ident "args" (lambda/lambda.ml[536,16313+46]..[536,16313+50])
                ]
            <case>
              pattern (lambda/lambda.ml[537,16364+4]..[537,16364+27])
                Ppat_construct "Lfunction" (lambda/lambda.ml[537,16364+4]..[537,16364+13])
                Some
                  []
                  pattern (lambda/lambda.ml[537,16364+13]..[537,16364+27])
                    Ppat_record Closed
                    [
                      "body" (lambda/lambda.ml[537,16364+14]..[537,16364+18]) ghost
                        pattern (lambda/lambda.ml[537,16364+14]..[537,16364+18])
                          Ppat_var "body" (lambda/lambda.ml[537,16364+14]..[537,16364+18])
                      "params" (lambda/lambda.ml[537,16364+20]..[537,16364+26]) ghost
                        pattern (lambda/lambda.ml[537,16364+20]..[537,16364+26])
                          Ppat_var "params" (lambda/lambda.ml[537,16364+20]..[537,16364+26])
                    ]
              expression (lambda/lambda.ml[538,16395+6]..[539,16438+49])
                Pexp_apply
                expression (lambda/lambda.ml[538,16395+6]..[538,16395+20])
                  Pexp_ident "Ident.Set.diff" (lambda/lambda.ml[538,16395+6]..[538,16395+20])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[538,16395+21]..[538,16395+42])
                      Pexp_apply
                      expression (lambda/lambda.ml[538,16395+22]..[538,16395+36])
                        Pexp_ident "free_variables" (lambda/lambda.ml[538,16395+22]..[538,16395+36])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[538,16395+37]..[538,16395+41])
                            Pexp_ident "body" (lambda/lambda.ml[538,16395+37]..[538,16395+41])
                      ]
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[539,16438+8]..[539,16438+49])
                      Pexp_apply
                      expression (lambda/lambda.ml[539,16438+9]..[539,16438+26])
                        Pexp_ident "Ident.Set.of_list" (lambda/lambda.ml[539,16438+9]..[539,16438+26])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[539,16438+27]..[539,16438+48])
                            Pexp_apply
                            expression (lambda/lambda.ml[539,16438+28]..[539,16438+36])
                              Pexp_ident "List.map" (lambda/lambda.ml[539,16438+28]..[539,16438+36])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[539,16438+37]..[539,16438+40])
                                  Pexp_ident "fst" (lambda/lambda.ml[539,16438+37]..[539,16438+40])
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[539,16438+41]..[539,16438+47])
                                  Pexp_ident "params" (lambda/lambda.ml[539,16438+41]..[539,16438+47])
                            ]
                      ]
                ]
            <case>
              pattern (lambda/lambda.ml[540,16488+4]..[541,16519+30])
                Ppat_or
                pattern (lambda/lambda.ml[540,16488+4]..[540,16488+30])
                  Ppat_construct "Llet" (lambda/lambda.ml[540,16488+4]..[540,16488+8])
                  Some
                    []
                    pattern (lambda/lambda.ml[540,16488+8]..[540,16488+30])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[540,16488+9]..[540,16488+10])
                          Ppat_any
                        pattern (lambda/lambda.ml[540,16488+12]..[540,16488+14])
                          Ppat_var "_k" (lambda/lambda.ml[540,16488+12]..[540,16488+14])
                        pattern (lambda/lambda.ml[540,16488+16]..[540,16488+18])
                          Ppat_var "id" (lambda/lambda.ml[540,16488+16]..[540,16488+18])
                        pattern (lambda/lambda.ml[540,16488+20]..[540,16488+23])
                          Ppat_var "arg" (lambda/lambda.ml[540,16488+20]..[540,16488+23])
                        pattern (lambda/lambda.ml[540,16488+25]..[540,16488+29])
                          Ppat_var "body" (lambda/lambda.ml[540,16488+25]..[540,16488+29])
                      ]
                pattern (lambda/lambda.ml[541,16519+4]..[541,16519+30])
                  Ppat_construct "Lmutlet" (lambda/lambda.ml[541,16519+4]..[541,16519+11])
                  Some
                    []
                    pattern (lambda/lambda.ml[541,16519+11]..[541,16519+30])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[541,16519+12]..[541,16519+14])
                          Ppat_var "_k" (lambda/lambda.ml[541,16519+12]..[541,16519+14])
                        pattern (lambda/lambda.ml[541,16519+16]..[541,16519+18])
                          Ppat_var "id" (lambda/lambda.ml[541,16519+16]..[541,16519+18])
                        pattern (lambda/lambda.ml[541,16519+20]..[541,16519+23])
                          Ppat_var "arg" (lambda/lambda.ml[541,16519+20]..[541,16519+23])
                        pattern (lambda/lambda.ml[541,16519+25]..[541,16519+29])
                          Ppat_var "body" (lambda/lambda.ml[541,16519+25]..[541,16519+29])
                      ]
              expression (lambda/lambda.ml[542,16553+6]..[544,16604+51])
                Pexp_apply
                expression (lambda/lambda.ml[542,16553+6]..[542,16553+21])
                  Pexp_ident "Ident.Set.union" (lambda/lambda.ml[542,16553+6]..[542,16553+21])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[543,16575+8]..[543,16575+28])
                      Pexp_apply
                      expression (lambda/lambda.ml[543,16575+9]..[543,16575+23])
                        Pexp_ident "free_variables" (lambda/lambda.ml[543,16575+9]..[543,16575+23])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[543,16575+24]..[543,16575+27])
                            Pexp_ident "arg" (lambda/lambda.ml[543,16575+24]..[543,16575+27])
                      ]
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[544,16604+8]..[544,16604+51])
                      Pexp_apply
                      expression (lambda/lambda.ml[544,16604+9]..[544,16604+25])
                        Pexp_ident "Ident.Set.remove" (lambda/lambda.ml[544,16604+9]..[544,16604+25])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[544,16604+26]..[544,16604+28])
                            Pexp_ident "id" (lambda/lambda.ml[544,16604+26]..[544,16604+28])
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[544,16604+29]..[544,16604+50])
                            Pexp_apply
                            expression (lambda/lambda.ml[544,16604+30]..[544,16604+44])
                              Pexp_ident "free_variables" (lambda/lambda.ml[544,16604+30]..[544,16604+44])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[544,16604+45]..[544,16604+49])
                                  Pexp_ident "body" (lambda/lambda.ml[544,16604+45]..[544,16604+49])
                            ]
                      ]
                ]
            <case>
              pattern (lambda/lambda.ml[545,16656+4]..[545,16656+23])
                Ppat_construct "Lletrec" (lambda/lambda.ml[545,16656+4]..[545,16656+11])
                Some
                  []
                  pattern (lambda/lambda.ml[545,16656+11]..[545,16656+23])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[545,16656+12]..[545,16656+16])
                        Ppat_var "decl" (lambda/lambda.ml[545,16656+12]..[545,16656+16])
                      pattern (lambda/lambda.ml[545,16656+18]..[545,16656+22])
                        Ppat_var "body" (lambda/lambda.ml[545,16656+18]..[545,16656+22])
                    ]
              expression (lambda/lambda.ml[546,16683+6]..[547,16764+64])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lambda/lambda.ml[546,16683+10]..[546,16683+13])
                      Ppat_var "set" (lambda/lambda.ml[546,16683+10]..[546,16683+13])
                    expression (lambda/lambda.ml[546,16683+16]..[546,16683+77])
                      Pexp_apply
                      expression (lambda/lambda.ml[546,16683+16]..[546,16683+35])
                        Pexp_ident "free_variables_list" (lambda/lambda.ml[546,16683+16]..[546,16683+35])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[546,16683+36]..[546,16683+57])
                            Pexp_apply
                            expression (lambda/lambda.ml[546,16683+37]..[546,16683+51])
                              Pexp_ident "free_variables" (lambda/lambda.ml[546,16683+37]..[546,16683+51])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[546,16683+52]..[546,16683+56])
                                  Pexp_ident "body" (lambda/lambda.ml[546,16683+52]..[546,16683+56])
                            ]
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[546,16683+58]..[546,16683+77])
                            Pexp_apply
                            expression (lambda/lambda.ml[546,16683+59]..[546,16683+67])
                              Pexp_ident "List.map" (lambda/lambda.ml[546,16683+59]..[546,16683+67])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[546,16683+68]..[546,16683+71])
                                  Pexp_ident "snd" (lambda/lambda.ml[546,16683+68]..[546,16683+71])
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[546,16683+72]..[546,16683+76])
                                  Pexp_ident "decl" (lambda/lambda.ml[546,16683+72]..[546,16683+76])
                            ]
                      ]
                ]
                expression (lambda/lambda.ml[547,16764+6]..[547,16764+64])
                  Pexp_apply
                  expression (lambda/lambda.ml[547,16764+6]..[547,16764+20])
                    Pexp_ident "Ident.Set.diff" (lambda/lambda.ml[547,16764+6]..[547,16764+20])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/lambda.ml[547,16764+21]..[547,16764+24])
                        Pexp_ident "set" (lambda/lambda.ml[547,16764+21]..[547,16764+24])
                    <arg>
                    Nolabel
                      expression (lambda/lambda.ml[547,16764+25]..[547,16764+64])
                        Pexp_apply
                        expression (lambda/lambda.ml[547,16764+26]..[547,16764+43])
                          Pexp_ident "Ident.Set.of_list" (lambda/lambda.ml[547,16764+26]..[547,16764+43])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[547,16764+44]..[547,16764+63])
                              Pexp_apply
                              expression (lambda/lambda.ml[547,16764+45]..[547,16764+53])
                                Pexp_ident "List.map" (lambda/lambda.ml[547,16764+45]..[547,16764+53])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/lambda.ml[547,16764+54]..[547,16764+57])
                                    Pexp_ident "fst" (lambda/lambda.ml[547,16764+54]..[547,16764+57])
                                <arg>
                                Nolabel
                                  expression (lambda/lambda.ml[547,16764+58]..[547,16764+62])
                                    Pexp_ident "decl" (lambda/lambda.ml[547,16764+58]..[547,16764+62])
                              ]
                        ]
                  ]
            <case>
              pattern (lambda/lambda.ml[548,16829+4]..[548,16829+25])
                Ppat_construct "Lprim" (lambda/lambda.ml[548,16829+4]..[548,16829+9])
                Some
                  []
                  pattern (lambda/lambda.ml[548,16829+9]..[548,16829+25])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[548,16829+10]..[548,16829+12])
                        Ppat_var "_p" (lambda/lambda.ml[548,16829+10]..[548,16829+12])
                      pattern (lambda/lambda.ml[548,16829+14]..[548,16829+18])
                        Ppat_var "args" (lambda/lambda.ml[548,16829+14]..[548,16829+18])
                      pattern (lambda/lambda.ml[548,16829+20]..[548,16829+24])
                        Ppat_var "_loc" (lambda/lambda.ml[548,16829+20]..[548,16829+24])
                    ]
              expression (lambda/lambda.ml[549,16858+6]..[549,16858+46])
                Pexp_apply
                expression (lambda/lambda.ml[549,16858+6]..[549,16858+25])
                  Pexp_ident "free_variables_list" (lambda/lambda.ml[549,16858+6]..[549,16858+25])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[549,16858+26]..[549,16858+41])
                      Pexp_ident "Ident.Set.empty" (lambda/lambda.ml[549,16858+26]..[549,16858+41])
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[549,16858+42]..[549,16858+46])
                      Pexp_ident "args" (lambda/lambda.ml[549,16858+42]..[549,16858+46])
                ]
            <case>
              pattern (lambda/lambda.ml[550,16905+4]..[550,16905+22])
                Ppat_construct "Lswitch" (lambda/lambda.ml[550,16905+4]..[550,16905+11])
                Some
                  []
                  pattern (lambda/lambda.ml[550,16905+11]..[550,16905+22])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[550,16905+12]..[550,16905+15])
                        Ppat_var "arg" (lambda/lambda.ml[550,16905+12]..[550,16905+15])
                      pattern (lambda/lambda.ml[550,16905+17]..[550,16905+19])
                        Ppat_var "sw" (lambda/lambda.ml[550,16905+17]..[550,16905+19])
                      pattern (lambda/lambda.ml[550,16905+20]..[550,16905+21])
                        Ppat_any
                    ]
              expression (lambda/lambda.ml[551,16931+6]..[560,17251+9])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lambda/lambda.ml[551,16931+10]..[551,16931+13])
                      Ppat_var "set" (lambda/lambda.ml[551,16931+10]..[551,16931+13])
                    expression (lambda/lambda.ml[552,16947+8]..[555,17069+37])
                      Pexp_apply
                      expression (lambda/lambda.ml[552,16947+8]..[552,16947+27])
                        Pexp_ident "free_variables_list" (lambda/lambda.ml[552,16947+8]..[552,16947+27])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[553,16975+10]..[554,17027+41])
                            Pexp_apply
                            expression (lambda/lambda.ml[553,16975+11]..[553,16975+30])
                              Pexp_ident "free_variables_list" (lambda/lambda.ml[553,16975+11]..[553,16975+30])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[553,16975+31]..[553,16975+51])
                                  Pexp_apply
                                  expression (lambda/lambda.ml[553,16975+32]..[553,16975+46])
                                    Pexp_ident "free_variables" (lambda/lambda.ml[553,16975+32]..[553,16975+46])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/lambda.ml[553,16975+47]..[553,16975+50])
                                        Pexp_ident "arg" (lambda/lambda.ml[553,16975+47]..[553,16975+50])
                                  ]
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[554,17027+13]..[554,17027+40])
                                  Pexp_apply
                                  expression (lambda/lambda.ml[554,17027+14]..[554,17027+22])
                                    Pexp_ident "List.map" (lambda/lambda.ml[554,17027+14]..[554,17027+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/lambda.ml[554,17027+23]..[554,17027+26])
                                        Pexp_ident "snd" (lambda/lambda.ml[554,17027+23]..[554,17027+26])
                                    <arg>
                                    Nolabel
                                      expression (lambda/lambda.ml[554,17027+27]..[554,17027+39])
                                        Pexp_field
                                        expression (lambda/lambda.ml[554,17027+27]..[554,17027+29])
                                          Pexp_ident "sw" (lambda/lambda.ml[554,17027+27]..[554,17027+29])
                                        "sw_consts" (lambda/lambda.ml[554,17027+30]..[554,17027+39])
                                  ]
                            ]
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[555,17069+10]..[555,17069+37])
                            Pexp_apply
                            expression (lambda/lambda.ml[555,17069+11]..[555,17069+19])
                              Pexp_ident "List.map" (lambda/lambda.ml[555,17069+11]..[555,17069+19])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[555,17069+20]..[555,17069+23])
                                  Pexp_ident "snd" (lambda/lambda.ml[555,17069+20]..[555,17069+23])
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[555,17069+24]..[555,17069+36])
                                  Pexp_field
                                  expression (lambda/lambda.ml[555,17069+24]..[555,17069+26])
                                    Pexp_ident "sw" (lambda/lambda.ml[555,17069+24]..[555,17069+26])
                                  "sw_blocks" (lambda/lambda.ml[555,17069+27]..[555,17069+36])
                            ]
                      ]
                ]
                expression (lambda/lambda.ml[557,17116+6]..[560,17251+9])
                  Pexp_match
                  expression (lambda/lambda.ml[557,17116+18]..[557,17116+34])
                    Pexp_field
                    expression (lambda/lambda.ml[557,17116+18]..[557,17116+20])
                      Pexp_ident "sw" (lambda/lambda.ml[557,17116+18]..[557,17116+20])
                    "sw_failaction" (lambda/lambda.ml[557,17116+21]..[557,17116+34])
                  [
                    <case>
                      pattern (lambda/lambda.ml[558,17156+8]..[558,17156+12])
                        Ppat_construct "None" (lambda/lambda.ml[558,17156+8]..[558,17156+12])
                        None
                      expression (lambda/lambda.ml[558,17156+16]..[558,17156+19])
                        Pexp_ident "set" (lambda/lambda.ml[558,17156+16]..[558,17156+19])
                    <case>
                      pattern (lambda/lambda.ml[559,17176+8]..[559,17176+23])
                        Ppat_construct "Some" (lambda/lambda.ml[559,17176+8]..[559,17176+12])
                        Some
                          []
                          pattern (lambda/lambda.ml[559,17176+13]..[559,17176+23])
                            Ppat_var "failaction" (lambda/lambda.ml[559,17176+13]..[559,17176+23])
                      expression (lambda/lambda.ml[559,17176+27]..[559,17176+74])
                        Pexp_apply
                        expression (lambda/lambda.ml[559,17176+27]..[559,17176+42])
                          Pexp_ident "Ident.Set.union" (lambda/lambda.ml[559,17176+27]..[559,17176+42])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[559,17176+43]..[559,17176+46])
                              Pexp_ident "set" (lambda/lambda.ml[559,17176+43]..[559,17176+46])
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[559,17176+47]..[559,17176+74])
                              Pexp_apply
                              expression (lambda/lambda.ml[559,17176+48]..[559,17176+62])
                                Pexp_ident "free_variables" (lambda/lambda.ml[559,17176+48]..[559,17176+62])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/lambda.ml[559,17176+63]..[559,17176+73])
                                    Pexp_ident "failaction" (lambda/lambda.ml[559,17176+63]..[559,17176+73])
                              ]
                        ]
                  ]
            <case>
              pattern (lambda/lambda.ml[561,17261+4]..[561,17261+39])
                Ppat_construct "Lstringswitch" (lambda/lambda.ml[561,17261+4]..[561,17261+17])
                Some
                  []
                  pattern (lambda/lambda.ml[561,17261+18]..[561,17261+39])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[561,17261+19]..[561,17261+22])
                        Ppat_var "arg" (lambda/lambda.ml[561,17261+19]..[561,17261+22])
                      pattern (lambda/lambda.ml[561,17261+23]..[561,17261+28])
                        Ppat_var "cases" (lambda/lambda.ml[561,17261+23]..[561,17261+28])
                      pattern (lambda/lambda.ml[561,17261+29]..[561,17261+36])
                        Ppat_var "default" (lambda/lambda.ml[561,17261+29]..[561,17261+36])
                      pattern (lambda/lambda.ml[561,17261+37]..[561,17261+38])
                        Ppat_any
                    ]
              expression (lambda/lambda.ml[562,17304+6]..[569,17529+9])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lambda/lambda.ml[562,17304+10]..[562,17304+13])
                      Ppat_var "set" (lambda/lambda.ml[562,17304+10]..[562,17304+13])
                    expression (lambda/lambda.ml[563,17320+8]..[564,17369+30])
                      Pexp_apply
                      expression (lambda/lambda.ml[563,17320+8]..[563,17320+27])
                        Pexp_ident "free_variables_list" (lambda/lambda.ml[563,17320+8]..[563,17320+27])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[563,17320+28]..[563,17320+48])
                            Pexp_apply
                            expression (lambda/lambda.ml[563,17320+29]..[563,17320+43])
                              Pexp_ident "free_variables" (lambda/lambda.ml[563,17320+29]..[563,17320+43])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[563,17320+44]..[563,17320+47])
                                  Pexp_ident "arg" (lambda/lambda.ml[563,17320+44]..[563,17320+47])
                            ]
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[564,17369+10]..[564,17369+30])
                            Pexp_apply
                            expression (lambda/lambda.ml[564,17369+11]..[564,17369+19])
                              Pexp_ident "List.map" (lambda/lambda.ml[564,17369+11]..[564,17369+19])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[564,17369+20]..[564,17369+23])
                                  Pexp_ident "snd" (lambda/lambda.ml[564,17369+20]..[564,17369+23])
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[564,17369+24]..[564,17369+29])
                                  Pexp_ident "cases" (lambda/lambda.ml[564,17369+24]..[564,17369+29])
                            ]
                      ]
                ]
                expression (lambda/lambda.ml[566,17409+6]..[569,17529+9])
                  Pexp_match
                  expression (lambda/lambda.ml[566,17409+18]..[566,17409+25])
                    Pexp_ident "default" (lambda/lambda.ml[566,17409+18]..[566,17409+25])
                  [
                    <case>
                      pattern (lambda/lambda.ml[567,17440+8]..[567,17440+12])
                        Ppat_construct "None" (lambda/lambda.ml[567,17440+8]..[567,17440+12])
                        None
                      expression (lambda/lambda.ml[567,17440+16]..[567,17440+19])
                        Pexp_ident "set" (lambda/lambda.ml[567,17440+16]..[567,17440+19])
                    <case>
                      pattern (lambda/lambda.ml[568,17460+8]..[568,17460+20])
                        Ppat_construct "Some" (lambda/lambda.ml[568,17460+8]..[568,17460+12])
                        Some
                          []
                          pattern (lambda/lambda.ml[568,17460+13]..[568,17460+20])
                            Ppat_var "default" (lambda/lambda.ml[568,17460+13]..[568,17460+20])
                      expression (lambda/lambda.ml[568,17460+24]..[568,17460+68])
                        Pexp_apply
                        expression (lambda/lambda.ml[568,17460+24]..[568,17460+39])
                          Pexp_ident "Ident.Set.union" (lambda/lambda.ml[568,17460+24]..[568,17460+39])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[568,17460+40]..[568,17460+43])
                              Pexp_ident "set" (lambda/lambda.ml[568,17460+40]..[568,17460+43])
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[568,17460+44]..[568,17460+68])
                              Pexp_apply
                              expression (lambda/lambda.ml[568,17460+45]..[568,17460+59])
                                Pexp_ident "free_variables" (lambda/lambda.ml[568,17460+45]..[568,17460+59])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/lambda.ml[568,17460+60]..[568,17460+67])
                                    Pexp_ident "default" (lambda/lambda.ml[568,17460+60]..[568,17460+67])
                              ]
                        ]
                  ]
            <case>
              pattern (lambda/lambda.ml[570,17539+4]..[570,17539+25])
                Ppat_construct "Lstaticraise" (lambda/lambda.ml[570,17539+4]..[570,17539+16])
                Some
                  []
                  pattern (lambda/lambda.ml[570,17539+17]..[570,17539+25])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[570,17539+18]..[570,17539+19])
                        Ppat_any
                      pattern (lambda/lambda.ml[570,17539+20]..[570,17539+24])
                        Ppat_var "args" (lambda/lambda.ml[570,17539+20]..[570,17539+24])
                    ]
              expression (lambda/lambda.ml[571,17568+6]..[571,17568+46])
                Pexp_apply
                expression (lambda/lambda.ml[571,17568+6]..[571,17568+25])
                  Pexp_ident "free_variables_list" (lambda/lambda.ml[571,17568+6]..[571,17568+25])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[571,17568+26]..[571,17568+41])
                      Pexp_ident "Ident.Set.empty" (lambda/lambda.ml[571,17568+26]..[571,17568+41])
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[571,17568+42]..[571,17568+46])
                      Pexp_ident "args" (lambda/lambda.ml[571,17568+42]..[571,17568+46])
                ]
            <case>
              pattern (lambda/lambda.ml[572,17615+4]..[572,17615+44])
                Ppat_construct "Lstaticcatch" (lambda/lambda.ml[572,17615+4]..[572,17615+16])
                Some
                  []
                  pattern (lambda/lambda.ml[572,17615+16]..[572,17615+44])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[572,17615+17]..[572,17615+21])
                        Ppat_var "body" (lambda/lambda.ml[572,17615+17]..[572,17615+21])
                      pattern (lambda/lambda.ml[572,17615+23]..[572,17615+34])
                        Ppat_tuple
                        [
                          pattern (lambda/lambda.ml[572,17615+24]..[572,17615+25])
                            Ppat_any
                          pattern (lambda/lambda.ml[572,17615+27]..[572,17615+33])
                            Ppat_var "params" (lambda/lambda.ml[572,17615+27]..[572,17615+33])
                        ]
                      pattern (lambda/lambda.ml[572,17615+36]..[572,17615+43])
                        Ppat_var "handler" (lambda/lambda.ml[572,17615+36]..[572,17615+43])
                    ]
              expression (lambda/lambda.ml[573,17663+6]..[577,17799+29])
                Pexp_apply
                expression (lambda/lambda.ml[573,17663+6]..[573,17663+21])
                  Pexp_ident "Ident.Set.union" (lambda/lambda.ml[573,17663+6]..[573,17663+21])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[574,17685+8]..[576,17745+53])
                      Pexp_apply
                      expression (lambda/lambda.ml[574,17685+9]..[574,17685+23])
                        Pexp_ident "Ident.Set.diff" (lambda/lambda.ml[574,17685+9]..[574,17685+23])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[575,17709+11]..[575,17709+35])
                            Pexp_apply
                            expression (lambda/lambda.ml[575,17709+12]..[575,17709+26])
                              Pexp_ident "free_variables" (lambda/lambda.ml[575,17709+12]..[575,17709+26])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[575,17709+27]..[575,17709+34])
                                  Pexp_ident "handler" (lambda/lambda.ml[575,17709+27]..[575,17709+34])
                            ]
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[576,17745+11]..[576,17745+52])
                            Pexp_apply
                            expression (lambda/lambda.ml[576,17745+12]..[576,17745+29])
                              Pexp_ident "Ident.Set.of_list" (lambda/lambda.ml[576,17745+12]..[576,17745+29])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[576,17745+30]..[576,17745+51])
                                  Pexp_apply
                                  expression (lambda/lambda.ml[576,17745+31]..[576,17745+39])
                                    Pexp_ident "List.map" (lambda/lambda.ml[576,17745+31]..[576,17745+39])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/lambda.ml[576,17745+40]..[576,17745+43])
                                        Pexp_ident "fst" (lambda/lambda.ml[576,17745+40]..[576,17745+43])
                                    <arg>
                                    Nolabel
                                      expression (lambda/lambda.ml[576,17745+44]..[576,17745+50])
                                        Pexp_ident "params" (lambda/lambda.ml[576,17745+44]..[576,17745+50])
                                  ]
                            ]
                      ]
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[577,17799+8]..[577,17799+29])
                      Pexp_apply
                      expression (lambda/lambda.ml[577,17799+9]..[577,17799+23])
                        Pexp_ident "free_variables" (lambda/lambda.ml[577,17799+9]..[577,17799+23])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[577,17799+24]..[577,17799+28])
                            Pexp_ident "body" (lambda/lambda.ml[577,17799+24]..[577,17799+28])
                      ]
                ]
            <case>
              pattern (lambda/lambda.ml[578,17829+4]..[578,17829+34])
                Ppat_construct "Ltrywith" (lambda/lambda.ml[578,17829+4]..[578,17829+12])
                Some
                  []
                  pattern (lambda/lambda.ml[578,17829+12]..[578,17829+34])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[578,17829+13]..[578,17829+17])
                        Ppat_var "body" (lambda/lambda.ml[578,17829+13]..[578,17829+17])
                      pattern (lambda/lambda.ml[578,17829+19]..[578,17829+24])
                        Ppat_var "param" (lambda/lambda.ml[578,17829+19]..[578,17829+24])
                      pattern (lambda/lambda.ml[578,17829+26]..[578,17829+33])
                        Ppat_var "handler" (lambda/lambda.ml[578,17829+26]..[578,17829+33])
                    ]
              expression (lambda/lambda.ml[579,17867+6]..[583,17969+29])
                Pexp_apply
                expression (lambda/lambda.ml[579,17867+6]..[579,17867+21])
                  Pexp_ident "Ident.Set.union" (lambda/lambda.ml[579,17867+6]..[579,17867+21])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[580,17889+8]..[582,17932+36])
                      Pexp_apply
                      expression (lambda/lambda.ml[580,17889+9]..[580,17889+25])
                        Pexp_ident "Ident.Set.remove" (lambda/lambda.ml[580,17889+9]..[580,17889+25])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[581,17915+11]..[581,17915+16])
                            Pexp_ident "param" (lambda/lambda.ml[581,17915+11]..[581,17915+16])
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[582,17932+11]..[582,17932+35])
                            Pexp_apply
                            expression (lambda/lambda.ml[582,17932+12]..[582,17932+26])
                              Pexp_ident "free_variables" (lambda/lambda.ml[582,17932+12]..[582,17932+26])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[582,17932+27]..[582,17932+34])
                                  Pexp_ident "handler" (lambda/lambda.ml[582,17932+27]..[582,17932+34])
                            ]
                      ]
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[583,17969+8]..[583,17969+29])
                      Pexp_apply
                      expression (lambda/lambda.ml[583,17969+9]..[583,17969+23])
                        Pexp_ident "free_variables" (lambda/lambda.ml[583,17969+9]..[583,17969+23])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[583,17969+24]..[583,17969+28])
                            Pexp_ident "body" (lambda/lambda.ml[583,17969+24]..[583,17969+28])
                      ]
                ]
            <case>
              pattern (lambda/lambda.ml[584,17999+4]..[584,17999+27])
                Ppat_construct "Lifthenelse" (lambda/lambda.ml[584,17999+4]..[584,17999+15])
                Some
                  []
                  pattern (lambda/lambda.ml[584,17999+15]..[584,17999+27])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[584,17999+16]..[584,17999+18])
                        Ppat_var "e1" (lambda/lambda.ml[584,17999+16]..[584,17999+18])
                      pattern (lambda/lambda.ml[584,17999+20]..[584,17999+22])
                        Ppat_var "e2" (lambda/lambda.ml[584,17999+20]..[584,17999+22])
                      pattern (lambda/lambda.ml[584,17999+24]..[584,17999+26])
                        Ppat_var "e3" (lambda/lambda.ml[584,17999+24]..[584,17999+26])
                    ]
              expression (lambda/lambda.ml[585,18030+6]..[587,18118+27])
                Pexp_apply
                expression (lambda/lambda.ml[585,18030+6]..[585,18030+21])
                  Pexp_ident "Ident.Set.union" (lambda/lambda.ml[585,18030+6]..[585,18030+21])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[586,18052+8]..[586,18052+65])
                      Pexp_apply
                      expression (lambda/lambda.ml[586,18052+9]..[586,18052+24])
                        Pexp_ident "Ident.Set.union" (lambda/lambda.ml[586,18052+9]..[586,18052+24])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[586,18052+25]..[586,18052+44])
                            Pexp_apply
                            expression (lambda/lambda.ml[586,18052+26]..[586,18052+40])
                              Pexp_ident "free_variables" (lambda/lambda.ml[586,18052+26]..[586,18052+40])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[586,18052+41]..[586,18052+43])
                                  Pexp_ident "e1" (lambda/lambda.ml[586,18052+41]..[586,18052+43])
                            ]
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[586,18052+45]..[586,18052+64])
                            Pexp_apply
                            expression (lambda/lambda.ml[586,18052+46]..[586,18052+60])
                              Pexp_ident "free_variables" (lambda/lambda.ml[586,18052+46]..[586,18052+60])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[586,18052+61]..[586,18052+63])
                                  Pexp_ident "e2" (lambda/lambda.ml[586,18052+61]..[586,18052+63])
                            ]
                      ]
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[587,18118+8]..[587,18118+27])
                      Pexp_apply
                      expression (lambda/lambda.ml[587,18118+9]..[587,18118+23])
                        Pexp_ident "free_variables" (lambda/lambda.ml[587,18118+9]..[587,18118+23])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[587,18118+24]..[587,18118+26])
                            Pexp_ident "e3" (lambda/lambda.ml[587,18118+24]..[587,18118+26])
                      ]
                ]
            <case>
              pattern (lambda/lambda.ml[588,18146+4]..[588,18146+21])
                Ppat_construct "Lsequence" (lambda/lambda.ml[588,18146+4]..[588,18146+13])
                Some
                  []
                  pattern (lambda/lambda.ml[588,18146+13]..[588,18146+21])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[588,18146+14]..[588,18146+16])
                        Ppat_var "e1" (lambda/lambda.ml[588,18146+14]..[588,18146+16])
                      pattern (lambda/lambda.ml[588,18146+18]..[588,18146+20])
                        Ppat_var "e2" (lambda/lambda.ml[588,18146+18]..[588,18146+20])
                    ]
              expression (lambda/lambda.ml[589,18171+6]..[589,18171+61])
                Pexp_apply
                expression (lambda/lambda.ml[589,18171+6]..[589,18171+21])
                  Pexp_ident "Ident.Set.union" (lambda/lambda.ml[589,18171+6]..[589,18171+21])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[589,18171+22]..[589,18171+41])
                      Pexp_apply
                      expression (lambda/lambda.ml[589,18171+23]..[589,18171+37])
                        Pexp_ident "free_variables" (lambda/lambda.ml[589,18171+23]..[589,18171+37])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[589,18171+38]..[589,18171+40])
                            Pexp_ident "e1" (lambda/lambda.ml[589,18171+38]..[589,18171+40])
                      ]
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[589,18171+42]..[589,18171+61])
                      Pexp_apply
                      expression (lambda/lambda.ml[589,18171+43]..[589,18171+57])
                        Pexp_ident "free_variables" (lambda/lambda.ml[589,18171+43]..[589,18171+57])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[589,18171+58]..[589,18171+60])
                            Pexp_ident "e2" (lambda/lambda.ml[589,18171+58]..[589,18171+60])
                      ]
                ]
            <case>
              pattern (lambda/lambda.ml[590,18233+4]..[590,18233+18])
                Ppat_construct "Lwhile" (lambda/lambda.ml[590,18233+4]..[590,18233+10])
                Some
                  []
                  pattern (lambda/lambda.ml[590,18233+10]..[590,18233+18])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[590,18233+11]..[590,18233+13])
                        Ppat_var "e1" (lambda/lambda.ml[590,18233+11]..[590,18233+13])
                      pattern (lambda/lambda.ml[590,18233+15]..[590,18233+17])
                        Ppat_var "e2" (lambda/lambda.ml[590,18233+15]..[590,18233+17])
                    ]
              expression (lambda/lambda.ml[591,18255+6]..[591,18255+61])
                Pexp_apply
                expression (lambda/lambda.ml[591,18255+6]..[591,18255+21])
                  Pexp_ident "Ident.Set.union" (lambda/lambda.ml[591,18255+6]..[591,18255+21])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[591,18255+22]..[591,18255+41])
                      Pexp_apply
                      expression (lambda/lambda.ml[591,18255+23]..[591,18255+37])
                        Pexp_ident "free_variables" (lambda/lambda.ml[591,18255+23]..[591,18255+37])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[591,18255+38]..[591,18255+40])
                            Pexp_ident "e1" (lambda/lambda.ml[591,18255+38]..[591,18255+40])
                      ]
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[591,18255+42]..[591,18255+61])
                      Pexp_apply
                      expression (lambda/lambda.ml[591,18255+43]..[591,18255+57])
                        Pexp_ident "free_variables" (lambda/lambda.ml[591,18255+43]..[591,18255+57])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[591,18255+58]..[591,18255+60])
                            Pexp_ident "e2" (lambda/lambda.ml[591,18255+58]..[591,18255+60])
                      ]
                ]
            <case>
              pattern (lambda/lambda.ml[592,18317+4]..[592,18317+31])
                Ppat_construct "Lfor" (lambda/lambda.ml[592,18317+4]..[592,18317+8])
                Some
                  []
                  pattern (lambda/lambda.ml[592,18317+8]..[592,18317+31])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[592,18317+9]..[592,18317+10])
                        Ppat_var "v" (lambda/lambda.ml[592,18317+9]..[592,18317+10])
                      pattern (lambda/lambda.ml[592,18317+12]..[592,18317+14])
                        Ppat_var "lo" (lambda/lambda.ml[592,18317+12]..[592,18317+14])
                      pattern (lambda/lambda.ml[592,18317+16]..[592,18317+18])
                        Ppat_var "hi" (lambda/lambda.ml[592,18317+16]..[592,18317+18])
                      pattern (lambda/lambda.ml[592,18317+20]..[592,18317+24])
                        Ppat_var "_dir" (lambda/lambda.ml[592,18317+20]..[592,18317+24])
                      pattern (lambda/lambda.ml[592,18317+26]..[592,18317+30])
                        Ppat_var "body" (lambda/lambda.ml[592,18317+26]..[592,18317+30])
                    ]
              expression (lambda/lambda.ml[593,18352+6]..[594,18427+68])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lambda/lambda.ml[593,18352+10]..[593,18352+13])
                      Ppat_var "set" (lambda/lambda.ml[593,18352+10]..[593,18352+13])
                    expression (lambda/lambda.ml[593,18352+16]..[593,18352+71])
                      Pexp_apply
                      expression (lambda/lambda.ml[593,18352+16]..[593,18352+31])
                        Pexp_ident "Ident.Set.union" (lambda/lambda.ml[593,18352+16]..[593,18352+31])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[593,18352+32]..[593,18352+51])
                            Pexp_apply
                            expression (lambda/lambda.ml[593,18352+33]..[593,18352+47])
                              Pexp_ident "free_variables" (lambda/lambda.ml[593,18352+33]..[593,18352+47])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[593,18352+48]..[593,18352+50])
                                  Pexp_ident "lo" (lambda/lambda.ml[593,18352+48]..[593,18352+50])
                            ]
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[593,18352+52]..[593,18352+71])
                            Pexp_apply
                            expression (lambda/lambda.ml[593,18352+53]..[593,18352+67])
                              Pexp_ident "free_variables" (lambda/lambda.ml[593,18352+53]..[593,18352+67])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[593,18352+68]..[593,18352+70])
                                  Pexp_ident "hi" (lambda/lambda.ml[593,18352+68]..[593,18352+70])
                            ]
                      ]
                ]
                expression (lambda/lambda.ml[594,18427+6]..[594,18427+68])
                  Pexp_apply
                  expression (lambda/lambda.ml[594,18427+6]..[594,18427+21])
                    Pexp_ident "Ident.Set.union" (lambda/lambda.ml[594,18427+6]..[594,18427+21])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/lambda.ml[594,18427+22]..[594,18427+25])
                        Pexp_ident "set" (lambda/lambda.ml[594,18427+22]..[594,18427+25])
                    <arg>
                    Nolabel
                      expression (lambda/lambda.ml[594,18427+26]..[594,18427+68])
                        Pexp_apply
                        expression (lambda/lambda.ml[594,18427+27]..[594,18427+43])
                          Pexp_ident "Ident.Set.remove" (lambda/lambda.ml[594,18427+27]..[594,18427+43])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[594,18427+44]..[594,18427+45])
                              Pexp_ident "v" (lambda/lambda.ml[594,18427+44]..[594,18427+45])
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[594,18427+46]..[594,18427+67])
                              Pexp_apply
                              expression (lambda/lambda.ml[594,18427+47]..[594,18427+61])
                                Pexp_ident "free_variables" (lambda/lambda.ml[594,18427+47]..[594,18427+61])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/lambda.ml[594,18427+62]..[594,18427+66])
                                    Pexp_ident "body" (lambda/lambda.ml[594,18427+62]..[594,18427+66])
                              ]
                        ]
                  ]
            <case>
              pattern (lambda/lambda.ml[595,18496+4]..[595,18496+18])
                Ppat_construct "Lassign" (lambda/lambda.ml[595,18496+4]..[595,18496+11])
                Some
                  []
                  pattern (lambda/lambda.ml[595,18496+11]..[595,18496+18])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[595,18496+12]..[595,18496+14])
                        Ppat_var "id" (lambda/lambda.ml[595,18496+12]..[595,18496+14])
                      pattern (lambda/lambda.ml[595,18496+16]..[595,18496+17])
                        Ppat_var "e" (lambda/lambda.ml[595,18496+16]..[595,18496+17])
                    ]
              expression (lambda/lambda.ml[596,18518+6]..[596,18518+41])
                Pexp_apply
                expression (lambda/lambda.ml[596,18518+6]..[596,18518+19])
                  Pexp_ident "Ident.Set.add" (lambda/lambda.ml[596,18518+6]..[596,18518+19])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[596,18518+20]..[596,18518+22])
                      Pexp_ident "id" (lambda/lambda.ml[596,18518+20]..[596,18518+22])
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[596,18518+23]..[596,18518+41])
                      Pexp_apply
                      expression (lambda/lambda.ml[596,18518+24]..[596,18518+38])
                        Pexp_ident "free_variables" (lambda/lambda.ml[596,18518+24]..[596,18518+38])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[596,18518+39]..[596,18518+40])
                            Pexp_ident "e" (lambda/lambda.ml[596,18518+39]..[596,18518+40])
                      ]
                ]
            <case>
              pattern (lambda/lambda.ml[597,18560+4]..[597,18560+33])
                Ppat_construct "Lsend" (lambda/lambda.ml[597,18560+4]..[597,18560+9])
                Some
                  []
                  pattern (lambda/lambda.ml[597,18560+10]..[597,18560+33])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[597,18560+11]..[597,18560+13])
                        Ppat_var "_k" (lambda/lambda.ml[597,18560+11]..[597,18560+13])
                      pattern (lambda/lambda.ml[597,18560+15]..[597,18560+18])
                        Ppat_var "met" (lambda/lambda.ml[597,18560+15]..[597,18560+18])
                      pattern (lambda/lambda.ml[597,18560+20]..[597,18560+23])
                        Ppat_var "obj" (lambda/lambda.ml[597,18560+20]..[597,18560+23])
                      pattern (lambda/lambda.ml[597,18560+25]..[597,18560+29])
                        Ppat_var "args" (lambda/lambda.ml[597,18560+25]..[597,18560+29])
                      pattern (lambda/lambda.ml[597,18560+31]..[597,18560+32])
                        Ppat_any
                    ]
              expression (lambda/lambda.ml[598,18597+6]..[600,18691+12])
                Pexp_apply
                expression (lambda/lambda.ml[598,18597+6]..[598,18597+25])
                  Pexp_ident "free_variables_list" (lambda/lambda.ml[598,18597+6]..[598,18597+25])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[599,18623+8]..[599,18623+67])
                      Pexp_apply
                      expression (lambda/lambda.ml[599,18623+9]..[599,18623+24])
                        Pexp_ident "Ident.Set.union" (lambda/lambda.ml[599,18623+9]..[599,18623+24])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[599,18623+25]..[599,18623+45])
                            Pexp_apply
                            expression (lambda/lambda.ml[599,18623+26]..[599,18623+40])
                              Pexp_ident "free_variables" (lambda/lambda.ml[599,18623+26]..[599,18623+40])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[599,18623+41]..[599,18623+44])
                                  Pexp_ident "met" (lambda/lambda.ml[599,18623+41]..[599,18623+44])
                            ]
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[599,18623+46]..[599,18623+66])
                            Pexp_apply
                            expression (lambda/lambda.ml[599,18623+47]..[599,18623+61])
                              Pexp_ident "free_variables" (lambda/lambda.ml[599,18623+47]..[599,18623+61])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[599,18623+62]..[599,18623+65])
                                  Pexp_ident "obj" (lambda/lambda.ml[599,18623+62]..[599,18623+65])
                            ]
                      ]
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[600,18691+8]..[600,18691+12])
                      Pexp_ident "args" (lambda/lambda.ml[600,18691+8]..[600,18691+12])
                ]
            <case>
              pattern (lambda/lambda.ml[601,18704+4]..[601,18704+22])
                Ppat_construct "Levent" (lambda/lambda.ml[601,18704+4]..[601,18704+10])
                Some
                  []
                  pattern (lambda/lambda.ml[601,18704+11]..[601,18704+22])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[601,18704+12]..[601,18704+15])
                        Ppat_var "lam" (lambda/lambda.ml[601,18704+12]..[601,18704+15])
                      pattern (lambda/lambda.ml[601,18704+17]..[601,18704+21])
                        Ppat_var "_evt" (lambda/lambda.ml[601,18704+17]..[601,18704+21])
                    ]
              expression (lambda/lambda.ml[602,18730+6]..[602,18730+24])
                Pexp_apply
                expression (lambda/lambda.ml[602,18730+6]..[602,18730+20])
                  Pexp_ident "free_variables" (lambda/lambda.ml[602,18730+6]..[602,18730+20])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[602,18730+21]..[602,18730+24])
                      Pexp_ident "lam" (lambda/lambda.ml[602,18730+21]..[602,18730+24])
                ]
            <case>
              pattern (lambda/lambda.ml[603,18755+4]..[603,18755+19])
                Ppat_construct "Lifused" (lambda/lambda.ml[603,18755+4]..[603,18755+11])
                Some
                  []
                  pattern (lambda/lambda.ml[603,18755+12]..[603,18755+19])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[603,18755+13]..[603,18755+15])
                        Ppat_var "_v" (lambda/lambda.ml[603,18755+13]..[603,18755+15])
                      pattern (lambda/lambda.ml[603,18755+17]..[603,18755+18])
                        Ppat_var "e" (lambda/lambda.ml[603,18755+17]..[603,18755+18])
                    ]
              expression (lambda/lambda.ml[605,18834+6]..[605,18834+22])
                Pexp_apply
                expression (lambda/lambda.ml[605,18834+6]..[605,18834+20])
                  Pexp_ident "free_variables" (lambda/lambda.ml[605,18834+6]..[605,18834+20])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[605,18834+21]..[605,18834+22])
                      Pexp_ident "e" (lambda/lambda.ml[605,18834+21]..[605,18834+22])
                ]
          ]
      <def>
        pattern (lambda/lambda.ml[607,18858+4]..[607,18858+23])
          Ppat_var "free_variables_list" (lambda/lambda.ml[607,18858+4]..[607,18858+23])
        expression (lambda/lambda.ml[607,18858+24]..[609,18971+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[607,18858+24]..[607,18858+27])
            Ppat_var "set" (lambda/lambda.ml[607,18858+24]..[607,18858+27])
          expression (lambda/lambda.ml[607,18858+28]..[609,18971+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[607,18858+28]..[607,18858+33])
              Ppat_var "exprs" (lambda/lambda.ml[607,18858+28]..[607,18858+33])
            expression (lambda/lambda.ml[608,18894+2]..[609,18971+13])
              Pexp_apply
              expression (lambda/lambda.ml[608,18894+2]..[608,18894+16])
                Pexp_ident "List.fold_left" (lambda/lambda.ml[608,18894+2]..[608,18894+16])
              [
                <arg>
                Nolabel
                  expression (lambda/lambda.ml[608,18894+17]..[608,18894+76])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/lambda.ml[608,18894+22]..[608,18894+25])
                      Ppat_var "set" (lambda/lambda.ml[608,18894+22]..[608,18894+25])
                    expression (lambda/lambda.ml[608,18894+26]..[608,18894+75]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/lambda.ml[608,18894+26]..[608,18894+30])
                        Ppat_var "expr" (lambda/lambda.ml[608,18894+26]..[608,18894+30])
                      expression (lambda/lambda.ml[608,18894+34]..[608,18894+75])
                        Pexp_apply
                        expression (lambda/lambda.ml[608,18894+34]..[608,18894+49])
                          Pexp_ident "Ident.Set.union" (lambda/lambda.ml[608,18894+34]..[608,18894+49])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[608,18894+50]..[608,18894+71])
                              Pexp_apply
                              expression (lambda/lambda.ml[608,18894+51]..[608,18894+65])
                                Pexp_ident "free_variables" (lambda/lambda.ml[608,18894+51]..[608,18894+65])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/lambda.ml[608,18894+66]..[608,18894+70])
                                    Pexp_ident "expr" (lambda/lambda.ml[608,18894+66]..[608,18894+70])
                              ]
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[608,18894+72]..[608,18894+75])
                              Pexp_ident "set" (lambda/lambda.ml[608,18894+72]..[608,18894+75])
                        ]
                <arg>
                Nolabel
                  expression (lambda/lambda.ml[609,18971+4]..[609,18971+7])
                    Pexp_ident "set" (lambda/lambda.ml[609,18971+4]..[609,18971+7])
                <arg>
                Nolabel
                  expression (lambda/lambda.ml[609,18971+8]..[609,18971+13])
                    Pexp_ident "exprs" (lambda/lambda.ml[609,18971+8]..[609,18971+13])
              ]
    ]
  structure_item (lambda/lambda.ml[612,19030+0]..[612,19030+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[612,19030+4]..[612,19030+15])
          Ppat_var "raise_count" (lambda/lambda.ml[612,19030+4]..[612,19030+15])
        expression (lambda/lambda.ml[612,19030+18]..[612,19030+23])
          Pexp_apply
          expression (lambda/lambda.ml[612,19030+18]..[612,19030+21])
            Pexp_ident "ref" (lambda/lambda.ml[612,19030+18]..[612,19030+21])
          [
            <arg>
            Nolabel
              expression (lambda/lambda.ml[612,19030+22]..[612,19030+23])
                Pexp_constant PConst_int (0,None)
          ]
    ]
  structure_item (lambda/lambda.ml[614,19055+0]..[616,19102+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[614,19055+4]..[614,19055+20])
          Ppat_var "next_raise_count" (lambda/lambda.ml[614,19055+4]..[614,19055+20])
        expression (lambda/lambda.ml[614,19055+21]..[616,19102+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[614,19055+21]..[614,19055+23])
            Ppat_construct "()" (lambda/lambda.ml[614,19055+21]..[614,19055+23])
            None
          expression (lambda/lambda.ml[615,19081+2]..[616,19102+14])
            Pexp_sequence
            expression (lambda/lambda.ml[615,19081+2]..[615,19081+18])
              Pexp_apply
              expression (lambda/lambda.ml[615,19081+2]..[615,19081+6])
                Pexp_ident "incr" (lambda/lambda.ml[615,19081+2]..[615,19081+6])
              [
                <arg>
                Nolabel
                  expression (lambda/lambda.ml[615,19081+7]..[615,19081+18])
                    Pexp_ident "raise_count" (lambda/lambda.ml[615,19081+7]..[615,19081+18])
              ]
            expression (lambda/lambda.ml[616,19102+2]..[616,19102+14])
              Pexp_apply
              expression (lambda/lambda.ml[616,19102+2]..[616,19102+3])
                Pexp_ident "!" (lambda/lambda.ml[616,19102+2]..[616,19102+3])
              [
                <arg>
                Nolabel
                  expression (lambda/lambda.ml[616,19102+3]..[616,19102+14])
                    Pexp_ident "raise_count" (lambda/lambda.ml[616,19102+3]..[616,19102+14])
              ]
    ]
  structure_item (lambda/lambda.ml[619,19160+0]..[619,19160+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[619,19160+4]..[619,19160+14])
          Ppat_var "staticfail" (lambda/lambda.ml[619,19160+4]..[619,19160+14])
        expression (lambda/lambda.ml[619,19160+17]..[619,19160+36])
          Pexp_construct "Lstaticraise" (lambda/lambda.ml[619,19160+17]..[619,19160+29])
          Some
            expression (lambda/lambda.ml[619,19160+30]..[619,19160+36])
              Pexp_tuple
              [
                expression (lambda/lambda.ml[619,19160+31]..[619,19160+32])
                  Pexp_constant PConst_int (0,None)
                expression (lambda/lambda.ml[619,19160+33]..[619,19160+35])
                  Pexp_construct "[]" (lambda/lambda.ml[619,19160+33]..[619,19160+35])
                  None
              ]
    ]
  structure_item (lambda/lambda.ml[621,19198+0]..[625,19381+14])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/lambda.ml[621,19198+8]..[621,19198+18])
          Ppat_var "is_guarded" (lambda/lambda.ml[621,19198+8]..[621,19198+18])
        expression (lambda/lambda.ml[621,19198+21]..[625,19381+14])
          Pexp_function
          [
            <case>
              pattern (lambda/lambda.ml[622,19228+4]..[622,19228+50])
                Ppat_construct "Lifthenelse" (lambda/lambda.ml[622,19228+4]..[622,19228+15])
                Some
                  []
                  pattern (lambda/lambda.ml[622,19228+15]..[622,19228+50])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[622,19228+16]..[622,19228+21])
                        Ppat_var "_cond" (lambda/lambda.ml[622,19228+16]..[622,19228+21])
                      pattern (lambda/lambda.ml[622,19228+23]..[622,19228+28])
                        Ppat_var "_body" (lambda/lambda.ml[622,19228+23]..[622,19228+28])
                      pattern (lambda/lambda.ml[622,19228+30]..[622,19228+49])
                        Ppat_construct "Lstaticraise" (lambda/lambda.ml[622,19228+30]..[622,19228+42])
                        Some
                          []
                          pattern (lambda/lambda.ml[622,19228+43]..[622,19228+49])
                            Ppat_tuple
                            [
                              pattern (lambda/lambda.ml[622,19228+44]..[622,19228+45])
                                Ppat_constant PConst_int (0,None)
                              pattern (lambda/lambda.ml[622,19228+46]..[622,19228+48])
                                Ppat_construct "[]" (lambda/lambda.ml[622,19228+46]..[622,19228+48])
                                None
                            ]
                    ]
              expression (lambda/lambda.ml[622,19228+54]..[622,19228+58])
                Pexp_construct "true" (lambda/lambda.ml[622,19228+54]..[622,19228+58])
                None
            <case>
              pattern (lambda/lambda.ml[623,19287+4]..[623,19287+35])
                Ppat_construct "Llet" (lambda/lambda.ml[623,19287+4]..[623,19287+8])
                Some
                  []
                  pattern (lambda/lambda.ml[623,19287+8]..[623,19287+35])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[623,19287+9]..[623,19287+13])
                        Ppat_var "_str" (lambda/lambda.ml[623,19287+9]..[623,19287+13])
                      pattern (lambda/lambda.ml[623,19287+15]..[623,19287+17])
                        Ppat_var "_k" (lambda/lambda.ml[623,19287+15]..[623,19287+17])
                      pattern (lambda/lambda.ml[623,19287+19]..[623,19287+22])
                        Ppat_var "_id" (lambda/lambda.ml[623,19287+19]..[623,19287+22])
                      pattern (lambda/lambda.ml[623,19287+24]..[623,19287+28])
                        Ppat_var "_lam" (lambda/lambda.ml[623,19287+24]..[623,19287+28])
                      pattern (lambda/lambda.ml[623,19287+30]..[623,19287+34])
                        Ppat_var "body" (lambda/lambda.ml[623,19287+30]..[623,19287+34])
                    ]
              expression (lambda/lambda.ml[623,19287+39]..[623,19287+54])
                Pexp_apply
                expression (lambda/lambda.ml[623,19287+39]..[623,19287+49])
                  Pexp_ident "is_guarded" (lambda/lambda.ml[623,19287+39]..[623,19287+49])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[623,19287+50]..[623,19287+54])
                      Pexp_ident "body" (lambda/lambda.ml[623,19287+50]..[623,19287+54])
                ]
            <case>
              pattern (lambda/lambda.ml[624,19342+4]..[624,19342+20])
                Ppat_construct "Levent" (lambda/lambda.ml[624,19342+4]..[624,19342+10])
                Some
                  []
                  pattern (lambda/lambda.ml[624,19342+10]..[624,19342+20])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[624,19342+11]..[624,19342+14])
                        Ppat_var "lam" (lambda/lambda.ml[624,19342+11]..[624,19342+14])
                      pattern (lambda/lambda.ml[624,19342+16]..[624,19342+19])
                        Ppat_var "_ev" (lambda/lambda.ml[624,19342+16]..[624,19342+19])
                    ]
              expression (lambda/lambda.ml[624,19342+24]..[624,19342+38])
                Pexp_apply
                expression (lambda/lambda.ml[624,19342+24]..[624,19342+34])
                  Pexp_ident "is_guarded" (lambda/lambda.ml[624,19342+24]..[624,19342+34])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[624,19342+35]..[624,19342+38])
                      Pexp_ident "lam" (lambda/lambda.ml[624,19342+35]..[624,19342+38])
                ]
            <case>
              pattern (lambda/lambda.ml[625,19381+4]..[625,19381+5])
                Ppat_any
              expression (lambda/lambda.ml[625,19381+9]..[625,19381+14])
                Pexp_construct "false" (lambda/lambda.ml[625,19381+9]..[625,19381+14])
                None
          ]
    ]
  structure_item (lambda/lambda.ml[627,19397+0]..[634,19683+43])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/lambda.ml[627,19397+8]..[627,19397+21])
          Ppat_var "patch_guarded" (lambda/lambda.ml[627,19397+8]..[627,19397+21])
        expression (lambda/lambda.ml[627,19397+22]..[634,19683+43]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[627,19397+22]..[627,19397+27])
            Ppat_var "patch" (lambda/lambda.ml[627,19397+22]..[627,19397+27])
          expression (lambda/lambda.ml[627,19397+30]..[634,19683+43])
            Pexp_function
            [
              <case>
                pattern (lambda/lambda.ml[628,19436+4]..[628,19436+49])
                  Ppat_construct "Lifthenelse" (lambda/lambda.ml[628,19436+4]..[628,19436+15])
                  Some
                    []
                    pattern (lambda/lambda.ml[628,19436+16]..[628,19436+49])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[628,19436+17]..[628,19436+21])
                          Ppat_var "cond" (lambda/lambda.ml[628,19436+17]..[628,19436+21])
                        pattern (lambda/lambda.ml[628,19436+23]..[628,19436+27])
                          Ppat_var "body" (lambda/lambda.ml[628,19436+23]..[628,19436+27])
                        pattern (lambda/lambda.ml[628,19436+29]..[628,19436+48])
                          Ppat_construct "Lstaticraise" (lambda/lambda.ml[628,19436+29]..[628,19436+41])
                          Some
                            []
                            pattern (lambda/lambda.ml[628,19436+42]..[628,19436+48])
                              Ppat_tuple
                              [
                                pattern (lambda/lambda.ml[628,19436+43]..[628,19436+44])
                                  Ppat_constant PConst_int (0,None)
                                pattern (lambda/lambda.ml[628,19436+45]..[628,19436+47])
                                  Ppat_construct "[]" (lambda/lambda.ml[628,19436+45]..[628,19436+47])
                                  None
                              ]
                      ]
                expression (lambda/lambda.ml[629,19489+6]..[629,19489+37])
                  Pexp_construct "Lifthenelse" (lambda/lambda.ml[629,19489+6]..[629,19489+17])
                  Some
                    expression (lambda/lambda.ml[629,19489+18]..[629,19489+37])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[629,19489+19]..[629,19489+23])
                          Pexp_ident "cond" (lambda/lambda.ml[629,19489+19]..[629,19489+23])
                        expression (lambda/lambda.ml[629,19489+25]..[629,19489+29])
                          Pexp_ident "body" (lambda/lambda.ml[629,19489+25]..[629,19489+29])
                        expression (lambda/lambda.ml[629,19489+31]..[629,19489+36])
                          Pexp_ident "patch" (lambda/lambda.ml[629,19489+31]..[629,19489+36])
                      ]
              <case>
                pattern (lambda/lambda.ml[630,19527+4]..[630,19527+31])
                  Ppat_construct "Llet" (lambda/lambda.ml[630,19527+4]..[630,19527+8])
                  Some
                    []
                    pattern (lambda/lambda.ml[630,19527+8]..[630,19527+31])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[630,19527+9]..[630,19527+12])
                          Ppat_var "str" (lambda/lambda.ml[630,19527+9]..[630,19527+12])
                        pattern (lambda/lambda.ml[630,19527+14]..[630,19527+15])
                          Ppat_var "k" (lambda/lambda.ml[630,19527+14]..[630,19527+15])
                        pattern (lambda/lambda.ml[630,19527+17]..[630,19527+19])
                          Ppat_var "id" (lambda/lambda.ml[630,19527+17]..[630,19527+19])
                        pattern (lambda/lambda.ml[630,19527+21]..[630,19527+24])
                          Ppat_var "lam" (lambda/lambda.ml[630,19527+21]..[630,19527+24])
                        pattern (lambda/lambda.ml[630,19527+26]..[630,19527+30])
                          Ppat_var "body" (lambda/lambda.ml[630,19527+26]..[630,19527+30])
                      ]
                expression (lambda/lambda.ml[631,19562+6]..[631,19562+54])
                  Pexp_construct "Llet" (lambda/lambda.ml[631,19562+6]..[631,19562+10])
                  Some
                    expression (lambda/lambda.ml[631,19562+11]..[631,19562+54])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[631,19562+12]..[631,19562+15])
                          Pexp_ident "str" (lambda/lambda.ml[631,19562+12]..[631,19562+15])
                        expression (lambda/lambda.ml[631,19562+17]..[631,19562+18])
                          Pexp_ident "k" (lambda/lambda.ml[631,19562+17]..[631,19562+18])
                        expression (lambda/lambda.ml[631,19562+20]..[631,19562+22])
                          Pexp_ident "id" (lambda/lambda.ml[631,19562+20]..[631,19562+22])
                        expression (lambda/lambda.ml[631,19562+24]..[631,19562+27])
                          Pexp_ident "lam" (lambda/lambda.ml[631,19562+24]..[631,19562+27])
                        expression (lambda/lambda.ml[631,19562+29]..[631,19562+53])
                          Pexp_apply
                          expression (lambda/lambda.ml[631,19562+29]..[631,19562+42])
                            Pexp_ident "patch_guarded" (lambda/lambda.ml[631,19562+29]..[631,19562+42])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[631,19562+43]..[631,19562+48])
                                Pexp_ident "patch" (lambda/lambda.ml[631,19562+43]..[631,19562+48])
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[631,19562+49]..[631,19562+53])
                                Pexp_ident "body" (lambda/lambda.ml[631,19562+49]..[631,19562+53])
                          ]
                      ]
              <case>
                pattern (lambda/lambda.ml[632,19617+4]..[632,19617+19])
                  Ppat_construct "Levent" (lambda/lambda.ml[632,19617+4]..[632,19617+10])
                  Some
                    []
                    pattern (lambda/lambda.ml[632,19617+10]..[632,19617+19])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[632,19617+11]..[632,19617+14])
                          Ppat_var "lam" (lambda/lambda.ml[632,19617+11]..[632,19617+14])
                        pattern (lambda/lambda.ml[632,19617+16]..[632,19617+18])
                          Ppat_var "ev" (lambda/lambda.ml[632,19617+16]..[632,19617+18])
                      ]
                expression (lambda/lambda.ml[633,19640+6]..[633,19640+42])
                  Pexp_construct "Levent" (lambda/lambda.ml[633,19640+6]..[633,19640+12])
                  Some
                    expression (lambda/lambda.ml[633,19640+13]..[633,19640+42])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[633,19640+14]..[633,19640+37])
                          Pexp_apply
                          expression (lambda/lambda.ml[633,19640+14]..[633,19640+27])
                            Pexp_ident "patch_guarded" (lambda/lambda.ml[633,19640+14]..[633,19640+27])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[633,19640+28]..[633,19640+33])
                                Pexp_ident "patch" (lambda/lambda.ml[633,19640+28]..[633,19640+33])
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[633,19640+34]..[633,19640+37])
                                Pexp_ident "lam" (lambda/lambda.ml[633,19640+34]..[633,19640+37])
                          ]
                        expression (lambda/lambda.ml[633,19640+39]..[633,19640+41])
                          Pexp_ident "ev" (lambda/lambda.ml[633,19640+39]..[633,19640+41])
                      ]
              <case>
                pattern (lambda/lambda.ml[634,19683+4]..[634,19683+5])
                  Ppat_any
                expression (lambda/lambda.ml[634,19683+9]..[634,19683+43])
                  Pexp_apply
                  expression (lambda/lambda.ml[634,19683+9]..[634,19683+20])
                    Pexp_ident "fatal_error" (lambda/lambda.ml[634,19683+9]..[634,19683+20])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/lambda.ml[634,19683+21]..[634,19683+43])
                        Pexp_constant PConst_string("Lambda.patch_guarded",(lambda/lambda.ml[634,19683+22]..[634,19683+42]),None)
                  ]
            ]
    ]
  structure_item (lambda/lambda.ml[638,19760+0]..[644,19931+55])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/lambda.ml[638,19760+8]..[638,19760+22])
          Ppat_var "transl_address" (lambda/lambda.ml[638,19760+8]..[638,19760+22])
        expression (lambda/lambda.ml[638,19760+23]..[644,19931+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[638,19760+23]..[638,19760+26])
            Ppat_var "loc" (lambda/lambda.ml[638,19760+23]..[638,19760+26])
          expression (lambda/lambda.ml[638,19760+29]..[644,19931+55])
            Pexp_function
            [
              <case>
                pattern (lambda/lambda.ml[639,19798+4]..[639,19798+17])
                  Ppat_construct "Env.Aident" (lambda/lambda.ml[639,19798+4]..[639,19798+14])
                  Some
                    []
                    pattern (lambda/lambda.ml[639,19798+15]..[639,19798+17])
                      Ppat_var "id" (lambda/lambda.ml[639,19798+15]..[639,19798+17])
                expression (lambda/lambda.ml[640,19819+6]..[642,19885+18])
                  Pexp_ifthenelse
                  expression (lambda/lambda.ml[640,19819+9]..[640,19819+24])
                    Pexp_apply
                    expression (lambda/lambda.ml[640,19819+9]..[640,19819+21])
                      Pexp_ident "Ident.global" (lambda/lambda.ml[640,19819+9]..[640,19819+21])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[640,19819+22]..[640,19819+24])
                          Pexp_ident "id" (lambda/lambda.ml[640,19819+22]..[640,19819+24])
                    ]
                  expression (lambda/lambda.ml[641,19844+11]..[641,19844+40])
                    Pexp_construct "Lprim" (lambda/lambda.ml[641,19844+11]..[641,19844+16])
                    Some
                      expression (lambda/lambda.ml[641,19844+16]..[641,19844+40])
                        Pexp_tuple
                        [
                          expression (lambda/lambda.ml[641,19844+17]..[641,19844+30])
                            Pexp_construct "Pgetglobal" (lambda/lambda.ml[641,19844+17]..[641,19844+27])
                            Some
                              expression (lambda/lambda.ml[641,19844+28]..[641,19844+30])
                                Pexp_ident "id" (lambda/lambda.ml[641,19844+28]..[641,19844+30])
                          expression (lambda/lambda.ml[641,19844+32]..[641,19844+34])
                            Pexp_construct "[]" (lambda/lambda.ml[641,19844+32]..[641,19844+34])
                            None
                          expression (lambda/lambda.ml[641,19844+36]..[641,19844+39])
                            Pexp_ident "loc" (lambda/lambda.ml[641,19844+36]..[641,19844+39])
                        ]
                  Some
                    expression (lambda/lambda.ml[642,19885+11]..[642,19885+18])
                      Pexp_construct "Lvar" (lambda/lambda.ml[642,19885+11]..[642,19885+15])
                      Some
                        expression (lambda/lambda.ml[642,19885+16]..[642,19885+18])
                          Pexp_ident "id" (lambda/lambda.ml[642,19885+16]..[642,19885+18])
              <case>
                pattern (lambda/lambda.ml[643,19904+4]..[643,19904+23])
                  Ppat_construct "Env.Adot" (lambda/lambda.ml[643,19904+4]..[643,19904+12])
                  Some
                    []
                    pattern (lambda/lambda.ml[643,19904+12]..[643,19904+23])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[643,19904+13]..[643,19904+17])
                          Ppat_var "addr" (lambda/lambda.ml[643,19904+13]..[643,19904+17])
                        pattern (lambda/lambda.ml[643,19904+19]..[643,19904+22])
                          Ppat_var "pos" (lambda/lambda.ml[643,19904+19]..[643,19904+22])
                      ]
                expression (lambda/lambda.ml[644,19931+6]..[644,19931+55])
                  Pexp_construct "Lprim" (lambda/lambda.ml[644,19931+6]..[644,19931+11])
                  Some
                    expression (lambda/lambda.ml[644,19931+11]..[644,19931+55])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[644,19931+12]..[644,19931+22])
                          Pexp_construct "Pfield" (lambda/lambda.ml[644,19931+12]..[644,19931+18])
                          Some
                            expression (lambda/lambda.ml[644,19931+19]..[644,19931+22])
                              Pexp_ident "pos" (lambda/lambda.ml[644,19931+19]..[644,19931+22])
                        expression (lambda/lambda.ml[644,19931+24]..[644,19931+49])
                          Pexp_construct "::" (lambda/lambda.ml[644,19931+25]..[644,19931+49]) ghost
                          Some
                            expression (lambda/lambda.ml[644,19931+25]..[644,19931+49]) ghost
                              Pexp_tuple
                              [
                                expression (lambda/lambda.ml[644,19931+25]..[644,19931+48])
                                  Pexp_apply
                                  expression (lambda/lambda.ml[644,19931+25]..[644,19931+39])
                                    Pexp_ident "transl_address" (lambda/lambda.ml[644,19931+25]..[644,19931+39])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/lambda.ml[644,19931+40]..[644,19931+43])
                                        Pexp_ident "loc" (lambda/lambda.ml[644,19931+40]..[644,19931+43])
                                    <arg>
                                    Nolabel
                                      expression (lambda/lambda.ml[644,19931+44]..[644,19931+48])
                                        Pexp_ident "addr" (lambda/lambda.ml[644,19931+44]..[644,19931+48])
                                  ]
                                expression (lambda/lambda.ml[644,19931+48]..[644,19931+49]) ghost
                                  Pexp_construct "[]" (lambda/lambda.ml[644,19931+48]..[644,19931+49]) ghost
                                  None
                              ]
                        expression (lambda/lambda.ml[644,19931+51]..[644,19931+54])
                          Pexp_ident "loc" (lambda/lambda.ml[644,19931+51]..[644,19931+54])
                      ]
            ]
    ]
  structure_item (lambda/lambda.ml[646,19988+0]..[650,20145+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[646,19988+4]..[646,19988+15])
          Ppat_var "transl_path" (lambda/lambda.ml[646,19988+4]..[646,19988+15])
        expression (lambda/lambda.ml[646,19988+16]..[650,20145+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[646,19988+16]..[646,19988+20])
            Ppat_var "find" (lambda/lambda.ml[646,19988+16]..[646,19988+20])
          expression (lambda/lambda.ml[646,19988+21]..[650,20145+35]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[646,19988+21]..[646,19988+24])
              Ppat_var "loc" (lambda/lambda.ml[646,19988+21]..[646,19988+24])
            expression (lambda/lambda.ml[646,19988+25]..[650,20145+35]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/lambda.ml[646,19988+25]..[646,19988+28])
                Ppat_var "env" (lambda/lambda.ml[646,19988+25]..[646,19988+28])
              expression (lambda/lambda.ml[646,19988+29]..[650,20145+35]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/lambda.ml[646,19988+29]..[646,19988+33])
                  Ppat_var "path" (lambda/lambda.ml[646,19988+29]..[646,19988+33])
                expression (lambda/lambda.ml[647,20024+2]..[650,20145+35])
                  Pexp_match
                  expression (lambda/lambda.ml[647,20024+8]..[647,20024+21])
                    Pexp_apply
                    expression (lambda/lambda.ml[647,20024+8]..[647,20024+12])
                      Pexp_ident "find" (lambda/lambda.ml[647,20024+8]..[647,20024+12])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[647,20024+13]..[647,20024+17])
                          Pexp_ident "path" (lambda/lambda.ml[647,20024+13]..[647,20024+17])
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[647,20024+18]..[647,20024+21])
                          Pexp_ident "env" (lambda/lambda.ml[647,20024+18]..[647,20024+21])
                    ]
                  [
                    <case>
                      pattern (lambda/lambda.ml[648,20051+4]..[648,20051+23])
                        Ppat_exception
                        pattern (lambda/lambda.ml[648,20051+14]..[648,20051+23])
                          Ppat_construct "Not_found" (lambda/lambda.ml[648,20051+14]..[648,20051+23])
                          None
                      expression (lambda/lambda.ml[649,20078+6]..[649,20078+66])
                        Pexp_apply
                        expression (lambda/lambda.ml[649,20078+6]..[649,20078+17])
                          Pexp_ident "fatal_error" (lambda/lambda.ml[649,20078+6]..[649,20078+17])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[649,20078+18]..[649,20078+66])
                              Pexp_apply
                              expression (lambda/lambda.ml[649,20078+47]..[649,20078+48])
                                Pexp_ident "^" (lambda/lambda.ml[649,20078+47]..[649,20078+48])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/lambda.ml[649,20078+19]..[649,20078+46])
                                    Pexp_constant PConst_string("Cannot find address for: ",(lambda/lambda.ml[649,20078+20]..[649,20078+45]),None)
                                <arg>
                                Nolabel
                                  expression (lambda/lambda.ml[649,20078+49]..[649,20078+65])
                                    Pexp_apply
                                    expression (lambda/lambda.ml[649,20078+50]..[649,20078+59])
                                      Pexp_ident "Path.name" (lambda/lambda.ml[649,20078+50]..[649,20078+59])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/lambda.ml[649,20078+60]..[649,20078+64])
                                          Pexp_ident "path" (lambda/lambda.ml[649,20078+60]..[649,20078+64])
                                    ]
                              ]
                        ]
                    <case>
                      pattern (lambda/lambda.ml[650,20145+4]..[650,20145+8])
                        Ppat_var "addr" (lambda/lambda.ml[650,20145+4]..[650,20145+8])
                      expression (lambda/lambda.ml[650,20145+12]..[650,20145+35])
                        Pexp_apply
                        expression (lambda/lambda.ml[650,20145+12]..[650,20145+26])
                          Pexp_ident "transl_address" (lambda/lambda.ml[650,20145+12]..[650,20145+26])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[650,20145+27]..[650,20145+30])
                              Pexp_ident "loc" (lambda/lambda.ml[650,20145+27]..[650,20145+30])
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[650,20145+31]..[650,20145+35])
                              Pexp_ident "addr" (lambda/lambda.ml[650,20145+31]..[650,20145+35])
                        ]
                  ]
    ]
  structure_item (lambda/lambda.ml[654,20216+0]..[655,20254+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[654,20216+4]..[654,20216+22])
          Ppat_var "transl_module_path" (lambda/lambda.ml[654,20216+4]..[654,20216+22])
        expression (lambda/lambda.ml[654,20216+23]..[655,20254+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[654,20216+23]..[654,20216+26])
            Ppat_var "loc" (lambda/lambda.ml[654,20216+23]..[654,20216+26])
          expression (lambda/lambda.ml[654,20216+27]..[655,20254+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[654,20216+27]..[654,20216+30])
              Ppat_var "env" (lambda/lambda.ml[654,20216+27]..[654,20216+30])
            expression (lambda/lambda.ml[654,20216+31]..[655,20254+50]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/lambda.ml[654,20216+31]..[654,20216+35])
                Ppat_var "path" (lambda/lambda.ml[654,20216+31]..[654,20216+35])
              expression (lambda/lambda.ml[655,20254+2]..[655,20254+50])
                Pexp_apply
                expression (lambda/lambda.ml[655,20254+2]..[655,20254+13])
                  Pexp_ident "transl_path" (lambda/lambda.ml[655,20254+2]..[655,20254+13])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[655,20254+14]..[655,20254+37])
                      Pexp_ident "Env.find_module_address" (lambda/lambda.ml[655,20254+14]..[655,20254+37])
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[655,20254+38]..[655,20254+41])
                      Pexp_ident "loc" (lambda/lambda.ml[655,20254+38]..[655,20254+41])
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[655,20254+42]..[655,20254+45])
                      Pexp_ident "env" (lambda/lambda.ml[655,20254+42]..[655,20254+45])
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[655,20254+46]..[655,20254+50])
                      Pexp_ident "path" (lambda/lambda.ml[655,20254+46]..[655,20254+50])
                ]
    ]
  structure_item (lambda/lambda.ml[657,20306+0]..[658,20343+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[657,20306+4]..[657,20306+21])
          Ppat_var "transl_value_path" (lambda/lambda.ml[657,20306+4]..[657,20306+21])
        expression (lambda/lambda.ml[657,20306+22]..[658,20343+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[657,20306+22]..[657,20306+25])
            Ppat_var "loc" (lambda/lambda.ml[657,20306+22]..[657,20306+25])
          expression (lambda/lambda.ml[657,20306+26]..[658,20343+49]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[657,20306+26]..[657,20306+29])
              Ppat_var "env" (lambda/lambda.ml[657,20306+26]..[657,20306+29])
            expression (lambda/lambda.ml[657,20306+30]..[658,20343+49]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/lambda.ml[657,20306+30]..[657,20306+34])
                Ppat_var "path" (lambda/lambda.ml[657,20306+30]..[657,20306+34])
              expression (lambda/lambda.ml[658,20343+2]..[658,20343+49])
                Pexp_apply
                expression (lambda/lambda.ml[658,20343+2]..[658,20343+13])
                  Pexp_ident "transl_path" (lambda/lambda.ml[658,20343+2]..[658,20343+13])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[658,20343+14]..[658,20343+36])
                      Pexp_ident "Env.find_value_address" (lambda/lambda.ml[658,20343+14]..[658,20343+36])
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[658,20343+37]..[658,20343+40])
                      Pexp_ident "loc" (lambda/lambda.ml[658,20343+37]..[658,20343+40])
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[658,20343+41]..[658,20343+44])
                      Pexp_ident "env" (lambda/lambda.ml[658,20343+41]..[658,20343+44])
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[658,20343+45]..[658,20343+49])
                      Pexp_ident "path" (lambda/lambda.ml[658,20343+45]..[658,20343+49])
                ]
    ]
  structure_item (lambda/lambda.ml[660,20394+0]..[661,20435+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[660,20394+4]..[660,20394+25])
          Ppat_var "transl_extension_path" (lambda/lambda.ml[660,20394+4]..[660,20394+25])
        expression (lambda/lambda.ml[660,20394+26]..[661,20435+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[660,20394+26]..[660,20394+29])
            Ppat_var "loc" (lambda/lambda.ml[660,20394+26]..[660,20394+29])
          expression (lambda/lambda.ml[660,20394+30]..[661,20435+55]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[660,20394+30]..[660,20394+33])
              Ppat_var "env" (lambda/lambda.ml[660,20394+30]..[660,20394+33])
            expression (lambda/lambda.ml[660,20394+34]..[661,20435+55]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/lambda.ml[660,20394+34]..[660,20394+38])
                Ppat_var "path" (lambda/lambda.ml[660,20394+34]..[660,20394+38])
              expression (lambda/lambda.ml[661,20435+2]..[661,20435+55])
                Pexp_apply
                expression (lambda/lambda.ml[661,20435+2]..[661,20435+13])
                  Pexp_ident "transl_path" (lambda/lambda.ml[661,20435+2]..[661,20435+13])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[661,20435+14]..[661,20435+42])
                      Pexp_ident "Env.find_constructor_address" (lambda/lambda.ml[661,20435+14]..[661,20435+42])
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[661,20435+43]..[661,20435+46])
                      Pexp_ident "loc" (lambda/lambda.ml[661,20435+43]..[661,20435+46])
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[661,20435+47]..[661,20435+50])
                      Pexp_ident "env" (lambda/lambda.ml[661,20435+47]..[661,20435+50])
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[661,20435+51]..[661,20435+55])
                      Pexp_ident "path" (lambda/lambda.ml[661,20435+51]..[661,20435+55])
                ]
    ]
  structure_item (lambda/lambda.ml[663,20492+0]..[664,20529+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[663,20492+4]..[663,20492+21])
          Ppat_var "transl_class_path" (lambda/lambda.ml[663,20492+4]..[663,20492+21])
        expression (lambda/lambda.ml[663,20492+22]..[664,20529+49]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[663,20492+22]..[663,20492+25])
            Ppat_var "loc" (lambda/lambda.ml[663,20492+22]..[663,20492+25])
          expression (lambda/lambda.ml[663,20492+26]..[664,20529+49]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[663,20492+26]..[663,20492+29])
              Ppat_var "env" (lambda/lambda.ml[663,20492+26]..[663,20492+29])
            expression (lambda/lambda.ml[663,20492+30]..[664,20529+49]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/lambda.ml[663,20492+30]..[663,20492+34])
                Ppat_var "path" (lambda/lambda.ml[663,20492+30]..[663,20492+34])
              expression (lambda/lambda.ml[664,20529+2]..[664,20529+49])
                Pexp_apply
                expression (lambda/lambda.ml[664,20529+2]..[664,20529+13])
                  Pexp_ident "transl_path" (lambda/lambda.ml[664,20529+2]..[664,20529+13])
                [
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[664,20529+14]..[664,20529+36])
                      Pexp_ident "Env.find_class_address" (lambda/lambda.ml[664,20529+14]..[664,20529+36])
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[664,20529+37]..[664,20529+40])
                      Pexp_ident "loc" (lambda/lambda.ml[664,20529+37]..[664,20529+40])
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[664,20529+41]..[664,20529+44])
                      Pexp_ident "env" (lambda/lambda.ml[664,20529+41]..[664,20529+44])
                  <arg>
                  Nolabel
                    expression (lambda/lambda.ml[664,20529+45]..[664,20529+49])
                      Pexp_ident "path" (lambda/lambda.ml[664,20529+45]..[664,20529+49])
                ]
    ]
  structure_item (lambda/lambda.ml[666,20580+0]..[673,20909+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[666,20580+4]..[666,20580+15])
          Ppat_var "transl_prim" (lambda/lambda.ml[666,20580+4]..[666,20580+15])
        expression (lambda/lambda.ml[666,20580+16]..[673,20909+55]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[666,20580+16]..[666,20580+24])
            Ppat_var "mod_name" (lambda/lambda.ml[666,20580+16]..[666,20580+24])
          expression (lambda/lambda.ml[666,20580+25]..[673,20909+55]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[666,20580+25]..[666,20580+29])
              Ppat_var "name" (lambda/lambda.ml[666,20580+25]..[666,20580+29])
            expression (lambda/lambda.ml[667,20612+2]..[673,20909+55])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lambda/lambda.ml[667,20612+6]..[667,20612+10])
                    Ppat_var "pers" (lambda/lambda.ml[667,20612+6]..[667,20612+10])
                  expression (lambda/lambda.ml[667,20612+13]..[667,20612+45])
                    Pexp_apply
                    expression (lambda/lambda.ml[667,20612+13]..[667,20612+36])
                      Pexp_ident "Ident.create_persistent" (lambda/lambda.ml[667,20612+13]..[667,20612+36])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[667,20612+37]..[667,20612+45])
                          Pexp_ident "mod_name" (lambda/lambda.ml[667,20612+37]..[667,20612+45])
                    ]
              ]
              expression (lambda/lambda.ml[668,20661+2]..[673,20909+55])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lambda/lambda.ml[668,20661+6]..[668,20661+9])
                      Ppat_var "env" (lambda/lambda.ml[668,20661+6]..[668,20661+9])
                    expression (lambda/lambda.ml[668,20661+12]..[668,20661+55])
                      Pexp_apply
                      expression (lambda/lambda.ml[668,20661+12]..[668,20661+40])
                        Pexp_ident "Env.add_persistent_structure" (lambda/lambda.ml[668,20661+12]..[668,20661+40])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[668,20661+41]..[668,20661+45])
                            Pexp_ident "pers" (lambda/lambda.ml[668,20661+41]..[668,20661+45])
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[668,20661+46]..[668,20661+55])
                            Pexp_ident "Env.empty" (lambda/lambda.ml[668,20661+46]..[668,20661+55])
                      ]
                ]
                expression (lambda/lambda.ml[669,20720+2]..[673,20909+55])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/lambda.ml[669,20720+6]..[669,20720+9])
                        Ppat_var "lid" (lambda/lambda.ml[669,20720+6]..[669,20720+9])
                      expression (lambda/lambda.ml[669,20720+12]..[669,20720+60])
                        Pexp_construct "Longident.Ldot" (lambda/lambda.ml[669,20720+12]..[669,20720+26])
                        Some
                          expression (lambda/lambda.ml[669,20720+27]..[669,20720+60])
                            Pexp_tuple
                            [
                              expression (lambda/lambda.ml[669,20720+28]..[669,20720+53])
                                Pexp_construct "Longident.Lident" (lambda/lambda.ml[669,20720+28]..[669,20720+44])
                                Some
                                  expression (lambda/lambda.ml[669,20720+45]..[669,20720+53])
                                    Pexp_ident "mod_name" (lambda/lambda.ml[669,20720+45]..[669,20720+53])
                              expression (lambda/lambda.ml[669,20720+55]..[669,20720+59])
                                Pexp_ident "name" (lambda/lambda.ml[669,20720+55]..[669,20720+59])
                            ]
                  ]
                  expression (lambda/lambda.ml[670,20784+2]..[673,20909+55])
                    Pexp_match
                    expression (lambda/lambda.ml[670,20784+8]..[670,20784+38])
                      Pexp_apply
                      expression (lambda/lambda.ml[670,20784+8]..[670,20784+30])
                        Pexp_ident "Env.find_value_by_name" (lambda/lambda.ml[670,20784+8]..[670,20784+30])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[670,20784+31]..[670,20784+34])
                            Pexp_ident "lid" (lambda/lambda.ml[670,20784+31]..[670,20784+34])
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[670,20784+35]..[670,20784+38])
                            Pexp_ident "env" (lambda/lambda.ml[670,20784+35]..[670,20784+38])
                      ]
                    [
                      <case>
                        pattern (lambda/lambda.ml[671,20828+4]..[671,20828+11])
                          Ppat_tuple
                          [
                            pattern (lambda/lambda.ml[671,20828+4]..[671,20828+8])
                              Ppat_var "path" (lambda/lambda.ml[671,20828+4]..[671,20828+8])
                            pattern (lambda/lambda.ml[671,20828+10]..[671,20828+11])
                              Ppat_any
                          ]
                        expression (lambda/lambda.ml[671,20828+15]..[671,20828+53])
                          Pexp_apply
                          expression (lambda/lambda.ml[671,20828+15]..[671,20828+32])
                            Pexp_ident "transl_value_path" (lambda/lambda.ml[671,20828+15]..[671,20828+32])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[671,20828+33]..[671,20828+44])
                                Pexp_construct "Loc_unknown" (lambda/lambda.ml[671,20828+33]..[671,20828+44])
                                None
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[671,20828+45]..[671,20828+48])
                                Pexp_ident "env" (lambda/lambda.ml[671,20828+45]..[671,20828+48])
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[671,20828+49]..[671,20828+53])
                                Pexp_ident "path" (lambda/lambda.ml[671,20828+49]..[671,20828+53])
                          ]
                      <case>
                        pattern (lambda/lambda.ml[672,20882+4]..[672,20882+23])
                          Ppat_exception
                          pattern (lambda/lambda.ml[672,20882+14]..[672,20882+23])
                            Ppat_construct "Not_found" (lambda/lambda.ml[672,20882+14]..[672,20882+23])
                            None
                        expression (lambda/lambda.ml[673,20909+6]..[673,20909+55])
                          Pexp_apply
                          expression (lambda/lambda.ml[673,20909+6]..[673,20909+17])
                            Pexp_ident "fatal_error" (lambda/lambda.ml[673,20909+6]..[673,20909+17])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[673,20909+18]..[673,20909+55])
                                Pexp_apply
                                expression (lambda/lambda.ml[673,20909+32]..[673,20909+33])
                                  Pexp_ident "^" (lambda/lambda.ml[673,20909+32]..[673,20909+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[673,20909+19]..[673,20909+31])
                                      Pexp_constant PConst_string("Primitive ",(lambda/lambda.ml[673,20909+20]..[673,20909+30]),None)
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[673,20909+34]..[673,20909+54])
                                      Pexp_apply
                                      expression (lambda/lambda.ml[673,20909+39]..[673,20909+40])
                                        Pexp_ident "^" (lambda/lambda.ml[673,20909+39]..[673,20909+40])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[673,20909+34]..[673,20909+38])
                                            Pexp_ident "name" (lambda/lambda.ml[673,20909+34]..[673,20909+38])
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[673,20909+41]..[673,20909+54])
                                            Pexp_constant PConst_string(" not found.",(lambda/lambda.ml[673,20909+42]..[673,20909+53]),None)
                                      ]
                                ]
                          ]
                    ]
    ]
  structure_item (lambda/lambda.ml[677,21007+0]..[681,21095+60])
    Pstr_value Rec
    [
      <def>
        pattern (lambda/lambda.ml[677,21007+8]..[677,21007+21])
          Ppat_var "make_sequence" (lambda/lambda.ml[677,21007+8]..[677,21007+21])
        expression (lambda/lambda.ml[677,21007+22]..[681,21095+60]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[677,21007+22]..[677,21007+24])
            Ppat_var "fn" (lambda/lambda.ml[677,21007+22]..[677,21007+24])
          expression (lambda/lambda.ml[677,21007+27]..[681,21095+60])
            Pexp_function
            [
              <case>
                pattern (lambda/lambda.ml[678,21043+4]..[678,21043+6])
                  Ppat_construct "[]" (lambda/lambda.ml[678,21043+4]..[678,21043+6])
                  None
                expression (lambda/lambda.ml[678,21043+10]..[678,21043+21])
                  Pexp_ident "lambda_unit" (lambda/lambda.ml[678,21043+10]..[678,21043+21])
              <case>
                pattern (lambda/lambda.ml[679,21065+4]..[679,21065+7])
                  Ppat_construct "::" (lambda/lambda.ml[679,21065+5]..[679,21065+7]) ghost
                  Some
                    []
                    pattern (lambda/lambda.ml[679,21065+5]..[679,21065+7]) ghost
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[679,21065+5]..[679,21065+6])
                          Ppat_var "x" (lambda/lambda.ml[679,21065+5]..[679,21065+6])
                        pattern (lambda/lambda.ml[679,21065+6]..[679,21065+7]) ghost
                          Ppat_construct "[]" (lambda/lambda.ml[679,21065+6]..[679,21065+7]) ghost
                          None
                      ]
                expression (lambda/lambda.ml[679,21065+11]..[679,21065+15])
                  Pexp_apply
                  expression (lambda/lambda.ml[679,21065+11]..[679,21065+13])
                    Pexp_ident "fn" (lambda/lambda.ml[679,21065+11]..[679,21065+13])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/lambda.ml[679,21065+14]..[679,21065+15])
                        Pexp_ident "x" (lambda/lambda.ml[679,21065+14]..[679,21065+15])
                  ]
              <case>
                pattern (lambda/lambda.ml[680,21081+4]..[680,21081+10])
                  Ppat_construct "::" (lambda/lambda.ml[680,21081+5]..[680,21081+7])
                  Some
                    []
                    pattern (lambda/lambda.ml[680,21081+4]..[680,21081+10]) ghost
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[680,21081+4]..[680,21081+5])
                          Ppat_var "x" (lambda/lambda.ml[680,21081+4]..[680,21081+5])
                        pattern (lambda/lambda.ml[680,21081+7]..[680,21081+10])
                          Ppat_var "rem" (lambda/lambda.ml[680,21081+7]..[680,21081+10])
                      ]
                expression (lambda/lambda.ml[681,21095+6]..[681,21095+60])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/lambda.ml[681,21095+10]..[681,21095+13])
                        Ppat_var "lam" (lambda/lambda.ml[681,21095+10]..[681,21095+13])
                      expression (lambda/lambda.ml[681,21095+16]..[681,21095+20])
                        Pexp_apply
                        expression (lambda/lambda.ml[681,21095+16]..[681,21095+18])
                          Pexp_ident "fn" (lambda/lambda.ml[681,21095+16]..[681,21095+18])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[681,21095+19]..[681,21095+20])
                              Pexp_ident "x" (lambda/lambda.ml[681,21095+19]..[681,21095+20])
                        ]
                  ]
                  expression (lambda/lambda.ml[681,21095+24]..[681,21095+60])
                    Pexp_construct "Lsequence" (lambda/lambda.ml[681,21095+24]..[681,21095+33])
                    Some
                      expression (lambda/lambda.ml[681,21095+33]..[681,21095+60])
                        Pexp_tuple
                        [
                          expression (lambda/lambda.ml[681,21095+34]..[681,21095+37])
                            Pexp_ident "lam" (lambda/lambda.ml[681,21095+34]..[681,21095+37])
                          expression (lambda/lambda.ml[681,21095+39]..[681,21095+59])
                            Pexp_apply
                            expression (lambda/lambda.ml[681,21095+39]..[681,21095+52])
                              Pexp_ident "make_sequence" (lambda/lambda.ml[681,21095+39]..[681,21095+52])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[681,21095+53]..[681,21095+55])
                                  Pexp_ident "fn" (lambda/lambda.ml[681,21095+53]..[681,21095+55])
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[681,21095+56]..[681,21095+59])
                                  Pexp_ident "rem" (lambda/lambda.ml[681,21095+56]..[681,21095+59])
                            ]
                        ]
            ]
    ]
  structure_item (lambda/lambda.ml[687,21324+0]..[811,26564+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[687,21324+4]..[687,21324+9])
          Ppat_var "subst" (lambda/lambda.ml[687,21324+4]..[687,21324+9])
        expression (lambda/lambda.ml[687,21324+10]..[811,26564+35]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[687,21324+10]..[687,21324+20])
            Ppat_var "update_env" (lambda/lambda.ml[687,21324+10]..[687,21324+20])
          expression (lambda/lambda.ml[687,21324+21]..[811,26564+35]) ghost
            Pexp_fun
            Optional "freshen_bound_variables"
            Some
              expression (lambda/lambda.ml[687,21324+49]..[687,21324+54])
                Pexp_construct "false" (lambda/lambda.ml[687,21324+49]..[687,21324+54])
                None
            pattern (lambda/lambda.ml[687,21324+23]..[687,21324+46])
              Ppat_var "freshen_bound_variables" (lambda/lambda.ml[687,21324+23]..[687,21324+46])
            expression (lambda/lambda.ml[687,21324+56]..[811,26564+35]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/lambda.ml[687,21324+56]..[687,21324+57])
                Ppat_var "s" (lambda/lambda.ml[687,21324+56]..[687,21324+57])
              expression (lambda/lambda.ml[687,21324+58]..[811,26564+35]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/lambda.ml[687,21324+58]..[687,21324+67])
                  Ppat_var "input_lam" (lambda/lambda.ml[687,21324+58]..[687,21324+67])
                expression (lambda/lambda.ml[695,21757+2]..[811,26564+35])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (lambda/lambda.ml[695,21757+6]..[695,21757+10])
                        Ppat_var "bind" (lambda/lambda.ml[695,21757+6]..[695,21757+10])
                      expression (lambda/lambda.ml[695,21757+11]..[697,21852+31]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/lambda.ml[695,21757+11]..[695,21757+13])
                          Ppat_var "id" (lambda/lambda.ml[695,21757+11]..[695,21757+13])
                        expression (lambda/lambda.ml[695,21757+14]..[697,21852+31]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/lambda.ml[695,21757+14]..[695,21757+15])
                            Ppat_var "l" (lambda/lambda.ml[695,21757+14]..[695,21757+15])
                          expression (lambda/lambda.ml[696,21775+4]..[697,21852+31])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (lambda/lambda.ml[696,21775+8]..[696,21775+11])
                                  Ppat_var "id'" (lambda/lambda.ml[696,21775+8]..[696,21775+11])
                                expression (lambda/lambda.ml[696,21775+14]..[696,21775+73])
                                  Pexp_ifthenelse
                                  expression (lambda/lambda.ml[696,21775+17]..[696,21775+44])
                                    Pexp_apply
                                    expression (lambda/lambda.ml[696,21775+17]..[696,21775+20])
                                      Pexp_ident "not" (lambda/lambda.ml[696,21775+17]..[696,21775+20])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (lambda/lambda.ml[696,21775+21]..[696,21775+44])
                                          Pexp_ident "freshen_bound_variables" (lambda/lambda.ml[696,21775+21]..[696,21775+44])
                                    ]
                                  expression (lambda/lambda.ml[696,21775+50]..[696,21775+52])
                                    Pexp_ident "id" (lambda/lambda.ml[696,21775+50]..[696,21775+52])
                                  Some
                                    expression (lambda/lambda.ml[696,21775+58]..[696,21775+73])
                                      Pexp_apply
                                      expression (lambda/lambda.ml[696,21775+58]..[696,21775+70])
                                        Pexp_ident "Ident.rename" (lambda/lambda.ml[696,21775+58]..[696,21775+70])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[696,21775+71]..[696,21775+73])
                                            Pexp_ident "id" (lambda/lambda.ml[696,21775+71]..[696,21775+73])
                                      ]
                            ]
                            expression (lambda/lambda.ml[697,21852+4]..[697,21852+31])
                              Pexp_tuple
                              [
                                expression (lambda/lambda.ml[697,21852+4]..[697,21852+7])
                                  Pexp_ident "id'" (lambda/lambda.ml[697,21852+4]..[697,21852+7])
                                expression (lambda/lambda.ml[697,21852+9]..[697,21852+31])
                                  Pexp_apply
                                  expression (lambda/lambda.ml[697,21852+9]..[697,21852+22])
                                    Pexp_ident "Ident.Map.add" (lambda/lambda.ml[697,21852+9]..[697,21852+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/lambda.ml[697,21852+23]..[697,21852+25])
                                        Pexp_ident "id" (lambda/lambda.ml[697,21852+23]..[697,21852+25])
                                    <arg>
                                    Nolabel
                                      expression (lambda/lambda.ml[697,21852+26]..[697,21852+29])
                                        Pexp_ident "id'" (lambda/lambda.ml[697,21852+26]..[697,21852+29])
                                    <arg>
                                    Nolabel
                                      expression (lambda/lambda.ml[697,21852+30]..[697,21852+31])
                                        Pexp_ident "l" (lambda/lambda.ml[697,21852+30]..[697,21852+31])
                                  ]
                              ]
                  ]
                  expression (lambda/lambda.ml[699,21889+2]..[811,26564+35])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (lambda/lambda.ml[699,21889+6]..[699,21889+15])
                          Ppat_var "bind_many" (lambda/lambda.ml[699,21889+6]..[699,21889+15])
                        expression (lambda/lambda.ml[699,21889+16]..[703,22028+19]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (lambda/lambda.ml[699,21889+16]..[699,21889+19])
                            Ppat_var "ids" (lambda/lambda.ml[699,21889+16]..[699,21889+19])
                          expression (lambda/lambda.ml[699,21889+20]..[703,22028+19]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/lambda.ml[699,21889+20]..[699,21889+21])
                              Ppat_var "l" (lambda/lambda.ml[699,21889+20]..[699,21889+21])
                            expression (lambda/lambda.ml[700,21913+4]..[703,22028+19])
                              Pexp_apply
                              expression (lambda/lambda.ml[700,21913+4]..[700,21913+19])
                                Pexp_ident "List.fold_right" (lambda/lambda.ml[700,21913+4]..[700,21913+19])
                              [
                                <arg>
                                Nolabel
                                  expression (lambda/lambda.ml[700,21913+20]..[703,22028+7])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (lambda/lambda.ml[700,21913+25]..[700,21913+34])
                                      Ppat_tuple
                                      [
                                        pattern (lambda/lambda.ml[700,21913+26]..[700,21913+28])
                                          Ppat_var "id" (lambda/lambda.ml[700,21913+26]..[700,21913+28])
                                        pattern (lambda/lambda.ml[700,21913+30]..[700,21913+33])
                                          Ppat_var "rhs" (lambda/lambda.ml[700,21913+30]..[700,21913+33])
                                      ]
                                    expression (lambda/lambda.ml[700,21913+35]..[702,21995+32]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lambda/lambda.ml[700,21913+35]..[700,21913+44])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[700,21913+36]..[700,21913+40])
                                            Ppat_var "ids'" (lambda/lambda.ml[700,21913+36]..[700,21913+40])
                                          pattern (lambda/lambda.ml[700,21913+42]..[700,21913+43])
                                            Ppat_var "l" (lambda/lambda.ml[700,21913+42]..[700,21913+43])
                                        ]
                                      expression (lambda/lambda.ml[701,21961+8]..[702,21995+32])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/lambda.ml[701,21961+12]..[701,21961+18])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/lambda.ml[701,21961+12]..[701,21961+15])
                                                  Ppat_var "id'" (lambda/lambda.ml[701,21961+12]..[701,21961+15])
                                                pattern (lambda/lambda.ml[701,21961+17]..[701,21961+18])
                                                  Ppat_var "l" (lambda/lambda.ml[701,21961+17]..[701,21961+18])
                                              ]
                                            expression (lambda/lambda.ml[701,21961+21]..[701,21961+30])
                                              Pexp_apply
                                              expression (lambda/lambda.ml[701,21961+21]..[701,21961+25])
                                                Pexp_ident "bind" (lambda/lambda.ml[701,21961+21]..[701,21961+25])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[701,21961+26]..[701,21961+28])
                                                    Pexp_ident "id" (lambda/lambda.ml[701,21961+26]..[701,21961+28])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[701,21961+29]..[701,21961+30])
                                                    Pexp_ident "l" (lambda/lambda.ml[701,21961+29]..[701,21961+30])
                                              ]
                                        ]
                                        expression (lambda/lambda.ml[702,21995+8]..[702,21995+32])
                                          Pexp_tuple
                                          [
                                            expression (lambda/lambda.ml[702,21995+9]..[702,21995+27])
                                              Pexp_construct "::" (lambda/lambda.ml[702,21995+20]..[702,21995+22])
                                              Some
                                                expression (lambda/lambda.ml[702,21995+9]..[702,21995+27]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/lambda.ml[702,21995+9]..[702,21995+19])
                                                      Pexp_tuple
                                                      [
                                                        expression (lambda/lambda.ml[702,21995+10]..[702,21995+13])
                                                          Pexp_ident "id'" (lambda/lambda.ml[702,21995+10]..[702,21995+13])
                                                        expression (lambda/lambda.ml[702,21995+15]..[702,21995+18])
                                                          Pexp_ident "rhs" (lambda/lambda.ml[702,21995+15]..[702,21995+18])
                                                      ]
                                                    expression (lambda/lambda.ml[702,21995+23]..[702,21995+27])
                                                      Pexp_ident "ids'" (lambda/lambda.ml[702,21995+23]..[702,21995+27])
                                                  ]
                                            expression (lambda/lambda.ml[702,21995+30]..[702,21995+31])
                                              Pexp_ident "l" (lambda/lambda.ml[702,21995+30]..[702,21995+31])
                                          ]
                                <arg>
                                Nolabel
                                  expression (lambda/lambda.ml[703,22028+8]..[703,22028+11])
                                    Pexp_ident "ids" (lambda/lambda.ml[703,22028+8]..[703,22028+11])
                                <arg>
                                Nolabel
                                  expression (lambda/lambda.ml[703,22028+12]..[703,22028+19])
                                    Pexp_tuple
                                    [
                                      expression (lambda/lambda.ml[703,22028+13]..[703,22028+15])
                                        Pexp_construct "[]" (lambda/lambda.ml[703,22028+13]..[703,22028+15])
                                        None
                                      expression (lambda/lambda.ml[703,22028+17]..[703,22028+18])
                                        Pexp_ident "l" (lambda/lambda.ml[703,22028+17]..[703,22028+18])
                                    ]
                              ]
                    ]
                    expression (lambda/lambda.ml[705,22053+2]..[811,26564+35])
                      Pexp_let Rec
                      [
                        <def>
                          pattern (lambda/lambda.ml[705,22053+10]..[705,22053+15])
                            Ppat_var "subst" (lambda/lambda.ml[705,22053+10]..[705,22053+15])
                          expression (lambda/lambda.ml[705,22053+16]..[802,26220+33]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/lambda.ml[705,22053+16]..[705,22053+17])
                              Ppat_var "s" (lambda/lambda.ml[705,22053+16]..[705,22053+17])
                            expression (lambda/lambda.ml[705,22053+18]..[802,26220+33]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/lambda.ml[705,22053+18]..[705,22053+19])
                                Ppat_var "l" (lambda/lambda.ml[705,22053+18]..[705,22053+19])
                              expression (lambda/lambda.ml[705,22053+20]..[802,26220+33]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/lambda.ml[705,22053+20]..[705,22053+23])
                                  Ppat_var "lam" (lambda/lambda.ml[705,22053+20]..[705,22053+23])
                                expression (lambda/lambda.ml[706,22079+4]..[802,26220+33])
                                  Pexp_match
                                  expression (lambda/lambda.ml[706,22079+10]..[706,22079+13])
                                    Pexp_ident "lam" (lambda/lambda.ml[706,22079+10]..[706,22079+13])
                                  [
                                    <case>
                                      pattern (lambda/lambda.ml[707,22098+6]..[707,22098+20])
                                        Ppat_alias "lam" (lambda/lambda.ml[707,22098+17]..[707,22098+20])
                                        pattern (lambda/lambda.ml[707,22098+6]..[707,22098+13])
                                          Ppat_construct "Lvar" (lambda/lambda.ml[707,22098+6]..[707,22098+10])
                                          Some
                                            []
                                            pattern (lambda/lambda.ml[707,22098+11]..[707,22098+13])
                                              Ppat_var "id" (lambda/lambda.ml[707,22098+11]..[707,22098+13])
                                      expression (lambda/lambda.ml[708,22122+8]..[715,22501+11])
                                        Pexp_match
                                        expression (lambda/lambda.ml[708,22122+20]..[708,22122+39])
                                          Pexp_apply
                                          expression (lambda/lambda.ml[708,22122+20]..[708,22122+34])
                                            Pexp_ident "Ident.Map.find" (lambda/lambda.ml[708,22122+20]..[708,22122+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/lambda.ml[708,22122+35]..[708,22122+37])
                                                Pexp_ident "id" (lambda/lambda.ml[708,22122+35]..[708,22122+37])
                                            <arg>
                                            Nolabel
                                              expression (lambda/lambda.ml[708,22122+38]..[708,22122+39])
                                                Pexp_ident "l" (lambda/lambda.ml[708,22122+38]..[708,22122+39])
                                          ]
                                        [
                                          <case>
                                            pattern (lambda/lambda.ml[709,22167+12]..[709,22167+15])
                                              Ppat_var "id'" (lambda/lambda.ml[709,22167+12]..[709,22167+15])
                                            expression (lambda/lambda.ml[709,22167+19]..[709,22167+27])
                                              Pexp_construct "Lvar" (lambda/lambda.ml[709,22167+19]..[709,22167+23])
                                              Some
                                                expression (lambda/lambda.ml[709,22167+24]..[709,22167+27])
                                                  Pexp_ident "id'" (lambda/lambda.ml[709,22167+24]..[709,22167+27])
                                          <case>
                                            pattern (lambda/lambda.ml[710,22195+12]..[710,22195+31])
                                              Ppat_exception
                                              pattern (lambda/lambda.ml[710,22195+22]..[710,22195+31])
                                                Ppat_construct "Not_found" (lambda/lambda.ml[710,22195+22]..[710,22195+31])
                                                None
                                            expression (lambda/lambda.ml[714,22432+13]..[714,22432+68])
                                              Pexp_try
                                              expression (lambda/lambda.ml[714,22432+23]..[714,22432+42])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[714,22432+23]..[714,22432+37])
                                                  Pexp_ident "Ident.Map.find" (lambda/lambda.ml[714,22432+23]..[714,22432+37])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[714,22432+38]..[714,22432+40])
                                                      Pexp_ident "id" (lambda/lambda.ml[714,22432+38]..[714,22432+40])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[714,22432+41]..[714,22432+42])
                                                      Pexp_ident "s" (lambda/lambda.ml[714,22432+41]..[714,22432+42])
                                                ]
                                              [
                                                <case>
                                                  pattern (lambda/lambda.ml[714,22432+48]..[714,22432+57])
                                                    Ppat_construct "Not_found" (lambda/lambda.ml[714,22432+48]..[714,22432+57])
                                                    None
                                                  expression (lambda/lambda.ml[714,22432+61]..[714,22432+64])
                                                    Pexp_ident "lam" (lambda/lambda.ml[714,22432+61]..[714,22432+64])
                                              ]
                                        ]
                                    <case>
                                      pattern (lambda/lambda.ml[716,22513+6]..[716,22513+23])
                                        Ppat_alias "lam" (lambda/lambda.ml[716,22513+20]..[716,22513+23])
                                        pattern (lambda/lambda.ml[716,22513+6]..[716,22513+16])
                                          Ppat_construct "Lmutvar" (lambda/lambda.ml[716,22513+6]..[716,22513+13])
                                          Some
                                            []
                                            pattern (lambda/lambda.ml[716,22513+14]..[716,22513+16])
                                              Ppat_var "id" (lambda/lambda.ml[716,22513+14]..[716,22513+16])
                                      expression (lambda/lambda.ml[717,22540+7]..[723,22844+11])
                                        Pexp_match
                                        expression (lambda/lambda.ml[717,22540+19]..[717,22540+38])
                                          Pexp_apply
                                          expression (lambda/lambda.ml[717,22540+19]..[717,22540+33])
                                            Pexp_ident "Ident.Map.find" (lambda/lambda.ml[717,22540+19]..[717,22540+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/lambda.ml[717,22540+34]..[717,22540+36])
                                                Pexp_ident "id" (lambda/lambda.ml[717,22540+34]..[717,22540+36])
                                            <arg>
                                            Nolabel
                                              expression (lambda/lambda.ml[717,22540+37]..[717,22540+38])
                                                Pexp_ident "l" (lambda/lambda.ml[717,22540+37]..[717,22540+38])
                                          ]
                                        [
                                          <case>
                                            pattern (lambda/lambda.ml[718,22584+12]..[718,22584+15])
                                              Ppat_var "id'" (lambda/lambda.ml[718,22584+12]..[718,22584+15])
                                            expression (lambda/lambda.ml[718,22584+19]..[718,22584+30])
                                              Pexp_construct "Lmutvar" (lambda/lambda.ml[718,22584+19]..[718,22584+26])
                                              Some
                                                expression (lambda/lambda.ml[718,22584+27]..[718,22584+30])
                                                  Pexp_ident "id'" (lambda/lambda.ml[718,22584+27]..[718,22584+30])
                                          <case>
                                            pattern (lambda/lambda.ml[719,22615+12]..[719,22615+31])
                                              Ppat_exception
                                              pattern (lambda/lambda.ml[719,22615+22]..[719,22615+31])
                                                Ppat_construct "Not_found" (lambda/lambda.ml[719,22615+22]..[719,22615+31])
                                                None
                                            expression (lambda/lambda.ml[722,22775+13]..[722,22775+68])
                                              Pexp_try
                                              expression (lambda/lambda.ml[722,22775+23]..[722,22775+42])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[722,22775+23]..[722,22775+37])
                                                  Pexp_ident "Ident.Map.find" (lambda/lambda.ml[722,22775+23]..[722,22775+37])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[722,22775+38]..[722,22775+40])
                                                      Pexp_ident "id" (lambda/lambda.ml[722,22775+38]..[722,22775+40])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[722,22775+41]..[722,22775+42])
                                                      Pexp_ident "s" (lambda/lambda.ml[722,22775+41]..[722,22775+42])
                                                ]
                                              [
                                                <case>
                                                  pattern (lambda/lambda.ml[722,22775+48]..[722,22775+57])
                                                    Ppat_construct "Not_found" (lambda/lambda.ml[722,22775+48]..[722,22775+57])
                                                    None
                                                  expression (lambda/lambda.ml[722,22775+61]..[722,22775+64])
                                                    Pexp_ident "lam" (lambda/lambda.ml[722,22775+61]..[722,22775+64])
                                              ]
                                        ]
                                    <case>
                                      pattern (lambda/lambda.ml[724,22856+6]..[724,22856+19])
                                        Ppat_alias "l" (lambda/lambda.ml[724,22856+18]..[724,22856+19])
                                        pattern (lambda/lambda.ml[724,22856+6]..[724,22856+14])
                                          Ppat_construct "Lconst" (lambda/lambda.ml[724,22856+6]..[724,22856+12])
                                          Some
                                            []
                                            pattern (lambda/lambda.ml[724,22856+13]..[724,22856+14])
                                              Ppat_any
                                      expression (lambda/lambda.ml[724,22856+23]..[724,22856+24])
                                        Pexp_ident "l" (lambda/lambda.ml[724,22856+23]..[724,22856+24])
                                    <case>
                                      pattern (lambda/lambda.ml[725,22881+6]..[725,22881+15])
                                        Ppat_construct "Lapply" (lambda/lambda.ml[725,22881+6]..[725,22881+12])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[725,22881+13]..[725,22881+15])
                                            Ppat_var "ap" (lambda/lambda.ml[725,22881+13]..[725,22881+15])
                                      expression (lambda/lambda.ml[726,22900+8]..[727,22955+58])
                                        Pexp_construct "Lapply" (lambda/lambda.ml[726,22900+8]..[726,22900+14])
                                        Some
                                          expression (lambda/lambda.ml[726,22900+14]..[727,22955+58])
                                            Pexp_record
                                            [
                                              "ap_func" (lambda/lambda.ml[726,22900+23]..[726,22900+30])
                                                expression (lambda/lambda.ml[726,22900+33]..[726,22900+53])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[726,22900+33]..[726,22900+38])
                                                    Pexp_ident "subst" (lambda/lambda.ml[726,22900+33]..[726,22900+38])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[726,22900+39]..[726,22900+40])
                                                        Pexp_ident "s" (lambda/lambda.ml[726,22900+39]..[726,22900+40])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[726,22900+41]..[726,22900+42])
                                                        Pexp_ident "l" (lambda/lambda.ml[726,22900+41]..[726,22900+42])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[726,22900+43]..[726,22900+53])
                                                        Pexp_field
                                                        expression (lambda/lambda.ml[726,22900+43]..[726,22900+45])
                                                          Pexp_ident "ap" (lambda/lambda.ml[726,22900+43]..[726,22900+45])
                                                        "ap_func" (lambda/lambda.ml[726,22900+46]..[726,22900+53])
                                                  ]
                                              "ap_args" (lambda/lambda.ml[727,22955+22]..[727,22955+29])
                                                expression (lambda/lambda.ml[727,22955+32]..[727,22955+57])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[727,22955+32]..[727,22955+42])
                                                    Pexp_ident "subst_list" (lambda/lambda.ml[727,22955+32]..[727,22955+42])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[727,22955+43]..[727,22955+44])
                                                        Pexp_ident "s" (lambda/lambda.ml[727,22955+43]..[727,22955+44])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[727,22955+45]..[727,22955+46])
                                                        Pexp_ident "l" (lambda/lambda.ml[727,22955+45]..[727,22955+46])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[727,22955+47]..[727,22955+57])
                                                        Pexp_field
                                                        expression (lambda/lambda.ml[727,22955+47]..[727,22955+49])
                                                          Pexp_ident "ap" (lambda/lambda.ml[727,22955+47]..[727,22955+49])
                                                        "ap_args" (lambda/lambda.ml[727,22955+50]..[727,22955+57])
                                                  ]
                                            ]
                                            Some
                                              expression (lambda/lambda.ml[726,22900+15]..[726,22900+17])
                                                Pexp_ident "ap" (lambda/lambda.ml[726,22900+15]..[726,22900+17])
                                    <case>
                                      pattern (lambda/lambda.ml[728,23014+6]..[728,23014+18])
                                        Ppat_construct "Lfunction" (lambda/lambda.ml[728,23014+6]..[728,23014+15])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[728,23014+16]..[728,23014+18])
                                            Ppat_var "lf" (lambda/lambda.ml[728,23014+16]..[728,23014+18])
                                      expression (lambda/lambda.ml[729,23036+8]..[730,23086+61])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/lambda.ml[729,23036+12]..[729,23036+22])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/lambda.ml[729,23036+12]..[729,23036+18])
                                                  Ppat_var "params" (lambda/lambda.ml[729,23036+12]..[729,23036+18])
                                                pattern (lambda/lambda.ml[729,23036+20]..[729,23036+22])
                                                  Ppat_var "l'" (lambda/lambda.ml[729,23036+20]..[729,23036+22])
                                              ]
                                            expression (lambda/lambda.ml[729,23036+25]..[729,23036+46])
                                              Pexp_apply
                                              expression (lambda/lambda.ml[729,23036+25]..[729,23036+34])
                                                Pexp_ident "bind_many" (lambda/lambda.ml[729,23036+25]..[729,23036+34])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[729,23036+35]..[729,23036+44])
                                                    Pexp_field
                                                    expression (lambda/lambda.ml[729,23036+35]..[729,23036+37])
                                                      Pexp_ident "lf" (lambda/lambda.ml[729,23036+35]..[729,23036+37])
                                                    "params" (lambda/lambda.ml[729,23036+38]..[729,23036+44])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[729,23036+45]..[729,23036+46])
                                                    Pexp_ident "l" (lambda/lambda.ml[729,23036+45]..[729,23036+46])
                                              ]
                                        ]
                                        expression (lambda/lambda.ml[730,23086+8]..[730,23086+61])
                                          Pexp_construct "Lfunction" (lambda/lambda.ml[730,23086+8]..[730,23086+17])
                                          Some
                                            expression (lambda/lambda.ml[730,23086+18]..[730,23086+61])
                                              Pexp_record
                                              [
                                                "params" (lambda/lambda.ml[730,23086+27]..[730,23086+33]) ghost
                                                  expression (lambda/lambda.ml[730,23086+27]..[730,23086+33])
                                                    Pexp_ident "params" (lambda/lambda.ml[730,23086+27]..[730,23086+33])
                                                "body" (lambda/lambda.ml[730,23086+35]..[730,23086+39])
                                                  expression (lambda/lambda.ml[730,23086+42]..[730,23086+60])
                                                    Pexp_apply
                                                    expression (lambda/lambda.ml[730,23086+42]..[730,23086+47])
                                                      Pexp_ident "subst" (lambda/lambda.ml[730,23086+42]..[730,23086+47])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/lambda.ml[730,23086+48]..[730,23086+49])
                                                          Pexp_ident "s" (lambda/lambda.ml[730,23086+48]..[730,23086+49])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/lambda.ml[730,23086+50]..[730,23086+52])
                                                          Pexp_ident "l'" (lambda/lambda.ml[730,23086+50]..[730,23086+52])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/lambda.ml[730,23086+53]..[730,23086+60])
                                                          Pexp_field
                                                          expression (lambda/lambda.ml[730,23086+53]..[730,23086+55])
                                                            Pexp_ident "lf" (lambda/lambda.ml[730,23086+53]..[730,23086+55])
                                                          "body" (lambda/lambda.ml[730,23086+56]..[730,23086+60])
                                                    ]
                                              ]
                                              Some
                                                expression (lambda/lambda.ml[730,23086+19]..[730,23086+21])
                                                  Pexp_ident "lf" (lambda/lambda.ml[730,23086+19]..[730,23086+21])
                                    <case>
                                      pattern (lambda/lambda.ml[731,23148+6]..[731,23148+33])
                                        Ppat_construct "Llet" (lambda/lambda.ml[731,23148+6]..[731,23148+10])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[731,23148+10]..[731,23148+33])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/lambda.ml[731,23148+11]..[731,23148+14])
                                                Ppat_var "str" (lambda/lambda.ml[731,23148+11]..[731,23148+14])
                                              pattern (lambda/lambda.ml[731,23148+16]..[731,23148+17])
                                                Ppat_var "k" (lambda/lambda.ml[731,23148+16]..[731,23148+17])
                                              pattern (lambda/lambda.ml[731,23148+19]..[731,23148+21])
                                                Ppat_var "id" (lambda/lambda.ml[731,23148+19]..[731,23148+21])
                                              pattern (lambda/lambda.ml[731,23148+23]..[731,23148+26])
                                                Ppat_var "arg" (lambda/lambda.ml[731,23148+23]..[731,23148+26])
                                              pattern (lambda/lambda.ml[731,23148+28]..[731,23148+32])
                                                Ppat_var "body" (lambda/lambda.ml[731,23148+28]..[731,23148+32])
                                            ]
                                      expression (lambda/lambda.ml[732,23185+8]..[733,23219+56])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/lambda.ml[732,23185+12]..[732,23185+18])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/lambda.ml[732,23185+12]..[732,23185+14])
                                                  Ppat_var "id" (lambda/lambda.ml[732,23185+12]..[732,23185+14])
                                                pattern (lambda/lambda.ml[732,23185+16]..[732,23185+18])
                                                  Ppat_var "l'" (lambda/lambda.ml[732,23185+16]..[732,23185+18])
                                              ]
                                            expression (lambda/lambda.ml[732,23185+21]..[732,23185+30])
                                              Pexp_apply
                                              expression (lambda/lambda.ml[732,23185+21]..[732,23185+25])
                                                Pexp_ident "bind" (lambda/lambda.ml[732,23185+21]..[732,23185+25])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[732,23185+26]..[732,23185+28])
                                                    Pexp_ident "id" (lambda/lambda.ml[732,23185+26]..[732,23185+28])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[732,23185+29]..[732,23185+30])
                                                    Pexp_ident "l" (lambda/lambda.ml[732,23185+29]..[732,23185+30])
                                              ]
                                        ]
                                        expression (lambda/lambda.ml[733,23219+8]..[733,23219+56])
                                          Pexp_construct "Llet" (lambda/lambda.ml[733,23219+8]..[733,23219+12])
                                          Some
                                            expression (lambda/lambda.ml[733,23219+12]..[733,23219+56])
                                              Pexp_tuple
                                              [
                                                expression (lambda/lambda.ml[733,23219+13]..[733,23219+16])
                                                  Pexp_ident "str" (lambda/lambda.ml[733,23219+13]..[733,23219+16])
                                                expression (lambda/lambda.ml[733,23219+18]..[733,23219+19])
                                                  Pexp_ident "k" (lambda/lambda.ml[733,23219+18]..[733,23219+19])
                                                expression (lambda/lambda.ml[733,23219+21]..[733,23219+23])
                                                  Pexp_ident "id" (lambda/lambda.ml[733,23219+21]..[733,23219+23])
                                                expression (lambda/lambda.ml[733,23219+25]..[733,23219+38])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[733,23219+25]..[733,23219+30])
                                                    Pexp_ident "subst" (lambda/lambda.ml[733,23219+25]..[733,23219+30])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[733,23219+31]..[733,23219+32])
                                                        Pexp_ident "s" (lambda/lambda.ml[733,23219+31]..[733,23219+32])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[733,23219+33]..[733,23219+34])
                                                        Pexp_ident "l" (lambda/lambda.ml[733,23219+33]..[733,23219+34])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[733,23219+35]..[733,23219+38])
                                                        Pexp_ident "arg" (lambda/lambda.ml[733,23219+35]..[733,23219+38])
                                                  ]
                                                expression (lambda/lambda.ml[733,23219+40]..[733,23219+55])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[733,23219+40]..[733,23219+45])
                                                    Pexp_ident "subst" (lambda/lambda.ml[733,23219+40]..[733,23219+45])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[733,23219+46]..[733,23219+47])
                                                        Pexp_ident "s" (lambda/lambda.ml[733,23219+46]..[733,23219+47])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[733,23219+48]..[733,23219+50])
                                                        Pexp_ident "l'" (lambda/lambda.ml[733,23219+48]..[733,23219+50])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[733,23219+51]..[733,23219+55])
                                                        Pexp_ident "body" (lambda/lambda.ml[733,23219+51]..[733,23219+55])
                                                  ]
                                              ]
                                    <case>
                                      pattern (lambda/lambda.ml[734,23276+6]..[734,23276+31])
                                        Ppat_construct "Lmutlet" (lambda/lambda.ml[734,23276+6]..[734,23276+13])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[734,23276+13]..[734,23276+31])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/lambda.ml[734,23276+14]..[734,23276+15])
                                                Ppat_var "k" (lambda/lambda.ml[734,23276+14]..[734,23276+15])
                                              pattern (lambda/lambda.ml[734,23276+17]..[734,23276+19])
                                                Ppat_var "id" (lambda/lambda.ml[734,23276+17]..[734,23276+19])
                                              pattern (lambda/lambda.ml[734,23276+21]..[734,23276+24])
                                                Ppat_var "arg" (lambda/lambda.ml[734,23276+21]..[734,23276+24])
                                              pattern (lambda/lambda.ml[734,23276+26]..[734,23276+30])
                                                Ppat_var "body" (lambda/lambda.ml[734,23276+26]..[734,23276+30])
                                            ]
                                      expression (lambda/lambda.ml[735,23311+8]..[736,23345+54])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/lambda.ml[735,23311+12]..[735,23311+18])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/lambda.ml[735,23311+12]..[735,23311+14])
                                                  Ppat_var "id" (lambda/lambda.ml[735,23311+12]..[735,23311+14])
                                                pattern (lambda/lambda.ml[735,23311+16]..[735,23311+18])
                                                  Ppat_var "l'" (lambda/lambda.ml[735,23311+16]..[735,23311+18])
                                              ]
                                            expression (lambda/lambda.ml[735,23311+21]..[735,23311+30])
                                              Pexp_apply
                                              expression (lambda/lambda.ml[735,23311+21]..[735,23311+25])
                                                Pexp_ident "bind" (lambda/lambda.ml[735,23311+21]..[735,23311+25])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[735,23311+26]..[735,23311+28])
                                                    Pexp_ident "id" (lambda/lambda.ml[735,23311+26]..[735,23311+28])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[735,23311+29]..[735,23311+30])
                                                    Pexp_ident "l" (lambda/lambda.ml[735,23311+29]..[735,23311+30])
                                              ]
                                        ]
                                        expression (lambda/lambda.ml[736,23345+8]..[736,23345+54])
                                          Pexp_construct "Lmutlet" (lambda/lambda.ml[736,23345+8]..[736,23345+15])
                                          Some
                                            expression (lambda/lambda.ml[736,23345+15]..[736,23345+54])
                                              Pexp_tuple
                                              [
                                                expression (lambda/lambda.ml[736,23345+16]..[736,23345+17])
                                                  Pexp_ident "k" (lambda/lambda.ml[736,23345+16]..[736,23345+17])
                                                expression (lambda/lambda.ml[736,23345+19]..[736,23345+21])
                                                  Pexp_ident "id" (lambda/lambda.ml[736,23345+19]..[736,23345+21])
                                                expression (lambda/lambda.ml[736,23345+23]..[736,23345+36])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[736,23345+23]..[736,23345+28])
                                                    Pexp_ident "subst" (lambda/lambda.ml[736,23345+23]..[736,23345+28])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[736,23345+29]..[736,23345+30])
                                                        Pexp_ident "s" (lambda/lambda.ml[736,23345+29]..[736,23345+30])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[736,23345+31]..[736,23345+32])
                                                        Pexp_ident "l" (lambda/lambda.ml[736,23345+31]..[736,23345+32])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[736,23345+33]..[736,23345+36])
                                                        Pexp_ident "arg" (lambda/lambda.ml[736,23345+33]..[736,23345+36])
                                                  ]
                                                expression (lambda/lambda.ml[736,23345+38]..[736,23345+53])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[736,23345+38]..[736,23345+43])
                                                    Pexp_ident "subst" (lambda/lambda.ml[736,23345+38]..[736,23345+43])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[736,23345+44]..[736,23345+45])
                                                        Pexp_ident "s" (lambda/lambda.ml[736,23345+44]..[736,23345+45])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[736,23345+46]..[736,23345+48])
                                                        Pexp_ident "l'" (lambda/lambda.ml[736,23345+46]..[736,23345+48])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[736,23345+49]..[736,23345+53])
                                                        Pexp_ident "body" (lambda/lambda.ml[736,23345+49]..[736,23345+53])
                                                  ]
                                              ]
                                    <case>
                                      pattern (lambda/lambda.ml[737,23400+6]..[737,23400+25])
                                        Ppat_construct "Lletrec" (lambda/lambda.ml[737,23400+6]..[737,23400+13])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[737,23400+13]..[737,23400+25])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/lambda.ml[737,23400+14]..[737,23400+18])
                                                Ppat_var "decl" (lambda/lambda.ml[737,23400+14]..[737,23400+18])
                                              pattern (lambda/lambda.ml[737,23400+20]..[737,23400+24])
                                                Ppat_var "body" (lambda/lambda.ml[737,23400+20]..[737,23400+24])
                                            ]
                                      expression (lambda/lambda.ml[738,23429+8]..[739,23472+65])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/lambda.ml[738,23429+12]..[738,23429+20])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/lambda.ml[738,23429+12]..[738,23429+16])
                                                  Ppat_var "decl" (lambda/lambda.ml[738,23429+12]..[738,23429+16])
                                                pattern (lambda/lambda.ml[738,23429+18]..[738,23429+20])
                                                  Ppat_var "l'" (lambda/lambda.ml[738,23429+18]..[738,23429+20])
                                              ]
                                            expression (lambda/lambda.ml[738,23429+23]..[738,23429+39])
                                              Pexp_apply
                                              expression (lambda/lambda.ml[738,23429+23]..[738,23429+32])
                                                Pexp_ident "bind_many" (lambda/lambda.ml[738,23429+23]..[738,23429+32])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[738,23429+33]..[738,23429+37])
                                                    Pexp_ident "decl" (lambda/lambda.ml[738,23429+33]..[738,23429+37])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[738,23429+38]..[738,23429+39])
                                                    Pexp_ident "l" (lambda/lambda.ml[738,23429+38]..[738,23429+39])
                                              ]
                                        ]
                                        expression (lambda/lambda.ml[739,23472+8]..[739,23472+65])
                                          Pexp_construct "Lletrec" (lambda/lambda.ml[739,23472+8]..[739,23472+15])
                                          Some
                                            expression (lambda/lambda.ml[739,23472+15]..[739,23472+65])
                                              Pexp_tuple
                                              [
                                                expression (lambda/lambda.ml[739,23472+16]..[739,23472+47])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[739,23472+16]..[739,23472+24])
                                                    Pexp_ident "List.map" (lambda/lambda.ml[739,23472+16]..[739,23472+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[739,23472+25]..[739,23472+42])
                                                        Pexp_apply
                                                        expression (lambda/lambda.ml[739,23472+26]..[739,23472+36])
                                                          Pexp_ident "subst_decl" (lambda/lambda.ml[739,23472+26]..[739,23472+36])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/lambda.ml[739,23472+37]..[739,23472+38])
                                                              Pexp_ident "s" (lambda/lambda.ml[739,23472+37]..[739,23472+38])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/lambda.ml[739,23472+39]..[739,23472+41])
                                                              Pexp_ident "l'" (lambda/lambda.ml[739,23472+39]..[739,23472+41])
                                                        ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[739,23472+43]..[739,23472+47])
                                                        Pexp_ident "decl" (lambda/lambda.ml[739,23472+43]..[739,23472+47])
                                                  ]
                                                expression (lambda/lambda.ml[739,23472+49]..[739,23472+64])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[739,23472+49]..[739,23472+54])
                                                    Pexp_ident "subst" (lambda/lambda.ml[739,23472+49]..[739,23472+54])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[739,23472+55]..[739,23472+56])
                                                        Pexp_ident "s" (lambda/lambda.ml[739,23472+55]..[739,23472+56])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[739,23472+57]..[739,23472+59])
                                                        Pexp_ident "l'" (lambda/lambda.ml[739,23472+57]..[739,23472+59])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[739,23472+60]..[739,23472+64])
                                                        Pexp_ident "body" (lambda/lambda.ml[739,23472+60]..[739,23472+64])
                                                  ]
                                              ]
                                    <case>
                                      pattern (lambda/lambda.ml[740,23538+6]..[740,23538+25])
                                        Ppat_construct "Lprim" (lambda/lambda.ml[740,23538+6]..[740,23538+11])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[740,23538+11]..[740,23538+25])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/lambda.ml[740,23538+12]..[740,23538+13])
                                                Ppat_var "p" (lambda/lambda.ml[740,23538+12]..[740,23538+13])
                                              pattern (lambda/lambda.ml[740,23538+15]..[740,23538+19])
                                                Ppat_var "args" (lambda/lambda.ml[740,23538+15]..[740,23538+19])
                                              pattern (lambda/lambda.ml[740,23538+21]..[740,23538+24])
                                                Ppat_var "loc" (lambda/lambda.ml[740,23538+21]..[740,23538+24])
                                            ]
                                      expression (lambda/lambda.ml[740,23538+29]..[740,23538+63])
                                        Pexp_construct "Lprim" (lambda/lambda.ml[740,23538+29]..[740,23538+34])
                                        Some
                                          expression (lambda/lambda.ml[740,23538+34]..[740,23538+63])
                                            Pexp_tuple
                                            [
                                              expression (lambda/lambda.ml[740,23538+35]..[740,23538+36])
                                                Pexp_ident "p" (lambda/lambda.ml[740,23538+35]..[740,23538+36])
                                              expression (lambda/lambda.ml[740,23538+38]..[740,23538+57])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[740,23538+38]..[740,23538+48])
                                                  Pexp_ident "subst_list" (lambda/lambda.ml[740,23538+38]..[740,23538+48])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[740,23538+49]..[740,23538+50])
                                                      Pexp_ident "s" (lambda/lambda.ml[740,23538+49]..[740,23538+50])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[740,23538+51]..[740,23538+52])
                                                      Pexp_ident "l" (lambda/lambda.ml[740,23538+51]..[740,23538+52])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[740,23538+53]..[740,23538+57])
                                                      Pexp_ident "args" (lambda/lambda.ml[740,23538+53]..[740,23538+57])
                                                ]
                                              expression (lambda/lambda.ml[740,23538+59]..[740,23538+62])
                                                Pexp_ident "loc" (lambda/lambda.ml[740,23538+59]..[740,23538+62])
                                            ]
                                    <case>
                                      pattern (lambda/lambda.ml[741,23602+6]..[741,23602+27])
                                        Ppat_construct "Lswitch" (lambda/lambda.ml[741,23602+6]..[741,23602+13])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[741,23602+13]..[741,23602+27])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/lambda.ml[741,23602+14]..[741,23602+17])
                                                Ppat_var "arg" (lambda/lambda.ml[741,23602+14]..[741,23602+17])
                                              pattern (lambda/lambda.ml[741,23602+19]..[741,23602+21])
                                                Ppat_var "sw" (lambda/lambda.ml[741,23602+19]..[741,23602+21])
                                              pattern (lambda/lambda.ml[741,23602+23]..[741,23602+26])
                                                Ppat_var "loc" (lambda/lambda.ml[741,23602+23]..[741,23602+26])
                                            ]
                                      expression (lambda/lambda.ml[742,23633+8]..[746,23892+20])
                                        Pexp_construct "Lswitch" (lambda/lambda.ml[742,23633+8]..[742,23633+15])
                                        Some
                                          expression (lambda/lambda.ml[742,23633+15]..[746,23892+20])
                                            Pexp_tuple
                                            [
                                              expression (lambda/lambda.ml[742,23633+16]..[742,23633+29])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[742,23633+16]..[742,23633+21])
                                                  Pexp_ident "subst" (lambda/lambda.ml[742,23633+16]..[742,23633+21])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[742,23633+22]..[742,23633+23])
                                                      Pexp_ident "s" (lambda/lambda.ml[742,23633+22]..[742,23633+23])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[742,23633+24]..[742,23633+25])
                                                      Pexp_ident "l" (lambda/lambda.ml[742,23633+24]..[742,23633+25])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[742,23633+26]..[742,23633+29])
                                                      Pexp_ident "arg" (lambda/lambda.ml[742,23633+26]..[742,23633+29])
                                                ]
                                              expression (lambda/lambda.ml[743,23664+16]..[745,23817+73])
                                                Pexp_record
                                                [
                                                  "sw_consts" (lambda/lambda.ml[743,23664+25]..[743,23664+34])
                                                    expression (lambda/lambda.ml[743,23664+37]..[743,23664+75])
                                                      Pexp_apply
                                                      expression (lambda/lambda.ml[743,23664+37]..[743,23664+45])
                                                        Pexp_ident "List.map" (lambda/lambda.ml[743,23664+37]..[743,23664+45])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[743,23664+46]..[743,23664+62])
                                                            Pexp_apply
                                                            expression (lambda/lambda.ml[743,23664+47]..[743,23664+57])
                                                              Pexp_ident "subst_case" (lambda/lambda.ml[743,23664+47]..[743,23664+57])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/lambda.ml[743,23664+58]..[743,23664+59])
                                                                  Pexp_ident "s" (lambda/lambda.ml[743,23664+58]..[743,23664+59])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/lambda.ml[743,23664+60]..[743,23664+61])
                                                                  Pexp_ident "l" (lambda/lambda.ml[743,23664+60]..[743,23664+61])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[743,23664+63]..[743,23664+75])
                                                            Pexp_field
                                                            expression (lambda/lambda.ml[743,23664+63]..[743,23664+65])
                                                              Pexp_ident "sw" (lambda/lambda.ml[743,23664+63]..[743,23664+65])
                                                            "sw_consts" (lambda/lambda.ml[743,23664+66]..[743,23664+75])
                                                      ]
                                                  "sw_blocks" (lambda/lambda.ml[744,23741+24]..[744,23741+33])
                                                    expression (lambda/lambda.ml[744,23741+36]..[744,23741+74])
                                                      Pexp_apply
                                                      expression (lambda/lambda.ml[744,23741+36]..[744,23741+44])
                                                        Pexp_ident "List.map" (lambda/lambda.ml[744,23741+36]..[744,23741+44])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[744,23741+45]..[744,23741+61])
                                                            Pexp_apply
                                                            expression (lambda/lambda.ml[744,23741+46]..[744,23741+56])
                                                              Pexp_ident "subst_case" (lambda/lambda.ml[744,23741+46]..[744,23741+56])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/lambda.ml[744,23741+57]..[744,23741+58])
                                                                  Pexp_ident "s" (lambda/lambda.ml[744,23741+57]..[744,23741+58])
                                                              <arg>
                                                              Nolabel
                                                                expression (lambda/lambda.ml[744,23741+59]..[744,23741+60])
                                                                  Pexp_ident "l" (lambda/lambda.ml[744,23741+59]..[744,23741+60])
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[744,23741+62]..[744,23741+74])
                                                            Pexp_field
                                                            expression (lambda/lambda.ml[744,23741+62]..[744,23741+64])
                                                              Pexp_ident "sw" (lambda/lambda.ml[744,23741+62]..[744,23741+64])
                                                            "sw_blocks" (lambda/lambda.ml[744,23741+65]..[744,23741+74])
                                                      ]
                                                  "sw_failaction" (lambda/lambda.ml[745,23817+24]..[745,23817+37])
                                                    expression (lambda/lambda.ml[745,23817+40]..[745,23817+70])
                                                      Pexp_apply
                                                      expression (lambda/lambda.ml[745,23817+40]..[745,23817+49])
                                                        Pexp_ident "subst_opt" (lambda/lambda.ml[745,23817+40]..[745,23817+49])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[745,23817+50]..[745,23817+51])
                                                            Pexp_ident "s" (lambda/lambda.ml[745,23817+50]..[745,23817+51])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[745,23817+52]..[745,23817+53])
                                                            Pexp_ident "l" (lambda/lambda.ml[745,23817+52]..[745,23817+53])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[745,23817+54]..[745,23817+70])
                                                            Pexp_field
                                                            expression (lambda/lambda.ml[745,23817+54]..[745,23817+56])
                                                              Pexp_ident "sw" (lambda/lambda.ml[745,23817+54]..[745,23817+56])
                                                            "sw_failaction" (lambda/lambda.ml[745,23817+57]..[745,23817+70])
                                                      ]
                                                ]
                                                Some
                                                  expression (lambda/lambda.ml[743,23664+17]..[743,23664+19])
                                                    Pexp_ident "sw" (lambda/lambda.ml[743,23664+17]..[743,23664+19])
                                              expression (lambda/lambda.ml[746,23892+16]..[746,23892+19])
                                                Pexp_ident "loc" (lambda/lambda.ml[746,23892+16]..[746,23892+19])
                                            ]
                                    <case>
                                      pattern (lambda/lambda.ml[747,23913+6]..[747,23913+43])
                                        Ppat_construct "Lstringswitch" (lambda/lambda.ml[747,23913+6]..[747,23913+19])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[747,23913+20]..[747,23913+43])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/lambda.ml[747,23913+21]..[747,23913+24])
                                                Ppat_var "arg" (lambda/lambda.ml[747,23913+21]..[747,23913+24])
                                              pattern (lambda/lambda.ml[747,23913+25]..[747,23913+30])
                                                Ppat_var "cases" (lambda/lambda.ml[747,23913+25]..[747,23913+30])
                                              pattern (lambda/lambda.ml[747,23913+31]..[747,23913+38])
                                                Ppat_var "default" (lambda/lambda.ml[747,23913+31]..[747,23913+38])
                                              pattern (lambda/lambda.ml[747,23913+39]..[747,23913+42])
                                                Ppat_var "loc" (lambda/lambda.ml[747,23913+39]..[747,23913+42])
                                            ]
                                      expression (lambda/lambda.ml[748,23960+8]..[752,24089+15])
                                        Pexp_construct "Lstringswitch" (lambda/lambda.ml[748,23960+8]..[748,23960+21])
                                        Some
                                          expression (lambda/lambda.ml[749,23982+10]..[752,24089+15])
                                            Pexp_tuple
                                            [
                                              expression (lambda/lambda.ml[749,23982+11]..[749,23982+24])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[749,23982+11]..[749,23982+16])
                                                  Pexp_ident "subst" (lambda/lambda.ml[749,23982+11]..[749,23982+16])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[749,23982+17]..[749,23982+18])
                                                      Pexp_ident "s" (lambda/lambda.ml[749,23982+17]..[749,23982+18])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[749,23982+19]..[749,23982+20])
                                                      Pexp_ident "l" (lambda/lambda.ml[749,23982+19]..[749,23982+20])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[749,23982+21]..[749,23982+24])
                                                      Pexp_ident "arg" (lambda/lambda.ml[749,23982+21]..[749,23982+24])
                                                ]
                                              expression (lambda/lambda.ml[750,24008+11]..[750,24008+45])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[750,24008+11]..[750,24008+19])
                                                  Pexp_ident "List.map" (lambda/lambda.ml[750,24008+11]..[750,24008+19])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[750,24008+20]..[750,24008+39])
                                                      Pexp_apply
                                                      expression (lambda/lambda.ml[750,24008+21]..[750,24008+34])
                                                        Pexp_ident "subst_strcase" (lambda/lambda.ml[750,24008+21]..[750,24008+34])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[750,24008+35]..[750,24008+36])
                                                            Pexp_ident "s" (lambda/lambda.ml[750,24008+35]..[750,24008+36])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[750,24008+37]..[750,24008+38])
                                                            Pexp_ident "l" (lambda/lambda.ml[750,24008+37]..[750,24008+38])
                                                      ]
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[750,24008+40]..[750,24008+45])
                                                      Pexp_ident "cases" (lambda/lambda.ml[750,24008+40]..[750,24008+45])
                                                ]
                                              expression (lambda/lambda.ml[751,24055+11]..[751,24055+32])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[751,24055+11]..[751,24055+20])
                                                  Pexp_ident "subst_opt" (lambda/lambda.ml[751,24055+11]..[751,24055+20])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[751,24055+21]..[751,24055+22])
                                                      Pexp_ident "s" (lambda/lambda.ml[751,24055+21]..[751,24055+22])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[751,24055+23]..[751,24055+24])
                                                      Pexp_ident "l" (lambda/lambda.ml[751,24055+23]..[751,24055+24])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[751,24055+25]..[751,24055+32])
                                                      Pexp_ident "default" (lambda/lambda.ml[751,24055+25]..[751,24055+32])
                                                ]
                                              expression (lambda/lambda.ml[752,24089+11]..[752,24089+14])
                                                Pexp_ident "loc" (lambda/lambda.ml[752,24089+11]..[752,24089+14])
                                            ]
                                    <case>
                                      pattern (lambda/lambda.ml[753,24105+6]..[753,24105+27])
                                        Ppat_construct "Lstaticraise" (lambda/lambda.ml[753,24105+6]..[753,24105+18])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[753,24105+19]..[753,24105+27])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/lambda.ml[753,24105+20]..[753,24105+21])
                                                Ppat_var "i" (lambda/lambda.ml[753,24105+20]..[753,24105+21])
                                              pattern (lambda/lambda.ml[753,24105+22]..[753,24105+26])
                                                Ppat_var "args" (lambda/lambda.ml[753,24105+22]..[753,24105+26])
                                            ]
                                      expression (lambda/lambda.ml[753,24105+32]..[753,24105+69])
                                        Pexp_construct "Lstaticraise" (lambda/lambda.ml[753,24105+32]..[753,24105+44])
                                        Some
                                          expression (lambda/lambda.ml[753,24105+45]..[753,24105+69])
                                            Pexp_tuple
                                            [
                                              expression (lambda/lambda.ml[753,24105+46]..[753,24105+47])
                                                Pexp_ident "i" (lambda/lambda.ml[753,24105+46]..[753,24105+47])
                                              expression (lambda/lambda.ml[753,24105+49]..[753,24105+68])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[753,24105+49]..[753,24105+59])
                                                  Pexp_ident "subst_list" (lambda/lambda.ml[753,24105+49]..[753,24105+59])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[753,24105+60]..[753,24105+61])
                                                      Pexp_ident "s" (lambda/lambda.ml[753,24105+60]..[753,24105+61])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[753,24105+62]..[753,24105+63])
                                                      Pexp_ident "l" (lambda/lambda.ml[753,24105+62]..[753,24105+63])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[753,24105+64]..[753,24105+68])
                                                      Pexp_ident "args" (lambda/lambda.ml[753,24105+64]..[753,24105+68])
                                                ]
                                            ]
                                    <case>
                                      pattern (lambda/lambda.ml[754,24175+6]..[754,24175+47])
                                        Ppat_construct "Lstaticcatch" (lambda/lambda.ml[754,24175+6]..[754,24175+18])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[754,24175+18]..[754,24175+47])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/lambda.ml[754,24175+19]..[754,24175+23])
                                                Ppat_var "body" (lambda/lambda.ml[754,24175+19]..[754,24175+23])
                                              pattern (lambda/lambda.ml[754,24175+25]..[754,24175+37])
                                                Ppat_tuple
                                                [
                                                  pattern (lambda/lambda.ml[754,24175+26]..[754,24175+28])
                                                    Ppat_var "id" (lambda/lambda.ml[754,24175+26]..[754,24175+28])
                                                  pattern (lambda/lambda.ml[754,24175+30]..[754,24175+36])
                                                    Ppat_var "params" (lambda/lambda.ml[754,24175+30]..[754,24175+36])
                                                ]
                                              pattern (lambda/lambda.ml[754,24175+39]..[754,24175+46])
                                                Ppat_var "handler" (lambda/lambda.ml[754,24175+39]..[754,24175+46])
                                            ]
                                      expression (lambda/lambda.ml[755,24226+8]..[757,24324+40])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/lambda.ml[755,24226+12]..[755,24226+22])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/lambda.ml[755,24226+12]..[755,24226+18])
                                                  Ppat_var "params" (lambda/lambda.ml[755,24226+12]..[755,24226+18])
                                                pattern (lambda/lambda.ml[755,24226+20]..[755,24226+22])
                                                  Ppat_var "l'" (lambda/lambda.ml[755,24226+20]..[755,24226+22])
                                              ]
                                            expression (lambda/lambda.ml[755,24226+25]..[755,24226+43])
                                              Pexp_apply
                                              expression (lambda/lambda.ml[755,24226+25]..[755,24226+34])
                                                Pexp_ident "bind_many" (lambda/lambda.ml[755,24226+25]..[755,24226+34])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[755,24226+35]..[755,24226+41])
                                                    Pexp_ident "params" (lambda/lambda.ml[755,24226+35]..[755,24226+41])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[755,24226+42]..[755,24226+43])
                                                    Pexp_ident "l" (lambda/lambda.ml[755,24226+42]..[755,24226+43])
                                              ]
                                        ]
                                        expression (lambda/lambda.ml[756,24273+8]..[757,24324+40])
                                          Pexp_construct "Lstaticcatch" (lambda/lambda.ml[756,24273+8]..[756,24273+20])
                                          Some
                                            expression (lambda/lambda.ml[756,24273+20]..[757,24324+40])
                                              Pexp_tuple
                                              [
                                                expression (lambda/lambda.ml[756,24273+21]..[756,24273+35])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[756,24273+21]..[756,24273+26])
                                                    Pexp_ident "subst" (lambda/lambda.ml[756,24273+21]..[756,24273+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[756,24273+27]..[756,24273+28])
                                                        Pexp_ident "s" (lambda/lambda.ml[756,24273+27]..[756,24273+28])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[756,24273+29]..[756,24273+30])
                                                        Pexp_ident "l" (lambda/lambda.ml[756,24273+29]..[756,24273+30])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[756,24273+31]..[756,24273+35])
                                                        Pexp_ident "body" (lambda/lambda.ml[756,24273+31]..[756,24273+35])
                                                  ]
                                                expression (lambda/lambda.ml[756,24273+37]..[756,24273+49])
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/lambda.ml[756,24273+38]..[756,24273+40])
                                                      Pexp_ident "id" (lambda/lambda.ml[756,24273+38]..[756,24273+40])
                                                    expression (lambda/lambda.ml[756,24273+42]..[756,24273+48])
                                                      Pexp_ident "params" (lambda/lambda.ml[756,24273+42]..[756,24273+48])
                                                  ]
                                                expression (lambda/lambda.ml[757,24324+21]..[757,24324+39])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[757,24324+21]..[757,24324+26])
                                                    Pexp_ident "subst" (lambda/lambda.ml[757,24324+21]..[757,24324+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[757,24324+27]..[757,24324+28])
                                                        Pexp_ident "s" (lambda/lambda.ml[757,24324+27]..[757,24324+28])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[757,24324+29]..[757,24324+31])
                                                        Pexp_ident "l'" (lambda/lambda.ml[757,24324+29]..[757,24324+31])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[757,24324+32]..[757,24324+39])
                                                        Pexp_ident "handler" (lambda/lambda.ml[757,24324+32]..[757,24324+39])
                                                  ]
                                              ]
                                    <case>
                                      pattern (lambda/lambda.ml[758,24365+6]..[758,24365+34])
                                        Ppat_construct "Ltrywith" (lambda/lambda.ml[758,24365+6]..[758,24365+14])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[758,24365+14]..[758,24365+34])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/lambda.ml[758,24365+15]..[758,24365+19])
                                                Ppat_var "body" (lambda/lambda.ml[758,24365+15]..[758,24365+19])
                                              pattern (lambda/lambda.ml[758,24365+21]..[758,24365+24])
                                                Ppat_var "exn" (lambda/lambda.ml[758,24365+21]..[758,24365+24])
                                              pattern (lambda/lambda.ml[758,24365+26]..[758,24365+33])
                                                Ppat_var "handler" (lambda/lambda.ml[758,24365+26]..[758,24365+33])
                                            ]
                                      expression (lambda/lambda.ml[759,24403+8]..[760,24439+57])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/lambda.ml[759,24403+12]..[759,24403+19])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/lambda.ml[759,24403+12]..[759,24403+15])
                                                  Ppat_var "exn" (lambda/lambda.ml[759,24403+12]..[759,24403+15])
                                                pattern (lambda/lambda.ml[759,24403+17]..[759,24403+19])
                                                  Ppat_var "l'" (lambda/lambda.ml[759,24403+17]..[759,24403+19])
                                              ]
                                            expression (lambda/lambda.ml[759,24403+22]..[759,24403+32])
                                              Pexp_apply
                                              expression (lambda/lambda.ml[759,24403+22]..[759,24403+26])
                                                Pexp_ident "bind" (lambda/lambda.ml[759,24403+22]..[759,24403+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[759,24403+27]..[759,24403+30])
                                                    Pexp_ident "exn" (lambda/lambda.ml[759,24403+27]..[759,24403+30])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[759,24403+31]..[759,24403+32])
                                                    Pexp_ident "l" (lambda/lambda.ml[759,24403+31]..[759,24403+32])
                                              ]
                                        ]
                                        expression (lambda/lambda.ml[760,24439+8]..[760,24439+57])
                                          Pexp_construct "Ltrywith" (lambda/lambda.ml[760,24439+8]..[760,24439+16])
                                          Some
                                            expression (lambda/lambda.ml[760,24439+16]..[760,24439+57])
                                              Pexp_tuple
                                              [
                                                expression (lambda/lambda.ml[760,24439+17]..[760,24439+31])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[760,24439+17]..[760,24439+22])
                                                    Pexp_ident "subst" (lambda/lambda.ml[760,24439+17]..[760,24439+22])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[760,24439+23]..[760,24439+24])
                                                        Pexp_ident "s" (lambda/lambda.ml[760,24439+23]..[760,24439+24])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[760,24439+25]..[760,24439+26])
                                                        Pexp_ident "l" (lambda/lambda.ml[760,24439+25]..[760,24439+26])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[760,24439+27]..[760,24439+31])
                                                        Pexp_ident "body" (lambda/lambda.ml[760,24439+27]..[760,24439+31])
                                                  ]
                                                expression (lambda/lambda.ml[760,24439+33]..[760,24439+36])
                                                  Pexp_ident "exn" (lambda/lambda.ml[760,24439+33]..[760,24439+36])
                                                expression (lambda/lambda.ml[760,24439+38]..[760,24439+56])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[760,24439+38]..[760,24439+43])
                                                    Pexp_ident "subst" (lambda/lambda.ml[760,24439+38]..[760,24439+43])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[760,24439+44]..[760,24439+45])
                                                        Pexp_ident "s" (lambda/lambda.ml[760,24439+44]..[760,24439+45])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[760,24439+46]..[760,24439+48])
                                                        Pexp_ident "l'" (lambda/lambda.ml[760,24439+46]..[760,24439+48])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[760,24439+49]..[760,24439+56])
                                                        Pexp_ident "handler" (lambda/lambda.ml[760,24439+49]..[760,24439+56])
                                                  ]
                                              ]
                                    <case>
                                      pattern (lambda/lambda.ml[761,24497+6]..[761,24497+29])
                                        Ppat_construct "Lifthenelse" (lambda/lambda.ml[761,24497+6]..[761,24497+17])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[761,24497+17]..[761,24497+29])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/lambda.ml[761,24497+18]..[761,24497+20])
                                                Ppat_var "e1" (lambda/lambda.ml[761,24497+18]..[761,24497+20])
                                              pattern (lambda/lambda.ml[761,24497+22]..[761,24497+24])
                                                Ppat_var "e2" (lambda/lambda.ml[761,24497+22]..[761,24497+24])
                                              pattern (lambda/lambda.ml[761,24497+26]..[761,24497+28])
                                                Ppat_var "e3" (lambda/lambda.ml[761,24497+26]..[761,24497+28])
                                            ]
                                      expression (lambda/lambda.ml[762,24530+8]..[762,24530+61])
                                        Pexp_construct "Lifthenelse" (lambda/lambda.ml[762,24530+8]..[762,24530+19])
                                        Some
                                          expression (lambda/lambda.ml[762,24530+19]..[762,24530+61])
                                            Pexp_tuple
                                            [
                                              expression (lambda/lambda.ml[762,24530+20]..[762,24530+32])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[762,24530+20]..[762,24530+25])
                                                  Pexp_ident "subst" (lambda/lambda.ml[762,24530+20]..[762,24530+25])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[762,24530+26]..[762,24530+27])
                                                      Pexp_ident "s" (lambda/lambda.ml[762,24530+26]..[762,24530+27])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[762,24530+28]..[762,24530+29])
                                                      Pexp_ident "l" (lambda/lambda.ml[762,24530+28]..[762,24530+29])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[762,24530+30]..[762,24530+32])
                                                      Pexp_ident "e1" (lambda/lambda.ml[762,24530+30]..[762,24530+32])
                                                ]
                                              expression (lambda/lambda.ml[762,24530+34]..[762,24530+46])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[762,24530+34]..[762,24530+39])
                                                  Pexp_ident "subst" (lambda/lambda.ml[762,24530+34]..[762,24530+39])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[762,24530+40]..[762,24530+41])
                                                      Pexp_ident "s" (lambda/lambda.ml[762,24530+40]..[762,24530+41])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[762,24530+42]..[762,24530+43])
                                                      Pexp_ident "l" (lambda/lambda.ml[762,24530+42]..[762,24530+43])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[762,24530+44]..[762,24530+46])
                                                      Pexp_ident "e2" (lambda/lambda.ml[762,24530+44]..[762,24530+46])
                                                ]
                                              expression (lambda/lambda.ml[762,24530+48]..[762,24530+60])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[762,24530+48]..[762,24530+53])
                                                  Pexp_ident "subst" (lambda/lambda.ml[762,24530+48]..[762,24530+53])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[762,24530+54]..[762,24530+55])
                                                      Pexp_ident "s" (lambda/lambda.ml[762,24530+54]..[762,24530+55])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[762,24530+56]..[762,24530+57])
                                                      Pexp_ident "l" (lambda/lambda.ml[762,24530+56]..[762,24530+57])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[762,24530+58]..[762,24530+60])
                                                      Pexp_ident "e3" (lambda/lambda.ml[762,24530+58]..[762,24530+60])
                                                ]
                                            ]
                                    <case>
                                      pattern (lambda/lambda.ml[763,24592+6]..[763,24592+23])
                                        Ppat_construct "Lsequence" (lambda/lambda.ml[763,24592+6]..[763,24592+15])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[763,24592+15]..[763,24592+23])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/lambda.ml[763,24592+16]..[763,24592+18])
                                                Ppat_var "e1" (lambda/lambda.ml[763,24592+16]..[763,24592+18])
                                              pattern (lambda/lambda.ml[763,24592+20]..[763,24592+22])
                                                Ppat_var "e2" (lambda/lambda.ml[763,24592+20]..[763,24592+22])
                                            ]
                                      expression (lambda/lambda.ml[763,24592+27]..[763,24592+64])
                                        Pexp_construct "Lsequence" (lambda/lambda.ml[763,24592+27]..[763,24592+36])
                                        Some
                                          expression (lambda/lambda.ml[763,24592+36]..[763,24592+64])
                                            Pexp_tuple
                                            [
                                              expression (lambda/lambda.ml[763,24592+37]..[763,24592+49])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[763,24592+37]..[763,24592+42])
                                                  Pexp_ident "subst" (lambda/lambda.ml[763,24592+37]..[763,24592+42])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[763,24592+43]..[763,24592+44])
                                                      Pexp_ident "s" (lambda/lambda.ml[763,24592+43]..[763,24592+44])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[763,24592+45]..[763,24592+46])
                                                      Pexp_ident "l" (lambda/lambda.ml[763,24592+45]..[763,24592+46])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[763,24592+47]..[763,24592+49])
                                                      Pexp_ident "e1" (lambda/lambda.ml[763,24592+47]..[763,24592+49])
                                                ]
                                              expression (lambda/lambda.ml[763,24592+51]..[763,24592+63])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[763,24592+51]..[763,24592+56])
                                                  Pexp_ident "subst" (lambda/lambda.ml[763,24592+51]..[763,24592+56])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[763,24592+57]..[763,24592+58])
                                                      Pexp_ident "s" (lambda/lambda.ml[763,24592+57]..[763,24592+58])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[763,24592+59]..[763,24592+60])
                                                      Pexp_ident "l" (lambda/lambda.ml[763,24592+59]..[763,24592+60])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[763,24592+61]..[763,24592+63])
                                                      Pexp_ident "e2" (lambda/lambda.ml[763,24592+61]..[763,24592+63])
                                                ]
                                            ]
                                    <case>
                                      pattern (lambda/lambda.ml[764,24657+6]..[764,24657+20])
                                        Ppat_construct "Lwhile" (lambda/lambda.ml[764,24657+6]..[764,24657+12])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[764,24657+12]..[764,24657+20])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/lambda.ml[764,24657+13]..[764,24657+15])
                                                Ppat_var "e1" (lambda/lambda.ml[764,24657+13]..[764,24657+15])
                                              pattern (lambda/lambda.ml[764,24657+17]..[764,24657+19])
                                                Ppat_var "e2" (lambda/lambda.ml[764,24657+17]..[764,24657+19])
                                            ]
                                      expression (lambda/lambda.ml[764,24657+24]..[764,24657+58])
                                        Pexp_construct "Lwhile" (lambda/lambda.ml[764,24657+24]..[764,24657+30])
                                        Some
                                          expression (lambda/lambda.ml[764,24657+30]..[764,24657+58])
                                            Pexp_tuple
                                            [
                                              expression (lambda/lambda.ml[764,24657+31]..[764,24657+43])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[764,24657+31]..[764,24657+36])
                                                  Pexp_ident "subst" (lambda/lambda.ml[764,24657+31]..[764,24657+36])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[764,24657+37]..[764,24657+38])
                                                      Pexp_ident "s" (lambda/lambda.ml[764,24657+37]..[764,24657+38])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[764,24657+39]..[764,24657+40])
                                                      Pexp_ident "l" (lambda/lambda.ml[764,24657+39]..[764,24657+40])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[764,24657+41]..[764,24657+43])
                                                      Pexp_ident "e1" (lambda/lambda.ml[764,24657+41]..[764,24657+43])
                                                ]
                                              expression (lambda/lambda.ml[764,24657+45]..[764,24657+57])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[764,24657+45]..[764,24657+50])
                                                  Pexp_ident "subst" (lambda/lambda.ml[764,24657+45]..[764,24657+50])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[764,24657+51]..[764,24657+52])
                                                      Pexp_ident "s" (lambda/lambda.ml[764,24657+51]..[764,24657+52])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[764,24657+53]..[764,24657+54])
                                                      Pexp_ident "l" (lambda/lambda.ml[764,24657+53]..[764,24657+54])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[764,24657+55]..[764,24657+57])
                                                      Pexp_ident "e2" (lambda/lambda.ml[764,24657+55]..[764,24657+57])
                                                ]
                                            ]
                                    <case>
                                      pattern (lambda/lambda.ml[765,24716+6]..[765,24716+32])
                                        Ppat_construct "Lfor" (lambda/lambda.ml[765,24716+6]..[765,24716+10])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[765,24716+10]..[765,24716+32])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/lambda.ml[765,24716+11]..[765,24716+12])
                                                Ppat_var "v" (lambda/lambda.ml[765,24716+11]..[765,24716+12])
                                              pattern (lambda/lambda.ml[765,24716+14]..[765,24716+16])
                                                Ppat_var "lo" (lambda/lambda.ml[765,24716+14]..[765,24716+16])
                                              pattern (lambda/lambda.ml[765,24716+18]..[765,24716+20])
                                                Ppat_var "hi" (lambda/lambda.ml[765,24716+18]..[765,24716+20])
                                              pattern (lambda/lambda.ml[765,24716+22]..[765,24716+25])
                                                Ppat_var "dir" (lambda/lambda.ml[765,24716+22]..[765,24716+25])
                                              pattern (lambda/lambda.ml[765,24716+27]..[765,24716+31])
                                                Ppat_var "body" (lambda/lambda.ml[765,24716+27]..[765,24716+31])
                                            ]
                                      expression (lambda/lambda.ml[766,24752+8]..[767,24784+65])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/lambda.ml[766,24752+12]..[766,24752+17])
                                              Ppat_tuple
                                              [
                                                pattern (lambda/lambda.ml[766,24752+12]..[766,24752+13])
                                                  Ppat_var "v" (lambda/lambda.ml[766,24752+12]..[766,24752+13])
                                                pattern (lambda/lambda.ml[766,24752+15]..[766,24752+17])
                                                  Ppat_var "l'" (lambda/lambda.ml[766,24752+15]..[766,24752+17])
                                              ]
                                            expression (lambda/lambda.ml[766,24752+20]..[766,24752+28])
                                              Pexp_apply
                                              expression (lambda/lambda.ml[766,24752+20]..[766,24752+24])
                                                Pexp_ident "bind" (lambda/lambda.ml[766,24752+20]..[766,24752+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[766,24752+25]..[766,24752+26])
                                                    Pexp_ident "v" (lambda/lambda.ml[766,24752+25]..[766,24752+26])
                                                <arg>
                                                Nolabel
                                                  expression (lambda/lambda.ml[766,24752+27]..[766,24752+28])
                                                    Pexp_ident "l" (lambda/lambda.ml[766,24752+27]..[766,24752+28])
                                              ]
                                        ]
                                        expression (lambda/lambda.ml[767,24784+8]..[767,24784+65])
                                          Pexp_construct "Lfor" (lambda/lambda.ml[767,24784+8]..[767,24784+12])
                                          Some
                                            expression (lambda/lambda.ml[767,24784+12]..[767,24784+65])
                                              Pexp_tuple
                                              [
                                                expression (lambda/lambda.ml[767,24784+13]..[767,24784+14])
                                                  Pexp_ident "v" (lambda/lambda.ml[767,24784+13]..[767,24784+14])
                                                expression (lambda/lambda.ml[767,24784+16]..[767,24784+28])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[767,24784+16]..[767,24784+21])
                                                    Pexp_ident "subst" (lambda/lambda.ml[767,24784+16]..[767,24784+21])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[767,24784+22]..[767,24784+23])
                                                        Pexp_ident "s" (lambda/lambda.ml[767,24784+22]..[767,24784+23])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[767,24784+24]..[767,24784+25])
                                                        Pexp_ident "l" (lambda/lambda.ml[767,24784+24]..[767,24784+25])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[767,24784+26]..[767,24784+28])
                                                        Pexp_ident "lo" (lambda/lambda.ml[767,24784+26]..[767,24784+28])
                                                  ]
                                                expression (lambda/lambda.ml[767,24784+30]..[767,24784+42])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[767,24784+30]..[767,24784+35])
                                                    Pexp_ident "subst" (lambda/lambda.ml[767,24784+30]..[767,24784+35])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[767,24784+36]..[767,24784+37])
                                                        Pexp_ident "s" (lambda/lambda.ml[767,24784+36]..[767,24784+37])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[767,24784+38]..[767,24784+39])
                                                        Pexp_ident "l" (lambda/lambda.ml[767,24784+38]..[767,24784+39])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[767,24784+40]..[767,24784+42])
                                                        Pexp_ident "hi" (lambda/lambda.ml[767,24784+40]..[767,24784+42])
                                                  ]
                                                expression (lambda/lambda.ml[767,24784+44]..[767,24784+47])
                                                  Pexp_ident "dir" (lambda/lambda.ml[767,24784+44]..[767,24784+47])
                                                expression (lambda/lambda.ml[767,24784+49]..[767,24784+64])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[767,24784+49]..[767,24784+54])
                                                    Pexp_ident "subst" (lambda/lambda.ml[767,24784+49]..[767,24784+54])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[767,24784+55]..[767,24784+56])
                                                        Pexp_ident "s" (lambda/lambda.ml[767,24784+55]..[767,24784+56])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[767,24784+57]..[767,24784+59])
                                                        Pexp_ident "l'" (lambda/lambda.ml[767,24784+57]..[767,24784+59])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[767,24784+60]..[767,24784+64])
                                                        Pexp_ident "body" (lambda/lambda.ml[767,24784+60]..[767,24784+64])
                                                  ]
                                              ]
                                    <case>
                                      pattern (lambda/lambda.ml[768,24850+6]..[768,24850+20])
                                        Ppat_construct "Lassign" (lambda/lambda.ml[768,24850+6]..[768,24850+13])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[768,24850+13]..[768,24850+20])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/lambda.ml[768,24850+14]..[768,24850+16])
                                                Ppat_var "id" (lambda/lambda.ml[768,24850+14]..[768,24850+16])
                                              pattern (lambda/lambda.ml[768,24850+18]..[768,24850+19])
                                                Ppat_var "e" (lambda/lambda.ml[768,24850+18]..[768,24850+19])
                                            ]
                                      expression (lambda/lambda.ml[769,24874+8]..[771,24982+32])
                                        Pexp_sequence
                                        expression (lambda/lambda.ml[769,24874+8]..[769,24874+41])
                                          Pexp_assert
                                          expression (lambda/lambda.ml[769,24874+15]..[769,24874+41])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[769,24874+16]..[769,24874+19])
                                              Pexp_ident "not" (lambda/lambda.ml[769,24874+16]..[769,24874+19])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[769,24874+20]..[769,24874+40])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[769,24874+21]..[769,24874+34])
                                                    Pexp_ident "Ident.Map.mem" (lambda/lambda.ml[769,24874+21]..[769,24874+34])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[769,24874+35]..[769,24874+37])
                                                        Pexp_ident "id" (lambda/lambda.ml[769,24874+35]..[769,24874+37])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[769,24874+38]..[769,24874+39])
                                                        Pexp_ident "s" (lambda/lambda.ml[769,24874+38]..[769,24874+39])
                                                  ]
                                            ]
                                        expression (lambda/lambda.ml[770,24917+8]..[771,24982+32])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/lambda.ml[770,24917+12]..[770,24917+14])
                                                Ppat_var "id" (lambda/lambda.ml[770,24917+12]..[770,24917+14])
                                              expression (lambda/lambda.ml[770,24917+17]..[770,24917+61])
                                                Pexp_try
                                                expression (lambda/lambda.ml[770,24917+21]..[770,24917+40])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[770,24917+21]..[770,24917+35])
                                                    Pexp_ident "Ident.Map.find" (lambda/lambda.ml[770,24917+21]..[770,24917+35])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[770,24917+36]..[770,24917+38])
                                                        Pexp_ident "id" (lambda/lambda.ml[770,24917+36]..[770,24917+38])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[770,24917+39]..[770,24917+40])
                                                        Pexp_ident "l" (lambda/lambda.ml[770,24917+39]..[770,24917+40])
                                                  ]
                                                [
                                                  <case>
                                                    pattern (lambda/lambda.ml[770,24917+46]..[770,24917+55])
                                                      Ppat_construct "Not_found" (lambda/lambda.ml[770,24917+46]..[770,24917+55])
                                                      None
                                                    expression (lambda/lambda.ml[770,24917+59]..[770,24917+61])
                                                      Pexp_ident "id" (lambda/lambda.ml[770,24917+59]..[770,24917+61])
                                                ]
                                          ]
                                          expression (lambda/lambda.ml[771,24982+8]..[771,24982+32])
                                            Pexp_construct "Lassign" (lambda/lambda.ml[771,24982+8]..[771,24982+15])
                                            Some
                                              expression (lambda/lambda.ml[771,24982+15]..[771,24982+32])
                                                Pexp_tuple
                                                [
                                                  expression (lambda/lambda.ml[771,24982+16]..[771,24982+18])
                                                    Pexp_ident "id" (lambda/lambda.ml[771,24982+16]..[771,24982+18])
                                                  expression (lambda/lambda.ml[771,24982+20]..[771,24982+31])
                                                    Pexp_apply
                                                    expression (lambda/lambda.ml[771,24982+20]..[771,24982+25])
                                                      Pexp_ident "subst" (lambda/lambda.ml[771,24982+20]..[771,24982+25])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/lambda.ml[771,24982+26]..[771,24982+27])
                                                          Pexp_ident "s" (lambda/lambda.ml[771,24982+26]..[771,24982+27])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/lambda.ml[771,24982+28]..[771,24982+29])
                                                          Pexp_ident "l" (lambda/lambda.ml[771,24982+28]..[771,24982+29])
                                                      <arg>
                                                      Nolabel
                                                        expression (lambda/lambda.ml[771,24982+30]..[771,24982+31])
                                                          Pexp_ident "e" (lambda/lambda.ml[771,24982+30]..[771,24982+31])
                                                    ]
                                                ]
                                    <case>
                                      pattern (lambda/lambda.ml[772,25015+6]..[772,25015+36])
                                        Ppat_construct "Lsend" (lambda/lambda.ml[772,25015+6]..[772,25015+11])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[772,25015+12]..[772,25015+36])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/lambda.ml[772,25015+13]..[772,25015+14])
                                                Ppat_var "k" (lambda/lambda.ml[772,25015+13]..[772,25015+14])
                                              pattern (lambda/lambda.ml[772,25015+16]..[772,25015+19])
                                                Ppat_var "met" (lambda/lambda.ml[772,25015+16]..[772,25015+19])
                                              pattern (lambda/lambda.ml[772,25015+21]..[772,25015+24])
                                                Ppat_var "obj" (lambda/lambda.ml[772,25015+21]..[772,25015+24])
                                              pattern (lambda/lambda.ml[772,25015+26]..[772,25015+30])
                                                Ppat_var "args" (lambda/lambda.ml[772,25015+26]..[772,25015+30])
                                              pattern (lambda/lambda.ml[772,25015+32]..[772,25015+35])
                                                Ppat_var "loc" (lambda/lambda.ml[772,25015+32]..[772,25015+35])
                                            ]
                                      expression (lambda/lambda.ml[773,25055+8]..[773,25055+73])
                                        Pexp_construct "Lsend" (lambda/lambda.ml[773,25055+8]..[773,25055+13])
                                        Some
                                          expression (lambda/lambda.ml[773,25055+14]..[773,25055+73])
                                            Pexp_tuple
                                            [
                                              expression (lambda/lambda.ml[773,25055+15]..[773,25055+16])
                                                Pexp_ident "k" (lambda/lambda.ml[773,25055+15]..[773,25055+16])
                                              expression (lambda/lambda.ml[773,25055+18]..[773,25055+31])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[773,25055+18]..[773,25055+23])
                                                  Pexp_ident "subst" (lambda/lambda.ml[773,25055+18]..[773,25055+23])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[773,25055+24]..[773,25055+25])
                                                      Pexp_ident "s" (lambda/lambda.ml[773,25055+24]..[773,25055+25])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[773,25055+26]..[773,25055+27])
                                                      Pexp_ident "l" (lambda/lambda.ml[773,25055+26]..[773,25055+27])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[773,25055+28]..[773,25055+31])
                                                      Pexp_ident "met" (lambda/lambda.ml[773,25055+28]..[773,25055+31])
                                                ]
                                              expression (lambda/lambda.ml[773,25055+33]..[773,25055+46])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[773,25055+33]..[773,25055+38])
                                                  Pexp_ident "subst" (lambda/lambda.ml[773,25055+33]..[773,25055+38])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[773,25055+39]..[773,25055+40])
                                                      Pexp_ident "s" (lambda/lambda.ml[773,25055+39]..[773,25055+40])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[773,25055+41]..[773,25055+42])
                                                      Pexp_ident "l" (lambda/lambda.ml[773,25055+41]..[773,25055+42])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[773,25055+43]..[773,25055+46])
                                                      Pexp_ident "obj" (lambda/lambda.ml[773,25055+43]..[773,25055+46])
                                                ]
                                              expression (lambda/lambda.ml[773,25055+48]..[773,25055+67])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[773,25055+48]..[773,25055+58])
                                                  Pexp_ident "subst_list" (lambda/lambda.ml[773,25055+48]..[773,25055+58])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[773,25055+59]..[773,25055+60])
                                                      Pexp_ident "s" (lambda/lambda.ml[773,25055+59]..[773,25055+60])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[773,25055+61]..[773,25055+62])
                                                      Pexp_ident "l" (lambda/lambda.ml[773,25055+61]..[773,25055+62])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[773,25055+63]..[773,25055+67])
                                                      Pexp_ident "args" (lambda/lambda.ml[773,25055+63]..[773,25055+67])
                                                ]
                                              expression (lambda/lambda.ml[773,25055+69]..[773,25055+72])
                                                Pexp_ident "loc" (lambda/lambda.ml[773,25055+69]..[773,25055+72])
                                            ]
                                    <case>
                                      pattern (lambda/lambda.ml[774,25129+6]..[774,25129+23])
                                        Ppat_construct "Levent" (lambda/lambda.ml[774,25129+6]..[774,25129+12])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[774,25129+13]..[774,25129+23])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/lambda.ml[774,25129+14]..[774,25129+17])
                                                Ppat_var "lam" (lambda/lambda.ml[774,25129+14]..[774,25129+17])
                                              pattern (lambda/lambda.ml[774,25129+19]..[774,25129+22])
                                                Ppat_var "evt" (lambda/lambda.ml[774,25129+19]..[774,25129+22])
                                            ]
                                      expression (lambda/lambda.ml[775,25156+8]..[799,26067+62])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/lambda.ml[775,25156+12]..[775,25156+19])
                                              Ppat_var "old_env" (lambda/lambda.ml[775,25156+12]..[775,25156+19])
                                            expression (lambda/lambda.ml[775,25156+22]..[775,25156+33])
                                              Pexp_field
                                              expression (lambda/lambda.ml[775,25156+22]..[775,25156+25])
                                                Pexp_ident "evt" (lambda/lambda.ml[775,25156+22]..[775,25156+25])
                                              "lev_env" (lambda/lambda.ml[775,25156+26]..[775,25156+33])
                                        ]
                                        expression (lambda/lambda.ml[776,25193+8]..[799,26067+62])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (lambda/lambda.ml[776,25193+12]..[776,25193+23])
                                                Ppat_var "env_updates" (lambda/lambda.ml[776,25193+12]..[776,25193+23])
                                              expression (lambda/lambda.ml[777,25219+10]..[794,25927+15])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (lambda/lambda.ml[777,25219+14]..[777,25219+25])
                                                      Ppat_var "find_in_old" (lambda/lambda.ml[777,25219+14]..[777,25219+25])
                                                    expression (lambda/lambda.ml[777,25219+26]..[777,25219+70]) ghost
                                                      Pexp_fun
                                                      Nolabel
                                                      None
                                                      pattern (lambda/lambda.ml[777,25219+26]..[777,25219+28])
                                                        Ppat_var "id" (lambda/lambda.ml[777,25219+26]..[777,25219+28])
                                                      expression (lambda/lambda.ml[777,25219+31]..[777,25219+70])
                                                        Pexp_apply
                                                        expression (lambda/lambda.ml[777,25219+31]..[777,25219+45])
                                                          Pexp_ident "Env.find_value" (lambda/lambda.ml[777,25219+31]..[777,25219+45])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/lambda.ml[777,25219+46]..[777,25219+62])
                                                              Pexp_construct "Path.Pident" (lambda/lambda.ml[777,25219+47]..[777,25219+58])
                                                              Some
                                                                expression (lambda/lambda.ml[777,25219+59]..[777,25219+61])
                                                                  Pexp_ident "id" (lambda/lambda.ml[777,25219+59]..[777,25219+61])
                                                          <arg>
                                                          Nolabel
                                                            expression (lambda/lambda.ml[777,25219+63]..[777,25219+70])
                                                              Pexp_ident "old_env" (lambda/lambda.ml[777,25219+63]..[777,25219+70])
                                                        ]
                                                ]
                                                expression (lambda/lambda.ml[778,25293+10]..[794,25927+15])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (lambda/lambda.ml[778,25293+14]..[778,25293+20])
                                                        Ppat_var "rebind" (lambda/lambda.ml[778,25293+14]..[778,25293+20])
                                                      expression (lambda/lambda.ml[778,25293+21]..[781,25414+48]) ghost
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (lambda/lambda.ml[778,25293+21]..[778,25293+23])
                                                          Ppat_var "id" (lambda/lambda.ml[778,25293+21]..[778,25293+23])
                                                        expression (lambda/lambda.ml[778,25293+24]..[781,25414+48]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (lambda/lambda.ml[778,25293+24]..[778,25293+27])
                                                            Ppat_var "id'" (lambda/lambda.ml[778,25293+24]..[778,25293+27])
                                                          expression (lambda/lambda.ml[778,25293+28]..[781,25414+48]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (lambda/lambda.ml[778,25293+28]..[778,25293+35])
                                                              Ppat_var "new_env" (lambda/lambda.ml[778,25293+28]..[778,25293+35])
                                                            expression (lambda/lambda.ml[779,25331+12]..[781,25414+48])
                                                              Pexp_match
                                                              expression (lambda/lambda.ml[779,25331+18]..[779,25331+32])
                                                                Pexp_apply
                                                                expression (lambda/lambda.ml[779,25331+18]..[779,25331+29])
                                                                  Pexp_ident "find_in_old" (lambda/lambda.ml[779,25331+18]..[779,25331+29])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/lambda.ml[779,25331+30]..[779,25331+32])
                                                                      Pexp_ident "id" (lambda/lambda.ml[779,25331+30]..[779,25331+32])
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (lambda/lambda.ml[780,25369+14]..[780,25369+33])
                                                                    Ppat_exception
                                                                    pattern (lambda/lambda.ml[780,25369+24]..[780,25369+33])
                                                                      Ppat_construct "Not_found" (lambda/lambda.ml[780,25369+24]..[780,25369+33])
                                                                      None
                                                                  expression (lambda/lambda.ml[780,25369+37]..[780,25369+44])
                                                                    Pexp_ident "new_env" (lambda/lambda.ml[780,25369+37]..[780,25369+44])
                                                                <case>
                                                                  pattern (lambda/lambda.ml[781,25414+14]..[781,25414+16])
                                                                    Ppat_var "vd" (lambda/lambda.ml[781,25414+14]..[781,25414+16])
                                                                  expression (lambda/lambda.ml[781,25414+20]..[781,25414+48])
                                                                    Pexp_apply
                                                                    expression (lambda/lambda.ml[781,25414+20]..[781,25414+33])
                                                                      Pexp_ident "Env.add_value" (lambda/lambda.ml[781,25414+20]..[781,25414+33])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lambda/lambda.ml[781,25414+34]..[781,25414+37])
  Pexp_ident "id'" (lambda/lambda.ml[781,25414+34]..[781,25414+37])
                                                                      <arg>
                                                                      Nolabel
expression (lambda/lambda.ml[781,25414+38]..[781,25414+40])
  Pexp_ident "vd" (lambda/lambda.ml[781,25414+38]..[781,25414+40])
                                                                      <arg>
                                                                      Nolabel
expression (lambda/lambda.ml[781,25414+41]..[781,25414+48])
  Pexp_ident "new_env" (lambda/lambda.ml[781,25414+41]..[781,25414+48])
                                                                    ]
                                                              ]
                                                  ]
                                                  expression (lambda/lambda.ml[783,25476+10]..[794,25927+15])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (lambda/lambda.ml[783,25476+14]..[783,25476+25])
                                                          Ppat_var "update_free" (lambda/lambda.ml[783,25476+14]..[783,25476+25])
                                                        expression (lambda/lambda.ml[783,25476+26]..[786,25598+44]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (lambda/lambda.ml[783,25476+26]..[783,25476+28])
                                                            Ppat_var "id" (lambda/lambda.ml[783,25476+26]..[783,25476+28])
                                                          expression (lambda/lambda.ml[783,25476+29]..[786,25598+44]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (lambda/lambda.ml[783,25476+29]..[783,25476+36])
                                                              Ppat_var "new_env" (lambda/lambda.ml[783,25476+29]..[783,25476+36])
                                                            expression (lambda/lambda.ml[784,25515+12]..[786,25598+44])
                                                              Pexp_match
                                                              expression (lambda/lambda.ml[784,25515+18]..[784,25515+32])
                                                                Pexp_apply
                                                                expression (lambda/lambda.ml[784,25515+18]..[784,25515+29])
                                                                  Pexp_ident "find_in_old" (lambda/lambda.ml[784,25515+18]..[784,25515+29])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (lambda/lambda.ml[784,25515+30]..[784,25515+32])
                                                                      Pexp_ident "id" (lambda/lambda.ml[784,25515+30]..[784,25515+32])
                                                                ]
                                                              [
                                                                <case>
                                                                  pattern (lambda/lambda.ml[785,25553+14]..[785,25553+33])
                                                                    Ppat_exception
                                                                    pattern (lambda/lambda.ml[785,25553+24]..[785,25553+33])
                                                                      Ppat_construct "Not_found" (lambda/lambda.ml[785,25553+24]..[785,25553+33])
                                                                      None
                                                                  expression (lambda/lambda.ml[785,25553+37]..[785,25553+44])
                                                                    Pexp_ident "new_env" (lambda/lambda.ml[785,25553+37]..[785,25553+44])
                                                                <case>
                                                                  pattern (lambda/lambda.ml[786,25598+14]..[786,25598+16])
                                                                    Ppat_var "vd" (lambda/lambda.ml[786,25598+14]..[786,25598+16])
                                                                  expression (lambda/lambda.ml[786,25598+20]..[786,25598+44])
                                                                    Pexp_apply
                                                                    expression (lambda/lambda.ml[786,25598+20]..[786,25598+30])
                                                                      Pexp_ident "update_env" (lambda/lambda.ml[786,25598+20]..[786,25598+30])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (lambda/lambda.ml[786,25598+31]..[786,25598+33])
  Pexp_ident "id" (lambda/lambda.ml[786,25598+31]..[786,25598+33])
                                                                      <arg>
                                                                      Nolabel
expression (lambda/lambda.ml[786,25598+34]..[786,25598+36])
  Pexp_ident "vd" (lambda/lambda.ml[786,25598+34]..[786,25598+36])
                                                                      <arg>
                                                                      Nolabel
expression (lambda/lambda.ml[786,25598+37]..[786,25598+44])
  Pexp_ident "new_env" (lambda/lambda.ml[786,25598+37]..[786,25598+44])
                                                                    ]
                                                              ]
                                                    ]
                                                    expression (lambda/lambda.ml[788,25656+10]..[794,25927+15])
                                                      Pexp_apply
                                                      expression (lambda/lambda.ml[788,25656+10]..[788,25656+25])
                                                        Pexp_ident "Ident.Map.merge" (lambda/lambda.ml[788,25656+10]..[788,25656+25])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[788,25656+26]..[794,25927+11])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (lambda/lambda.ml[788,25656+31]..[788,25656+33])
                                                              Ppat_var "id" (lambda/lambda.ml[788,25656+31]..[788,25656+33])
                                                            expression (lambda/lambda.ml[788,25656+34]..[793,25894+32]) ghost
                                                              Pexp_fun
                                                              Nolabel
                                                              None
                                                              pattern (lambda/lambda.ml[788,25656+34]..[788,25656+39])
                                                                Ppat_var "bound" (lambda/lambda.ml[788,25656+34]..[788,25656+39])
                                                              expression (lambda/lambda.ml[788,25656+40]..[793,25894+32]) ghost
                                                                Pexp_fun
                                                                Nolabel
                                                                None
                                                                pattern (lambda/lambda.ml[788,25656+40]..[788,25656+44])
                                                                  Ppat_var "free" (lambda/lambda.ml[788,25656+40]..[788,25656+44])
                                                                expression (lambda/lambda.ml[789,25704+12]..[793,25894+32])
                                                                  Pexp_match
                                                                  expression (lambda/lambda.ml[789,25704+18]..[789,25704+29])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (lambda/lambda.ml[789,25704+18]..[789,25704+23])
Pexp_ident "bound" (lambda/lambda.ml[789,25704+18]..[789,25704+23])
                                                                      expression (lambda/lambda.ml[789,25704+25]..[789,25704+29])
Pexp_ident "free" (lambda/lambda.ml[789,25704+25]..[789,25704+29])
                                                                    ]
                                                                  [
                                                                    <case>
                                                                      pattern (lambda/lambda.ml[790,25739+14]..[790,25739+25])
Ppat_tuple
[
  pattern (lambda/lambda.ml[790,25739+14]..[790,25739+22])
    Ppat_construct "Some" (lambda/lambda.ml[790,25739+14]..[790,25739+18])
    Some
      []
      pattern (lambda/lambda.ml[790,25739+19]..[790,25739+22])
        Ppat_var "id'" (lambda/lambda.ml[790,25739+19]..[790,25739+22])
  pattern (lambda/lambda.ml[790,25739+24]..[790,25739+25])
    Ppat_any
]
                                                                      expression (lambda/lambda.ml[791,25768+16]..[791,25768+73])
Pexp_ifthenelse
expression (lambda/lambda.ml[791,25768+19]..[791,25768+37])
  Pexp_apply
  expression (lambda/lambda.ml[791,25768+19]..[791,25768+30])
    Pexp_ident "Ident.equal" (lambda/lambda.ml[791,25768+19]..[791,25768+30])
  [
    <arg>
    Nolabel
      expression (lambda/lambda.ml[791,25768+31]..[791,25768+33])
        Pexp_ident "id" (lambda/lambda.ml[791,25768+31]..[791,25768+33])
    <arg>
    Nolabel
      expression (lambda/lambda.ml[791,25768+34]..[791,25768+37])
        Pexp_ident "id'" (lambda/lambda.ml[791,25768+34]..[791,25768+37])
  ]
expression (lambda/lambda.ml[791,25768+43]..[791,25768+47])
  Pexp_construct "None" (lambda/lambda.ml[791,25768+43]..[791,25768+47])
  None
Some
  expression (lambda/lambda.ml[791,25768+53]..[791,25768+73])
    Pexp_construct "Some" (lambda/lambda.ml[791,25768+53]..[791,25768+57])
    Some
      expression (lambda/lambda.ml[791,25768+58]..[791,25768+73])
        Pexp_apply
        expression (lambda/lambda.ml[791,25768+59]..[791,25768+65])
          Pexp_ident "rebind" (lambda/lambda.ml[791,25768+59]..[791,25768+65])
        [
          <arg>
          Nolabel
            expression (lambda/lambda.ml[791,25768+66]..[791,25768+68])
              Pexp_ident "id" (lambda/lambda.ml[791,25768+66]..[791,25768+68])
          <arg>
          Nolabel
            expression (lambda/lambda.ml[791,25768+69]..[791,25768+72])
              Pexp_ident "id'" (lambda/lambda.ml[791,25768+69]..[791,25768+72])
        ]
                                                                    <case>
                                                                      pattern (lambda/lambda.ml[792,25842+14]..[792,25842+26])
Ppat_tuple
[
  pattern (lambda/lambda.ml[792,25842+14]..[792,25842+18])
    Ppat_construct "None" (lambda/lambda.ml[792,25842+14]..[792,25842+18])
    None
  pattern (lambda/lambda.ml[792,25842+20]..[792,25842+26])
    Ppat_construct "Some" (lambda/lambda.ml[792,25842+20]..[792,25842+24])
    Some
      []
      pattern (lambda/lambda.ml[792,25842+25]..[792,25842+26])
        Ppat_any
]
                                                                      expression (lambda/lambda.ml[792,25842+30]..[792,25842+51])
Pexp_construct "Some" (lambda/lambda.ml[792,25842+30]..[792,25842+34])
Some
  expression (lambda/lambda.ml[792,25842+35]..[792,25842+51])
    Pexp_apply
    expression (lambda/lambda.ml[792,25842+36]..[792,25842+47])
      Pexp_ident "update_free" (lambda/lambda.ml[792,25842+36]..[792,25842+47])
    [
      <arg>
      Nolabel
        expression (lambda/lambda.ml[792,25842+48]..[792,25842+50])
          Pexp_ident "id" (lambda/lambda.ml[792,25842+48]..[792,25842+50])
    ]
                                                                    <case>
                                                                      pattern (lambda/lambda.ml[793,25894+14]..[793,25894+24])
Ppat_tuple
[
  pattern (lambda/lambda.ml[793,25894+14]..[793,25894+18])
    Ppat_construct "None" (lambda/lambda.ml[793,25894+14]..[793,25894+18])
    None
  pattern (lambda/lambda.ml[793,25894+20]..[793,25894+24])
    Ppat_construct "None" (lambda/lambda.ml[793,25894+20]..[793,25894+24])
    None
]
                                                                      expression (lambda/lambda.ml[793,25894+28]..[793,25894+32])
Pexp_construct "None" (lambda/lambda.ml[793,25894+28]..[793,25894+32])
None
                                                                  ]
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[794,25927+12]..[794,25927+13])
                                                            Pexp_ident "l" (lambda/lambda.ml[794,25927+12]..[794,25927+13])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[794,25927+14]..[794,25927+15])
                                                            Pexp_ident "s" (lambda/lambda.ml[794,25927+14]..[794,25927+15])
                                                      ]
                                          ]
                                          expression (lambda/lambda.ml[796,25954+8]..[799,26067+62])
                                            Pexp_let Nonrec
                                            [
                                              <def>
                                                pattern (lambda/lambda.ml[796,25954+12]..[796,25954+19])
                                                  Ppat_var "new_env" (lambda/lambda.ml[796,25954+12]..[796,25954+19])
                                                expression (lambda/lambda.ml[797,25976+10]..[797,25976+79])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[797,25976+10]..[797,25976+24])
                                                    Pexp_ident "Ident.Map.fold" (lambda/lambda.ml[797,25976+10]..[797,25976+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[797,25976+25]..[797,25976+59])
                                                        Pexp_fun
                                                        Nolabel
                                                        None
                                                        pattern (lambda/lambda.ml[797,25976+30]..[797,25976+33])
                                                          Ppat_var "_id" (lambda/lambda.ml[797,25976+30]..[797,25976+33])
                                                        expression (lambda/lambda.ml[797,25976+34]..[797,25976+58]) ghost
                                                          Pexp_fun
                                                          Nolabel
                                                          None
                                                          pattern (lambda/lambda.ml[797,25976+34]..[797,25976+40])
                                                            Ppat_var "update" (lambda/lambda.ml[797,25976+34]..[797,25976+40])
                                                          expression (lambda/lambda.ml[797,25976+41]..[797,25976+58]) ghost
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (lambda/lambda.ml[797,25976+41]..[797,25976+44])
                                                              Ppat_var "env" (lambda/lambda.ml[797,25976+41]..[797,25976+44])
                                                            expression (lambda/lambda.ml[797,25976+48]..[797,25976+58])
                                                              Pexp_apply
                                                              expression (lambda/lambda.ml[797,25976+48]..[797,25976+54])
                                                                Pexp_ident "update" (lambda/lambda.ml[797,25976+48]..[797,25976+54])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (lambda/lambda.ml[797,25976+55]..[797,25976+58])
                                                                    Pexp_ident "env" (lambda/lambda.ml[797,25976+55]..[797,25976+58])
                                                              ]
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[797,25976+60]..[797,25976+71])
                                                        Pexp_ident "env_updates" (lambda/lambda.ml[797,25976+60]..[797,25976+71])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[797,25976+72]..[797,25976+79])
                                                        Pexp_ident "old_env" (lambda/lambda.ml[797,25976+72]..[797,25976+79])
                                                  ]
                                            ]
                                            expression (lambda/lambda.ml[799,26067+8]..[799,26067+62])
                                              Pexp_construct "Levent" (lambda/lambda.ml[799,26067+8]..[799,26067+14])
                                              Some
                                                expression (lambda/lambda.ml[799,26067+15]..[799,26067+62])
                                                  Pexp_tuple
                                                  [
                                                    expression (lambda/lambda.ml[799,26067+16]..[799,26067+29])
                                                      Pexp_apply
                                                      expression (lambda/lambda.ml[799,26067+16]..[799,26067+21])
                                                        Pexp_ident "subst" (lambda/lambda.ml[799,26067+16]..[799,26067+21])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[799,26067+22]..[799,26067+23])
                                                            Pexp_ident "s" (lambda/lambda.ml[799,26067+22]..[799,26067+23])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[799,26067+24]..[799,26067+25])
                                                            Pexp_ident "l" (lambda/lambda.ml[799,26067+24]..[799,26067+25])
                                                        <arg>
                                                        Nolabel
                                                          expression (lambda/lambda.ml[799,26067+26]..[799,26067+29])
                                                            Pexp_ident "lam" (lambda/lambda.ml[799,26067+26]..[799,26067+29])
                                                      ]
                                                    expression (lambda/lambda.ml[799,26067+31]..[799,26067+61])
                                                      Pexp_record
                                                      [
                                                        "lev_env" (lambda/lambda.ml[799,26067+42]..[799,26067+49])
                                                          expression (lambda/lambda.ml[799,26067+52]..[799,26067+59])
                                                            Pexp_ident "new_env" (lambda/lambda.ml[799,26067+52]..[799,26067+59])
                                                      ]
                                                      Some
                                                        expression (lambda/lambda.ml[799,26067+33]..[799,26067+36])
                                                          Pexp_ident "evt" (lambda/lambda.ml[799,26067+33]..[799,26067+36])
                                                  ]
                                    <case>
                                      pattern (lambda/lambda.ml[800,26130+6]..[800,26130+21])
                                        Ppat_construct "Lifused" (lambda/lambda.ml[800,26130+6]..[800,26130+13])
                                        Some
                                          []
                                          pattern (lambda/lambda.ml[800,26130+14]..[800,26130+21])
                                            Ppat_tuple
                                            [
                                              pattern (lambda/lambda.ml[800,26130+15]..[800,26130+17])
                                                Ppat_var "id" (lambda/lambda.ml[800,26130+15]..[800,26130+17])
                                              pattern (lambda/lambda.ml[800,26130+19]..[800,26130+20])
                                                Ppat_var "e" (lambda/lambda.ml[800,26130+19]..[800,26130+20])
                                            ]
                                      expression (lambda/lambda.ml[801,26155+8]..[802,26220+33])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (lambda/lambda.ml[801,26155+12]..[801,26155+14])
                                              Ppat_var "id" (lambda/lambda.ml[801,26155+12]..[801,26155+14])
                                            expression (lambda/lambda.ml[801,26155+17]..[801,26155+61])
                                              Pexp_try
                                              expression (lambda/lambda.ml[801,26155+21]..[801,26155+40])
                                                Pexp_apply
                                                expression (lambda/lambda.ml[801,26155+21]..[801,26155+35])
                                                  Pexp_ident "Ident.Map.find" (lambda/lambda.ml[801,26155+21]..[801,26155+35])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[801,26155+36]..[801,26155+38])
                                                      Pexp_ident "id" (lambda/lambda.ml[801,26155+36]..[801,26155+38])
                                                  <arg>
                                                  Nolabel
                                                    expression (lambda/lambda.ml[801,26155+39]..[801,26155+40])
                                                      Pexp_ident "l" (lambda/lambda.ml[801,26155+39]..[801,26155+40])
                                                ]
                                              [
                                                <case>
                                                  pattern (lambda/lambda.ml[801,26155+46]..[801,26155+55])
                                                    Ppat_construct "Not_found" (lambda/lambda.ml[801,26155+46]..[801,26155+55])
                                                    None
                                                  expression (lambda/lambda.ml[801,26155+59]..[801,26155+61])
                                                    Pexp_ident "id" (lambda/lambda.ml[801,26155+59]..[801,26155+61])
                                              ]
                                        ]
                                        expression (lambda/lambda.ml[802,26220+8]..[802,26220+33])
                                          Pexp_construct "Lifused" (lambda/lambda.ml[802,26220+8]..[802,26220+15])
                                          Some
                                            expression (lambda/lambda.ml[802,26220+16]..[802,26220+33])
                                              Pexp_tuple
                                              [
                                                expression (lambda/lambda.ml[802,26220+17]..[802,26220+19])
                                                  Pexp_ident "id" (lambda/lambda.ml[802,26220+17]..[802,26220+19])
                                                expression (lambda/lambda.ml[802,26220+21]..[802,26220+32])
                                                  Pexp_apply
                                                  expression (lambda/lambda.ml[802,26220+21]..[802,26220+26])
                                                    Pexp_ident "subst" (lambda/lambda.ml[802,26220+21]..[802,26220+26])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[802,26220+27]..[802,26220+28])
                                                        Pexp_ident "s" (lambda/lambda.ml[802,26220+27]..[802,26220+28])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[802,26220+29]..[802,26220+30])
                                                        Pexp_ident "l" (lambda/lambda.ml[802,26220+29]..[802,26220+30])
                                                    <arg>
                                                    Nolabel
                                                      expression (lambda/lambda.ml[802,26220+31]..[802,26220+32])
                                                        Pexp_ident "e" (lambda/lambda.ml[802,26220+31]..[802,26220+32])
                                                  ]
                                              ]
                                  ]
                        <def>
                          pattern (lambda/lambda.ml[803,26254+6]..[803,26254+16])
                            Ppat_var "subst_list" (lambda/lambda.ml[803,26254+6]..[803,26254+16])
                          expression (lambda/lambda.ml[803,26254+17]..[803,26254+49]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/lambda.ml[803,26254+17]..[803,26254+18])
                              Ppat_var "s" (lambda/lambda.ml[803,26254+17]..[803,26254+18])
                            expression (lambda/lambda.ml[803,26254+19]..[803,26254+49]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/lambda.ml[803,26254+19]..[803,26254+20])
                                Ppat_var "l" (lambda/lambda.ml[803,26254+19]..[803,26254+20])
                              expression (lambda/lambda.ml[803,26254+21]..[803,26254+49]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/lambda.ml[803,26254+21]..[803,26254+23])
                                  Ppat_var "li" (lambda/lambda.ml[803,26254+21]..[803,26254+23])
                                expression (lambda/lambda.ml[803,26254+26]..[803,26254+49])
                                  Pexp_apply
                                  expression (lambda/lambda.ml[803,26254+26]..[803,26254+34])
                                    Pexp_ident "List.map" (lambda/lambda.ml[803,26254+26]..[803,26254+34])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (lambda/lambda.ml[803,26254+35]..[803,26254+46])
                                        Pexp_apply
                                        expression (lambda/lambda.ml[803,26254+36]..[803,26254+41])
                                          Pexp_ident "subst" (lambda/lambda.ml[803,26254+36]..[803,26254+41])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (lambda/lambda.ml[803,26254+42]..[803,26254+43])
                                              Pexp_ident "s" (lambda/lambda.ml[803,26254+42]..[803,26254+43])
                                          <arg>
                                          Nolabel
                                            expression (lambda/lambda.ml[803,26254+44]..[803,26254+45])
                                              Pexp_ident "l" (lambda/lambda.ml[803,26254+44]..[803,26254+45])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (lambda/lambda.ml[803,26254+47]..[803,26254+49])
                                        Pexp_ident "li" (lambda/lambda.ml[803,26254+47]..[803,26254+49])
                                  ]
                        <def>
                          pattern (lambda/lambda.ml[804,26304+6]..[804,26304+16])
                            Ppat_var "subst_decl" (lambda/lambda.ml[804,26304+6]..[804,26304+16])
                          expression (lambda/lambda.ml[804,26304+17]..[804,26304+52]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/lambda.ml[804,26304+17]..[804,26304+18])
                              Ppat_var "s" (lambda/lambda.ml[804,26304+17]..[804,26304+18])
                            expression (lambda/lambda.ml[804,26304+19]..[804,26304+52]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/lambda.ml[804,26304+19]..[804,26304+20])
                                Ppat_var "l" (lambda/lambda.ml[804,26304+19]..[804,26304+20])
                              expression (lambda/lambda.ml[804,26304+21]..[804,26304+52]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/lambda.ml[804,26304+21]..[804,26304+30])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/lambda.ml[804,26304+22]..[804,26304+24])
                                      Ppat_var "id" (lambda/lambda.ml[804,26304+22]..[804,26304+24])
                                    pattern (lambda/lambda.ml[804,26304+26]..[804,26304+29])
                                      Ppat_var "exp" (lambda/lambda.ml[804,26304+26]..[804,26304+29])
                                  ]
                                expression (lambda/lambda.ml[804,26304+33]..[804,26304+52])
                                  Pexp_tuple
                                  [
                                    expression (lambda/lambda.ml[804,26304+34]..[804,26304+36])
                                      Pexp_ident "id" (lambda/lambda.ml[804,26304+34]..[804,26304+36])
                                    expression (lambda/lambda.ml[804,26304+38]..[804,26304+51])
                                      Pexp_apply
                                      expression (lambda/lambda.ml[804,26304+38]..[804,26304+43])
                                        Pexp_ident "subst" (lambda/lambda.ml[804,26304+38]..[804,26304+43])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[804,26304+44]..[804,26304+45])
                                            Pexp_ident "s" (lambda/lambda.ml[804,26304+44]..[804,26304+45])
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[804,26304+46]..[804,26304+47])
                                            Pexp_ident "l" (lambda/lambda.ml[804,26304+46]..[804,26304+47])
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[804,26304+48]..[804,26304+51])
                                            Pexp_ident "exp" (lambda/lambda.ml[804,26304+48]..[804,26304+51])
                                      ]
                                  ]
                        <def>
                          pattern (lambda/lambda.ml[805,26357+6]..[805,26357+16])
                            Ppat_var "subst_case" (lambda/lambda.ml[805,26357+6]..[805,26357+16])
                          expression (lambda/lambda.ml[805,26357+17]..[805,26357+56]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/lambda.ml[805,26357+17]..[805,26357+18])
                              Ppat_var "s" (lambda/lambda.ml[805,26357+17]..[805,26357+18])
                            expression (lambda/lambda.ml[805,26357+19]..[805,26357+56]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/lambda.ml[805,26357+19]..[805,26357+20])
                                Ppat_var "l" (lambda/lambda.ml[805,26357+19]..[805,26357+20])
                              expression (lambda/lambda.ml[805,26357+21]..[805,26357+56]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/lambda.ml[805,26357+21]..[805,26357+32])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/lambda.ml[805,26357+22]..[805,26357+25])
                                      Ppat_var "key" (lambda/lambda.ml[805,26357+22]..[805,26357+25])
                                    pattern (lambda/lambda.ml[805,26357+27]..[805,26357+31])
                                      Ppat_var "case" (lambda/lambda.ml[805,26357+27]..[805,26357+31])
                                  ]
                                expression (lambda/lambda.ml[805,26357+35]..[805,26357+56])
                                  Pexp_tuple
                                  [
                                    expression (lambda/lambda.ml[805,26357+36]..[805,26357+39])
                                      Pexp_ident "key" (lambda/lambda.ml[805,26357+36]..[805,26357+39])
                                    expression (lambda/lambda.ml[805,26357+41]..[805,26357+55])
                                      Pexp_apply
                                      expression (lambda/lambda.ml[805,26357+41]..[805,26357+46])
                                        Pexp_ident "subst" (lambda/lambda.ml[805,26357+41]..[805,26357+46])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[805,26357+47]..[805,26357+48])
                                            Pexp_ident "s" (lambda/lambda.ml[805,26357+47]..[805,26357+48])
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[805,26357+49]..[805,26357+50])
                                            Pexp_ident "l" (lambda/lambda.ml[805,26357+49]..[805,26357+50])
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[805,26357+51]..[805,26357+55])
                                            Pexp_ident "case" (lambda/lambda.ml[805,26357+51]..[805,26357+55])
                                      ]
                                  ]
                        <def>
                          pattern (lambda/lambda.ml[806,26414+6]..[806,26414+19])
                            Ppat_var "subst_strcase" (lambda/lambda.ml[806,26414+6]..[806,26414+19])
                          expression (lambda/lambda.ml[806,26414+20]..[806,26414+59]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/lambda.ml[806,26414+20]..[806,26414+21])
                              Ppat_var "s" (lambda/lambda.ml[806,26414+20]..[806,26414+21])
                            expression (lambda/lambda.ml[806,26414+22]..[806,26414+59]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/lambda.ml[806,26414+22]..[806,26414+23])
                                Ppat_var "l" (lambda/lambda.ml[806,26414+22]..[806,26414+23])
                              expression (lambda/lambda.ml[806,26414+24]..[806,26414+59]) ghost
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/lambda.ml[806,26414+24]..[806,26414+35])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/lambda.ml[806,26414+25]..[806,26414+28])
                                      Ppat_var "key" (lambda/lambda.ml[806,26414+25]..[806,26414+28])
                                    pattern (lambda/lambda.ml[806,26414+30]..[806,26414+34])
                                      Ppat_var "case" (lambda/lambda.ml[806,26414+30]..[806,26414+34])
                                  ]
                                expression (lambda/lambda.ml[806,26414+38]..[806,26414+59])
                                  Pexp_tuple
                                  [
                                    expression (lambda/lambda.ml[806,26414+39]..[806,26414+42])
                                      Pexp_ident "key" (lambda/lambda.ml[806,26414+39]..[806,26414+42])
                                    expression (lambda/lambda.ml[806,26414+44]..[806,26414+58])
                                      Pexp_apply
                                      expression (lambda/lambda.ml[806,26414+44]..[806,26414+49])
                                        Pexp_ident "subst" (lambda/lambda.ml[806,26414+44]..[806,26414+49])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[806,26414+50]..[806,26414+51])
                                            Pexp_ident "s" (lambda/lambda.ml[806,26414+50]..[806,26414+51])
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[806,26414+52]..[806,26414+53])
                                            Pexp_ident "l" (lambda/lambda.ml[806,26414+52]..[806,26414+53])
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[806,26414+54]..[806,26414+58])
                                            Pexp_ident "case" (lambda/lambda.ml[806,26414+54]..[806,26414+58])
                                      ]
                                  ]
                        <def>
                          pattern (lambda/lambda.ml[807,26474+6]..[807,26474+15])
                            Ppat_var "subst_opt" (lambda/lambda.ml[807,26474+6]..[807,26474+15])
                          expression (lambda/lambda.ml[807,26474+16]..[809,26524+34]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/lambda.ml[807,26474+16]..[807,26474+17])
                              Ppat_var "s" (lambda/lambda.ml[807,26474+16]..[807,26474+17])
                            expression (lambda/lambda.ml[807,26474+18]..[809,26524+34]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (lambda/lambda.ml[807,26474+18]..[807,26474+19])
                                Ppat_var "l" (lambda/lambda.ml[807,26474+18]..[807,26474+19])
                              expression (lambda/lambda.ml[807,26474+22]..[809,26524+34])
                                Pexp_function
                                [
                                  <case>
                                    pattern (lambda/lambda.ml[808,26505+6]..[808,26505+10])
                                      Ppat_construct "None" (lambda/lambda.ml[808,26505+6]..[808,26505+10])
                                      None
                                    expression (lambda/lambda.ml[808,26505+14]..[808,26505+18])
                                      Pexp_construct "None" (lambda/lambda.ml[808,26505+14]..[808,26505+18])
                                      None
                                  <case>
                                    pattern (lambda/lambda.ml[809,26524+6]..[809,26524+12])
                                      Ppat_construct "Some" (lambda/lambda.ml[809,26524+6]..[809,26524+10])
                                      Some
                                        []
                                        pattern (lambda/lambda.ml[809,26524+11]..[809,26524+12])
                                          Ppat_var "e" (lambda/lambda.ml[809,26524+11]..[809,26524+12])
                                    expression (lambda/lambda.ml[809,26524+16]..[809,26524+34])
                                      Pexp_construct "Some" (lambda/lambda.ml[809,26524+16]..[809,26524+20])
                                      Some
                                        expression (lambda/lambda.ml[809,26524+21]..[809,26524+34])
                                          Pexp_apply
                                          expression (lambda/lambda.ml[809,26524+22]..[809,26524+27])
                                            Pexp_ident "subst" (lambda/lambda.ml[809,26524+22]..[809,26524+27])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (lambda/lambda.ml[809,26524+28]..[809,26524+29])
                                                Pexp_ident "s" (lambda/lambda.ml[809,26524+28]..[809,26524+29])
                                            <arg>
                                            Nolabel
                                              expression (lambda/lambda.ml[809,26524+30]..[809,26524+31])
                                                Pexp_ident "l" (lambda/lambda.ml[809,26524+30]..[809,26524+31])
                                            <arg>
                                            Nolabel
                                              expression (lambda/lambda.ml[809,26524+32]..[809,26524+33])
                                                Pexp_ident "e" (lambda/lambda.ml[809,26524+32]..[809,26524+33])
                                          ]
                                ]
                      ]
                      expression (lambda/lambda.ml[811,26564+2]..[811,26564+35])
                        Pexp_apply
                        expression (lambda/lambda.ml[811,26564+2]..[811,26564+7])
                          Pexp_ident "subst" (lambda/lambda.ml[811,26564+2]..[811,26564+7])
                        [
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[811,26564+8]..[811,26564+9])
                              Pexp_ident "s" (lambda/lambda.ml[811,26564+8]..[811,26564+9])
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[811,26564+10]..[811,26564+25])
                              Pexp_ident "Ident.Map.empty" (lambda/lambda.ml[811,26564+10]..[811,26564+25])
                          <arg>
                          Nolabel
                            expression (lambda/lambda.ml[811,26564+26]..[811,26564+35])
                              Pexp_ident "input_lam" (lambda/lambda.ml[811,26564+26]..[811,26564+35])
                        ]
    ]
  structure_item (lambda/lambda.ml[813,26601+0]..[819,26799+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[813,26601+4]..[813,26601+10])
          Ppat_var "rename" (lambda/lambda.ml[813,26601+4]..[813,26601+10])
        expression (lambda/lambda.ml[813,26601+11]..[819,26799+24]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[813,26601+11]..[813,26601+16])
            Ppat_var "idmap" (lambda/lambda.ml[813,26601+11]..[813,26601+16])
          expression (lambda/lambda.ml[813,26601+17]..[819,26799+24]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[813,26601+17]..[813,26601+20])
              Ppat_var "lam" (lambda/lambda.ml[813,26601+17]..[813,26601+20])
            expression (lambda/lambda.ml[814,26624+2]..[819,26799+24])
              Pexp_let Nonrec
              [
                <def>
                  pattern (lambda/lambda.ml[814,26624+6]..[814,26624+16])
                    Ppat_var "update_env" (lambda/lambda.ml[814,26624+6]..[814,26624+16])
                  expression (lambda/lambda.ml[814,26624+17]..[816,26702+30]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/lambda.ml[814,26624+17]..[814,26624+22])
                      Ppat_var "oldid" (lambda/lambda.ml[814,26624+17]..[814,26624+22])
                    expression (lambda/lambda.ml[814,26624+23]..[816,26702+30]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/lambda.ml[814,26624+23]..[814,26624+25])
                        Ppat_var "vd" (lambda/lambda.ml[814,26624+23]..[814,26624+25])
                      expression (lambda/lambda.ml[814,26624+26]..[816,26702+30]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (lambda/lambda.ml[814,26624+26]..[814,26624+29])
                          Ppat_var "env" (lambda/lambda.ml[814,26624+26]..[814,26624+29])
                        expression (lambda/lambda.ml[815,26656+4]..[816,26702+30])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (lambda/lambda.ml[815,26656+8]..[815,26656+13])
                                Ppat_var "newid" (lambda/lambda.ml[815,26656+8]..[815,26656+13])
                              expression (lambda/lambda.ml[815,26656+16]..[815,26656+42])
                                Pexp_apply
                                expression (lambda/lambda.ml[815,26656+16]..[815,26656+30])
                                  Pexp_ident "Ident.Map.find" (lambda/lambda.ml[815,26656+16]..[815,26656+30])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[815,26656+31]..[815,26656+36])
                                      Pexp_ident "oldid" (lambda/lambda.ml[815,26656+31]..[815,26656+36])
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[815,26656+37]..[815,26656+42])
                                      Pexp_ident "idmap" (lambda/lambda.ml[815,26656+37]..[815,26656+42])
                                ]
                          ]
                          expression (lambda/lambda.ml[816,26702+4]..[816,26702+30])
                            Pexp_apply
                            expression (lambda/lambda.ml[816,26702+4]..[816,26702+17])
                              Pexp_ident "Env.add_value" (lambda/lambda.ml[816,26702+4]..[816,26702+17])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[816,26702+18]..[816,26702+23])
                                  Pexp_ident "newid" (lambda/lambda.ml[816,26702+18]..[816,26702+23])
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[816,26702+24]..[816,26702+26])
                                  Pexp_ident "vd" (lambda/lambda.ml[816,26702+24]..[816,26702+26])
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[816,26702+27]..[816,26702+30])
                                  Pexp_ident "env" (lambda/lambda.ml[816,26702+27]..[816,26702+30])
                            ]
              ]
              expression (lambda/lambda.ml[818,26738+2]..[819,26799+24])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (lambda/lambda.ml[818,26738+6]..[818,26738+7])
                      Ppat_var "s" (lambda/lambda.ml[818,26738+6]..[818,26738+7])
                    expression (lambda/lambda.ml[818,26738+10]..[818,26738+57])
                      Pexp_apply
                      expression (lambda/lambda.ml[818,26738+10]..[818,26738+23])
                        Pexp_ident "Ident.Map.map" (lambda/lambda.ml[818,26738+10]..[818,26738+23])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[818,26738+24]..[818,26738+51])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (lambda/lambda.ml[818,26738+29]..[818,26738+35])
                              Ppat_var "new_id" (lambda/lambda.ml[818,26738+29]..[818,26738+35])
                            expression (lambda/lambda.ml[818,26738+39]..[818,26738+50])
                              Pexp_construct "Lvar" (lambda/lambda.ml[818,26738+39]..[818,26738+43])
                              Some
                                expression (lambda/lambda.ml[818,26738+44]..[818,26738+50])
                                  Pexp_ident "new_id" (lambda/lambda.ml[818,26738+44]..[818,26738+50])
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[818,26738+52]..[818,26738+57])
                            Pexp_ident "idmap" (lambda/lambda.ml[818,26738+52]..[818,26738+57])
                      ]
                ]
                expression (lambda/lambda.ml[819,26799+2]..[819,26799+24])
                  Pexp_apply
                  expression (lambda/lambda.ml[819,26799+2]..[819,26799+7])
                    Pexp_ident "subst" (lambda/lambda.ml[819,26799+2]..[819,26799+7])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/lambda.ml[819,26799+8]..[819,26799+18])
                        Pexp_ident "update_env" (lambda/lambda.ml[819,26799+8]..[819,26799+18])
                    <arg>
                    Nolabel
                      expression (lambda/lambda.ml[819,26799+19]..[819,26799+20])
                        Pexp_ident "s" (lambda/lambda.ml[819,26799+19]..[819,26799+20])
                    <arg>
                    Nolabel
                      expression (lambda/lambda.ml[819,26799+21]..[819,26799+24])
                        Pexp_ident "lam" (lambda/lambda.ml[819,26799+21]..[819,26799+24])
                  ]
    ]
  structure_item (lambda/lambda.ml[821,26825+0]..[826,26932+7])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[821,26825+4]..[821,26825+13])
          Ppat_var "duplicate" (lambda/lambda.ml[821,26825+4]..[821,26825+13])
        expression (lambda/lambda.ml[821,26825+14]..[826,26932+7]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[821,26825+14]..[821,26825+17])
            Ppat_var "lam" (lambda/lambda.ml[821,26825+14]..[821,26825+17])
          expression (lambda/lambda.ml[822,26845+2]..[826,26932+7])
            Pexp_apply
            expression (lambda/lambda.ml[822,26845+2]..[822,26845+7])
              Pexp_ident "subst" (lambda/lambda.ml[822,26845+2]..[822,26845+7])
            [
              <arg>
              Nolabel
                expression (lambda/lambda.ml[823,26853+4]..[823,26853+24])
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/lambda.ml[823,26853+9]..[823,26853+10])
                    Ppat_any
                  expression (lambda/lambda.ml[823,26853+11]..[823,26853+23]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (lambda/lambda.ml[823,26853+11]..[823,26853+12])
                      Ppat_any
                    expression (lambda/lambda.ml[823,26853+13]..[823,26853+23]) ghost
                      Pexp_fun
                      Nolabel
                      None
                      pattern (lambda/lambda.ml[823,26853+13]..[823,26853+16])
                        Ppat_var "env" (lambda/lambda.ml[823,26853+13]..[823,26853+16])
                      expression (lambda/lambda.ml[823,26853+20]..[823,26853+23])
                        Pexp_ident "env" (lambda/lambda.ml[823,26853+20]..[823,26853+23])
              <arg>
              Labelled "freshen_bound_variables"
                expression (lambda/lambda.ml[824,26878+29]..[824,26878+33])
                  Pexp_construct "true" (lambda/lambda.ml[824,26878+29]..[824,26878+33])
                  None
              <arg>
              Nolabel
                expression (lambda/lambda.ml[825,26912+4]..[825,26912+19])
                  Pexp_ident "Ident.Map.empty" (lambda/lambda.ml[825,26912+4]..[825,26912+19])
              <arg>
              Nolabel
                expression (lambda/lambda.ml[826,26932+4]..[826,26932+7])
                  Pexp_ident "lam" (lambda/lambda.ml[826,26932+4]..[826,26932+7])
            ]
    ]
  structure_item (lambda/lambda.ml[828,26941+0]..[888,28912+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[828,26941+4]..[828,26941+15])
          Ppat_var "shallow_map" (lambda/lambda.ml[828,26941+4]..[828,26941+15])
        expression (lambda/lambda.ml[828,26941+16]..[888,28912+22]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[828,26941+16]..[828,26941+17])
            Ppat_var "f" (lambda/lambda.ml[828,26941+16]..[828,26941+17])
          expression (lambda/lambda.ml[828,26941+20]..[888,28912+22])
            Pexp_function
            [
              <case>
                pattern (lambda/lambda.ml[829,26970+4]..[831,26995+19])
                  Ppat_alias "lam" (lambda/lambda.ml[831,26995+16]..[831,26995+19])
                  pattern (lambda/lambda.ml[829,26970+4]..[831,26995+12])
                    Ppat_or
                    pattern (lambda/lambda.ml[829,26970+4]..[830,26981+13])
                      Ppat_or
                      pattern (lambda/lambda.ml[829,26970+4]..[829,26970+10])
                        Ppat_construct "Lvar" (lambda/lambda.ml[829,26970+4]..[829,26970+8])
                        Some
                          []
                          pattern (lambda/lambda.ml[829,26970+9]..[829,26970+10])
                            Ppat_any
                      pattern (lambda/lambda.ml[830,26981+4]..[830,26981+13])
                        Ppat_construct "Lmutvar" (lambda/lambda.ml[830,26981+4]..[830,26981+11])
                        Some
                          []
                          pattern (lambda/lambda.ml[830,26981+12]..[830,26981+13])
                            Ppat_any
                    pattern (lambda/lambda.ml[831,26995+4]..[831,26995+12])
                      Ppat_construct "Lconst" (lambda/lambda.ml[831,26995+4]..[831,26995+10])
                      Some
                        []
                        pattern (lambda/lambda.ml[831,26995+11]..[831,26995+12])
                          Ppat_any
                expression (lambda/lambda.ml[831,26995+23]..[831,26995+26])
                  Pexp_ident "lam" (lambda/lambda.ml[831,26995+23]..[831,26995+26])
              <case>
                pattern (lambda/lambda.ml[832,27022+4]..[833,27074+41])
                  Ppat_construct "Lapply" (lambda/lambda.ml[832,27022+4]..[832,27022+10])
                  Some
                    []
                    pattern (lambda/lambda.ml[832,27022+11]..[833,27074+41])
                      Ppat_record Closed
                      [
                        "ap_func" (lambda/lambda.ml[832,27022+13]..[832,27022+20]) ghost
                          pattern (lambda/lambda.ml[832,27022+13]..[832,27022+20])
                            Ppat_var "ap_func" (lambda/lambda.ml[832,27022+13]..[832,27022+20])
                        "ap_args" (lambda/lambda.ml[832,27022+22]..[832,27022+29]) ghost
                          pattern (lambda/lambda.ml[832,27022+22]..[832,27022+29])
                            Ppat_var "ap_args" (lambda/lambda.ml[832,27022+22]..[832,27022+29])
                        "ap_loc" (lambda/lambda.ml[832,27022+31]..[832,27022+37]) ghost
                          pattern (lambda/lambda.ml[832,27022+31]..[832,27022+37])
                            Ppat_var "ap_loc" (lambda/lambda.ml[832,27022+31]..[832,27022+37])
                        "ap_tailcall" (lambda/lambda.ml[832,27022+39]..[832,27022+50]) ghost
                          pattern (lambda/lambda.ml[832,27022+39]..[832,27022+50])
                            Ppat_var "ap_tailcall" (lambda/lambda.ml[832,27022+39]..[832,27022+50])
                        "ap_inlined" (lambda/lambda.ml[833,27074+13]..[833,27074+23]) ghost
                          pattern (lambda/lambda.ml[833,27074+13]..[833,27074+23])
                            Ppat_var "ap_inlined" (lambda/lambda.ml[833,27074+13]..[833,27074+23])
                        "ap_specialised" (lambda/lambda.ml[833,27074+25]..[833,27074+39]) ghost
                          pattern (lambda/lambda.ml[833,27074+25]..[833,27074+39])
                            Ppat_var "ap_specialised" (lambda/lambda.ml[833,27074+25]..[833,27074+39])
                      ]
                expression (lambda/lambda.ml[834,27119+6]..[841,27282+7])
                  Pexp_construct "Lapply" (lambda/lambda.ml[834,27119+6]..[834,27119+12])
                  Some
                    expression (lambda/lambda.ml[834,27119+13]..[841,27282+7])
                      Pexp_record
                      [
                        "ap_func" (lambda/lambda.ml[835,27134+8]..[835,27134+15])
                          expression (lambda/lambda.ml[835,27134+18]..[835,27134+27])
                            Pexp_apply
                            expression (lambda/lambda.ml[835,27134+18]..[835,27134+19])
                              Pexp_ident "f" (lambda/lambda.ml[835,27134+18]..[835,27134+19])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[835,27134+20]..[835,27134+27])
                                  Pexp_ident "ap_func" (lambda/lambda.ml[835,27134+20]..[835,27134+27])
                            ]
                        "ap_args" (lambda/lambda.ml[836,27163+8]..[836,27163+15])
                          expression (lambda/lambda.ml[836,27163+18]..[836,27163+36])
                            Pexp_apply
                            expression (lambda/lambda.ml[836,27163+18]..[836,27163+26])
                              Pexp_ident "List.map" (lambda/lambda.ml[836,27163+18]..[836,27163+26])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[836,27163+27]..[836,27163+28])
                                  Pexp_ident "f" (lambda/lambda.ml[836,27163+27]..[836,27163+28])
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[836,27163+29]..[836,27163+36])
                                  Pexp_ident "ap_args" (lambda/lambda.ml[836,27163+29]..[836,27163+36])
                            ]
                        "ap_loc" (lambda/lambda.ml[837,27201+8]..[837,27201+14]) ghost
                          expression (lambda/lambda.ml[837,27201+8]..[837,27201+14])
                            Pexp_ident "ap_loc" (lambda/lambda.ml[837,27201+8]..[837,27201+14])
                        "ap_tailcall" (lambda/lambda.ml[838,27217+8]..[838,27217+19]) ghost
                          expression (lambda/lambda.ml[838,27217+8]..[838,27217+19])
                            Pexp_ident "ap_tailcall" (lambda/lambda.ml[838,27217+8]..[838,27217+19])
                        "ap_inlined" (lambda/lambda.ml[839,27238+8]..[839,27238+18]) ghost
                          expression (lambda/lambda.ml[839,27238+8]..[839,27238+18])
                            Pexp_ident "ap_inlined" (lambda/lambda.ml[839,27238+8]..[839,27238+18])
                        "ap_specialised" (lambda/lambda.ml[840,27258+8]..[840,27258+22]) ghost
                          expression (lambda/lambda.ml[840,27258+8]..[840,27258+22])
                            Pexp_ident "ap_specialised" (lambda/lambda.ml[840,27258+8]..[840,27258+22])
                      ]
                      None
              <case>
                pattern (lambda/lambda.ml[842,27290+4]..[842,27290+56])
                  Ppat_construct "Lfunction" (lambda/lambda.ml[842,27290+4]..[842,27290+13])
                  Some
                    []
                    pattern (lambda/lambda.ml[842,27290+14]..[842,27290+56])
                      Ppat_record Closed
                      [
                        "kind" (lambda/lambda.ml[842,27290+16]..[842,27290+20]) ghost
                          pattern (lambda/lambda.ml[842,27290+16]..[842,27290+20])
                            Ppat_var "kind" (lambda/lambda.ml[842,27290+16]..[842,27290+20])
                        "params" (lambda/lambda.ml[842,27290+22]..[842,27290+28]) ghost
                          pattern (lambda/lambda.ml[842,27290+22]..[842,27290+28])
                            Ppat_var "params" (lambda/lambda.ml[842,27290+22]..[842,27290+28])
                        "return" (lambda/lambda.ml[842,27290+30]..[842,27290+36]) ghost
                          pattern (lambda/lambda.ml[842,27290+30]..[842,27290+36])
                            Ppat_var "return" (lambda/lambda.ml[842,27290+30]..[842,27290+36])
                        "body" (lambda/lambda.ml[842,27290+38]..[842,27290+42]) ghost
                          pattern (lambda/lambda.ml[842,27290+38]..[842,27290+42])
                            Ppat_var "body" (lambda/lambda.ml[842,27290+38]..[842,27290+42])
                        "attr" (lambda/lambda.ml[842,27290+44]..[842,27290+48]) ghost
                          pattern (lambda/lambda.ml[842,27290+44]..[842,27290+48])
                            Ppat_var "attr" (lambda/lambda.ml[842,27290+44]..[842,27290+48])
                        "loc" (lambda/lambda.ml[842,27290+50]..[842,27290+53]) ghost
                          pattern (lambda/lambda.ml[842,27290+50]..[842,27290+53])
                            Ppat_var "loc" (lambda/lambda.ml[842,27290+50]..[842,27290+53])
                      ]
                expression (lambda/lambda.ml[843,27350+6]..[843,27350+67])
                  Pexp_construct "Lfunction" (lambda/lambda.ml[843,27350+6]..[843,27350+15])
                  Some
                    expression (lambda/lambda.ml[843,27350+16]..[843,27350+67])
                      Pexp_record
                      [
                        "kind" (lambda/lambda.ml[843,27350+18]..[843,27350+22]) ghost
                          expression (lambda/lambda.ml[843,27350+18]..[843,27350+22])
                            Pexp_ident "kind" (lambda/lambda.ml[843,27350+18]..[843,27350+22])
                        "params" (lambda/lambda.ml[843,27350+24]..[843,27350+30]) ghost
                          expression (lambda/lambda.ml[843,27350+24]..[843,27350+30])
                            Pexp_ident "params" (lambda/lambda.ml[843,27350+24]..[843,27350+30])
                        "return" (lambda/lambda.ml[843,27350+32]..[843,27350+38]) ghost
                          expression (lambda/lambda.ml[843,27350+32]..[843,27350+38])
                            Pexp_ident "return" (lambda/lambda.ml[843,27350+32]..[843,27350+38])
                        "body" (lambda/lambda.ml[843,27350+40]..[843,27350+44])
                          expression (lambda/lambda.ml[843,27350+47]..[843,27350+53])
                            Pexp_apply
                            expression (lambda/lambda.ml[843,27350+47]..[843,27350+48])
                              Pexp_ident "f" (lambda/lambda.ml[843,27350+47]..[843,27350+48])
                            [
                              <arg>
                              Nolabel
                                expression (lambda/lambda.ml[843,27350+49]..[843,27350+53])
                                  Pexp_ident "body" (lambda/lambda.ml[843,27350+49]..[843,27350+53])
                            ]
                        "attr" (lambda/lambda.ml[843,27350+55]..[843,27350+59]) ghost
                          expression (lambda/lambda.ml[843,27350+55]..[843,27350+59])
                            Pexp_ident "attr" (lambda/lambda.ml[843,27350+55]..[843,27350+59])
                        "loc" (lambda/lambda.ml[843,27350+61]..[843,27350+64]) ghost
                          expression (lambda/lambda.ml[843,27350+61]..[843,27350+64])
                            Pexp_ident "loc" (lambda/lambda.ml[843,27350+61]..[843,27350+64])
                      ]
                      None
              <case>
                pattern (lambda/lambda.ml[844,27418+4]..[844,27418+28])
                  Ppat_construct "Llet" (lambda/lambda.ml[844,27418+4]..[844,27418+8])
                  Some
                    []
                    pattern (lambda/lambda.ml[844,27418+9]..[844,27418+28])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[844,27418+10]..[844,27418+13])
                          Ppat_var "str" (lambda/lambda.ml[844,27418+10]..[844,27418+13])
                        pattern (lambda/lambda.ml[844,27418+15]..[844,27418+16])
                          Ppat_var "k" (lambda/lambda.ml[844,27418+15]..[844,27418+16])
                        pattern (lambda/lambda.ml[844,27418+18]..[844,27418+19])
                          Ppat_var "v" (lambda/lambda.ml[844,27418+18]..[844,27418+19])
                        pattern (lambda/lambda.ml[844,27418+21]..[844,27418+23])
                          Ppat_var "e1" (lambda/lambda.ml[844,27418+21]..[844,27418+23])
                        pattern (lambda/lambda.ml[844,27418+25]..[844,27418+27])
                          Ppat_var "e2" (lambda/lambda.ml[844,27418+25]..[844,27418+27])
                      ]
                expression (lambda/lambda.ml[845,27450+6]..[845,27450+34])
                  Pexp_construct "Llet" (lambda/lambda.ml[845,27450+6]..[845,27450+10])
                  Some
                    expression (lambda/lambda.ml[845,27450+11]..[845,27450+34])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[845,27450+12]..[845,27450+15])
                          Pexp_ident "str" (lambda/lambda.ml[845,27450+12]..[845,27450+15])
                        expression (lambda/lambda.ml[845,27450+17]..[845,27450+18])
                          Pexp_ident "k" (lambda/lambda.ml[845,27450+17]..[845,27450+18])
                        expression (lambda/lambda.ml[845,27450+20]..[845,27450+21])
                          Pexp_ident "v" (lambda/lambda.ml[845,27450+20]..[845,27450+21])
                        expression (lambda/lambda.ml[845,27450+23]..[845,27450+27])
                          Pexp_apply
                          expression (lambda/lambda.ml[845,27450+23]..[845,27450+24])
                            Pexp_ident "f" (lambda/lambda.ml[845,27450+23]..[845,27450+24])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[845,27450+25]..[845,27450+27])
                                Pexp_ident "e1" (lambda/lambda.ml[845,27450+25]..[845,27450+27])
                          ]
                        expression (lambda/lambda.ml[845,27450+29]..[845,27450+33])
                          Pexp_apply
                          expression (lambda/lambda.ml[845,27450+29]..[845,27450+30])
                            Pexp_ident "f" (lambda/lambda.ml[845,27450+29]..[845,27450+30])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[845,27450+31]..[845,27450+33])
                                Pexp_ident "e2" (lambda/lambda.ml[845,27450+31]..[845,27450+33])
                          ]
                      ]
              <case>
                pattern (lambda/lambda.ml[846,27485+4]..[846,27485+26])
                  Ppat_construct "Lmutlet" (lambda/lambda.ml[846,27485+4]..[846,27485+11])
                  Some
                    []
                    pattern (lambda/lambda.ml[846,27485+12]..[846,27485+26])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[846,27485+13]..[846,27485+14])
                          Ppat_var "k" (lambda/lambda.ml[846,27485+13]..[846,27485+14])
                        pattern (lambda/lambda.ml[846,27485+16]..[846,27485+17])
                          Ppat_var "v" (lambda/lambda.ml[846,27485+16]..[846,27485+17])
                        pattern (lambda/lambda.ml[846,27485+19]..[846,27485+21])
                          Ppat_var "e1" (lambda/lambda.ml[846,27485+19]..[846,27485+21])
                        pattern (lambda/lambda.ml[846,27485+23]..[846,27485+25])
                          Ppat_var "e2" (lambda/lambda.ml[846,27485+23]..[846,27485+25])
                      ]
                expression (lambda/lambda.ml[847,27515+6]..[847,27515+32])
                  Pexp_construct "Lmutlet" (lambda/lambda.ml[847,27515+6]..[847,27515+13])
                  Some
                    expression (lambda/lambda.ml[847,27515+14]..[847,27515+32])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[847,27515+15]..[847,27515+16])
                          Pexp_ident "k" (lambda/lambda.ml[847,27515+15]..[847,27515+16])
                        expression (lambda/lambda.ml[847,27515+18]..[847,27515+19])
                          Pexp_ident "v" (lambda/lambda.ml[847,27515+18]..[847,27515+19])
                        expression (lambda/lambda.ml[847,27515+21]..[847,27515+25])
                          Pexp_apply
                          expression (lambda/lambda.ml[847,27515+21]..[847,27515+22])
                            Pexp_ident "f" (lambda/lambda.ml[847,27515+21]..[847,27515+22])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[847,27515+23]..[847,27515+25])
                                Pexp_ident "e1" (lambda/lambda.ml[847,27515+23]..[847,27515+25])
                          ]
                        expression (lambda/lambda.ml[847,27515+27]..[847,27515+31])
                          Pexp_apply
                          expression (lambda/lambda.ml[847,27515+27]..[847,27515+28])
                            Pexp_ident "f" (lambda/lambda.ml[847,27515+27]..[847,27515+28])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[847,27515+29]..[847,27515+31])
                                Pexp_ident "e2" (lambda/lambda.ml[847,27515+29]..[847,27515+31])
                          ]
                      ]
              <case>
                pattern (lambda/lambda.ml[848,27548+4]..[848,27548+22])
                  Ppat_construct "Lletrec" (lambda/lambda.ml[848,27548+4]..[848,27548+11])
                  Some
                    []
                    pattern (lambda/lambda.ml[848,27548+12]..[848,27548+22])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[848,27548+13]..[848,27548+17])
                          Ppat_var "idel" (lambda/lambda.ml[848,27548+13]..[848,27548+17])
                        pattern (lambda/lambda.ml[848,27548+19]..[848,27548+21])
                          Ppat_var "e2" (lambda/lambda.ml[848,27548+19]..[848,27548+21])
                      ]
                expression (lambda/lambda.ml[849,27574+6]..[849,27574+60])
                  Pexp_construct "Lletrec" (lambda/lambda.ml[849,27574+6]..[849,27574+13])
                  Some
                    expression (lambda/lambda.ml[849,27574+14]..[849,27574+60])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[849,27574+15]..[849,27574+53])
                          Pexp_apply
                          expression (lambda/lambda.ml[849,27574+15]..[849,27574+23])
                            Pexp_ident "List.map" (lambda/lambda.ml[849,27574+15]..[849,27574+23])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[849,27574+24]..[849,27574+48])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/lambda.ml[849,27574+29]..[849,27574+35])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/lambda.ml[849,27574+30]..[849,27574+31])
                                      Ppat_var "v" (lambda/lambda.ml[849,27574+30]..[849,27574+31])
                                    pattern (lambda/lambda.ml[849,27574+33]..[849,27574+34])
                                      Ppat_var "e" (lambda/lambda.ml[849,27574+33]..[849,27574+34])
                                  ]
                                expression (lambda/lambda.ml[849,27574+39]..[849,27574+47])
                                  Pexp_tuple
                                  [
                                    expression (lambda/lambda.ml[849,27574+40]..[849,27574+41])
                                      Pexp_ident "v" (lambda/lambda.ml[849,27574+40]..[849,27574+41])
                                    expression (lambda/lambda.ml[849,27574+43]..[849,27574+46])
                                      Pexp_apply
                                      expression (lambda/lambda.ml[849,27574+43]..[849,27574+44])
                                        Pexp_ident "f" (lambda/lambda.ml[849,27574+43]..[849,27574+44])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[849,27574+45]..[849,27574+46])
                                            Pexp_ident "e" (lambda/lambda.ml[849,27574+45]..[849,27574+46])
                                      ]
                                  ]
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[849,27574+49]..[849,27574+53])
                                Pexp_ident "idel" (lambda/lambda.ml[849,27574+49]..[849,27574+53])
                          ]
                        expression (lambda/lambda.ml[849,27574+55]..[849,27574+59])
                          Pexp_apply
                          expression (lambda/lambda.ml[849,27574+55]..[849,27574+56])
                            Pexp_ident "f" (lambda/lambda.ml[849,27574+55]..[849,27574+56])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[849,27574+57]..[849,27574+59])
                                Pexp_ident "e2" (lambda/lambda.ml[849,27574+57]..[849,27574+59])
                          ]
                      ]
              <case>
                pattern (lambda/lambda.ml[850,27635+4]..[850,27635+22])
                  Ppat_construct "Lprim" (lambda/lambda.ml[850,27635+4]..[850,27635+9])
                  Some
                    []
                    pattern (lambda/lambda.ml[850,27635+10]..[850,27635+22])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[850,27635+11]..[850,27635+12])
                          Ppat_var "p" (lambda/lambda.ml[850,27635+11]..[850,27635+12])
                        pattern (lambda/lambda.ml[850,27635+14]..[850,27635+16])
                          Ppat_var "el" (lambda/lambda.ml[850,27635+14]..[850,27635+16])
                        pattern (lambda/lambda.ml[850,27635+18]..[850,27635+21])
                          Ppat_var "loc" (lambda/lambda.ml[850,27635+18]..[850,27635+21])
                      ]
                expression (lambda/lambda.ml[851,27661+6]..[851,27661+35])
                  Pexp_construct "Lprim" (lambda/lambda.ml[851,27661+6]..[851,27661+11])
                  Some
                    expression (lambda/lambda.ml[851,27661+12]..[851,27661+35])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[851,27661+13]..[851,27661+14])
                          Pexp_ident "p" (lambda/lambda.ml[851,27661+13]..[851,27661+14])
                        expression (lambda/lambda.ml[851,27661+16]..[851,27661+29])
                          Pexp_apply
                          expression (lambda/lambda.ml[851,27661+16]..[851,27661+24])
                            Pexp_ident "List.map" (lambda/lambda.ml[851,27661+16]..[851,27661+24])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[851,27661+25]..[851,27661+26])
                                Pexp_ident "f" (lambda/lambda.ml[851,27661+25]..[851,27661+26])
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[851,27661+27]..[851,27661+29])
                                Pexp_ident "el" (lambda/lambda.ml[851,27661+27]..[851,27661+29])
                          ]
                        expression (lambda/lambda.ml[851,27661+31]..[851,27661+34])
                          Pexp_ident "loc" (lambda/lambda.ml[851,27661+31]..[851,27661+34])
                      ]
              <case>
                pattern (lambda/lambda.ml[852,27697+4]..[852,27697+24])
                  Ppat_construct "Lswitch" (lambda/lambda.ml[852,27697+4]..[852,27697+11])
                  Some
                    []
                    pattern (lambda/lambda.ml[852,27697+12]..[852,27697+24])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[852,27697+13]..[852,27697+14])
                          Ppat_var "e" (lambda/lambda.ml[852,27697+13]..[852,27697+14])
                        pattern (lambda/lambda.ml[852,27697+16]..[852,27697+18])
                          Ppat_var "sw" (lambda/lambda.ml[852,27697+16]..[852,27697+18])
                        pattern (lambda/lambda.ml[852,27697+20]..[852,27697+23])
                          Ppat_var "loc" (lambda/lambda.ml[852,27697+20]..[852,27697+23])
                      ]
                expression (lambda/lambda.ml[853,27725+6]..[860,28079+19])
                  Pexp_construct "Lswitch" (lambda/lambda.ml[853,27725+6]..[853,27725+13])
                  Some
                    expression (lambda/lambda.ml[853,27725+14]..[860,28079+19])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[853,27725+15]..[853,27725+18])
                          Pexp_apply
                          expression (lambda/lambda.ml[853,27725+15]..[853,27725+16])
                            Pexp_ident "f" (lambda/lambda.ml[853,27725+15]..[853,27725+16])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[853,27725+17]..[853,27725+18])
                                Pexp_ident "e" (lambda/lambda.ml[853,27725+17]..[853,27725+18])
                          ]
                        expression (lambda/lambda.ml[854,27745+15]..[859,28061+16])
                          Pexp_record
                          [
                            "sw_numconsts" (lambda/lambda.ml[854,27745+17]..[854,27745+29])
                              expression (lambda/lambda.ml[854,27745+32]..[854,27745+47])
                                Pexp_field
                                expression (lambda/lambda.ml[854,27745+32]..[854,27745+34])
                                  Pexp_ident "sw" (lambda/lambda.ml[854,27745+32]..[854,27745+34])
                                "sw_numconsts" (lambda/lambda.ml[854,27745+35]..[854,27745+47])
                            "sw_consts" (lambda/lambda.ml[855,27794+17]..[855,27794+26])
                              expression (lambda/lambda.ml[855,27794+29]..[855,27794+75])
                                Pexp_apply
                                expression (lambda/lambda.ml[855,27794+29]..[855,27794+37])
                                  Pexp_ident "List.map" (lambda/lambda.ml[855,27794+29]..[855,27794+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[855,27794+38]..[855,27794+62])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lambda/lambda.ml[855,27794+43]..[855,27794+49])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[855,27794+44]..[855,27794+45])
                                            Ppat_var "n" (lambda/lambda.ml[855,27794+44]..[855,27794+45])
                                          pattern (lambda/lambda.ml[855,27794+47]..[855,27794+48])
                                            Ppat_var "e" (lambda/lambda.ml[855,27794+47]..[855,27794+48])
                                        ]
                                      expression (lambda/lambda.ml[855,27794+53]..[855,27794+61])
                                        Pexp_tuple
                                        [
                                          expression (lambda/lambda.ml[855,27794+54]..[855,27794+55])
                                            Pexp_ident "n" (lambda/lambda.ml[855,27794+54]..[855,27794+55])
                                          expression (lambda/lambda.ml[855,27794+57]..[855,27794+60])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[855,27794+57]..[855,27794+58])
                                              Pexp_ident "f" (lambda/lambda.ml[855,27794+57]..[855,27794+58])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[855,27794+59]..[855,27794+60])
                                                  Pexp_ident "e" (lambda/lambda.ml[855,27794+59]..[855,27794+60])
                                            ]
                                        ]
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[855,27794+63]..[855,27794+75])
                                      Pexp_field
                                      expression (lambda/lambda.ml[855,27794+63]..[855,27794+65])
                                        Pexp_ident "sw" (lambda/lambda.ml[855,27794+63]..[855,27794+65])
                                      "sw_consts" (lambda/lambda.ml[855,27794+66]..[855,27794+75])
                                ]
                            "sw_numblocks" (lambda/lambda.ml[856,27871+17]..[856,27871+29])
                              expression (lambda/lambda.ml[856,27871+32]..[856,27871+47])
                                Pexp_field
                                expression (lambda/lambda.ml[856,27871+32]..[856,27871+34])
                                  Pexp_ident "sw" (lambda/lambda.ml[856,27871+32]..[856,27871+34])
                                "sw_numblocks" (lambda/lambda.ml[856,27871+35]..[856,27871+47])
                            "sw_blocks" (lambda/lambda.ml[857,27920+17]..[857,27920+26])
                              expression (lambda/lambda.ml[857,27920+29]..[857,27920+75])
                                Pexp_apply
                                expression (lambda/lambda.ml[857,27920+29]..[857,27920+37])
                                  Pexp_ident "List.map" (lambda/lambda.ml[857,27920+29]..[857,27920+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[857,27920+38]..[857,27920+62])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (lambda/lambda.ml[857,27920+43]..[857,27920+49])
                                        Ppat_tuple
                                        [
                                          pattern (lambda/lambda.ml[857,27920+44]..[857,27920+45])
                                            Ppat_var "n" (lambda/lambda.ml[857,27920+44]..[857,27920+45])
                                          pattern (lambda/lambda.ml[857,27920+47]..[857,27920+48])
                                            Ppat_var "e" (lambda/lambda.ml[857,27920+47]..[857,27920+48])
                                        ]
                                      expression (lambda/lambda.ml[857,27920+53]..[857,27920+61])
                                        Pexp_tuple
                                        [
                                          expression (lambda/lambda.ml[857,27920+54]..[857,27920+55])
                                            Pexp_ident "n" (lambda/lambda.ml[857,27920+54]..[857,27920+55])
                                          expression (lambda/lambda.ml[857,27920+57]..[857,27920+60])
                                            Pexp_apply
                                            expression (lambda/lambda.ml[857,27920+57]..[857,27920+58])
                                              Pexp_ident "f" (lambda/lambda.ml[857,27920+57]..[857,27920+58])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (lambda/lambda.ml[857,27920+59]..[857,27920+60])
                                                  Pexp_ident "e" (lambda/lambda.ml[857,27920+59]..[857,27920+60])
                                            ]
                                        ]
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[857,27920+63]..[857,27920+75])
                                      Pexp_field
                                      expression (lambda/lambda.ml[857,27920+63]..[857,27920+65])
                                        Pexp_ident "sw" (lambda/lambda.ml[857,27920+63]..[857,27920+65])
                                      "sw_blocks" (lambda/lambda.ml[857,27920+66]..[857,27920+75])
                                ]
                            "sw_failaction" (lambda/lambda.ml[858,27997+17]..[858,27997+30])
                              expression (lambda/lambda.ml[858,27997+33]..[858,27997+62])
                                Pexp_apply
                                expression (lambda/lambda.ml[858,27997+33]..[858,27997+43])
                                  Pexp_ident "Option.map" (lambda/lambda.ml[858,27997+33]..[858,27997+43])
                                [
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[858,27997+44]..[858,27997+45])
                                      Pexp_ident "f" (lambda/lambda.ml[858,27997+44]..[858,27997+45])
                                  <arg>
                                  Nolabel
                                    expression (lambda/lambda.ml[858,27997+46]..[858,27997+62])
                                      Pexp_field
                                      expression (lambda/lambda.ml[858,27997+46]..[858,27997+48])
                                        Pexp_ident "sw" (lambda/lambda.ml[858,27997+46]..[858,27997+48])
                                      "sw_failaction" (lambda/lambda.ml[858,27997+49]..[858,27997+62])
                                ]
                          ]
                          None
                        expression (lambda/lambda.ml[860,28079+15]..[860,28079+18])
                          Pexp_ident "loc" (lambda/lambda.ml[860,28079+15]..[860,28079+18])
                      ]
              <case>
                pattern (lambda/lambda.ml[861,28099+4]..[861,28099+39])
                  Ppat_construct "Lstringswitch" (lambda/lambda.ml[861,28099+4]..[861,28099+17])
                  Some
                    []
                    pattern (lambda/lambda.ml[861,28099+18]..[861,28099+39])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[861,28099+19]..[861,28099+20])
                          Ppat_var "e" (lambda/lambda.ml[861,28099+19]..[861,28099+20])
                        pattern (lambda/lambda.ml[861,28099+22]..[861,28099+24])
                          Ppat_var "sw" (lambda/lambda.ml[861,28099+22]..[861,28099+24])
                        pattern (lambda/lambda.ml[861,28099+26]..[861,28099+33])
                          Ppat_var "default" (lambda/lambda.ml[861,28099+26]..[861,28099+33])
                        pattern (lambda/lambda.ml[861,28099+35]..[861,28099+38])
                          Ppat_var "loc" (lambda/lambda.ml[861,28099+35]..[861,28099+38])
                      ]
                expression (lambda/lambda.ml[862,28142+6]..[866,28253+12])
                  Pexp_construct "Lstringswitch" (lambda/lambda.ml[862,28142+6]..[862,28142+19])
                  Some
                    expression (lambda/lambda.ml[862,28142+20]..[866,28253+12])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[863,28164+8]..[863,28164+11])
                          Pexp_apply
                          expression (lambda/lambda.ml[863,28164+8]..[863,28164+9])
                            Pexp_ident "f" (lambda/lambda.ml[863,28164+8]..[863,28164+9])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[863,28164+10]..[863,28164+11])
                                Pexp_ident "e" (lambda/lambda.ml[863,28164+10]..[863,28164+11])
                          ]
                        expression (lambda/lambda.ml[864,28177+8]..[864,28177+44])
                          Pexp_apply
                          expression (lambda/lambda.ml[864,28177+8]..[864,28177+16])
                            Pexp_ident "List.map" (lambda/lambda.ml[864,28177+8]..[864,28177+16])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[864,28177+17]..[864,28177+41])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (lambda/lambda.ml[864,28177+22]..[864,28177+28])
                                  Ppat_tuple
                                  [
                                    pattern (lambda/lambda.ml[864,28177+23]..[864,28177+24])
                                      Ppat_var "s" (lambda/lambda.ml[864,28177+23]..[864,28177+24])
                                    pattern (lambda/lambda.ml[864,28177+26]..[864,28177+27])
                                      Ppat_var "e" (lambda/lambda.ml[864,28177+26]..[864,28177+27])
                                  ]
                                expression (lambda/lambda.ml[864,28177+32]..[864,28177+40])
                                  Pexp_tuple
                                  [
                                    expression (lambda/lambda.ml[864,28177+33]..[864,28177+34])
                                      Pexp_ident "s" (lambda/lambda.ml[864,28177+33]..[864,28177+34])
                                    expression (lambda/lambda.ml[864,28177+36]..[864,28177+39])
                                      Pexp_apply
                                      expression (lambda/lambda.ml[864,28177+36]..[864,28177+37])
                                        Pexp_ident "f" (lambda/lambda.ml[864,28177+36]..[864,28177+37])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (lambda/lambda.ml[864,28177+38]..[864,28177+39])
                                            Pexp_ident "e" (lambda/lambda.ml[864,28177+38]..[864,28177+39])
                                      ]
                                  ]
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[864,28177+42]..[864,28177+44])
                                Pexp_ident "sw" (lambda/lambda.ml[864,28177+42]..[864,28177+44])
                          ]
                        expression (lambda/lambda.ml[865,28223+8]..[865,28223+28])
                          Pexp_apply
                          expression (lambda/lambda.ml[865,28223+8]..[865,28223+18])
                            Pexp_ident "Option.map" (lambda/lambda.ml[865,28223+8]..[865,28223+18])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[865,28223+19]..[865,28223+20])
                                Pexp_ident "f" (lambda/lambda.ml[865,28223+19]..[865,28223+20])
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[865,28223+21]..[865,28223+28])
                                Pexp_ident "default" (lambda/lambda.ml[865,28223+21]..[865,28223+28])
                          ]
                        expression (lambda/lambda.ml[866,28253+8]..[866,28253+11])
                          Pexp_ident "loc" (lambda/lambda.ml[866,28253+8]..[866,28253+11])
                      ]
              <case>
                pattern (lambda/lambda.ml[867,28266+4]..[867,28266+26])
                  Ppat_construct "Lstaticraise" (lambda/lambda.ml[867,28266+4]..[867,28266+16])
                  Some
                    []
                    pattern (lambda/lambda.ml[867,28266+17]..[867,28266+26])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[867,28266+18]..[867,28266+19])
                          Ppat_var "i" (lambda/lambda.ml[867,28266+18]..[867,28266+19])
                        pattern (lambda/lambda.ml[867,28266+21]..[867,28266+25])
                          Ppat_var "args" (lambda/lambda.ml[867,28266+21]..[867,28266+25])
                      ]
                expression (lambda/lambda.ml[868,28296+6]..[868,28296+39])
                  Pexp_construct "Lstaticraise" (lambda/lambda.ml[868,28296+6]..[868,28296+18])
                  Some
                    expression (lambda/lambda.ml[868,28296+19]..[868,28296+39])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[868,28296+20]..[868,28296+21])
                          Pexp_ident "i" (lambda/lambda.ml[868,28296+20]..[868,28296+21])
                        expression (lambda/lambda.ml[868,28296+23]..[868,28296+38])
                          Pexp_apply
                          expression (lambda/lambda.ml[868,28296+23]..[868,28296+31])
                            Pexp_ident "List.map" (lambda/lambda.ml[868,28296+23]..[868,28296+31])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[868,28296+32]..[868,28296+33])
                                Pexp_ident "f" (lambda/lambda.ml[868,28296+32]..[868,28296+33])
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[868,28296+34]..[868,28296+38])
                                Pexp_ident "args" (lambda/lambda.ml[868,28296+34]..[868,28296+38])
                          ]
                      ]
              <case>
                pattern (lambda/lambda.ml[869,28336+4]..[869,28336+36])
                  Ppat_construct "Lstaticcatch" (lambda/lambda.ml[869,28336+4]..[869,28336+16])
                  Some
                    []
                    pattern (lambda/lambda.ml[869,28336+17]..[869,28336+36])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[869,28336+18]..[869,28336+22])
                          Ppat_var "body" (lambda/lambda.ml[869,28336+18]..[869,28336+22])
                        pattern (lambda/lambda.ml[869,28336+24]..[869,28336+26])
                          Ppat_var "id" (lambda/lambda.ml[869,28336+24]..[869,28336+26])
                        pattern (lambda/lambda.ml[869,28336+28]..[869,28336+35])
                          Ppat_var "handler" (lambda/lambda.ml[869,28336+28]..[869,28336+35])
                      ]
                expression (lambda/lambda.ml[870,28376+6]..[870,28376+42])
                  Pexp_construct "Lstaticcatch" (lambda/lambda.ml[870,28376+6]..[870,28376+18])
                  Some
                    expression (lambda/lambda.ml[870,28376+19]..[870,28376+42])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[870,28376+20]..[870,28376+26])
                          Pexp_apply
                          expression (lambda/lambda.ml[870,28376+20]..[870,28376+21])
                            Pexp_ident "f" (lambda/lambda.ml[870,28376+20]..[870,28376+21])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[870,28376+22]..[870,28376+26])
                                Pexp_ident "body" (lambda/lambda.ml[870,28376+22]..[870,28376+26])
                          ]
                        expression (lambda/lambda.ml[870,28376+28]..[870,28376+30])
                          Pexp_ident "id" (lambda/lambda.ml[870,28376+28]..[870,28376+30])
                        expression (lambda/lambda.ml[870,28376+32]..[870,28376+41])
                          Pexp_apply
                          expression (lambda/lambda.ml[870,28376+32]..[870,28376+33])
                            Pexp_ident "f" (lambda/lambda.ml[870,28376+32]..[870,28376+33])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[870,28376+34]..[870,28376+41])
                                Pexp_ident "handler" (lambda/lambda.ml[870,28376+34]..[870,28376+41])
                          ]
                      ]
              <case>
                pattern (lambda/lambda.ml[871,28419+4]..[871,28419+24])
                  Ppat_construct "Ltrywith" (lambda/lambda.ml[871,28419+4]..[871,28419+12])
                  Some
                    []
                    pattern (lambda/lambda.ml[871,28419+13]..[871,28419+24])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[871,28419+14]..[871,28419+16])
                          Ppat_var "e1" (lambda/lambda.ml[871,28419+14]..[871,28419+16])
                        pattern (lambda/lambda.ml[871,28419+18]..[871,28419+19])
                          Ppat_var "v" (lambda/lambda.ml[871,28419+18]..[871,28419+19])
                        pattern (lambda/lambda.ml[871,28419+21]..[871,28419+23])
                          Ppat_var "e2" (lambda/lambda.ml[871,28419+21]..[871,28419+23])
                      ]
                expression (lambda/lambda.ml[872,28447+6]..[872,28447+30])
                  Pexp_construct "Ltrywith" (lambda/lambda.ml[872,28447+6]..[872,28447+14])
                  Some
                    expression (lambda/lambda.ml[872,28447+15]..[872,28447+30])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[872,28447+16]..[872,28447+20])
                          Pexp_apply
                          expression (lambda/lambda.ml[872,28447+16]..[872,28447+17])
                            Pexp_ident "f" (lambda/lambda.ml[872,28447+16]..[872,28447+17])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[872,28447+18]..[872,28447+20])
                                Pexp_ident "e1" (lambda/lambda.ml[872,28447+18]..[872,28447+20])
                          ]
                        expression (lambda/lambda.ml[872,28447+22]..[872,28447+23])
                          Pexp_ident "v" (lambda/lambda.ml[872,28447+22]..[872,28447+23])
                        expression (lambda/lambda.ml[872,28447+25]..[872,28447+29])
                          Pexp_apply
                          expression (lambda/lambda.ml[872,28447+25]..[872,28447+26])
                            Pexp_ident "f" (lambda/lambda.ml[872,28447+25]..[872,28447+26])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[872,28447+27]..[872,28447+29])
                                Pexp_ident "e2" (lambda/lambda.ml[872,28447+27]..[872,28447+29])
                          ]
                      ]
              <case>
                pattern (lambda/lambda.ml[873,28478+4]..[873,28478+28])
                  Ppat_construct "Lifthenelse" (lambda/lambda.ml[873,28478+4]..[873,28478+15])
                  Some
                    []
                    pattern (lambda/lambda.ml[873,28478+16]..[873,28478+28])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[873,28478+17]..[873,28478+19])
                          Ppat_var "e1" (lambda/lambda.ml[873,28478+17]..[873,28478+19])
                        pattern (lambda/lambda.ml[873,28478+21]..[873,28478+23])
                          Ppat_var "e2" (lambda/lambda.ml[873,28478+21]..[873,28478+23])
                        pattern (lambda/lambda.ml[873,28478+25]..[873,28478+27])
                          Ppat_var "e3" (lambda/lambda.ml[873,28478+25]..[873,28478+27])
                      ]
                expression (lambda/lambda.ml[874,28510+6]..[874,28510+36])
                  Pexp_construct "Lifthenelse" (lambda/lambda.ml[874,28510+6]..[874,28510+17])
                  Some
                    expression (lambda/lambda.ml[874,28510+18]..[874,28510+36])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[874,28510+19]..[874,28510+23])
                          Pexp_apply
                          expression (lambda/lambda.ml[874,28510+19]..[874,28510+20])
                            Pexp_ident "f" (lambda/lambda.ml[874,28510+19]..[874,28510+20])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[874,28510+21]..[874,28510+23])
                                Pexp_ident "e1" (lambda/lambda.ml[874,28510+21]..[874,28510+23])
                          ]
                        expression (lambda/lambda.ml[874,28510+25]..[874,28510+29])
                          Pexp_apply
                          expression (lambda/lambda.ml[874,28510+25]..[874,28510+26])
                            Pexp_ident "f" (lambda/lambda.ml[874,28510+25]..[874,28510+26])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[874,28510+27]..[874,28510+29])
                                Pexp_ident "e2" (lambda/lambda.ml[874,28510+27]..[874,28510+29])
                          ]
                        expression (lambda/lambda.ml[874,28510+31]..[874,28510+35])
                          Pexp_apply
                          expression (lambda/lambda.ml[874,28510+31]..[874,28510+32])
                            Pexp_ident "f" (lambda/lambda.ml[874,28510+31]..[874,28510+32])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[874,28510+33]..[874,28510+35])
                                Pexp_ident "e3" (lambda/lambda.ml[874,28510+33]..[874,28510+35])
                          ]
                      ]
              <case>
                pattern (lambda/lambda.ml[875,28547+4]..[875,28547+22])
                  Ppat_construct "Lsequence" (lambda/lambda.ml[875,28547+4]..[875,28547+13])
                  Some
                    []
                    pattern (lambda/lambda.ml[875,28547+14]..[875,28547+22])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[875,28547+15]..[875,28547+17])
                          Ppat_var "e1" (lambda/lambda.ml[875,28547+15]..[875,28547+17])
                        pattern (lambda/lambda.ml[875,28547+19]..[875,28547+21])
                          Ppat_var "e2" (lambda/lambda.ml[875,28547+19]..[875,28547+21])
                      ]
                expression (lambda/lambda.ml[876,28573+6]..[876,28573+28])
                  Pexp_construct "Lsequence" (lambda/lambda.ml[876,28573+6]..[876,28573+15])
                  Some
                    expression (lambda/lambda.ml[876,28573+16]..[876,28573+28])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[876,28573+17]..[876,28573+21])
                          Pexp_apply
                          expression (lambda/lambda.ml[876,28573+17]..[876,28573+18])
                            Pexp_ident "f" (lambda/lambda.ml[876,28573+17]..[876,28573+18])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[876,28573+19]..[876,28573+21])
                                Pexp_ident "e1" (lambda/lambda.ml[876,28573+19]..[876,28573+21])
                          ]
                        expression (lambda/lambda.ml[876,28573+23]..[876,28573+27])
                          Pexp_apply
                          expression (lambda/lambda.ml[876,28573+23]..[876,28573+24])
                            Pexp_ident "f" (lambda/lambda.ml[876,28573+23]..[876,28573+24])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[876,28573+25]..[876,28573+27])
                                Pexp_ident "e2" (lambda/lambda.ml[876,28573+25]..[876,28573+27])
                          ]
                      ]
              <case>
                pattern (lambda/lambda.ml[877,28602+4]..[877,28602+19])
                  Ppat_construct "Lwhile" (lambda/lambda.ml[877,28602+4]..[877,28602+10])
                  Some
                    []
                    pattern (lambda/lambda.ml[877,28602+11]..[877,28602+19])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[877,28602+12]..[877,28602+14])
                          Ppat_var "e1" (lambda/lambda.ml[877,28602+12]..[877,28602+14])
                        pattern (lambda/lambda.ml[877,28602+16]..[877,28602+18])
                          Ppat_var "e2" (lambda/lambda.ml[877,28602+16]..[877,28602+18])
                      ]
                expression (lambda/lambda.ml[878,28625+6]..[878,28625+25])
                  Pexp_construct "Lwhile" (lambda/lambda.ml[878,28625+6]..[878,28625+12])
                  Some
                    expression (lambda/lambda.ml[878,28625+13]..[878,28625+25])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[878,28625+14]..[878,28625+18])
                          Pexp_apply
                          expression (lambda/lambda.ml[878,28625+14]..[878,28625+15])
                            Pexp_ident "f" (lambda/lambda.ml[878,28625+14]..[878,28625+15])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[878,28625+16]..[878,28625+18])
                                Pexp_ident "e1" (lambda/lambda.ml[878,28625+16]..[878,28625+18])
                          ]
                        expression (lambda/lambda.ml[878,28625+20]..[878,28625+24])
                          Pexp_apply
                          expression (lambda/lambda.ml[878,28625+20]..[878,28625+21])
                            Pexp_ident "f" (lambda/lambda.ml[878,28625+20]..[878,28625+21])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[878,28625+22]..[878,28625+24])
                                Pexp_ident "e2" (lambda/lambda.ml[878,28625+22]..[878,28625+24])
                          ]
                      ]
              <case>
                pattern (lambda/lambda.ml[879,28651+4]..[879,28651+29])
                  Ppat_construct "Lfor" (lambda/lambda.ml[879,28651+4]..[879,28651+8])
                  Some
                    []
                    pattern (lambda/lambda.ml[879,28651+9]..[879,28651+29])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[879,28651+10]..[879,28651+11])
                          Ppat_var "v" (lambda/lambda.ml[879,28651+10]..[879,28651+11])
                        pattern (lambda/lambda.ml[879,28651+13]..[879,28651+15])
                          Ppat_var "e1" (lambda/lambda.ml[879,28651+13]..[879,28651+15])
                        pattern (lambda/lambda.ml[879,28651+17]..[879,28651+19])
                          Ppat_var "e2" (lambda/lambda.ml[879,28651+17]..[879,28651+19])
                        pattern (lambda/lambda.ml[879,28651+21]..[879,28651+24])
                          Ppat_var "dir" (lambda/lambda.ml[879,28651+21]..[879,28651+24])
                        pattern (lambda/lambda.ml[879,28651+26]..[879,28651+28])
                          Ppat_var "e3" (lambda/lambda.ml[879,28651+26]..[879,28651+28])
                      ]
                expression (lambda/lambda.ml[880,28684+6]..[880,28684+37])
                  Pexp_construct "Lfor" (lambda/lambda.ml[880,28684+6]..[880,28684+10])
                  Some
                    expression (lambda/lambda.ml[880,28684+11]..[880,28684+37])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[880,28684+12]..[880,28684+13])
                          Pexp_ident "v" (lambda/lambda.ml[880,28684+12]..[880,28684+13])
                        expression (lambda/lambda.ml[880,28684+15]..[880,28684+19])
                          Pexp_apply
                          expression (lambda/lambda.ml[880,28684+15]..[880,28684+16])
                            Pexp_ident "f" (lambda/lambda.ml[880,28684+15]..[880,28684+16])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[880,28684+17]..[880,28684+19])
                                Pexp_ident "e1" (lambda/lambda.ml[880,28684+17]..[880,28684+19])
                          ]
                        expression (lambda/lambda.ml[880,28684+21]..[880,28684+25])
                          Pexp_apply
                          expression (lambda/lambda.ml[880,28684+21]..[880,28684+22])
                            Pexp_ident "f" (lambda/lambda.ml[880,28684+21]..[880,28684+22])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[880,28684+23]..[880,28684+25])
                                Pexp_ident "e2" (lambda/lambda.ml[880,28684+23]..[880,28684+25])
                          ]
                        expression (lambda/lambda.ml[880,28684+27]..[880,28684+30])
                          Pexp_ident "dir" (lambda/lambda.ml[880,28684+27]..[880,28684+30])
                        expression (lambda/lambda.ml[880,28684+32]..[880,28684+36])
                          Pexp_apply
                          expression (lambda/lambda.ml[880,28684+32]..[880,28684+33])
                            Pexp_ident "f" (lambda/lambda.ml[880,28684+32]..[880,28684+33])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[880,28684+34]..[880,28684+36])
                                Pexp_ident "e3" (lambda/lambda.ml[880,28684+34]..[880,28684+36])
                          ]
                      ]
              <case>
                pattern (lambda/lambda.ml[881,28722+4]..[881,28722+18])
                  Ppat_construct "Lassign" (lambda/lambda.ml[881,28722+4]..[881,28722+11])
                  Some
                    []
                    pattern (lambda/lambda.ml[881,28722+12]..[881,28722+18])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[881,28722+13]..[881,28722+14])
                          Ppat_var "v" (lambda/lambda.ml[881,28722+13]..[881,28722+14])
                        pattern (lambda/lambda.ml[881,28722+16]..[881,28722+17])
                          Ppat_var "e" (lambda/lambda.ml[881,28722+16]..[881,28722+17])
                      ]
                expression (lambda/lambda.ml[882,28744+6]..[882,28744+22])
                  Pexp_construct "Lassign" (lambda/lambda.ml[882,28744+6]..[882,28744+13])
                  Some
                    expression (lambda/lambda.ml[882,28744+14]..[882,28744+22])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[882,28744+15]..[882,28744+16])
                          Pexp_ident "v" (lambda/lambda.ml[882,28744+15]..[882,28744+16])
                        expression (lambda/lambda.ml[882,28744+18]..[882,28744+21])
                          Pexp_apply
                          expression (lambda/lambda.ml[882,28744+18]..[882,28744+19])
                            Pexp_ident "f" (lambda/lambda.ml[882,28744+18]..[882,28744+19])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[882,28744+20]..[882,28744+21])
                                Pexp_ident "e" (lambda/lambda.ml[882,28744+20]..[882,28744+21])
                          ]
                      ]
              <case>
                pattern (lambda/lambda.ml[883,28767+4]..[883,28767+28])
                  Ppat_construct "Lsend" (lambda/lambda.ml[883,28767+4]..[883,28767+9])
                  Some
                    []
                    pattern (lambda/lambda.ml[883,28767+10]..[883,28767+28])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[883,28767+11]..[883,28767+12])
                          Ppat_var "k" (lambda/lambda.ml[883,28767+11]..[883,28767+12])
                        pattern (lambda/lambda.ml[883,28767+14]..[883,28767+15])
                          Ppat_var "m" (lambda/lambda.ml[883,28767+14]..[883,28767+15])
                        pattern (lambda/lambda.ml[883,28767+17]..[883,28767+18])
                          Ppat_var "o" (lambda/lambda.ml[883,28767+17]..[883,28767+18])
                        pattern (lambda/lambda.ml[883,28767+20]..[883,28767+22])
                          Ppat_var "el" (lambda/lambda.ml[883,28767+20]..[883,28767+22])
                        pattern (lambda/lambda.ml[883,28767+24]..[883,28767+27])
                          Ppat_var "loc" (lambda/lambda.ml[883,28767+24]..[883,28767+27])
                      ]
                expression (lambda/lambda.ml[884,28799+6]..[884,28799+45])
                  Pexp_construct "Lsend" (lambda/lambda.ml[884,28799+6]..[884,28799+11])
                  Some
                    expression (lambda/lambda.ml[884,28799+12]..[884,28799+45])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[884,28799+13]..[884,28799+14])
                          Pexp_ident "k" (lambda/lambda.ml[884,28799+13]..[884,28799+14])
                        expression (lambda/lambda.ml[884,28799+16]..[884,28799+19])
                          Pexp_apply
                          expression (lambda/lambda.ml[884,28799+16]..[884,28799+17])
                            Pexp_ident "f" (lambda/lambda.ml[884,28799+16]..[884,28799+17])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[884,28799+18]..[884,28799+19])
                                Pexp_ident "m" (lambda/lambda.ml[884,28799+18]..[884,28799+19])
                          ]
                        expression (lambda/lambda.ml[884,28799+21]..[884,28799+24])
                          Pexp_apply
                          expression (lambda/lambda.ml[884,28799+21]..[884,28799+22])
                            Pexp_ident "f" (lambda/lambda.ml[884,28799+21]..[884,28799+22])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[884,28799+23]..[884,28799+24])
                                Pexp_ident "o" (lambda/lambda.ml[884,28799+23]..[884,28799+24])
                          ]
                        expression (lambda/lambda.ml[884,28799+26]..[884,28799+39])
                          Pexp_apply
                          expression (lambda/lambda.ml[884,28799+26]..[884,28799+34])
                            Pexp_ident "List.map" (lambda/lambda.ml[884,28799+26]..[884,28799+34])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[884,28799+35]..[884,28799+36])
                                Pexp_ident "f" (lambda/lambda.ml[884,28799+35]..[884,28799+36])
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[884,28799+37]..[884,28799+39])
                                Pexp_ident "el" (lambda/lambda.ml[884,28799+37]..[884,28799+39])
                          ]
                        expression (lambda/lambda.ml[884,28799+41]..[884,28799+44])
                          Pexp_ident "loc" (lambda/lambda.ml[884,28799+41]..[884,28799+44])
                      ]
              <case>
                pattern (lambda/lambda.ml[885,28845+4]..[885,28845+18])
                  Ppat_construct "Levent" (lambda/lambda.ml[885,28845+4]..[885,28845+10])
                  Some
                    []
                    pattern (lambda/lambda.ml[885,28845+11]..[885,28845+18])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[885,28845+12]..[885,28845+13])
                          Ppat_var "l" (lambda/lambda.ml[885,28845+12]..[885,28845+13])
                        pattern (lambda/lambda.ml[885,28845+15]..[885,28845+17])
                          Ppat_var "ev" (lambda/lambda.ml[885,28845+15]..[885,28845+17])
                      ]
                expression (lambda/lambda.ml[886,28867+6]..[886,28867+22])
                  Pexp_construct "Levent" (lambda/lambda.ml[886,28867+6]..[886,28867+12])
                  Some
                    expression (lambda/lambda.ml[886,28867+13]..[886,28867+22])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[886,28867+14]..[886,28867+17])
                          Pexp_apply
                          expression (lambda/lambda.ml[886,28867+14]..[886,28867+15])
                            Pexp_ident "f" (lambda/lambda.ml[886,28867+14]..[886,28867+15])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[886,28867+16]..[886,28867+17])
                                Pexp_ident "l" (lambda/lambda.ml[886,28867+16]..[886,28867+17])
                          ]
                        expression (lambda/lambda.ml[886,28867+19]..[886,28867+21])
                          Pexp_ident "ev" (lambda/lambda.ml[886,28867+19]..[886,28867+21])
                      ]
              <case>
                pattern (lambda/lambda.ml[887,28890+4]..[887,28890+18])
                  Ppat_construct "Lifused" (lambda/lambda.ml[887,28890+4]..[887,28890+11])
                  Some
                    []
                    pattern (lambda/lambda.ml[887,28890+12]..[887,28890+18])
                      Ppat_tuple
                      [
                        pattern (lambda/lambda.ml[887,28890+13]..[887,28890+14])
                          Ppat_var "v" (lambda/lambda.ml[887,28890+13]..[887,28890+14])
                        pattern (lambda/lambda.ml[887,28890+16]..[887,28890+17])
                          Ppat_var "e" (lambda/lambda.ml[887,28890+16]..[887,28890+17])
                      ]
                expression (lambda/lambda.ml[888,28912+6]..[888,28912+22])
                  Pexp_construct "Lifused" (lambda/lambda.ml[888,28912+6]..[888,28912+13])
                  Some
                    expression (lambda/lambda.ml[888,28912+14]..[888,28912+22])
                      Pexp_tuple
                      [
                        expression (lambda/lambda.ml[888,28912+15]..[888,28912+16])
                          Pexp_ident "v" (lambda/lambda.ml[888,28912+15]..[888,28912+16])
                        expression (lambda/lambda.ml[888,28912+18]..[888,28912+21])
                          Pexp_apply
                          expression (lambda/lambda.ml[888,28912+18]..[888,28912+19])
                            Pexp_ident "f" (lambda/lambda.ml[888,28912+18]..[888,28912+19])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[888,28912+20]..[888,28912+21])
                                Pexp_ident "e" (lambda/lambda.ml[888,28912+20]..[888,28912+21])
                          ]
                      ]
            ]
    ]
  structure_item (lambda/lambda.ml[890,28936+0]..[892,28991+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[890,28936+4]..[890,28936+7])
          Ppat_var "map" (lambda/lambda.ml[890,28936+4]..[890,28936+7])
        expression (lambda/lambda.ml[890,28936+8]..[892,28991+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[890,28936+8]..[890,28936+9])
            Ppat_var "f" (lambda/lambda.ml[890,28936+8]..[890,28936+9])
          expression (lambda/lambda.ml[891,28948+2]..[892,28991+3])
            Pexp_let Rec
            [
              <def>
                pattern (lambda/lambda.ml[891,28948+10]..[891,28948+11])
                  Ppat_var "g" (lambda/lambda.ml[891,28948+10]..[891,28948+11])
                expression (lambda/lambda.ml[891,28948+12]..[891,28948+39]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (lambda/lambda.ml[891,28948+12]..[891,28948+15])
                    Ppat_var "lam" (lambda/lambda.ml[891,28948+12]..[891,28948+15])
                  expression (lambda/lambda.ml[891,28948+18]..[891,28948+39])
                    Pexp_apply
                    expression (lambda/lambda.ml[891,28948+18]..[891,28948+19])
                      Pexp_ident "f" (lambda/lambda.ml[891,28948+18]..[891,28948+19])
                    [
                      <arg>
                      Nolabel
                        expression (lambda/lambda.ml[891,28948+20]..[891,28948+39])
                          Pexp_apply
                          expression (lambda/lambda.ml[891,28948+21]..[891,28948+32])
                            Pexp_ident "shallow_map" (lambda/lambda.ml[891,28948+21]..[891,28948+32])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[891,28948+33]..[891,28948+34])
                                Pexp_ident "g" (lambda/lambda.ml[891,28948+33]..[891,28948+34])
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[891,28948+35]..[891,28948+38])
                                Pexp_ident "lam" (lambda/lambda.ml[891,28948+35]..[891,28948+38])
                          ]
                    ]
            ]
            expression (lambda/lambda.ml[892,28991+2]..[892,28991+3])
              Pexp_ident "g" (lambda/lambda.ml[892,28991+2]..[892,28991+3])
    ]
  structure_item (lambda/lambda.ml[896,29040+0]..[899,29156+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[896,29040+4]..[896,29040+24])
          Ppat_var "bind_with_value_kind" (lambda/lambda.ml[896,29040+4]..[896,29040+24])
        expression (lambda/lambda.ml[896,29040+25]..[899,29156+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[896,29040+25]..[896,29040+28])
            Ppat_var "str" (lambda/lambda.ml[896,29040+25]..[896,29040+28])
          expression (lambda/lambda.ml[896,29040+29]..[899,29156+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[896,29040+29]..[896,29040+40])
              Ppat_tuple
              [
                pattern (lambda/lambda.ml[896,29040+30]..[896,29040+33])
                  Ppat_var "var" (lambda/lambda.ml[896,29040+30]..[896,29040+33])
                pattern (lambda/lambda.ml[896,29040+35]..[896,29040+39])
                  Ppat_var "kind" (lambda/lambda.ml[896,29040+35]..[896,29040+39])
              ]
            expression (lambda/lambda.ml[896,29040+41]..[899,29156+40]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/lambda.ml[896,29040+41]..[896,29040+44])
                Ppat_var "exp" (lambda/lambda.ml[896,29040+41]..[896,29040+44])
              expression (lambda/lambda.ml[896,29040+45]..[899,29156+40]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/lambda.ml[896,29040+45]..[896,29040+49])
                  Ppat_var "body" (lambda/lambda.ml[896,29040+45]..[896,29040+49])
                expression (lambda/lambda.ml[897,29092+2]..[899,29156+40])
                  Pexp_match
                  expression (lambda/lambda.ml[897,29092+8]..[897,29092+11])
                    Pexp_ident "exp" (lambda/lambda.ml[897,29092+8]..[897,29092+11])
                  [
                    <case>
                      pattern (lambda/lambda.ml[898,29109+4]..[898,29109+13])
                        Ppat_construct "Lvar" (lambda/lambda.ml[898,29109+4]..[898,29109+8])
                        Some
                          []
                          pattern (lambda/lambda.ml[898,29109+9]..[898,29109+13])
                            Ppat_var "var'" (lambda/lambda.ml[898,29109+9]..[898,29109+13])
                      <when>
                        expression (lambda/lambda.ml[898,29109+19]..[898,29109+38])
                          Pexp_apply
                          expression (lambda/lambda.ml[898,29109+19]..[898,29109+29])
                            Pexp_ident "Ident.same" (lambda/lambda.ml[898,29109+19]..[898,29109+29])
                          [
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[898,29109+30]..[898,29109+33])
                                Pexp_ident "var" (lambda/lambda.ml[898,29109+30]..[898,29109+33])
                            <arg>
                            Nolabel
                              expression (lambda/lambda.ml[898,29109+34]..[898,29109+38])
                                Pexp_ident "var'" (lambda/lambda.ml[898,29109+34]..[898,29109+38])
                          ]
                      expression (lambda/lambda.ml[898,29109+42]..[898,29109+46])
                        Pexp_ident "body" (lambda/lambda.ml[898,29109+42]..[898,29109+46])
                    <case>
                      pattern (lambda/lambda.ml[899,29156+4]..[899,29156+5])
                        Ppat_any
                      expression (lambda/lambda.ml[899,29156+9]..[899,29156+40])
                        Pexp_construct "Llet" (lambda/lambda.ml[899,29156+9]..[899,29156+13])
                        Some
                          expression (lambda/lambda.ml[899,29156+13]..[899,29156+40])
                            Pexp_tuple
                            [
                              expression (lambda/lambda.ml[899,29156+14]..[899,29156+17])
                                Pexp_ident "str" (lambda/lambda.ml[899,29156+14]..[899,29156+17])
                              expression (lambda/lambda.ml[899,29156+19]..[899,29156+23])
                                Pexp_ident "kind" (lambda/lambda.ml[899,29156+19]..[899,29156+23])
                              expression (lambda/lambda.ml[899,29156+25]..[899,29156+28])
                                Pexp_ident "var" (lambda/lambda.ml[899,29156+25]..[899,29156+28])
                              expression (lambda/lambda.ml[899,29156+30]..[899,29156+33])
                                Pexp_ident "exp" (lambda/lambda.ml[899,29156+30]..[899,29156+33])
                              expression (lambda/lambda.ml[899,29156+35]..[899,29156+39])
                                Pexp_ident "body" (lambda/lambda.ml[899,29156+35]..[899,29156+39])
                            ]
                  ]
    ]
  structure_item (lambda/lambda.ml[901,29198+0]..[902,29226+50])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[901,29198+4]..[901,29198+8])
          Ppat_var "bind" (lambda/lambda.ml[901,29198+4]..[901,29198+8])
        expression (lambda/lambda.ml[901,29198+9]..[902,29226+50]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[901,29198+9]..[901,29198+12])
            Ppat_var "str" (lambda/lambda.ml[901,29198+9]..[901,29198+12])
          expression (lambda/lambda.ml[901,29198+13]..[902,29226+50]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[901,29198+13]..[901,29198+16])
              Ppat_var "var" (lambda/lambda.ml[901,29198+13]..[901,29198+16])
            expression (lambda/lambda.ml[901,29198+17]..[902,29226+50]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (lambda/lambda.ml[901,29198+17]..[901,29198+20])
                Ppat_var "exp" (lambda/lambda.ml[901,29198+17]..[901,29198+20])
              expression (lambda/lambda.ml[901,29198+21]..[902,29226+50]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (lambda/lambda.ml[901,29198+21]..[901,29198+25])
                  Ppat_var "body" (lambda/lambda.ml[901,29198+21]..[901,29198+25])
                expression (lambda/lambda.ml[902,29226+2]..[902,29226+50])
                  Pexp_apply
                  expression (lambda/lambda.ml[902,29226+2]..[902,29226+22])
                    Pexp_ident "bind_with_value_kind" (lambda/lambda.ml[902,29226+2]..[902,29226+22])
                  [
                    <arg>
                    Nolabel
                      expression (lambda/lambda.ml[902,29226+23]..[902,29226+26])
                        Pexp_ident "str" (lambda/lambda.ml[902,29226+23]..[902,29226+26])
                    <arg>
                    Nolabel
                      expression (lambda/lambda.ml[902,29226+27]..[902,29226+41])
                        Pexp_tuple
                        [
                          expression (lambda/lambda.ml[902,29226+28]..[902,29226+31])
                            Pexp_ident "var" (lambda/lambda.ml[902,29226+28]..[902,29226+31])
                          expression (lambda/lambda.ml[902,29226+33]..[902,29226+40])
                            Pexp_construct "Pgenval" (lambda/lambda.ml[902,29226+33]..[902,29226+40])
                            None
                        ]
                    <arg>
                    Nolabel
                      expression (lambda/lambda.ml[902,29226+42]..[902,29226+45])
                        Pexp_ident "exp" (lambda/lambda.ml[902,29226+42]..[902,29226+45])
                    <arg>
                    Nolabel
                      expression (lambda/lambda.ml[902,29226+46]..[902,29226+50])
                        Pexp_ident "body" (lambda/lambda.ml[902,29226+46]..[902,29226+50])
                  ]
    ]
  structure_item (lambda/lambda.ml[904,29278+0]..[910,29394+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[904,29278+4]..[904,29278+29])
          Ppat_var "negate_integer_comparison" (lambda/lambda.ml[904,29278+4]..[904,29278+29])
        expression (lambda/lambda.ml[904,29278+32]..[910,29394+14])
          Pexp_function
          [
            <case>
              pattern (lambda/lambda.ml[905,29319+4]..[905,29319+7])
                Ppat_construct "Ceq" (lambda/lambda.ml[905,29319+4]..[905,29319+7])
                None
              expression (lambda/lambda.ml[905,29319+11]..[905,29319+14])
                Pexp_construct "Cne" (lambda/lambda.ml[905,29319+11]..[905,29319+14])
                None
            <case>
              pattern (lambda/lambda.ml[906,29334+4]..[906,29334+7])
                Ppat_construct "Cne" (lambda/lambda.ml[906,29334+4]..[906,29334+7])
                None
              expression (lambda/lambda.ml[906,29334+11]..[906,29334+14])
                Pexp_construct "Ceq" (lambda/lambda.ml[906,29334+11]..[906,29334+14])
                None
            <case>
              pattern (lambda/lambda.ml[907,29349+4]..[907,29349+7])
                Ppat_construct "Clt" (lambda/lambda.ml[907,29349+4]..[907,29349+7])
                None
              expression (lambda/lambda.ml[907,29349+11]..[907,29349+14])
                Pexp_construct "Cge" (lambda/lambda.ml[907,29349+11]..[907,29349+14])
                None
            <case>
              pattern (lambda/lambda.ml[908,29364+4]..[908,29364+7])
                Ppat_construct "Cle" (lambda/lambda.ml[908,29364+4]..[908,29364+7])
                None
              expression (lambda/lambda.ml[908,29364+11]..[908,29364+14])
                Pexp_construct "Cgt" (lambda/lambda.ml[908,29364+11]..[908,29364+14])
                None
            <case>
              pattern (lambda/lambda.ml[909,29379+4]..[909,29379+7])
                Ppat_construct "Cgt" (lambda/lambda.ml[909,29379+4]..[909,29379+7])
                None
              expression (lambda/lambda.ml[909,29379+11]..[909,29379+14])
                Pexp_construct "Cle" (lambda/lambda.ml[909,29379+11]..[909,29379+14])
                None
            <case>
              pattern (lambda/lambda.ml[910,29394+4]..[910,29394+7])
                Ppat_construct "Cge" (lambda/lambda.ml[910,29394+4]..[910,29394+7])
                None
              expression (lambda/lambda.ml[910,29394+11]..[910,29394+14])
                Pexp_construct "Clt" (lambda/lambda.ml[910,29394+11]..[910,29394+14])
                None
          ]
    ]
  structure_item (lambda/lambda.ml[912,29410+0]..[918,29524+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[912,29410+4]..[912,29410+27])
          Ppat_var "swap_integer_comparison" (lambda/lambda.ml[912,29410+4]..[912,29410+27])
        expression (lambda/lambda.ml[912,29410+30]..[918,29524+14])
          Pexp_function
          [
            <case>
              pattern (lambda/lambda.ml[913,29449+4]..[913,29449+7])
                Ppat_construct "Ceq" (lambda/lambda.ml[913,29449+4]..[913,29449+7])
                None
              expression (lambda/lambda.ml[913,29449+11]..[913,29449+14])
                Pexp_construct "Ceq" (lambda/lambda.ml[913,29449+11]..[913,29449+14])
                None
            <case>
              pattern (lambda/lambda.ml[914,29464+4]..[914,29464+7])
                Ppat_construct "Cne" (lambda/lambda.ml[914,29464+4]..[914,29464+7])
                None
              expression (lambda/lambda.ml[914,29464+11]..[914,29464+14])
                Pexp_construct "Cne" (lambda/lambda.ml[914,29464+11]..[914,29464+14])
                None
            <case>
              pattern (lambda/lambda.ml[915,29479+4]..[915,29479+7])
                Ppat_construct "Clt" (lambda/lambda.ml[915,29479+4]..[915,29479+7])
                None
              expression (lambda/lambda.ml[915,29479+11]..[915,29479+14])
                Pexp_construct "Cgt" (lambda/lambda.ml[915,29479+11]..[915,29479+14])
                None
            <case>
              pattern (lambda/lambda.ml[916,29494+4]..[916,29494+7])
                Ppat_construct "Cle" (lambda/lambda.ml[916,29494+4]..[916,29494+7])
                None
              expression (lambda/lambda.ml[916,29494+11]..[916,29494+14])
                Pexp_construct "Cge" (lambda/lambda.ml[916,29494+11]..[916,29494+14])
                None
            <case>
              pattern (lambda/lambda.ml[917,29509+4]..[917,29509+7])
                Ppat_construct "Cgt" (lambda/lambda.ml[917,29509+4]..[917,29509+7])
                None
              expression (lambda/lambda.ml[917,29509+11]..[917,29509+14])
                Pexp_construct "Clt" (lambda/lambda.ml[917,29509+11]..[917,29509+14])
                None
            <case>
              pattern (lambda/lambda.ml[918,29524+4]..[918,29524+7])
                Ppat_construct "Cge" (lambda/lambda.ml[918,29524+4]..[918,29524+7])
                None
              expression (lambda/lambda.ml[918,29524+11]..[918,29524+14])
                Pexp_construct "Cle" (lambda/lambda.ml[918,29524+11]..[918,29524+14])
                None
          ]
    ]
  structure_item (lambda/lambda.ml[920,29540+0]..[930,29741+17])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[920,29540+4]..[920,29540+27])
          Ppat_var "negate_float_comparison" (lambda/lambda.ml[920,29540+4]..[920,29540+27])
        expression (lambda/lambda.ml[920,29540+30]..[930,29741+17])
          Pexp_function
          [
            <case>
              pattern (lambda/lambda.ml[921,29579+4]..[921,29579+8])
                Ppat_construct "CFeq" (lambda/lambda.ml[921,29579+4]..[921,29579+8])
                None
              expression (lambda/lambda.ml[921,29579+12]..[921,29579+17])
                Pexp_construct "CFneq" (lambda/lambda.ml[921,29579+12]..[921,29579+17])
                None
            <case>
              pattern (lambda/lambda.ml[922,29597+4]..[922,29597+9])
                Ppat_construct "CFneq" (lambda/lambda.ml[922,29597+4]..[922,29597+9])
                None
              expression (lambda/lambda.ml[922,29597+13]..[922,29597+17])
                Pexp_construct "CFeq" (lambda/lambda.ml[922,29597+13]..[922,29597+17])
                None
            <case>
              pattern (lambda/lambda.ml[923,29615+4]..[923,29615+8])
                Ppat_construct "CFlt" (lambda/lambda.ml[923,29615+4]..[923,29615+8])
                None
              expression (lambda/lambda.ml[923,29615+12]..[923,29615+17])
                Pexp_construct "CFnlt" (lambda/lambda.ml[923,29615+12]..[923,29615+17])
                None
            <case>
              pattern (lambda/lambda.ml[924,29633+4]..[924,29633+9])
                Ppat_construct "CFnlt" (lambda/lambda.ml[924,29633+4]..[924,29633+9])
                None
              expression (lambda/lambda.ml[924,29633+13]..[924,29633+17])
                Pexp_construct "CFlt" (lambda/lambda.ml[924,29633+13]..[924,29633+17])
                None
            <case>
              pattern (lambda/lambda.ml[925,29651+4]..[925,29651+8])
                Ppat_construct "CFgt" (lambda/lambda.ml[925,29651+4]..[925,29651+8])
                None
              expression (lambda/lambda.ml[925,29651+12]..[925,29651+17])
                Pexp_construct "CFngt" (lambda/lambda.ml[925,29651+12]..[925,29651+17])
                None
            <case>
              pattern (lambda/lambda.ml[926,29669+4]..[926,29669+9])
                Ppat_construct "CFngt" (lambda/lambda.ml[926,29669+4]..[926,29669+9])
                None
              expression (lambda/lambda.ml[926,29669+13]..[926,29669+17])
                Pexp_construct "CFgt" (lambda/lambda.ml[926,29669+13]..[926,29669+17])
                None
            <case>
              pattern (lambda/lambda.ml[927,29687+4]..[927,29687+8])
                Ppat_construct "CFle" (lambda/lambda.ml[927,29687+4]..[927,29687+8])
                None
              expression (lambda/lambda.ml[927,29687+12]..[927,29687+17])
                Pexp_construct "CFnle" (lambda/lambda.ml[927,29687+12]..[927,29687+17])
                None
            <case>
              pattern (lambda/lambda.ml[928,29705+4]..[928,29705+9])
                Ppat_construct "CFnle" (lambda/lambda.ml[928,29705+4]..[928,29705+9])
                None
              expression (lambda/lambda.ml[928,29705+13]..[928,29705+17])
                Pexp_construct "CFle" (lambda/lambda.ml[928,29705+13]..[928,29705+17])
                None
            <case>
              pattern (lambda/lambda.ml[929,29723+4]..[929,29723+8])
                Ppat_construct "CFge" (lambda/lambda.ml[929,29723+4]..[929,29723+8])
                None
              expression (lambda/lambda.ml[929,29723+12]..[929,29723+17])
                Pexp_construct "CFnge" (lambda/lambda.ml[929,29723+12]..[929,29723+17])
                None
            <case>
              pattern (lambda/lambda.ml[930,29741+4]..[930,29741+9])
                Ppat_construct "CFnge" (lambda/lambda.ml[930,29741+4]..[930,29741+9])
                None
              expression (lambda/lambda.ml[930,29741+13]..[930,29741+17])
                Pexp_construct "CFge" (lambda/lambda.ml[930,29741+13]..[930,29741+17])
                None
          ]
    ]
  structure_item (lambda/lambda.ml[932,29760+0]..[942,29958+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[932,29760+4]..[932,29760+25])
          Ppat_var "swap_float_comparison" (lambda/lambda.ml[932,29760+4]..[932,29760+25])
        expression (lambda/lambda.ml[932,29760+28]..[942,29958+18])
          Pexp_function
          [
            <case>
              pattern (lambda/lambda.ml[933,29797+4]..[933,29797+8])
                Ppat_construct "CFeq" (lambda/lambda.ml[933,29797+4]..[933,29797+8])
                None
              expression (lambda/lambda.ml[933,29797+12]..[933,29797+16])
                Pexp_construct "CFeq" (lambda/lambda.ml[933,29797+12]..[933,29797+16])
                None
            <case>
              pattern (lambda/lambda.ml[934,29814+4]..[934,29814+9])
                Ppat_construct "CFneq" (lambda/lambda.ml[934,29814+4]..[934,29814+9])
                None
              expression (lambda/lambda.ml[934,29814+13]..[934,29814+18])
                Pexp_construct "CFneq" (lambda/lambda.ml[934,29814+13]..[934,29814+18])
                None
            <case>
              pattern (lambda/lambda.ml[935,29833+4]..[935,29833+8])
                Ppat_construct "CFlt" (lambda/lambda.ml[935,29833+4]..[935,29833+8])
                None
              expression (lambda/lambda.ml[935,29833+12]..[935,29833+16])
                Pexp_construct "CFgt" (lambda/lambda.ml[935,29833+12]..[935,29833+16])
                None
            <case>
              pattern (lambda/lambda.ml[936,29850+4]..[936,29850+9])
                Ppat_construct "CFnlt" (lambda/lambda.ml[936,29850+4]..[936,29850+9])
                None
              expression (lambda/lambda.ml[936,29850+13]..[936,29850+18])
                Pexp_construct "CFngt" (lambda/lambda.ml[936,29850+13]..[936,29850+18])
                None
            <case>
              pattern (lambda/lambda.ml[937,29869+4]..[937,29869+8])
                Ppat_construct "CFle" (lambda/lambda.ml[937,29869+4]..[937,29869+8])
                None
              expression (lambda/lambda.ml[937,29869+12]..[937,29869+16])
                Pexp_construct "CFge" (lambda/lambda.ml[937,29869+12]..[937,29869+16])
                None
            <case>
              pattern (lambda/lambda.ml[938,29886+4]..[938,29886+9])
                Ppat_construct "CFnle" (lambda/lambda.ml[938,29886+4]..[938,29886+9])
                None
              expression (lambda/lambda.ml[938,29886+13]..[938,29886+18])
                Pexp_construct "CFnge" (lambda/lambda.ml[938,29886+13]..[938,29886+18])
                None
            <case>
              pattern (lambda/lambda.ml[939,29905+4]..[939,29905+8])
                Ppat_construct "CFgt" (lambda/lambda.ml[939,29905+4]..[939,29905+8])
                None
              expression (lambda/lambda.ml[939,29905+12]..[939,29905+16])
                Pexp_construct "CFlt" (lambda/lambda.ml[939,29905+12]..[939,29905+16])
                None
            <case>
              pattern (lambda/lambda.ml[940,29922+4]..[940,29922+9])
                Ppat_construct "CFngt" (lambda/lambda.ml[940,29922+4]..[940,29922+9])
                None
              expression (lambda/lambda.ml[940,29922+13]..[940,29922+18])
                Pexp_construct "CFnlt" (lambda/lambda.ml[940,29922+13]..[940,29922+18])
                None
            <case>
              pattern (lambda/lambda.ml[941,29941+4]..[941,29941+8])
                Ppat_construct "CFge" (lambda/lambda.ml[941,29941+4]..[941,29941+8])
                None
              expression (lambda/lambda.ml[941,29941+12]..[941,29941+16])
                Pexp_construct "CFle" (lambda/lambda.ml[941,29941+12]..[941,29941+16])
                None
            <case>
              pattern (lambda/lambda.ml[942,29958+4]..[942,29958+9])
                Ppat_construct "CFnge" (lambda/lambda.ml[942,29958+4]..[942,29958+9])
                None
              expression (lambda/lambda.ml[942,29958+13]..[942,29958+18])
                Pexp_construct "CFnle" (lambda/lambda.ml[942,29958+13]..[942,29958+18])
                None
          ]
    ]
  structure_item (lambda/lambda.ml[944,29978+0]..[947,30064+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[944,29978+4]..[944,29978+14])
          Ppat_var "raise_kind" (lambda/lambda.ml[944,29978+4]..[944,29978+14])
        expression (lambda/lambda.ml[944,29978+17]..[947,30064+36])
          Pexp_function
          [
            <case>
              pattern (lambda/lambda.ml[945,30004+4]..[945,30004+17])
                Ppat_construct "Raise_regular" (lambda/lambda.ml[945,30004+4]..[945,30004+17])
                None
              expression (lambda/lambda.ml[945,30004+21]..[945,30004+28])
                Pexp_constant PConst_string("raise",(lambda/lambda.ml[945,30004+22]..[945,30004+27]),None)
            <case>
              pattern (lambda/lambda.ml[946,30033+4]..[946,30033+17])
                Ppat_construct "Raise_reraise" (lambda/lambda.ml[946,30033+4]..[946,30033+17])
                None
              expression (lambda/lambda.ml[946,30033+21]..[946,30033+30])
                Pexp_constant PConst_string("reraise",(lambda/lambda.ml[946,30033+22]..[946,30033+29]),None)
            <case>
              pattern (lambda/lambda.ml[947,30064+4]..[947,30064+17])
                Ppat_construct "Raise_notrace" (lambda/lambda.ml[947,30064+4]..[947,30064+17])
                None
              expression (lambda/lambda.ml[947,30064+21]..[947,30064+36])
                Pexp_constant PConst_string("raise_notrace",(lambda/lambda.ml[947,30064+22]..[947,30064+35]),None)
          ]
    ]
  structure_item (lambda/lambda.ml[949,30102+0]..[955,30291+13])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[949,30102+4]..[949,30102+27])
          Ppat_var "merge_inline_attributes" (lambda/lambda.ml[949,30102+4]..[949,30102+27])
        expression (lambda/lambda.ml[949,30102+28]..[955,30291+13]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[949,30102+28]..[949,30102+33])
            Ppat_var "attr1" (lambda/lambda.ml[949,30102+28]..[949,30102+33])
          expression (lambda/lambda.ml[949,30102+34]..[955,30291+13]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (lambda/lambda.ml[949,30102+34]..[949,30102+39])
              Ppat_var "attr2" (lambda/lambda.ml[949,30102+34]..[949,30102+39])
            expression (lambda/lambda.ml[950,30144+2]..[955,30291+13])
              Pexp_match
              expression (lambda/lambda.ml[950,30144+8]..[950,30144+20])
                Pexp_tuple
                [
                  expression (lambda/lambda.ml[950,30144+8]..[950,30144+13])
                    Pexp_ident "attr1" (lambda/lambda.ml[950,30144+8]..[950,30144+13])
                  expression (lambda/lambda.ml[950,30144+15]..[950,30144+20])
                    Pexp_ident "attr2" (lambda/lambda.ml[950,30144+15]..[950,30144+20])
                ]
              [
                <case>
                  pattern (lambda/lambda.ml[951,30170+4]..[951,30170+21])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[951,30170+4]..[951,30170+18])
                        Ppat_construct "Default_inline" (lambda/lambda.ml[951,30170+4]..[951,30170+18])
                        None
                      pattern (lambda/lambda.ml[951,30170+20]..[951,30170+21])
                        Ppat_any
                    ]
                  expression (lambda/lambda.ml[951,30170+25]..[951,30170+35])
                    Pexp_construct "Some" (lambda/lambda.ml[951,30170+25]..[951,30170+29])
                    Some
                      expression (lambda/lambda.ml[951,30170+30]..[951,30170+35])
                        Pexp_ident "attr2" (lambda/lambda.ml[951,30170+30]..[951,30170+35])
                <case>
                  pattern (lambda/lambda.ml[952,30206+4]..[952,30206+21])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[952,30206+4]..[952,30206+5])
                        Ppat_any
                      pattern (lambda/lambda.ml[952,30206+7]..[952,30206+21])
                        Ppat_construct "Default_inline" (lambda/lambda.ml[952,30206+7]..[952,30206+21])
                        None
                    ]
                  expression (lambda/lambda.ml[952,30206+25]..[952,30206+35])
                    Pexp_construct "Some" (lambda/lambda.ml[952,30206+25]..[952,30206+29])
                    Some
                      expression (lambda/lambda.ml[952,30206+30]..[952,30206+35])
                        Pexp_ident "attr1" (lambda/lambda.ml[952,30206+30]..[952,30206+35])
                <case>
                  pattern (lambda/lambda.ml[953,30242+4]..[953,30242+8])
                    Ppat_tuple
                    [
                      pattern (lambda/lambda.ml[953,30242+4]..[953,30242+5])
                        Ppat_any
                      pattern (lambda/lambda.ml[953,30242+7]..[953,30242+8])
                        Ppat_any
                    ]
                  expression (lambda/lambda.ml[954,30254+4]..[955,30291+13])
                    Pexp_ifthenelse
                    expression (lambda/lambda.ml[954,30254+7]..[954,30254+20])
                      Pexp_apply
                      expression (lambda/lambda.ml[954,30254+13]..[954,30254+14])
                        Pexp_ident "=" (lambda/lambda.ml[954,30254+13]..[954,30254+14])
                      [
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[954,30254+7]..[954,30254+12])
                            Pexp_ident "attr1" (lambda/lambda.ml[954,30254+7]..[954,30254+12])
                        <arg>
                        Nolabel
                          expression (lambda/lambda.ml[954,30254+15]..[954,30254+20])
                            Pexp_ident "attr2" (lambda/lambda.ml[954,30254+15]..[954,30254+20])
                      ]
                    expression (lambda/lambda.ml[954,30254+26]..[954,30254+36])
                      Pexp_construct "Some" (lambda/lambda.ml[954,30254+26]..[954,30254+30])
                      Some
                        expression (lambda/lambda.ml[954,30254+31]..[954,30254+36])
                          Pexp_ident "attr1" (lambda/lambda.ml[954,30254+31]..[954,30254+36])
                    Some
                      expression (lambda/lambda.ml[955,30291+9]..[955,30291+13])
                        Pexp_construct "None" (lambda/lambda.ml[955,30291+9]..[955,30291+13])
                        None
              ]
    ]
  structure_item (lambda/lambda.ml[957,30306+0]..[960,30380+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[957,30306+4]..[957,30306+23])
          Ppat_var "function_is_curried" (lambda/lambda.ml[957,30306+4]..[957,30306+23])
        expression (lambda/lambda.ml[957,30306+24]..[960,30380+19]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[957,30306+24]..[957,30306+28])
            Ppat_var "func" (lambda/lambda.ml[957,30306+24]..[957,30306+28])
          expression (lambda/lambda.ml[958,30337+2]..[960,30380+19])
            Pexp_match
            expression (lambda/lambda.ml[958,30337+8]..[958,30337+17])
              Pexp_field
              expression (lambda/lambda.ml[958,30337+8]..[958,30337+12])
                Pexp_ident "func" (lambda/lambda.ml[958,30337+8]..[958,30337+12])
              "kind" (lambda/lambda.ml[958,30337+13]..[958,30337+17])
            [
              <case>
                pattern (lambda/lambda.ml[959,30360+4]..[959,30360+11])
                  Ppat_construct "Curried" (lambda/lambda.ml[959,30360+4]..[959,30360+11])
                  None
                expression (lambda/lambda.ml[959,30360+15]..[959,30360+19])
                  Pexp_construct "true" (lambda/lambda.ml[959,30360+15]..[959,30360+19])
                  None
              <case>
                pattern (lambda/lambda.ml[960,30380+4]..[960,30380+10])
                  Ppat_construct "Tupled" (lambda/lambda.ml[960,30380+4]..[960,30380+10])
                  None
                expression (lambda/lambda.ml[960,30380+14]..[960,30380+19])
                  Pexp_construct "false" (lambda/lambda.ml[960,30380+14]..[960,30380+19])
                  None
            ]
    ]
  structure_item (lambda/lambda.ml[962,30401+0]..[963,30420+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[962,30401+4]..[962,30401+13])
          Ppat_var "max_arity" (lambda/lambda.ml[962,30401+4]..[962,30401+13])
        expression (lambda/lambda.ml[962,30401+14]..[963,30420+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[962,30401+14]..[962,30401+16])
            Ppat_construct "()" (lambda/lambda.ml[962,30401+14]..[962,30401+16])
            None
          expression (lambda/lambda.ml[963,30420+2]..[963,30420+47])
            Pexp_ifthenelse
            expression (lambda/lambda.ml[963,30420+5]..[963,30420+25])
              Pexp_apply
              expression (lambda/lambda.ml[963,30420+5]..[963,30420+6])
                Pexp_ident "!" (lambda/lambda.ml[963,30420+5]..[963,30420+6])
              [
                <arg>
                Nolabel
                  expression (lambda/lambda.ml[963,30420+6]..[963,30420+25])
                    Pexp_ident "Clflags.native_code" (lambda/lambda.ml[963,30420+6]..[963,30420+25])
              ]
            expression (lambda/lambda.ml[963,30420+31]..[963,30420+34])
              Pexp_constant PConst_int (126,None)
            Some
              expression (lambda/lambda.ml[963,30420+40]..[963,30420+47])
                Pexp_ident "max_int" (lambda/lambda.ml[963,30420+40]..[963,30420+47])
    ]
  structure_item (lambda/lambda.ml[967,30604+0]..[968,30619+18])
    Pstr_value Nonrec
    [
      <def>
        pattern (lambda/lambda.ml[967,30604+4]..[967,30604+9])
          Ppat_var "reset" (lambda/lambda.ml[967,30604+4]..[967,30604+9])
        expression (lambda/lambda.ml[967,30604+10]..[968,30619+18]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (lambda/lambda.ml[967,30604+10]..[967,30604+12])
            Ppat_construct "()" (lambda/lambda.ml[967,30604+10]..[967,30604+12])
            None
          expression (lambda/lambda.ml[968,30619+2]..[968,30619+18])
            Pexp_apply
            expression (lambda/lambda.ml[968,30619+14]..[968,30619+16])
              Pexp_ident ":=" (lambda/lambda.ml[968,30619+14]..[968,30619+16])
            [
              <arg>
              Nolabel
                expression (lambda/lambda.ml[968,30619+2]..[968,30619+13])
                  Pexp_ident "raise_count" (lambda/lambda.ml[968,30619+2]..[968,30619+13])
              <arg>
              Nolabel
                expression (lambda/lambda.ml[968,30619+17]..[968,30619+18])
                  Pexp_constant PConst_int (0,None)
            ]
    ]
]

