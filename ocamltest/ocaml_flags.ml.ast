[
  structure_item (ocamltest/ocaml_flags.ml[18,1115+0]..[20,1176+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/ocaml_flags.ml[18,1115+4]..[18,1115+10])
          Ppat_var "stdlib" (ocamltest/ocaml_flags.ml[18,1115+4]..[18,1115+10])
        expression (ocamltest/ocaml_flags.ml[19,1128+2]..[20,1176+31])
          Pexp_let Nonrec
          [
            <def>
              pattern (ocamltest/ocaml_flags.ml[19,1128+6]..[19,1128+17])
                Ppat_var "stdlib_path" (ocamltest/ocaml_flags.ml[19,1128+6]..[19,1128+17])
              expression (ocamltest/ocaml_flags.ml[19,1128+20]..[19,1128+44])
                Pexp_ident "Ocaml_directories.stdlib" (ocamltest/ocaml_flags.ml[19,1128+20]..[19,1128+44])
          ]
          expression (ocamltest/ocaml_flags.ml[20,1176+2]..[20,1176+31])
            Pexp_apply
            expression (ocamltest/ocaml_flags.ml[20,1176+18]..[20,1176+19])
              Pexp_ident "^" (ocamltest/ocaml_flags.ml[20,1176+18]..[20,1176+19])
            [
              <arg>
              Nolabel
                expression (ocamltest/ocaml_flags.ml[20,1176+2]..[20,1176+17])
                  Pexp_constant PConst_string("-nostdlib -I ",(ocamltest/ocaml_flags.ml[20,1176+3]..[20,1176+16]),None)
              <arg>
              Nolabel
                expression (ocamltest/ocaml_flags.ml[20,1176+20]..[20,1176+31])
                  Pexp_ident "stdlib_path" (ocamltest/ocaml_flags.ml[20,1176+20]..[20,1176+31])
            ]
    ]
  structure_item (ocamltest/ocaml_flags.ml[22,1209+0]..[23,1242+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/ocaml_flags.ml[22,1209+4]..[22,1209+30])
          Ppat_var "include_toplevel_directory" (ocamltest/ocaml_flags.ml[22,1209+4]..[22,1209+30])
        expression (ocamltest/ocaml_flags.ml[23,1242+2]..[23,1242+36])
          Pexp_apply
          expression (ocamltest/ocaml_flags.ml[23,1242+8]..[23,1242+9])
            Pexp_ident "^" (ocamltest/ocaml_flags.ml[23,1242+8]..[23,1242+9])
          [
            <arg>
            Nolabel
              expression (ocamltest/ocaml_flags.ml[23,1242+2]..[23,1242+7])
                Pexp_constant PConst_string("-I ",(ocamltest/ocaml_flags.ml[23,1242+3]..[23,1242+6]),None)
            <arg>
            Nolabel
              expression (ocamltest/ocaml_flags.ml[23,1242+10]..[23,1242+36])
                Pexp_ident "Ocaml_directories.toplevel" (ocamltest/ocaml_flags.ml[23,1242+10]..[23,1242+36])
          ]
    ]
  structure_item (ocamltest/ocaml_flags.ml[25,1280+0]..[27,1338+19])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/ocaml_flags.ml[25,1280+4]..[25,1280+14])
          Ppat_var "c_includes" (ocamltest/ocaml_flags.ml[25,1280+4]..[25,1280+14])
        expression (ocamltest/ocaml_flags.ml[26,1297+2]..[27,1338+19])
          Pexp_let Nonrec
          [
            <def>
              pattern (ocamltest/ocaml_flags.ml[26,1297+6]..[26,1297+9])
                Ppat_var "dir" (ocamltest/ocaml_flags.ml[26,1297+6]..[26,1297+9])
              expression (ocamltest/ocaml_flags.ml[26,1297+12]..[26,1297+37])
                Pexp_ident "Ocaml_directories.runtime" (ocamltest/ocaml_flags.ml[26,1297+12]..[26,1297+37])
          ]
          expression (ocamltest/ocaml_flags.ml[27,1338+2]..[27,1338+19])
            Pexp_apply
            expression (ocamltest/ocaml_flags.ml[27,1338+14]..[27,1338+15])
              Pexp_ident "^" (ocamltest/ocaml_flags.ml[27,1338+14]..[27,1338+15])
            [
              <arg>
              Nolabel
                expression (ocamltest/ocaml_flags.ml[27,1338+2]..[27,1338+13])
                  Pexp_constant PConst_string("-ccopt -I",(ocamltest/ocaml_flags.ml[27,1338+3]..[27,1338+12]),None)
              <arg>
              Nolabel
                expression (ocamltest/ocaml_flags.ml[27,1338+16]..[27,1338+19])
                  Pexp_ident "dir" (ocamltest/ocaml_flags.ml[27,1338+16]..[27,1338+19])
            ]
    ]
  structure_item (ocamltest/ocaml_flags.ml[29,1359+0]..[32,1507+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/ocaml_flags.ml[29,1359+4]..[29,1359+25])
          Ppat_var "runtime_variant_flags" (ocamltest/ocaml_flags.ml[29,1359+4]..[29,1359+25])
        expression (ocamltest/ocaml_flags.ml[29,1359+26]..[32,1507+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (ocamltest/ocaml_flags.ml[29,1359+26]..[29,1359+28])
            Ppat_construct "()" (ocamltest/ocaml_flags.ml[29,1359+26]..[29,1359+28])
            None
          expression (ocamltest/ocaml_flags.ml[29,1359+31]..[32,1507+53])
            Pexp_match
            expression (ocamltest/ocaml_flags.ml[29,1359+37]..[29,1359+66])
              Pexp_apply
              expression (ocamltest/ocaml_flags.ml[29,1359+37]..[29,1359+64])
                Pexp_ident "Ocaml_files.runtime_variant" (ocamltest/ocaml_flags.ml[29,1359+37]..[29,1359+64])
              [
                <arg>
                Nolabel
                  expression (ocamltest/ocaml_flags.ml[29,1359+64]..[29,1359+66])
                    Pexp_construct "()" (ocamltest/ocaml_flags.ml[29,1359+64]..[29,1359+66])
                    None
              ]
            [
              <case>
                pattern (ocamltest/ocaml_flags.ml[30,1431+4]..[30,1431+22])
                  Ppat_construct "Ocaml_files.Normal" (ocamltest/ocaml_flags.ml[30,1431+4]..[30,1431+22])
                  None
                expression (ocamltest/ocaml_flags.ml[30,1431+26]..[30,1431+28])
                  Pexp_constant PConst_string("",(ocamltest/ocaml_flags.ml[30,1431+27]..[30,1431+27]),None)
              <case>
                pattern (ocamltest/ocaml_flags.ml[31,1460+4]..[31,1460+21])
                  Ppat_construct "Ocaml_files.Debug" (ocamltest/ocaml_flags.ml[31,1460+4]..[31,1460+21])
                  None
                expression (ocamltest/ocaml_flags.ml[31,1460+25]..[31,1460+46])
                  Pexp_constant PConst_string(" -runtime-variant d",(ocamltest/ocaml_flags.ml[31,1460+26]..[31,1460+45]),None)
              <case>
                pattern (ocamltest/ocaml_flags.ml[32,1507+4]..[32,1507+28])
                  Ppat_construct "Ocaml_files.Instrumented" (ocamltest/ocaml_flags.ml[32,1507+4]..[32,1507+28])
                  None
                expression (ocamltest/ocaml_flags.ml[32,1507+32]..[32,1507+53])
                  Pexp_constant PConst_string(" -runtime-variant i",(ocamltest/ocaml_flags.ml[32,1507+33]..[32,1507+52]),None)
            ]
    ]
  structure_item (ocamltest/ocaml_flags.ml[34,1562+0]..[52,2201+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/ocaml_flags.ml[34,1562+4]..[34,1562+17])
          Ppat_var "runtime_flags" (ocamltest/ocaml_flags.ml[34,1562+4]..[34,1562+17])
        expression (ocamltest/ocaml_flags.ml[34,1562+18]..[52,2201+40]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (ocamltest/ocaml_flags.ml[34,1562+18]..[34,1562+21])
            Ppat_var "env" (ocamltest/ocaml_flags.ml[34,1562+18]..[34,1562+21])
          expression (ocamltest/ocaml_flags.ml[34,1562+22]..[52,2201+40]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (ocamltest/ocaml_flags.ml[34,1562+22]..[34,1562+29])
              Ppat_var "backend" (ocamltest/ocaml_flags.ml[34,1562+22]..[34,1562+29])
            expression (ocamltest/ocaml_flags.ml[34,1562+30]..[52,2201+40]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (ocamltest/ocaml_flags.ml[34,1562+30]..[34,1562+37])
                Ppat_var "c_files" (ocamltest/ocaml_flags.ml[34,1562+30]..[34,1562+37])
              expression (ocamltest/ocaml_flags.ml[35,1602+2]..[52,2201+40])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (ocamltest/ocaml_flags.ml[35,1602+6]..[35,1602+27])
                      Ppat_var "runtime_library_flags" (ocamltest/ocaml_flags.ml[35,1602+6]..[35,1602+27])
                    expression (ocamltest/ocaml_flags.ml[35,1602+30]..[36,1640+29])
                      Pexp_apply
                      expression (ocamltest/ocaml_flags.ml[35,1602+36]..[35,1602+37])
                        Pexp_ident "^" (ocamltest/ocaml_flags.ml[35,1602+36]..[35,1602+37])
                      [
                        <arg>
                        Nolabel
                          expression (ocamltest/ocaml_flags.ml[35,1602+30]..[35,1602+35])
                            Pexp_constant PConst_string("-I ",(ocamltest/ocaml_flags.ml[35,1602+31]..[35,1602+34]),None)
                        <arg>
                        Nolabel
                          expression (ocamltest/ocaml_flags.ml[36,1640+4]..[36,1640+29])
                            Pexp_ident "Ocaml_directories.runtime" (ocamltest/ocaml_flags.ml[36,1640+4]..[36,1640+29])
                      ]
                ]
                expression (ocamltest/ocaml_flags.ml[37,1673+2]..[52,2201+40])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (ocamltest/ocaml_flags.ml[37,1673+6]..[37,1673+14])
                        Ppat_var "rt_flags" (ocamltest/ocaml_flags.ml[37,1673+6]..[37,1673+14])
                      expression (ocamltest/ocaml_flags.ml[37,1673+17]..[51,2188+9])
                        Pexp_match
                        expression (ocamltest/ocaml_flags.ml[37,1673+23]..[37,1673+30])
                          Pexp_ident "backend" (ocamltest/ocaml_flags.ml[37,1673+23]..[37,1673+30])
                        [
                          <case>
                            pattern (ocamltest/ocaml_flags.ml[38,1709+6]..[38,1709+27])
                              Ppat_construct "Ocaml_backends.Native" (ocamltest/ocaml_flags.ml[38,1709+6]..[38,1709+27])
                              None
                            expression (ocamltest/ocaml_flags.ml[38,1709+31]..[38,1709+55])
                              Pexp_apply
                              expression (ocamltest/ocaml_flags.ml[38,1709+31]..[38,1709+52])
                                Pexp_ident "runtime_variant_flags" (ocamltest/ocaml_flags.ml[38,1709+31]..[38,1709+52])
                              [
                                <arg>
                                Nolabel
                                  expression (ocamltest/ocaml_flags.ml[38,1709+53]..[38,1709+55])
                                    Pexp_construct "()" (ocamltest/ocaml_flags.ml[38,1709+53]..[38,1709+55])
                                    None
                              ]
                          <case>
                            pattern (ocamltest/ocaml_flags.ml[39,1765+6]..[39,1765+29])
                              Ppat_construct "Ocaml_backends.Bytecode" (ocamltest/ocaml_flags.ml[39,1765+6]..[39,1765+29])
                              None
                            expression (ocamltest/ocaml_flags.ml[40,1798+6]..[51,2188+9])
                              Pexp_ifthenelse
                              expression (ocamltest/ocaml_flags.ml[41,1810+11]..[41,1810+18])
                                Pexp_ident "c_files" (ocamltest/ocaml_flags.ml[41,1810+11]..[41,1810+18])
                              expression (ocamltest/ocaml_flags.ml[41,1810+24]..[43,1908+11])
                                Pexp_apply
                                expression (ocamltest/ocaml_flags.ml[42,1858+21]..[42,1858+22])
                                  Pexp_ident "^" (ocamltest/ocaml_flags.ml[42,1858+21]..[42,1858+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (ocamltest/ocaml_flags.ml[42,1858+10]..[42,1858+20])
                                      Pexp_constant PConst_string("-custom ",(ocamltest/ocaml_flags.ml[42,1858+11]..[42,1858+19]),None)
                                  <arg>
                                  Nolabel
                                    expression (ocamltest/ocaml_flags.ml[42,1858+23]..[42,1858+49])
                                      Pexp_apply
                                      expression (ocamltest/ocaml_flags.ml[42,1858+24]..[42,1858+45])
                                        Pexp_ident "runtime_variant_flags" (ocamltest/ocaml_flags.ml[42,1858+24]..[42,1858+45])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (ocamltest/ocaml_flags.ml[42,1858+46]..[42,1858+48])
                                            Pexp_construct "()" (ocamltest/ocaml_flags.ml[42,1858+46]..[42,1858+48])
                                            None
                                      ]
                                ]
                              Some
                                expression (ocamltest/ocaml_flags.ml[43,1908+17]..[50,2176+11])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (ocamltest/ocaml_flags.ml[44,1953+14]..[44,1953+25])
                                        Ppat_var "use_runtime" (ocamltest/ocaml_flags.ml[44,1953+14]..[44,1953+25])
                                      expression (ocamltest/ocaml_flags.ml[45,1981+12]..[45,1981+71])
                                        Pexp_apply
                                        expression (ocamltest/ocaml_flags.ml[45,1981+12]..[45,1981+39])
                                          Pexp_ident "Environments.lookup_as_bool" (ocamltest/ocaml_flags.ml[45,1981+12]..[45,1981+39])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (ocamltest/ocaml_flags.ml[45,1981+40]..[45,1981+67])
                                              Pexp_ident "Ocaml_variables.use_runtime" (ocamltest/ocaml_flags.ml[45,1981+40]..[45,1981+67])
                                          <arg>
                                          Nolabel
                                            expression (ocamltest/ocaml_flags.ml[45,1981+68]..[45,1981+71])
                                              Pexp_ident "env" (ocamltest/ocaml_flags.ml[45,1981+68]..[45,1981+71])
                                        ]
                                  ]
                                  expression (ocamltest/ocaml_flags.ml[47,2066+10]..[49,2122+53])
                                    Pexp_ifthenelse
                                    expression (ocamltest/ocaml_flags.ml[47,2066+13]..[47,2066+37])
                                      Pexp_apply
                                      expression (ocamltest/ocaml_flags.ml[47,2066+25]..[47,2066+26])
                                        Pexp_ident "=" (ocamltest/ocaml_flags.ml[47,2066+25]..[47,2066+26])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (ocamltest/ocaml_flags.ml[47,2066+13]..[47,2066+24])
                                            Pexp_ident "use_runtime" (ocamltest/ocaml_flags.ml[47,2066+13]..[47,2066+24])
                                        <arg>
                                        Nolabel
                                          expression (ocamltest/ocaml_flags.ml[47,2066+27]..[47,2066+37])
                                            Pexp_construct "Some" (ocamltest/ocaml_flags.ml[47,2066+27]..[47,2066+31])
                                            Some
                                              expression (ocamltest/ocaml_flags.ml[47,2066+32]..[47,2066+37])
                                                Pexp_construct "false" (ocamltest/ocaml_flags.ml[47,2066+32]..[47,2066+37])
                                                None
                                      ]
                                    expression (ocamltest/ocaml_flags.ml[48,2104+15]..[48,2104+17])
                                      Pexp_constant PConst_string("",(ocamltest/ocaml_flags.ml[48,2104+16]..[48,2104+16]),None)
                                    Some
                                      expression (ocamltest/ocaml_flags.ml[49,2122+15]..[49,2122+53])
                                        Pexp_apply
                                        expression (ocamltest/ocaml_flags.ml[49,2122+31]..[49,2122+32])
                                          Pexp_ident "^" (ocamltest/ocaml_flags.ml[49,2122+31]..[49,2122+32])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (ocamltest/ocaml_flags.ml[49,2122+15]..[49,2122+30])
                                              Pexp_constant PConst_string("-use-runtime ",(ocamltest/ocaml_flags.ml[49,2122+16]..[49,2122+29]),None)
                                          <arg>
                                          Nolabel
                                            expression (ocamltest/ocaml_flags.ml[49,2122+33]..[49,2122+53])
                                              Pexp_ident "Ocaml_files.ocamlrun" (ocamltest/ocaml_flags.ml[49,2122+33]..[49,2122+53])
                                        ]
                        ]
                  ]
                  expression (ocamltest/ocaml_flags.ml[52,2201+2]..[52,2201+40])
                    Pexp_apply
                    expression (ocamltest/ocaml_flags.ml[52,2201+11]..[52,2201+12])
                      Pexp_ident "^" (ocamltest/ocaml_flags.ml[52,2201+11]..[52,2201+12])
                    [
                      <arg>
                      Nolabel
                        expression (ocamltest/ocaml_flags.ml[52,2201+2]..[52,2201+10])
                          Pexp_ident "rt_flags" (ocamltest/ocaml_flags.ml[52,2201+2]..[52,2201+10])
                      <arg>
                      Nolabel
                        expression (ocamltest/ocaml_flags.ml[52,2201+13]..[52,2201+40])
                          Pexp_apply
                          expression (ocamltest/ocaml_flags.ml[52,2201+17]..[52,2201+18])
                            Pexp_ident "^" (ocamltest/ocaml_flags.ml[52,2201+17]..[52,2201+18])
                          [
                            <arg>
                            Nolabel
                              expression (ocamltest/ocaml_flags.ml[52,2201+13]..[52,2201+16])
                                Pexp_constant PConst_string(" ",(ocamltest/ocaml_flags.ml[52,2201+14]..[52,2201+15]),None)
                            <arg>
                            Nolabel
                              expression (ocamltest/ocaml_flags.ml[52,2201+19]..[52,2201+40])
                                Pexp_ident "runtime_library_flags" (ocamltest/ocaml_flags.ml[52,2201+19]..[52,2201+40])
                          ]
                    ]
    ]
  structure_item (ocamltest/ocaml_flags.ml[54,2243+0]..[54,2243+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/ocaml_flags.ml[54,2243+4]..[54,2243+26])
          Ppat_var "toplevel_default_flags" (ocamltest/ocaml_flags.ml[54,2243+4]..[54,2243+26])
        expression (ocamltest/ocaml_flags.ml[54,2243+29]..[54,2243+60])
          Pexp_constant PConst_string("-noinit -no-version -noprompt",(ocamltest/ocaml_flags.ml[54,2243+30]..[54,2243+59]),None)
    ]
  structure_item (ocamltest/ocaml_flags.ml[56,2305+0]..[59,2443+49])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/ocaml_flags.ml[56,2305+4]..[56,2305+28])
          Ppat_var "ocamldebug_default_flags" (ocamltest/ocaml_flags.ml[56,2305+4]..[56,2305+28])
        expression (ocamltest/ocaml_flags.ml[57,2336+2]..[59,2443+49])
          Pexp_apply
          expression (ocamltest/ocaml_flags.ml[57,2336+60]..[57,2336+61])
            Pexp_ident "^" (ocamltest/ocaml_flags.ml[57,2336+60]..[57,2336+61])
          [
            <arg>
            Nolabel
              expression (ocamltest/ocaml_flags.ml[57,2336+2]..[57,2336+59])
                Pexp_constant PConst_string("-no-version -no-prompt -no-time -no-breakpoint-message ",(ocamltest/ocaml_flags.ml[57,2336+3]..[57,2336+58]),None)
            <arg>
            Nolabel
              expression (ocamltest/ocaml_flags.ml[58,2398+2]..[59,2443+49])
                Pexp_apply
                expression (ocamltest/ocaml_flags.ml[58,2398+43]..[58,2398+44])
                  Pexp_ident "^" (ocamltest/ocaml_flags.ml[58,2398+43]..[58,2398+44])
                [
                  <arg>
                  Nolabel
                    expression (ocamltest/ocaml_flags.ml[58,2398+2]..[58,2398+42])
                      Pexp_apply
                      expression (ocamltest/ocaml_flags.ml[58,2398+9]..[58,2398+10])
                        Pexp_ident "^" (ocamltest/ocaml_flags.ml[58,2398+9]..[58,2398+10])
                      [
                        <arg>
                        Nolabel
                          expression (ocamltest/ocaml_flags.ml[58,2398+3]..[58,2398+8])
                            Pexp_constant PConst_string("-I ",(ocamltest/ocaml_flags.ml[58,2398+4]..[58,2398+7]),None)
                        <arg>
                        Nolabel
                          expression (ocamltest/ocaml_flags.ml[58,2398+11]..[58,2398+41])
                            Pexp_apply
                            expression (ocamltest/ocaml_flags.ml[58,2398+36]..[58,2398+37])
                              Pexp_ident "^" (ocamltest/ocaml_flags.ml[58,2398+36]..[58,2398+37])
                            [
                              <arg>
                              Nolabel
                                expression (ocamltest/ocaml_flags.ml[58,2398+11]..[58,2398+35])
                                  Pexp_ident "Ocaml_directories.stdlib" (ocamltest/ocaml_flags.ml[58,2398+11]..[58,2398+35])
                              <arg>
                              Nolabel
                                expression (ocamltest/ocaml_flags.ml[58,2398+38]..[58,2398+41])
                                  Pexp_constant PConst_string(" ",(ocamltest/ocaml_flags.ml[58,2398+39]..[58,2398+40]),None)
                            ]
                      ]
                  <arg>
                  Nolabel
                    expression (ocamltest/ocaml_flags.ml[59,2443+2]..[59,2443+49])
                      Pexp_apply
                      expression (ocamltest/ocaml_flags.ml[59,2443+20]..[59,2443+21])
                        Pexp_ident "^" (ocamltest/ocaml_flags.ml[59,2443+20]..[59,2443+21])
                      [
                        <arg>
                        Nolabel
                          expression (ocamltest/ocaml_flags.ml[59,2443+3]..[59,2443+19])
                            Pexp_constant PConst_string("-topdirs-path ",(ocamltest/ocaml_flags.ml[59,2443+4]..[59,2443+18]),None)
                        <arg>
                        Nolabel
                          expression (ocamltest/ocaml_flags.ml[59,2443+22]..[59,2443+48])
                            Pexp_ident "Ocaml_directories.toplevel" (ocamltest/ocaml_flags.ml[59,2443+22]..[59,2443+48])
                      ]
                ]
          ]
    ]
  structure_item (ocamltest/ocaml_flags.ml[61,2494+0]..[61,2494+44])
    Pstr_value Nonrec
    [
      <def>
        pattern (ocamltest/ocaml_flags.ml[61,2494+4]..[61,2494+30])
          Ppat_var "ocamlobjinfo_default_flags" (ocamltest/ocaml_flags.ml[61,2494+4]..[61,2494+30])
        expression (ocamltest/ocaml_flags.ml[61,2494+33]..[61,2494+44])
          Pexp_constant PConst_string("-null-crc",(ocamltest/ocaml_flags.ml[61,2494+34]..[61,2494+43]),None)
    ]
]

