[
  structure_item (middle_end/convert_primitives.ml[17,1156+0]..[17,1156+39])
    Pstr_attribute "ocaml.warning"
    [
      structure_item (middle_end/convert_primitives.ml[17,1156+18]..[17,1156+38])
        Pstr_eval
        expression (middle_end/convert_primitives.ml[17,1156+18]..[17,1156+38])
          Pexp_constant PConst_string("+a-4-9-30-40-41-42",(middle_end/convert_primitives.ml[17,1156+19]..[17,1156+37]),None)
    ]
  structure_item (middle_end/convert_primitives.ml[19,1197+0]..[23,1297+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/convert_primitives.ml[19,1197+4]..[19,1197+20])
          Ppat_var "convert_unsafety" (middle_end/convert_primitives.ml[19,1197+4]..[19,1197+20])
        expression (middle_end/convert_primitives.ml[19,1197+21]..[23,1297+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/convert_primitives.ml[19,1197+21]..[19,1197+30])
            Ppat_var "is_unsafe" (middle_end/convert_primitives.ml[19,1197+21]..[19,1197+30])
          expression (middle_end/convert_primitives.ml[19,1197+31]..[23,1297+8])
            Pexp_constraint
            expression (middle_end/convert_primitives.ml[20,1259+2]..[23,1297+8])
              Pexp_ifthenelse
              expression (middle_end/convert_primitives.ml[20,1259+5]..[20,1259+14])
                Pexp_ident "is_unsafe" (middle_end/convert_primitives.ml[20,1259+5]..[20,1259+14])
              expression (middle_end/convert_primitives.ml[21,1279+4]..[21,1279+10])
                Pexp_construct "Unsafe" (middle_end/convert_primitives.ml[21,1279+4]..[21,1279+10])
                None
              Some
                expression (middle_end/convert_primitives.ml[23,1297+4]..[23,1297+8])
                  Pexp_construct "Safe" (middle_end/convert_primitives.ml[23,1297+4]..[23,1297+8])
                  None
            core_type (middle_end/convert_primitives.ml[19,1197+33]..[19,1197+59])
              Ptyp_constr "Clambda_primitives.is_safe" (middle_end/convert_primitives.ml[19,1197+33]..[19,1197+59])
              []
    ]
  structure_item (middle_end/convert_primitives.ml[25,1307+0]..[153,6082+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/convert_primitives.ml[25,1307+4]..[25,1307+11])
          Ppat_var "convert" (middle_end/convert_primitives.ml[25,1307+4]..[25,1307+11])
        expression (middle_end/convert_primitives.ml[25,1307+12]..[153,6082+34]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/convert_primitives.ml[25,1307+12]..[25,1307+37])
            Ppat_constraint
            pattern (middle_end/convert_primitives.ml[25,1307+13]..[25,1307+17])
              Ppat_var "prim" (middle_end/convert_primitives.ml[25,1307+13]..[25,1307+17])
            core_type (middle_end/convert_primitives.ml[25,1307+20]..[25,1307+36])
              Ptyp_constr "Lambda.primitive" (middle_end/convert_primitives.ml[25,1307+20]..[25,1307+36])
              []
          expression (middle_end/convert_primitives.ml[25,1307+38]..[153,6082+34])
            Pexp_constraint
            expression (middle_end/convert_primitives.ml[26,1378+2]..[153,6082+34])
              Pexp_match
              expression (middle_end/convert_primitives.ml[26,1378+8]..[26,1378+12])
                Pexp_ident "prim" (middle_end/convert_primitives.ml[26,1378+8]..[26,1378+12])
              [
                <case>
                  pattern (middle_end/convert_primitives.ml[27,1396+4]..[27,1396+39])
                    Ppat_construct "Pmakeblock" (middle_end/convert_primitives.ml[27,1396+4]..[27,1396+14])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[27,1396+15]..[27,1396+39])
                        Ppat_tuple
                        [
                          pattern (middle_end/convert_primitives.ml[27,1396+16]..[27,1396+19])
                            Ppat_var "tag" (middle_end/convert_primitives.ml[27,1396+16]..[27,1396+19])
                          pattern (middle_end/convert_primitives.ml[27,1396+21]..[27,1396+31])
                            Ppat_var "mutability" (middle_end/convert_primitives.ml[27,1396+21]..[27,1396+31])
                          pattern (middle_end/convert_primitives.ml[27,1396+33]..[27,1396+38])
                            Ppat_var "shape" (middle_end/convert_primitives.ml[27,1396+33]..[27,1396+38])
                        ]
                  expression (middle_end/convert_primitives.ml[28,1439+6]..[28,1439+41])
                    Pexp_construct "Pmakeblock" (middle_end/convert_primitives.ml[28,1439+6]..[28,1439+16])
                    Some
                      expression (middle_end/convert_primitives.ml[28,1439+17]..[28,1439+41])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[28,1439+18]..[28,1439+21])
                            Pexp_ident "tag" (middle_end/convert_primitives.ml[28,1439+18]..[28,1439+21])
                          expression (middle_end/convert_primitives.ml[28,1439+23]..[28,1439+33])
                            Pexp_ident "mutability" (middle_end/convert_primitives.ml[28,1439+23]..[28,1439+33])
                          expression (middle_end/convert_primitives.ml[28,1439+35]..[28,1439+40])
                            Pexp_ident "shape" (middle_end/convert_primitives.ml[28,1439+35]..[28,1439+40])
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[29,1481+4]..[29,1481+16])
                    Ppat_construct "Pfield" (middle_end/convert_primitives.ml[29,1481+4]..[29,1481+10])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[29,1481+11]..[29,1481+16])
                        Ppat_var "field" (middle_end/convert_primitives.ml[29,1481+11]..[29,1481+16])
                  expression (middle_end/convert_primitives.ml[29,1481+20]..[29,1481+32])
                    Pexp_construct "Pfield" (middle_end/convert_primitives.ml[29,1481+20]..[29,1481+26])
                    Some
                      expression (middle_end/convert_primitives.ml[29,1481+27]..[29,1481+32])
                        Pexp_ident "field" (middle_end/convert_primitives.ml[29,1481+27]..[29,1481+32])
                <case>
                  pattern (middle_end/convert_primitives.ml[30,1514+4]..[30,1514+19])
                    Ppat_construct "Pfield_computed" (middle_end/convert_primitives.ml[30,1514+4]..[30,1514+19])
                    None
                  expression (middle_end/convert_primitives.ml[30,1514+23]..[30,1514+38])
                    Pexp_construct "Pfield_computed" (middle_end/convert_primitives.ml[30,1514+23]..[30,1514+38])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[31,1553+4]..[31,1553+53])
                    Ppat_construct "Psetfield" (middle_end/convert_primitives.ml[31,1553+4]..[31,1553+13])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[31,1553+14]..[31,1553+53])
                        Ppat_tuple
                        [
                          pattern (middle_end/convert_primitives.ml[31,1553+15]..[31,1553+20])
                            Ppat_var "field" (middle_end/convert_primitives.ml[31,1553+15]..[31,1553+20])
                          pattern (middle_end/convert_primitives.ml[31,1553+22]..[31,1553+36])
                            Ppat_var "imm_or_pointer" (middle_end/convert_primitives.ml[31,1553+22]..[31,1553+36])
                          pattern (middle_end/convert_primitives.ml[31,1553+38]..[31,1553+52])
                            Ppat_var "init_or_assign" (middle_end/convert_primitives.ml[31,1553+38]..[31,1553+52])
                        ]
                  expression (middle_end/convert_primitives.ml[32,1610+6]..[32,1610+55])
                    Pexp_construct "Psetfield" (middle_end/convert_primitives.ml[32,1610+6]..[32,1610+15])
                    Some
                      expression (middle_end/convert_primitives.ml[32,1610+16]..[32,1610+55])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[32,1610+17]..[32,1610+22])
                            Pexp_ident "field" (middle_end/convert_primitives.ml[32,1610+17]..[32,1610+22])
                          expression (middle_end/convert_primitives.ml[32,1610+24]..[32,1610+38])
                            Pexp_ident "imm_or_pointer" (middle_end/convert_primitives.ml[32,1610+24]..[32,1610+38])
                          expression (middle_end/convert_primitives.ml[32,1610+40]..[32,1610+54])
                            Pexp_ident "init_or_assign" (middle_end/convert_primitives.ml[32,1610+40]..[32,1610+54])
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[33,1666+4]..[33,1666+55])
                    Ppat_construct "Psetfield_computed" (middle_end/convert_primitives.ml[33,1666+4]..[33,1666+22])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[33,1666+23]..[33,1666+55])
                        Ppat_tuple
                        [
                          pattern (middle_end/convert_primitives.ml[33,1666+24]..[33,1666+38])
                            Ppat_var "imm_or_pointer" (middle_end/convert_primitives.ml[33,1666+24]..[33,1666+38])
                          pattern (middle_end/convert_primitives.ml[33,1666+40]..[33,1666+54])
                            Ppat_var "init_or_assign" (middle_end/convert_primitives.ml[33,1666+40]..[33,1666+54])
                        ]
                  expression (middle_end/convert_primitives.ml[34,1725+6]..[34,1725+57])
                    Pexp_construct "Psetfield_computed" (middle_end/convert_primitives.ml[34,1725+6]..[34,1725+24])
                    Some
                      expression (middle_end/convert_primitives.ml[34,1725+25]..[34,1725+57])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[34,1725+26]..[34,1725+40])
                            Pexp_ident "imm_or_pointer" (middle_end/convert_primitives.ml[34,1725+26]..[34,1725+40])
                          expression (middle_end/convert_primitives.ml[34,1725+42]..[34,1725+56])
                            Pexp_ident "init_or_assign" (middle_end/convert_primitives.ml[34,1725+42]..[34,1725+56])
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[35,1783+4]..[35,1783+21])
                    Ppat_construct "Pfloatfield" (middle_end/convert_primitives.ml[35,1783+4]..[35,1783+15])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[35,1783+16]..[35,1783+21])
                        Ppat_var "field" (middle_end/convert_primitives.ml[35,1783+16]..[35,1783+21])
                  expression (middle_end/convert_primitives.ml[35,1783+25]..[35,1783+42])
                    Pexp_construct "Pfloatfield" (middle_end/convert_primitives.ml[35,1783+25]..[35,1783+36])
                    Some
                      expression (middle_end/convert_primitives.ml[35,1783+37]..[35,1783+42])
                        Pexp_ident "field" (middle_end/convert_primitives.ml[35,1783+37]..[35,1783+42])
                <case>
                  pattern (middle_end/convert_primitives.ml[36,1826+4]..[36,1826+42])
                    Ppat_construct "Psetfloatfield" (middle_end/convert_primitives.ml[36,1826+4]..[36,1826+18])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[36,1826+19]..[36,1826+42])
                        Ppat_tuple
                        [
                          pattern (middle_end/convert_primitives.ml[36,1826+20]..[36,1826+25])
                            Ppat_var "field" (middle_end/convert_primitives.ml[36,1826+20]..[36,1826+25])
                          pattern (middle_end/convert_primitives.ml[36,1826+27]..[36,1826+41])
                            Ppat_var "init_or_assign" (middle_end/convert_primitives.ml[36,1826+27]..[36,1826+41])
                        ]
                  expression (middle_end/convert_primitives.ml[37,1872+6]..[37,1872+44])
                    Pexp_construct "Psetfloatfield" (middle_end/convert_primitives.ml[37,1872+6]..[37,1872+20])
                    Some
                      expression (middle_end/convert_primitives.ml[37,1872+21]..[37,1872+44])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[37,1872+22]..[37,1872+27])
                            Pexp_ident "field" (middle_end/convert_primitives.ml[37,1872+22]..[37,1872+27])
                          expression (middle_end/convert_primitives.ml[37,1872+29]..[37,1872+43])
                            Pexp_ident "init_or_assign" (middle_end/convert_primitives.ml[37,1872+29]..[37,1872+43])
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[38,1917+4]..[38,1917+27])
                    Ppat_construct "Pduprecord" (middle_end/convert_primitives.ml[38,1917+4]..[38,1917+14])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[38,1917+15]..[38,1917+27])
                        Ppat_tuple
                        [
                          pattern (middle_end/convert_primitives.ml[38,1917+16]..[38,1917+20])
                            Ppat_var "repr" (middle_end/convert_primitives.ml[38,1917+16]..[38,1917+20])
                          pattern (middle_end/convert_primitives.ml[38,1917+22]..[38,1917+26])
                            Ppat_var "size" (middle_end/convert_primitives.ml[38,1917+22]..[38,1917+26])
                        ]
                  expression (middle_end/convert_primitives.ml[38,1917+31]..[38,1917+54])
                    Pexp_construct "Pduprecord" (middle_end/convert_primitives.ml[38,1917+31]..[38,1917+41])
                    Some
                      expression (middle_end/convert_primitives.ml[38,1917+42]..[38,1917+54])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[38,1917+43]..[38,1917+47])
                            Pexp_ident "repr" (middle_end/convert_primitives.ml[38,1917+43]..[38,1917+47])
                          expression (middle_end/convert_primitives.ml[38,1917+49]..[38,1917+53])
                            Pexp_ident "size" (middle_end/convert_primitives.ml[38,1917+49]..[38,1917+53])
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[39,1972+4]..[39,1972+15])
                    Ppat_construct "Pccall" (middle_end/convert_primitives.ml[39,1972+4]..[39,1972+10])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[39,1972+11]..[39,1972+15])
                        Ppat_var "prim" (middle_end/convert_primitives.ml[39,1972+11]..[39,1972+15])
                  expression (middle_end/convert_primitives.ml[39,1972+19]..[39,1972+30])
                    Pexp_construct "Pccall" (middle_end/convert_primitives.ml[39,1972+19]..[39,1972+25])
                    Some
                      expression (middle_end/convert_primitives.ml[39,1972+26]..[39,1972+30])
                        Pexp_ident "prim" (middle_end/convert_primitives.ml[39,1972+26]..[39,1972+30])
                <case>
                  pattern (middle_end/convert_primitives.ml[40,2003+4]..[40,2003+15])
                    Ppat_construct "Praise" (middle_end/convert_primitives.ml[40,2003+4]..[40,2003+10])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[40,2003+11]..[40,2003+15])
                        Ppat_var "kind" (middle_end/convert_primitives.ml[40,2003+11]..[40,2003+15])
                  expression (middle_end/convert_primitives.ml[40,2003+19]..[40,2003+30])
                    Pexp_construct "Praise" (middle_end/convert_primitives.ml[40,2003+19]..[40,2003+25])
                    Some
                      expression (middle_end/convert_primitives.ml[40,2003+26]..[40,2003+30])
                        Pexp_ident "kind" (middle_end/convert_primitives.ml[40,2003+26]..[40,2003+30])
                <case>
                  pattern (middle_end/convert_primitives.ml[41,2034+4]..[41,2034+12])
                    Ppat_construct "Psequand" (middle_end/convert_primitives.ml[41,2034+4]..[41,2034+12])
                    None
                  expression (middle_end/convert_primitives.ml[41,2034+16]..[41,2034+24])
                    Pexp_construct "Psequand" (middle_end/convert_primitives.ml[41,2034+16]..[41,2034+24])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[42,2059+4]..[42,2059+11])
                    Ppat_construct "Psequor" (middle_end/convert_primitives.ml[42,2059+4]..[42,2059+11])
                    None
                  expression (middle_end/convert_primitives.ml[42,2059+15]..[42,2059+22])
                    Pexp_construct "Psequor" (middle_end/convert_primitives.ml[42,2059+15]..[42,2059+22])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[43,2082+4]..[43,2082+8])
                    Ppat_construct "Pnot" (middle_end/convert_primitives.ml[43,2082+4]..[43,2082+8])
                    None
                  expression (middle_end/convert_primitives.ml[43,2082+12]..[43,2082+16])
                    Pexp_construct "Pnot" (middle_end/convert_primitives.ml[43,2082+12]..[43,2082+16])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[44,2099+4]..[44,2099+11])
                    Ppat_construct "Pnegint" (middle_end/convert_primitives.ml[44,2099+4]..[44,2099+11])
                    None
                  expression (middle_end/convert_primitives.ml[44,2099+15]..[44,2099+22])
                    Pexp_construct "Pnegint" (middle_end/convert_primitives.ml[44,2099+15]..[44,2099+22])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[45,2122+4]..[45,2122+11])
                    Ppat_construct "Paddint" (middle_end/convert_primitives.ml[45,2122+4]..[45,2122+11])
                    None
                  expression (middle_end/convert_primitives.ml[45,2122+15]..[45,2122+22])
                    Pexp_construct "Paddint" (middle_end/convert_primitives.ml[45,2122+15]..[45,2122+22])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[46,2145+4]..[46,2145+11])
                    Ppat_construct "Psubint" (middle_end/convert_primitives.ml[46,2145+4]..[46,2145+11])
                    None
                  expression (middle_end/convert_primitives.ml[46,2145+15]..[46,2145+22])
                    Pexp_construct "Psubint" (middle_end/convert_primitives.ml[46,2145+15]..[46,2145+22])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[47,2168+4]..[47,2168+11])
                    Ppat_construct "Pmulint" (middle_end/convert_primitives.ml[47,2168+4]..[47,2168+11])
                    None
                  expression (middle_end/convert_primitives.ml[47,2168+15]..[47,2168+22])
                    Pexp_construct "Pmulint" (middle_end/convert_primitives.ml[47,2168+15]..[47,2168+22])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[48,2191+4]..[48,2191+19])
                    Ppat_construct "Pdivint" (middle_end/convert_primitives.ml[48,2191+4]..[48,2191+11])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[48,2191+12]..[48,2191+19])
                        Ppat_var "is_safe" (middle_end/convert_primitives.ml[48,2191+12]..[48,2191+19])
                  expression (middle_end/convert_primitives.ml[48,2191+23]..[48,2191+38])
                    Pexp_construct "Pdivint" (middle_end/convert_primitives.ml[48,2191+23]..[48,2191+30])
                    Some
                      expression (middle_end/convert_primitives.ml[48,2191+31]..[48,2191+38])
                        Pexp_ident "is_safe" (middle_end/convert_primitives.ml[48,2191+31]..[48,2191+38])
                <case>
                  pattern (middle_end/convert_primitives.ml[49,2230+4]..[49,2230+19])
                    Ppat_construct "Pmodint" (middle_end/convert_primitives.ml[49,2230+4]..[49,2230+11])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[49,2230+12]..[49,2230+19])
                        Ppat_var "is_safe" (middle_end/convert_primitives.ml[49,2230+12]..[49,2230+19])
                  expression (middle_end/convert_primitives.ml[49,2230+23]..[49,2230+38])
                    Pexp_construct "Pmodint" (middle_end/convert_primitives.ml[49,2230+23]..[49,2230+30])
                    Some
                      expression (middle_end/convert_primitives.ml[49,2230+31]..[49,2230+38])
                        Pexp_ident "is_safe" (middle_end/convert_primitives.ml[49,2230+31]..[49,2230+38])
                <case>
                  pattern (middle_end/convert_primitives.ml[50,2269+4]..[50,2269+11])
                    Ppat_construct "Pandint" (middle_end/convert_primitives.ml[50,2269+4]..[50,2269+11])
                    None
                  expression (middle_end/convert_primitives.ml[50,2269+15]..[50,2269+22])
                    Pexp_construct "Pandint" (middle_end/convert_primitives.ml[50,2269+15]..[50,2269+22])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[51,2292+4]..[51,2292+10])
                    Ppat_construct "Porint" (middle_end/convert_primitives.ml[51,2292+4]..[51,2292+10])
                    None
                  expression (middle_end/convert_primitives.ml[51,2292+14]..[51,2292+20])
                    Pexp_construct "Porint" (middle_end/convert_primitives.ml[51,2292+14]..[51,2292+20])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[52,2313+4]..[52,2313+11])
                    Ppat_construct "Pxorint" (middle_end/convert_primitives.ml[52,2313+4]..[52,2313+11])
                    None
                  expression (middle_end/convert_primitives.ml[52,2313+15]..[52,2313+22])
                    Pexp_construct "Pxorint" (middle_end/convert_primitives.ml[52,2313+15]..[52,2313+22])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[53,2336+4]..[53,2336+11])
                    Ppat_construct "Plslint" (middle_end/convert_primitives.ml[53,2336+4]..[53,2336+11])
                    None
                  expression (middle_end/convert_primitives.ml[53,2336+15]..[53,2336+22])
                    Pexp_construct "Plslint" (middle_end/convert_primitives.ml[53,2336+15]..[53,2336+22])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[54,2359+4]..[54,2359+11])
                    Ppat_construct "Plsrint" (middle_end/convert_primitives.ml[54,2359+4]..[54,2359+11])
                    None
                  expression (middle_end/convert_primitives.ml[54,2359+15]..[54,2359+22])
                    Pexp_construct "Plsrint" (middle_end/convert_primitives.ml[54,2359+15]..[54,2359+22])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[55,2382+4]..[55,2382+11])
                    Ppat_construct "Pasrint" (middle_end/convert_primitives.ml[55,2382+4]..[55,2382+11])
                    None
                  expression (middle_end/convert_primitives.ml[55,2382+15]..[55,2382+22])
                    Pexp_construct "Pasrint" (middle_end/convert_primitives.ml[55,2382+15]..[55,2382+22])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[56,2405+4]..[56,2405+17])
                    Ppat_construct "Pintcomp" (middle_end/convert_primitives.ml[56,2405+4]..[56,2405+12])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[56,2405+13]..[56,2405+17])
                        Ppat_var "comp" (middle_end/convert_primitives.ml[56,2405+13]..[56,2405+17])
                  expression (middle_end/convert_primitives.ml[56,2405+21]..[56,2405+34])
                    Pexp_construct "Pintcomp" (middle_end/convert_primitives.ml[56,2405+21]..[56,2405+29])
                    Some
                      expression (middle_end/convert_primitives.ml[56,2405+30]..[56,2405+34])
                        Pexp_ident "comp" (middle_end/convert_primitives.ml[56,2405+30]..[56,2405+34])
                <case>
                  pattern (middle_end/convert_primitives.ml[57,2440+4]..[57,2440+17])
                    Ppat_construct "Pcompare_ints" (middle_end/convert_primitives.ml[57,2440+4]..[57,2440+17])
                    None
                  expression (middle_end/convert_primitives.ml[57,2440+21]..[57,2440+34])
                    Pexp_construct "Pcompare_ints" (middle_end/convert_primitives.ml[57,2440+21]..[57,2440+34])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[58,2475+4]..[58,2475+19])
                    Ppat_construct "Pcompare_floats" (middle_end/convert_primitives.ml[58,2475+4]..[58,2475+19])
                    None
                  expression (middle_end/convert_primitives.ml[58,2475+23]..[58,2475+38])
                    Pexp_construct "Pcompare_floats" (middle_end/convert_primitives.ml[58,2475+23]..[58,2475+38])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[59,2514+4]..[59,2514+21])
                    Ppat_construct "Pcompare_bints" (middle_end/convert_primitives.ml[59,2514+4]..[59,2514+18])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[59,2514+19]..[59,2514+21])
                        Ppat_var "bi" (middle_end/convert_primitives.ml[59,2514+19]..[59,2514+21])
                  expression (middle_end/convert_primitives.ml[59,2514+25]..[59,2514+42])
                    Pexp_construct "Pcompare_bints" (middle_end/convert_primitives.ml[59,2514+25]..[59,2514+39])
                    Some
                      expression (middle_end/convert_primitives.ml[59,2514+40]..[59,2514+42])
                        Pexp_ident "bi" (middle_end/convert_primitives.ml[59,2514+40]..[59,2514+42])
                <case>
                  pattern (middle_end/convert_primitives.ml[60,2557+4]..[60,2557+21])
                    Ppat_construct "Poffsetint" (middle_end/convert_primitives.ml[60,2557+4]..[60,2557+14])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[60,2557+15]..[60,2557+21])
                        Ppat_var "offset" (middle_end/convert_primitives.ml[60,2557+15]..[60,2557+21])
                  expression (middle_end/convert_primitives.ml[60,2557+25]..[60,2557+42])
                    Pexp_construct "Poffsetint" (middle_end/convert_primitives.ml[60,2557+25]..[60,2557+35])
                    Some
                      expression (middle_end/convert_primitives.ml[60,2557+36]..[60,2557+42])
                        Pexp_ident "offset" (middle_end/convert_primitives.ml[60,2557+36]..[60,2557+42])
                <case>
                  pattern (middle_end/convert_primitives.ml[61,2600+4]..[61,2600+21])
                    Ppat_construct "Poffsetref" (middle_end/convert_primitives.ml[61,2600+4]..[61,2600+14])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[61,2600+15]..[61,2600+21])
                        Ppat_var "offset" (middle_end/convert_primitives.ml[61,2600+15]..[61,2600+21])
                  expression (middle_end/convert_primitives.ml[61,2600+25]..[61,2600+42])
                    Pexp_construct "Poffsetref" (middle_end/convert_primitives.ml[61,2600+25]..[61,2600+35])
                    Some
                      expression (middle_end/convert_primitives.ml[61,2600+36]..[61,2600+42])
                        Pexp_ident "offset" (middle_end/convert_primitives.ml[61,2600+36]..[61,2600+42])
                <case>
                  pattern (middle_end/convert_primitives.ml[62,2643+4]..[62,2643+15])
                    Ppat_construct "Pintoffloat" (middle_end/convert_primitives.ml[62,2643+4]..[62,2643+15])
                    None
                  expression (middle_end/convert_primitives.ml[62,2643+19]..[62,2643+30])
                    Pexp_construct "Pintoffloat" (middle_end/convert_primitives.ml[62,2643+19]..[62,2643+30])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[63,2674+4]..[63,2674+15])
                    Ppat_construct "Pfloatofint" (middle_end/convert_primitives.ml[63,2674+4]..[63,2674+15])
                    None
                  expression (middle_end/convert_primitives.ml[63,2674+19]..[63,2674+30])
                    Pexp_construct "Pfloatofint" (middle_end/convert_primitives.ml[63,2674+19]..[63,2674+30])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[64,2705+4]..[64,2705+13])
                    Ppat_construct "Pnegfloat" (middle_end/convert_primitives.ml[64,2705+4]..[64,2705+13])
                    None
                  expression (middle_end/convert_primitives.ml[64,2705+17]..[64,2705+26])
                    Pexp_construct "Pnegfloat" (middle_end/convert_primitives.ml[64,2705+17]..[64,2705+26])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[65,2732+4]..[65,2732+13])
                    Ppat_construct "Pabsfloat" (middle_end/convert_primitives.ml[65,2732+4]..[65,2732+13])
                    None
                  expression (middle_end/convert_primitives.ml[65,2732+17]..[65,2732+26])
                    Pexp_construct "Pabsfloat" (middle_end/convert_primitives.ml[65,2732+17]..[65,2732+26])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[66,2759+4]..[66,2759+13])
                    Ppat_construct "Paddfloat" (middle_end/convert_primitives.ml[66,2759+4]..[66,2759+13])
                    None
                  expression (middle_end/convert_primitives.ml[66,2759+17]..[66,2759+26])
                    Pexp_construct "Paddfloat" (middle_end/convert_primitives.ml[66,2759+17]..[66,2759+26])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[67,2786+4]..[67,2786+13])
                    Ppat_construct "Psubfloat" (middle_end/convert_primitives.ml[67,2786+4]..[67,2786+13])
                    None
                  expression (middle_end/convert_primitives.ml[67,2786+17]..[67,2786+26])
                    Pexp_construct "Psubfloat" (middle_end/convert_primitives.ml[67,2786+17]..[67,2786+26])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[68,2813+4]..[68,2813+13])
                    Ppat_construct "Pmulfloat" (middle_end/convert_primitives.ml[68,2813+4]..[68,2813+13])
                    None
                  expression (middle_end/convert_primitives.ml[68,2813+17]..[68,2813+26])
                    Pexp_construct "Pmulfloat" (middle_end/convert_primitives.ml[68,2813+17]..[68,2813+26])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[69,2840+4]..[69,2840+13])
                    Ppat_construct "Pdivfloat" (middle_end/convert_primitives.ml[69,2840+4]..[69,2840+13])
                    None
                  expression (middle_end/convert_primitives.ml[69,2840+17]..[69,2840+26])
                    Pexp_construct "Pdivfloat" (middle_end/convert_primitives.ml[69,2840+17]..[69,2840+26])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[70,2867+4]..[70,2867+19])
                    Ppat_construct "Pfloatcomp" (middle_end/convert_primitives.ml[70,2867+4]..[70,2867+14])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[70,2867+15]..[70,2867+19])
                        Ppat_var "comp" (middle_end/convert_primitives.ml[70,2867+15]..[70,2867+19])
                  expression (middle_end/convert_primitives.ml[70,2867+23]..[70,2867+38])
                    Pexp_construct "Pfloatcomp" (middle_end/convert_primitives.ml[70,2867+23]..[70,2867+33])
                    Some
                      expression (middle_end/convert_primitives.ml[70,2867+34]..[70,2867+38])
                        Pexp_ident "comp" (middle_end/convert_primitives.ml[70,2867+34]..[70,2867+38])
                <case>
                  pattern (middle_end/convert_primitives.ml[71,2906+4]..[71,2906+17])
                    Ppat_construct "Pstringlength" (middle_end/convert_primitives.ml[71,2906+4]..[71,2906+17])
                    None
                  expression (middle_end/convert_primitives.ml[71,2906+21]..[71,2906+34])
                    Pexp_construct "Pstringlength" (middle_end/convert_primitives.ml[71,2906+21]..[71,2906+34])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[72,2941+4]..[72,2941+15])
                    Ppat_construct "Pstringrefu" (middle_end/convert_primitives.ml[72,2941+4]..[72,2941+15])
                    None
                  expression (middle_end/convert_primitives.ml[72,2941+19]..[72,2941+30])
                    Pexp_construct "Pstringrefu" (middle_end/convert_primitives.ml[72,2941+19]..[72,2941+30])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[73,2972+4]..[73,2972+15])
                    Ppat_construct "Pstringrefs" (middle_end/convert_primitives.ml[73,2972+4]..[73,2972+15])
                    None
                  expression (middle_end/convert_primitives.ml[73,2972+19]..[73,2972+30])
                    Pexp_construct "Pstringrefs" (middle_end/convert_primitives.ml[73,2972+19]..[73,2972+30])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[74,3003+4]..[74,3003+16])
                    Ppat_construct "Pbyteslength" (middle_end/convert_primitives.ml[74,3003+4]..[74,3003+16])
                    None
                  expression (middle_end/convert_primitives.ml[74,3003+20]..[74,3003+32])
                    Pexp_construct "Pbyteslength" (middle_end/convert_primitives.ml[74,3003+20]..[74,3003+32])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[75,3036+4]..[75,3036+14])
                    Ppat_construct "Pbytesrefu" (middle_end/convert_primitives.ml[75,3036+4]..[75,3036+14])
                    None
                  expression (middle_end/convert_primitives.ml[75,3036+18]..[75,3036+28])
                    Pexp_construct "Pbytesrefu" (middle_end/convert_primitives.ml[75,3036+18]..[75,3036+28])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[76,3065+4]..[76,3065+14])
                    Ppat_construct "Pbytessetu" (middle_end/convert_primitives.ml[76,3065+4]..[76,3065+14])
                    None
                  expression (middle_end/convert_primitives.ml[76,3065+18]..[76,3065+28])
                    Pexp_construct "Pbytessetu" (middle_end/convert_primitives.ml[76,3065+18]..[76,3065+28])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[77,3094+4]..[77,3094+14])
                    Ppat_construct "Pbytesrefs" (middle_end/convert_primitives.ml[77,3094+4]..[77,3094+14])
                    None
                  expression (middle_end/convert_primitives.ml[77,3094+18]..[77,3094+28])
                    Pexp_construct "Pbytesrefs" (middle_end/convert_primitives.ml[77,3094+18]..[77,3094+28])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[78,3123+4]..[78,3123+14])
                    Ppat_construct "Pbytessets" (middle_end/convert_primitives.ml[78,3123+4]..[78,3123+14])
                    None
                  expression (middle_end/convert_primitives.ml[78,3123+18]..[78,3123+28])
                    Pexp_construct "Pbytessets" (middle_end/convert_primitives.ml[78,3123+18]..[78,3123+28])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[79,3152+4]..[79,3152+33])
                    Ppat_construct "Pmakearray" (middle_end/convert_primitives.ml[79,3152+4]..[79,3152+14])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[79,3152+15]..[79,3152+33])
                        Ppat_tuple
                        [
                          pattern (middle_end/convert_primitives.ml[79,3152+16]..[79,3152+20])
                            Ppat_var "kind" (middle_end/convert_primitives.ml[79,3152+16]..[79,3152+20])
                          pattern (middle_end/convert_primitives.ml[79,3152+22]..[79,3152+32])
                            Ppat_var "mutability" (middle_end/convert_primitives.ml[79,3152+22]..[79,3152+32])
                        ]
                  expression (middle_end/convert_primitives.ml[79,3152+37]..[79,3152+66])
                    Pexp_construct "Pmakearray" (middle_end/convert_primitives.ml[79,3152+37]..[79,3152+47])
                    Some
                      expression (middle_end/convert_primitives.ml[79,3152+48]..[79,3152+66])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[79,3152+49]..[79,3152+53])
                            Pexp_ident "kind" (middle_end/convert_primitives.ml[79,3152+49]..[79,3152+53])
                          expression (middle_end/convert_primitives.ml[79,3152+55]..[79,3152+65])
                            Pexp_ident "mutability" (middle_end/convert_primitives.ml[79,3152+55]..[79,3152+65])
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[80,3219+4]..[80,3219+32])
                    Ppat_construct "Pduparray" (middle_end/convert_primitives.ml[80,3219+4]..[80,3219+13])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[80,3219+14]..[80,3219+32])
                        Ppat_tuple
                        [
                          pattern (middle_end/convert_primitives.ml[80,3219+15]..[80,3219+19])
                            Ppat_var "kind" (middle_end/convert_primitives.ml[80,3219+15]..[80,3219+19])
                          pattern (middle_end/convert_primitives.ml[80,3219+21]..[80,3219+31])
                            Ppat_var "mutability" (middle_end/convert_primitives.ml[80,3219+21]..[80,3219+31])
                        ]
                  expression (middle_end/convert_primitives.ml[80,3219+36]..[80,3219+64])
                    Pexp_construct "Pduparray" (middle_end/convert_primitives.ml[80,3219+36]..[80,3219+45])
                    Some
                      expression (middle_end/convert_primitives.ml[80,3219+46]..[80,3219+64])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[80,3219+47]..[80,3219+51])
                            Pexp_ident "kind" (middle_end/convert_primitives.ml[80,3219+47]..[80,3219+51])
                          expression (middle_end/convert_primitives.ml[80,3219+53]..[80,3219+63])
                            Pexp_ident "mutability" (middle_end/convert_primitives.ml[80,3219+53]..[80,3219+63])
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[81,3284+4]..[81,3284+21])
                    Ppat_construct "Parraylength" (middle_end/convert_primitives.ml[81,3284+4]..[81,3284+16])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[81,3284+17]..[81,3284+21])
                        Ppat_var "kind" (middle_end/convert_primitives.ml[81,3284+17]..[81,3284+21])
                  expression (middle_end/convert_primitives.ml[81,3284+25]..[81,3284+42])
                    Pexp_construct "Parraylength" (middle_end/convert_primitives.ml[81,3284+25]..[81,3284+37])
                    Some
                      expression (middle_end/convert_primitives.ml[81,3284+38]..[81,3284+42])
                        Pexp_ident "kind" (middle_end/convert_primitives.ml[81,3284+38]..[81,3284+42])
                <case>
                  pattern (middle_end/convert_primitives.ml[82,3327+4]..[82,3327+19])
                    Ppat_construct "Parrayrefu" (middle_end/convert_primitives.ml[82,3327+4]..[82,3327+14])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[82,3327+15]..[82,3327+19])
                        Ppat_var "kind" (middle_end/convert_primitives.ml[82,3327+15]..[82,3327+19])
                  expression (middle_end/convert_primitives.ml[82,3327+23]..[82,3327+38])
                    Pexp_construct "Parrayrefu" (middle_end/convert_primitives.ml[82,3327+23]..[82,3327+33])
                    Some
                      expression (middle_end/convert_primitives.ml[82,3327+34]..[82,3327+38])
                        Pexp_ident "kind" (middle_end/convert_primitives.ml[82,3327+34]..[82,3327+38])
                <case>
                  pattern (middle_end/convert_primitives.ml[83,3366+4]..[83,3366+19])
                    Ppat_construct "Parraysetu" (middle_end/convert_primitives.ml[83,3366+4]..[83,3366+14])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[83,3366+15]..[83,3366+19])
                        Ppat_var "kind" (middle_end/convert_primitives.ml[83,3366+15]..[83,3366+19])
                  expression (middle_end/convert_primitives.ml[83,3366+23]..[83,3366+38])
                    Pexp_construct "Parraysetu" (middle_end/convert_primitives.ml[83,3366+23]..[83,3366+33])
                    Some
                      expression (middle_end/convert_primitives.ml[83,3366+34]..[83,3366+38])
                        Pexp_ident "kind" (middle_end/convert_primitives.ml[83,3366+34]..[83,3366+38])
                <case>
                  pattern (middle_end/convert_primitives.ml[84,3405+4]..[84,3405+19])
                    Ppat_construct "Parrayrefs" (middle_end/convert_primitives.ml[84,3405+4]..[84,3405+14])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[84,3405+15]..[84,3405+19])
                        Ppat_var "kind" (middle_end/convert_primitives.ml[84,3405+15]..[84,3405+19])
                  expression (middle_end/convert_primitives.ml[84,3405+23]..[84,3405+38])
                    Pexp_construct "Parrayrefs" (middle_end/convert_primitives.ml[84,3405+23]..[84,3405+33])
                    Some
                      expression (middle_end/convert_primitives.ml[84,3405+34]..[84,3405+38])
                        Pexp_ident "kind" (middle_end/convert_primitives.ml[84,3405+34]..[84,3405+38])
                <case>
                  pattern (middle_end/convert_primitives.ml[85,3444+4]..[85,3444+19])
                    Ppat_construct "Parraysets" (middle_end/convert_primitives.ml[85,3444+4]..[85,3444+14])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[85,3444+15]..[85,3444+19])
                        Ppat_var "kind" (middle_end/convert_primitives.ml[85,3444+15]..[85,3444+19])
                  expression (middle_end/convert_primitives.ml[85,3444+23]..[85,3444+38])
                    Pexp_construct "Parraysets" (middle_end/convert_primitives.ml[85,3444+23]..[85,3444+33])
                    Some
                      expression (middle_end/convert_primitives.ml[85,3444+34]..[85,3444+38])
                        Pexp_ident "kind" (middle_end/convert_primitives.ml[85,3444+34]..[85,3444+38])
                <case>
                  pattern (middle_end/convert_primitives.ml[86,3483+4]..[86,3483+10])
                    Ppat_construct "Pisint" (middle_end/convert_primitives.ml[86,3483+4]..[86,3483+10])
                    None
                  expression (middle_end/convert_primitives.ml[86,3483+14]..[86,3483+20])
                    Pexp_construct "Pisint" (middle_end/convert_primitives.ml[86,3483+14]..[86,3483+20])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[87,3504+4]..[87,3504+10])
                    Ppat_construct "Pisout" (middle_end/convert_primitives.ml[87,3504+4]..[87,3504+10])
                    None
                  expression (middle_end/convert_primitives.ml[87,3504+14]..[87,3504+20])
                    Pexp_construct "Pisout" (middle_end/convert_primitives.ml[87,3504+14]..[87,3504+20])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[88,3525+4]..[88,3525+24])
                    Ppat_construct "Pcvtbint" (middle_end/convert_primitives.ml[88,3525+4]..[88,3525+12])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[88,3525+13]..[88,3525+24])
                        Ppat_tuple
                        [
                          pattern (middle_end/convert_primitives.ml[88,3525+14]..[88,3525+17])
                            Ppat_var "src" (middle_end/convert_primitives.ml[88,3525+14]..[88,3525+17])
                          pattern (middle_end/convert_primitives.ml[88,3525+19]..[88,3525+23])
                            Ppat_var "dest" (middle_end/convert_primitives.ml[88,3525+19]..[88,3525+23])
                        ]
                  expression (middle_end/convert_primitives.ml[88,3525+28]..[88,3525+48])
                    Pexp_construct "Pcvtbint" (middle_end/convert_primitives.ml[88,3525+28]..[88,3525+36])
                    Some
                      expression (middle_end/convert_primitives.ml[88,3525+37]..[88,3525+48])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[88,3525+38]..[88,3525+41])
                            Pexp_ident "src" (middle_end/convert_primitives.ml[88,3525+38]..[88,3525+41])
                          expression (middle_end/convert_primitives.ml[88,3525+43]..[88,3525+47])
                            Pexp_ident "dest" (middle_end/convert_primitives.ml[88,3525+43]..[88,3525+47])
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[89,3574+4]..[89,3574+15])
                    Ppat_construct "Pnegbint" (middle_end/convert_primitives.ml[89,3574+4]..[89,3574+12])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[89,3574+13]..[89,3574+15])
                        Ppat_var "bi" (middle_end/convert_primitives.ml[89,3574+13]..[89,3574+15])
                  expression (middle_end/convert_primitives.ml[89,3574+19]..[89,3574+30])
                    Pexp_construct "Pnegbint" (middle_end/convert_primitives.ml[89,3574+19]..[89,3574+27])
                    Some
                      expression (middle_end/convert_primitives.ml[89,3574+28]..[89,3574+30])
                        Pexp_ident "bi" (middle_end/convert_primitives.ml[89,3574+28]..[89,3574+30])
                <case>
                  pattern (middle_end/convert_primitives.ml[90,3605+4]..[90,3605+15])
                    Ppat_construct "Paddbint" (middle_end/convert_primitives.ml[90,3605+4]..[90,3605+12])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[90,3605+13]..[90,3605+15])
                        Ppat_var "bi" (middle_end/convert_primitives.ml[90,3605+13]..[90,3605+15])
                  expression (middle_end/convert_primitives.ml[90,3605+19]..[90,3605+30])
                    Pexp_construct "Paddbint" (middle_end/convert_primitives.ml[90,3605+19]..[90,3605+27])
                    Some
                      expression (middle_end/convert_primitives.ml[90,3605+28]..[90,3605+30])
                        Pexp_ident "bi" (middle_end/convert_primitives.ml[90,3605+28]..[90,3605+30])
                <case>
                  pattern (middle_end/convert_primitives.ml[91,3636+4]..[91,3636+15])
                    Ppat_construct "Psubbint" (middle_end/convert_primitives.ml[91,3636+4]..[91,3636+12])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[91,3636+13]..[91,3636+15])
                        Ppat_var "bi" (middle_end/convert_primitives.ml[91,3636+13]..[91,3636+15])
                  expression (middle_end/convert_primitives.ml[91,3636+19]..[91,3636+30])
                    Pexp_construct "Psubbint" (middle_end/convert_primitives.ml[91,3636+19]..[91,3636+27])
                    Some
                      expression (middle_end/convert_primitives.ml[91,3636+28]..[91,3636+30])
                        Pexp_ident "bi" (middle_end/convert_primitives.ml[91,3636+28]..[91,3636+30])
                <case>
                  pattern (middle_end/convert_primitives.ml[92,3667+4]..[92,3667+15])
                    Ppat_construct "Pmulbint" (middle_end/convert_primitives.ml[92,3667+4]..[92,3667+12])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[92,3667+13]..[92,3667+15])
                        Ppat_var "bi" (middle_end/convert_primitives.ml[92,3667+13]..[92,3667+15])
                  expression (middle_end/convert_primitives.ml[92,3667+19]..[92,3667+30])
                    Pexp_construct "Pmulbint" (middle_end/convert_primitives.ml[92,3667+19]..[92,3667+27])
                    Some
                      expression (middle_end/convert_primitives.ml[92,3667+28]..[92,3667+30])
                        Pexp_ident "bi" (middle_end/convert_primitives.ml[92,3667+28]..[92,3667+30])
                <case>
                  pattern (middle_end/convert_primitives.ml[93,3698+4]..[93,3698+17])
                    Ppat_construct "Pbintofint" (middle_end/convert_primitives.ml[93,3698+4]..[93,3698+14])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[93,3698+15]..[93,3698+17])
                        Ppat_var "bi" (middle_end/convert_primitives.ml[93,3698+15]..[93,3698+17])
                  expression (middle_end/convert_primitives.ml[93,3698+21]..[93,3698+34])
                    Pexp_construct "Pbintofint" (middle_end/convert_primitives.ml[93,3698+21]..[93,3698+31])
                    Some
                      expression (middle_end/convert_primitives.ml[93,3698+32]..[93,3698+34])
                        Pexp_ident "bi" (middle_end/convert_primitives.ml[93,3698+32]..[93,3698+34])
                <case>
                  pattern (middle_end/convert_primitives.ml[94,3733+4]..[94,3733+17])
                    Ppat_construct "Pintofbint" (middle_end/convert_primitives.ml[94,3733+4]..[94,3733+14])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[94,3733+15]..[94,3733+17])
                        Ppat_var "bi" (middle_end/convert_primitives.ml[94,3733+15]..[94,3733+17])
                  expression (middle_end/convert_primitives.ml[94,3733+21]..[94,3733+34])
                    Pexp_construct "Pintofbint" (middle_end/convert_primitives.ml[94,3733+21]..[94,3733+31])
                    Some
                      expression (middle_end/convert_primitives.ml[94,3733+32]..[94,3733+34])
                        Pexp_ident "bi" (middle_end/convert_primitives.ml[94,3733+32]..[94,3733+34])
                <case>
                  pattern (middle_end/convert_primitives.ml[95,3768+4]..[95,3768+15])
                    Ppat_construct "Pandbint" (middle_end/convert_primitives.ml[95,3768+4]..[95,3768+12])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[95,3768+13]..[95,3768+15])
                        Ppat_var "bi" (middle_end/convert_primitives.ml[95,3768+13]..[95,3768+15])
                  expression (middle_end/convert_primitives.ml[95,3768+19]..[95,3768+30])
                    Pexp_construct "Pandbint" (middle_end/convert_primitives.ml[95,3768+19]..[95,3768+27])
                    Some
                      expression (middle_end/convert_primitives.ml[95,3768+28]..[95,3768+30])
                        Pexp_ident "bi" (middle_end/convert_primitives.ml[95,3768+28]..[95,3768+30])
                <case>
                  pattern (middle_end/convert_primitives.ml[96,3799+4]..[96,3799+14])
                    Ppat_construct "Porbint" (middle_end/convert_primitives.ml[96,3799+4]..[96,3799+11])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[96,3799+12]..[96,3799+14])
                        Ppat_var "bi" (middle_end/convert_primitives.ml[96,3799+12]..[96,3799+14])
                  expression (middle_end/convert_primitives.ml[96,3799+18]..[96,3799+28])
                    Pexp_construct "Porbint" (middle_end/convert_primitives.ml[96,3799+18]..[96,3799+25])
                    Some
                      expression (middle_end/convert_primitives.ml[96,3799+26]..[96,3799+28])
                        Pexp_ident "bi" (middle_end/convert_primitives.ml[96,3799+26]..[96,3799+28])
                <case>
                  pattern (middle_end/convert_primitives.ml[97,3828+4]..[97,3828+15])
                    Ppat_construct "Pxorbint" (middle_end/convert_primitives.ml[97,3828+4]..[97,3828+12])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[97,3828+13]..[97,3828+15])
                        Ppat_var "bi" (middle_end/convert_primitives.ml[97,3828+13]..[97,3828+15])
                  expression (middle_end/convert_primitives.ml[97,3828+19]..[97,3828+30])
                    Pexp_construct "Pxorbint" (middle_end/convert_primitives.ml[97,3828+19]..[97,3828+27])
                    Some
                      expression (middle_end/convert_primitives.ml[97,3828+28]..[97,3828+30])
                        Pexp_ident "bi" (middle_end/convert_primitives.ml[97,3828+28]..[97,3828+30])
                <case>
                  pattern (middle_end/convert_primitives.ml[98,3859+4]..[98,3859+15])
                    Ppat_construct "Plslbint" (middle_end/convert_primitives.ml[98,3859+4]..[98,3859+12])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[98,3859+13]..[98,3859+15])
                        Ppat_var "bi" (middle_end/convert_primitives.ml[98,3859+13]..[98,3859+15])
                  expression (middle_end/convert_primitives.ml[98,3859+19]..[98,3859+30])
                    Pexp_construct "Plslbint" (middle_end/convert_primitives.ml[98,3859+19]..[98,3859+27])
                    Some
                      expression (middle_end/convert_primitives.ml[98,3859+28]..[98,3859+30])
                        Pexp_ident "bi" (middle_end/convert_primitives.ml[98,3859+28]..[98,3859+30])
                <case>
                  pattern (middle_end/convert_primitives.ml[99,3890+4]..[99,3890+15])
                    Ppat_construct "Plsrbint" (middle_end/convert_primitives.ml[99,3890+4]..[99,3890+12])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[99,3890+13]..[99,3890+15])
                        Ppat_var "bi" (middle_end/convert_primitives.ml[99,3890+13]..[99,3890+15])
                  expression (middle_end/convert_primitives.ml[99,3890+19]..[99,3890+30])
                    Pexp_construct "Plsrbint" (middle_end/convert_primitives.ml[99,3890+19]..[99,3890+27])
                    Some
                      expression (middle_end/convert_primitives.ml[99,3890+28]..[99,3890+30])
                        Pexp_ident "bi" (middle_end/convert_primitives.ml[99,3890+28]..[99,3890+30])
                <case>
                  pattern (middle_end/convert_primitives.ml[100,3921+4]..[100,3921+15])
                    Ppat_construct "Pasrbint" (middle_end/convert_primitives.ml[100,3921+4]..[100,3921+12])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[100,3921+13]..[100,3921+15])
                        Ppat_var "bi" (middle_end/convert_primitives.ml[100,3921+13]..[100,3921+15])
                  expression (middle_end/convert_primitives.ml[100,3921+19]..[100,3921+30])
                    Pexp_construct "Pasrbint" (middle_end/convert_primitives.ml[100,3921+19]..[100,3921+27])
                    Some
                      expression (middle_end/convert_primitives.ml[100,3921+28]..[100,3921+30])
                        Pexp_ident "bi" (middle_end/convert_primitives.ml[100,3921+28]..[100,3921+30])
                <case>
                  pattern (middle_end/convert_primitives.ml[101,3952+4]..[101,3952+14])
                    Ppat_construct "Pbbswap" (middle_end/convert_primitives.ml[101,3952+4]..[101,3952+11])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[101,3952+12]..[101,3952+14])
                        Ppat_var "bi" (middle_end/convert_primitives.ml[101,3952+12]..[101,3952+14])
                  expression (middle_end/convert_primitives.ml[101,3952+18]..[101,3952+28])
                    Pexp_construct "Pbbswap" (middle_end/convert_primitives.ml[101,3952+18]..[101,3952+25])
                    Some
                      expression (middle_end/convert_primitives.ml[101,3952+26]..[101,3952+28])
                        Pexp_ident "bi" (middle_end/convert_primitives.ml[101,3952+26]..[101,3952+28])
                <case>
                  pattern (middle_end/convert_primitives.ml[102,3981+4]..[102,3981+30])
                    Ppat_construct "Pdivbint" (middle_end/convert_primitives.ml[102,3981+4]..[102,3981+12])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[102,3981+13]..[102,3981+30])
                        Ppat_record Closed
                        [
                          "size" (middle_end/convert_primitives.ml[102,3981+15]..[102,3981+19]) ghost
                            pattern (middle_end/convert_primitives.ml[102,3981+15]..[102,3981+19])
                              Ppat_var "size" (middle_end/convert_primitives.ml[102,3981+15]..[102,3981+19])
                          "is_safe" (middle_end/convert_primitives.ml[102,3981+21]..[102,3981+28]) ghost
                            pattern (middle_end/convert_primitives.ml[102,3981+21]..[102,3981+28])
                              Ppat_var "is_safe" (middle_end/convert_primitives.ml[102,3981+21]..[102,3981+28])
                        ]
                  expression (middle_end/convert_primitives.ml[102,3981+34]..[102,3981+60])
                    Pexp_construct "Pdivbint" (middle_end/convert_primitives.ml[102,3981+34]..[102,3981+42])
                    Some
                      expression (middle_end/convert_primitives.ml[102,3981+43]..[102,3981+60])
                        Pexp_record
                        [
                          "size" (middle_end/convert_primitives.ml[102,3981+45]..[102,3981+49]) ghost
                            expression (middle_end/convert_primitives.ml[102,3981+45]..[102,3981+49])
                              Pexp_ident "size" (middle_end/convert_primitives.ml[102,3981+45]..[102,3981+49])
                          "is_safe" (middle_end/convert_primitives.ml[102,3981+51]..[102,3981+58]) ghost
                            expression (middle_end/convert_primitives.ml[102,3981+51]..[102,3981+58])
                              Pexp_ident "is_safe" (middle_end/convert_primitives.ml[102,3981+51]..[102,3981+58])
                        ]
                        None
                <case>
                  pattern (middle_end/convert_primitives.ml[103,4042+4]..[103,4042+30])
                    Ppat_construct "Pmodbint" (middle_end/convert_primitives.ml[103,4042+4]..[103,4042+12])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[103,4042+13]..[103,4042+30])
                        Ppat_record Closed
                        [
                          "size" (middle_end/convert_primitives.ml[103,4042+15]..[103,4042+19]) ghost
                            pattern (middle_end/convert_primitives.ml[103,4042+15]..[103,4042+19])
                              Ppat_var "size" (middle_end/convert_primitives.ml[103,4042+15]..[103,4042+19])
                          "is_safe" (middle_end/convert_primitives.ml[103,4042+21]..[103,4042+28]) ghost
                            pattern (middle_end/convert_primitives.ml[103,4042+21]..[103,4042+28])
                              Ppat_var "is_safe" (middle_end/convert_primitives.ml[103,4042+21]..[103,4042+28])
                        ]
                  expression (middle_end/convert_primitives.ml[103,4042+34]..[103,4042+60])
                    Pexp_construct "Pmodbint" (middle_end/convert_primitives.ml[103,4042+34]..[103,4042+42])
                    Some
                      expression (middle_end/convert_primitives.ml[103,4042+43]..[103,4042+60])
                        Pexp_record
                        [
                          "size" (middle_end/convert_primitives.ml[103,4042+45]..[103,4042+49]) ghost
                            expression (middle_end/convert_primitives.ml[103,4042+45]..[103,4042+49])
                              Pexp_ident "size" (middle_end/convert_primitives.ml[103,4042+45]..[103,4042+49])
                          "is_safe" (middle_end/convert_primitives.ml[103,4042+51]..[103,4042+58]) ghost
                            expression (middle_end/convert_primitives.ml[103,4042+51]..[103,4042+58])
                              Pexp_ident "is_safe" (middle_end/convert_primitives.ml[103,4042+51]..[103,4042+58])
                        ]
                        None
                <case>
                  pattern (middle_end/convert_primitives.ml[104,4103+4]..[104,4103+24])
                    Ppat_construct "Pbintcomp" (middle_end/convert_primitives.ml[104,4103+4]..[104,4103+13])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[104,4103+14]..[104,4103+24])
                        Ppat_tuple
                        [
                          pattern (middle_end/convert_primitives.ml[104,4103+15]..[104,4103+17])
                            Ppat_var "bi" (middle_end/convert_primitives.ml[104,4103+15]..[104,4103+17])
                          pattern (middle_end/convert_primitives.ml[104,4103+19]..[104,4103+23])
                            Ppat_var "comp" (middle_end/convert_primitives.ml[104,4103+19]..[104,4103+23])
                        ]
                  expression (middle_end/convert_primitives.ml[104,4103+28]..[104,4103+48])
                    Pexp_construct "Pbintcomp" (middle_end/convert_primitives.ml[104,4103+28]..[104,4103+37])
                    Some
                      expression (middle_end/convert_primitives.ml[104,4103+38]..[104,4103+48])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[104,4103+39]..[104,4103+41])
                            Pexp_ident "bi" (middle_end/convert_primitives.ml[104,4103+39]..[104,4103+41])
                          expression (middle_end/convert_primitives.ml[104,4103+43]..[104,4103+47])
                            Pexp_ident "comp" (middle_end/convert_primitives.ml[104,4103+43]..[104,4103+47])
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[105,4152+4]..[105,4152+43])
                    Ppat_construct "Pbigarrayref" (middle_end/convert_primitives.ml[105,4152+4]..[105,4152+16])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[105,4152+17]..[105,4152+43])
                        Ppat_tuple
                        [
                          pattern (middle_end/convert_primitives.ml[105,4152+18]..[105,4152+22])
                            Ppat_var "safe" (middle_end/convert_primitives.ml[105,4152+18]..[105,4152+22])
                          pattern (middle_end/convert_primitives.ml[105,4152+24]..[105,4152+28])
                            Ppat_var "dims" (middle_end/convert_primitives.ml[105,4152+24]..[105,4152+28])
                          pattern (middle_end/convert_primitives.ml[105,4152+30]..[105,4152+34])
                            Ppat_var "kind" (middle_end/convert_primitives.ml[105,4152+30]..[105,4152+34])
                          pattern (middle_end/convert_primitives.ml[105,4152+36]..[105,4152+42])
                            Ppat_var "layout" (middle_end/convert_primitives.ml[105,4152+36]..[105,4152+42])
                        ]
                  expression (middle_end/convert_primitives.ml[106,4199+6]..[106,4199+45])
                    Pexp_construct "Pbigarrayref" (middle_end/convert_primitives.ml[106,4199+6]..[106,4199+18])
                    Some
                      expression (middle_end/convert_primitives.ml[106,4199+19]..[106,4199+45])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[106,4199+20]..[106,4199+24])
                            Pexp_ident "safe" (middle_end/convert_primitives.ml[106,4199+20]..[106,4199+24])
                          expression (middle_end/convert_primitives.ml[106,4199+26]..[106,4199+30])
                            Pexp_ident "dims" (middle_end/convert_primitives.ml[106,4199+26]..[106,4199+30])
                          expression (middle_end/convert_primitives.ml[106,4199+32]..[106,4199+36])
                            Pexp_ident "kind" (middle_end/convert_primitives.ml[106,4199+32]..[106,4199+36])
                          expression (middle_end/convert_primitives.ml[106,4199+38]..[106,4199+44])
                            Pexp_ident "layout" (middle_end/convert_primitives.ml[106,4199+38]..[106,4199+44])
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[107,4245+4]..[107,4245+43])
                    Ppat_construct "Pbigarrayset" (middle_end/convert_primitives.ml[107,4245+4]..[107,4245+16])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[107,4245+17]..[107,4245+43])
                        Ppat_tuple
                        [
                          pattern (middle_end/convert_primitives.ml[107,4245+18]..[107,4245+22])
                            Ppat_var "safe" (middle_end/convert_primitives.ml[107,4245+18]..[107,4245+22])
                          pattern (middle_end/convert_primitives.ml[107,4245+24]..[107,4245+28])
                            Ppat_var "dims" (middle_end/convert_primitives.ml[107,4245+24]..[107,4245+28])
                          pattern (middle_end/convert_primitives.ml[107,4245+30]..[107,4245+34])
                            Ppat_var "kind" (middle_end/convert_primitives.ml[107,4245+30]..[107,4245+34])
                          pattern (middle_end/convert_primitives.ml[107,4245+36]..[107,4245+42])
                            Ppat_var "layout" (middle_end/convert_primitives.ml[107,4245+36]..[107,4245+42])
                        ]
                  expression (middle_end/convert_primitives.ml[108,4292+6]..[108,4292+45])
                    Pexp_construct "Pbigarrayset" (middle_end/convert_primitives.ml[108,4292+6]..[108,4292+18])
                    Some
                      expression (middle_end/convert_primitives.ml[108,4292+19]..[108,4292+45])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[108,4292+20]..[108,4292+24])
                            Pexp_ident "safe" (middle_end/convert_primitives.ml[108,4292+20]..[108,4292+24])
                          expression (middle_end/convert_primitives.ml[108,4292+26]..[108,4292+30])
                            Pexp_ident "dims" (middle_end/convert_primitives.ml[108,4292+26]..[108,4292+30])
                          expression (middle_end/convert_primitives.ml[108,4292+32]..[108,4292+36])
                            Pexp_ident "kind" (middle_end/convert_primitives.ml[108,4292+32]..[108,4292+36])
                          expression (middle_end/convert_primitives.ml[108,4292+38]..[108,4292+44])
                            Pexp_ident "layout" (middle_end/convert_primitives.ml[108,4292+38]..[108,4292+44])
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[109,4338+4]..[109,4338+29])
                    Ppat_construct "Pstring_load_16" (middle_end/convert_primitives.ml[109,4338+4]..[109,4338+19])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[109,4338+20]..[109,4338+29])
                        Ppat_var "is_unsafe" (middle_end/convert_primitives.ml[109,4338+20]..[109,4338+29])
                  expression (middle_end/convert_primitives.ml[110,4371+6]..[110,4371+56])
                    Pexp_construct "Pstring_load" (middle_end/convert_primitives.ml[110,4371+6]..[110,4371+18])
                    Some
                      expression (middle_end/convert_primitives.ml[110,4371+19]..[110,4371+56])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[110,4371+20]..[110,4371+27])
                            Pexp_construct "Sixteen" (middle_end/convert_primitives.ml[110,4371+20]..[110,4371+27])
                            None
                          expression (middle_end/convert_primitives.ml[110,4371+29]..[110,4371+55])
                            Pexp_apply
                            expression (middle_end/convert_primitives.ml[110,4371+29]..[110,4371+45])
                              Pexp_ident "convert_unsafety" (middle_end/convert_primitives.ml[110,4371+29]..[110,4371+45])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/convert_primitives.ml[110,4371+46]..[110,4371+55])
                                  Pexp_ident "is_unsafe" (middle_end/convert_primitives.ml[110,4371+46]..[110,4371+55])
                            ]
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[111,4428+4]..[111,4428+29])
                    Ppat_construct "Pstring_load_32" (middle_end/convert_primitives.ml[111,4428+4]..[111,4428+19])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[111,4428+20]..[111,4428+29])
                        Ppat_var "is_unsafe" (middle_end/convert_primitives.ml[111,4428+20]..[111,4428+29])
                  expression (middle_end/convert_primitives.ml[112,4461+6]..[112,4461+59])
                    Pexp_construct "Pstring_load" (middle_end/convert_primitives.ml[112,4461+6]..[112,4461+18])
                    Some
                      expression (middle_end/convert_primitives.ml[112,4461+19]..[112,4461+59])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[112,4461+20]..[112,4461+30])
                            Pexp_construct "Thirty_two" (middle_end/convert_primitives.ml[112,4461+20]..[112,4461+30])
                            None
                          expression (middle_end/convert_primitives.ml[112,4461+32]..[112,4461+58])
                            Pexp_apply
                            expression (middle_end/convert_primitives.ml[112,4461+32]..[112,4461+48])
                              Pexp_ident "convert_unsafety" (middle_end/convert_primitives.ml[112,4461+32]..[112,4461+48])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/convert_primitives.ml[112,4461+49]..[112,4461+58])
                                  Pexp_ident "is_unsafe" (middle_end/convert_primitives.ml[112,4461+49]..[112,4461+58])
                            ]
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[113,4521+4]..[113,4521+29])
                    Ppat_construct "Pstring_load_64" (middle_end/convert_primitives.ml[113,4521+4]..[113,4521+19])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[113,4521+20]..[113,4521+29])
                        Ppat_var "is_unsafe" (middle_end/convert_primitives.ml[113,4521+20]..[113,4521+29])
                  expression (middle_end/convert_primitives.ml[114,4554+6]..[114,4554+59])
                    Pexp_construct "Pstring_load" (middle_end/convert_primitives.ml[114,4554+6]..[114,4554+18])
                    Some
                      expression (middle_end/convert_primitives.ml[114,4554+19]..[114,4554+59])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[114,4554+20]..[114,4554+30])
                            Pexp_construct "Sixty_four" (middle_end/convert_primitives.ml[114,4554+20]..[114,4554+30])
                            None
                          expression (middle_end/convert_primitives.ml[114,4554+32]..[114,4554+58])
                            Pexp_apply
                            expression (middle_end/convert_primitives.ml[114,4554+32]..[114,4554+48])
                              Pexp_ident "convert_unsafety" (middle_end/convert_primitives.ml[114,4554+32]..[114,4554+48])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/convert_primitives.ml[114,4554+49]..[114,4554+58])
                                  Pexp_ident "is_unsafe" (middle_end/convert_primitives.ml[114,4554+49]..[114,4554+58])
                            ]
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[115,4614+4]..[115,4614+28])
                    Ppat_construct "Pbytes_load_16" (middle_end/convert_primitives.ml[115,4614+4]..[115,4614+18])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[115,4614+19]..[115,4614+28])
                        Ppat_var "is_unsafe" (middle_end/convert_primitives.ml[115,4614+19]..[115,4614+28])
                  expression (middle_end/convert_primitives.ml[116,4646+6]..[116,4646+55])
                    Pexp_construct "Pbytes_load" (middle_end/convert_primitives.ml[116,4646+6]..[116,4646+17])
                    Some
                      expression (middle_end/convert_primitives.ml[116,4646+18]..[116,4646+55])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[116,4646+19]..[116,4646+26])
                            Pexp_construct "Sixteen" (middle_end/convert_primitives.ml[116,4646+19]..[116,4646+26])
                            None
                          expression (middle_end/convert_primitives.ml[116,4646+28]..[116,4646+54])
                            Pexp_apply
                            expression (middle_end/convert_primitives.ml[116,4646+28]..[116,4646+44])
                              Pexp_ident "convert_unsafety" (middle_end/convert_primitives.ml[116,4646+28]..[116,4646+44])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/convert_primitives.ml[116,4646+45]..[116,4646+54])
                                  Pexp_ident "is_unsafe" (middle_end/convert_primitives.ml[116,4646+45]..[116,4646+54])
                            ]
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[117,4702+4]..[117,4702+28])
                    Ppat_construct "Pbytes_load_32" (middle_end/convert_primitives.ml[117,4702+4]..[117,4702+18])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[117,4702+19]..[117,4702+28])
                        Ppat_var "is_unsafe" (middle_end/convert_primitives.ml[117,4702+19]..[117,4702+28])
                  expression (middle_end/convert_primitives.ml[118,4734+6]..[118,4734+58])
                    Pexp_construct "Pbytes_load" (middle_end/convert_primitives.ml[118,4734+6]..[118,4734+17])
                    Some
                      expression (middle_end/convert_primitives.ml[118,4734+18]..[118,4734+58])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[118,4734+19]..[118,4734+29])
                            Pexp_construct "Thirty_two" (middle_end/convert_primitives.ml[118,4734+19]..[118,4734+29])
                            None
                          expression (middle_end/convert_primitives.ml[118,4734+31]..[118,4734+57])
                            Pexp_apply
                            expression (middle_end/convert_primitives.ml[118,4734+31]..[118,4734+47])
                              Pexp_ident "convert_unsafety" (middle_end/convert_primitives.ml[118,4734+31]..[118,4734+47])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/convert_primitives.ml[118,4734+48]..[118,4734+57])
                                  Pexp_ident "is_unsafe" (middle_end/convert_primitives.ml[118,4734+48]..[118,4734+57])
                            ]
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[119,4793+4]..[119,4793+28])
                    Ppat_construct "Pbytes_load_64" (middle_end/convert_primitives.ml[119,4793+4]..[119,4793+18])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[119,4793+19]..[119,4793+28])
                        Ppat_var "is_unsafe" (middle_end/convert_primitives.ml[119,4793+19]..[119,4793+28])
                  expression (middle_end/convert_primitives.ml[120,4825+6]..[120,4825+58])
                    Pexp_construct "Pbytes_load" (middle_end/convert_primitives.ml[120,4825+6]..[120,4825+17])
                    Some
                      expression (middle_end/convert_primitives.ml[120,4825+18]..[120,4825+58])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[120,4825+19]..[120,4825+29])
                            Pexp_construct "Sixty_four" (middle_end/convert_primitives.ml[120,4825+19]..[120,4825+29])
                            None
                          expression (middle_end/convert_primitives.ml[120,4825+31]..[120,4825+57])
                            Pexp_apply
                            expression (middle_end/convert_primitives.ml[120,4825+31]..[120,4825+47])
                              Pexp_ident "convert_unsafety" (middle_end/convert_primitives.ml[120,4825+31]..[120,4825+47])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/convert_primitives.ml[120,4825+48]..[120,4825+57])
                                  Pexp_ident "is_unsafe" (middle_end/convert_primitives.ml[120,4825+48]..[120,4825+57])
                            ]
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[121,4884+4]..[121,4884+27])
                    Ppat_construct "Pbytes_set_16" (middle_end/convert_primitives.ml[121,4884+4]..[121,4884+17])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[121,4884+18]..[121,4884+27])
                        Ppat_var "is_unsafe" (middle_end/convert_primitives.ml[121,4884+18]..[121,4884+27])
                  expression (middle_end/convert_primitives.ml[122,4915+6]..[122,4915+54])
                    Pexp_construct "Pbytes_set" (middle_end/convert_primitives.ml[122,4915+6]..[122,4915+16])
                    Some
                      expression (middle_end/convert_primitives.ml[122,4915+17]..[122,4915+54])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[122,4915+18]..[122,4915+25])
                            Pexp_construct "Sixteen" (middle_end/convert_primitives.ml[122,4915+18]..[122,4915+25])
                            None
                          expression (middle_end/convert_primitives.ml[122,4915+27]..[122,4915+53])
                            Pexp_apply
                            expression (middle_end/convert_primitives.ml[122,4915+27]..[122,4915+43])
                              Pexp_ident "convert_unsafety" (middle_end/convert_primitives.ml[122,4915+27]..[122,4915+43])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/convert_primitives.ml[122,4915+44]..[122,4915+53])
                                  Pexp_ident "is_unsafe" (middle_end/convert_primitives.ml[122,4915+44]..[122,4915+53])
                            ]
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[123,4970+4]..[123,4970+27])
                    Ppat_construct "Pbytes_set_32" (middle_end/convert_primitives.ml[123,4970+4]..[123,4970+17])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[123,4970+18]..[123,4970+27])
                        Ppat_var "is_unsafe" (middle_end/convert_primitives.ml[123,4970+18]..[123,4970+27])
                  expression (middle_end/convert_primitives.ml[124,5001+6]..[124,5001+57])
                    Pexp_construct "Pbytes_set" (middle_end/convert_primitives.ml[124,5001+6]..[124,5001+16])
                    Some
                      expression (middle_end/convert_primitives.ml[124,5001+17]..[124,5001+57])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[124,5001+18]..[124,5001+28])
                            Pexp_construct "Thirty_two" (middle_end/convert_primitives.ml[124,5001+18]..[124,5001+28])
                            None
                          expression (middle_end/convert_primitives.ml[124,5001+30]..[124,5001+56])
                            Pexp_apply
                            expression (middle_end/convert_primitives.ml[124,5001+30]..[124,5001+46])
                              Pexp_ident "convert_unsafety" (middle_end/convert_primitives.ml[124,5001+30]..[124,5001+46])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/convert_primitives.ml[124,5001+47]..[124,5001+56])
                                  Pexp_ident "is_unsafe" (middle_end/convert_primitives.ml[124,5001+47]..[124,5001+56])
                            ]
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[125,5059+4]..[125,5059+27])
                    Ppat_construct "Pbytes_set_64" (middle_end/convert_primitives.ml[125,5059+4]..[125,5059+17])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[125,5059+18]..[125,5059+27])
                        Ppat_var "is_unsafe" (middle_end/convert_primitives.ml[125,5059+18]..[125,5059+27])
                  expression (middle_end/convert_primitives.ml[126,5090+6]..[126,5090+57])
                    Pexp_construct "Pbytes_set" (middle_end/convert_primitives.ml[126,5090+6]..[126,5090+16])
                    Some
                      expression (middle_end/convert_primitives.ml[126,5090+17]..[126,5090+57])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[126,5090+18]..[126,5090+28])
                            Pexp_construct "Sixty_four" (middle_end/convert_primitives.ml[126,5090+18]..[126,5090+28])
                            None
                          expression (middle_end/convert_primitives.ml[126,5090+30]..[126,5090+56])
                            Pexp_apply
                            expression (middle_end/convert_primitives.ml[126,5090+30]..[126,5090+46])
                              Pexp_ident "convert_unsafety" (middle_end/convert_primitives.ml[126,5090+30]..[126,5090+46])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/convert_primitives.ml[126,5090+47]..[126,5090+56])
                                  Pexp_ident "is_unsafe" (middle_end/convert_primitives.ml[126,5090+47]..[126,5090+56])
                            ]
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[127,5148+4]..[127,5148+32])
                    Ppat_construct "Pbigstring_load_16" (middle_end/convert_primitives.ml[127,5148+4]..[127,5148+22])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[127,5148+23]..[127,5148+32])
                        Ppat_var "is_unsafe" (middle_end/convert_primitives.ml[127,5148+23]..[127,5148+32])
                  expression (middle_end/convert_primitives.ml[128,5184+6]..[128,5184+59])
                    Pexp_construct "Pbigstring_load" (middle_end/convert_primitives.ml[128,5184+6]..[128,5184+21])
                    Some
                      expression (middle_end/convert_primitives.ml[128,5184+22]..[128,5184+59])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[128,5184+23]..[128,5184+30])
                            Pexp_construct "Sixteen" (middle_end/convert_primitives.ml[128,5184+23]..[128,5184+30])
                            None
                          expression (middle_end/convert_primitives.ml[128,5184+32]..[128,5184+58])
                            Pexp_apply
                            expression (middle_end/convert_primitives.ml[128,5184+32]..[128,5184+48])
                              Pexp_ident "convert_unsafety" (middle_end/convert_primitives.ml[128,5184+32]..[128,5184+48])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/convert_primitives.ml[128,5184+49]..[128,5184+58])
                                  Pexp_ident "is_unsafe" (middle_end/convert_primitives.ml[128,5184+49]..[128,5184+58])
                            ]
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[129,5244+4]..[129,5244+32])
                    Ppat_construct "Pbigstring_load_32" (middle_end/convert_primitives.ml[129,5244+4]..[129,5244+22])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[129,5244+23]..[129,5244+32])
                        Ppat_var "is_unsafe" (middle_end/convert_primitives.ml[129,5244+23]..[129,5244+32])
                  expression (middle_end/convert_primitives.ml[130,5280+6]..[130,5280+62])
                    Pexp_construct "Pbigstring_load" (middle_end/convert_primitives.ml[130,5280+6]..[130,5280+21])
                    Some
                      expression (middle_end/convert_primitives.ml[130,5280+22]..[130,5280+62])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[130,5280+23]..[130,5280+33])
                            Pexp_construct "Thirty_two" (middle_end/convert_primitives.ml[130,5280+23]..[130,5280+33])
                            None
                          expression (middle_end/convert_primitives.ml[130,5280+35]..[130,5280+61])
                            Pexp_apply
                            expression (middle_end/convert_primitives.ml[130,5280+35]..[130,5280+51])
                              Pexp_ident "convert_unsafety" (middle_end/convert_primitives.ml[130,5280+35]..[130,5280+51])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/convert_primitives.ml[130,5280+52]..[130,5280+61])
                                  Pexp_ident "is_unsafe" (middle_end/convert_primitives.ml[130,5280+52]..[130,5280+61])
                            ]
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[131,5343+4]..[131,5343+32])
                    Ppat_construct "Pbigstring_load_64" (middle_end/convert_primitives.ml[131,5343+4]..[131,5343+22])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[131,5343+23]..[131,5343+32])
                        Ppat_var "is_unsafe" (middle_end/convert_primitives.ml[131,5343+23]..[131,5343+32])
                  expression (middle_end/convert_primitives.ml[132,5379+6]..[132,5379+62])
                    Pexp_construct "Pbigstring_load" (middle_end/convert_primitives.ml[132,5379+6]..[132,5379+21])
                    Some
                      expression (middle_end/convert_primitives.ml[132,5379+22]..[132,5379+62])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[132,5379+23]..[132,5379+33])
                            Pexp_construct "Sixty_four" (middle_end/convert_primitives.ml[132,5379+23]..[132,5379+33])
                            None
                          expression (middle_end/convert_primitives.ml[132,5379+35]..[132,5379+61])
                            Pexp_apply
                            expression (middle_end/convert_primitives.ml[132,5379+35]..[132,5379+51])
                              Pexp_ident "convert_unsafety" (middle_end/convert_primitives.ml[132,5379+35]..[132,5379+51])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/convert_primitives.ml[132,5379+52]..[132,5379+61])
                                  Pexp_ident "is_unsafe" (middle_end/convert_primitives.ml[132,5379+52]..[132,5379+61])
                            ]
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[133,5442+4]..[133,5442+31])
                    Ppat_construct "Pbigstring_set_16" (middle_end/convert_primitives.ml[133,5442+4]..[133,5442+21])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[133,5442+22]..[133,5442+31])
                        Ppat_var "is_unsafe" (middle_end/convert_primitives.ml[133,5442+22]..[133,5442+31])
                  expression (middle_end/convert_primitives.ml[134,5477+6]..[134,5477+58])
                    Pexp_construct "Pbigstring_set" (middle_end/convert_primitives.ml[134,5477+6]..[134,5477+20])
                    Some
                      expression (middle_end/convert_primitives.ml[134,5477+21]..[134,5477+58])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[134,5477+22]..[134,5477+29])
                            Pexp_construct "Sixteen" (middle_end/convert_primitives.ml[134,5477+22]..[134,5477+29])
                            None
                          expression (middle_end/convert_primitives.ml[134,5477+31]..[134,5477+57])
                            Pexp_apply
                            expression (middle_end/convert_primitives.ml[134,5477+31]..[134,5477+47])
                              Pexp_ident "convert_unsafety" (middle_end/convert_primitives.ml[134,5477+31]..[134,5477+47])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/convert_primitives.ml[134,5477+48]..[134,5477+57])
                                  Pexp_ident "is_unsafe" (middle_end/convert_primitives.ml[134,5477+48]..[134,5477+57])
                            ]
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[135,5536+4]..[135,5536+31])
                    Ppat_construct "Pbigstring_set_32" (middle_end/convert_primitives.ml[135,5536+4]..[135,5536+21])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[135,5536+22]..[135,5536+31])
                        Ppat_var "is_unsafe" (middle_end/convert_primitives.ml[135,5536+22]..[135,5536+31])
                  expression (middle_end/convert_primitives.ml[136,5571+6]..[136,5571+61])
                    Pexp_construct "Pbigstring_set" (middle_end/convert_primitives.ml[136,5571+6]..[136,5571+20])
                    Some
                      expression (middle_end/convert_primitives.ml[136,5571+21]..[136,5571+61])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[136,5571+22]..[136,5571+32])
                            Pexp_construct "Thirty_two" (middle_end/convert_primitives.ml[136,5571+22]..[136,5571+32])
                            None
                          expression (middle_end/convert_primitives.ml[136,5571+34]..[136,5571+60])
                            Pexp_apply
                            expression (middle_end/convert_primitives.ml[136,5571+34]..[136,5571+50])
                              Pexp_ident "convert_unsafety" (middle_end/convert_primitives.ml[136,5571+34]..[136,5571+50])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/convert_primitives.ml[136,5571+51]..[136,5571+60])
                                  Pexp_ident "is_unsafe" (middle_end/convert_primitives.ml[136,5571+51]..[136,5571+60])
                            ]
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[137,5633+4]..[137,5633+31])
                    Ppat_construct "Pbigstring_set_64" (middle_end/convert_primitives.ml[137,5633+4]..[137,5633+21])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[137,5633+22]..[137,5633+31])
                        Ppat_var "is_unsafe" (middle_end/convert_primitives.ml[137,5633+22]..[137,5633+31])
                  expression (middle_end/convert_primitives.ml[138,5668+6]..[138,5668+61])
                    Pexp_construct "Pbigstring_set" (middle_end/convert_primitives.ml[138,5668+6]..[138,5668+20])
                    Some
                      expression (middle_end/convert_primitives.ml[138,5668+21]..[138,5668+61])
                        Pexp_tuple
                        [
                          expression (middle_end/convert_primitives.ml[138,5668+22]..[138,5668+32])
                            Pexp_construct "Sixty_four" (middle_end/convert_primitives.ml[138,5668+22]..[138,5668+32])
                            None
                          expression (middle_end/convert_primitives.ml[138,5668+34]..[138,5668+60])
                            Pexp_apply
                            expression (middle_end/convert_primitives.ml[138,5668+34]..[138,5668+50])
                              Pexp_ident "convert_unsafety" (middle_end/convert_primitives.ml[138,5668+34]..[138,5668+50])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/convert_primitives.ml[138,5668+51]..[138,5668+60])
                                  Pexp_ident "is_unsafe" (middle_end/convert_primitives.ml[138,5668+51]..[138,5668+60])
                            ]
                        ]
                <case>
                  pattern (middle_end/convert_primitives.ml[139,5730+4]..[139,5730+20])
                    Ppat_construct "Pbigarraydim" (middle_end/convert_primitives.ml[139,5730+4]..[139,5730+16])
                    Some
                      []
                      pattern (middle_end/convert_primitives.ml[139,5730+17]..[139,5730+20])
                        Ppat_var "dim" (middle_end/convert_primitives.ml[139,5730+17]..[139,5730+20])
                  expression (middle_end/convert_primitives.ml[139,5730+24]..[139,5730+40])
                    Pexp_construct "Pbigarraydim" (middle_end/convert_primitives.ml[139,5730+24]..[139,5730+36])
                    Some
                      expression (middle_end/convert_primitives.ml[139,5730+37]..[139,5730+40])
                        Pexp_ident "dim" (middle_end/convert_primitives.ml[139,5730+37]..[139,5730+40])
                <case>
                  pattern (middle_end/convert_primitives.ml[140,5771+4]..[140,5771+12])
                    Ppat_construct "Pbswap16" (middle_end/convert_primitives.ml[140,5771+4]..[140,5771+12])
                    None
                  expression (middle_end/convert_primitives.ml[140,5771+16]..[140,5771+24])
                    Pexp_construct "Pbswap16" (middle_end/convert_primitives.ml[140,5771+16]..[140,5771+24])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[141,5796+4]..[141,5796+19])
                    Ppat_construct "Pint_as_pointer" (middle_end/convert_primitives.ml[141,5796+4]..[141,5796+19])
                    None
                  expression (middle_end/convert_primitives.ml[141,5796+23]..[141,5796+38])
                    Pexp_construct "Pint_as_pointer" (middle_end/convert_primitives.ml[141,5796+23]..[141,5796+38])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[142,5835+4]..[142,5835+11])
                    Ppat_construct "Popaque" (middle_end/convert_primitives.ml[142,5835+4]..[142,5835+11])
                    None
                  expression (middle_end/convert_primitives.ml[142,5835+15]..[142,5835+22])
                    Pexp_construct "Popaque" (middle_end/convert_primitives.ml[142,5835+15]..[142,5835+22])
                    None
                <case>
                  pattern (middle_end/convert_primitives.ml[144,5859+4]..[149,5945+16])
                    Ppat_or
                    pattern (middle_end/convert_primitives.ml[144,5859+4]..[148,5928+16])
                      Ppat_or
                      pattern (middle_end/convert_primitives.ml[144,5859+4]..[147,5916+11])
                        Ppat_or
                        pattern (middle_end/convert_primitives.ml[144,5859+4]..[146,5901+14])
                          Ppat_or
                          pattern (middle_end/convert_primitives.ml[144,5859+4]..[145,5880+20])
                            Ppat_or
                            pattern (middle_end/convert_primitives.ml[144,5859+4]..[144,5859+20])
                              Ppat_construct "Pbytes_to_string" (middle_end/convert_primitives.ml[144,5859+4]..[144,5859+20])
                              None
                            pattern (middle_end/convert_primitives.ml[145,5880+4]..[145,5880+20])
                              Ppat_construct "Pbytes_of_string" (middle_end/convert_primitives.ml[145,5880+4]..[145,5880+20])
                              None
                          pattern (middle_end/convert_primitives.ml[146,5901+4]..[146,5901+14])
                            Ppat_construct "Pctconst" (middle_end/convert_primitives.ml[146,5901+4]..[146,5901+12])
                            Some
                              []
                              pattern (middle_end/convert_primitives.ml[146,5901+13]..[146,5901+14])
                                Ppat_any
                        pattern (middle_end/convert_primitives.ml[147,5916+4]..[147,5916+11])
                          Ppat_construct "Pignore" (middle_end/convert_primitives.ml[147,5916+4]..[147,5916+11])
                          None
                      pattern (middle_end/convert_primitives.ml[148,5928+4]..[148,5928+16])
                        Ppat_construct "Pgetglobal" (middle_end/convert_primitives.ml[148,5928+4]..[148,5928+14])
                        Some
                          []
                          pattern (middle_end/convert_primitives.ml[148,5928+15]..[148,5928+16])
                            Ppat_any
                    pattern (middle_end/convert_primitives.ml[149,5945+4]..[149,5945+16])
                      Ppat_construct "Psetglobal" (middle_end/convert_primitives.ml[149,5945+4]..[149,5945+14])
                      Some
                        []
                        pattern (middle_end/convert_primitives.ml[149,5945+15]..[149,5945+16])
                          Ppat_any
                  expression (middle_end/convert_primitives.ml[151,5969+6]..[153,6082+34])
                    Pexp_apply
                    expression (middle_end/convert_primitives.ml[151,5969+6]..[151,5969+23])
                      Pexp_ident "Misc.fatal_errorf" (middle_end/convert_primitives.ml[151,5969+6]..[151,5969+23])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/convert_primitives.ml[151,5969+24]..[152,6038+43])
                          Pexp_constant PConst_string("lambda primitive %a can't be converted to clambda primitive",(middle_end/convert_primitives.ml[151,5969+25]..[152,6038+42]),None)
                      <arg>
                      Nolabel
                        expression (middle_end/convert_primitives.ml[153,6082+8]..[153,6082+29])
                          Pexp_ident "Printlambda.primitive" (middle_end/convert_primitives.ml[153,6082+8]..[153,6082+29])
                      <arg>
                      Nolabel
                        expression (middle_end/convert_primitives.ml[153,6082+30]..[153,6082+34])
                          Pexp_ident "prim" (middle_end/convert_primitives.ml[153,6082+30]..[153,6082+34])
                    ]
              ]
            core_type (middle_end/convert_primitives.ml[25,1307+40]..[25,1307+68])
              Ptyp_constr "Clambda_primitives.primitive" (middle_end/convert_primitives.ml[25,1307+40]..[25,1307+68])
              []
    ]
]

