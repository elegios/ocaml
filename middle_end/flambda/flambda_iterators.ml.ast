[
  structure_item (middle_end/flambda/flambda_iterators.ml[17,1156+0]..[17,1156+42])
    Pstr_attribute "ocaml.warning"
    [
      structure_item (middle_end/flambda/flambda_iterators.ml[17,1156+18]..[17,1156+41])
        Pstr_eval
        expression (middle_end/flambda/flambda_iterators.ml[17,1156+18]..[17,1156+41])
          Pexp_constant PConst_string("+a-4-9-30-40-41-42-66",(middle_end/flambda/flambda_iterators.ml[17,1156+19]..[17,1156+40]),None)
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[18,1199+0]..[18,1199+37])
    Pstr_open Override
    module_expr (middle_end/flambda/flambda_iterators.ml[18,1199+6]..[18,1199+37])
      Pmod_ident "Int_replace_polymorphic_compare" (middle_end/flambda/flambda_iterators.ml[18,1199+6]..[18,1199+37])
  structure_item (middle_end/flambda/flambda_iterators.ml[20,1238+0]..[47,2008+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[20,1238+4]..[20,1238+27])
          Ppat_var "apply_on_subexpressions" (middle_end/flambda/flambda_iterators.ml[20,1238+4]..[20,1238+27])
        expression (middle_end/flambda/flambda_iterators.ml[20,1238+28]..[47,2008+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[20,1238+28]..[20,1238+29])
            Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[20,1238+28]..[20,1238+29])
          expression (middle_end/flambda/flambda_iterators.ml[20,1238+30]..[47,2008+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[20,1238+30]..[20,1238+37])
              Ppat_var "f_named" (middle_end/flambda/flambda_iterators.ml[20,1238+30]..[20,1238+37])
            expression (middle_end/flambda/flambda_iterators.ml[20,1238+38]..[47,2008+29]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/flambda_iterators.ml[20,1238+38]..[20,1238+56])
                Ppat_constraint
                pattern (middle_end/flambda/flambda_iterators.ml[20,1238+39]..[20,1238+43])
                  Ppat_var "flam" (middle_end/flambda/flambda_iterators.ml[20,1238+39]..[20,1238+43])
                core_type (middle_end/flambda/flambda_iterators.ml[20,1238+46]..[20,1238+55])
                  Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_iterators.ml[20,1238+46]..[20,1238+55])
                  []
              expression (middle_end/flambda/flambda_iterators.ml[21,1297+2]..[47,2008+29])
                Pexp_match
                expression (middle_end/flambda/flambda_iterators.ml[21,1297+8]..[21,1297+12])
                  Pexp_ident "flam" (middle_end/flambda/flambda_iterators.ml[21,1297+8]..[21,1297+12])
                [
                  <case>
                    pattern (middle_end/flambda/flambda_iterators.ml[22,1315+4]..[23,1376+18])
                      Ppat_or
                      pattern (middle_end/flambda/flambda_iterators.ml[22,1315+4]..[22,1315+60])
                        Ppat_or
                        pattern (middle_end/flambda/flambda_iterators.ml[22,1315+4]..[22,1315+39])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_iterators.ml[22,1315+4]..[22,1315+30])
                            Ppat_or
                            pattern (middle_end/flambda/flambda_iterators.ml[22,1315+4]..[22,1315+19])
                              Ppat_or
                              pattern (middle_end/flambda/flambda_iterators.ml[22,1315+4]..[22,1315+9])
                                Ppat_construct "Var" (middle_end/flambda/flambda_iterators.ml[22,1315+4]..[22,1315+7])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[22,1315+8]..[22,1315+9])
                                    Ppat_any
                              pattern (middle_end/flambda/flambda_iterators.ml[22,1315+12]..[22,1315+19])
                                Ppat_construct "Apply" (middle_end/flambda/flambda_iterators.ml[22,1315+12]..[22,1315+17])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[22,1315+18]..[22,1315+19])
                                    Ppat_any
                            pattern (middle_end/flambda/flambda_iterators.ml[22,1315+22]..[22,1315+30])
                              Ppat_construct "Assign" (middle_end/flambda/flambda_iterators.ml[22,1315+22]..[22,1315+28])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_iterators.ml[22,1315+29]..[22,1315+30])
                                  Ppat_any
                          pattern (middle_end/flambda/flambda_iterators.ml[22,1315+33]..[22,1315+39])
                            Ppat_construct "Send" (middle_end/flambda/flambda_iterators.ml[22,1315+33]..[22,1315+37])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[22,1315+38]..[22,1315+39])
                                Ppat_any
                        pattern (middle_end/flambda/flambda_iterators.ml[22,1315+42]..[22,1315+60])
                          Ppat_construct "Proved_unreachable" (middle_end/flambda/flambda_iterators.ml[22,1315+42]..[22,1315+60])
                          None
                      pattern (middle_end/flambda/flambda_iterators.ml[23,1376+4]..[23,1376+18])
                        Ppat_construct "Static_raise" (middle_end/flambda/flambda_iterators.ml[23,1376+4]..[23,1376+16])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_iterators.ml[23,1376+17]..[23,1376+18])
                            Ppat_any
                    expression (middle_end/flambda/flambda_iterators.ml[23,1376+22]..[23,1376+24])
                      Pexp_construct "()" (middle_end/flambda/flambda_iterators.ml[23,1376+22]..[23,1376+24])
                      None
                  <case>
                    pattern (middle_end/flambda/flambda_iterators.ml[24,1401+4]..[24,1401+34])
                      Ppat_construct "Let" (middle_end/flambda/flambda_iterators.ml[24,1401+4]..[24,1401+7])
                      Some
                        []
                        pattern (middle_end/flambda/flambda_iterators.ml[24,1401+8]..[24,1401+34])
                          Ppat_record Open
                          [
                            "defining_expr" (middle_end/flambda/flambda_iterators.ml[24,1401+10]..[24,1401+23]) ghost
                              pattern (middle_end/flambda/flambda_iterators.ml[24,1401+10]..[24,1401+23])
                                Ppat_var "defining_expr" (middle_end/flambda/flambda_iterators.ml[24,1401+10]..[24,1401+23])
                            "body" (middle_end/flambda/flambda_iterators.ml[24,1401+25]..[24,1401+29]) ghost
                              pattern (middle_end/flambda/flambda_iterators.ml[24,1401+25]..[24,1401+29])
                                Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[24,1401+25]..[24,1401+29])
                          ]
                    expression (middle_end/flambda/flambda_iterators.ml[25,1439+4]..[26,1466+10])
                      Pexp_sequence
                      expression (middle_end/flambda/flambda_iterators.ml[25,1439+4]..[25,1439+25])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[25,1439+4]..[25,1439+11])
                          Pexp_ident "f_named" (middle_end/flambda/flambda_iterators.ml[25,1439+4]..[25,1439+11])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[25,1439+12]..[25,1439+25])
                              Pexp_ident "defining_expr" (middle_end/flambda/flambda_iterators.ml[25,1439+12]..[25,1439+25])
                        ]
                      expression (middle_end/flambda/flambda_iterators.ml[26,1466+4]..[26,1466+10])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[26,1466+4]..[26,1466+5])
                          Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[26,1466+4]..[26,1466+5])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[26,1466+6]..[26,1466+10])
                              Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[26,1466+6]..[26,1466+10])
                        ]
                  <case>
                    pattern (middle_end/flambda/flambda_iterators.ml[27,1477+4]..[27,1477+27])
                      Ppat_construct "Let_mutable" (middle_end/flambda/flambda_iterators.ml[27,1477+4]..[27,1477+15])
                      Some
                        []
                        pattern (middle_end/flambda/flambda_iterators.ml[27,1477+16]..[27,1477+27])
                          Ppat_record Open
                          [
                            "body" (middle_end/flambda/flambda_iterators.ml[27,1477+18]..[27,1477+22]) ghost
                              pattern (middle_end/flambda/flambda_iterators.ml[27,1477+18]..[27,1477+22])
                                Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[27,1477+18]..[27,1477+22])
                          ]
                    expression (middle_end/flambda/flambda_iterators.ml[28,1508+4]..[28,1508+10])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_iterators.ml[28,1508+4]..[28,1508+5])
                        Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[28,1508+4]..[28,1508+5])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_iterators.ml[28,1508+6]..[28,1508+10])
                            Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[28,1508+6]..[28,1508+10])
                      ]
                  <case>
                    pattern (middle_end/flambda/flambda_iterators.ml[29,1519+4]..[29,1519+24])
                      Ppat_construct "Let_rec" (middle_end/flambda/flambda_iterators.ml[29,1519+4]..[29,1519+11])
                      Some
                        []
                        pattern (middle_end/flambda/flambda_iterators.ml[29,1519+12]..[29,1519+24])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_iterators.ml[29,1519+13]..[29,1519+17])
                              Ppat_var "defs" (middle_end/flambda/flambda_iterators.ml[29,1519+13]..[29,1519+17])
                            pattern (middle_end/flambda/flambda_iterators.ml[29,1519+19]..[29,1519+23])
                              Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[29,1519+19]..[29,1519+23])
                          ]
                    expression (middle_end/flambda/flambda_iterators.ml[30,1547+4]..[31,1592+10])
                      Pexp_sequence
                      expression (middle_end/flambda/flambda_iterators.ml[30,1547+4]..[30,1547+43])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[30,1547+4]..[30,1547+13])
                          Pexp_ident "List.iter" (middle_end/flambda/flambda_iterators.ml[30,1547+4]..[30,1547+13])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[30,1547+14]..[30,1547+38])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/flambda_iterators.ml[30,1547+19]..[30,1547+24])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[30,1547+20]..[30,1547+21])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[30,1547+22]..[30,1547+23])
                                    Ppat_var "l" (middle_end/flambda/flambda_iterators.ml[30,1547+22]..[30,1547+23])
                                ]
                              expression (middle_end/flambda/flambda_iterators.ml[30,1547+28]..[30,1547+37])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[30,1547+28]..[30,1547+35])
                                  Pexp_ident "f_named" (middle_end/flambda/flambda_iterators.ml[30,1547+28]..[30,1547+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[30,1547+36]..[30,1547+37])
                                      Pexp_ident "l" (middle_end/flambda/flambda_iterators.ml[30,1547+36]..[30,1547+37])
                                ]
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[30,1547+39]..[30,1547+43])
                              Pexp_ident "defs" (middle_end/flambda/flambda_iterators.ml[30,1547+39]..[30,1547+43])
                        ]
                      expression (middle_end/flambda/flambda_iterators.ml[31,1592+4]..[31,1592+10])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[31,1592+4]..[31,1592+5])
                          Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[31,1592+4]..[31,1592+5])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[31,1592+6]..[31,1592+10])
                              Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[31,1592+6]..[31,1592+10])
                        ]
                  <case>
                    pattern (middle_end/flambda/flambda_iterators.ml[32,1603+4]..[32,1603+18])
                      Ppat_construct "Switch" (middle_end/flambda/flambda_iterators.ml[32,1603+4]..[32,1603+10])
                      Some
                        []
                        pattern (middle_end/flambda/flambda_iterators.ml[32,1603+11]..[32,1603+18])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_iterators.ml[32,1603+12]..[32,1603+13])
                              Ppat_any
                            pattern (middle_end/flambda/flambda_iterators.ml[32,1603+15]..[32,1603+17])
                              Ppat_var "sw" (middle_end/flambda/flambda_iterators.ml[32,1603+15]..[32,1603+17])
                          ]
                    expression (middle_end/flambda/flambda_iterators.ml[33,1625+4]..[35,1713+31])
                      Pexp_sequence
                      expression (middle_end/flambda/flambda_iterators.ml[33,1625+4]..[33,1625+42])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[33,1625+4]..[33,1625+13])
                          Pexp_ident "List.iter" (middle_end/flambda/flambda_iterators.ml[33,1625+4]..[33,1625+13])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[33,1625+14]..[33,1625+32])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/flambda_iterators.ml[33,1625+19]..[33,1625+24])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[33,1625+20]..[33,1625+21])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[33,1625+22]..[33,1625+23])
                                    Ppat_var "l" (middle_end/flambda/flambda_iterators.ml[33,1625+22]..[33,1625+23])
                                ]
                              expression (middle_end/flambda/flambda_iterators.ml[33,1625+28]..[33,1625+31])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[33,1625+28]..[33,1625+29])
                                  Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[33,1625+28]..[33,1625+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[33,1625+30]..[33,1625+31])
                                      Pexp_ident "l" (middle_end/flambda/flambda_iterators.ml[33,1625+30]..[33,1625+31])
                                ]
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[33,1625+33]..[33,1625+42])
                              Pexp_field
                              expression (middle_end/flambda/flambda_iterators.ml[33,1625+33]..[33,1625+35])
                                Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[33,1625+33]..[33,1625+35])
                              "consts" (middle_end/flambda/flambda_iterators.ml[33,1625+36]..[33,1625+42])
                        ]
                      expression (middle_end/flambda/flambda_iterators.ml[34,1669+4]..[35,1713+31])
                        Pexp_sequence
                        expression (middle_end/flambda/flambda_iterators.ml[34,1669+4]..[34,1669+42])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_iterators.ml[34,1669+4]..[34,1669+13])
                            Pexp_ident "List.iter" (middle_end/flambda/flambda_iterators.ml[34,1669+4]..[34,1669+13])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[34,1669+14]..[34,1669+32])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/flambda_iterators.ml[34,1669+19]..[34,1669+24])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_iterators.ml[34,1669+20]..[34,1669+21])
                                      Ppat_any
                                    pattern (middle_end/flambda/flambda_iterators.ml[34,1669+22]..[34,1669+23])
                                      Ppat_var "l" (middle_end/flambda/flambda_iterators.ml[34,1669+22]..[34,1669+23])
                                  ]
                                expression (middle_end/flambda/flambda_iterators.ml[34,1669+28]..[34,1669+31])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_iterators.ml[34,1669+28]..[34,1669+29])
                                    Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[34,1669+28]..[34,1669+29])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[34,1669+30]..[34,1669+31])
                                        Pexp_ident "l" (middle_end/flambda/flambda_iterators.ml[34,1669+30]..[34,1669+31])
                                  ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[34,1669+33]..[34,1669+42])
                                Pexp_field
                                expression (middle_end/flambda/flambda_iterators.ml[34,1669+33]..[34,1669+35])
                                  Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[34,1669+33]..[34,1669+35])
                                "blocks" (middle_end/flambda/flambda_iterators.ml[34,1669+36]..[34,1669+42])
                          ]
                        expression (middle_end/flambda/flambda_iterators.ml[35,1713+4]..[35,1713+31])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_iterators.ml[35,1713+4]..[35,1713+15])
                            Pexp_ident "Option.iter" (middle_end/flambda/flambda_iterators.ml[35,1713+4]..[35,1713+15])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[35,1713+16]..[35,1713+17])
                                Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[35,1713+16]..[35,1713+17])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[35,1713+18]..[35,1713+31])
                                Pexp_field
                                expression (middle_end/flambda/flambda_iterators.ml[35,1713+18]..[35,1713+20])
                                  Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[35,1713+18]..[35,1713+20])
                                "failaction" (middle_end/flambda/flambda_iterators.ml[35,1713+21]..[35,1713+31])
                          ]
                  <case>
                    pattern (middle_end/flambda/flambda_iterators.ml[36,1745+4]..[36,1745+30])
                      Ppat_construct "String_switch" (middle_end/flambda/flambda_iterators.ml[36,1745+4]..[36,1745+17])
                      Some
                        []
                        pattern (middle_end/flambda/flambda_iterators.ml[36,1745+18]..[36,1745+30])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_iterators.ml[36,1745+19]..[36,1745+20])
                              Ppat_any
                            pattern (middle_end/flambda/flambda_iterators.ml[36,1745+22]..[36,1745+24])
                              Ppat_var "sw" (middle_end/flambda/flambda_iterators.ml[36,1745+22]..[36,1745+24])
                            pattern (middle_end/flambda/flambda_iterators.ml[36,1745+26]..[36,1745+29])
                              Ppat_var "def" (middle_end/flambda/flambda_iterators.ml[36,1745+26]..[36,1745+29])
                          ]
                    expression (middle_end/flambda/flambda_iterators.ml[37,1779+4]..[38,1816+21])
                      Pexp_sequence
                      expression (middle_end/flambda/flambda_iterators.ml[37,1779+4]..[37,1779+35])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[37,1779+4]..[37,1779+13])
                          Pexp_ident "List.iter" (middle_end/flambda/flambda_iterators.ml[37,1779+4]..[37,1779+13])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[37,1779+14]..[37,1779+32])
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/flambda_iterators.ml[37,1779+19]..[37,1779+24])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[37,1779+20]..[37,1779+21])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[37,1779+22]..[37,1779+23])
                                    Ppat_var "l" (middle_end/flambda/flambda_iterators.ml[37,1779+22]..[37,1779+23])
                                ]
                              expression (middle_end/flambda/flambda_iterators.ml[37,1779+28]..[37,1779+31])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[37,1779+28]..[37,1779+29])
                                  Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[37,1779+28]..[37,1779+29])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[37,1779+30]..[37,1779+31])
                                      Pexp_ident "l" (middle_end/flambda/flambda_iterators.ml[37,1779+30]..[37,1779+31])
                                ]
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[37,1779+33]..[37,1779+35])
                              Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[37,1779+33]..[37,1779+35])
                        ]
                      expression (middle_end/flambda/flambda_iterators.ml[38,1816+4]..[38,1816+21])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[38,1816+4]..[38,1816+15])
                          Pexp_ident "Option.iter" (middle_end/flambda/flambda_iterators.ml[38,1816+4]..[38,1816+15])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[38,1816+16]..[38,1816+17])
                              Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[38,1816+16]..[38,1816+17])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[38,1816+18]..[38,1816+21])
                              Pexp_ident "def" (middle_end/flambda/flambda_iterators.ml[38,1816+18]..[38,1816+21])
                        ]
                  <case>
                    pattern (middle_end/flambda/flambda_iterators.ml[39,1838+4]..[39,1838+28])
                      Ppat_construct "Static_catch" (middle_end/flambda/flambda_iterators.ml[39,1838+4]..[39,1838+16])
                      Some
                        []
                        pattern (middle_end/flambda/flambda_iterators.ml[39,1838+17]..[39,1838+28])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_iterators.ml[39,1838+18]..[39,1838+19])
                              Ppat_any
                            pattern (middle_end/flambda/flambda_iterators.ml[39,1838+20]..[39,1838+21])
                              Ppat_any
                            pattern (middle_end/flambda/flambda_iterators.ml[39,1838+22]..[39,1838+24])
                              Ppat_var "f1" (middle_end/flambda/flambda_iterators.ml[39,1838+22]..[39,1838+24])
                            pattern (middle_end/flambda/flambda_iterators.ml[39,1838+25]..[39,1838+27])
                              Ppat_var "f2" (middle_end/flambda/flambda_iterators.ml[39,1838+25]..[39,1838+27])
                          ]
                    expression (middle_end/flambda/flambda_iterators.ml[40,1870+4]..[40,1870+15])
                      Pexp_sequence
                      expression (middle_end/flambda/flambda_iterators.ml[40,1870+4]..[40,1870+8])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[40,1870+4]..[40,1870+5])
                          Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[40,1870+4]..[40,1870+5])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[40,1870+6]..[40,1870+8])
                              Pexp_ident "f1" (middle_end/flambda/flambda_iterators.ml[40,1870+6]..[40,1870+8])
                        ]
                      expression (middle_end/flambda/flambda_iterators.ml[40,1870+10]..[40,1870+14])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[40,1870+10]..[40,1870+11])
                          Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[40,1870+10]..[40,1870+11])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[40,1870+12]..[40,1870+14])
                              Pexp_ident "f2" (middle_end/flambda/flambda_iterators.ml[40,1870+12]..[40,1870+14])
                        ]
                  <case>
                    pattern (middle_end/flambda/flambda_iterators.ml[41,1886+4]..[41,1886+22])
                      Ppat_construct "Try_with" (middle_end/flambda/flambda_iterators.ml[41,1886+4]..[41,1886+12])
                      Some
                        []
                        pattern (middle_end/flambda/flambda_iterators.ml[41,1886+13]..[41,1886+22])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_iterators.ml[41,1886+14]..[41,1886+16])
                              Ppat_var "f1" (middle_end/flambda/flambda_iterators.ml[41,1886+14]..[41,1886+16])
                            pattern (middle_end/flambda/flambda_iterators.ml[41,1886+17]..[41,1886+18])
                              Ppat_any
                            pattern (middle_end/flambda/flambda_iterators.ml[41,1886+19]..[41,1886+21])
                              Ppat_var "f2" (middle_end/flambda/flambda_iterators.ml[41,1886+19]..[41,1886+21])
                          ]
                    expression (middle_end/flambda/flambda_iterators.ml[42,1912+4]..[42,1912+14])
                      Pexp_sequence
                      expression (middle_end/flambda/flambda_iterators.ml[42,1912+4]..[42,1912+8])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[42,1912+4]..[42,1912+5])
                          Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[42,1912+4]..[42,1912+5])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[42,1912+6]..[42,1912+8])
                              Pexp_ident "f1" (middle_end/flambda/flambda_iterators.ml[42,1912+6]..[42,1912+8])
                        ]
                      expression (middle_end/flambda/flambda_iterators.ml[42,1912+10]..[42,1912+14])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[42,1912+10]..[42,1912+11])
                          Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[42,1912+10]..[42,1912+11])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[42,1912+12]..[42,1912+14])
                              Pexp_ident "f2" (middle_end/flambda/flambda_iterators.ml[42,1912+12]..[42,1912+14])
                        ]
                  <case>
                    pattern (middle_end/flambda/flambda_iterators.ml[43,1927+4]..[43,1927+27])
                      Ppat_construct "If_then_else" (middle_end/flambda/flambda_iterators.ml[43,1927+4]..[43,1927+16])
                      Some
                        []
                        pattern (middle_end/flambda/flambda_iterators.ml[43,1927+17]..[43,1927+27])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_iterators.ml[43,1927+18]..[43,1927+19])
                              Ppat_any
                            pattern (middle_end/flambda/flambda_iterators.ml[43,1927+20]..[43,1927+22])
                              Ppat_var "f1" (middle_end/flambda/flambda_iterators.ml[43,1927+20]..[43,1927+22])
                            pattern (middle_end/flambda/flambda_iterators.ml[43,1927+24]..[43,1927+26])
                              Ppat_var "f2" (middle_end/flambda/flambda_iterators.ml[43,1927+24]..[43,1927+26])
                          ]
                    expression (middle_end/flambda/flambda_iterators.ml[44,1958+4]..[44,1958+13])
                      Pexp_sequence
                      expression (middle_end/flambda/flambda_iterators.ml[44,1958+4]..[44,1958+8])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[44,1958+4]..[44,1958+5])
                          Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[44,1958+4]..[44,1958+5])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[44,1958+6]..[44,1958+8])
                              Pexp_ident "f1" (middle_end/flambda/flambda_iterators.ml[44,1958+6]..[44,1958+8])
                        ]
                      expression (middle_end/flambda/flambda_iterators.ml[44,1958+9]..[44,1958+13])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[44,1958+9]..[44,1958+10])
                          Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[44,1958+9]..[44,1958+10])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[44,1958+11]..[44,1958+13])
                              Pexp_ident "f2" (middle_end/flambda/flambda_iterators.ml[44,1958+11]..[44,1958+13])
                        ]
                  <case>
                    pattern (middle_end/flambda/flambda_iterators.ml[45,1972+4]..[45,1972+17])
                      Ppat_construct "While" (middle_end/flambda/flambda_iterators.ml[45,1972+4]..[45,1972+9])
                      Some
                        []
                        pattern (middle_end/flambda/flambda_iterators.ml[45,1972+10]..[45,1972+17])
                          Ppat_tuple
                          [
                            pattern (middle_end/flambda/flambda_iterators.ml[45,1972+11]..[45,1972+13])
                              Ppat_var "f1" (middle_end/flambda/flambda_iterators.ml[45,1972+11]..[45,1972+13])
                            pattern (middle_end/flambda/flambda_iterators.ml[45,1972+14]..[45,1972+16])
                              Ppat_var "f2" (middle_end/flambda/flambda_iterators.ml[45,1972+14]..[45,1972+16])
                          ]
                    expression (middle_end/flambda/flambda_iterators.ml[46,1993+4]..[46,1993+14])
                      Pexp_sequence
                      expression (middle_end/flambda/flambda_iterators.ml[46,1993+4]..[46,1993+8])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[46,1993+4]..[46,1993+5])
                          Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[46,1993+4]..[46,1993+5])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[46,1993+6]..[46,1993+8])
                              Pexp_ident "f1" (middle_end/flambda/flambda_iterators.ml[46,1993+6]..[46,1993+8])
                        ]
                      expression (middle_end/flambda/flambda_iterators.ml[46,1993+10]..[46,1993+14])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[46,1993+10]..[46,1993+11])
                          Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[46,1993+10]..[46,1993+11])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[46,1993+12]..[46,1993+14])
                              Pexp_ident "f2" (middle_end/flambda/flambda_iterators.ml[46,1993+12]..[46,1993+14])
                        ]
                  <case>
                    pattern (middle_end/flambda/flambda_iterators.ml[47,2008+4]..[47,2008+19])
                      Ppat_construct "For" (middle_end/flambda/flambda_iterators.ml[47,2008+4]..[47,2008+7])
                      Some
                        []
                        pattern (middle_end/flambda/flambda_iterators.ml[47,2008+8]..[47,2008+19])
                          Ppat_record Open
                          [
                            "body" (middle_end/flambda/flambda_iterators.ml[47,2008+10]..[47,2008+14]) ghost
                              pattern (middle_end/flambda/flambda_iterators.ml[47,2008+10]..[47,2008+14])
                                Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[47,2008+10]..[47,2008+14])
                          ]
                    expression (middle_end/flambda/flambda_iterators.ml[47,2008+23]..[47,2008+29])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_iterators.ml[47,2008+23]..[47,2008+24])
                        Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[47,2008+23]..[47,2008+24])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_iterators.ml[47,2008+25]..[47,2008+29])
                            Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[47,2008+25]..[47,2008+29])
                      ]
                ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[49,2039+0]..[58,2228+20])
    Pstr_value Rec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[49,2039+8]..[49,2039+24])
          Ppat_var "list_map_sharing" (middle_end/flambda/flambda_iterators.ml[49,2039+8]..[49,2039+24])
        expression (middle_end/flambda/flambda_iterators.ml[49,2039+25]..[58,2228+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[49,2039+25]..[49,2039+26])
            Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[49,2039+25]..[49,2039+26])
          expression (middle_end/flambda/flambda_iterators.ml[49,2039+27]..[58,2228+20]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[49,2039+27]..[49,2039+28])
              Ppat_var "l" (middle_end/flambda/flambda_iterators.ml[49,2039+27]..[49,2039+28])
            expression (middle_end/flambda/flambda_iterators.ml[50,2070+2]..[58,2228+20])
              Pexp_match
              expression (middle_end/flambda/flambda_iterators.ml[50,2070+8]..[50,2070+9])
                Pexp_ident "l" (middle_end/flambda/flambda_iterators.ml[50,2070+8]..[50,2070+9])
              [
                <case>
                  pattern (middle_end/flambda/flambda_iterators.ml[51,2085+4]..[51,2085+6])
                    Ppat_construct "[]" (middle_end/flambda/flambda_iterators.ml[51,2085+4]..[51,2085+6])
                    None
                  expression (middle_end/flambda/flambda_iterators.ml[51,2085+10]..[51,2085+11])
                    Pexp_ident "l" (middle_end/flambda/flambda_iterators.ml[51,2085+10]..[51,2085+11])
                <case>
                  pattern (middle_end/flambda/flambda_iterators.ml[52,2097+4]..[52,2097+10])
                    Ppat_construct "::" (middle_end/flambda/flambda_iterators.ml[52,2097+6]..[52,2097+8])
                    Some
                      []
                      pattern (middle_end/flambda/flambda_iterators.ml[52,2097+4]..[52,2097+10]) ghost
                        Ppat_tuple
                        [
                          pattern (middle_end/flambda/flambda_iterators.ml[52,2097+4]..[52,2097+5])
                            Ppat_var "h" (middle_end/flambda/flambda_iterators.ml[52,2097+4]..[52,2097+5])
                          pattern (middle_end/flambda/flambda_iterators.ml[52,2097+9]..[52,2097+10])
                            Ppat_var "t" (middle_end/flambda/flambda_iterators.ml[52,2097+9]..[52,2097+10])
                        ]
                  expression (middle_end/flambda/flambda_iterators.ml[53,2111+4]..[58,2228+20])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/flambda_iterators.ml[53,2111+8]..[53,2111+13])
                          Ppat_var "new_t" (middle_end/flambda/flambda_iterators.ml[53,2111+8]..[53,2111+13])
                        expression (middle_end/flambda/flambda_iterators.ml[53,2111+16]..[53,2111+36])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_iterators.ml[53,2111+16]..[53,2111+32])
                            Pexp_ident "list_map_sharing" (middle_end/flambda/flambda_iterators.ml[53,2111+16]..[53,2111+32])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[53,2111+33]..[53,2111+34])
                                Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[53,2111+33]..[53,2111+34])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[53,2111+35]..[53,2111+36])
                                Pexp_ident "t" (middle_end/flambda/flambda_iterators.ml[53,2111+35]..[53,2111+36])
                          ]
                    ]
                    expression (middle_end/flambda/flambda_iterators.ml[54,2151+4]..[58,2228+20])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/flambda_iterators.ml[54,2151+8]..[54,2151+13])
                            Ppat_var "new_h" (middle_end/flambda/flambda_iterators.ml[54,2151+8]..[54,2151+13])
                          expression (middle_end/flambda/flambda_iterators.ml[54,2151+16]..[54,2151+19])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_iterators.ml[54,2151+16]..[54,2151+17])
                              Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[54,2151+16]..[54,2151+17])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_iterators.ml[54,2151+18]..[54,2151+19])
                                  Pexp_ident "h" (middle_end/flambda/flambda_iterators.ml[54,2151+18]..[54,2151+19])
                            ]
                      ]
                      expression (middle_end/flambda/flambda_iterators.ml[55,2174+4]..[58,2228+20])
                        Pexp_ifthenelse
                        expression (middle_end/flambda/flambda_iterators.ml[55,2174+7]..[55,2174+31])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_iterators.ml[55,2174+18]..[55,2174+20])
                            Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[55,2174+18]..[55,2174+20])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[55,2174+7]..[55,2174+17])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[55,2174+9]..[55,2174+11])
                                  Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[55,2174+9]..[55,2174+11])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[55,2174+7]..[55,2174+8])
                                      Pexp_ident "h" (middle_end/flambda/flambda_iterators.ml[55,2174+7]..[55,2174+8])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[55,2174+12]..[55,2174+17])
                                      Pexp_ident "new_h" (middle_end/flambda/flambda_iterators.ml[55,2174+12]..[55,2174+17])
                                ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[55,2174+21]..[55,2174+31])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[55,2174+23]..[55,2174+25])
                                  Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[55,2174+23]..[55,2174+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[55,2174+21]..[55,2174+22])
                                      Pexp_ident "t" (middle_end/flambda/flambda_iterators.ml[55,2174+21]..[55,2174+22])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[55,2174+26]..[55,2174+31])
                                      Pexp_ident "new_t" (middle_end/flambda/flambda_iterators.ml[55,2174+26]..[55,2174+31])
                                ]
                          ]
                        expression (middle_end/flambda/flambda_iterators.ml[56,2211+6]..[56,2211+7])
                          Pexp_ident "l" (middle_end/flambda/flambda_iterators.ml[56,2211+6]..[56,2211+7])
                        Some
                          expression (middle_end/flambda/flambda_iterators.ml[58,2228+6]..[58,2228+20])
                            Pexp_construct "::" (middle_end/flambda/flambda_iterators.ml[58,2228+12]..[58,2228+14])
                            Some
                              expression (middle_end/flambda/flambda_iterators.ml[58,2228+6]..[58,2228+20]) ghost
                                Pexp_tuple
                                [
                                  expression (middle_end/flambda/flambda_iterators.ml[58,2228+6]..[58,2228+11])
                                    Pexp_ident "new_h" (middle_end/flambda/flambda_iterators.ml[58,2228+6]..[58,2228+11])
                                  expression (middle_end/flambda/flambda_iterators.ml[58,2228+15]..[58,2228+20])
                                    Pexp_ident "new_t" (middle_end/flambda/flambda_iterators.ml[58,2228+15]..[58,2228+20])
                                ]
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[60,2250+0]..[68,2382+16])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[60,2250+4]..[60,2250+19])
          Ppat_var "may_map_sharing" (middle_end/flambda/flambda_iterators.ml[60,2250+4]..[60,2250+19])
        expression (middle_end/flambda/flambda_iterators.ml[60,2250+20]..[68,2382+16]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[60,2250+20]..[60,2250+21])
            Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[60,2250+20]..[60,2250+21])
          expression (middle_end/flambda/flambda_iterators.ml[60,2250+22]..[68,2382+16]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[60,2250+22]..[60,2250+23])
              Ppat_var "v" (middle_end/flambda/flambda_iterators.ml[60,2250+22]..[60,2250+23])
            expression (middle_end/flambda/flambda_iterators.ml[61,2276+2]..[68,2382+16])
              Pexp_match
              expression (middle_end/flambda/flambda_iterators.ml[61,2276+8]..[61,2276+9])
                Pexp_ident "v" (middle_end/flambda/flambda_iterators.ml[61,2276+8]..[61,2276+9])
              [
                <case>
                  pattern (middle_end/flambda/flambda_iterators.ml[62,2291+4]..[62,2291+8])
                    Ppat_construct "None" (middle_end/flambda/flambda_iterators.ml[62,2291+4]..[62,2291+8])
                    None
                  expression (middle_end/flambda/flambda_iterators.ml[62,2291+12]..[62,2291+13])
                    Pexp_ident "v" (middle_end/flambda/flambda_iterators.ml[62,2291+12]..[62,2291+13])
                <case>
                  pattern (middle_end/flambda/flambda_iterators.ml[63,2305+4]..[63,2305+10])
                    Ppat_construct "Some" (middle_end/flambda/flambda_iterators.ml[63,2305+4]..[63,2305+8])
                    Some
                      []
                      pattern (middle_end/flambda/flambda_iterators.ml[63,2305+9]..[63,2305+10])
                        Ppat_var "s" (middle_end/flambda/flambda_iterators.ml[63,2305+9]..[63,2305+10])
                  expression (middle_end/flambda/flambda_iterators.ml[64,2319+4]..[68,2382+16])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (middle_end/flambda/flambda_iterators.ml[64,2319+8]..[64,2319+13])
                          Ppat_var "new_s" (middle_end/flambda/flambda_iterators.ml[64,2319+8]..[64,2319+13])
                        expression (middle_end/flambda/flambda_iterators.ml[64,2319+16]..[64,2319+19])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_iterators.ml[64,2319+16]..[64,2319+17])
                            Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[64,2319+16]..[64,2319+17])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[64,2319+18]..[64,2319+19])
                                Pexp_ident "s" (middle_end/flambda/flambda_iterators.ml[64,2319+18]..[64,2319+19])
                          ]
                    ]
                    expression (middle_end/flambda/flambda_iterators.ml[65,2342+4]..[68,2382+16])
                      Pexp_ifthenelse
                      expression (middle_end/flambda/flambda_iterators.ml[65,2342+7]..[65,2342+17])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[65,2342+9]..[65,2342+11])
                          Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[65,2342+9]..[65,2342+11])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[65,2342+7]..[65,2342+8])
                              Pexp_ident "s" (middle_end/flambda/flambda_iterators.ml[65,2342+7]..[65,2342+8])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[65,2342+12]..[65,2342+17])
                              Pexp_ident "new_s" (middle_end/flambda/flambda_iterators.ml[65,2342+12]..[65,2342+17])
                        ]
                      expression (middle_end/flambda/flambda_iterators.ml[66,2365+6]..[66,2365+7])
                        Pexp_ident "v" (middle_end/flambda/flambda_iterators.ml[66,2365+6]..[66,2365+7])
                      Some
                        expression (middle_end/flambda/flambda_iterators.ml[68,2382+6]..[68,2382+16])
                          Pexp_construct "Some" (middle_end/flambda/flambda_iterators.ml[68,2382+6]..[68,2382+10])
                          Some
                            expression (middle_end/flambda/flambda_iterators.ml[68,2382+11]..[68,2382+16])
                              Pexp_ident "new_s" (middle_end/flambda/flambda_iterators.ml[68,2382+11]..[68,2382+16])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[70,2400+0]..[75,2499+14])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[70,2400+4]..[70,2400+19])
          Ppat_var "map_snd_sharing" (middle_end/flambda/flambda_iterators.ml[70,2400+4]..[70,2400+19])
        expression (middle_end/flambda/flambda_iterators.ml[70,2400+20]..[75,2499+14]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[70,2400+20]..[70,2400+21])
            Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[70,2400+20]..[70,2400+21])
          expression (middle_end/flambda/flambda_iterators.ml[70,2400+22]..[75,2499+14]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[70,2400+22]..[70,2400+37])
              Ppat_alias "cpl" (middle_end/flambda/flambda_iterators.ml[70,2400+33]..[70,2400+36])
              pattern (middle_end/flambda/flambda_iterators.ml[70,2400+23]..[70,2400+29])
                Ppat_tuple
                [
                  pattern (middle_end/flambda/flambda_iterators.ml[70,2400+24]..[70,2400+25])
                    Ppat_var "a" (middle_end/flambda/flambda_iterators.ml[70,2400+24]..[70,2400+25])
                  pattern (middle_end/flambda/flambda_iterators.ml[70,2400+27]..[70,2400+28])
                    Ppat_var "b" (middle_end/flambda/flambda_iterators.ml[70,2400+27]..[70,2400+28])
                ]
            expression (middle_end/flambda/flambda_iterators.ml[71,2440+2]..[75,2499+14])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/flambda_iterators.ml[71,2440+6]..[71,2440+11])
                    Ppat_var "new_b" (middle_end/flambda/flambda_iterators.ml[71,2440+6]..[71,2440+11])
                  expression (middle_end/flambda/flambda_iterators.ml[71,2440+14]..[71,2440+19])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_iterators.ml[71,2440+14]..[71,2440+15])
                      Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[71,2440+14]..[71,2440+15])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_iterators.ml[71,2440+16]..[71,2440+17])
                          Pexp_ident "a" (middle_end/flambda/flambda_iterators.ml[71,2440+16]..[71,2440+17])
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_iterators.ml[71,2440+18]..[71,2440+19])
                          Pexp_ident "b" (middle_end/flambda/flambda_iterators.ml[71,2440+18]..[71,2440+19])
                    ]
              ]
              expression (middle_end/flambda/flambda_iterators.ml[72,2463+2]..[75,2499+14])
                Pexp_ifthenelse
                expression (middle_end/flambda/flambda_iterators.ml[72,2463+5]..[72,2463+15])
                  Pexp_apply
                  expression (middle_end/flambda/flambda_iterators.ml[72,2463+7]..[72,2463+9])
                    Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[72,2463+7]..[72,2463+9])
                  [
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_iterators.ml[72,2463+5]..[72,2463+6])
                        Pexp_ident "b" (middle_end/flambda/flambda_iterators.ml[72,2463+5]..[72,2463+6])
                    <arg>
                    Nolabel
                      expression (middle_end/flambda/flambda_iterators.ml[72,2463+10]..[72,2463+15])
                        Pexp_ident "new_b" (middle_end/flambda/flambda_iterators.ml[72,2463+10]..[72,2463+15])
                  ]
                expression (middle_end/flambda/flambda_iterators.ml[73,2484+4]..[73,2484+7])
                  Pexp_ident "cpl" (middle_end/flambda/flambda_iterators.ml[73,2484+4]..[73,2484+7])
                Some
                  expression (middle_end/flambda/flambda_iterators.ml[75,2499+4]..[75,2499+14])
                    Pexp_tuple
                    [
                      expression (middle_end/flambda/flambda_iterators.ml[75,2499+5]..[75,2499+6])
                        Pexp_ident "a" (middle_end/flambda/flambda_iterators.ml[75,2499+5]..[75,2499+6])
                      expression (middle_end/flambda/flambda_iterators.ml[75,2499+8]..[75,2499+13])
                        Pexp_ident "new_b" (middle_end/flambda/flambda_iterators.ml[75,2499+8]..[75,2499+13])
                    ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[77,2515+0]..[161,5166+74])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[77,2515+4]..[77,2515+22])
          Ppat_var "map_subexpressions" (middle_end/flambda/flambda_iterators.ml[77,2515+4]..[77,2515+22])
        expression (middle_end/flambda/flambda_iterators.ml[77,2515+23]..[161,5166+74]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[77,2515+23]..[77,2515+24])
            Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[77,2515+23]..[77,2515+24])
          expression (middle_end/flambda/flambda_iterators.ml[77,2515+25]..[161,5166+74]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[77,2515+25]..[77,2515+32])
              Ppat_var "f_named" (middle_end/flambda/flambda_iterators.ml[77,2515+25]..[77,2515+32])
            expression (middle_end/flambda/flambda_iterators.ml[77,2515+33]..[161,5166+74]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/flambda_iterators.ml[77,2515+33]..[77,2515+49])
                Ppat_constraint
                pattern (middle_end/flambda/flambda_iterators.ml[77,2515+34]..[77,2515+38])
                  Ppat_var "tree" (middle_end/flambda/flambda_iterators.ml[77,2515+34]..[77,2515+38])
                core_type (middle_end/flambda/flambda_iterators.ml[77,2515+39]..[77,2515+48])
                  Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_iterators.ml[77,2515+39]..[77,2515+48])
                  []
              expression (middle_end/flambda/flambda_iterators.ml[77,2515+50]..[161,5166+74])
                Pexp_constraint
                expression (middle_end/flambda/flambda_iterators.ml[78,2579+2]..[161,5166+74])
                  Pexp_match
                  expression (middle_end/flambda/flambda_iterators.ml[78,2579+8]..[78,2579+12])
                    Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[78,2579+8]..[78,2579+12])
                  [
                    <case>
                      pattern (middle_end/flambda/flambda_iterators.ml[79,2597+4]..[80,2658+18])
                        Ppat_or
                        pattern (middle_end/flambda/flambda_iterators.ml[79,2597+4]..[79,2597+60])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_iterators.ml[79,2597+4]..[79,2597+39])
                            Ppat_or
                            pattern (middle_end/flambda/flambda_iterators.ml[79,2597+4]..[79,2597+30])
                              Ppat_or
                              pattern (middle_end/flambda/flambda_iterators.ml[79,2597+4]..[79,2597+19])
                                Ppat_or
                                pattern (middle_end/flambda/flambda_iterators.ml[79,2597+4]..[79,2597+9])
                                  Ppat_construct "Var" (middle_end/flambda/flambda_iterators.ml[79,2597+4]..[79,2597+7])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_iterators.ml[79,2597+8]..[79,2597+9])
                                      Ppat_any
                                pattern (middle_end/flambda/flambda_iterators.ml[79,2597+12]..[79,2597+19])
                                  Ppat_construct "Apply" (middle_end/flambda/flambda_iterators.ml[79,2597+12]..[79,2597+17])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_iterators.ml[79,2597+18]..[79,2597+19])
                                      Ppat_any
                              pattern (middle_end/flambda/flambda_iterators.ml[79,2597+22]..[79,2597+30])
                                Ppat_construct "Assign" (middle_end/flambda/flambda_iterators.ml[79,2597+22]..[79,2597+28])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[79,2597+29]..[79,2597+30])
                                    Ppat_any
                            pattern (middle_end/flambda/flambda_iterators.ml[79,2597+33]..[79,2597+39])
                              Ppat_construct "Send" (middle_end/flambda/flambda_iterators.ml[79,2597+33]..[79,2597+37])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_iterators.ml[79,2597+38]..[79,2597+39])
                                  Ppat_any
                          pattern (middle_end/flambda/flambda_iterators.ml[79,2597+42]..[79,2597+60])
                            Ppat_construct "Proved_unreachable" (middle_end/flambda/flambda_iterators.ml[79,2597+42]..[79,2597+60])
                            None
                        pattern (middle_end/flambda/flambda_iterators.ml[80,2658+4]..[80,2658+18])
                          Ppat_construct "Static_raise" (middle_end/flambda/flambda_iterators.ml[80,2658+4]..[80,2658+16])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_iterators.ml[80,2658+17]..[80,2658+18])
                              Ppat_any
                      expression (middle_end/flambda/flambda_iterators.ml[80,2658+22]..[80,2658+26])
                        Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[80,2658+22]..[80,2658+26])
                    <case>
                      pattern (middle_end/flambda/flambda_iterators.ml[81,2685+4]..[81,2685+39])
                        Ppat_construct "Let" (middle_end/flambda/flambda_iterators.ml[81,2685+4]..[81,2685+7])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_iterators.ml[81,2685+8]..[81,2685+39])
                            Ppat_record Open
                            [
                              "var" (middle_end/flambda/flambda_iterators.ml[81,2685+10]..[81,2685+13]) ghost
                                pattern (middle_end/flambda/flambda_iterators.ml[81,2685+10]..[81,2685+13])
                                  Ppat_var "var" (middle_end/flambda/flambda_iterators.ml[81,2685+10]..[81,2685+13])
                              "defining_expr" (middle_end/flambda/flambda_iterators.ml[81,2685+15]..[81,2685+28]) ghost
                                pattern (middle_end/flambda/flambda_iterators.ml[81,2685+15]..[81,2685+28])
                                  Ppat_var "defining_expr" (middle_end/flambda/flambda_iterators.ml[81,2685+15]..[81,2685+28])
                              "body" (middle_end/flambda/flambda_iterators.ml[81,2685+30]..[81,2685+34]) ghost
                                pattern (middle_end/flambda/flambda_iterators.ml[81,2685+30]..[81,2685+34])
                                  Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[81,2685+30]..[81,2685+34])
                            ]
                      expression (middle_end/flambda/flambda_iterators.ml[82,2728+4]..[87,2885+47])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/flambda_iterators.ml[82,2728+8]..[82,2728+17])
                              Ppat_var "new_named" (middle_end/flambda/flambda_iterators.ml[82,2728+8]..[82,2728+17])
                            expression (middle_end/flambda/flambda_iterators.ml[82,2728+20]..[82,2728+45])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[82,2728+20]..[82,2728+27])
                                Pexp_ident "f_named" (middle_end/flambda/flambda_iterators.ml[82,2728+20]..[82,2728+27])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[82,2728+28]..[82,2728+31])
                                    Pexp_ident "var" (middle_end/flambda/flambda_iterators.ml[82,2728+28]..[82,2728+31])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[82,2728+32]..[82,2728+45])
                                    Pexp_ident "defining_expr" (middle_end/flambda/flambda_iterators.ml[82,2728+32]..[82,2728+45])
                              ]
                        ]
                        expression (middle_end/flambda/flambda_iterators.ml[83,2777+4]..[87,2885+47])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/flambda_iterators.ml[83,2777+8]..[83,2777+16])
                                Ppat_var "new_body" (middle_end/flambda/flambda_iterators.ml[83,2777+8]..[83,2777+16])
                              expression (middle_end/flambda/flambda_iterators.ml[83,2777+19]..[83,2777+25])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[83,2777+19]..[83,2777+20])
                                  Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[83,2777+19]..[83,2777+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[83,2777+21]..[83,2777+25])
                                      Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[83,2777+21]..[83,2777+25])
                                ]
                          ]
                          expression (middle_end/flambda/flambda_iterators.ml[84,2806+4]..[87,2885+47])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/flambda_iterators.ml[84,2806+7]..[84,2806+53])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[84,2806+34]..[84,2806+36])
                                Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[84,2806+34]..[84,2806+36])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[84,2806+7]..[84,2806+33])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[84,2806+17]..[84,2806+19])
                                      Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[84,2806+17]..[84,2806+19])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[84,2806+7]..[84,2806+16])
                                          Pexp_ident "new_named" (middle_end/flambda/flambda_iterators.ml[84,2806+7]..[84,2806+16])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[84,2806+20]..[84,2806+33])
                                          Pexp_ident "defining_expr" (middle_end/flambda/flambda_iterators.ml[84,2806+20]..[84,2806+33])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[84,2806+37]..[84,2806+53])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[84,2806+46]..[84,2806+48])
                                      Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[84,2806+46]..[84,2806+48])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[84,2806+37]..[84,2806+45])
                                          Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[84,2806+37]..[84,2806+45])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[84,2806+49]..[84,2806+53])
                                          Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[84,2806+49]..[84,2806+53])
                                    ]
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[85,2865+6]..[85,2865+10])
                              Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[85,2865+6]..[85,2865+10])
                            Some
                              expression (middle_end/flambda/flambda_iterators.ml[87,2885+6]..[87,2885+47])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[87,2885+6]..[87,2885+24])
                                  Pexp_ident "Flambda.create_let" (middle_end/flambda/flambda_iterators.ml[87,2885+6]..[87,2885+24])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[87,2885+25]..[87,2885+28])
                                      Pexp_ident "var" (middle_end/flambda/flambda_iterators.ml[87,2885+25]..[87,2885+28])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[87,2885+29]..[87,2885+38])
                                      Pexp_ident "new_named" (middle_end/flambda/flambda_iterators.ml[87,2885+29]..[87,2885+38])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[87,2885+39]..[87,2885+47])
                                      Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[87,2885+39]..[87,2885+47])
                                ]
                    <case>
                      pattern (middle_end/flambda/flambda_iterators.ml[88,2933+4]..[88,2933+24])
                        Ppat_construct "Let_rec" (middle_end/flambda/flambda_iterators.ml[88,2933+4]..[88,2933+11])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_iterators.ml[88,2933+12]..[88,2933+24])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_iterators.ml[88,2933+13]..[88,2933+17])
                                Ppat_var "defs" (middle_end/flambda/flambda_iterators.ml[88,2933+13]..[88,2933+17])
                              pattern (middle_end/flambda/flambda_iterators.ml[88,2933+19]..[88,2933+23])
                                Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[88,2933+19]..[88,2933+23])
                            ]
                      expression (middle_end/flambda/flambda_iterators.ml[89,2961+4]..[96,3139+34])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/flambda_iterators.ml[89,2961+8]..[89,2961+16])
                              Ppat_var "new_defs" (middle_end/flambda/flambda_iterators.ml[89,2961+8]..[89,2961+16])
                            expression (middle_end/flambda/flambda_iterators.ml[90,2980+6]..[90,2980+53])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[90,2980+6]..[90,2980+22])
                                Pexp_ident "list_map_sharing" (middle_end/flambda/flambda_iterators.ml[90,2980+6]..[90,2980+22])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[90,2980+23]..[90,2980+48])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[90,2980+24]..[90,2980+39])
                                      Pexp_ident "map_snd_sharing" (middle_end/flambda/flambda_iterators.ml[90,2980+24]..[90,2980+39])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[90,2980+40]..[90,2980+47])
                                          Pexp_ident "f_named" (middle_end/flambda/flambda_iterators.ml[90,2980+40]..[90,2980+47])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[90,2980+49]..[90,2980+53])
                                    Pexp_ident "defs" (middle_end/flambda/flambda_iterators.ml[90,2980+49]..[90,2980+53])
                              ]
                        ]
                        expression (middle_end/flambda/flambda_iterators.ml[92,3041+4]..[96,3139+34])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/flambda_iterators.ml[92,3041+8]..[92,3041+16])
                                Ppat_var "new_body" (middle_end/flambda/flambda_iterators.ml[92,3041+8]..[92,3041+16])
                              expression (middle_end/flambda/flambda_iterators.ml[92,3041+19]..[92,3041+25])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[92,3041+19]..[92,3041+20])
                                  Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[92,3041+19]..[92,3041+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[92,3041+21]..[92,3041+25])
                                      Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[92,3041+21]..[92,3041+25])
                                ]
                          ]
                          expression (middle_end/flambda/flambda_iterators.ml[93,3070+4]..[96,3139+34])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/flambda_iterators.ml[93,3070+7]..[93,3070+43])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[93,3070+24]..[93,3070+26])
                                Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[93,3070+24]..[93,3070+26])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[93,3070+7]..[93,3070+23])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[93,3070+16]..[93,3070+18])
                                      Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[93,3070+16]..[93,3070+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[93,3070+7]..[93,3070+15])
                                          Pexp_ident "new_defs" (middle_end/flambda/flambda_iterators.ml[93,3070+7]..[93,3070+15])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[93,3070+19]..[93,3070+23])
                                          Pexp_ident "defs" (middle_end/flambda/flambda_iterators.ml[93,3070+19]..[93,3070+23])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[93,3070+27]..[93,3070+43])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[93,3070+36]..[93,3070+38])
                                      Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[93,3070+36]..[93,3070+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[93,3070+27]..[93,3070+35])
                                          Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[93,3070+27]..[93,3070+35])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[93,3070+39]..[93,3070+43])
                                          Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[93,3070+39]..[93,3070+43])
                                    ]
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[94,3119+6]..[94,3119+10])
                              Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[94,3119+6]..[94,3119+10])
                            Some
                              expression (middle_end/flambda/flambda_iterators.ml[96,3139+6]..[96,3139+34])
                                Pexp_construct "Let_rec" (middle_end/flambda/flambda_iterators.ml[96,3139+6]..[96,3139+13])
                                Some
                                  expression (middle_end/flambda/flambda_iterators.ml[96,3139+14]..[96,3139+34])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/flambda_iterators.ml[96,3139+15]..[96,3139+23])
                                        Pexp_ident "new_defs" (middle_end/flambda/flambda_iterators.ml[96,3139+15]..[96,3139+23])
                                      expression (middle_end/flambda/flambda_iterators.ml[96,3139+25]..[96,3139+33])
                                        Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[96,3139+25]..[96,3139+33])
                                    ]
                    <case>
                      pattern (middle_end/flambda/flambda_iterators.ml[97,3174+4]..[97,3174+27])
                        Ppat_construct "Let_mutable" (middle_end/flambda/flambda_iterators.ml[97,3174+4]..[97,3174+15])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_iterators.ml[97,3174+16]..[97,3174+27])
                            Ppat_var "mutable_let" (middle_end/flambda/flambda_iterators.ml[97,3174+16]..[97,3174+27])
                      expression (middle_end/flambda/flambda_iterators.ml[98,3205+4]..[102,3307+54])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/flambda_iterators.ml[98,3205+8]..[98,3205+16])
                              Ppat_var "new_body" (middle_end/flambda/flambda_iterators.ml[98,3205+8]..[98,3205+16])
                            expression (middle_end/flambda/flambda_iterators.ml[98,3205+19]..[98,3205+37])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[98,3205+19]..[98,3205+20])
                                Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[98,3205+19]..[98,3205+20])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[98,3205+21]..[98,3205+37])
                                    Pexp_field
                                    expression (middle_end/flambda/flambda_iterators.ml[98,3205+21]..[98,3205+32])
                                      Pexp_ident "mutable_let" (middle_end/flambda/flambda_iterators.ml[98,3205+21]..[98,3205+32])
                                    "body" (middle_end/flambda/flambda_iterators.ml[98,3205+33]..[98,3205+37])
                              ]
                        ]
                        expression (middle_end/flambda/flambda_iterators.ml[99,3246+4]..[102,3307+54])
                          Pexp_ifthenelse
                          expression (middle_end/flambda/flambda_iterators.ml[99,3246+7]..[99,3246+35])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_iterators.ml[99,3246+16]..[99,3246+18])
                              Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[99,3246+16]..[99,3246+18])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_iterators.ml[99,3246+7]..[99,3246+15])
                                  Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[99,3246+7]..[99,3246+15])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_iterators.ml[99,3246+19]..[99,3246+35])
                                  Pexp_field
                                  expression (middle_end/flambda/flambda_iterators.ml[99,3246+19]..[99,3246+30])
                                    Pexp_ident "mutable_let" (middle_end/flambda/flambda_iterators.ml[99,3246+19]..[99,3246+30])
                                  "body" (middle_end/flambda/flambda_iterators.ml[99,3246+31]..[99,3246+35])
                            ]
                          expression (middle_end/flambda/flambda_iterators.ml[100,3287+6]..[100,3287+10])
                            Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[100,3287+6]..[100,3287+10])
                          Some
                            expression (middle_end/flambda/flambda_iterators.ml[102,3307+6]..[102,3307+54])
                              Pexp_construct "Let_mutable" (middle_end/flambda/flambda_iterators.ml[102,3307+6]..[102,3307+17])
                              Some
                                expression (middle_end/flambda/flambda_iterators.ml[102,3307+18]..[102,3307+54])
                                  Pexp_record
                                  [
                                    "body" (middle_end/flambda/flambda_iterators.ml[102,3307+37]..[102,3307+41])
                                      expression (middle_end/flambda/flambda_iterators.ml[102,3307+44]..[102,3307+52])
                                        Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[102,3307+44]..[102,3307+52])
                                  ]
                                  Some
                                    expression (middle_end/flambda/flambda_iterators.ml[102,3307+20]..[102,3307+31])
                                      Pexp_ident "mutable_let" (middle_end/flambda/flambda_iterators.ml[102,3307+20]..[102,3307+31])
                    <case>
                      pattern (middle_end/flambda/flambda_iterators.ml[103,3362+4]..[103,3362+20])
                        Ppat_construct "Switch" (middle_end/flambda/flambda_iterators.ml[103,3362+4]..[103,3362+10])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_iterators.ml[103,3362+11]..[103,3362+20])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_iterators.ml[103,3362+12]..[103,3362+15])
                                Ppat_var "arg" (middle_end/flambda/flambda_iterators.ml[103,3362+12]..[103,3362+15])
                              pattern (middle_end/flambda/flambda_iterators.ml[103,3362+17]..[103,3362+19])
                                Ppat_var "sw" (middle_end/flambda/flambda_iterators.ml[103,3362+17]..[103,3362+19])
                            ]
                      expression (middle_end/flambda/flambda_iterators.ml[104,3386+4]..[120,3891+22])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/flambda_iterators.ml[104,3386+8]..[104,3386+11])
                              Ppat_var "aux" (middle_end/flambda/flambda_iterators.ml[104,3386+8]..[104,3386+11])
                            expression (middle_end/flambda/flambda_iterators.ml[104,3386+14]..[104,3386+46])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[104,3386+14]..[104,3386+29])
                                Pexp_ident "map_snd_sharing" (middle_end/flambda/flambda_iterators.ml[104,3386+14]..[104,3386+29])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[104,3386+30]..[104,3386+46])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/flambda_iterators.ml[104,3386+35]..[104,3386+36])
                                      Ppat_any
                                    expression (middle_end/flambda/flambda_iterators.ml[104,3386+37]..[104,3386+45]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/flambda_iterators.ml[104,3386+37]..[104,3386+38])
                                        Ppat_var "v" (middle_end/flambda/flambda_iterators.ml[104,3386+37]..[104,3386+38])
                                      expression (middle_end/flambda/flambda_iterators.ml[104,3386+42]..[104,3386+45])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[104,3386+42]..[104,3386+43])
                                          Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[104,3386+42]..[104,3386+43])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[104,3386+44]..[104,3386+45])
                                              Pexp_ident "v" (middle_end/flambda/flambda_iterators.ml[104,3386+44]..[104,3386+45])
                                        ]
                              ]
                        ]
                        expression (middle_end/flambda/flambda_iterators.ml[105,3436+4]..[120,3891+22])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/flambda_iterators.ml[105,3436+8]..[105,3436+18])
                                Ppat_var "new_consts" (middle_end/flambda/flambda_iterators.ml[105,3436+8]..[105,3436+18])
                              expression (middle_end/flambda/flambda_iterators.ml[105,3436+21]..[105,3436+51])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[105,3436+21]..[105,3436+37])
                                  Pexp_ident "list_map_sharing" (middle_end/flambda/flambda_iterators.ml[105,3436+21]..[105,3436+37])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[105,3436+38]..[105,3436+41])
                                      Pexp_ident "aux" (middle_end/flambda/flambda_iterators.ml[105,3436+38]..[105,3436+41])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[105,3436+42]..[105,3436+51])
                                      Pexp_field
                                      expression (middle_end/flambda/flambda_iterators.ml[105,3436+42]..[105,3436+44])
                                        Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[105,3436+42]..[105,3436+44])
                                      "consts" (middle_end/flambda/flambda_iterators.ml[105,3436+45]..[105,3436+51])
                                ]
                          ]
                          expression (middle_end/flambda/flambda_iterators.ml[106,3491+4]..[120,3891+22])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/flambda_iterators.ml[106,3491+8]..[106,3491+18])
                                  Ppat_var "new_blocks" (middle_end/flambda/flambda_iterators.ml[106,3491+8]..[106,3491+18])
                                expression (middle_end/flambda/flambda_iterators.ml[106,3491+21]..[106,3491+51])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_iterators.ml[106,3491+21]..[106,3491+37])
                                    Pexp_ident "list_map_sharing" (middle_end/flambda/flambda_iterators.ml[106,3491+21]..[106,3491+37])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[106,3491+38]..[106,3491+41])
                                        Pexp_ident "aux" (middle_end/flambda/flambda_iterators.ml[106,3491+38]..[106,3491+41])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[106,3491+42]..[106,3491+51])
                                        Pexp_field
                                        expression (middle_end/flambda/flambda_iterators.ml[106,3491+42]..[106,3491+44])
                                          Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[106,3491+42]..[106,3491+44])
                                        "blocks" (middle_end/flambda/flambda_iterators.ml[106,3491+45]..[106,3491+51])
                                  ]
                            ]
                            expression (middle_end/flambda/flambda_iterators.ml[107,3546+4]..[120,3891+22])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/flambda_iterators.ml[107,3546+8]..[107,3546+22])
                                    Ppat_var "new_failaction" (middle_end/flambda/flambda_iterators.ml[107,3546+8]..[107,3546+22])
                                  expression (middle_end/flambda/flambda_iterators.ml[107,3546+25]..[107,3546+56])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[107,3546+25]..[107,3546+40])
                                      Pexp_ident "may_map_sharing" (middle_end/flambda/flambda_iterators.ml[107,3546+25]..[107,3546+40])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[107,3546+41]..[107,3546+42])
                                          Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[107,3546+41]..[107,3546+42])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[107,3546+43]..[107,3546+56])
                                          Pexp_field
                                          expression (middle_end/flambda/flambda_iterators.ml[107,3546+43]..[107,3546+45])
                                            Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[107,3546+43]..[107,3546+45])
                                          "failaction" (middle_end/flambda/flambda_iterators.ml[107,3546+46]..[107,3546+56])
                                    ]
                              ]
                              expression (middle_end/flambda/flambda_iterators.ml[108,3606+4]..[120,3891+22])
                                Pexp_ifthenelse
                                expression (middle_end/flambda/flambda_iterators.ml[108,3606+7]..[110,3682+30])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_iterators.ml[108,3606+39]..[108,3606+41])
                                    Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[108,3606+39]..[108,3606+41])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[108,3606+7]..[108,3606+38])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[108,3606+21]..[108,3606+23])
                                          Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[108,3606+21]..[108,3606+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[108,3606+7]..[108,3606+20])
                                              Pexp_field
                                              expression (middle_end/flambda/flambda_iterators.ml[108,3606+7]..[108,3606+9])
                                                Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[108,3606+7]..[108,3606+9])
                                              "failaction" (middle_end/flambda/flambda_iterators.ml[108,3606+10]..[108,3606+20])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[108,3606+24]..[108,3606+38])
                                              Pexp_ident "new_failaction" (middle_end/flambda/flambda_iterators.ml[108,3606+24]..[108,3606+38])
                                        ]
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[109,3648+7]..[110,3682+30])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[109,3648+31]..[109,3648+33])
                                          Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[109,3648+31]..[109,3648+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[109,3648+7]..[109,3648+30])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_iterators.ml[109,3648+18]..[109,3648+20])
                                                Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[109,3648+18]..[109,3648+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[109,3648+7]..[109,3648+17])
                                                    Pexp_ident "new_consts" (middle_end/flambda/flambda_iterators.ml[109,3648+7]..[109,3648+17])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[109,3648+21]..[109,3648+30])
                                                    Pexp_field
                                                    expression (middle_end/flambda/flambda_iterators.ml[109,3648+21]..[109,3648+23])
                                                      Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[109,3648+21]..[109,3648+23])
                                                    "consts" (middle_end/flambda/flambda_iterators.ml[109,3648+24]..[109,3648+30])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[110,3682+7]..[110,3682+30])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_iterators.ml[110,3682+18]..[110,3682+20])
                                                Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[110,3682+18]..[110,3682+20])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[110,3682+7]..[110,3682+17])
                                                    Pexp_ident "new_blocks" (middle_end/flambda/flambda_iterators.ml[110,3682+7]..[110,3682+17])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[110,3682+21]..[110,3682+30])
                                                    Pexp_field
                                                    expression (middle_end/flambda/flambda_iterators.ml[110,3682+21]..[110,3682+23])
                                                      Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[110,3682+21]..[110,3682+23])
                                                    "blocks" (middle_end/flambda/flambda_iterators.ml[110,3682+24]..[110,3682+30])
                                              ]
                                        ]
                                  ]
                                expression (middle_end/flambda/flambda_iterators.ml[111,3718+6]..[111,3718+10])
                                  Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[111,3718+6]..[111,3718+10])
                                Some
                                  expression (middle_end/flambda/flambda_iterators.ml[113,3738+6]..[120,3891+22])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_iterators.ml[113,3738+10]..[113,3738+12])
                                          Ppat_var "sw" (middle_end/flambda/flambda_iterators.ml[113,3738+10]..[113,3738+12])
                                        expression (middle_end/flambda/flambda_iterators.ml[114,3753+8]..[118,3872+9])
                                          Pexp_record
                                          [
                                            "failaction" (middle_end/flambda/flambda_iterators.ml[115,3771+10]..[115,3771+20])
                                              expression (middle_end/flambda/flambda_iterators.ml[115,3771+23]..[115,3771+37])
                                                Pexp_ident "new_failaction" (middle_end/flambda/flambda_iterators.ml[115,3771+23]..[115,3771+37])
                                            "consts" (middle_end/flambda/flambda_iterators.ml[116,3810+10]..[116,3810+16])
                                              expression (middle_end/flambda/flambda_iterators.ml[116,3810+19]..[116,3810+29])
                                                Pexp_ident "new_consts" (middle_end/flambda/flambda_iterators.ml[116,3810+19]..[116,3810+29])
                                            "blocks" (middle_end/flambda/flambda_iterators.ml[117,3841+10]..[117,3841+16])
                                              expression (middle_end/flambda/flambda_iterators.ml[117,3841+19]..[117,3841+29])
                                                Pexp_ident "new_blocks" (middle_end/flambda/flambda_iterators.ml[117,3841+19]..[117,3841+29])
                                          ]
                                          Some
                                            expression (middle_end/flambda/flambda_iterators.ml[114,3753+10]..[114,3753+12])
                                              Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[114,3753+10]..[114,3753+12])
                                    ]
                                    expression (middle_end/flambda/flambda_iterators.ml[120,3891+6]..[120,3891+22])
                                      Pexp_construct "Switch" (middle_end/flambda/flambda_iterators.ml[120,3891+6]..[120,3891+12])
                                      Some
                                        expression (middle_end/flambda/flambda_iterators.ml[120,3891+13]..[120,3891+22])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/flambda_iterators.ml[120,3891+14]..[120,3891+17])
                                              Pexp_ident "arg" (middle_end/flambda/flambda_iterators.ml[120,3891+14]..[120,3891+17])
                                            expression (middle_end/flambda/flambda_iterators.ml[120,3891+19]..[120,3891+21])
                                              Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[120,3891+19]..[120,3891+21])
                                          ]
                    <case>
                      pattern (middle_end/flambda/flambda_iterators.ml[121,3914+4]..[121,3914+32])
                        Ppat_construct "String_switch" (middle_end/flambda/flambda_iterators.ml[121,3914+4]..[121,3914+17])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_iterators.ml[121,3914+18]..[121,3914+32])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_iterators.ml[121,3914+19]..[121,3914+22])
                                Ppat_var "arg" (middle_end/flambda/flambda_iterators.ml[121,3914+19]..[121,3914+22])
                              pattern (middle_end/flambda/flambda_iterators.ml[121,3914+24]..[121,3914+26])
                                Ppat_var "sw" (middle_end/flambda/flambda_iterators.ml[121,3914+24]..[121,3914+26])
                              pattern (middle_end/flambda/flambda_iterators.ml[121,3914+28]..[121,3914+31])
                                Ppat_var "def" (middle_end/flambda/flambda_iterators.ml[121,3914+28]..[121,3914+31])
                            ]
                      expression (middle_end/flambda/flambda_iterators.ml[122,3950+4]..[127,4131+41])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/flambda_iterators.ml[122,3950+8]..[122,3950+14])
                              Ppat_var "new_sw" (middle_end/flambda/flambda_iterators.ml[122,3950+8]..[122,3950+14])
                            expression (middle_end/flambda/flambda_iterators.ml[122,3950+17]..[122,3950+71])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[122,3950+17]..[122,3950+33])
                                Pexp_ident "list_map_sharing" (middle_end/flambda/flambda_iterators.ml[122,3950+17]..[122,3950+33])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[122,3950+34]..[122,3950+68])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[122,3950+35]..[122,3950+50])
                                      Pexp_ident "map_snd_sharing" (middle_end/flambda/flambda_iterators.ml[122,3950+35]..[122,3950+50])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[122,3950+51]..[122,3950+67])
                                          Pexp_fun
                                          Nolabel
                                          None
                                          pattern (middle_end/flambda/flambda_iterators.ml[122,3950+56]..[122,3950+57])
                                            Ppat_any
                                          expression (middle_end/flambda/flambda_iterators.ml[122,3950+58]..[122,3950+66]) ghost
                                            Pexp_fun
                                            Nolabel
                                            None
                                            pattern (middle_end/flambda/flambda_iterators.ml[122,3950+58]..[122,3950+59])
                                              Ppat_var "v" (middle_end/flambda/flambda_iterators.ml[122,3950+58]..[122,3950+59])
                                            expression (middle_end/flambda/flambda_iterators.ml[122,3950+63]..[122,3950+66])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_iterators.ml[122,3950+63]..[122,3950+64])
                                                Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[122,3950+63]..[122,3950+64])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[122,3950+65]..[122,3950+66])
                                                    Pexp_ident "v" (middle_end/flambda/flambda_iterators.ml[122,3950+65]..[122,3950+66])
                                              ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[122,3950+69]..[122,3950+71])
                                    Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[122,3950+69]..[122,3950+71])
                              ]
                        ]
                        expression (middle_end/flambda/flambda_iterators.ml[123,4025+4]..[127,4131+41])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/flambda_iterators.ml[123,4025+8]..[123,4025+15])
                                Ppat_var "new_def" (middle_end/flambda/flambda_iterators.ml[123,4025+8]..[123,4025+15])
                              expression (middle_end/flambda/flambda_iterators.ml[123,4025+18]..[123,4025+39])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[123,4025+18]..[123,4025+33])
                                  Pexp_ident "may_map_sharing" (middle_end/flambda/flambda_iterators.ml[123,4025+18]..[123,4025+33])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[123,4025+34]..[123,4025+35])
                                      Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[123,4025+34]..[123,4025+35])
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[123,4025+36]..[123,4025+39])
                                      Pexp_ident "def" (middle_end/flambda/flambda_iterators.ml[123,4025+36]..[123,4025+39])
                                ]
                          ]
                          expression (middle_end/flambda/flambda_iterators.ml[124,4068+4]..[127,4131+41])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/flambda_iterators.ml[124,4068+7]..[124,4068+37])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[124,4068+20]..[124,4068+22])
                                Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[124,4068+20]..[124,4068+22])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[124,4068+7]..[124,4068+19])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[124,4068+10]..[124,4068+12])
                                      Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[124,4068+10]..[124,4068+12])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[124,4068+7]..[124,4068+9])
                                          Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[124,4068+7]..[124,4068+9])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[124,4068+13]..[124,4068+19])
                                          Pexp_ident "new_sw" (middle_end/flambda/flambda_iterators.ml[124,4068+13]..[124,4068+19])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[124,4068+23]..[124,4068+37])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[124,4068+27]..[124,4068+29])
                                      Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[124,4068+27]..[124,4068+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[124,4068+23]..[124,4068+26])
                                          Pexp_ident "def" (middle_end/flambda/flambda_iterators.ml[124,4068+23]..[124,4068+26])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[124,4068+30]..[124,4068+37])
                                          Pexp_ident "new_def" (middle_end/flambda/flambda_iterators.ml[124,4068+30]..[124,4068+37])
                                    ]
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[125,4111+6]..[125,4111+10])
                              Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[125,4111+6]..[125,4111+10])
                            Some
                              expression (middle_end/flambda/flambda_iterators.ml[127,4131+6]..[127,4131+41])
                                Pexp_construct "String_switch" (middle_end/flambda/flambda_iterators.ml[127,4131+6]..[127,4131+19])
                                Some
                                  expression (middle_end/flambda/flambda_iterators.ml[127,4131+19]..[127,4131+41])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/flambda_iterators.ml[127,4131+20]..[127,4131+23])
                                        Pexp_ident "arg" (middle_end/flambda/flambda_iterators.ml[127,4131+20]..[127,4131+23])
                                      expression (middle_end/flambda/flambda_iterators.ml[127,4131+25]..[127,4131+31])
                                        Pexp_ident "new_sw" (middle_end/flambda/flambda_iterators.ml[127,4131+25]..[127,4131+31])
                                      expression (middle_end/flambda/flambda_iterators.ml[127,4131+33]..[127,4131+40])
                                        Pexp_ident "new_def" (middle_end/flambda/flambda_iterators.ml[127,4131+33]..[127,4131+40])
                                    ]
                    <case>
                      pattern (middle_end/flambda/flambda_iterators.ml[128,4173+4]..[128,4173+41])
                        Ppat_construct "Static_catch" (middle_end/flambda/flambda_iterators.ml[128,4173+4]..[128,4173+16])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_iterators.ml[128,4173+17]..[128,4173+41])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_iterators.ml[128,4173+18]..[128,4173+19])
                                Ppat_var "i" (middle_end/flambda/flambda_iterators.ml[128,4173+18]..[128,4173+19])
                              pattern (middle_end/flambda/flambda_iterators.ml[128,4173+21]..[128,4173+25])
                                Ppat_var "vars" (middle_end/flambda/flambda_iterators.ml[128,4173+21]..[128,4173+25])
                              pattern (middle_end/flambda/flambda_iterators.ml[128,4173+27]..[128,4173+31])
                                Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[128,4173+27]..[128,4173+31])
                              pattern (middle_end/flambda/flambda_iterators.ml[128,4173+33]..[128,4173+40])
                                Ppat_var "handler" (middle_end/flambda/flambda_iterators.ml[128,4173+33]..[128,4173+40])
                            ]
                      expression (middle_end/flambda/flambda_iterators.ml[129,4218+4]..[134,4357+51])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/flambda_iterators.ml[129,4218+8]..[129,4218+16])
                              Ppat_var "new_body" (middle_end/flambda/flambda_iterators.ml[129,4218+8]..[129,4218+16])
                            expression (middle_end/flambda/flambda_iterators.ml[129,4218+19]..[129,4218+25])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[129,4218+19]..[129,4218+20])
                                Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[129,4218+19]..[129,4218+20])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[129,4218+21]..[129,4218+25])
                                    Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[129,4218+21]..[129,4218+25])
                              ]
                        ]
                        expression (middle_end/flambda/flambda_iterators.ml[130,4247+4]..[134,4357+51])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/flambda_iterators.ml[130,4247+8]..[130,4247+19])
                                Ppat_var "new_handler" (middle_end/flambda/flambda_iterators.ml[130,4247+8]..[130,4247+19])
                              expression (middle_end/flambda/flambda_iterators.ml[130,4247+22]..[130,4247+31])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[130,4247+22]..[130,4247+23])
                                  Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[130,4247+22]..[130,4247+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[130,4247+24]..[130,4247+31])
                                      Pexp_ident "handler" (middle_end/flambda/flambda_iterators.ml[130,4247+24]..[130,4247+31])
                                ]
                          ]
                          expression (middle_end/flambda/flambda_iterators.ml[131,4282+4]..[134,4357+51])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/flambda_iterators.ml[131,4282+7]..[131,4282+49])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[131,4282+24]..[131,4282+26])
                                Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[131,4282+24]..[131,4282+26])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[131,4282+7]..[131,4282+23])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[131,4282+16]..[131,4282+18])
                                      Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[131,4282+16]..[131,4282+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[131,4282+7]..[131,4282+15])
                                          Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[131,4282+7]..[131,4282+15])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[131,4282+19]..[131,4282+23])
                                          Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[131,4282+19]..[131,4282+23])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[131,4282+27]..[131,4282+49])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[131,4282+39]..[131,4282+41])
                                      Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[131,4282+39]..[131,4282+41])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[131,4282+27]..[131,4282+38])
                                          Pexp_ident "new_handler" (middle_end/flambda/flambda_iterators.ml[131,4282+27]..[131,4282+38])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[131,4282+42]..[131,4282+49])
                                          Pexp_ident "handler" (middle_end/flambda/flambda_iterators.ml[131,4282+42]..[131,4282+49])
                                    ]
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[132,4337+6]..[132,4337+10])
                              Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[132,4337+6]..[132,4337+10])
                            Some
                              expression (middle_end/flambda/flambda_iterators.ml[134,4357+6]..[134,4357+51])
                                Pexp_construct "Static_catch" (middle_end/flambda/flambda_iterators.ml[134,4357+6]..[134,4357+18])
                                Some
                                  expression (middle_end/flambda/flambda_iterators.ml[134,4357+19]..[134,4357+51])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/flambda_iterators.ml[134,4357+20]..[134,4357+21])
                                        Pexp_ident "i" (middle_end/flambda/flambda_iterators.ml[134,4357+20]..[134,4357+21])
                                      expression (middle_end/flambda/flambda_iterators.ml[134,4357+23]..[134,4357+27])
                                        Pexp_ident "vars" (middle_end/flambda/flambda_iterators.ml[134,4357+23]..[134,4357+27])
                                      expression (middle_end/flambda/flambda_iterators.ml[134,4357+29]..[134,4357+37])
                                        Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[134,4357+29]..[134,4357+37])
                                      expression (middle_end/flambda/flambda_iterators.ml[134,4357+39]..[134,4357+50])
                                        Pexp_ident "new_handler" (middle_end/flambda/flambda_iterators.ml[134,4357+39]..[134,4357+50])
                                    ]
                    <case>
                      pattern (middle_end/flambda/flambda_iterators.ml[135,4409+4]..[135,4409+31])
                        Ppat_construct "Try_with" (middle_end/flambda/flambda_iterators.ml[135,4409+4]..[135,4409+12])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_iterators.ml[135,4409+12]..[135,4409+31])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_iterators.ml[135,4409+13]..[135,4409+17])
                                Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[135,4409+13]..[135,4409+17])
                              pattern (middle_end/flambda/flambda_iterators.ml[135,4409+19]..[135,4409+21])
                                Ppat_var "id" (middle_end/flambda/flambda_iterators.ml[135,4409+19]..[135,4409+21])
                              pattern (middle_end/flambda/flambda_iterators.ml[135,4409+23]..[135,4409+30])
                                Ppat_var "handler" (middle_end/flambda/flambda_iterators.ml[135,4409+23]..[135,4409+30])
                            ]
                      expression (middle_end/flambda/flambda_iterators.ml[136,4444+4]..[141,4583+41])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/flambda_iterators.ml[136,4444+8]..[136,4444+16])
                              Ppat_var "new_body" (middle_end/flambda/flambda_iterators.ml[136,4444+8]..[136,4444+16])
                            expression (middle_end/flambda/flambda_iterators.ml[136,4444+19]..[136,4444+25])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[136,4444+19]..[136,4444+20])
                                Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[136,4444+19]..[136,4444+20])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[136,4444+21]..[136,4444+25])
                                    Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[136,4444+21]..[136,4444+25])
                              ]
                        ]
                        expression (middle_end/flambda/flambda_iterators.ml[137,4473+4]..[141,4583+41])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/flambda_iterators.ml[137,4473+8]..[137,4473+19])
                                Ppat_var "new_handler" (middle_end/flambda/flambda_iterators.ml[137,4473+8]..[137,4473+19])
                              expression (middle_end/flambda/flambda_iterators.ml[137,4473+22]..[137,4473+31])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[137,4473+22]..[137,4473+23])
                                  Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[137,4473+22]..[137,4473+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[137,4473+24]..[137,4473+31])
                                      Pexp_ident "handler" (middle_end/flambda/flambda_iterators.ml[137,4473+24]..[137,4473+31])
                                ]
                          ]
                          expression (middle_end/flambda/flambda_iterators.ml[138,4508+4]..[141,4583+41])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/flambda_iterators.ml[138,4508+7]..[138,4508+49])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[138,4508+24]..[138,4508+26])
                                Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[138,4508+24]..[138,4508+26])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[138,4508+7]..[138,4508+23])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[138,4508+12]..[138,4508+14])
                                      Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[138,4508+12]..[138,4508+14])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[138,4508+7]..[138,4508+11])
                                          Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[138,4508+7]..[138,4508+11])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[138,4508+15]..[138,4508+23])
                                          Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[138,4508+15]..[138,4508+23])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[138,4508+27]..[138,4508+49])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[138,4508+35]..[138,4508+37])
                                      Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[138,4508+35]..[138,4508+37])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[138,4508+27]..[138,4508+34])
                                          Pexp_ident "handler" (middle_end/flambda/flambda_iterators.ml[138,4508+27]..[138,4508+34])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[138,4508+38]..[138,4508+49])
                                          Pexp_ident "new_handler" (middle_end/flambda/flambda_iterators.ml[138,4508+38]..[138,4508+49])
                                    ]
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[139,4563+6]..[139,4563+10])
                              Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[139,4563+6]..[139,4563+10])
                            Some
                              expression (middle_end/flambda/flambda_iterators.ml[141,4583+6]..[141,4583+41])
                                Pexp_construct "Try_with" (middle_end/flambda/flambda_iterators.ml[141,4583+6]..[141,4583+14])
                                Some
                                  expression (middle_end/flambda/flambda_iterators.ml[141,4583+14]..[141,4583+41])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/flambda_iterators.ml[141,4583+15]..[141,4583+23])
                                        Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[141,4583+15]..[141,4583+23])
                                      expression (middle_end/flambda/flambda_iterators.ml[141,4583+25]..[141,4583+27])
                                        Pexp_ident "id" (middle_end/flambda/flambda_iterators.ml[141,4583+25]..[141,4583+27])
                                      expression (middle_end/flambda/flambda_iterators.ml[141,4583+29]..[141,4583+40])
                                        Pexp_ident "new_handler" (middle_end/flambda/flambda_iterators.ml[141,4583+29]..[141,4583+40])
                                    ]
                    <case>
                      pattern (middle_end/flambda/flambda_iterators.ml[142,4625+4]..[142,4625+34])
                        Ppat_construct "If_then_else" (middle_end/flambda/flambda_iterators.ml[142,4625+4]..[142,4625+16])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_iterators.ml[142,4625+16]..[142,4625+34])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_iterators.ml[142,4625+17]..[142,4625+20])
                                Ppat_var "arg" (middle_end/flambda/flambda_iterators.ml[142,4625+17]..[142,4625+20])
                              pattern (middle_end/flambda/flambda_iterators.ml[142,4625+22]..[142,4625+26])
                                Ppat_var "ifso" (middle_end/flambda/flambda_iterators.ml[142,4625+22]..[142,4625+26])
                              pattern (middle_end/flambda/flambda_iterators.ml[142,4625+28]..[142,4625+33])
                                Ppat_var "ifnot" (middle_end/flambda/flambda_iterators.ml[142,4625+28]..[142,4625+33])
                            ]
                      expression (middle_end/flambda/flambda_iterators.ml[143,4663+4]..[148,4794+44])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/flambda_iterators.ml[143,4663+8]..[143,4663+16])
                              Ppat_var "new_ifso" (middle_end/flambda/flambda_iterators.ml[143,4663+8]..[143,4663+16])
                            expression (middle_end/flambda/flambda_iterators.ml[143,4663+19]..[143,4663+25])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[143,4663+19]..[143,4663+20])
                                Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[143,4663+19]..[143,4663+20])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[143,4663+21]..[143,4663+25])
                                    Pexp_ident "ifso" (middle_end/flambda/flambda_iterators.ml[143,4663+21]..[143,4663+25])
                              ]
                        ]
                        expression (middle_end/flambda/flambda_iterators.ml[144,4692+4]..[148,4794+44])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/flambda_iterators.ml[144,4692+8]..[144,4692+17])
                                Ppat_var "new_ifnot" (middle_end/flambda/flambda_iterators.ml[144,4692+8]..[144,4692+17])
                              expression (middle_end/flambda/flambda_iterators.ml[144,4692+20]..[144,4692+27])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[144,4692+20]..[144,4692+21])
                                  Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[144,4692+20]..[144,4692+21])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[144,4692+22]..[144,4692+27])
                                      Pexp_ident "ifnot" (middle_end/flambda/flambda_iterators.ml[144,4692+22]..[144,4692+27])
                                ]
                          ]
                          expression (middle_end/flambda/flambda_iterators.ml[145,4723+4]..[148,4794+44])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/flambda_iterators.ml[145,4723+7]..[145,4723+45])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[145,4723+24]..[145,4723+26])
                                Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[145,4723+24]..[145,4723+26])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[145,4723+7]..[145,4723+23])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[145,4723+16]..[145,4723+18])
                                      Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[145,4723+16]..[145,4723+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[145,4723+7]..[145,4723+15])
                                          Pexp_ident "new_ifso" (middle_end/flambda/flambda_iterators.ml[145,4723+7]..[145,4723+15])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[145,4723+19]..[145,4723+23])
                                          Pexp_ident "ifso" (middle_end/flambda/flambda_iterators.ml[145,4723+19]..[145,4723+23])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[145,4723+27]..[145,4723+45])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[145,4723+37]..[145,4723+39])
                                      Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[145,4723+37]..[145,4723+39])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[145,4723+27]..[145,4723+36])
                                          Pexp_ident "new_ifnot" (middle_end/flambda/flambda_iterators.ml[145,4723+27]..[145,4723+36])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[145,4723+40]..[145,4723+45])
                                          Pexp_ident "ifnot" (middle_end/flambda/flambda_iterators.ml[145,4723+40]..[145,4723+45])
                                    ]
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[146,4774+6]..[146,4774+10])
                              Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[146,4774+6]..[146,4774+10])
                            Some
                              expression (middle_end/flambda/flambda_iterators.ml[148,4794+6]..[148,4794+44])
                                Pexp_construct "If_then_else" (middle_end/flambda/flambda_iterators.ml[148,4794+6]..[148,4794+18])
                                Some
                                  expression (middle_end/flambda/flambda_iterators.ml[148,4794+18]..[148,4794+44])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/flambda_iterators.ml[148,4794+19]..[148,4794+22])
                                        Pexp_ident "arg" (middle_end/flambda/flambda_iterators.ml[148,4794+19]..[148,4794+22])
                                      expression (middle_end/flambda/flambda_iterators.ml[148,4794+24]..[148,4794+32])
                                        Pexp_ident "new_ifso" (middle_end/flambda/flambda_iterators.ml[148,4794+24]..[148,4794+32])
                                      expression (middle_end/flambda/flambda_iterators.ml[148,4794+34]..[148,4794+43])
                                        Pexp_ident "new_ifnot" (middle_end/flambda/flambda_iterators.ml[148,4794+34]..[148,4794+43])
                                    ]
                    <case>
                      pattern (middle_end/flambda/flambda_iterators.ml[149,4839+4]..[149,4839+21])
                        Ppat_construct "While" (middle_end/flambda/flambda_iterators.ml[149,4839+4]..[149,4839+9])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_iterators.ml[149,4839+9]..[149,4839+21])
                            Ppat_tuple
                            [
                              pattern (middle_end/flambda/flambda_iterators.ml[149,4839+10]..[149,4839+14])
                                Ppat_var "cond" (middle_end/flambda/flambda_iterators.ml[149,4839+10]..[149,4839+14])
                              pattern (middle_end/flambda/flambda_iterators.ml[149,4839+16]..[149,4839+20])
                                Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[149,4839+16]..[149,4839+20])
                            ]
                      expression (middle_end/flambda/flambda_iterators.ml[150,4864+4]..[155,4991+31])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/flambda_iterators.ml[150,4864+8]..[150,4864+16])
                              Ppat_var "new_cond" (middle_end/flambda/flambda_iterators.ml[150,4864+8]..[150,4864+16])
                            expression (middle_end/flambda/flambda_iterators.ml[150,4864+19]..[150,4864+25])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[150,4864+19]..[150,4864+20])
                                Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[150,4864+19]..[150,4864+20])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[150,4864+21]..[150,4864+25])
                                    Pexp_ident "cond" (middle_end/flambda/flambda_iterators.ml[150,4864+21]..[150,4864+25])
                              ]
                        ]
                        expression (middle_end/flambda/flambda_iterators.ml[151,4893+4]..[155,4991+31])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/flambda_iterators.ml[151,4893+8]..[151,4893+16])
                                Ppat_var "new_body" (middle_end/flambda/flambda_iterators.ml[151,4893+8]..[151,4893+16])
                              expression (middle_end/flambda/flambda_iterators.ml[151,4893+19]..[151,4893+25])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[151,4893+19]..[151,4893+20])
                                  Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[151,4893+19]..[151,4893+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[151,4893+21]..[151,4893+25])
                                      Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[151,4893+21]..[151,4893+25])
                                ]
                          ]
                          expression (middle_end/flambda/flambda_iterators.ml[152,4922+4]..[155,4991+31])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/flambda_iterators.ml[152,4922+7]..[152,4922+43])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[152,4922+24]..[152,4922+26])
                                Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[152,4922+24]..[152,4922+26])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[152,4922+7]..[152,4922+23])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[152,4922+16]..[152,4922+18])
                                      Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[152,4922+16]..[152,4922+18])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[152,4922+7]..[152,4922+15])
                                          Pexp_ident "new_cond" (middle_end/flambda/flambda_iterators.ml[152,4922+7]..[152,4922+15])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[152,4922+19]..[152,4922+23])
                                          Pexp_ident "cond" (middle_end/flambda/flambda_iterators.ml[152,4922+19]..[152,4922+23])
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[152,4922+27]..[152,4922+43])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[152,4922+36]..[152,4922+38])
                                      Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[152,4922+36]..[152,4922+38])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[152,4922+27]..[152,4922+35])
                                          Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[152,4922+27]..[152,4922+35])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[152,4922+39]..[152,4922+43])
                                          Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[152,4922+39]..[152,4922+43])
                                    ]
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[153,4971+6]..[153,4971+10])
                              Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[153,4971+6]..[153,4971+10])
                            Some
                              expression (middle_end/flambda/flambda_iterators.ml[155,4991+6]..[155,4991+31])
                                Pexp_construct "While" (middle_end/flambda/flambda_iterators.ml[155,4991+6]..[155,4991+11])
                                Some
                                  expression (middle_end/flambda/flambda_iterators.ml[155,4991+11]..[155,4991+31])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/flambda_iterators.ml[155,4991+12]..[155,4991+20])
                                        Pexp_ident "new_cond" (middle_end/flambda/flambda_iterators.ml[155,4991+12]..[155,4991+20])
                                      expression (middle_end/flambda/flambda_iterators.ml[155,4991+22]..[155,4991+30])
                                        Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[155,4991+22]..[155,4991+30])
                                    ]
                    <case>
                      pattern (middle_end/flambda/flambda_iterators.ml[156,5023+4]..[156,5023+61])
                        Ppat_construct "For" (middle_end/flambda/flambda_iterators.ml[156,5023+4]..[156,5023+7])
                        Some
                          []
                          pattern (middle_end/flambda/flambda_iterators.ml[156,5023+8]..[156,5023+61])
                            Ppat_record Closed
                            [
                              "bound_var" (middle_end/flambda/flambda_iterators.ml[156,5023+10]..[156,5023+19]) ghost
                                pattern (middle_end/flambda/flambda_iterators.ml[156,5023+10]..[156,5023+19])
                                  Ppat_var "bound_var" (middle_end/flambda/flambda_iterators.ml[156,5023+10]..[156,5023+19])
                              "from_value" (middle_end/flambda/flambda_iterators.ml[156,5023+21]..[156,5023+31]) ghost
                                pattern (middle_end/flambda/flambda_iterators.ml[156,5023+21]..[156,5023+31])
                                  Ppat_var "from_value" (middle_end/flambda/flambda_iterators.ml[156,5023+21]..[156,5023+31])
                              "to_value" (middle_end/flambda/flambda_iterators.ml[156,5023+33]..[156,5023+41]) ghost
                                pattern (middle_end/flambda/flambda_iterators.ml[156,5023+33]..[156,5023+41])
                                  Ppat_var "to_value" (middle_end/flambda/flambda_iterators.ml[156,5023+33]..[156,5023+41])
                              "direction" (middle_end/flambda/flambda_iterators.ml[156,5023+43]..[156,5023+52]) ghost
                                pattern (middle_end/flambda/flambda_iterators.ml[156,5023+43]..[156,5023+52])
                                  Ppat_var "direction" (middle_end/flambda/flambda_iterators.ml[156,5023+43]..[156,5023+52])
                              "body" (middle_end/flambda/flambda_iterators.ml[156,5023+54]..[156,5023+58]) ghost
                                pattern (middle_end/flambda/flambda_iterators.ml[156,5023+54]..[156,5023+58])
                                  Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[156,5023+54]..[156,5023+58])
                            ]
                      expression (middle_end/flambda/flambda_iterators.ml[157,5088+4]..[161,5166+74])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/flambda_iterators.ml[157,5088+8]..[157,5088+16])
                              Ppat_var "new_body" (middle_end/flambda/flambda_iterators.ml[157,5088+8]..[157,5088+16])
                            expression (middle_end/flambda/flambda_iterators.ml[157,5088+19]..[157,5088+25])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[157,5088+19]..[157,5088+20])
                                Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[157,5088+19]..[157,5088+20])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[157,5088+21]..[157,5088+25])
                                    Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[157,5088+21]..[157,5088+25])
                              ]
                        ]
                        expression (middle_end/flambda/flambda_iterators.ml[158,5117+4]..[161,5166+74])
                          Pexp_ifthenelse
                          expression (middle_end/flambda/flambda_iterators.ml[158,5117+7]..[158,5117+23])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_iterators.ml[158,5117+16]..[158,5117+18])
                              Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[158,5117+16]..[158,5117+18])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_iterators.ml[158,5117+7]..[158,5117+15])
                                  Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[158,5117+7]..[158,5117+15])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_iterators.ml[158,5117+19]..[158,5117+23])
                                  Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[158,5117+19]..[158,5117+23])
                            ]
                          expression (middle_end/flambda/flambda_iterators.ml[159,5146+6]..[159,5146+10])
                            Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[159,5146+6]..[159,5146+10])
                          Some
                            expression (middle_end/flambda/flambda_iterators.ml[161,5166+6]..[161,5166+74])
                              Pexp_construct "For" (middle_end/flambda/flambda_iterators.ml[161,5166+6]..[161,5166+9])
                              Some
                                expression (middle_end/flambda/flambda_iterators.ml[161,5166+10]..[161,5166+74])
                                  Pexp_record
                                  [
                                    "bound_var" (middle_end/flambda/flambda_iterators.ml[161,5166+12]..[161,5166+21]) ghost
                                      expression (middle_end/flambda/flambda_iterators.ml[161,5166+12]..[161,5166+21])
                                        Pexp_ident "bound_var" (middle_end/flambda/flambda_iterators.ml[161,5166+12]..[161,5166+21])
                                    "from_value" (middle_end/flambda/flambda_iterators.ml[161,5166+23]..[161,5166+33]) ghost
                                      expression (middle_end/flambda/flambda_iterators.ml[161,5166+23]..[161,5166+33])
                                        Pexp_ident "from_value" (middle_end/flambda/flambda_iterators.ml[161,5166+23]..[161,5166+33])
                                    "to_value" (middle_end/flambda/flambda_iterators.ml[161,5166+35]..[161,5166+43]) ghost
                                      expression (middle_end/flambda/flambda_iterators.ml[161,5166+35]..[161,5166+43])
                                        Pexp_ident "to_value" (middle_end/flambda/flambda_iterators.ml[161,5166+35]..[161,5166+43])
                                    "direction" (middle_end/flambda/flambda_iterators.ml[161,5166+45]..[161,5166+54]) ghost
                                      expression (middle_end/flambda/flambda_iterators.ml[161,5166+45]..[161,5166+54])
                                        Pexp_ident "direction" (middle_end/flambda/flambda_iterators.ml[161,5166+45]..[161,5166+54])
                                    "body" (middle_end/flambda/flambda_iterators.ml[161,5166+56]..[161,5166+60])
                                      expression (middle_end/flambda/flambda_iterators.ml[161,5166+63]..[161,5166+71])
                                        Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[161,5166+63]..[161,5166+71])
                                  ]
                                  None
                  ]
                core_type (middle_end/flambda/flambda_iterators.ml[77,2515+52]..[77,2515+61])
                  Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_iterators.ml[77,2515+52]..[77,2515+61])
                  []
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[163,5242+0]..[163,5242+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[163,5242+4]..[163,5242+16])
          Ppat_var "iter_general" (middle_end/flambda/flambda_iterators.ml[163,5242+4]..[163,5242+16])
        expression (middle_end/flambda/flambda_iterators.ml[163,5242+19]..[163,5242+39])
          Pexp_ident "Flambda.iter_general" (middle_end/flambda/flambda_iterators.ml[163,5242+19]..[163,5242+39])
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[165,5283+0]..[165,5283+73])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[165,5283+4]..[165,5283+8])
          Ppat_var "iter" (middle_end/flambda/flambda_iterators.ml[165,5283+4]..[165,5283+8])
        expression (middle_end/flambda/flambda_iterators.ml[165,5283+9]..[165,5283+73]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[165,5283+9]..[165,5283+10])
            Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[165,5283+9]..[165,5283+10])
          expression (middle_end/flambda/flambda_iterators.ml[165,5283+11]..[165,5283+73]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[165,5283+11]..[165,5283+18])
              Ppat_var "f_named" (middle_end/flambda/flambda_iterators.ml[165,5283+11]..[165,5283+18])
            expression (middle_end/flambda/flambda_iterators.ml[165,5283+19]..[165,5283+73]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/flambda_iterators.ml[165,5283+19]..[165,5283+20])
                Ppat_var "t" (middle_end/flambda/flambda_iterators.ml[165,5283+19]..[165,5283+20])
              expression (middle_end/flambda/flambda_iterators.ml[165,5283+23]..[165,5283+73])
                Pexp_apply
                expression (middle_end/flambda/flambda_iterators.ml[165,5283+23]..[165,5283+35])
                  Pexp_ident "iter_general" (middle_end/flambda/flambda_iterators.ml[165,5283+23]..[165,5283+35])
                [
                  <arg>
                  Labelled "toplevel"
                    expression (middle_end/flambda/flambda_iterators.ml[165,5283+46]..[165,5283+51])
                      Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[165,5283+46]..[165,5283+51])
                      None
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[165,5283+52]..[165,5283+53])
                      Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[165,5283+52]..[165,5283+53])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[165,5283+54]..[165,5283+61])
                      Pexp_ident "f_named" (middle_end/flambda/flambda_iterators.ml[165,5283+54]..[165,5283+61])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[165,5283+62]..[165,5283+73])
                      Pexp_construct "Is_expr" (middle_end/flambda/flambda_iterators.ml[165,5283+63]..[165,5283+70])
                      Some
                        expression (middle_end/flambda/flambda_iterators.ml[165,5283+71]..[165,5283+72])
                          Pexp_ident "t" (middle_end/flambda/flambda_iterators.ml[165,5283+71]..[165,5283+72])
                ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[166,5357+0]..[166,5357+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[166,5357+4]..[166,5357+13])
          Ppat_var "iter_expr" (middle_end/flambda/flambda_iterators.ml[166,5357+4]..[166,5357+13])
        expression (middle_end/flambda/flambda_iterators.ml[166,5357+14]..[166,5357+42]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[166,5357+14]..[166,5357+15])
            Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[166,5357+14]..[166,5357+15])
          expression (middle_end/flambda/flambda_iterators.ml[166,5357+16]..[166,5357+42]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[166,5357+16]..[166,5357+17])
              Ppat_var "t" (middle_end/flambda/flambda_iterators.ml[166,5357+16]..[166,5357+17])
            expression (middle_end/flambda/flambda_iterators.ml[166,5357+20]..[166,5357+42])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[166,5357+20]..[166,5357+24])
                Pexp_ident "iter" (middle_end/flambda/flambda_iterators.ml[166,5357+20]..[166,5357+24])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[166,5357+25]..[166,5357+26])
                    Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[166,5357+25]..[166,5357+26])
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[166,5357+27]..[166,5357+40])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_iterators.ml[166,5357+32]..[166,5357+33])
                      Ppat_any
                    expression (middle_end/flambda/flambda_iterators.ml[166,5357+37]..[166,5357+39])
                      Pexp_construct "()" (middle_end/flambda/flambda_iterators.ml[166,5357+37]..[166,5357+39])
                      None
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[166,5357+41]..[166,5357+42])
                    Pexp_ident "t" (middle_end/flambda/flambda_iterators.ml[166,5357+41]..[166,5357+42])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[167,5400+0]..[168,5432+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[167,5400+4]..[167,5400+17])
          Ppat_var "iter_on_named" (middle_end/flambda/flambda_iterators.ml[167,5400+4]..[167,5400+17])
        expression (middle_end/flambda/flambda_iterators.ml[167,5400+18]..[168,5432+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[167,5400+18]..[167,5400+19])
            Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[167,5400+18]..[167,5400+19])
          expression (middle_end/flambda/flambda_iterators.ml[167,5400+20]..[168,5432+53]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[167,5400+20]..[167,5400+27])
              Ppat_var "f_named" (middle_end/flambda/flambda_iterators.ml[167,5400+20]..[167,5400+27])
            expression (middle_end/flambda/flambda_iterators.ml[167,5400+28]..[168,5432+53]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/flambda_iterators.ml[167,5400+28]..[167,5400+29])
                Ppat_var "t" (middle_end/flambda/flambda_iterators.ml[167,5400+28]..[167,5400+29])
              expression (middle_end/flambda/flambda_iterators.ml[168,5432+2]..[168,5432+53])
                Pexp_apply
                expression (middle_end/flambda/flambda_iterators.ml[168,5432+2]..[168,5432+14])
                  Pexp_ident "iter_general" (middle_end/flambda/flambda_iterators.ml[168,5432+2]..[168,5432+14])
                [
                  <arg>
                  Labelled "toplevel"
                    expression (middle_end/flambda/flambda_iterators.ml[168,5432+25]..[168,5432+30])
                      Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[168,5432+25]..[168,5432+30])
                      None
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[168,5432+31]..[168,5432+32])
                      Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[168,5432+31]..[168,5432+32])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[168,5432+33]..[168,5432+40])
                      Pexp_ident "f_named" (middle_end/flambda/flambda_iterators.ml[168,5432+33]..[168,5432+40])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[168,5432+41]..[168,5432+53])
                      Pexp_construct "Is_named" (middle_end/flambda/flambda_iterators.ml[168,5432+42]..[168,5432+50])
                      Some
                        expression (middle_end/flambda/flambda_iterators.ml[168,5432+51]..[168,5432+52])
                          Pexp_ident "t" (middle_end/flambda/flambda_iterators.ml[168,5432+51]..[168,5432+52])
                ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[169,5486+0]..[169,5486+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[169,5486+4]..[169,5486+14])
          Ppat_var "iter_named" (middle_end/flambda/flambda_iterators.ml[169,5486+4]..[169,5486+14])
        expression (middle_end/flambda/flambda_iterators.ml[169,5486+15]..[169,5486+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[169,5486+15]..[169,5486+22])
            Ppat_var "f_named" (middle_end/flambda/flambda_iterators.ml[169,5486+15]..[169,5486+22])
          expression (middle_end/flambda/flambda_iterators.ml[169,5486+23]..[169,5486+69]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[169,5486+23]..[169,5486+24])
              Ppat_var "t" (middle_end/flambda/flambda_iterators.ml[169,5486+23]..[169,5486+24])
            expression (middle_end/flambda/flambda_iterators.ml[169,5486+27]..[169,5486+69])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[169,5486+27]..[169,5486+31])
                Pexp_ident "iter" (middle_end/flambda/flambda_iterators.ml[169,5486+27]..[169,5486+31])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[169,5486+32]..[169,5486+59])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_iterators.ml[169,5486+37]..[169,5486+52])
                      Ppat_constraint
                      pattern (middle_end/flambda/flambda_iterators.ml[169,5486+38]..[169,5486+39])
                        Ppat_any
                      core_type (middle_end/flambda/flambda_iterators.ml[169,5486+42]..[169,5486+51])
                        Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_iterators.ml[169,5486+42]..[169,5486+51])
                        []
                    expression (middle_end/flambda/flambda_iterators.ml[169,5486+56]..[169,5486+58])
                      Pexp_construct "()" (middle_end/flambda/flambda_iterators.ml[169,5486+56]..[169,5486+58])
                      None
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[169,5486+60]..[169,5486+67])
                    Pexp_ident "f_named" (middle_end/flambda/flambda_iterators.ml[169,5486+60]..[169,5486+67])
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[169,5486+68]..[169,5486+69])
                    Pexp_ident "t" (middle_end/flambda/flambda_iterators.ml[169,5486+68]..[169,5486+69])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[170,5556+0]..[172,5663+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[170,5556+4]..[170,5556+23])
          Ppat_var "iter_named_on_named" (middle_end/flambda/flambda_iterators.ml[170,5556+4]..[170,5556+23])
        expression (middle_end/flambda/flambda_iterators.ml[170,5556+24]..[172,5663+20]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[170,5556+24]..[170,5556+31])
            Ppat_var "f_named" (middle_end/flambda/flambda_iterators.ml[170,5556+24]..[170,5556+31])
          expression (middle_end/flambda/flambda_iterators.ml[170,5556+32]..[172,5663+20]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[170,5556+32]..[170,5556+37])
              Ppat_var "named" (middle_end/flambda/flambda_iterators.ml[170,5556+32]..[170,5556+37])
            expression (middle_end/flambda/flambda_iterators.ml[171,5596+2]..[172,5663+20])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[171,5596+2]..[171,5596+14])
                Pexp_ident "iter_general" (middle_end/flambda/flambda_iterators.ml[171,5596+2]..[171,5596+14])
              [
                <arg>
                Labelled "toplevel"
                  expression (middle_end/flambda/flambda_iterators.ml[171,5596+25]..[171,5596+30])
                    Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[171,5596+25]..[171,5596+30])
                    None
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[171,5596+31]..[171,5596+58])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_iterators.ml[171,5596+36]..[171,5596+51])
                      Ppat_constraint
                      pattern (middle_end/flambda/flambda_iterators.ml[171,5596+37]..[171,5596+38])
                        Ppat_any
                      core_type (middle_end/flambda/flambda_iterators.ml[171,5596+41]..[171,5596+50])
                        Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_iterators.ml[171,5596+41]..[171,5596+50])
                        []
                    expression (middle_end/flambda/flambda_iterators.ml[171,5596+55]..[171,5596+57])
                      Pexp_construct "()" (middle_end/flambda/flambda_iterators.ml[171,5596+55]..[171,5596+57])
                      None
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[171,5596+59]..[171,5596+66])
                    Pexp_ident "f_named" (middle_end/flambda/flambda_iterators.ml[171,5596+59]..[171,5596+66])
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[172,5663+4]..[172,5663+20])
                    Pexp_construct "Is_named" (middle_end/flambda/flambda_iterators.ml[172,5663+5]..[172,5663+13])
                    Some
                      expression (middle_end/flambda/flambda_iterators.ml[172,5663+14]..[172,5663+19])
                        Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[172,5663+14]..[172,5663+19])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[174,5685+0]..[175,5717+51])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[174,5685+4]..[174,5685+17])
          Ppat_var "iter_toplevel" (middle_end/flambda/flambda_iterators.ml[174,5685+4]..[174,5685+17])
        expression (middle_end/flambda/flambda_iterators.ml[174,5685+18]..[175,5717+51]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[174,5685+18]..[174,5685+19])
            Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[174,5685+18]..[174,5685+19])
          expression (middle_end/flambda/flambda_iterators.ml[174,5685+20]..[175,5717+51]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[174,5685+20]..[174,5685+27])
              Ppat_var "f_named" (middle_end/flambda/flambda_iterators.ml[174,5685+20]..[174,5685+27])
            expression (middle_end/flambda/flambda_iterators.ml[174,5685+28]..[175,5717+51]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/flambda_iterators.ml[174,5685+28]..[174,5685+29])
                Ppat_var "t" (middle_end/flambda/flambda_iterators.ml[174,5685+28]..[174,5685+29])
              expression (middle_end/flambda/flambda_iterators.ml[175,5717+2]..[175,5717+51])
                Pexp_apply
                expression (middle_end/flambda/flambda_iterators.ml[175,5717+2]..[175,5717+14])
                  Pexp_ident "iter_general" (middle_end/flambda/flambda_iterators.ml[175,5717+2]..[175,5717+14])
                [
                  <arg>
                  Labelled "toplevel"
                    expression (middle_end/flambda/flambda_iterators.ml[175,5717+25]..[175,5717+29])
                      Pexp_construct "true" (middle_end/flambda/flambda_iterators.ml[175,5717+25]..[175,5717+29])
                      None
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[175,5717+30]..[175,5717+31])
                      Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[175,5717+30]..[175,5717+31])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[175,5717+32]..[175,5717+39])
                      Pexp_ident "f_named" (middle_end/flambda/flambda_iterators.ml[175,5717+32]..[175,5717+39])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[175,5717+40]..[175,5717+51])
                      Pexp_construct "Is_expr" (middle_end/flambda/flambda_iterators.ml[175,5717+41]..[175,5717+48])
                      Some
                        expression (middle_end/flambda/flambda_iterators.ml[175,5717+49]..[175,5717+50])
                          Pexp_ident "t" (middle_end/flambda/flambda_iterators.ml[175,5717+49]..[175,5717+50])
                ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[176,5769+0]..[177,5811+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[176,5769+4]..[176,5769+23])
          Ppat_var "iter_named_toplevel" (middle_end/flambda/flambda_iterators.ml[176,5769+4]..[176,5769+23])
        expression (middle_end/flambda/flambda_iterators.ml[176,5769+24]..[177,5811+56]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[176,5769+24]..[176,5769+25])
            Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[176,5769+24]..[176,5769+25])
          expression (middle_end/flambda/flambda_iterators.ml[176,5769+26]..[177,5811+56]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[176,5769+26]..[176,5769+33])
              Ppat_var "f_named" (middle_end/flambda/flambda_iterators.ml[176,5769+26]..[176,5769+33])
            expression (middle_end/flambda/flambda_iterators.ml[176,5769+34]..[177,5811+56]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/flambda_iterators.ml[176,5769+34]..[176,5769+39])
                Ppat_var "named" (middle_end/flambda/flambda_iterators.ml[176,5769+34]..[176,5769+39])
              expression (middle_end/flambda/flambda_iterators.ml[177,5811+2]..[177,5811+56])
                Pexp_apply
                expression (middle_end/flambda/flambda_iterators.ml[177,5811+2]..[177,5811+14])
                  Pexp_ident "iter_general" (middle_end/flambda/flambda_iterators.ml[177,5811+2]..[177,5811+14])
                [
                  <arg>
                  Labelled "toplevel"
                    expression (middle_end/flambda/flambda_iterators.ml[177,5811+25]..[177,5811+29])
                      Pexp_construct "true" (middle_end/flambda/flambda_iterators.ml[177,5811+25]..[177,5811+29])
                      None
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[177,5811+30]..[177,5811+31])
                      Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[177,5811+30]..[177,5811+31])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[177,5811+32]..[177,5811+39])
                      Pexp_ident "f_named" (middle_end/flambda/flambda_iterators.ml[177,5811+32]..[177,5811+39])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[177,5811+40]..[177,5811+56])
                      Pexp_construct "Is_named" (middle_end/flambda/flambda_iterators.ml[177,5811+41]..[177,5811+49])
                      Some
                        expression (middle_end/flambda/flambda_iterators.ml[177,5811+50]..[177,5811+55])
                          Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[177,5811+50]..[177,5811+55])
                ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[179,5869+0]..[184,6102+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[179,5869+4]..[179,5869+47])
          Ppat_var "iter_all_immutable_let_and_let_rec_bindings" (middle_end/flambda/flambda_iterators.ml[179,5869+4]..[179,5869+47])
        expression (middle_end/flambda/flambda_iterators.ml[179,5869+48]..[184,6102+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[179,5869+48]..[179,5869+49])
            Ppat_var "t" (middle_end/flambda/flambda_iterators.ml[179,5869+48]..[179,5869+49])
          expression (middle_end/flambda/flambda_iterators.ml[179,5869+50]..[184,6102+5]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[179,5869+51]..[179,5869+52])
              Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[179,5869+51]..[179,5869+52])
            expression (middle_end/flambda/flambda_iterators.ml[180,5924+2]..[184,6102+5])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[180,5924+2]..[180,5924+11])
                Pexp_ident "iter_expr" (middle_end/flambda/flambda_iterators.ml[180,5924+2]..[180,5924+11])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[180,5924+12]..[183,6085+16])
                    Pexp_function
                    [
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[181,5946+8]..[181,5946+37])
                          Ppat_construct "Let" (middle_end/flambda/flambda_iterators.ml[181,5946+8]..[181,5946+11])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_iterators.ml[181,5946+12]..[181,5946+37])
                              Ppat_record Open
                              [
                                "var" (middle_end/flambda/flambda_iterators.ml[181,5946+14]..[181,5946+17]) ghost
                                  pattern (middle_end/flambda/flambda_iterators.ml[181,5946+14]..[181,5946+17])
                                    Ppat_var "var" (middle_end/flambda/flambda_iterators.ml[181,5946+14]..[181,5946+17])
                                "defining_expr" (middle_end/flambda/flambda_iterators.ml[181,5946+19]..[181,5946+32]) ghost
                                  pattern (middle_end/flambda/flambda_iterators.ml[181,5946+19]..[181,5946+32])
                                    Ppat_var "defining_expr" (middle_end/flambda/flambda_iterators.ml[181,5946+19]..[181,5946+32])
                              ]
                        expression (middle_end/flambda/flambda_iterators.ml[181,5946+41]..[181,5946+60])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_iterators.ml[181,5946+41]..[181,5946+42])
                            Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[181,5946+41]..[181,5946+42])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[181,5946+43]..[181,5946+46])
                                Pexp_ident "var" (middle_end/flambda/flambda_iterators.ml[181,5946+43]..[181,5946+46])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[181,5946+47]..[181,5946+60])
                                Pexp_ident "defining_expr" (middle_end/flambda/flambda_iterators.ml[181,5946+47]..[181,5946+60])
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[182,6007+8]..[182,6007+25])
                          Ppat_construct "Let_rec" (middle_end/flambda/flambda_iterators.ml[182,6007+8]..[182,6007+15])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_iterators.ml[182,6007+16]..[182,6007+25])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/flambda_iterators.ml[182,6007+17]..[182,6007+21])
                                  Ppat_var "defs" (middle_end/flambda/flambda_iterators.ml[182,6007+17]..[182,6007+21])
                                pattern (middle_end/flambda/flambda_iterators.ml[182,6007+23]..[182,6007+24])
                                  Ppat_any
                              ]
                        expression (middle_end/flambda/flambda_iterators.ml[182,6007+29]..[182,6007+77])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_iterators.ml[182,6007+29]..[182,6007+38])
                            Pexp_ident "List.iter" (middle_end/flambda/flambda_iterators.ml[182,6007+29]..[182,6007+38])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[182,6007+39]..[182,6007+72])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/flambda_iterators.ml[182,6007+44]..[182,6007+56])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_iterators.ml[182,6007+45]..[182,6007+48])
                                      Ppat_var "var" (middle_end/flambda/flambda_iterators.ml[182,6007+45]..[182,6007+48])
                                    pattern (middle_end/flambda/flambda_iterators.ml[182,6007+50]..[182,6007+55])
                                      Ppat_var "named" (middle_end/flambda/flambda_iterators.ml[182,6007+50]..[182,6007+55])
                                  ]
                                expression (middle_end/flambda/flambda_iterators.ml[182,6007+60]..[182,6007+71])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_iterators.ml[182,6007+60]..[182,6007+61])
                                    Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[182,6007+60]..[182,6007+61])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[182,6007+62]..[182,6007+65])
                                        Pexp_ident "var" (middle_end/flambda/flambda_iterators.ml[182,6007+62]..[182,6007+65])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[182,6007+66]..[182,6007+71])
                                        Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[182,6007+66]..[182,6007+71])
                                  ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[182,6007+73]..[182,6007+77])
                                Pexp_ident "defs" (middle_end/flambda/flambda_iterators.ml[182,6007+73]..[182,6007+77])
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[183,6085+8]..[183,6085+9])
                          Ppat_any
                        expression (middle_end/flambda/flambda_iterators.ml[183,6085+13]..[183,6085+15])
                          Pexp_construct "()" (middle_end/flambda/flambda_iterators.ml[183,6085+13]..[183,6085+15])
                          None
                    ]
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[184,6102+4]..[184,6102+5])
                    Pexp_ident "t" (middle_end/flambda/flambda_iterators.ml[184,6102+4]..[184,6102+5])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[186,6109+0]..[193,6391+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[186,6109+4]..[186,6109+56])
          Ppat_var "iter_all_toplevel_immutable_let_and_let_rec_bindings" (middle_end/flambda/flambda_iterators.ml[186,6109+4]..[186,6109+56])
        expression (middle_end/flambda/flambda_iterators.ml[186,6109+57]..[193,6391+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[186,6109+57]..[186,6109+58])
            Ppat_var "t" (middle_end/flambda/flambda_iterators.ml[186,6109+57]..[186,6109+58])
          expression (middle_end/flambda/flambda_iterators.ml[186,6109+59]..[193,6391+15]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[186,6109+60]..[186,6109+61])
              Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[186,6109+60]..[186,6109+61])
            expression (middle_end/flambda/flambda_iterators.ml[187,6173+2]..[193,6391+15])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[187,6173+2]..[187,6173+14])
                Pexp_ident "iter_general" (middle_end/flambda/flambda_iterators.ml[187,6173+2]..[187,6173+14])
              [
                <arg>
                Labelled "toplevel"
                  expression (middle_end/flambda/flambda_iterators.ml[187,6173+25]..[187,6173+29])
                    Pexp_construct "true" (middle_end/flambda/flambda_iterators.ml[187,6173+25]..[187,6173+29])
                    None
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[188,6203+4]..[191,6356+16])
                    Pexp_function
                    [
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[189,6217+8]..[189,6217+37])
                          Ppat_construct "Let" (middle_end/flambda/flambda_iterators.ml[189,6217+8]..[189,6217+11])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_iterators.ml[189,6217+12]..[189,6217+37])
                              Ppat_record Open
                              [
                                "var" (middle_end/flambda/flambda_iterators.ml[189,6217+14]..[189,6217+17]) ghost
                                  pattern (middle_end/flambda/flambda_iterators.ml[189,6217+14]..[189,6217+17])
                                    Ppat_var "var" (middle_end/flambda/flambda_iterators.ml[189,6217+14]..[189,6217+17])
                                "defining_expr" (middle_end/flambda/flambda_iterators.ml[189,6217+19]..[189,6217+32]) ghost
                                  pattern (middle_end/flambda/flambda_iterators.ml[189,6217+19]..[189,6217+32])
                                    Ppat_var "defining_expr" (middle_end/flambda/flambda_iterators.ml[189,6217+19]..[189,6217+32])
                              ]
                        expression (middle_end/flambda/flambda_iterators.ml[189,6217+41]..[189,6217+60])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_iterators.ml[189,6217+41]..[189,6217+42])
                            Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[189,6217+41]..[189,6217+42])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[189,6217+43]..[189,6217+46])
                                Pexp_ident "var" (middle_end/flambda/flambda_iterators.ml[189,6217+43]..[189,6217+46])
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[189,6217+47]..[189,6217+60])
                                Pexp_ident "defining_expr" (middle_end/flambda/flambda_iterators.ml[189,6217+47]..[189,6217+60])
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[190,6278+8]..[190,6278+25])
                          Ppat_construct "Let_rec" (middle_end/flambda/flambda_iterators.ml[190,6278+8]..[190,6278+15])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_iterators.ml[190,6278+16]..[190,6278+25])
                              Ppat_tuple
                              [
                                pattern (middle_end/flambda/flambda_iterators.ml[190,6278+17]..[190,6278+21])
                                  Ppat_var "defs" (middle_end/flambda/flambda_iterators.ml[190,6278+17]..[190,6278+21])
                                pattern (middle_end/flambda/flambda_iterators.ml[190,6278+23]..[190,6278+24])
                                  Ppat_any
                              ]
                        expression (middle_end/flambda/flambda_iterators.ml[190,6278+29]..[190,6278+77])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_iterators.ml[190,6278+29]..[190,6278+38])
                            Pexp_ident "List.iter" (middle_end/flambda/flambda_iterators.ml[190,6278+29]..[190,6278+38])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[190,6278+39]..[190,6278+72])
                                Pexp_fun
                                Nolabel
                                None
                                pattern (middle_end/flambda/flambda_iterators.ml[190,6278+44]..[190,6278+56])
                                  Ppat_tuple
                                  [
                                    pattern (middle_end/flambda/flambda_iterators.ml[190,6278+45]..[190,6278+48])
                                      Ppat_var "var" (middle_end/flambda/flambda_iterators.ml[190,6278+45]..[190,6278+48])
                                    pattern (middle_end/flambda/flambda_iterators.ml[190,6278+50]..[190,6278+55])
                                      Ppat_var "named" (middle_end/flambda/flambda_iterators.ml[190,6278+50]..[190,6278+55])
                                  ]
                                expression (middle_end/flambda/flambda_iterators.ml[190,6278+60]..[190,6278+71])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_iterators.ml[190,6278+60]..[190,6278+61])
                                    Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[190,6278+60]..[190,6278+61])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[190,6278+62]..[190,6278+65])
                                        Pexp_ident "var" (middle_end/flambda/flambda_iterators.ml[190,6278+62]..[190,6278+65])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[190,6278+66]..[190,6278+71])
                                        Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[190,6278+66]..[190,6278+71])
                                  ]
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[190,6278+73]..[190,6278+77])
                                Pexp_ident "defs" (middle_end/flambda/flambda_iterators.ml[190,6278+73]..[190,6278+77])
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[191,6356+8]..[191,6356+9])
                          Ppat_any
                        expression (middle_end/flambda/flambda_iterators.ml[191,6356+13]..[191,6356+15])
                          Pexp_construct "()" (middle_end/flambda/flambda_iterators.ml[191,6356+13]..[191,6356+15])
                          None
                    ]
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[192,6373+4]..[192,6373+17])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_iterators.ml[192,6373+9]..[192,6373+10])
                      Ppat_any
                    expression (middle_end/flambda/flambda_iterators.ml[192,6373+14]..[192,6373+16])
                      Pexp_construct "()" (middle_end/flambda/flambda_iterators.ml[192,6373+14]..[192,6373+16])
                      None
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[193,6391+4]..[193,6391+15])
                    Pexp_construct "Is_expr" (middle_end/flambda/flambda_iterators.ml[193,6391+5]..[193,6391+12])
                    Some
                      expression (middle_end/flambda/flambda_iterators.ml[193,6391+13]..[193,6391+14])
                        Pexp_ident "t" (middle_end/flambda/flambda_iterators.ml[193,6391+13]..[193,6391+14])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[195,6408+0]..[202,6702+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[195,6408+4]..[195,6408+28])
          Ppat_var "iter_on_sets_of_closures" (middle_end/flambda/flambda_iterators.ml[195,6408+4]..[195,6408+28])
        expression (middle_end/flambda/flambda_iterators.ml[195,6408+29]..[202,6702+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[195,6408+29]..[195,6408+30])
            Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[195,6408+29]..[195,6408+30])
          expression (middle_end/flambda/flambda_iterators.ml[195,6408+31]..[202,6702+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[195,6408+31]..[195,6408+32])
              Ppat_var "t" (middle_end/flambda/flambda_iterators.ml[195,6408+31]..[195,6408+32])
            expression (middle_end/flambda/flambda_iterators.ml[196,6443+2]..[202,6702+5])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[196,6443+2]..[196,6443+12])
                Pexp_ident "iter_named" (middle_end/flambda/flambda_iterators.ml[196,6443+2]..[196,6443+12])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[196,6443+13]..[201,6671+30])
                    Pexp_function
                    [
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[197,6466+8]..[197,6466+28])
                          Ppat_construct "Set_of_closures" (middle_end/flambda/flambda_iterators.ml[197,6466+8]..[197,6466+23])
                          Some
                            []
                            pattern (middle_end/flambda/flambda_iterators.ml[197,6466+24]..[197,6466+28])
                              Ppat_var "clos" (middle_end/flambda/flambda_iterators.ml[197,6466+24]..[197,6466+28])
                        expression (middle_end/flambda/flambda_iterators.ml[197,6466+32]..[197,6466+38])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_iterators.ml[197,6466+32]..[197,6466+33])
                            Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[197,6466+32]..[197,6466+33])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[197,6466+34]..[197,6466+38])
                                Pexp_ident "clos" (middle_end/flambda/flambda_iterators.ml[197,6466+34]..[197,6466+38])
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[198,6505+8]..[201,6671+23])
                          Ppat_or
                          pattern (middle_end/flambda/flambda_iterators.ml[198,6505+8]..[201,6671+14])
                            Ppat_or
                            pattern (middle_end/flambda/flambda_iterators.ml[198,6505+8]..[200,6597+73])
                              Ppat_or
                              pattern (middle_end/flambda/flambda_iterators.ml[198,6505+8]..[200,6597+57])
                                Ppat_or
                                pattern (middle_end/flambda/flambda_iterators.ml[198,6505+8]..[200,6597+25])
                                  Ppat_or
                                  pattern (middle_end/flambda/flambda_iterators.ml[198,6505+8]..[199,6569+27])
                                    Ppat_or
                                    pattern (middle_end/flambda/flambda_iterators.ml[198,6505+8]..[198,6505+63])
                                      Ppat_or
                                      pattern (middle_end/flambda/flambda_iterators.ml[198,6505+8]..[198,6505+46])
                                        Ppat_or
                                        pattern (middle_end/flambda/flambda_iterators.ml[198,6505+8]..[198,6505+26])
                                          Ppat_or
                                          pattern (middle_end/flambda/flambda_iterators.ml[198,6505+8]..[198,6505+16])
                                            Ppat_construct "Symbol" (middle_end/flambda/flambda_iterators.ml[198,6505+8]..[198,6505+14])
                                            Some
                                              []
                                              pattern (middle_end/flambda/flambda_iterators.ml[198,6505+15]..[198,6505+16])
                                                Ppat_any
                                          pattern (middle_end/flambda/flambda_iterators.ml[198,6505+19]..[198,6505+26])
                                            Ppat_construct "Const" (middle_end/flambda/flambda_iterators.ml[198,6505+19]..[198,6505+24])
                                            Some
                                              []
                                              pattern (middle_end/flambda/flambda_iterators.ml[198,6505+25]..[198,6505+26])
                                                Ppat_any
                                        pattern (middle_end/flambda/flambda_iterators.ml[198,6505+29]..[198,6505+46])
                                          Ppat_construct "Allocated_const" (middle_end/flambda/flambda_iterators.ml[198,6505+29]..[198,6505+44])
                                          Some
                                            []
                                            pattern (middle_end/flambda/flambda_iterators.ml[198,6505+45]..[198,6505+46])
                                              Ppat_any
                                      pattern (middle_end/flambda/flambda_iterators.ml[198,6505+49]..[198,6505+63])
                                        Ppat_construct "Read_mutable" (middle_end/flambda/flambda_iterators.ml[198,6505+49]..[198,6505+61])
                                        Some
                                          []
                                          pattern (middle_end/flambda/flambda_iterators.ml[198,6505+62]..[198,6505+63])
                                            Ppat_any
                                    pattern (middle_end/flambda/flambda_iterators.ml[199,6569+8]..[199,6569+27])
                                      Ppat_construct "Read_symbol_field" (middle_end/flambda/flambda_iterators.ml[199,6569+8]..[199,6569+25])
                                      Some
                                        []
                                        pattern (middle_end/flambda/flambda_iterators.ml[199,6569+26]..[199,6569+27])
                                          Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[200,6597+8]..[200,6597+25])
                                    Ppat_construct "Project_closure" (middle_end/flambda/flambda_iterators.ml[200,6597+8]..[200,6597+23])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_iterators.ml[200,6597+24]..[200,6597+25])
                                        Ppat_any
                                pattern (middle_end/flambda/flambda_iterators.ml[200,6597+28]..[200,6597+57])
                                  Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/flambda_iterators.ml[200,6597+28]..[200,6597+55])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_iterators.ml[200,6597+56]..[200,6597+57])
                                      Ppat_any
                              pattern (middle_end/flambda/flambda_iterators.ml[200,6597+60]..[200,6597+73])
                                Ppat_construct "Project_var" (middle_end/flambda/flambda_iterators.ml[200,6597+60]..[200,6597+71])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[200,6597+72]..[200,6597+73])
                                    Ppat_any
                            pattern (middle_end/flambda/flambda_iterators.ml[201,6671+8]..[201,6671+14])
                              Ppat_construct "Prim" (middle_end/flambda/flambda_iterators.ml[201,6671+8]..[201,6671+12])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_iterators.ml[201,6671+13]..[201,6671+14])
                                  Ppat_any
                          pattern (middle_end/flambda/flambda_iterators.ml[201,6671+17]..[201,6671+23])
                            Ppat_construct "Expr" (middle_end/flambda/flambda_iterators.ml[201,6671+17]..[201,6671+21])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[201,6671+22]..[201,6671+23])
                                Ppat_any
                        expression (middle_end/flambda/flambda_iterators.ml[201,6671+27]..[201,6671+29])
                          Pexp_construct "()" (middle_end/flambda/flambda_iterators.ml[201,6671+27]..[201,6671+29])
                          None
                    ]
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[202,6702+4]..[202,6702+5])
                    Pexp_ident "t" (middle_end/flambda/flambda_iterators.ml[202,6702+4]..[202,6702+5])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[204,6709+0]..[231,7696+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[204,6709+4]..[204,6709+37])
          Ppat_var "iter_exprs_at_toplevel_of_program" (middle_end/flambda/flambda_iterators.ml[204,6709+4]..[204,6709+37])
        expression (middle_end/flambda/flambda_iterators.ml[204,6709+38]..[231,7696+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[204,6709+38]..[204,6709+65])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_iterators.ml[204,6709+39]..[204,6709+46])
              Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[204,6709+39]..[204,6709+46])
            core_type (middle_end/flambda/flambda_iterators.ml[204,6709+49]..[204,6709+64])
              Ptyp_constr "Flambda.program" (middle_end/flambda/flambda_iterators.ml[204,6709+49]..[204,6709+64])
              []
          expression (middle_end/flambda/flambda_iterators.ml[204,6709+66]..[231,7696+27]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[204,6709+67]..[204,6709+68])
              Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[204,6709+67]..[204,6709+68])
            expression (middle_end/flambda/flambda_iterators.ml[205,6780+2]..[231,7696+27])
              Pexp_let Rec
              [
                <def>
                  pattern (middle_end/flambda/flambda_iterators.ml[205,6780+10]..[205,6780+14])
                    Ppat_var "loop" (middle_end/flambda/flambda_iterators.ml[205,6780+10]..[205,6780+14])
                  expression (middle_end/flambda/flambda_iterators.ml[205,6780+15]..[229,7673+17]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_iterators.ml[205,6780+15]..[205,6780+47])
                      Ppat_constraint
                      pattern (middle_end/flambda/flambda_iterators.ml[205,6780+16]..[205,6780+23])
                        Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[205,6780+16]..[205,6780+23])
                      core_type (middle_end/flambda/flambda_iterators.ml[205,6780+26]..[205,6780+46])
                        Ptyp_constr "Flambda.program_body" (middle_end/flambda/flambda_iterators.ml[205,6780+26]..[205,6780+46])
                        []
                    expression (middle_end/flambda/flambda_iterators.ml[206,6830+4]..[229,7673+17])
                      Pexp_match
                      expression (middle_end/flambda/flambda_iterators.ml[206,6830+10]..[206,6830+17])
                        Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[206,6830+10]..[206,6830+17])
                      [
                        <case>
                          pattern (middle_end/flambda/flambda_iterators.ml[207,6853+6]..[207,6853+62])
                            Ppat_construct "Let_symbol" (middle_end/flambda/flambda_iterators.ml[207,6853+6]..[207,6853+16])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[207,6853+17]..[207,6853+62])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[207,6853+18]..[207,6853+19])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[207,6853+21]..[207,6853+52])
                                    Ppat_construct "Set_of_closures" (middle_end/flambda/flambda_iterators.ml[207,6853+21]..[207,6853+36])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_iterators.ml[207,6853+37]..[207,6853+52])
                                        Ppat_var "set_of_closures" (middle_end/flambda/flambda_iterators.ml[207,6853+37]..[207,6853+52])
                                  pattern (middle_end/flambda/flambda_iterators.ml[207,6853+54]..[207,6853+61])
                                    Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[207,6853+54]..[207,6853+61])
                                ]
                          expression (middle_end/flambda/flambda_iterators.ml[208,6919+6]..[211,7077+18])
                            Pexp_sequence
                            expression (middle_end/flambda/flambda_iterators.ml[208,6919+6]..[210,7032+43])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[208,6919+6]..[208,6919+23])
                                Pexp_ident "Variable.Map.iter" (middle_end/flambda/flambda_iterators.ml[208,6919+6]..[208,6919+23])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[208,6919+24]..[209,7000+31])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/flambda_iterators.ml[208,6919+29]..[208,6919+30])
                                      Ppat_any
                                    expression (middle_end/flambda/flambda_iterators.ml[208,6919+31]..[209,7000+30]) ghost
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/flambda_iterators.ml[208,6919+31]..[208,6919+77])
                                        Ppat_constraint
                                        pattern (middle_end/flambda/flambda_iterators.ml[208,6919+32]..[208,6919+45])
                                          Ppat_var "function_decl" (middle_end/flambda/flambda_iterators.ml[208,6919+32]..[208,6919+45])
                                        core_type (middle_end/flambda/flambda_iterators.ml[208,6919+48]..[208,6919+76])
                                          Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/flambda_iterators.ml[208,6919+48]..[208,6919+76])
                                          []
                                      expression (middle_end/flambda/flambda_iterators.ml[209,7000+10]..[209,7000+30])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[209,7000+10]..[209,7000+11])
                                          Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[209,7000+10]..[209,7000+11])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[209,7000+12]..[209,7000+30])
                                              Pexp_field
                                              expression (middle_end/flambda/flambda_iterators.ml[209,7000+12]..[209,7000+25])
                                                Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[209,7000+12]..[209,7000+25])
                                              "body" (middle_end/flambda/flambda_iterators.ml[209,7000+26]..[209,7000+30])
                                        ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[210,7032+8]..[210,7032+43])
                                    Pexp_field
                                    expression (middle_end/flambda/flambda_iterators.ml[210,7032+8]..[210,7032+38])
                                      Pexp_field
                                      expression (middle_end/flambda/flambda_iterators.ml[210,7032+8]..[210,7032+23])
                                        Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[210,7032+8]..[210,7032+23])
                                      "function_decls" (middle_end/flambda/flambda_iterators.ml[210,7032+24]..[210,7032+38])
                                    "funs" (middle_end/flambda/flambda_iterators.ml[210,7032+39]..[210,7032+43])
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[211,7077+6]..[211,7077+18])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[211,7077+6]..[211,7077+10])
                                Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[211,7077+6]..[211,7077+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[211,7077+11]..[211,7077+18])
                                    Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[211,7077+11]..[211,7077+18])
                              ]
                        <case>
                          pattern (middle_end/flambda/flambda_iterators.ml[212,7096+6]..[212,7096+36])
                            Ppat_construct "Let_rec_symbol" (middle_end/flambda/flambda_iterators.ml[212,7096+6]..[212,7096+20])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[212,7096+21]..[212,7096+36])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[212,7096+22]..[212,7096+26])
                                    Ppat_var "defs" (middle_end/flambda/flambda_iterators.ml[212,7096+22]..[212,7096+26])
                                  pattern (middle_end/flambda/flambda_iterators.ml[212,7096+28]..[212,7096+35])
                                    Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[212,7096+28]..[212,7096+35])
                                ]
                          expression (middle_end/flambda/flambda_iterators.ml[213,7136+6]..[220,7438+18])
                            Pexp_sequence
                            expression (middle_end/flambda/flambda_iterators.ml[213,7136+6]..[219,7411+25])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[213,7136+6]..[213,7136+15])
                                Pexp_ident "List.iter" (middle_end/flambda/flambda_iterators.ml[213,7136+6]..[213,7136+15])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[213,7136+16]..[219,7411+20])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (middle_end/flambda/flambda_iterators.ml[214,7162+12]..[214,7162+56])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/flambda/flambda_iterators.ml[214,7162+13]..[214,7162+14])
                                              Ppat_any
                                            pattern (middle_end/flambda/flambda_iterators.ml[214,7162+16]..[214,7162+55])
                                              Ppat_construct "Flambda.Set_of_closures" (middle_end/flambda/flambda_iterators.ml[214,7162+16]..[214,7162+39])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[214,7162+40]..[214,7162+55])
                                                  Ppat_var "set_of_closures" (middle_end/flambda/flambda_iterators.ml[214,7162+40]..[214,7162+55])
                                          ]
                                        expression (middle_end/flambda/flambda_iterators.ml[215,7222+12]..[218,7361+49])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_iterators.ml[215,7222+12]..[215,7222+29])
                                            Pexp_ident "Variable.Map.iter" (middle_end/flambda/flambda_iterators.ml[215,7222+12]..[215,7222+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_iterators.ml[216,7252+14]..[217,7323+37])
                                                Pexp_fun
                                                Nolabel
                                                None
                                                pattern (middle_end/flambda/flambda_iterators.ml[216,7252+19]..[216,7252+20])
                                                  Ppat_any
                                                expression (middle_end/flambda/flambda_iterators.ml[216,7252+21]..[217,7323+36]) ghost
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (middle_end/flambda/flambda_iterators.ml[216,7252+21]..[216,7252+67])
                                                    Ppat_constraint
                                                    pattern (middle_end/flambda/flambda_iterators.ml[216,7252+22]..[216,7252+35])
                                                      Ppat_var "function_decl" (middle_end/flambda/flambda_iterators.ml[216,7252+22]..[216,7252+35])
                                                    core_type (middle_end/flambda/flambda_iterators.ml[216,7252+38]..[216,7252+66])
                                                      Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/flambda_iterators.ml[216,7252+38]..[216,7252+66])
                                                      []
                                                  expression (middle_end/flambda/flambda_iterators.ml[217,7323+16]..[217,7323+36])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[217,7323+16]..[217,7323+17])
                                                      Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[217,7323+16]..[217,7323+17])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[217,7323+18]..[217,7323+36])
                                                          Pexp_field
                                                          expression (middle_end/flambda/flambda_iterators.ml[217,7323+18]..[217,7323+31])
                                                            Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[217,7323+18]..[217,7323+31])
                                                          "body" (middle_end/flambda/flambda_iterators.ml[217,7323+32]..[217,7323+36])
                                                    ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_iterators.ml[218,7361+14]..[218,7361+49])
                                                Pexp_field
                                                expression (middle_end/flambda/flambda_iterators.ml[218,7361+14]..[218,7361+44])
                                                  Pexp_field
                                                  expression (middle_end/flambda/flambda_iterators.ml[218,7361+14]..[218,7361+29])
                                                    Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[218,7361+14]..[218,7361+29])
                                                  "function_decls" (middle_end/flambda/flambda_iterators.ml[218,7361+30]..[218,7361+44])
                                                "funs" (middle_end/flambda/flambda_iterators.ml[218,7361+45]..[218,7361+49])
                                          ]
                                      <case>
                                        pattern (middle_end/flambda/flambda_iterators.ml[219,7411+12]..[219,7411+13])
                                          Ppat_any
                                        expression (middle_end/flambda/flambda_iterators.ml[219,7411+17]..[219,7411+19])
                                          Pexp_construct "()" (middle_end/flambda/flambda_iterators.ml[219,7411+17]..[219,7411+19])
                                          None
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[219,7411+21]..[219,7411+25])
                                    Pexp_ident "defs" (middle_end/flambda/flambda_iterators.ml[219,7411+21]..[219,7411+25])
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[220,7438+6]..[220,7438+18])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[220,7438+6]..[220,7438+10])
                                Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[220,7438+6]..[220,7438+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[220,7438+11]..[220,7438+18])
                                    Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[220,7438+11]..[220,7438+18])
                              ]
                        <case>
                          pattern (middle_end/flambda/flambda_iterators.ml[221,7457+6]..[221,7457+32])
                            Ppat_construct "Let_symbol" (middle_end/flambda/flambda_iterators.ml[221,7457+6]..[221,7457+16])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[221,7457+17]..[221,7457+32])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[221,7457+18]..[221,7457+19])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[221,7457+21]..[221,7457+22])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[221,7457+24]..[221,7457+31])
                                    Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[221,7457+24]..[221,7457+31])
                                ]
                          expression (middle_end/flambda/flambda_iterators.ml[222,7493+6]..[222,7493+18])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_iterators.ml[222,7493+6]..[222,7493+10])
                              Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[222,7493+6]..[222,7493+10])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_iterators.ml[222,7493+11]..[222,7493+18])
                                  Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[222,7493+11]..[222,7493+18])
                            ]
                        <case>
                          pattern (middle_end/flambda/flambda_iterators.ml[223,7512+6]..[223,7512+47])
                            Ppat_construct "Initialize_symbol" (middle_end/flambda/flambda_iterators.ml[223,7512+6]..[223,7512+23])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[223,7512+24]..[223,7512+47])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[223,7512+25]..[223,7512+26])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[223,7512+28]..[223,7512+29])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[223,7512+31]..[223,7512+37])
                                    Ppat_var "fields" (middle_end/flambda/flambda_iterators.ml[223,7512+31]..[223,7512+37])
                                  pattern (middle_end/flambda/flambda_iterators.ml[223,7512+39]..[223,7512+46])
                                    Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[223,7512+39]..[223,7512+46])
                                ]
                          expression (middle_end/flambda/flambda_iterators.ml[224,7563+6]..[225,7589+18])
                            Pexp_sequence
                            expression (middle_end/flambda/flambda_iterators.ml[224,7563+6]..[224,7563+24])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[224,7563+6]..[224,7563+15])
                                Pexp_ident "List.iter" (middle_end/flambda/flambda_iterators.ml[224,7563+6]..[224,7563+15])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[224,7563+16]..[224,7563+17])
                                    Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[224,7563+16]..[224,7563+17])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[224,7563+18]..[224,7563+24])
                                    Pexp_ident "fields" (middle_end/flambda/flambda_iterators.ml[224,7563+18]..[224,7563+24])
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[225,7589+6]..[225,7589+18])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[225,7589+6]..[225,7589+10])
                                Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[225,7589+6]..[225,7589+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[225,7589+11]..[225,7589+18])
                                    Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[225,7589+11]..[225,7589+18])
                              ]
                        <case>
                          pattern (middle_end/flambda/flambda_iterators.ml[226,7608+6]..[226,7608+28])
                            Ppat_construct "Effect" (middle_end/flambda/flambda_iterators.ml[226,7608+6]..[226,7608+12])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[226,7608+13]..[226,7608+28])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[226,7608+14]..[226,7608+18])
                                    Ppat_var "expr" (middle_end/flambda/flambda_iterators.ml[226,7608+14]..[226,7608+18])
                                  pattern (middle_end/flambda/flambda_iterators.ml[226,7608+20]..[226,7608+27])
                                    Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[226,7608+20]..[226,7608+27])
                                ]
                          expression (middle_end/flambda/flambda_iterators.ml[227,7640+6]..[228,7654+18])
                            Pexp_sequence
                            expression (middle_end/flambda/flambda_iterators.ml[227,7640+6]..[227,7640+12])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[227,7640+6]..[227,7640+7])
                                Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[227,7640+6]..[227,7640+7])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[227,7640+8]..[227,7640+12])
                                    Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[227,7640+8]..[227,7640+12])
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[228,7654+6]..[228,7654+18])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[228,7654+6]..[228,7654+10])
                                Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[228,7654+6]..[228,7654+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[228,7654+11]..[228,7654+18])
                                    Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[228,7654+11]..[228,7654+18])
                              ]
                        <case>
                          pattern (middle_end/flambda/flambda_iterators.ml[229,7673+6]..[229,7673+11])
                            Ppat_construct "End" (middle_end/flambda/flambda_iterators.ml[229,7673+6]..[229,7673+9])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[229,7673+10]..[229,7673+11])
                                Ppat_any
                          expression (middle_end/flambda/flambda_iterators.ml[229,7673+15]..[229,7673+17])
                            Pexp_construct "()" (middle_end/flambda/flambda_iterators.ml[229,7673+15]..[229,7673+17])
                            None
                      ]
              ]
              expression (middle_end/flambda/flambda_iterators.ml[231,7696+2]..[231,7696+27])
                Pexp_apply
                expression (middle_end/flambda/flambda_iterators.ml[231,7696+2]..[231,7696+6])
                  Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[231,7696+2]..[231,7696+6])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[231,7696+7]..[231,7696+27])
                      Pexp_field
                      expression (middle_end/flambda/flambda_iterators.ml[231,7696+7]..[231,7696+14])
                        Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[231,7696+7]..[231,7696+14])
                      "program_body" (middle_end/flambda/flambda_iterators.ml[231,7696+15]..[231,7696+27])
                ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[233,7725+0]..[234,7764+61])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[233,7725+4]..[233,7725+25])
          Ppat_var "iter_named_of_program" (middle_end/flambda/flambda_iterators.ml[233,7725+4]..[233,7725+25])
        expression (middle_end/flambda/flambda_iterators.ml[233,7725+26]..[234,7764+61]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[233,7725+26]..[233,7725+33])
            Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[233,7725+26]..[233,7725+33])
          expression (middle_end/flambda/flambda_iterators.ml[233,7725+34]..[234,7764+61]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[233,7725+35]..[233,7725+36])
              Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[233,7725+35]..[233,7725+36])
            expression (middle_end/flambda/flambda_iterators.ml[234,7764+2]..[234,7764+61])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[234,7764+2]..[234,7764+35])
                Pexp_ident "iter_exprs_at_toplevel_of_program" (middle_end/flambda/flambda_iterators.ml[234,7764+2]..[234,7764+35])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[234,7764+36]..[234,7764+43])
                    Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[234,7764+36]..[234,7764+43])
                <arg>
                Labelled "f"
                  expression (middle_end/flambda/flambda_iterators.ml[234,7764+47]..[234,7764+61])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_iterators.ml[234,7764+48]..[234,7764+58])
                      Pexp_ident "iter_named" (middle_end/flambda/flambda_iterators.ml[234,7764+48]..[234,7764+58])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_iterators.ml[234,7764+59]..[234,7764+60])
                          Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[234,7764+59]..[234,7764+60])
                    ]
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[236,7827+0]..[265,9075+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[236,7827+4]..[236,7827+38])
          Ppat_var "iter_on_set_of_closures_of_program" (middle_end/flambda/flambda_iterators.ml[236,7827+4]..[236,7827+38])
        expression (middle_end/flambda/flambda_iterators.ml[236,7827+39]..[265,9075+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[236,7827+39]..[236,7827+66])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_iterators.ml[236,7827+40]..[236,7827+47])
              Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[236,7827+40]..[236,7827+47])
            core_type (middle_end/flambda/flambda_iterators.ml[236,7827+50]..[236,7827+65])
              Ptyp_constr "Flambda.program" (middle_end/flambda/flambda_iterators.ml[236,7827+50]..[236,7827+65])
              []
          expression (middle_end/flambda/flambda_iterators.ml[236,7827+67]..[265,9075+27]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[236,7827+68]..[236,7827+69])
              Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[236,7827+68]..[236,7827+69])
            expression (middle_end/flambda/flambda_iterators.ml[237,7899+2]..[265,9075+27])
              Pexp_let Rec
              [
                <def>
                  pattern (middle_end/flambda/flambda_iterators.ml[237,7899+10]..[237,7899+14])
                    Ppat_var "loop" (middle_end/flambda/flambda_iterators.ml[237,7899+10]..[237,7899+14])
                  expression (middle_end/flambda/flambda_iterators.ml[237,7899+15]..[263,9052+17]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_iterators.ml[237,7899+15]..[237,7899+47])
                      Ppat_constraint
                      pattern (middle_end/flambda/flambda_iterators.ml[237,7899+16]..[237,7899+23])
                        Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[237,7899+16]..[237,7899+23])
                      core_type (middle_end/flambda/flambda_iterators.ml[237,7899+26]..[237,7899+46])
                        Ptyp_constr "Flambda.program_body" (middle_end/flambda/flambda_iterators.ml[237,7899+26]..[237,7899+46])
                        []
                    expression (middle_end/flambda/flambda_iterators.ml[238,7949+4]..[263,9052+17])
                      Pexp_match
                      expression (middle_end/flambda/flambda_iterators.ml[238,7949+10]..[238,7949+17])
                        Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[238,7949+10]..[238,7949+17])
                      [
                        <case>
                          pattern (middle_end/flambda/flambda_iterators.ml[239,7972+6]..[239,7972+62])
                            Ppat_construct "Let_symbol" (middle_end/flambda/flambda_iterators.ml[239,7972+6]..[239,7972+16])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[239,7972+17]..[239,7972+62])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[239,7972+18]..[239,7972+19])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[239,7972+21]..[239,7972+52])
                                    Ppat_construct "Set_of_closures" (middle_end/flambda/flambda_iterators.ml[239,7972+21]..[239,7972+36])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_iterators.ml[239,7972+37]..[239,7972+52])
                                        Ppat_var "set_of_closures" (middle_end/flambda/flambda_iterators.ml[239,7972+37]..[239,7972+52])
                                  pattern (middle_end/flambda/flambda_iterators.ml[239,7972+54]..[239,7972+61])
                                    Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[239,7972+54]..[239,7972+61])
                                ]
                          expression (middle_end/flambda/flambda_iterators.ml[240,8038+6]..[244,8279+18])
                            Pexp_sequence
                            expression (middle_end/flambda/flambda_iterators.ml[240,8038+6]..[240,8038+38])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[240,8038+6]..[240,8038+7])
                                Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[240,8038+6]..[240,8038+7])
                              [
                                <arg>
                                Labelled "constant"
                                  expression (middle_end/flambda/flambda_iterators.ml[240,8038+18]..[240,8038+22])
                                    Pexp_construct "true" (middle_end/flambda/flambda_iterators.ml[240,8038+18]..[240,8038+22])
                                    None
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[240,8038+23]..[240,8038+38])
                                    Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[240,8038+23]..[240,8038+38])
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[241,8078+6]..[244,8279+18])
                              Pexp_sequence
                              expression (middle_end/flambda/flambda_iterators.ml[241,8078+6]..[243,8234+43])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[241,8078+6]..[241,8078+23])
                                  Pexp_ident "Variable.Map.iter" (middle_end/flambda/flambda_iterators.ml[241,8078+6]..[241,8078+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[241,8078+24]..[242,8159+74])
                                      Pexp_fun
                                      Nolabel
                                      None
                                      pattern (middle_end/flambda/flambda_iterators.ml[241,8078+29]..[241,8078+30])
                                        Ppat_any
                                      expression (middle_end/flambda/flambda_iterators.ml[241,8078+31]..[242,8159+73]) ghost
                                        Pexp_fun
                                        Nolabel
                                        None
                                        pattern (middle_end/flambda/flambda_iterators.ml[241,8078+31]..[241,8078+77])
                                          Ppat_constraint
                                          pattern (middle_end/flambda/flambda_iterators.ml[241,8078+32]..[241,8078+45])
                                            Ppat_var "function_decl" (middle_end/flambda/flambda_iterators.ml[241,8078+32]..[241,8078+45])
                                          core_type (middle_end/flambda/flambda_iterators.ml[241,8078+48]..[241,8078+76])
                                            Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/flambda_iterators.ml[241,8078+48]..[241,8078+76])
                                            []
                                        expression (middle_end/flambda/flambda_iterators.ml[242,8159+10]..[242,8159+73])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_iterators.ml[242,8159+10]..[242,8159+34])
                                            Pexp_ident "iter_on_sets_of_closures" (middle_end/flambda/flambda_iterators.ml[242,8159+10]..[242,8159+34])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_iterators.ml[242,8159+35]..[242,8159+54])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_iterators.ml[242,8159+36]..[242,8159+37])
                                                  Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[242,8159+36]..[242,8159+37])
                                                [
                                                  <arg>
                                                  Labelled "constant"
                                                    expression (middle_end/flambda/flambda_iterators.ml[242,8159+48]..[242,8159+53])
                                                      Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[242,8159+48]..[242,8159+53])
                                                      None
                                                ]
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_iterators.ml[242,8159+55]..[242,8159+73])
                                                Pexp_field
                                                expression (middle_end/flambda/flambda_iterators.ml[242,8159+55]..[242,8159+68])
                                                  Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[242,8159+55]..[242,8159+68])
                                                "body" (middle_end/flambda/flambda_iterators.ml[242,8159+69]..[242,8159+73])
                                          ]
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[243,8234+8]..[243,8234+43])
                                      Pexp_field
                                      expression (middle_end/flambda/flambda_iterators.ml[243,8234+8]..[243,8234+38])
                                        Pexp_field
                                        expression (middle_end/flambda/flambda_iterators.ml[243,8234+8]..[243,8234+23])
                                          Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[243,8234+8]..[243,8234+23])
                                        "function_decls" (middle_end/flambda/flambda_iterators.ml[243,8234+24]..[243,8234+38])
                                      "funs" (middle_end/flambda/flambda_iterators.ml[243,8234+39]..[243,8234+43])
                                ]
                              expression (middle_end/flambda/flambda_iterators.ml[244,8279+6]..[244,8279+18])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[244,8279+6]..[244,8279+10])
                                  Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[244,8279+6]..[244,8279+10])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[244,8279+11]..[244,8279+18])
                                      Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[244,8279+11]..[244,8279+18])
                                ]
                        <case>
                          pattern (middle_end/flambda/flambda_iterators.ml[245,8298+6]..[245,8298+36])
                            Ppat_construct "Let_rec_symbol" (middle_end/flambda/flambda_iterators.ml[245,8298+6]..[245,8298+20])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[245,8298+21]..[245,8298+36])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[245,8298+22]..[245,8298+26])
                                    Ppat_var "defs" (middle_end/flambda/flambda_iterators.ml[245,8298+22]..[245,8298+26])
                                  pattern (middle_end/flambda/flambda_iterators.ml[245,8298+28]..[245,8298+35])
                                    Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[245,8298+28]..[245,8298+35])
                                ]
                          expression (middle_end/flambda/flambda_iterators.ml[246,8338+6]..[254,8729+18])
                            Pexp_sequence
                            expression (middle_end/flambda/flambda_iterators.ml[246,8338+6]..[253,8702+25])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[246,8338+6]..[246,8338+15])
                                Pexp_ident "List.iter" (middle_end/flambda/flambda_iterators.ml[246,8338+6]..[246,8338+15])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[246,8338+16]..[253,8702+20])
                                    Pexp_function
                                    [
                                      <case>
                                        pattern (middle_end/flambda/flambda_iterators.ml[247,8364+12]..[247,8364+56])
                                          Ppat_tuple
                                          [
                                            pattern (middle_end/flambda/flambda_iterators.ml[247,8364+13]..[247,8364+14])
                                              Ppat_any
                                            pattern (middle_end/flambda/flambda_iterators.ml[247,8364+16]..[247,8364+55])
                                              Ppat_construct "Flambda.Set_of_closures" (middle_end/flambda/flambda_iterators.ml[247,8364+16]..[247,8364+39])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[247,8364+40]..[247,8364+55])
                                                  Ppat_var "set_of_closures" (middle_end/flambda/flambda_iterators.ml[247,8364+40]..[247,8364+55])
                                          ]
                                        expression (middle_end/flambda/flambda_iterators.ml[248,8424+12]..[252,8652+49])
                                          Pexp_sequence
                                          expression (middle_end/flambda/flambda_iterators.ml[248,8424+12]..[248,8424+44])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_iterators.ml[248,8424+12]..[248,8424+13])
                                              Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[248,8424+12]..[248,8424+13])
                                            [
                                              <arg>
                                              Labelled "constant"
                                                expression (middle_end/flambda/flambda_iterators.ml[248,8424+24]..[248,8424+28])
                                                  Pexp_construct "true" (middle_end/flambda/flambda_iterators.ml[248,8424+24]..[248,8424+28])
                                                  None
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[248,8424+29]..[248,8424+44])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[248,8424+29]..[248,8424+44])
                                            ]
                                          expression (middle_end/flambda/flambda_iterators.ml[249,8470+12]..[252,8652+49])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_iterators.ml[249,8470+12]..[249,8470+29])
                                              Pexp_ident "Variable.Map.iter" (middle_end/flambda/flambda_iterators.ml[249,8470+12]..[249,8470+29])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[250,8500+14]..[251,8571+80])
                                                  Pexp_fun
                                                  Nolabel
                                                  None
                                                  pattern (middle_end/flambda/flambda_iterators.ml[250,8500+19]..[250,8500+20])
                                                    Ppat_any
                                                  expression (middle_end/flambda/flambda_iterators.ml[250,8500+21]..[251,8571+79]) ghost
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (middle_end/flambda/flambda_iterators.ml[250,8500+21]..[250,8500+67])
                                                      Ppat_constraint
                                                      pattern (middle_end/flambda/flambda_iterators.ml[250,8500+22]..[250,8500+35])
                                                        Ppat_var "function_decl" (middle_end/flambda/flambda_iterators.ml[250,8500+22]..[250,8500+35])
                                                      core_type (middle_end/flambda/flambda_iterators.ml[250,8500+38]..[250,8500+66])
                                                        Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/flambda_iterators.ml[250,8500+38]..[250,8500+66])
                                                        []
                                                    expression (middle_end/flambda/flambda_iterators.ml[251,8571+16]..[251,8571+79])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_iterators.ml[251,8571+16]..[251,8571+40])
                                                        Pexp_ident "iter_on_sets_of_closures" (middle_end/flambda/flambda_iterators.ml[251,8571+16]..[251,8571+40])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[251,8571+41]..[251,8571+60])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/flambda_iterators.ml[251,8571+42]..[251,8571+43])
                                                              Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[251,8571+42]..[251,8571+43])
                                                            [
                                                              <arg>
                                                              Labelled "constant"
                                                                expression (middle_end/flambda/flambda_iterators.ml[251,8571+54]..[251,8571+59])
                                                                  Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[251,8571+54]..[251,8571+59])
                                                                  None
                                                            ]
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[251,8571+61]..[251,8571+79])
                                                            Pexp_field
                                                            expression (middle_end/flambda/flambda_iterators.ml[251,8571+61]..[251,8571+74])
                                                              Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[251,8571+61]..[251,8571+74])
                                                            "body" (middle_end/flambda/flambda_iterators.ml[251,8571+75]..[251,8571+79])
                                                      ]
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[252,8652+14]..[252,8652+49])
                                                  Pexp_field
                                                  expression (middle_end/flambda/flambda_iterators.ml[252,8652+14]..[252,8652+44])
                                                    Pexp_field
                                                    expression (middle_end/flambda/flambda_iterators.ml[252,8652+14]..[252,8652+29])
                                                      Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[252,8652+14]..[252,8652+29])
                                                    "function_decls" (middle_end/flambda/flambda_iterators.ml[252,8652+30]..[252,8652+44])
                                                  "funs" (middle_end/flambda/flambda_iterators.ml[252,8652+45]..[252,8652+49])
                                            ]
                                      <case>
                                        pattern (middle_end/flambda/flambda_iterators.ml[253,8702+12]..[253,8702+13])
                                          Ppat_any
                                        expression (middle_end/flambda/flambda_iterators.ml[253,8702+17]..[253,8702+19])
                                          Pexp_construct "()" (middle_end/flambda/flambda_iterators.ml[253,8702+17]..[253,8702+19])
                                          None
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[253,8702+21]..[253,8702+25])
                                    Pexp_ident "defs" (middle_end/flambda/flambda_iterators.ml[253,8702+21]..[253,8702+25])
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[254,8729+6]..[254,8729+18])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[254,8729+6]..[254,8729+10])
                                Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[254,8729+6]..[254,8729+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[254,8729+11]..[254,8729+18])
                                    Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[254,8729+11]..[254,8729+18])
                              ]
                        <case>
                          pattern (middle_end/flambda/flambda_iterators.ml[255,8748+6]..[255,8748+32])
                            Ppat_construct "Let_symbol" (middle_end/flambda/flambda_iterators.ml[255,8748+6]..[255,8748+16])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[255,8748+17]..[255,8748+32])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[255,8748+18]..[255,8748+19])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[255,8748+21]..[255,8748+22])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[255,8748+24]..[255,8748+31])
                                    Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[255,8748+24]..[255,8748+31])
                                ]
                          expression (middle_end/flambda/flambda_iterators.ml[256,8784+6]..[256,8784+18])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_iterators.ml[256,8784+6]..[256,8784+10])
                              Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[256,8784+6]..[256,8784+10])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_iterators.ml[256,8784+11]..[256,8784+18])
                                  Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[256,8784+11]..[256,8784+18])
                            ]
                        <case>
                          pattern (middle_end/flambda/flambda_iterators.ml[257,8803+6]..[257,8803+47])
                            Ppat_construct "Initialize_symbol" (middle_end/flambda/flambda_iterators.ml[257,8803+6]..[257,8803+23])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[257,8803+24]..[257,8803+47])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[257,8803+25]..[257,8803+26])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[257,8803+28]..[257,8803+29])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[257,8803+31]..[257,8803+37])
                                    Ppat_var "fields" (middle_end/flambda/flambda_iterators.ml[257,8803+31]..[257,8803+37])
                                  pattern (middle_end/flambda/flambda_iterators.ml[257,8803+39]..[257,8803+46])
                                    Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[257,8803+39]..[257,8803+46])
                                ]
                          expression (middle_end/flambda/flambda_iterators.ml[258,8854+6]..[259,8925+18])
                            Pexp_sequence
                            expression (middle_end/flambda/flambda_iterators.ml[258,8854+6]..[258,8854+69])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[258,8854+6]..[258,8854+15])
                                Pexp_ident "List.iter" (middle_end/flambda/flambda_iterators.ml[258,8854+6]..[258,8854+15])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[258,8854+16]..[258,8854+62])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[258,8854+17]..[258,8854+41])
                                      Pexp_ident "iter_on_sets_of_closures" (middle_end/flambda/flambda_iterators.ml[258,8854+17]..[258,8854+41])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[258,8854+42]..[258,8854+61])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_iterators.ml[258,8854+43]..[258,8854+44])
                                            Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[258,8854+43]..[258,8854+44])
                                          [
                                            <arg>
                                            Labelled "constant"
                                              expression (middle_end/flambda/flambda_iterators.ml[258,8854+55]..[258,8854+60])
                                                Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[258,8854+55]..[258,8854+60])
                                                None
                                          ]
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[258,8854+63]..[258,8854+69])
                                    Pexp_ident "fields" (middle_end/flambda/flambda_iterators.ml[258,8854+63]..[258,8854+69])
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[259,8925+6]..[259,8925+18])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[259,8925+6]..[259,8925+10])
                                Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[259,8925+6]..[259,8925+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[259,8925+11]..[259,8925+18])
                                    Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[259,8925+11]..[259,8925+18])
                              ]
                        <case>
                          pattern (middle_end/flambda/flambda_iterators.ml[260,8944+6]..[260,8944+28])
                            Ppat_construct "Effect" (middle_end/flambda/flambda_iterators.ml[260,8944+6]..[260,8944+12])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[260,8944+13]..[260,8944+28])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[260,8944+14]..[260,8944+18])
                                    Ppat_var "expr" (middle_end/flambda/flambda_iterators.ml[260,8944+14]..[260,8944+18])
                                  pattern (middle_end/flambda/flambda_iterators.ml[260,8944+20]..[260,8944+27])
                                    Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[260,8944+20]..[260,8944+27])
                                ]
                          expression (middle_end/flambda/flambda_iterators.ml[261,8976+6]..[262,9033+18])
                            Pexp_sequence
                            expression (middle_end/flambda/flambda_iterators.ml[261,8976+6]..[261,8976+55])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[261,8976+6]..[261,8976+30])
                                Pexp_ident "iter_on_sets_of_closures" (middle_end/flambda/flambda_iterators.ml[261,8976+6]..[261,8976+30])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[261,8976+31]..[261,8976+50])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[261,8976+32]..[261,8976+33])
                                      Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[261,8976+32]..[261,8976+33])
                                    [
                                      <arg>
                                      Labelled "constant"
                                        expression (middle_end/flambda/flambda_iterators.ml[261,8976+44]..[261,8976+49])
                                          Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[261,8976+44]..[261,8976+49])
                                          None
                                    ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[261,8976+51]..[261,8976+55])
                                    Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[261,8976+51]..[261,8976+55])
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[262,9033+6]..[262,9033+18])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[262,9033+6]..[262,9033+10])
                                Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[262,9033+6]..[262,9033+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[262,9033+11]..[262,9033+18])
                                    Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[262,9033+11]..[262,9033+18])
                              ]
                        <case>
                          pattern (middle_end/flambda/flambda_iterators.ml[263,9052+6]..[263,9052+11])
                            Ppat_construct "End" (middle_end/flambda/flambda_iterators.ml[263,9052+6]..[263,9052+9])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[263,9052+10]..[263,9052+11])
                                Ppat_any
                          expression (middle_end/flambda/flambda_iterators.ml[263,9052+15]..[263,9052+17])
                            Pexp_construct "()" (middle_end/flambda/flambda_iterators.ml[263,9052+15]..[263,9052+17])
                            None
                      ]
              ]
              expression (middle_end/flambda/flambda_iterators.ml[265,9075+2]..[265,9075+27])
                Pexp_apply
                expression (middle_end/flambda/flambda_iterators.ml[265,9075+2]..[265,9075+6])
                  Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[265,9075+2]..[265,9075+6])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[265,9075+7]..[265,9075+27])
                      Pexp_field
                      expression (middle_end/flambda/flambda_iterators.ml[265,9075+7]..[265,9075+14])
                        Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[265,9075+7]..[265,9075+14])
                      "program_body" (middle_end/flambda/flambda_iterators.ml[265,9075+15]..[265,9075+27])
                ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[267,9104+0]..[282,9574+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[267,9104+4]..[267,9104+44])
          Ppat_var "iter_constant_defining_values_on_program" (middle_end/flambda/flambda_iterators.ml[267,9104+4]..[267,9104+44])
        expression (middle_end/flambda/flambda_iterators.ml[267,9104+45]..[282,9574+27]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[267,9104+45]..[267,9104+72])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_iterators.ml[267,9104+46]..[267,9104+53])
              Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[267,9104+46]..[267,9104+53])
            core_type (middle_end/flambda/flambda_iterators.ml[267,9104+56]..[267,9104+71])
              Ptyp_constr "Flambda.program" (middle_end/flambda/flambda_iterators.ml[267,9104+56]..[267,9104+71])
              []
          expression (middle_end/flambda/flambda_iterators.ml[267,9104+73]..[282,9574+27]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[267,9104+74]..[267,9104+75])
              Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[267,9104+74]..[267,9104+75])
            expression (middle_end/flambda/flambda_iterators.ml[268,9182+2]..[282,9574+27])
              Pexp_let Rec
              [
                <def>
                  pattern (middle_end/flambda/flambda_iterators.ml[268,9182+10]..[268,9182+14])
                    Ppat_var "loop" (middle_end/flambda/flambda_iterators.ml[268,9182+10]..[268,9182+14])
                  expression (middle_end/flambda/flambda_iterators.ml[268,9182+15]..[280,9551+17]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_iterators.ml[268,9182+15]..[268,9182+47])
                      Ppat_constraint
                      pattern (middle_end/flambda/flambda_iterators.ml[268,9182+16]..[268,9182+23])
                        Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[268,9182+16]..[268,9182+23])
                      core_type (middle_end/flambda/flambda_iterators.ml[268,9182+26]..[268,9182+46])
                        Ptyp_constr "Flambda.program_body" (middle_end/flambda/flambda_iterators.ml[268,9182+26]..[268,9182+46])
                        []
                    expression (middle_end/flambda/flambda_iterators.ml[269,9232+4]..[280,9551+17])
                      Pexp_match
                      expression (middle_end/flambda/flambda_iterators.ml[269,9232+10]..[269,9232+17])
                        Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[269,9232+10]..[269,9232+17])
                      [
                        <case>
                          pattern (middle_end/flambda/flambda_iterators.ml[270,9255+6]..[270,9255+36])
                            Ppat_construct "Let_symbol" (middle_end/flambda/flambda_iterators.ml[270,9255+6]..[270,9255+16])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[270,9255+17]..[270,9255+36])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[270,9255+18]..[270,9255+19])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[270,9255+21]..[270,9255+26])
                                    Ppat_var "const" (middle_end/flambda/flambda_iterators.ml[270,9255+21]..[270,9255+26])
                                  pattern (middle_end/flambda/flambda_iterators.ml[270,9255+28]..[270,9255+35])
                                    Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[270,9255+28]..[270,9255+35])
                                ]
                          expression (middle_end/flambda/flambda_iterators.ml[271,9295+6]..[272,9310+18])
                            Pexp_sequence
                            expression (middle_end/flambda/flambda_iterators.ml[271,9295+6]..[271,9295+13])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[271,9295+6]..[271,9295+7])
                                Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[271,9295+6]..[271,9295+7])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[271,9295+8]..[271,9295+13])
                                    Pexp_ident "const" (middle_end/flambda/flambda_iterators.ml[271,9295+8]..[271,9295+13])
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[272,9310+6]..[272,9310+18])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[272,9310+6]..[272,9310+10])
                                Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[272,9310+6]..[272,9310+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[272,9310+11]..[272,9310+18])
                                    Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[272,9310+11]..[272,9310+18])
                              ]
                        <case>
                          pattern (middle_end/flambda/flambda_iterators.ml[273,9329+6]..[273,9329+36])
                            Ppat_construct "Let_rec_symbol" (middle_end/flambda/flambda_iterators.ml[273,9329+6]..[273,9329+20])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[273,9329+21]..[273,9329+36])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[273,9329+22]..[273,9329+26])
                                    Ppat_var "defs" (middle_end/flambda/flambda_iterators.ml[273,9329+22]..[273,9329+26])
                                  pattern (middle_end/flambda/flambda_iterators.ml[273,9329+28]..[273,9329+35])
                                    Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[273,9329+28]..[273,9329+35])
                                ]
                          expression (middle_end/flambda/flambda_iterators.ml[274,9369+6]..[275,9419+18])
                            Pexp_sequence
                            expression (middle_end/flambda/flambda_iterators.ml[274,9369+6]..[274,9369+48])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[274,9369+6]..[274,9369+15])
                                Pexp_ident "List.iter" (middle_end/flambda/flambda_iterators.ml[274,9369+6]..[274,9369+15])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[274,9369+16]..[274,9369+43])
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (middle_end/flambda/flambda_iterators.ml[274,9369+21]..[274,9369+31])
                                      Ppat_tuple
                                      [
                                        pattern (middle_end/flambda/flambda_iterators.ml[274,9369+22]..[274,9369+23])
                                          Ppat_any
                                        pattern (middle_end/flambda/flambda_iterators.ml[274,9369+25]..[274,9369+30])
                                          Ppat_var "const" (middle_end/flambda/flambda_iterators.ml[274,9369+25]..[274,9369+30])
                                      ]
                                    expression (middle_end/flambda/flambda_iterators.ml[274,9369+35]..[274,9369+42])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[274,9369+35]..[274,9369+36])
                                        Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[274,9369+35]..[274,9369+36])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[274,9369+37]..[274,9369+42])
                                            Pexp_ident "const" (middle_end/flambda/flambda_iterators.ml[274,9369+37]..[274,9369+42])
                                      ]
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[274,9369+44]..[274,9369+48])
                                    Pexp_ident "defs" (middle_end/flambda/flambda_iterators.ml[274,9369+44]..[274,9369+48])
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[275,9419+6]..[275,9419+18])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[275,9419+6]..[275,9419+10])
                                Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[275,9419+6]..[275,9419+10])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[275,9419+11]..[275,9419+18])
                                    Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[275,9419+11]..[275,9419+18])
                              ]
                        <case>
                          pattern (middle_end/flambda/flambda_iterators.ml[276,9438+6]..[276,9438+42])
                            Ppat_construct "Initialize_symbol" (middle_end/flambda/flambda_iterators.ml[276,9438+6]..[276,9438+23])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[276,9438+24]..[276,9438+42])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[276,9438+25]..[276,9438+26])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[276,9438+28]..[276,9438+29])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[276,9438+31]..[276,9438+32])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[276,9438+34]..[276,9438+41])
                                    Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[276,9438+34]..[276,9438+41])
                                ]
                          expression (middle_end/flambda/flambda_iterators.ml[277,9484+6]..[277,9484+18])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_iterators.ml[277,9484+6]..[277,9484+10])
                              Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[277,9484+6]..[277,9484+10])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_iterators.ml[277,9484+11]..[277,9484+18])
                                  Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[277,9484+11]..[277,9484+18])
                            ]
                        <case>
                          pattern (middle_end/flambda/flambda_iterators.ml[278,9503+6]..[278,9503+25])
                            Ppat_construct "Effect" (middle_end/flambda/flambda_iterators.ml[278,9503+6]..[278,9503+12])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[278,9503+13]..[278,9503+25])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[278,9503+14]..[278,9503+15])
                                    Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[278,9503+17]..[278,9503+24])
                                    Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[278,9503+17]..[278,9503+24])
                                ]
                          expression (middle_end/flambda/flambda_iterators.ml[279,9532+6]..[279,9532+18])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_iterators.ml[279,9532+6]..[279,9532+10])
                              Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[279,9532+6]..[279,9532+10])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_iterators.ml[279,9532+11]..[279,9532+18])
                                  Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[279,9532+11]..[279,9532+18])
                            ]
                        <case>
                          pattern (middle_end/flambda/flambda_iterators.ml[280,9551+6]..[280,9551+11])
                            Ppat_construct "End" (middle_end/flambda/flambda_iterators.ml[280,9551+6]..[280,9551+9])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[280,9551+10]..[280,9551+11])
                                Ppat_any
                          expression (middle_end/flambda/flambda_iterators.ml[280,9551+15]..[280,9551+17])
                            Pexp_construct "()" (middle_end/flambda/flambda_iterators.ml[280,9551+15]..[280,9551+17])
                            None
                      ]
              ]
              expression (middle_end/flambda/flambda_iterators.ml[282,9574+2]..[282,9574+27])
                Pexp_apply
                expression (middle_end/flambda/flambda_iterators.ml[282,9574+2]..[282,9574+6])
                  Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[282,9574+2]..[282,9574+6])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[282,9574+7]..[282,9574+27])
                      Pexp_field
                      expression (middle_end/flambda/flambda_iterators.ml[282,9574+7]..[282,9574+14])
                        Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[282,9574+7]..[282,9574+14])
                      "program_body" (middle_end/flambda/flambda_iterators.ml[282,9574+15]..[282,9574+27])
                ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[284,9603+0]..[443,15168+10])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[284,9603+4]..[284,9603+15])
          Ppat_var "map_general" (middle_end/flambda/flambda_iterators.ml[284,9603+4]..[284,9603+15])
        expression (middle_end/flambda/flambda_iterators.ml[284,9603+16]..[443,15168+10]) ghost
          Pexp_fun
          Labelled "toplevel"
          None
          pattern (middle_end/flambda/flambda_iterators.ml[284,9603+17]..[284,9603+25])
            Ppat_var "toplevel" (middle_end/flambda/flambda_iterators.ml[284,9603+17]..[284,9603+25])
          expression (middle_end/flambda/flambda_iterators.ml[284,9603+26]..[443,15168+10]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[284,9603+26]..[284,9603+27])
              Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[284,9603+26]..[284,9603+27])
            expression (middle_end/flambda/flambda_iterators.ml[284,9603+28]..[443,15168+10]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/flambda_iterators.ml[284,9603+28]..[284,9603+35])
                Ppat_var "f_named" (middle_end/flambda/flambda_iterators.ml[284,9603+28]..[284,9603+35])
              expression (middle_end/flambda/flambda_iterators.ml[284,9603+36]..[443,15168+10]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (middle_end/flambda/flambda_iterators.ml[284,9603+36]..[284,9603+40])
                  Ppat_var "tree" (middle_end/flambda/flambda_iterators.ml[284,9603+36]..[284,9603+40])
                expression (middle_end/flambda/flambda_iterators.ml[285,9646+2]..[443,15168+10])
                  Pexp_let Rec
                  [
                    <def>
                      pattern (middle_end/flambda/flambda_iterators.ml[285,9646+10]..[285,9646+13])
                        Ppat_var "aux" (middle_end/flambda/flambda_iterators.ml[285,9646+10]..[285,9646+13])
                      expression (middle_end/flambda/flambda_iterators.ml[285,9646+14]..[388,13203+11]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/flambda_iterators.ml[285,9646+14]..[285,9646+32])
                          Ppat_constraint
                          pattern (middle_end/flambda/flambda_iterators.ml[285,9646+15]..[285,9646+19])
                            Ppat_var "tree" (middle_end/flambda/flambda_iterators.ml[285,9646+15]..[285,9646+19])
                          core_type (middle_end/flambda/flambda_iterators.ml[285,9646+22]..[285,9646+31])
                            Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_iterators.ml[285,9646+22]..[285,9646+31])
                            []
                        expression (middle_end/flambda/flambda_iterators.ml[286,9681+4]..[388,13203+11])
                          Pexp_match
                          expression (middle_end/flambda/flambda_iterators.ml[286,9681+10]..[286,9681+14])
                            Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[286,9681+10]..[286,9681+14])
                          [
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[287,9701+6]..[287,9701+11])
                                Ppat_construct "Let" (middle_end/flambda/flambda_iterators.ml[287,9701+6]..[287,9701+9])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[287,9701+10]..[287,9701+11])
                                    Ppat_any
                              expression (middle_end/flambda/flambda_iterators.ml[288,9716+6]..[289,9792+24])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[288,9716+6]..[288,9716+22])
                                  Pexp_ident "Flambda.map_lets" (middle_end/flambda/flambda_iterators.ml[288,9716+6]..[288,9716+22])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[288,9716+23]..[288,9716+27])
                                      Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[288,9716+23]..[288,9716+27])
                                  <arg>
                                  Labelled "for_defining_expr"
                                    expression (middle_end/flambda/flambda_iterators.ml[288,9716+47]..[288,9716+56])
                                      Pexp_ident "aux_named" (middle_end/flambda/flambda_iterators.ml[288,9716+47]..[288,9716+56])
                                  <arg>
                                  Labelled "for_last_body"
                                    expression (middle_end/flambda/flambda_iterators.ml[288,9716+72]..[288,9716+75])
                                      Pexp_ident "aux" (middle_end/flambda/flambda_iterators.ml[288,9716+72]..[288,9716+75])
                                  <arg>
                                  Labelled "after_rebuild"
                                    expression (middle_end/flambda/flambda_iterators.ml[289,9792+23]..[289,9792+24])
                                      Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[289,9792+23]..[289,9792+24])
                                ]
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[290,9817+6]..[290,9817+7])
                                Ppat_any
                              expression (middle_end/flambda/flambda_iterators.ml[291,9828+6]..[388,13203+11])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/flambda_iterators.ml[291,9828+10]..[291,9828+25]) ghost
                                      Ppat_constraint
                                      pattern (middle_end/flambda/flambda_iterators.ml[291,9828+10]..[291,9828+13])
                                        Ppat_var "exp" (middle_end/flambda/flambda_iterators.ml[291,9828+10]..[291,9828+13])
                                      core_type (middle_end/flambda/flambda_iterators.ml[291,9828+16]..[291,9828+25]) ghost
                                        Ptyp_poly
                                        core_type (middle_end/flambda/flambda_iterators.ml[291,9828+16]..[291,9828+25])
                                          Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_iterators.ml[291,9828+16]..[291,9828+25])
                                          []
                                    expression (middle_end/flambda/flambda_iterators.ml[291,9828+10]..[386,13161+32])
                                      Pexp_constraint
                                      expression (middle_end/flambda/flambda_iterators.ml[292,9856+8]..[386,13161+32])
                                        Pexp_match
                                        expression (middle_end/flambda/flambda_iterators.ml[292,9856+14]..[292,9856+18])
                                          Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[292,9856+14]..[292,9856+18])
                                        [
                                          <case>
                                            pattern (middle_end/flambda/flambda_iterators.ml[293,9880+10]..[294,9947+24])
                                              Ppat_or
                                              pattern (middle_end/flambda/flambda_iterators.ml[293,9880+10]..[293,9880+66])
                                                Ppat_or
                                                pattern (middle_end/flambda/flambda_iterators.ml[293,9880+10]..[293,9880+45])
                                                  Ppat_or
                                                  pattern (middle_end/flambda/flambda_iterators.ml[293,9880+10]..[293,9880+36])
                                                    Ppat_or
                                                    pattern (middle_end/flambda/flambda_iterators.ml[293,9880+10]..[293,9880+25])
                                                      Ppat_or
                                                      pattern (middle_end/flambda/flambda_iterators.ml[293,9880+10]..[293,9880+15])
                                                        Ppat_construct "Var" (middle_end/flambda/flambda_iterators.ml[293,9880+10]..[293,9880+13])
                                                        Some
                                                          []
                                                          pattern (middle_end/flambda/flambda_iterators.ml[293,9880+14]..[293,9880+15])
                                                            Ppat_any
                                                      pattern (middle_end/flambda/flambda_iterators.ml[293,9880+18]..[293,9880+25])
                                                        Ppat_construct "Apply" (middle_end/flambda/flambda_iterators.ml[293,9880+18]..[293,9880+23])
                                                        Some
                                                          []
                                                          pattern (middle_end/flambda/flambda_iterators.ml[293,9880+24]..[293,9880+25])
                                                            Ppat_any
                                                    pattern (middle_end/flambda/flambda_iterators.ml[293,9880+28]..[293,9880+36])
                                                      Ppat_construct "Assign" (middle_end/flambda/flambda_iterators.ml[293,9880+28]..[293,9880+34])
                                                      Some
                                                        []
                                                        pattern (middle_end/flambda/flambda_iterators.ml[293,9880+35]..[293,9880+36])
                                                          Ppat_any
                                                  pattern (middle_end/flambda/flambda_iterators.ml[293,9880+39]..[293,9880+45])
                                                    Ppat_construct "Send" (middle_end/flambda/flambda_iterators.ml[293,9880+39]..[293,9880+43])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/flambda_iterators.ml[293,9880+44]..[293,9880+45])
                                                        Ppat_any
                                                pattern (middle_end/flambda/flambda_iterators.ml[293,9880+48]..[293,9880+66])
                                                  Ppat_construct "Proved_unreachable" (middle_end/flambda/flambda_iterators.ml[293,9880+48]..[293,9880+66])
                                                  None
                                              pattern (middle_end/flambda/flambda_iterators.ml[294,9947+10]..[294,9947+24])
                                                Ppat_construct "Static_raise" (middle_end/flambda/flambda_iterators.ml[294,9947+10]..[294,9947+22])
                                                Some
                                                  []
                                                  pattern (middle_end/flambda/flambda_iterators.ml[294,9947+23]..[294,9947+24])
                                                    Ppat_any
                                            expression (middle_end/flambda/flambda_iterators.ml[294,9947+28]..[294,9947+32])
                                              Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[294,9947+28]..[294,9947+32])
                                          <case>
                                            pattern (middle_end/flambda/flambda_iterators.ml[295,9980+10]..[295,9980+15])
                                              Ppat_construct "Let" (middle_end/flambda/flambda_iterators.ml[295,9980+10]..[295,9980+13])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[295,9980+14]..[295,9980+15])
                                                  Ppat_any
                                            expression (middle_end/flambda/flambda_iterators.ml[295,9980+19]..[295,9980+31])
                                              Pexp_assert
                                              expression (middle_end/flambda/flambda_iterators.ml[295,9980+26]..[295,9980+31])
                                                Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[295,9980+26]..[295,9980+31])
                                                None
                                          <case>
                                            pattern (middle_end/flambda/flambda_iterators.ml[296,10012+10]..[296,10012+33])
                                              Ppat_construct "Let_mutable" (middle_end/flambda/flambda_iterators.ml[296,10012+10]..[296,10012+21])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[296,10012+22]..[296,10012+33])
                                                  Ppat_var "mutable_let" (middle_end/flambda/flambda_iterators.ml[296,10012+22]..[296,10012+33])
                                            expression (middle_end/flambda/flambda_iterators.ml[297,10049+10]..[301,10177+60])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/flambda_iterators.ml[297,10049+14]..[297,10049+22])
                                                    Ppat_var "new_body" (middle_end/flambda/flambda_iterators.ml[297,10049+14]..[297,10049+22])
                                                  expression (middle_end/flambda/flambda_iterators.ml[297,10049+25]..[297,10049+45])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[297,10049+25]..[297,10049+28])
                                                      Pexp_ident "aux" (middle_end/flambda/flambda_iterators.ml[297,10049+25]..[297,10049+28])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[297,10049+29]..[297,10049+45])
                                                          Pexp_field
                                                          expression (middle_end/flambda/flambda_iterators.ml[297,10049+29]..[297,10049+40])
                                                            Pexp_ident "mutable_let" (middle_end/flambda/flambda_iterators.ml[297,10049+29]..[297,10049+40])
                                                          "body" (middle_end/flambda/flambda_iterators.ml[297,10049+41]..[297,10049+45])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/flambda_iterators.ml[298,10098+10]..[301,10177+60])
                                                Pexp_ifthenelse
                                                expression (middle_end/flambda/flambda_iterators.ml[298,10098+13]..[298,10098+41])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/flambda_iterators.ml[298,10098+22]..[298,10098+24])
                                                    Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[298,10098+22]..[298,10098+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_iterators.ml[298,10098+13]..[298,10098+21])
                                                        Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[298,10098+13]..[298,10098+21])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_iterators.ml[298,10098+25]..[298,10098+41])
                                                        Pexp_field
                                                        expression (middle_end/flambda/flambda_iterators.ml[298,10098+25]..[298,10098+36])
                                                          Pexp_ident "mutable_let" (middle_end/flambda/flambda_iterators.ml[298,10098+25]..[298,10098+36])
                                                        "body" (middle_end/flambda/flambda_iterators.ml[298,10098+37]..[298,10098+41])
                                                  ]
                                                expression (middle_end/flambda/flambda_iterators.ml[299,10145+12]..[299,10145+16])
                                                  Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[299,10145+12]..[299,10145+16])
                                                Some
                                                  expression (middle_end/flambda/flambda_iterators.ml[301,10177+12]..[301,10177+60])
                                                    Pexp_construct "Let_mutable" (middle_end/flambda/flambda_iterators.ml[301,10177+12]..[301,10177+23])
                                                    Some
                                                      expression (middle_end/flambda/flambda_iterators.ml[301,10177+24]..[301,10177+60])
                                                        Pexp_record
                                                        [
                                                          "body" (middle_end/flambda/flambda_iterators.ml[301,10177+43]..[301,10177+47])
                                                            expression (middle_end/flambda/flambda_iterators.ml[301,10177+50]..[301,10177+58])
                                                              Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[301,10177+50]..[301,10177+58])
                                                        ]
                                                        Some
                                                          expression (middle_end/flambda/flambda_iterators.ml[301,10177+26]..[301,10177+37])
                                                            Pexp_ident "mutable_let" (middle_end/flambda/flambda_iterators.ml[301,10177+26]..[301,10177+37])
                                          <case>
                                            pattern (middle_end/flambda/flambda_iterators.ml[302,10238+10]..[302,10238+30])
                                              Ppat_construct "Let_rec" (middle_end/flambda/flambda_iterators.ml[302,10238+10]..[302,10238+17])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[302,10238+18]..[302,10238+30])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/flambda_iterators.ml[302,10238+19]..[302,10238+23])
                                                      Ppat_var "defs" (middle_end/flambda/flambda_iterators.ml[302,10238+19]..[302,10238+23])
                                                    pattern (middle_end/flambda/flambda_iterators.ml[302,10238+25]..[302,10238+29])
                                                      Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[302,10238+25]..[302,10238+29])
                                                  ]
                                            expression (middle_end/flambda/flambda_iterators.ml[303,10272+10]..[313,10609+32])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/flambda_iterators.ml[303,10272+14]..[303,10272+28])
                                                    Ppat_var "done_something" (middle_end/flambda/flambda_iterators.ml[303,10272+14]..[303,10272+28])
                                                  expression (middle_end/flambda/flambda_iterators.ml[303,10272+31]..[303,10272+40])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[303,10272+31]..[303,10272+34])
                                                      Pexp_ident "ref" (middle_end/flambda/flambda_iterators.ml[303,10272+31]..[303,10272+34])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[303,10272+35]..[303,10272+40])
                                                          Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[303,10272+35]..[303,10272+40])
                                                          None
                                                    ]
                                              ]
                                              expression (middle_end/flambda/flambda_iterators.ml[304,10316+10]..[313,10609+32])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/flambda_iterators.ml[304,10316+14]..[304,10316+18])
                                                      Ppat_var "defs" (middle_end/flambda/flambda_iterators.ml[304,10316+14]..[304,10316+18])
                                                    expression (middle_end/flambda/flambda_iterators.ml[305,10337+12]..[307,10444+18])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_iterators.ml[305,10337+12]..[305,10337+20])
                                                        Pexp_ident "List.map" (middle_end/flambda/flambda_iterators.ml[305,10337+12]..[305,10337+20])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[305,10337+21]..[306,10376+67])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (middle_end/flambda/flambda_iterators.ml[305,10337+26]..[305,10337+35])
                                                              Ppat_tuple
                                                              [
                                                                pattern (middle_end/flambda/flambda_iterators.ml[305,10337+27]..[305,10337+29])
                                                                  Ppat_var "id" (middle_end/flambda/flambda_iterators.ml[305,10337+27]..[305,10337+29])
                                                                pattern (middle_end/flambda/flambda_iterators.ml[305,10337+31]..[305,10337+34])
                                                                  Ppat_var "lam" (middle_end/flambda/flambda_iterators.ml[305,10337+31]..[305,10337+34])
                                                              ]
                                                            expression (middle_end/flambda/flambda_iterators.ml[306,10376+16]..[306,10376+66])
                                                              Pexp_tuple
                                                              [
                                                                expression (middle_end/flambda/flambda_iterators.ml[306,10376+16]..[306,10376+18])
                                                                  Pexp_ident "id" (middle_end/flambda/flambda_iterators.ml[306,10376+16]..[306,10376+18])
                                                                expression (middle_end/flambda/flambda_iterators.ml[306,10376+20]..[306,10376+66])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/flambda_iterators.ml[306,10376+20]..[306,10376+44])
                                                                    Pexp_ident "aux_named_done_something" (middle_end/flambda/flambda_iterators.ml[306,10376+20]..[306,10376+44])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/flambda_iterators.ml[306,10376+45]..[306,10376+47])
Pexp_ident "id" (middle_end/flambda/flambda_iterators.ml[306,10376+45]..[306,10376+47])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/flambda_iterators.ml[306,10376+48]..[306,10376+51])
Pexp_ident "lam" (middle_end/flambda/flambda_iterators.ml[306,10376+48]..[306,10376+51])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/flambda_iterators.ml[306,10376+52]..[306,10376+66])
Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[306,10376+52]..[306,10376+66])
                                                                  ]
                                                              ]
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[307,10444+14]..[307,10444+18])
                                                            Pexp_ident "defs" (middle_end/flambda/flambda_iterators.ml[307,10444+14]..[307,10444+18])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/flambda_iterators.ml[309,10476+10]..[313,10609+32])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/flambda_iterators.ml[309,10476+14]..[309,10476+18])
                                                        Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[309,10476+14]..[309,10476+18])
                                                      expression (middle_end/flambda/flambda_iterators.ml[309,10476+21]..[309,10476+59])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/flambda_iterators.ml[309,10476+21]..[309,10476+39])
                                                          Pexp_ident "aux_done_something" (middle_end/flambda/flambda_iterators.ml[309,10476+21]..[309,10476+39])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/flambda_iterators.ml[309,10476+40]..[309,10476+44])
                                                              Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[309,10476+40]..[309,10476+44])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/flambda_iterators.ml[309,10476+45]..[309,10476+59])
                                                              Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[309,10476+45]..[309,10476+59])
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/flambda_iterators.ml[310,10539+10]..[313,10609+32])
                                                    Pexp_ifthenelse
                                                    expression (middle_end/flambda/flambda_iterators.ml[310,10539+13]..[310,10539+32])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_iterators.ml[310,10539+13]..[310,10539+16])
                                                        Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[310,10539+13]..[310,10539+16])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[310,10539+17]..[310,10539+32])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/flambda_iterators.ml[310,10539+17]..[310,10539+18])
                                                              Pexp_ident "!" (middle_end/flambda/flambda_iterators.ml[310,10539+17]..[310,10539+18])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_iterators.ml[310,10539+18]..[310,10539+32])
                                                                  Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[310,10539+18]..[310,10539+32])
                                                            ]
                                                      ]
                                                    expression (middle_end/flambda/flambda_iterators.ml[311,10577+12]..[311,10577+16])
                                                      Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[311,10577+12]..[311,10577+16])
                                                    Some
                                                      expression (middle_end/flambda/flambda_iterators.ml[313,10609+12]..[313,10609+32])
                                                        Pexp_construct "Let_rec" (middle_end/flambda/flambda_iterators.ml[313,10609+12]..[313,10609+19])
                                                        Some
                                                          expression (middle_end/flambda/flambda_iterators.ml[313,10609+20]..[313,10609+32])
                                                            Pexp_tuple
                                                            [
                                                              expression (middle_end/flambda/flambda_iterators.ml[313,10609+21]..[313,10609+25])
                                                                Pexp_ident "defs" (middle_end/flambda/flambda_iterators.ml[313,10609+21]..[313,10609+25])
                                                              expression (middle_end/flambda/flambda_iterators.ml[313,10609+27]..[313,10609+31])
                                                                Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[313,10609+27]..[313,10609+31])
                                                            ]
                                          <case>
                                            pattern (middle_end/flambda/flambda_iterators.ml[314,10642+10]..[314,10642+26])
                                              Ppat_construct "Switch" (middle_end/flambda/flambda_iterators.ml[314,10642+10]..[314,10642+16])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[314,10642+17]..[314,10642+26])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/flambda_iterators.ml[314,10642+18]..[314,10642+21])
                                                      Ppat_var "arg" (middle_end/flambda/flambda_iterators.ml[314,10642+18]..[314,10642+21])
                                                    pattern (middle_end/flambda/flambda_iterators.ml[314,10642+23]..[314,10642+25])
                                                      Ppat_var "sw" (middle_end/flambda/flambda_iterators.ml[314,10642+23]..[314,10642+25])
                                                  ]
                                            expression (middle_end/flambda/flambda_iterators.ml[315,10672+10]..[337,11391+28])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/flambda_iterators.ml[315,10672+14]..[315,10672+28])
                                                    Ppat_var "done_something" (middle_end/flambda/flambda_iterators.ml[315,10672+14]..[315,10672+28])
                                                  expression (middle_end/flambda/flambda_iterators.ml[315,10672+31]..[315,10672+40])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[315,10672+31]..[315,10672+34])
                                                      Pexp_ident "ref" (middle_end/flambda/flambda_iterators.ml[315,10672+31]..[315,10672+34])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[315,10672+35]..[315,10672+40])
                                                          Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[315,10672+35]..[315,10672+40])
                                                          None
                                                    ]
                                              ]
                                              expression (middle_end/flambda/flambda_iterators.ml[316,10716+10]..[337,11391+28])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/flambda_iterators.ml[316,10716+14]..[316,10716+16])
                                                      Ppat_var "sw" (middle_end/flambda/flambda_iterators.ml[316,10716+14]..[316,10716+16])
                                                    expression (middle_end/flambda/flambda_iterators.ml[317,10735+12]..[332,11294+13])
                                                      Pexp_record
                                                      [
                                                        "failaction" (middle_end/flambda/flambda_iterators.ml[318,10757+14]..[318,10757+24])
                                                          expression (middle_end/flambda/flambda_iterators.ml[319,10784+16]..[323,10969+19])
                                                            Pexp_match
                                                            expression (middle_end/flambda/flambda_iterators.ml[319,10784+28]..[319,10784+41])
                                                              Pexp_field
                                                              expression (middle_end/flambda/flambda_iterators.ml[319,10784+28]..[319,10784+30])
                                                                Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[319,10784+28]..[319,10784+30])
                                                              "failaction" (middle_end/flambda/flambda_iterators.ml[319,10784+31]..[319,10784+41])
                                                            [
                                                              <case>
                                                                pattern (middle_end/flambda/flambda_iterators.ml[320,10831+18]..[320,10831+22])
                                                                  Ppat_construct "None" (middle_end/flambda/flambda_iterators.ml[320,10831+18]..[320,10831+22])
                                                                  None
                                                                expression (middle_end/flambda/flambda_iterators.ml[320,10831+26]..[320,10831+30])
                                                                  Pexp_construct "None" (middle_end/flambda/flambda_iterators.ml[320,10831+26]..[320,10831+30])
                                                                  None
                                                              <case>
                                                                pattern (middle_end/flambda/flambda_iterators.ml[321,10862+18]..[321,10862+33])
                                                                  Ppat_construct "Some" (middle_end/flambda/flambda_iterators.ml[321,10862+18]..[321,10862+22])
                                                                  Some
                                                                    []
                                                                    pattern (middle_end/flambda/flambda_iterators.ml[321,10862+23]..[321,10862+33])
                                                                      Ppat_var "failaction" (middle_end/flambda/flambda_iterators.ml[321,10862+23]..[321,10862+33])
                                                                expression (middle_end/flambda/flambda_iterators.ml[322,10899+18]..[322,10899+69])
                                                                  Pexp_construct "Some" (middle_end/flambda/flambda_iterators.ml[322,10899+18]..[322,10899+22])
                                                                  Some
                                                                    expression (middle_end/flambda/flambda_iterators.ml[322,10899+23]..[322,10899+69])
                                                                      Pexp_apply
                                                                      expression (middle_end/flambda/flambda_iterators.ml[322,10899+24]..[322,10899+42])
Pexp_ident "aux_done_something" (middle_end/flambda/flambda_iterators.ml[322,10899+24]..[322,10899+42])
                                                                      [
<arg>
Nolabel
  expression (middle_end/flambda/flambda_iterators.ml[322,10899+43]..[322,10899+53])
    Pexp_ident "failaction" (middle_end/flambda/flambda_iterators.ml[322,10899+43]..[322,10899+53])
<arg>
Nolabel
  expression (middle_end/flambda/flambda_iterators.ml[322,10899+54]..[322,10899+68])
    Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[322,10899+54]..[322,10899+68])
                                                                      ]
                                                            ]
                                                        "consts" (middle_end/flambda/flambda_iterators.ml[324,10990+14]..[324,10990+20])
                                                          expression (middle_end/flambda/flambda_iterators.ml[325,11013+16]..[327,11113+27])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/flambda_iterators.ml[325,11013+16]..[325,11013+24])
                                                              Pexp_ident "List.map" (middle_end/flambda/flambda_iterators.ml[325,11013+16]..[325,11013+24])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_iterators.ml[325,11013+25]..[326,11053+59])
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (middle_end/flambda/flambda_iterators.ml[325,11013+30]..[325,11013+36])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (middle_end/flambda/flambda_iterators.ml[325,11013+31]..[325,11013+32])
Ppat_var "i" (middle_end/flambda/flambda_iterators.ml[325,11013+31]..[325,11013+32])
                                                                      pattern (middle_end/flambda/flambda_iterators.ml[325,11013+34]..[325,11013+35])
Ppat_var "v" (middle_end/flambda/flambda_iterators.ml[325,11013+34]..[325,11013+35])
                                                                    ]
                                                                  expression (middle_end/flambda/flambda_iterators.ml[326,11053+20]..[326,11053+58])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (middle_end/flambda/flambda_iterators.ml[326,11053+20]..[326,11053+21])
Pexp_ident "i" (middle_end/flambda/flambda_iterators.ml[326,11053+20]..[326,11053+21])
                                                                      expression (middle_end/flambda/flambda_iterators.ml[326,11053+23]..[326,11053+58])
Pexp_apply
expression (middle_end/flambda/flambda_iterators.ml[326,11053+23]..[326,11053+41])
  Pexp_ident "aux_done_something" (middle_end/flambda/flambda_iterators.ml[326,11053+23]..[326,11053+41])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/flambda_iterators.ml[326,11053+42]..[326,11053+43])
      Pexp_ident "v" (middle_end/flambda/flambda_iterators.ml[326,11053+42]..[326,11053+43])
  <arg>
  Nolabel
    expression (middle_end/flambda/flambda_iterators.ml[326,11053+44]..[326,11053+58])
      Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[326,11053+44]..[326,11053+58])
]
                                                                    ]
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_iterators.ml[327,11113+18]..[327,11113+27])
                                                                  Pexp_field
                                                                  expression (middle_end/flambda/flambda_iterators.ml[327,11113+18]..[327,11113+20])
                                                                    Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[327,11113+18]..[327,11113+20])
                                                                  "consts" (middle_end/flambda/flambda_iterators.ml[327,11113+21]..[327,11113+27])
                                                            ]
                                                        "blocks" (middle_end/flambda/flambda_iterators.ml[328,11142+14]..[328,11142+20])
                                                          expression (middle_end/flambda/flambda_iterators.ml[329,11165+16]..[331,11265+27])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/flambda_iterators.ml[329,11165+16]..[329,11165+24])
                                                              Pexp_ident "List.map" (middle_end/flambda/flambda_iterators.ml[329,11165+16]..[329,11165+24])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_iterators.ml[329,11165+25]..[330,11205+59])
                                                                  Pexp_fun
                                                                  Nolabel
                                                                  None
                                                                  pattern (middle_end/flambda/flambda_iterators.ml[329,11165+30]..[329,11165+36])
                                                                    Ppat_tuple
                                                                    [
                                                                      pattern (middle_end/flambda/flambda_iterators.ml[329,11165+31]..[329,11165+32])
Ppat_var "i" (middle_end/flambda/flambda_iterators.ml[329,11165+31]..[329,11165+32])
                                                                      pattern (middle_end/flambda/flambda_iterators.ml[329,11165+34]..[329,11165+35])
Ppat_var "v" (middle_end/flambda/flambda_iterators.ml[329,11165+34]..[329,11165+35])
                                                                    ]
                                                                  expression (middle_end/flambda/flambda_iterators.ml[330,11205+20]..[330,11205+58])
                                                                    Pexp_tuple
                                                                    [
                                                                      expression (middle_end/flambda/flambda_iterators.ml[330,11205+20]..[330,11205+21])
Pexp_ident "i" (middle_end/flambda/flambda_iterators.ml[330,11205+20]..[330,11205+21])
                                                                      expression (middle_end/flambda/flambda_iterators.ml[330,11205+23]..[330,11205+58])
Pexp_apply
expression (middle_end/flambda/flambda_iterators.ml[330,11205+23]..[330,11205+41])
  Pexp_ident "aux_done_something" (middle_end/flambda/flambda_iterators.ml[330,11205+23]..[330,11205+41])
[
  <arg>
  Nolabel
    expression (middle_end/flambda/flambda_iterators.ml[330,11205+42]..[330,11205+43])
      Pexp_ident "v" (middle_end/flambda/flambda_iterators.ml[330,11205+42]..[330,11205+43])
  <arg>
  Nolabel
    expression (middle_end/flambda/flambda_iterators.ml[330,11205+44]..[330,11205+58])
      Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[330,11205+44]..[330,11205+58])
]
                                                                    ]
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_iterators.ml[331,11265+18]..[331,11265+27])
                                                                  Pexp_field
                                                                  expression (middle_end/flambda/flambda_iterators.ml[331,11265+18]..[331,11265+20])
                                                                    Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[331,11265+18]..[331,11265+20])
                                                                  "blocks" (middle_end/flambda/flambda_iterators.ml[331,11265+21]..[331,11265+27])
                                                            ]
                                                      ]
                                                      Some
                                                        expression (middle_end/flambda/flambda_iterators.ml[317,10735+14]..[317,10735+16])
                                                          Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[317,10735+14]..[317,10735+16])
                                                ]
                                                expression (middle_end/flambda/flambda_iterators.ml[334,11321+10]..[337,11391+28])
                                                  Pexp_ifthenelse
                                                  expression (middle_end/flambda/flambda_iterators.ml[334,11321+13]..[334,11321+32])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[334,11321+13]..[334,11321+16])
                                                      Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[334,11321+13]..[334,11321+16])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[334,11321+17]..[334,11321+32])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_iterators.ml[334,11321+17]..[334,11321+18])
                                                            Pexp_ident "!" (middle_end/flambda/flambda_iterators.ml[334,11321+17]..[334,11321+18])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[334,11321+18]..[334,11321+32])
                                                                Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[334,11321+18]..[334,11321+32])
                                                          ]
                                                    ]
                                                  expression (middle_end/flambda/flambda_iterators.ml[335,11359+12]..[335,11359+16])
                                                    Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[335,11359+12]..[335,11359+16])
                                                  Some
                                                    expression (middle_end/flambda/flambda_iterators.ml[337,11391+12]..[337,11391+28])
                                                      Pexp_construct "Switch" (middle_end/flambda/flambda_iterators.ml[337,11391+12]..[337,11391+18])
                                                      Some
                                                        expression (middle_end/flambda/flambda_iterators.ml[337,11391+19]..[337,11391+28])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/flambda/flambda_iterators.ml[337,11391+20]..[337,11391+23])
                                                              Pexp_ident "arg" (middle_end/flambda/flambda_iterators.ml[337,11391+20]..[337,11391+23])
                                                            expression (middle_end/flambda/flambda_iterators.ml[337,11391+25]..[337,11391+27])
                                                              Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[337,11391+25]..[337,11391+27])
                                                          ]
                                          <case>
                                            pattern (middle_end/flambda/flambda_iterators.ml[338,11420+10]..[338,11420+38])
                                              Ppat_construct "String_switch" (middle_end/flambda/flambda_iterators.ml[338,11420+10]..[338,11420+23])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[338,11420+24]..[338,11420+38])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/flambda_iterators.ml[338,11420+25]..[338,11420+28])
                                                      Ppat_var "arg" (middle_end/flambda/flambda_iterators.ml[338,11420+25]..[338,11420+28])
                                                    pattern (middle_end/flambda/flambda_iterators.ml[338,11420+30]..[338,11420+32])
                                                      Ppat_var "sw" (middle_end/flambda/flambda_iterators.ml[338,11420+30]..[338,11420+32])
                                                    pattern (middle_end/flambda/flambda_iterators.ml[338,11420+34]..[338,11420+37])
                                                      Ppat_var "def" (middle_end/flambda/flambda_iterators.ml[338,11420+34]..[338,11420+37])
                                                  ]
                                            expression (middle_end/flambda/flambda_iterators.ml[339,11462+10]..[351,11845+39])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/flambda_iterators.ml[339,11462+14]..[339,11462+28])
                                                    Ppat_var "done_something" (middle_end/flambda/flambda_iterators.ml[339,11462+14]..[339,11462+28])
                                                  expression (middle_end/flambda/flambda_iterators.ml[339,11462+31]..[339,11462+40])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[339,11462+31]..[339,11462+34])
                                                      Pexp_ident "ref" (middle_end/flambda/flambda_iterators.ml[339,11462+31]..[339,11462+34])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[339,11462+35]..[339,11462+40])
                                                          Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[339,11462+35]..[339,11462+40])
                                                          None
                                                    ]
                                              ]
                                              expression (middle_end/flambda/flambda_iterators.ml[340,11506+10]..[351,11845+39])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/flambda_iterators.ml[340,11506+14]..[340,11506+16])
                                                      Ppat_var "sw" (middle_end/flambda/flambda_iterators.ml[340,11506+14]..[340,11506+16])
                                                    expression (middle_end/flambda/flambda_iterators.ml[341,11525+12]..[341,11525+78])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_iterators.ml[341,11525+12]..[341,11525+20])
                                                        Pexp_ident "List.map" (middle_end/flambda/flambda_iterators.ml[341,11525+12]..[341,11525+20])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[341,11525+21]..[341,11525+75])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (middle_end/flambda/flambda_iterators.ml[341,11525+26]..[341,11525+32])
                                                              Ppat_tuple
                                                              [
                                                                pattern (middle_end/flambda/flambda_iterators.ml[341,11525+27]..[341,11525+28])
                                                                  Ppat_var "i" (middle_end/flambda/flambda_iterators.ml[341,11525+27]..[341,11525+28])
                                                                pattern (middle_end/flambda/flambda_iterators.ml[341,11525+30]..[341,11525+31])
                                                                  Ppat_var "v" (middle_end/flambda/flambda_iterators.ml[341,11525+30]..[341,11525+31])
                                                              ]
                                                            expression (middle_end/flambda/flambda_iterators.ml[341,11525+36]..[341,11525+74])
                                                              Pexp_tuple
                                                              [
                                                                expression (middle_end/flambda/flambda_iterators.ml[341,11525+36]..[341,11525+37])
                                                                  Pexp_ident "i" (middle_end/flambda/flambda_iterators.ml[341,11525+36]..[341,11525+37])
                                                                expression (middle_end/flambda/flambda_iterators.ml[341,11525+39]..[341,11525+74])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/flambda_iterators.ml[341,11525+39]..[341,11525+57])
                                                                    Pexp_ident "aux_done_something" (middle_end/flambda/flambda_iterators.ml[341,11525+39]..[341,11525+57])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/flambda_iterators.ml[341,11525+58]..[341,11525+59])
Pexp_ident "v" (middle_end/flambda/flambda_iterators.ml[341,11525+58]..[341,11525+59])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/flambda_iterators.ml[341,11525+60]..[341,11525+74])
Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[341,11525+60]..[341,11525+74])
                                                                  ]
                                                              ]
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[341,11525+76]..[341,11525+78])
                                                            Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[341,11525+76]..[341,11525+78])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/flambda_iterators.ml[343,11617+10]..[351,11845+39])
                                                  Pexp_let Nonrec
                                                  [
                                                    <def>
                                                      pattern (middle_end/flambda/flambda_iterators.ml[343,11617+14]..[343,11617+17])
                                                        Ppat_var "def" (middle_end/flambda/flambda_iterators.ml[343,11617+14]..[343,11617+17])
                                                      expression (middle_end/flambda/flambda_iterators.ml[344,11637+12]..[346,11691+70])
                                                        Pexp_match
                                                        expression (middle_end/flambda/flambda_iterators.ml[344,11637+18]..[344,11637+21])
                                                          Pexp_ident "def" (middle_end/flambda/flambda_iterators.ml[344,11637+18]..[344,11637+21])
                                                        [
                                                          <case>
                                                            pattern (middle_end/flambda/flambda_iterators.ml[345,11664+14]..[345,11664+18])
                                                              Ppat_construct "None" (middle_end/flambda/flambda_iterators.ml[345,11664+14]..[345,11664+18])
                                                              None
                                                            expression (middle_end/flambda/flambda_iterators.ml[345,11664+22]..[345,11664+26])
                                                              Pexp_construct "None" (middle_end/flambda/flambda_iterators.ml[345,11664+22]..[345,11664+26])
                                                              None
                                                          <case>
                                                            pattern (middle_end/flambda/flambda_iterators.ml[346,11691+14]..[346,11691+22])
                                                              Ppat_construct "Some" (middle_end/flambda/flambda_iterators.ml[346,11691+14]..[346,11691+18])
                                                              Some
                                                                []
                                                                pattern (middle_end/flambda/flambda_iterators.ml[346,11691+19]..[346,11691+22])
                                                                  Ppat_var "def" (middle_end/flambda/flambda_iterators.ml[346,11691+19]..[346,11691+22])
                                                            expression (middle_end/flambda/flambda_iterators.ml[346,11691+26]..[346,11691+70])
                                                              Pexp_construct "Some" (middle_end/flambda/flambda_iterators.ml[346,11691+26]..[346,11691+30])
                                                              Some
                                                                expression (middle_end/flambda/flambda_iterators.ml[346,11691+31]..[346,11691+70])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/flambda_iterators.ml[346,11691+32]..[346,11691+50])
                                                                    Pexp_ident "aux_done_something" (middle_end/flambda/flambda_iterators.ml[346,11691+32]..[346,11691+50])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/flambda_iterators.ml[346,11691+51]..[346,11691+54])
Pexp_ident "def" (middle_end/flambda/flambda_iterators.ml[346,11691+51]..[346,11691+54])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/flambda_iterators.ml[346,11691+55]..[346,11691+69])
Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[346,11691+55]..[346,11691+69])
                                                                  ]
                                                        ]
                                                  ]
                                                  expression (middle_end/flambda/flambda_iterators.ml[348,11775+10]..[351,11845+39])
                                                    Pexp_ifthenelse
                                                    expression (middle_end/flambda/flambda_iterators.ml[348,11775+13]..[348,11775+32])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_iterators.ml[348,11775+13]..[348,11775+16])
                                                        Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[348,11775+13]..[348,11775+16])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[348,11775+17]..[348,11775+32])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/flambda_iterators.ml[348,11775+17]..[348,11775+18])
                                                              Pexp_ident "!" (middle_end/flambda/flambda_iterators.ml[348,11775+17]..[348,11775+18])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_iterators.ml[348,11775+18]..[348,11775+32])
                                                                  Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[348,11775+18]..[348,11775+32])
                                                            ]
                                                      ]
                                                    expression (middle_end/flambda/flambda_iterators.ml[349,11813+12]..[349,11813+16])
                                                      Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[349,11813+12]..[349,11813+16])
                                                    Some
                                                      expression (middle_end/flambda/flambda_iterators.ml[351,11845+12]..[351,11845+39])
                                                        Pexp_construct "String_switch" (middle_end/flambda/flambda_iterators.ml[351,11845+12]..[351,11845+25])
                                                        Some
                                                          expression (middle_end/flambda/flambda_iterators.ml[351,11845+25]..[351,11845+39])
                                                            Pexp_tuple
                                                            [
                                                              expression (middle_end/flambda/flambda_iterators.ml[351,11845+26]..[351,11845+29])
                                                                Pexp_ident "arg" (middle_end/flambda/flambda_iterators.ml[351,11845+26]..[351,11845+29])
                                                              expression (middle_end/flambda/flambda_iterators.ml[351,11845+31]..[351,11845+33])
                                                                Pexp_ident "sw" (middle_end/flambda/flambda_iterators.ml[351,11845+31]..[351,11845+33])
                                                              expression (middle_end/flambda/flambda_iterators.ml[351,11845+35]..[351,11845+38])
                                                                Pexp_ident "def" (middle_end/flambda/flambda_iterators.ml[351,11845+35]..[351,11845+38])
                                                            ]
                                          <case>
                                            pattern (middle_end/flambda/flambda_iterators.ml[352,11885+10]..[352,11885+47])
                                              Ppat_construct "Static_catch" (middle_end/flambda/flambda_iterators.ml[352,11885+10]..[352,11885+22])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[352,11885+23]..[352,11885+47])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/flambda_iterators.ml[352,11885+24]..[352,11885+25])
                                                      Ppat_var "i" (middle_end/flambda/flambda_iterators.ml[352,11885+24]..[352,11885+25])
                                                    pattern (middle_end/flambda/flambda_iterators.ml[352,11885+27]..[352,11885+31])
                                                      Ppat_var "vars" (middle_end/flambda/flambda_iterators.ml[352,11885+27]..[352,11885+31])
                                                    pattern (middle_end/flambda/flambda_iterators.ml[352,11885+33]..[352,11885+37])
                                                      Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[352,11885+33]..[352,11885+37])
                                                    pattern (middle_end/flambda/flambda_iterators.ml[352,11885+39]..[352,11885+46])
                                                      Ppat_var "handler" (middle_end/flambda/flambda_iterators.ml[352,11885+39]..[352,11885+46])
                                                  ]
                                            expression (middle_end/flambda/flambda_iterators.ml[353,11936+10]..[358,12109+57])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/flambda_iterators.ml[353,11936+14]..[353,11936+22])
                                                    Ppat_var "new_body" (middle_end/flambda/flambda_iterators.ml[353,11936+14]..[353,11936+22])
                                                  expression (middle_end/flambda/flambda_iterators.ml[353,11936+25]..[353,11936+33])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[353,11936+25]..[353,11936+28])
                                                      Pexp_ident "aux" (middle_end/flambda/flambda_iterators.ml[353,11936+25]..[353,11936+28])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[353,11936+29]..[353,11936+33])
                                                          Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[353,11936+29]..[353,11936+33])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/flambda_iterators.ml[354,11973+10]..[358,12109+57])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/flambda_iterators.ml[354,11973+14]..[354,11973+25])
                                                      Ppat_var "new_handler" (middle_end/flambda/flambda_iterators.ml[354,11973+14]..[354,11973+25])
                                                    expression (middle_end/flambda/flambda_iterators.ml[354,11973+28]..[354,11973+39])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_iterators.ml[354,11973+28]..[354,11973+31])
                                                        Pexp_ident "aux" (middle_end/flambda/flambda_iterators.ml[354,11973+28]..[354,11973+31])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[354,11973+32]..[354,11973+39])
                                                            Pexp_ident "handler" (middle_end/flambda/flambda_iterators.ml[354,11973+32]..[354,11973+39])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/flambda_iterators.ml[355,12016+10]..[358,12109+57])
                                                  Pexp_ifthenelse
                                                  expression (middle_end/flambda/flambda_iterators.ml[355,12016+13]..[355,12016+55])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[355,12016+30]..[355,12016+32])
                                                      Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[355,12016+30]..[355,12016+32])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[355,12016+13]..[355,12016+29])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_iterators.ml[355,12016+22]..[355,12016+24])
                                                            Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[355,12016+22]..[355,12016+24])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[355,12016+13]..[355,12016+21])
                                                                Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[355,12016+13]..[355,12016+21])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[355,12016+25]..[355,12016+29])
                                                                Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[355,12016+25]..[355,12016+29])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[355,12016+33]..[355,12016+55])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_iterators.ml[355,12016+45]..[355,12016+47])
                                                            Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[355,12016+45]..[355,12016+47])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[355,12016+33]..[355,12016+44])
                                                                Pexp_ident "new_handler" (middle_end/flambda/flambda_iterators.ml[355,12016+33]..[355,12016+44])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[355,12016+48]..[355,12016+55])
                                                                Pexp_ident "handler" (middle_end/flambda/flambda_iterators.ml[355,12016+48]..[355,12016+55])
                                                          ]
                                                    ]
                                                  expression (middle_end/flambda/flambda_iterators.ml[356,12077+12]..[356,12077+16])
                                                    Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[356,12077+12]..[356,12077+16])
                                                  Some
                                                    expression (middle_end/flambda/flambda_iterators.ml[358,12109+12]..[358,12109+57])
                                                      Pexp_construct "Static_catch" (middle_end/flambda/flambda_iterators.ml[358,12109+12]..[358,12109+24])
                                                      Some
                                                        expression (middle_end/flambda/flambda_iterators.ml[358,12109+25]..[358,12109+57])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/flambda/flambda_iterators.ml[358,12109+26]..[358,12109+27])
                                                              Pexp_ident "i" (middle_end/flambda/flambda_iterators.ml[358,12109+26]..[358,12109+27])
                                                            expression (middle_end/flambda/flambda_iterators.ml[358,12109+29]..[358,12109+33])
                                                              Pexp_ident "vars" (middle_end/flambda/flambda_iterators.ml[358,12109+29]..[358,12109+33])
                                                            expression (middle_end/flambda/flambda_iterators.ml[358,12109+35]..[358,12109+43])
                                                              Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[358,12109+35]..[358,12109+43])
                                                            expression (middle_end/flambda/flambda_iterators.ml[358,12109+45]..[358,12109+56])
                                                              Pexp_ident "new_handler" (middle_end/flambda/flambda_iterators.ml[358,12109+45]..[358,12109+56])
                                                          ]
                                          <case>
                                            pattern (middle_end/flambda/flambda_iterators.ml[359,12167+10]..[359,12167+37])
                                              Ppat_construct "Try_with" (middle_end/flambda/flambda_iterators.ml[359,12167+10]..[359,12167+18])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[359,12167+18]..[359,12167+37])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/flambda_iterators.ml[359,12167+19]..[359,12167+23])
                                                      Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[359,12167+19]..[359,12167+23])
                                                    pattern (middle_end/flambda/flambda_iterators.ml[359,12167+25]..[359,12167+27])
                                                      Ppat_var "id" (middle_end/flambda/flambda_iterators.ml[359,12167+25]..[359,12167+27])
                                                    pattern (middle_end/flambda/flambda_iterators.ml[359,12167+29]..[359,12167+36])
                                                      Ppat_var "handler" (middle_end/flambda/flambda_iterators.ml[359,12167+29]..[359,12167+36])
                                                  ]
                                            expression (middle_end/flambda/flambda_iterators.ml[360,12208+10]..[365,12381+48])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/flambda_iterators.ml[360,12208+14]..[360,12208+22])
                                                    Ppat_var "new_body" (middle_end/flambda/flambda_iterators.ml[360,12208+14]..[360,12208+22])
                                                  expression (middle_end/flambda/flambda_iterators.ml[360,12208+25]..[360,12208+33])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[360,12208+25]..[360,12208+28])
                                                      Pexp_ident "aux" (middle_end/flambda/flambda_iterators.ml[360,12208+25]..[360,12208+28])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[360,12208+29]..[360,12208+33])
                                                          Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[360,12208+29]..[360,12208+33])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/flambda_iterators.ml[361,12245+10]..[365,12381+48])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/flambda_iterators.ml[361,12245+14]..[361,12245+25])
                                                      Ppat_var "new_handler" (middle_end/flambda/flambda_iterators.ml[361,12245+14]..[361,12245+25])
                                                    expression (middle_end/flambda/flambda_iterators.ml[361,12245+28]..[361,12245+39])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_iterators.ml[361,12245+28]..[361,12245+31])
                                                        Pexp_ident "aux" (middle_end/flambda/flambda_iterators.ml[361,12245+28]..[361,12245+31])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[361,12245+32]..[361,12245+39])
                                                            Pexp_ident "handler" (middle_end/flambda/flambda_iterators.ml[361,12245+32]..[361,12245+39])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/flambda_iterators.ml[362,12288+10]..[365,12381+48])
                                                  Pexp_ifthenelse
                                                  expression (middle_end/flambda/flambda_iterators.ml[362,12288+13]..[362,12288+55])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[362,12288+30]..[362,12288+32])
                                                      Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[362,12288+30]..[362,12288+32])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[362,12288+13]..[362,12288+29])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_iterators.ml[362,12288+22]..[362,12288+24])
                                                            Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[362,12288+22]..[362,12288+24])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[362,12288+13]..[362,12288+21])
                                                                Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[362,12288+13]..[362,12288+21])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[362,12288+25]..[362,12288+29])
                                                                Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[362,12288+25]..[362,12288+29])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[362,12288+33]..[362,12288+55])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_iterators.ml[362,12288+45]..[362,12288+47])
                                                            Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[362,12288+45]..[362,12288+47])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[362,12288+33]..[362,12288+44])
                                                                Pexp_ident "new_handler" (middle_end/flambda/flambda_iterators.ml[362,12288+33]..[362,12288+44])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[362,12288+48]..[362,12288+55])
                                                                Pexp_ident "handler" (middle_end/flambda/flambda_iterators.ml[362,12288+48]..[362,12288+55])
                                                          ]
                                                    ]
                                                  expression (middle_end/flambda/flambda_iterators.ml[363,12349+12]..[363,12349+16])
                                                    Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[363,12349+12]..[363,12349+16])
                                                  Some
                                                    expression (middle_end/flambda/flambda_iterators.ml[365,12381+12]..[365,12381+48])
                                                      Pexp_construct "Try_with" (middle_end/flambda/flambda_iterators.ml[365,12381+12]..[365,12381+20])
                                                      Some
                                                        expression (middle_end/flambda/flambda_iterators.ml[365,12381+21]..[365,12381+48])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/flambda/flambda_iterators.ml[365,12381+22]..[365,12381+30])
                                                              Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[365,12381+22]..[365,12381+30])
                                                            expression (middle_end/flambda/flambda_iterators.ml[365,12381+32]..[365,12381+34])
                                                              Pexp_ident "id" (middle_end/flambda/flambda_iterators.ml[365,12381+32]..[365,12381+34])
                                                            expression (middle_end/flambda/flambda_iterators.ml[365,12381+36]..[365,12381+47])
                                                              Pexp_ident "new_handler" (middle_end/flambda/flambda_iterators.ml[365,12381+36]..[365,12381+47])
                                                          ]
                                          <case>
                                            pattern (middle_end/flambda/flambda_iterators.ml[366,12430+10]..[366,12430+41])
                                              Ppat_construct "If_then_else" (middle_end/flambda/flambda_iterators.ml[366,12430+10]..[366,12430+22])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[366,12430+23]..[366,12430+41])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/flambda_iterators.ml[366,12430+24]..[366,12430+27])
                                                      Ppat_var "arg" (middle_end/flambda/flambda_iterators.ml[366,12430+24]..[366,12430+27])
                                                    pattern (middle_end/flambda/flambda_iterators.ml[366,12430+29]..[366,12430+33])
                                                      Ppat_var "ifso" (middle_end/flambda/flambda_iterators.ml[366,12430+29]..[366,12430+33])
                                                    pattern (middle_end/flambda/flambda_iterators.ml[366,12430+35]..[366,12430+40])
                                                      Ppat_var "ifnot" (middle_end/flambda/flambda_iterators.ml[366,12430+35]..[366,12430+40])
                                                  ]
                                            expression (middle_end/flambda/flambda_iterators.ml[367,12475+10]..[372,12640+51])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/flambda_iterators.ml[367,12475+14]..[367,12475+22])
                                                    Ppat_var "new_ifso" (middle_end/flambda/flambda_iterators.ml[367,12475+14]..[367,12475+22])
                                                  expression (middle_end/flambda/flambda_iterators.ml[367,12475+25]..[367,12475+33])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[367,12475+25]..[367,12475+28])
                                                      Pexp_ident "aux" (middle_end/flambda/flambda_iterators.ml[367,12475+25]..[367,12475+28])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[367,12475+29]..[367,12475+33])
                                                          Pexp_ident "ifso" (middle_end/flambda/flambda_iterators.ml[367,12475+29]..[367,12475+33])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/flambda_iterators.ml[368,12512+10]..[372,12640+51])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/flambda_iterators.ml[368,12512+14]..[368,12512+23])
                                                      Ppat_var "new_ifnot" (middle_end/flambda/flambda_iterators.ml[368,12512+14]..[368,12512+23])
                                                    expression (middle_end/flambda/flambda_iterators.ml[368,12512+26]..[368,12512+35])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_iterators.ml[368,12512+26]..[368,12512+29])
                                                        Pexp_ident "aux" (middle_end/flambda/flambda_iterators.ml[368,12512+26]..[368,12512+29])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[368,12512+30]..[368,12512+35])
                                                            Pexp_ident "ifnot" (middle_end/flambda/flambda_iterators.ml[368,12512+30]..[368,12512+35])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/flambda_iterators.ml[369,12551+10]..[372,12640+51])
                                                  Pexp_ifthenelse
                                                  expression (middle_end/flambda/flambda_iterators.ml[369,12551+13]..[369,12551+51])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[369,12551+30]..[369,12551+32])
                                                      Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[369,12551+30]..[369,12551+32])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[369,12551+13]..[369,12551+29])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_iterators.ml[369,12551+22]..[369,12551+24])
                                                            Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[369,12551+22]..[369,12551+24])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[369,12551+13]..[369,12551+21])
                                                                Pexp_ident "new_ifso" (middle_end/flambda/flambda_iterators.ml[369,12551+13]..[369,12551+21])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[369,12551+25]..[369,12551+29])
                                                                Pexp_ident "ifso" (middle_end/flambda/flambda_iterators.ml[369,12551+25]..[369,12551+29])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[369,12551+33]..[369,12551+51])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_iterators.ml[369,12551+43]..[369,12551+45])
                                                            Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[369,12551+43]..[369,12551+45])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[369,12551+33]..[369,12551+42])
                                                                Pexp_ident "new_ifnot" (middle_end/flambda/flambda_iterators.ml[369,12551+33]..[369,12551+42])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[369,12551+46]..[369,12551+51])
                                                                Pexp_ident "ifnot" (middle_end/flambda/flambda_iterators.ml[369,12551+46]..[369,12551+51])
                                                          ]
                                                    ]
                                                  expression (middle_end/flambda/flambda_iterators.ml[370,12608+12]..[370,12608+16])
                                                    Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[370,12608+12]..[370,12608+16])
                                                  Some
                                                    expression (middle_end/flambda/flambda_iterators.ml[372,12640+12]..[372,12640+51])
                                                      Pexp_construct "If_then_else" (middle_end/flambda/flambda_iterators.ml[372,12640+12]..[372,12640+24])
                                                      Some
                                                        expression (middle_end/flambda/flambda_iterators.ml[372,12640+25]..[372,12640+51])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/flambda/flambda_iterators.ml[372,12640+26]..[372,12640+29])
                                                              Pexp_ident "arg" (middle_end/flambda/flambda_iterators.ml[372,12640+26]..[372,12640+29])
                                                            expression (middle_end/flambda/flambda_iterators.ml[372,12640+31]..[372,12640+39])
                                                              Pexp_ident "new_ifso" (middle_end/flambda/flambda_iterators.ml[372,12640+31]..[372,12640+39])
                                                            expression (middle_end/flambda/flambda_iterators.ml[372,12640+41]..[372,12640+50])
                                                              Pexp_ident "new_ifnot" (middle_end/flambda/flambda_iterators.ml[372,12640+41]..[372,12640+50])
                                                          ]
                                          <case>
                                            pattern (middle_end/flambda/flambda_iterators.ml[373,12692+10]..[373,12692+28])
                                              Ppat_construct "While" (middle_end/flambda/flambda_iterators.ml[373,12692+10]..[373,12692+15])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[373,12692+16]..[373,12692+28])
                                                  Ppat_tuple
                                                  [
                                                    pattern (middle_end/flambda/flambda_iterators.ml[373,12692+17]..[373,12692+21])
                                                      Ppat_var "cond" (middle_end/flambda/flambda_iterators.ml[373,12692+17]..[373,12692+21])
                                                    pattern (middle_end/flambda/flambda_iterators.ml[373,12692+23]..[373,12692+27])
                                                      Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[373,12692+23]..[373,12692+27])
                                                  ]
                                            expression (middle_end/flambda/flambda_iterators.ml[374,12724+10]..[379,12885+38])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/flambda_iterators.ml[374,12724+14]..[374,12724+22])
                                                    Ppat_var "new_cond" (middle_end/flambda/flambda_iterators.ml[374,12724+14]..[374,12724+22])
                                                  expression (middle_end/flambda/flambda_iterators.ml[374,12724+25]..[374,12724+33])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[374,12724+25]..[374,12724+28])
                                                      Pexp_ident "aux" (middle_end/flambda/flambda_iterators.ml[374,12724+25]..[374,12724+28])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[374,12724+29]..[374,12724+33])
                                                          Pexp_ident "cond" (middle_end/flambda/flambda_iterators.ml[374,12724+29]..[374,12724+33])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/flambda_iterators.ml[375,12761+10]..[379,12885+38])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/flambda_iterators.ml[375,12761+14]..[375,12761+22])
                                                      Ppat_var "new_body" (middle_end/flambda/flambda_iterators.ml[375,12761+14]..[375,12761+22])
                                                    expression (middle_end/flambda/flambda_iterators.ml[375,12761+25]..[375,12761+33])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_iterators.ml[375,12761+25]..[375,12761+28])
                                                        Pexp_ident "aux" (middle_end/flambda/flambda_iterators.ml[375,12761+25]..[375,12761+28])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[375,12761+29]..[375,12761+33])
                                                            Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[375,12761+29]..[375,12761+33])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/flambda_iterators.ml[376,12798+10]..[379,12885+38])
                                                  Pexp_ifthenelse
                                                  expression (middle_end/flambda/flambda_iterators.ml[376,12798+13]..[376,12798+49])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[376,12798+30]..[376,12798+32])
                                                      Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[376,12798+30]..[376,12798+32])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[376,12798+13]..[376,12798+29])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_iterators.ml[376,12798+22]..[376,12798+24])
                                                            Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[376,12798+22]..[376,12798+24])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[376,12798+13]..[376,12798+21])
                                                                Pexp_ident "new_cond" (middle_end/flambda/flambda_iterators.ml[376,12798+13]..[376,12798+21])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[376,12798+25]..[376,12798+29])
                                                                Pexp_ident "cond" (middle_end/flambda/flambda_iterators.ml[376,12798+25]..[376,12798+29])
                                                          ]
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[376,12798+33]..[376,12798+49])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_iterators.ml[376,12798+42]..[376,12798+44])
                                                            Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[376,12798+42]..[376,12798+44])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[376,12798+33]..[376,12798+41])
                                                                Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[376,12798+33]..[376,12798+41])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[376,12798+45]..[376,12798+49])
                                                                Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[376,12798+45]..[376,12798+49])
                                                          ]
                                                    ]
                                                  expression (middle_end/flambda/flambda_iterators.ml[377,12853+12]..[377,12853+16])
                                                    Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[377,12853+12]..[377,12853+16])
                                                  Some
                                                    expression (middle_end/flambda/flambda_iterators.ml[379,12885+12]..[379,12885+38])
                                                      Pexp_construct "While" (middle_end/flambda/flambda_iterators.ml[379,12885+12]..[379,12885+17])
                                                      Some
                                                        expression (middle_end/flambda/flambda_iterators.ml[379,12885+18]..[379,12885+38])
                                                          Pexp_tuple
                                                          [
                                                            expression (middle_end/flambda/flambda_iterators.ml[379,12885+19]..[379,12885+27])
                                                              Pexp_ident "new_cond" (middle_end/flambda/flambda_iterators.ml[379,12885+19]..[379,12885+27])
                                                            expression (middle_end/flambda/flambda_iterators.ml[379,12885+29]..[379,12885+37])
                                                              Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[379,12885+29]..[379,12885+37])
                                                          ]
                                          <case>
                                            pattern (middle_end/flambda/flambda_iterators.ml[380,12924+10]..[380,12924+67])
                                              Ppat_construct "For" (middle_end/flambda/flambda_iterators.ml[380,12924+10]..[380,12924+13])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[380,12924+14]..[380,12924+67])
                                                  Ppat_record Closed
                                                  [
                                                    "bound_var" (middle_end/flambda/flambda_iterators.ml[380,12924+16]..[380,12924+25]) ghost
                                                      pattern (middle_end/flambda/flambda_iterators.ml[380,12924+16]..[380,12924+25])
                                                        Ppat_var "bound_var" (middle_end/flambda/flambda_iterators.ml[380,12924+16]..[380,12924+25])
                                                    "from_value" (middle_end/flambda/flambda_iterators.ml[380,12924+27]..[380,12924+37]) ghost
                                                      pattern (middle_end/flambda/flambda_iterators.ml[380,12924+27]..[380,12924+37])
                                                        Ppat_var "from_value" (middle_end/flambda/flambda_iterators.ml[380,12924+27]..[380,12924+37])
                                                    "to_value" (middle_end/flambda/flambda_iterators.ml[380,12924+39]..[380,12924+47]) ghost
                                                      pattern (middle_end/flambda/flambda_iterators.ml[380,12924+39]..[380,12924+47])
                                                        Ppat_var "to_value" (middle_end/flambda/flambda_iterators.ml[380,12924+39]..[380,12924+47])
                                                    "direction" (middle_end/flambda/flambda_iterators.ml[380,12924+49]..[380,12924+58]) ghost
                                                      pattern (middle_end/flambda/flambda_iterators.ml[380,12924+49]..[380,12924+58])
                                                        Ppat_var "direction" (middle_end/flambda/flambda_iterators.ml[380,12924+49]..[380,12924+58])
                                                    "body" (middle_end/flambda/flambda_iterators.ml[380,12924+60]..[380,12924+64]) ghost
                                                      pattern (middle_end/flambda/flambda_iterators.ml[380,12924+60]..[380,12924+64])
                                                        Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[380,12924+60]..[380,12924+64])
                                                  ]
                                            expression (middle_end/flambda/flambda_iterators.ml[381,12995+10]..[386,13161+32])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/flambda_iterators.ml[381,12995+14]..[381,12995+22])
                                                    Ppat_var "new_body" (middle_end/flambda/flambda_iterators.ml[381,12995+14]..[381,12995+22])
                                                  expression (middle_end/flambda/flambda_iterators.ml[381,12995+25]..[381,12995+33])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[381,12995+25]..[381,12995+28])
                                                      Pexp_ident "aux" (middle_end/flambda/flambda_iterators.ml[381,12995+25]..[381,12995+28])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[381,12995+29]..[381,12995+33])
                                                          Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[381,12995+29]..[381,12995+33])
                                                    ]
                                              ]
                                              expression (middle_end/flambda/flambda_iterators.ml[382,13032+10]..[386,13161+32])
                                                Pexp_ifthenelse
                                                expression (middle_end/flambda/flambda_iterators.ml[382,13032+13]..[382,13032+29])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/flambda_iterators.ml[382,13032+22]..[382,13032+24])
                                                    Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[382,13032+22]..[382,13032+24])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_iterators.ml[382,13032+13]..[382,13032+21])
                                                        Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[382,13032+13]..[382,13032+21])
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_iterators.ml[382,13032+25]..[382,13032+29])
                                                        Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[382,13032+25]..[382,13032+29])
                                                  ]
                                                expression (middle_end/flambda/flambda_iterators.ml[383,13067+12]..[383,13067+16])
                                                  Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[383,13067+12]..[383,13067+16])
                                                Some
                                                  expression (middle_end/flambda/flambda_iterators.ml[385,13099+12]..[386,13161+32])
                                                    Pexp_construct "For" (middle_end/flambda/flambda_iterators.ml[385,13099+12]..[385,13099+15])
                                                    Some
                                                      expression (middle_end/flambda/flambda_iterators.ml[385,13099+16]..[386,13161+32])
                                                        Pexp_record
                                                        [
                                                          "bound_var" (middle_end/flambda/flambda_iterators.ml[385,13099+18]..[385,13099+27]) ghost
                                                            expression (middle_end/flambda/flambda_iterators.ml[385,13099+18]..[385,13099+27])
                                                              Pexp_ident "bound_var" (middle_end/flambda/flambda_iterators.ml[385,13099+18]..[385,13099+27])
                                                          "from_value" (middle_end/flambda/flambda_iterators.ml[385,13099+29]..[385,13099+39]) ghost
                                                            expression (middle_end/flambda/flambda_iterators.ml[385,13099+29]..[385,13099+39])
                                                              Pexp_ident "from_value" (middle_end/flambda/flambda_iterators.ml[385,13099+29]..[385,13099+39])
                                                          "to_value" (middle_end/flambda/flambda_iterators.ml[385,13099+41]..[385,13099+49]) ghost
                                                            expression (middle_end/flambda/flambda_iterators.ml[385,13099+41]..[385,13099+49])
                                                              Pexp_ident "to_value" (middle_end/flambda/flambda_iterators.ml[385,13099+41]..[385,13099+49])
                                                          "direction" (middle_end/flambda/flambda_iterators.ml[385,13099+51]..[385,13099+60]) ghost
                                                            expression (middle_end/flambda/flambda_iterators.ml[385,13099+51]..[385,13099+60])
                                                              Pexp_ident "direction" (middle_end/flambda/flambda_iterators.ml[385,13099+51]..[385,13099+60])
                                                          "body" (middle_end/flambda/flambda_iterators.ml[386,13161+14]..[386,13161+18])
                                                            expression (middle_end/flambda/flambda_iterators.ml[386,13161+21]..[386,13161+29])
                                                              Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[386,13161+21]..[386,13161+29])
                                                        ]
                                                        None
                                        ]
                                      core_type (middle_end/flambda/flambda_iterators.ml[291,9828+16]..[291,9828+25])
                                        Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_iterators.ml[291,9828+16]..[291,9828+25])
                                        []
                                ]
                                expression (middle_end/flambda/flambda_iterators.ml[388,13203+6]..[388,13203+11])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_iterators.ml[388,13203+6]..[388,13203+7])
                                    Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[388,13203+6]..[388,13203+7])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[388,13203+8]..[388,13203+11])
                                        Pexp_ident "exp" (middle_end/flambda/flambda_iterators.ml[388,13203+8]..[388,13203+11])
                                  ]
                          ]
                    <def>
                      pattern (middle_end/flambda/flambda_iterators.ml[389,13215+6]..[389,13215+24])
                        Ppat_var "aux_done_something" (middle_end/flambda/flambda_iterators.ml[389,13215+6]..[389,13215+24])
                      expression (middle_end/flambda/flambda_iterators.ml[389,13215+25]..[394,13372+12]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/flambda_iterators.ml[389,13215+25]..[389,13215+29])
                          Ppat_var "expr" (middle_end/flambda/flambda_iterators.ml[389,13215+25]..[389,13215+29])
                        expression (middle_end/flambda/flambda_iterators.ml[389,13215+30]..[394,13372+12]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/flambda_iterators.ml[389,13215+30]..[389,13215+44])
                            Ppat_var "done_something" (middle_end/flambda/flambda_iterators.ml[389,13215+30]..[389,13215+44])
                          expression (middle_end/flambda/flambda_iterators.ml[390,13262+4]..[394,13372+12])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/flambda_iterators.ml[390,13262+8]..[390,13262+16])
                                  Ppat_var "new_expr" (middle_end/flambda/flambda_iterators.ml[390,13262+8]..[390,13262+16])
                                expression (middle_end/flambda/flambda_iterators.ml[390,13262+19]..[390,13262+27])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_iterators.ml[390,13262+19]..[390,13262+22])
                                    Pexp_ident "aux" (middle_end/flambda/flambda_iterators.ml[390,13262+19]..[390,13262+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[390,13262+23]..[390,13262+27])
                                        Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[390,13262+23]..[390,13262+27])
                                  ]
                            ]
                            expression (middle_end/flambda/flambda_iterators.ml[391,13293+4]..[394,13372+12])
                              Pexp_sequence
                              expression (middle_end/flambda/flambda_iterators.ml[391,13293+4]..[393,13363+7])
                                Pexp_ifthenelse
                                expression (middle_end/flambda/flambda_iterators.ml[391,13293+7]..[391,13293+29])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_iterators.ml[391,13293+7]..[391,13293+10])
                                    Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[391,13293+7]..[391,13293+10])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[391,13293+11]..[391,13293+29])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[391,13293+21]..[391,13293+23])
                                          Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[391,13293+21]..[391,13293+23])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[391,13293+12]..[391,13293+20])
                                              Pexp_ident "new_expr" (middle_end/flambda/flambda_iterators.ml[391,13293+12]..[391,13293+20])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[391,13293+24]..[391,13293+28])
                                              Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[391,13293+24]..[391,13293+28])
                                        ]
                                  ]
                                expression (middle_end/flambda/flambda_iterators.ml[391,13293+35]..[393,13363+7])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_iterators.ml[392,13334+21]..[392,13334+23])
                                    Pexp_ident ":=" (middle_end/flambda/flambda_iterators.ml[392,13334+21]..[392,13334+23])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[392,13334+6]..[392,13334+20])
                                        Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[392,13334+6]..[392,13334+20])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[392,13334+24]..[392,13334+28])
                                        Pexp_construct "true" (middle_end/flambda/flambda_iterators.ml[392,13334+24]..[392,13334+28])
                                        None
                                  ]
                                None
                              expression (middle_end/flambda/flambda_iterators.ml[394,13372+4]..[394,13372+12])
                                Pexp_ident "new_expr" (middle_end/flambda/flambda_iterators.ml[394,13372+4]..[394,13372+12])
                    <def>
                      pattern (middle_end/flambda/flambda_iterators.ml[395,13385+6]..[395,13385+15])
                        Ppat_var "aux_named" (middle_end/flambda/flambda_iterators.ml[395,13385+6]..[395,13385+15])
                      expression (middle_end/flambda/flambda_iterators.ml[395,13385+16]..[435,14948+20]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/flambda_iterators.ml[395,13385+16]..[395,13385+33])
                          Ppat_constraint
                          pattern (middle_end/flambda/flambda_iterators.ml[395,13385+17]..[395,13385+19])
                            Ppat_var "id" (middle_end/flambda/flambda_iterators.ml[395,13385+17]..[395,13385+19])
                          core_type (middle_end/flambda/flambda_iterators.ml[395,13385+22]..[395,13385+32])
                            Ptyp_constr "Variable.t" (middle_end/flambda/flambda_iterators.ml[395,13385+22]..[395,13385+32])
                            []
                        expression (middle_end/flambda/flambda_iterators.ml[395,13385+34]..[435,14948+20]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/flambda_iterators.ml[395,13385+34]..[395,13385+57])
                            Ppat_constraint
                            pattern (middle_end/flambda/flambda_iterators.ml[395,13385+35]..[395,13385+40])
                              Ppat_var "named" (middle_end/flambda/flambda_iterators.ml[395,13385+35]..[395,13385+40])
                            core_type (middle_end/flambda/flambda_iterators.ml[395,13385+43]..[395,13385+56])
                              Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_iterators.ml[395,13385+43]..[395,13385+56])
                              []
                          expression (middle_end/flambda/flambda_iterators.ml[396,13445+4]..[435,14948+20])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (middle_end/flambda/flambda_iterators.ml[396,13445+8]..[396,13445+29]) ghost
                                  Ppat_constraint
                                  pattern (middle_end/flambda/flambda_iterators.ml[396,13445+8]..[396,13445+13])
                                    Ppat_var "named" (middle_end/flambda/flambda_iterators.ml[396,13445+8]..[396,13445+13])
                                  core_type (middle_end/flambda/flambda_iterators.ml[396,13445+16]..[396,13445+29]) ghost
                                    Ptyp_poly
                                    core_type (middle_end/flambda/flambda_iterators.ml[396,13445+16]..[396,13445+29])
                                      Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_iterators.ml[396,13445+16]..[396,13445+29])
                                      []
                                expression (middle_end/flambda/flambda_iterators.ml[396,13445+8]..[433,14914+26])
                                  Pexp_constraint
                                  expression (middle_end/flambda/flambda_iterators.ml[397,13477+6]..[433,14914+26])
                                    Pexp_match
                                    expression (middle_end/flambda/flambda_iterators.ml[397,13477+12]..[397,13477+17])
                                      Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[397,13477+12]..[397,13477+17])
                                    [
                                      <case>
                                        pattern (middle_end/flambda/flambda_iterators.ml[398,13500+8]..[400,13638+36])
                                          Ppat_or
                                          pattern (middle_end/flambda/flambda_iterators.ml[398,13500+8]..[400,13638+14])
                                            Ppat_or
                                            pattern (middle_end/flambda/flambda_iterators.ml[398,13500+8]..[399,13564+73])
                                              Ppat_or
                                              pattern (middle_end/flambda/flambda_iterators.ml[398,13500+8]..[399,13564+57])
                                                Ppat_or
                                                pattern (middle_end/flambda/flambda_iterators.ml[398,13500+8]..[399,13564+25])
                                                  Ppat_or
                                                  pattern (middle_end/flambda/flambda_iterators.ml[398,13500+8]..[398,13500+63])
                                                    Ppat_or
                                                    pattern (middle_end/flambda/flambda_iterators.ml[398,13500+8]..[398,13500+46])
                                                      Ppat_or
                                                      pattern (middle_end/flambda/flambda_iterators.ml[398,13500+8]..[398,13500+26])
                                                        Ppat_or
                                                        pattern (middle_end/flambda/flambda_iterators.ml[398,13500+8]..[398,13500+16])
                                                          Ppat_construct "Symbol" (middle_end/flambda/flambda_iterators.ml[398,13500+8]..[398,13500+14])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/flambda_iterators.ml[398,13500+15]..[398,13500+16])
                                                              Ppat_any
                                                        pattern (middle_end/flambda/flambda_iterators.ml[398,13500+19]..[398,13500+26])
                                                          Ppat_construct "Const" (middle_end/flambda/flambda_iterators.ml[398,13500+19]..[398,13500+24])
                                                          Some
                                                            []
                                                            pattern (middle_end/flambda/flambda_iterators.ml[398,13500+25]..[398,13500+26])
                                                              Ppat_any
                                                      pattern (middle_end/flambda/flambda_iterators.ml[398,13500+29]..[398,13500+46])
                                                        Ppat_construct "Allocated_const" (middle_end/flambda/flambda_iterators.ml[398,13500+29]..[398,13500+44])
                                                        Some
                                                          []
                                                          pattern (middle_end/flambda/flambda_iterators.ml[398,13500+45]..[398,13500+46])
                                                            Ppat_any
                                                    pattern (middle_end/flambda/flambda_iterators.ml[398,13500+49]..[398,13500+63])
                                                      Ppat_construct "Read_mutable" (middle_end/flambda/flambda_iterators.ml[398,13500+49]..[398,13500+61])
                                                      Some
                                                        []
                                                        pattern (middle_end/flambda/flambda_iterators.ml[398,13500+62]..[398,13500+63])
                                                          Ppat_any
                                                  pattern (middle_end/flambda/flambda_iterators.ml[399,13564+8]..[399,13564+25])
                                                    Ppat_construct "Project_closure" (middle_end/flambda/flambda_iterators.ml[399,13564+8]..[399,13564+23])
                                                    Some
                                                      []
                                                      pattern (middle_end/flambda/flambda_iterators.ml[399,13564+24]..[399,13564+25])
                                                        Ppat_any
                                                pattern (middle_end/flambda/flambda_iterators.ml[399,13564+28]..[399,13564+57])
                                                  Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/flambda_iterators.ml[399,13564+28]..[399,13564+55])
                                                  Some
                                                    []
                                                    pattern (middle_end/flambda/flambda_iterators.ml[399,13564+56]..[399,13564+57])
                                                      Ppat_any
                                              pattern (middle_end/flambda/flambda_iterators.ml[399,13564+60]..[399,13564+73])
                                                Ppat_construct "Project_var" (middle_end/flambda/flambda_iterators.ml[399,13564+60]..[399,13564+71])
                                                Some
                                                  []
                                                  pattern (middle_end/flambda/flambda_iterators.ml[399,13564+72]..[399,13564+73])
                                                    Ppat_any
                                            pattern (middle_end/flambda/flambda_iterators.ml[400,13638+8]..[400,13638+14])
                                              Ppat_construct "Prim" (middle_end/flambda/flambda_iterators.ml[400,13638+8]..[400,13638+12])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[400,13638+13]..[400,13638+14])
                                                  Ppat_any
                                          pattern (middle_end/flambda/flambda_iterators.ml[400,13638+17]..[400,13638+36])
                                            Ppat_construct "Read_symbol_field" (middle_end/flambda/flambda_iterators.ml[400,13638+17]..[400,13638+34])
                                            Some
                                              []
                                              pattern (middle_end/flambda/flambda_iterators.ml[400,13638+35]..[400,13638+36])
                                                Ppat_any
                                        expression (middle_end/flambda/flambda_iterators.ml[400,13638+40]..[400,13638+45])
                                          Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[400,13638+40]..[400,13638+45])
                                      <case>
                                        pattern (middle_end/flambda/flambda_iterators.ml[401,13684+8]..[402,13756+35])
                                          Ppat_construct "Set_of_closures" (middle_end/flambda/flambda_iterators.ml[401,13684+8]..[401,13684+23])
                                          Some
                                            []
                                            pattern (middle_end/flambda/flambda_iterators.ml[401,13684+24]..[402,13756+35])
                                              Ppat_record Closed
                                              [
                                                "function_decls" (middle_end/flambda/flambda_iterators.ml[401,13684+27]..[401,13684+41]) ghost
                                                  pattern (middle_end/flambda/flambda_iterators.ml[401,13684+27]..[401,13684+41])
                                                    Ppat_var "function_decls" (middle_end/flambda/flambda_iterators.ml[401,13684+27]..[401,13684+41])
                                                "free_vars" (middle_end/flambda/flambda_iterators.ml[401,13684+43]..[401,13684+52]) ghost
                                                  pattern (middle_end/flambda/flambda_iterators.ml[401,13684+43]..[401,13684+52])
                                                    Ppat_var "free_vars" (middle_end/flambda/flambda_iterators.ml[401,13684+43]..[401,13684+52])
                                                "specialised_args" (middle_end/flambda/flambda_iterators.ml[401,13684+54]..[401,13684+70]) ghost
                                                  pattern (middle_end/flambda/flambda_iterators.ml[401,13684+54]..[401,13684+70])
                                                    Ppat_var "specialised_args" (middle_end/flambda/flambda_iterators.ml[401,13684+54]..[401,13684+70])
                                                "direct_call_surrogates" (middle_end/flambda/flambda_iterators.ml[402,13756+10]..[402,13756+32]) ghost
                                                  pattern (middle_end/flambda/flambda_iterators.ml[402,13756+10]..[402,13756+32])
                                                    Ppat_var "direct_call_surrogates" (middle_end/flambda/flambda_iterators.ml[402,13756+10]..[402,13756+32])
                                              ]
                                        expression (middle_end/flambda/flambda_iterators.ml[403,13795+8]..[429,14807+11])
                                          Pexp_ifthenelse
                                          expression (middle_end/flambda/flambda_iterators.ml[403,13795+11]..[403,13795+19])
                                            Pexp_ident "toplevel" (middle_end/flambda/flambda_iterators.ml[403,13795+11]..[403,13795+19])
                                          expression (middle_end/flambda/flambda_iterators.ml[403,13795+25]..[403,13795+30])
                                            Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[403,13795+25]..[403,13795+30])
                                          Some
                                            expression (middle_end/flambda/flambda_iterators.ml[404,13826+13]..[429,14807+11])
                                              Pexp_let Nonrec
                                              [
                                                <def>
                                                  pattern (middle_end/flambda/flambda_iterators.ml[405,13845+14]..[405,13845+28])
                                                    Ppat_var "done_something" (middle_end/flambda/flambda_iterators.ml[405,13845+14]..[405,13845+28])
                                                  expression (middle_end/flambda/flambda_iterators.ml[405,13845+31]..[405,13845+40])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[405,13845+31]..[405,13845+34])
                                                      Pexp_ident "ref" (middle_end/flambda/flambda_iterators.ml[405,13845+31]..[405,13845+34])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[405,13845+35]..[405,13845+40])
                                                          Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[405,13845+35]..[405,13845+40])
                                                          None
                                                    ]
                                              ]
                                              expression (middle_end/flambda/flambda_iterators.ml[406,13889+10]..[428,14763+43])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/flambda_iterators.ml[406,13889+14]..[406,13889+18])
                                                      Ppat_var "funs" (middle_end/flambda/flambda_iterators.ml[406,13889+14]..[406,13889+18])
                                                    expression (middle_end/flambda/flambda_iterators.ml[407,13910+12]..[416,14346+33])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_iterators.ml[407,13910+12]..[407,13910+28])
                                                        Pexp_ident "Variable.Map.map" (middle_end/flambda/flambda_iterators.ml[407,13910+12]..[407,13910+28])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[407,13910+29]..[415,14325+20])
                                                            Pexp_fun
                                                            Nolabel
                                                            None
                                                            pattern (middle_end/flambda/flambda_iterators.ml[407,13910+34]..[407,13910+76])
                                                              Ppat_constraint
                                                              pattern (middle_end/flambda/flambda_iterators.ml[407,13910+35]..[407,13910+44])
                                                                Ppat_var "func_decl" (middle_end/flambda/flambda_iterators.ml[407,13910+35]..[407,13910+44])
                                                              core_type (middle_end/flambda/flambda_iterators.ml[407,13910+47]..[407,13910+75])
                                                                Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/flambda_iterators.ml[407,13910+47]..[407,13910+75])
                                                                []
                                                            expression (middle_end/flambda/flambda_iterators.ml[408,13990+16]..[415,14325+19])
                                                              Pexp_let Nonrec
                                                              [
                                                                <def>
                                                                  pattern (middle_end/flambda/flambda_iterators.ml[408,13990+20]..[408,13990+28])
                                                                    Ppat_var "new_body" (middle_end/flambda/flambda_iterators.ml[408,13990+20]..[408,13990+28])
                                                                  expression (middle_end/flambda/flambda_iterators.ml[408,13990+31]..[408,13990+49])
                                                                    Pexp_apply
                                                                    expression (middle_end/flambda/flambda_iterators.ml[408,13990+31]..[408,13990+34])
                                                                      Pexp_ident "aux" (middle_end/flambda/flambda_iterators.ml[408,13990+31]..[408,13990+34])
                                                                    [
                                                                      <arg>
                                                                      Nolabel
expression (middle_end/flambda/flambda_iterators.ml[408,13990+35]..[408,13990+49])
  Pexp_field
  expression (middle_end/flambda/flambda_iterators.ml[408,13990+35]..[408,13990+44])
    Pexp_ident "func_decl" (middle_end/flambda/flambda_iterators.ml[408,13990+35]..[408,13990+44])
  "body" (middle_end/flambda/flambda_iterators.ml[408,13990+45]..[408,13990+49])
                                                                    ]
                                                              ]
                                                              expression (middle_end/flambda/flambda_iterators.ml[409,14043+16]..[415,14325+19])
                                                                Pexp_ifthenelse
                                                                expression (middle_end/flambda/flambda_iterators.ml[409,14043+19]..[409,14043+45])
                                                                  Pexp_apply
                                                                  expression (middle_end/flambda/flambda_iterators.ml[409,14043+28]..[409,14043+30])
                                                                    Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[409,14043+28]..[409,14043+30])
                                                                  [
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/flambda_iterators.ml[409,14043+19]..[409,14043+27])
Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[409,14043+19]..[409,14043+27])
                                                                    <arg>
                                                                    Nolabel
                                                                      expression (middle_end/flambda/flambda_iterators.ml[409,14043+31]..[409,14043+45])
Pexp_field
expression (middle_end/flambda/flambda_iterators.ml[409,14043+31]..[409,14043+40])
  Pexp_ident "func_decl" (middle_end/flambda/flambda_iterators.ml[409,14043+31]..[409,14043+40])
"body" (middle_end/flambda/flambda_iterators.ml[409,14043+41]..[409,14043+45])
                                                                  ]
                                                                expression (middle_end/flambda/flambda_iterators.ml[409,14043+51]..[411,14128+19])
                                                                  Pexp_ident "func_decl" (middle_end/flambda/flambda_iterators.ml[410,14100+18]..[410,14100+27])
                                                                Some
                                                                  expression (middle_end/flambda/flambda_iterators.ml[411,14128+25]..[415,14325+19])
                                                                    Pexp_sequence
                                                                    expression (middle_end/flambda/flambda_iterators.ml[412,14159+18]..[412,14159+40])
                                                                      Pexp_apply
                                                                      expression (middle_end/flambda/flambda_iterators.ml[412,14159+33]..[412,14159+35])
Pexp_ident ":=" (middle_end/flambda/flambda_iterators.ml[412,14159+33]..[412,14159+35])
                                                                      [
<arg>
Nolabel
  expression (middle_end/flambda/flambda_iterators.ml[412,14159+18]..[412,14159+32])
    Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[412,14159+18]..[412,14159+32])
<arg>
Nolabel
  expression (middle_end/flambda/flambda_iterators.ml[412,14159+36]..[412,14159+40])
    Pexp_construct "true" (middle_end/flambda/flambda_iterators.ml[412,14159+36]..[412,14159+40])
    None
                                                                      ]
                                                                    expression (middle_end/flambda/flambda_iterators.ml[413,14201+18]..[414,14265+59])
                                                                      Pexp_apply
                                                                      expression (middle_end/flambda/flambda_iterators.ml[413,14201+18]..[413,14201+53])
Pexp_ident "Flambda.update_function_declaration" (middle_end/flambda/flambda_iterators.ml[413,14201+18]..[413,14201+53])
                                                                      [
<arg>
Nolabel
  expression (middle_end/flambda/flambda_iterators.ml[413,14201+54]..[413,14201+63])
    Pexp_ident "func_decl" (middle_end/flambda/flambda_iterators.ml[413,14201+54]..[413,14201+63])
<arg>
Labelled "params"
  expression (middle_end/flambda/flambda_iterators.ml[414,14265+28]..[414,14265+44])
    Pexp_field
    expression (middle_end/flambda/flambda_iterators.ml[414,14265+28]..[414,14265+37])
      Pexp_ident "func_decl" (middle_end/flambda/flambda_iterators.ml[414,14265+28]..[414,14265+37])
    "params" (middle_end/flambda/flambda_iterators.ml[414,14265+38]..[414,14265+44])
<arg>
Labelled "body"
  expression (middle_end/flambda/flambda_iterators.ml[414,14265+51]..[414,14265+59])
    Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[414,14265+51]..[414,14265+59])
                                                                      ]
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[416,14346+14]..[416,14346+33])
                                                            Pexp_field
                                                            expression (middle_end/flambda/flambda_iterators.ml[416,14346+14]..[416,14346+28])
                                                              Pexp_ident "function_decls" (middle_end/flambda/flambda_iterators.ml[416,14346+14]..[416,14346+28])
                                                            "funs" (middle_end/flambda/flambda_iterators.ml[416,14346+29]..[416,14346+33])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/flambda_iterators.ml[418,14393+10]..[428,14763+43])
                                                  Pexp_ifthenelse
                                                  expression (middle_end/flambda/flambda_iterators.ml[418,14393+13]..[418,14393+32])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[418,14393+13]..[418,14393+16])
                                                      Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[418,14393+13]..[418,14393+16])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[418,14393+17]..[418,14393+32])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_iterators.ml[418,14393+17]..[418,14393+18])
                                                            Pexp_ident "!" (middle_end/flambda/flambda_iterators.ml[418,14393+17]..[418,14393+18])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[418,14393+18]..[418,14393+32])
                                                                Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[418,14393+18]..[418,14393+32])
                                                          ]
                                                    ]
                                                  expression (middle_end/flambda/flambda_iterators.ml[419,14431+12]..[419,14431+17])
                                                    Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[419,14431+12]..[419,14431+17])
                                                  Some
                                                    expression (middle_end/flambda/flambda_iterators.ml[421,14464+12]..[428,14763+43])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (middle_end/flambda/flambda_iterators.ml[421,14464+16]..[421,14464+30])
                                                            Ppat_var "function_decls" (middle_end/flambda/flambda_iterators.ml[421,14464+16]..[421,14464+30])
                                                          expression (middle_end/flambda/flambda_iterators.ml[422,14497+14]..[422,14497+71])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/flambda_iterators.ml[422,14497+14]..[422,14497+50])
                                                              Pexp_ident "Flambda.update_function_declarations" (middle_end/flambda/flambda_iterators.ml[422,14497+14]..[422,14497+50])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_iterators.ml[422,14497+51]..[422,14497+65])
                                                                  Pexp_ident "function_decls" (middle_end/flambda/flambda_iterators.ml[422,14497+51]..[422,14497+65])
                                                              <arg>
                                                              Labelled "funs"
                                                                expression (middle_end/flambda/flambda_iterators.ml[422,14497+67]..[422,14497+71])
                                                                  Pexp_ident "funs" (middle_end/flambda/flambda_iterators.ml[422,14497+67]..[422,14497+71])
                                                            ]
                                                      ]
                                                      expression (middle_end/flambda/flambda_iterators.ml[424,14584+12]..[428,14763+43])
                                                        Pexp_let Nonrec
                                                        [
                                                          <def>
                                                            pattern (middle_end/flambda/flambda_iterators.ml[424,14584+16]..[424,14584+31])
                                                              Ppat_var "set_of_closures" (middle_end/flambda/flambda_iterators.ml[424,14584+16]..[424,14584+31])
                                                            expression (middle_end/flambda/flambda_iterators.ml[425,14618+14]..[426,14690+57])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/flambda_iterators.ml[425,14618+14]..[425,14618+44])
                                                                Pexp_ident "Flambda.create_set_of_closures" (middle_end/flambda/flambda_iterators.ml[425,14618+14]..[425,14618+44])
                                                              [
                                                                <arg>
                                                                Labelled "function_decls"
                                                                  expression (middle_end/flambda/flambda_iterators.ml[425,14618+46]..[425,14618+60])
                                                                    Pexp_ident "function_decls" (middle_end/flambda/flambda_iterators.ml[425,14618+46]..[425,14618+60])
                                                                <arg>
                                                                Labelled "free_vars"
                                                                  expression (middle_end/flambda/flambda_iterators.ml[425,14618+62]..[425,14618+71])
                                                                    Pexp_ident "free_vars" (middle_end/flambda/flambda_iterators.ml[425,14618+62]..[425,14618+71])
                                                                <arg>
                                                                Labelled "specialised_args"
                                                                  expression (middle_end/flambda/flambda_iterators.ml[426,14690+17]..[426,14690+33])
                                                                    Pexp_ident "specialised_args" (middle_end/flambda/flambda_iterators.ml[426,14690+17]..[426,14690+33])
                                                                <arg>
                                                                Labelled "direct_call_surrogates"
                                                                  expression (middle_end/flambda/flambda_iterators.ml[426,14690+35]..[426,14690+57])
                                                                    Pexp_ident "direct_call_surrogates" (middle_end/flambda/flambda_iterators.ml[426,14690+35]..[426,14690+57])
                                                              ]
                                                        ]
                                                        expression (middle_end/flambda/flambda_iterators.ml[428,14763+12]..[428,14763+43])
                                                          Pexp_construct "Set_of_closures" (middle_end/flambda/flambda_iterators.ml[428,14763+12]..[428,14763+27])
                                                          Some
                                                            expression (middle_end/flambda/flambda_iterators.ml[428,14763+28]..[428,14763+43])
                                                              Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[428,14763+28]..[428,14763+43])
                                      <case>
                                        pattern (middle_end/flambda/flambda_iterators.ml[430,14819+8]..[430,14819+17])
                                          Ppat_construct "Expr" (middle_end/flambda/flambda_iterators.ml[430,14819+8]..[430,14819+12])
                                          Some
                                            []
                                            pattern (middle_end/flambda/flambda_iterators.ml[430,14819+13]..[430,14819+17])
                                              Ppat_var "expr" (middle_end/flambda/flambda_iterators.ml[430,14819+13]..[430,14819+17])
                                        expression (middle_end/flambda/flambda_iterators.ml[431,14840+8]..[433,14914+26])
                                          Pexp_let Nonrec
                                          [
                                            <def>
                                              pattern (middle_end/flambda/flambda_iterators.ml[431,14840+12]..[431,14840+20])
                                                Ppat_var "new_expr" (middle_end/flambda/flambda_iterators.ml[431,14840+12]..[431,14840+20])
                                              expression (middle_end/flambda/flambda_iterators.ml[431,14840+23]..[431,14840+31])
                                                Pexp_apply
                                                expression (middle_end/flambda/flambda_iterators.ml[431,14840+23]..[431,14840+26])
                                                  Pexp_ident "aux" (middle_end/flambda/flambda_iterators.ml[431,14840+23]..[431,14840+26])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (middle_end/flambda/flambda_iterators.ml[431,14840+27]..[431,14840+31])
                                                      Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[431,14840+27]..[431,14840+31])
                                                ]
                                          ]
                                          expression (middle_end/flambda/flambda_iterators.ml[432,14875+8]..[433,14914+26])
                                            Pexp_ifthenelse
                                            expression (middle_end/flambda/flambda_iterators.ml[432,14875+11]..[432,14875+27])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_iterators.ml[432,14875+20]..[432,14875+22])
                                                Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[432,14875+20]..[432,14875+22])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[432,14875+11]..[432,14875+19])
                                                    Pexp_ident "new_expr" (middle_end/flambda/flambda_iterators.ml[432,14875+11]..[432,14875+19])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[432,14875+23]..[432,14875+27])
                                                    Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[432,14875+23]..[432,14875+27])
                                              ]
                                            expression (middle_end/flambda/flambda_iterators.ml[432,14875+33]..[432,14875+38])
                                              Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[432,14875+33]..[432,14875+38])
                                            Some
                                              expression (middle_end/flambda/flambda_iterators.ml[433,14914+13]..[433,14914+26])
                                                Pexp_construct "Expr" (middle_end/flambda/flambda_iterators.ml[433,14914+13]..[433,14914+17])
                                                Some
                                                  expression (middle_end/flambda/flambda_iterators.ml[433,14914+18]..[433,14914+26])
                                                    Pexp_ident "new_expr" (middle_end/flambda/flambda_iterators.ml[433,14914+18]..[433,14914+26])
                                    ]
                                  core_type (middle_end/flambda/flambda_iterators.ml[396,13445+16]..[396,13445+29])
                                    Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_iterators.ml[396,13445+16]..[396,13445+29])
                                    []
                            ]
                            expression (middle_end/flambda/flambda_iterators.ml[435,14948+4]..[435,14948+20])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[435,14948+4]..[435,14948+11])
                                Pexp_ident "f_named" (middle_end/flambda/flambda_iterators.ml[435,14948+4]..[435,14948+11])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[435,14948+12]..[435,14948+14])
                                    Pexp_ident "id" (middle_end/flambda/flambda_iterators.ml[435,14948+12]..[435,14948+14])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[435,14948+15]..[435,14948+20])
                                    Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[435,14948+15]..[435,14948+20])
                              ]
                    <def>
                      pattern (middle_end/flambda/flambda_iterators.ml[436,14969+6]..[436,14969+30])
                        Ppat_var "aux_named_done_something" (middle_end/flambda/flambda_iterators.ml[436,14969+6]..[436,14969+30])
                      expression (middle_end/flambda/flambda_iterators.ml[436,14969+31]..[441,15149+13]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/flambda_iterators.ml[436,14969+31]..[436,14969+33])
                          Ppat_var "id" (middle_end/flambda/flambda_iterators.ml[436,14969+31]..[436,14969+33])
                        expression (middle_end/flambda/flambda_iterators.ml[436,14969+34]..[441,15149+13]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/flambda_iterators.ml[436,14969+34]..[436,14969+39])
                            Ppat_var "named" (middle_end/flambda/flambda_iterators.ml[436,14969+34]..[436,14969+39])
                          expression (middle_end/flambda/flambda_iterators.ml[436,14969+40]..[441,15149+13]) ghost
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/flambda_iterators.ml[436,14969+40]..[436,14969+54])
                              Ppat_var "done_something" (middle_end/flambda/flambda_iterators.ml[436,14969+40]..[436,14969+54])
                            expression (middle_end/flambda/flambda_iterators.ml[437,15026+4]..[441,15149+13])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/flambda_iterators.ml[437,15026+8]..[437,15026+17])
                                    Ppat_var "new_named" (middle_end/flambda/flambda_iterators.ml[437,15026+8]..[437,15026+17])
                                  expression (middle_end/flambda/flambda_iterators.ml[437,15026+20]..[437,15026+38])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[437,15026+20]..[437,15026+29])
                                      Pexp_ident "aux_named" (middle_end/flambda/flambda_iterators.ml[437,15026+20]..[437,15026+29])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[437,15026+30]..[437,15026+32])
                                          Pexp_ident "id" (middle_end/flambda/flambda_iterators.ml[437,15026+30]..[437,15026+32])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[437,15026+33]..[437,15026+38])
                                          Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[437,15026+33]..[437,15026+38])
                                    ]
                              ]
                              expression (middle_end/flambda/flambda_iterators.ml[438,15068+4]..[441,15149+13])
                                Pexp_sequence
                                expression (middle_end/flambda/flambda_iterators.ml[438,15068+4]..[440,15140+7])
                                  Pexp_ifthenelse
                                  expression (middle_end/flambda/flambda_iterators.ml[438,15068+7]..[438,15068+31])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[438,15068+7]..[438,15068+10])
                                      Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[438,15068+7]..[438,15068+10])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[438,15068+11]..[438,15068+31])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_iterators.ml[438,15068+22]..[438,15068+24])
                                            Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[438,15068+22]..[438,15068+24])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_iterators.ml[438,15068+12]..[438,15068+21])
                                                Pexp_ident "new_named" (middle_end/flambda/flambda_iterators.ml[438,15068+12]..[438,15068+21])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_iterators.ml[438,15068+25]..[438,15068+30])
                                                Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[438,15068+25]..[438,15068+30])
                                          ]
                                    ]
                                  expression (middle_end/flambda/flambda_iterators.ml[438,15068+37]..[440,15140+7])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[439,15111+21]..[439,15111+23])
                                      Pexp_ident ":=" (middle_end/flambda/flambda_iterators.ml[439,15111+21]..[439,15111+23])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[439,15111+6]..[439,15111+20])
                                          Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[439,15111+6]..[439,15111+20])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[439,15111+24]..[439,15111+28])
                                          Pexp_construct "true" (middle_end/flambda/flambda_iterators.ml[439,15111+24]..[439,15111+28])
                                          None
                                    ]
                                  None
                                expression (middle_end/flambda/flambda_iterators.ml[441,15149+4]..[441,15149+13])
                                  Pexp_ident "new_named" (middle_end/flambda/flambda_iterators.ml[441,15149+4]..[441,15149+13])
                  ]
                  expression (middle_end/flambda/flambda_iterators.ml[443,15168+2]..[443,15168+10])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_iterators.ml[443,15168+2]..[443,15168+5])
                      Pexp_ident "aux" (middle_end/flambda/flambda_iterators.ml[443,15168+2]..[443,15168+5])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_iterators.ml[443,15168+6]..[443,15168+10])
                          Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[443,15168+6]..[443,15168+10])
                    ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[445,15180+0]..[451,15370+11])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[445,15180+4]..[445,15180+25])
          Ppat_var "iter_apply_on_program" (middle_end/flambda/flambda_iterators.ml[445,15180+4]..[445,15180+25])
        expression (middle_end/flambda/flambda_iterators.ml[445,15180+26]..[451,15370+11]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[445,15180+26]..[445,15180+33])
            Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[445,15180+26]..[445,15180+33])
          expression (middle_end/flambda/flambda_iterators.ml[445,15180+34]..[451,15370+11]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[445,15180+35]..[445,15180+36])
              Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[445,15180+35]..[445,15180+36])
            expression (middle_end/flambda/flambda_iterators.ml[446,15219+2]..[451,15370+11])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[446,15219+2]..[446,15219+35])
                Pexp_ident "iter_exprs_at_toplevel_of_program" (middle_end/flambda/flambda_iterators.ml[446,15219+2]..[446,15219+35])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[446,15219+36]..[446,15219+43])
                    Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[446,15219+36]..[446,15219+43])
                <arg>
                Labelled "f"
                  expression (middle_end/flambda/flambda_iterators.ml[446,15219+47]..[451,15370+11])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_iterators.ml[446,15219+52]..[446,15219+56])
                      Ppat_var "expr" (middle_end/flambda/flambda_iterators.ml[446,15219+52]..[446,15219+56])
                    expression (middle_end/flambda/flambda_iterators.ml[447,15279+4]..[451,15370+10])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_iterators.ml[447,15279+4]..[447,15279+8])
                        Pexp_ident "iter" (middle_end/flambda/flambda_iterators.ml[447,15279+4]..[447,15279+8])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_iterators.ml[447,15279+9]..[449,15331+18])
                            Pexp_function
                            [
                              <case>
                                pattern (middle_end/flambda/flambda_iterators.ml[448,15298+10]..[448,15298+21])
                                  Ppat_construct "Apply" (middle_end/flambda/flambda_iterators.ml[448,15298+10]..[448,15298+15])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_iterators.ml[448,15298+16]..[448,15298+21])
                                      Ppat_var "apply" (middle_end/flambda/flambda_iterators.ml[448,15298+16]..[448,15298+21])
                                expression (middle_end/flambda/flambda_iterators.ml[448,15298+25]..[448,15298+32])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_iterators.ml[448,15298+25]..[448,15298+26])
                                    Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[448,15298+25]..[448,15298+26])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[448,15298+27]..[448,15298+32])
                                        Pexp_ident "apply" (middle_end/flambda/flambda_iterators.ml[448,15298+27]..[448,15298+32])
                                  ]
                              <case>
                                pattern (middle_end/flambda/flambda_iterators.ml[449,15331+10]..[449,15331+11])
                                  Ppat_any
                                expression (middle_end/flambda/flambda_iterators.ml[449,15331+15]..[449,15331+17])
                                  Pexp_construct "()" (middle_end/flambda/flambda_iterators.ml[449,15331+15]..[449,15331+17])
                                  None
                            ]
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_iterators.ml[450,15350+6]..[450,15350+19])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/flambda_iterators.ml[450,15350+11]..[450,15350+12])
                              Ppat_any
                            expression (middle_end/flambda/flambda_iterators.ml[450,15350+16]..[450,15350+18])
                              Pexp_construct "()" (middle_end/flambda/flambda_iterators.ml[450,15350+16]..[450,15350+18])
                              None
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_iterators.ml[451,15370+6]..[451,15370+10])
                            Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[451,15370+6]..[451,15370+10])
                      ]
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[453,15383+0]..[454,15408+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[453,15383+4]..[453,15383+7])
          Ppat_var "map" (middle_end/flambda/flambda_iterators.ml[453,15383+4]..[453,15383+7])
        expression (middle_end/flambda/flambda_iterators.ml[453,15383+8]..[454,15408+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[453,15383+8]..[453,15383+9])
            Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[453,15383+8]..[453,15383+9])
          expression (middle_end/flambda/flambda_iterators.ml[453,15383+10]..[454,15408+59]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[453,15383+10]..[453,15383+17])
              Ppat_var "f_named" (middle_end/flambda/flambda_iterators.ml[453,15383+10]..[453,15383+17])
            expression (middle_end/flambda/flambda_iterators.ml[453,15383+18]..[454,15408+59]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/flambda_iterators.ml[453,15383+18]..[453,15383+22])
                Ppat_var "tree" (middle_end/flambda/flambda_iterators.ml[453,15383+18]..[453,15383+22])
              expression (middle_end/flambda/flambda_iterators.ml[454,15408+2]..[454,15408+59])
                Pexp_apply
                expression (middle_end/flambda/flambda_iterators.ml[454,15408+2]..[454,15408+13])
                  Pexp_ident "map_general" (middle_end/flambda/flambda_iterators.ml[454,15408+2]..[454,15408+13])
                [
                  <arg>
                  Labelled "toplevel"
                    expression (middle_end/flambda/flambda_iterators.ml[454,15408+24]..[454,15408+29])
                      Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[454,15408+24]..[454,15408+29])
                      None
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[454,15408+30]..[454,15408+31])
                      Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[454,15408+30]..[454,15408+31])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[454,15408+32]..[454,15408+54])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/flambda_iterators.ml[454,15408+37]..[454,15408+38])
                        Ppat_any
                      expression (middle_end/flambda/flambda_iterators.ml[454,15408+39]..[454,15408+53]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/flambda_iterators.ml[454,15408+39]..[454,15408+40])
                          Ppat_var "n" (middle_end/flambda/flambda_iterators.ml[454,15408+39]..[454,15408+40])
                        expression (middle_end/flambda/flambda_iterators.ml[454,15408+44]..[454,15408+53])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_iterators.ml[454,15408+44]..[454,15408+51])
                            Pexp_ident "f_named" (middle_end/flambda/flambda_iterators.ml[454,15408+44]..[454,15408+51])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[454,15408+52]..[454,15408+53])
                                Pexp_ident "n" (middle_end/flambda/flambda_iterators.ml[454,15408+52]..[454,15408+53])
                          ]
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[454,15408+55]..[454,15408+59])
                      Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[454,15408+55]..[454,15408+59])
                ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[455,15468+0]..[455,15468+53])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[455,15468+4]..[455,15468+12])
          Ppat_var "map_expr" (middle_end/flambda/flambda_iterators.ml[455,15468+4]..[455,15468+12])
        expression (middle_end/flambda/flambda_iterators.ml[455,15468+13]..[455,15468+53]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[455,15468+13]..[455,15468+14])
            Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[455,15468+13]..[455,15468+14])
          expression (middle_end/flambda/flambda_iterators.ml[455,15468+15]..[455,15468+53]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[455,15468+15]..[455,15468+19])
              Ppat_var "tree" (middle_end/flambda/flambda_iterators.ml[455,15468+15]..[455,15468+19])
            expression (middle_end/flambda/flambda_iterators.ml[455,15468+22]..[455,15468+53])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[455,15468+22]..[455,15468+25])
                Pexp_ident "map" (middle_end/flambda/flambda_iterators.ml[455,15468+22]..[455,15468+25])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[455,15468+26]..[455,15468+27])
                    Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[455,15468+26]..[455,15468+27])
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[455,15468+28]..[455,15468+48])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_iterators.ml[455,15468+33]..[455,15468+38])
                      Ppat_var "named" (middle_end/flambda/flambda_iterators.ml[455,15468+33]..[455,15468+38])
                    expression (middle_end/flambda/flambda_iterators.ml[455,15468+42]..[455,15468+47])
                      Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[455,15468+42]..[455,15468+47])
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[455,15468+49]..[455,15468+53])
                    Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[455,15468+49]..[455,15468+53])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[456,15522+0]..[456,15522+64])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[456,15522+4]..[456,15522+13])
          Ppat_var "map_named" (middle_end/flambda/flambda_iterators.ml[456,15522+4]..[456,15522+13])
        expression (middle_end/flambda/flambda_iterators.ml[456,15522+14]..[456,15522+64]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[456,15522+14]..[456,15522+21])
            Ppat_var "f_named" (middle_end/flambda/flambda_iterators.ml[456,15522+14]..[456,15522+21])
          expression (middle_end/flambda/flambda_iterators.ml[456,15522+22]..[456,15522+64]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[456,15522+22]..[456,15522+26])
              Ppat_var "tree" (middle_end/flambda/flambda_iterators.ml[456,15522+22]..[456,15522+26])
            expression (middle_end/flambda/flambda_iterators.ml[456,15522+29]..[456,15522+64])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[456,15522+29]..[456,15522+32])
                Pexp_ident "map" (middle_end/flambda/flambda_iterators.ml[456,15522+29]..[456,15522+32])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[456,15522+33]..[456,15522+51])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_iterators.ml[456,15522+38]..[456,15522+42])
                      Ppat_var "expr" (middle_end/flambda/flambda_iterators.ml[456,15522+38]..[456,15522+42])
                    expression (middle_end/flambda/flambda_iterators.ml[456,15522+46]..[456,15522+50])
                      Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[456,15522+46]..[456,15522+50])
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[456,15522+52]..[456,15522+59])
                    Pexp_ident "f_named" (middle_end/flambda/flambda_iterators.ml[456,15522+52]..[456,15522+59])
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[456,15522+60]..[456,15522+64])
                    Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[456,15522+60]..[456,15522+64])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[457,15587+0]..[458,15624+61])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[457,15587+4]..[457,15587+21])
          Ppat_var "map_named_with_id" (middle_end/flambda/flambda_iterators.ml[457,15587+4]..[457,15587+21])
        expression (middle_end/flambda/flambda_iterators.ml[457,15587+22]..[458,15624+61]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[457,15587+22]..[457,15587+29])
            Ppat_var "f_named" (middle_end/flambda/flambda_iterators.ml[457,15587+22]..[457,15587+29])
          expression (middle_end/flambda/flambda_iterators.ml[457,15587+30]..[458,15624+61]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[457,15587+30]..[457,15587+34])
              Ppat_var "tree" (middle_end/flambda/flambda_iterators.ml[457,15587+30]..[457,15587+34])
            expression (middle_end/flambda/flambda_iterators.ml[458,15624+2]..[458,15624+61])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[458,15624+2]..[458,15624+13])
                Pexp_ident "map_general" (middle_end/flambda/flambda_iterators.ml[458,15624+2]..[458,15624+13])
              [
                <arg>
                Labelled "toplevel"
                  expression (middle_end/flambda/flambda_iterators.ml[458,15624+24]..[458,15624+29])
                    Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[458,15624+24]..[458,15624+29])
                    None
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[458,15624+30]..[458,15624+48])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_iterators.ml[458,15624+35]..[458,15624+39])
                      Ppat_var "expr" (middle_end/flambda/flambda_iterators.ml[458,15624+35]..[458,15624+39])
                    expression (middle_end/flambda/flambda_iterators.ml[458,15624+43]..[458,15624+47])
                      Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[458,15624+43]..[458,15624+47])
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[458,15624+49]..[458,15624+56])
                    Pexp_ident "f_named" (middle_end/flambda/flambda_iterators.ml[458,15624+49]..[458,15624+56])
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[458,15624+57]..[458,15624+61])
                    Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[458,15624+57]..[458,15624+61])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[459,15686+0]..[460,15720+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[459,15686+4]..[459,15686+16])
          Ppat_var "map_toplevel" (middle_end/flambda/flambda_iterators.ml[459,15686+4]..[459,15686+16])
        expression (middle_end/flambda/flambda_iterators.ml[459,15686+17]..[460,15720+58]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[459,15686+17]..[459,15686+18])
            Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[459,15686+17]..[459,15686+18])
          expression (middle_end/flambda/flambda_iterators.ml[459,15686+19]..[460,15720+58]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[459,15686+19]..[459,15686+26])
              Ppat_var "f_named" (middle_end/flambda/flambda_iterators.ml[459,15686+19]..[459,15686+26])
            expression (middle_end/flambda/flambda_iterators.ml[459,15686+27]..[460,15720+58]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (middle_end/flambda/flambda_iterators.ml[459,15686+27]..[459,15686+31])
                Ppat_var "tree" (middle_end/flambda/flambda_iterators.ml[459,15686+27]..[459,15686+31])
              expression (middle_end/flambda/flambda_iterators.ml[460,15720+2]..[460,15720+58])
                Pexp_apply
                expression (middle_end/flambda/flambda_iterators.ml[460,15720+2]..[460,15720+13])
                  Pexp_ident "map_general" (middle_end/flambda/flambda_iterators.ml[460,15720+2]..[460,15720+13])
                [
                  <arg>
                  Labelled "toplevel"
                    expression (middle_end/flambda/flambda_iterators.ml[460,15720+24]..[460,15720+28])
                      Pexp_construct "true" (middle_end/flambda/flambda_iterators.ml[460,15720+24]..[460,15720+28])
                      None
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[460,15720+29]..[460,15720+30])
                      Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[460,15720+29]..[460,15720+30])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[460,15720+31]..[460,15720+53])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/flambda_iterators.ml[460,15720+36]..[460,15720+37])
                        Ppat_any
                      expression (middle_end/flambda/flambda_iterators.ml[460,15720+38]..[460,15720+52]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/flambda_iterators.ml[460,15720+38]..[460,15720+39])
                          Ppat_var "n" (middle_end/flambda/flambda_iterators.ml[460,15720+38]..[460,15720+39])
                        expression (middle_end/flambda/flambda_iterators.ml[460,15720+43]..[460,15720+52])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_iterators.ml[460,15720+43]..[460,15720+50])
                            Pexp_ident "f_named" (middle_end/flambda/flambda_iterators.ml[460,15720+43]..[460,15720+50])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[460,15720+51]..[460,15720+52])
                                Pexp_ident "n" (middle_end/flambda/flambda_iterators.ml[460,15720+51]..[460,15720+52])
                          ]
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[460,15720+54]..[460,15720+58])
                      Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[460,15720+54]..[460,15720+58])
                ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[461,15779+0]..[462,15815+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[461,15779+4]..[461,15779+21])
          Ppat_var "map_toplevel_expr" (middle_end/flambda/flambda_iterators.ml[461,15779+4]..[461,15779+21])
        expression (middle_end/flambda/flambda_iterators.ml[461,15779+22]..[462,15815+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[461,15779+22]..[461,15779+28])
            Ppat_var "f_expr" (middle_end/flambda/flambda_iterators.ml[461,15779+22]..[461,15779+28])
          expression (middle_end/flambda/flambda_iterators.ml[461,15779+29]..[462,15815+47]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[461,15779+29]..[461,15779+33])
              Ppat_var "tree" (middle_end/flambda/flambda_iterators.ml[461,15779+29]..[461,15779+33])
            expression (middle_end/flambda/flambda_iterators.ml[462,15815+2]..[462,15815+47])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[462,15815+2]..[462,15815+14])
                Pexp_ident "map_toplevel" (middle_end/flambda/flambda_iterators.ml[462,15815+2]..[462,15815+14])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[462,15815+15]..[462,15815+21])
                    Pexp_ident "f_expr" (middle_end/flambda/flambda_iterators.ml[462,15815+15]..[462,15815+21])
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[462,15815+22]..[462,15815+42])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_iterators.ml[462,15815+27]..[462,15815+32])
                      Ppat_var "named" (middle_end/flambda/flambda_iterators.ml[462,15815+27]..[462,15815+32])
                    expression (middle_end/flambda/flambda_iterators.ml[462,15815+36]..[462,15815+41])
                      Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[462,15815+36]..[462,15815+41])
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[462,15815+43]..[462,15815+47])
                    Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[462,15815+43]..[462,15815+47])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[463,15863+0]..[464,15901+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[463,15863+4]..[463,15863+22])
          Ppat_var "map_toplevel_named" (middle_end/flambda/flambda_iterators.ml[463,15863+4]..[463,15863+22])
        expression (middle_end/flambda/flambda_iterators.ml[463,15863+23]..[464,15901+46]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[463,15863+23]..[463,15863+30])
            Ppat_var "f_named" (middle_end/flambda/flambda_iterators.ml[463,15863+23]..[463,15863+30])
          expression (middle_end/flambda/flambda_iterators.ml[463,15863+31]..[464,15901+46]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (middle_end/flambda/flambda_iterators.ml[463,15863+31]..[463,15863+35])
              Ppat_var "tree" (middle_end/flambda/flambda_iterators.ml[463,15863+31]..[463,15863+35])
            expression (middle_end/flambda/flambda_iterators.ml[464,15901+2]..[464,15901+46])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[464,15901+2]..[464,15901+14])
                Pexp_ident "map_toplevel" (middle_end/flambda/flambda_iterators.ml[464,15901+2]..[464,15901+14])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[464,15901+15]..[464,15901+33])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_iterators.ml[464,15901+20]..[464,15901+24])
                      Ppat_var "tree" (middle_end/flambda/flambda_iterators.ml[464,15901+20]..[464,15901+24])
                    expression (middle_end/flambda/flambda_iterators.ml[464,15901+28]..[464,15901+32])
                      Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[464,15901+28]..[464,15901+32])
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[464,15901+34]..[464,15901+41])
                    Pexp_ident "f_named" (middle_end/flambda/flambda_iterators.ml[464,15901+34]..[464,15901+41])
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[464,15901+42]..[464,15901+46])
                    Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[464,15901+42]..[464,15901+46])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[466,15949+0]..[483,16529+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[466,15949+4]..[466,15949+15])
          Ppat_var "map_symbols" (middle_end/flambda/flambda_iterators.ml[466,15949+4]..[466,15949+15])
        expression (middle_end/flambda/flambda_iterators.ml[466,15949+16]..[483,16529+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[466,15949+16]..[466,15949+20])
            Ppat_var "tree" (middle_end/flambda/flambda_iterators.ml[466,15949+16]..[466,15949+20])
          expression (middle_end/flambda/flambda_iterators.ml[466,15949+21]..[483,16529+8]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[466,15949+22]..[466,15949+23])
              Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[466,15949+22]..[466,15949+23])
            expression (middle_end/flambda/flambda_iterators.ml[467,15975+2]..[483,16529+8])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[467,15975+2]..[467,15975+11])
                Pexp_ident "map_named" (middle_end/flambda/flambda_iterators.ml[467,15975+2]..[467,15975+11])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[467,15975+12]..[482,16485+43])
                    Pexp_function
                    [
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[468,15997+8]..[468,15997+29])
                          Ppat_alias "named" (middle_end/flambda/flambda_iterators.ml[468,15997+24]..[468,15997+29])
                          pattern (middle_end/flambda/flambda_iterators.ml[468,15997+8]..[468,15997+20])
                            Ppat_construct "Symbol" (middle_end/flambda/flambda_iterators.ml[468,15997+9]..[468,15997+15])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[468,15997+16]..[468,15997+19])
                                Ppat_var "sym" (middle_end/flambda/flambda_iterators.ml[468,15997+16]..[468,15997+19])
                        expression (middle_end/flambda/flambda_iterators.ml[469,16030+8]..[473,16121+24])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/flambda_iterators.ml[469,16030+12]..[469,16030+19])
                                Ppat_var "new_sym" (middle_end/flambda/flambda_iterators.ml[469,16030+12]..[469,16030+19])
                              expression (middle_end/flambda/flambda_iterators.ml[469,16030+22]..[469,16030+27])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[469,16030+22]..[469,16030+23])
                                  Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[469,16030+22]..[469,16030+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[469,16030+24]..[469,16030+27])
                                      Pexp_ident "sym" (middle_end/flambda/flambda_iterators.ml[469,16030+24]..[469,16030+27])
                                ]
                          ]
                          expression (middle_end/flambda/flambda_iterators.ml[470,16061+8]..[473,16121+24])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/flambda_iterators.ml[470,16061+11]..[470,16061+25])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[470,16061+19]..[470,16061+21])
                                Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[470,16061+19]..[470,16061+21])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[470,16061+11]..[470,16061+18])
                                    Pexp_ident "new_sym" (middle_end/flambda/flambda_iterators.ml[470,16061+11]..[470,16061+18])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[470,16061+22]..[470,16061+25])
                                    Pexp_ident "sym" (middle_end/flambda/flambda_iterators.ml[470,16061+22]..[470,16061+25])
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[471,16092+10]..[471,16092+15])
                              Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[471,16092+10]..[471,16092+15])
                            Some
                              expression (middle_end/flambda/flambda_iterators.ml[473,16121+10]..[473,16121+24])
                                Pexp_construct "Symbol" (middle_end/flambda/flambda_iterators.ml[473,16121+10]..[473,16121+16])
                                Some
                                  expression (middle_end/flambda/flambda_iterators.ml[473,16121+17]..[473,16121+24])
                                    Pexp_ident "new_sym" (middle_end/flambda/flambda_iterators.ml[473,16121+17]..[473,16121+24])
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[474,16146+8]..[474,16146+51])
                          Ppat_alias "named" (middle_end/flambda/flambda_iterators.ml[474,16146+45]..[474,16146+50])
                          pattern (middle_end/flambda/flambda_iterators.ml[474,16146+9]..[474,16146+41])
                            Ppat_construct "Read_symbol_field" (middle_end/flambda/flambda_iterators.ml[474,16146+10]..[474,16146+27])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[474,16146+28]..[474,16146+40])
                                Ppat_tuple
                                [
                                  pattern (middle_end/flambda/flambda_iterators.ml[474,16146+29]..[474,16146+32])
                                    Ppat_var "sym" (middle_end/flambda/flambda_iterators.ml[474,16146+29]..[474,16146+32])
                                  pattern (middle_end/flambda/flambda_iterators.ml[474,16146+34]..[474,16146+39])
                                    Ppat_var "field" (middle_end/flambda/flambda_iterators.ml[474,16146+34]..[474,16146+39])
                                ]
                        expression (middle_end/flambda/flambda_iterators.ml[475,16201+8]..[479,16292+44])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/flambda_iterators.ml[475,16201+12]..[475,16201+19])
                                Ppat_var "new_sym" (middle_end/flambda/flambda_iterators.ml[475,16201+12]..[475,16201+19])
                              expression (middle_end/flambda/flambda_iterators.ml[475,16201+22]..[475,16201+27])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[475,16201+22]..[475,16201+23])
                                  Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[475,16201+22]..[475,16201+23])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[475,16201+24]..[475,16201+27])
                                      Pexp_ident "sym" (middle_end/flambda/flambda_iterators.ml[475,16201+24]..[475,16201+27])
                                ]
                          ]
                          expression (middle_end/flambda/flambda_iterators.ml[476,16232+8]..[479,16292+44])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/flambda_iterators.ml[476,16232+11]..[476,16232+25])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[476,16232+19]..[476,16232+21])
                                Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[476,16232+19]..[476,16232+21])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[476,16232+11]..[476,16232+18])
                                    Pexp_ident "new_sym" (middle_end/flambda/flambda_iterators.ml[476,16232+11]..[476,16232+18])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[476,16232+22]..[476,16232+25])
                                    Pexp_ident "sym" (middle_end/flambda/flambda_iterators.ml[476,16232+22]..[476,16232+25])
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[477,16263+10]..[477,16263+15])
                              Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[477,16263+10]..[477,16263+15])
                            Some
                              expression (middle_end/flambda/flambda_iterators.ml[479,16292+10]..[479,16292+44])
                                Pexp_construct "Read_symbol_field" (middle_end/flambda/flambda_iterators.ml[479,16292+10]..[479,16292+27])
                                Some
                                  expression (middle_end/flambda/flambda_iterators.ml[479,16292+28]..[479,16292+44])
                                    Pexp_tuple
                                    [
                                      expression (middle_end/flambda/flambda_iterators.ml[479,16292+29]..[479,16292+36])
                                        Pexp_ident "new_sym" (middle_end/flambda/flambda_iterators.ml[479,16292+29]..[479,16292+36])
                                      expression (middle_end/flambda/flambda_iterators.ml[479,16292+38]..[479,16292+43])
                                        Pexp_ident "field" (middle_end/flambda/flambda_iterators.ml[479,16292+38]..[479,16292+43])
                                    ]
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[480,16337+8]..[482,16485+33])
                          Ppat_alias "named" (middle_end/flambda/flambda_iterators.ml[482,16485+28]..[482,16485+33])
                          pattern (middle_end/flambda/flambda_iterators.ml[480,16337+8]..[482,16485+24])
                            Ppat_or
                            pattern (middle_end/flambda/flambda_iterators.ml[480,16337+9]..[482,16485+14])
                              Ppat_or
                              pattern (middle_end/flambda/flambda_iterators.ml[480,16337+9]..[481,16411+73])
                                Ppat_or
                                pattern (middle_end/flambda/flambda_iterators.ml[480,16337+9]..[481,16411+57])
                                  Ppat_or
                                  pattern (middle_end/flambda/flambda_iterators.ml[480,16337+9]..[481,16411+25])
                                    Ppat_or
                                    pattern (middle_end/flambda/flambda_iterators.ml[480,16337+9]..[480,16337+73])
                                      Ppat_or
                                      pattern (middle_end/flambda/flambda_iterators.ml[480,16337+9]..[480,16337+56])
                                        Ppat_or
                                        pattern (middle_end/flambda/flambda_iterators.ml[480,16337+9]..[480,16337+36])
                                          Ppat_or
                                          pattern (middle_end/flambda/flambda_iterators.ml[480,16337+9]..[480,16337+16])
                                            Ppat_construct "Const" (middle_end/flambda/flambda_iterators.ml[480,16337+9]..[480,16337+14])
                                            Some
                                              []
                                              pattern (middle_end/flambda/flambda_iterators.ml[480,16337+15]..[480,16337+16])
                                                Ppat_any
                                          pattern (middle_end/flambda/flambda_iterators.ml[480,16337+19]..[480,16337+36])
                                            Ppat_construct "Allocated_const" (middle_end/flambda/flambda_iterators.ml[480,16337+19]..[480,16337+34])
                                            Some
                                              []
                                              pattern (middle_end/flambda/flambda_iterators.ml[480,16337+35]..[480,16337+36])
                                                Ppat_any
                                        pattern (middle_end/flambda/flambda_iterators.ml[480,16337+39]..[480,16337+56])
                                          Ppat_construct "Set_of_closures" (middle_end/flambda/flambda_iterators.ml[480,16337+39]..[480,16337+54])
                                          Some
                                            []
                                            pattern (middle_end/flambda/flambda_iterators.ml[480,16337+55]..[480,16337+56])
                                              Ppat_any
                                      pattern (middle_end/flambda/flambda_iterators.ml[480,16337+59]..[480,16337+73])
                                        Ppat_construct "Read_mutable" (middle_end/flambda/flambda_iterators.ml[480,16337+59]..[480,16337+71])
                                        Some
                                          []
                                          pattern (middle_end/flambda/flambda_iterators.ml[480,16337+72]..[480,16337+73])
                                            Ppat_any
                                    pattern (middle_end/flambda/flambda_iterators.ml[481,16411+8]..[481,16411+25])
                                      Ppat_construct "Project_closure" (middle_end/flambda/flambda_iterators.ml[481,16411+8]..[481,16411+23])
                                      Some
                                        []
                                        pattern (middle_end/flambda/flambda_iterators.ml[481,16411+24]..[481,16411+25])
                                          Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[481,16411+28]..[481,16411+57])
                                    Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/flambda_iterators.ml[481,16411+28]..[481,16411+55])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_iterators.ml[481,16411+56]..[481,16411+57])
                                        Ppat_any
                                pattern (middle_end/flambda/flambda_iterators.ml[481,16411+60]..[481,16411+73])
                                  Ppat_construct "Project_var" (middle_end/flambda/flambda_iterators.ml[481,16411+60]..[481,16411+71])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_iterators.ml[481,16411+72]..[481,16411+73])
                                      Ppat_any
                              pattern (middle_end/flambda/flambda_iterators.ml[482,16485+8]..[482,16485+14])
                                Ppat_construct "Prim" (middle_end/flambda/flambda_iterators.ml[482,16485+8]..[482,16485+12])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[482,16485+13]..[482,16485+14])
                                    Ppat_any
                            pattern (middle_end/flambda/flambda_iterators.ml[482,16485+17]..[482,16485+23])
                              Ppat_construct "Expr" (middle_end/flambda/flambda_iterators.ml[482,16485+17]..[482,16485+21])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_iterators.ml[482,16485+22]..[482,16485+23])
                                  Ppat_any
                        expression (middle_end/flambda/flambda_iterators.ml[482,16485+37]..[482,16485+42])
                          Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[482,16485+37]..[482,16485+42])
                    ]
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[483,16529+4]..[483,16529+8])
                    Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[483,16529+4]..[483,16529+8])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[485,16539+0]..[508,17316+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[485,16539+4]..[485,16539+34])
          Ppat_var "map_symbols_on_set_of_closures" (middle_end/flambda/flambda_iterators.ml[485,16539+4]..[485,16539+34])
        expression (middle_end/flambda/flambda_iterators.ml[486,16574+4]..[508,17316+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[486,16574+4]..[488,16671+22])
            Ppat_alias "set_of_closures" (middle_end/flambda/flambda_iterators.ml[488,16671+6]..[488,16671+21])
            pattern (middle_end/flambda/flambda_iterators.ml[486,16574+5]..[487,16634+33])
              Ppat_record Closed
              [
                "Flambda.function_decls" (middle_end/flambda/flambda_iterators.ml[486,16574+7]..[486,16574+29]) ghost
                  pattern (middle_end/flambda/flambda_iterators.ml[486,16574+7]..[486,16574+29])
                    Ppat_var "function_decls" (middle_end/flambda/flambda_iterators.ml[486,16574+7]..[486,16574+29])
                "free_vars" (middle_end/flambda/flambda_iterators.ml[486,16574+31]..[486,16574+40]) ghost
                  pattern (middle_end/flambda/flambda_iterators.ml[486,16574+31]..[486,16574+40])
                    Ppat_var "free_vars" (middle_end/flambda/flambda_iterators.ml[486,16574+31]..[486,16574+40])
                "specialised_args" (middle_end/flambda/flambda_iterators.ml[486,16574+42]..[486,16574+58]) ghost
                  pattern (middle_end/flambda/flambda_iterators.ml[486,16574+42]..[486,16574+58])
                    Ppat_var "specialised_args" (middle_end/flambda/flambda_iterators.ml[486,16574+42]..[486,16574+58])
                "direct_call_surrogates" (middle_end/flambda/flambda_iterators.ml[487,16634+8]..[487,16634+30]) ghost
                  pattern (middle_end/flambda/flambda_iterators.ml[487,16634+8]..[487,16634+30])
                    Ppat_var "direct_call_surrogates" (middle_end/flambda/flambda_iterators.ml[487,16634+8]..[487,16634+30])
              ]
          expression (middle_end/flambda/flambda_iterators.ml[489,16694+4]..[508,17316+47]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[489,16694+5]..[489,16694+6])
              Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[489,16694+5]..[489,16694+6])
            expression (middle_end/flambda/flambda_iterators.ml[490,16703+2]..[508,17316+47])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/flambda_iterators.ml[490,16703+6]..[490,16703+20])
                    Ppat_var "done_something" (middle_end/flambda/flambda_iterators.ml[490,16703+6]..[490,16703+20])
                  expression (middle_end/flambda/flambda_iterators.ml[490,16703+23]..[490,16703+32])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_iterators.ml[490,16703+23]..[490,16703+26])
                      Pexp_ident "ref" (middle_end/flambda/flambda_iterators.ml[490,16703+23]..[490,16703+26])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_iterators.ml[490,16703+27]..[490,16703+32])
                          Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[490,16703+27]..[490,16703+32])
                          None
                    ]
              ]
              expression (middle_end/flambda/flambda_iterators.ml[491,16739+2]..[508,17316+47])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (middle_end/flambda/flambda_iterators.ml[491,16739+6]..[491,16739+10])
                      Ppat_var "funs" (middle_end/flambda/flambda_iterators.ml[491,16739+6]..[491,16739+10])
                    expression (middle_end/flambda/flambda_iterators.ml[492,16752+4]..[499,17070+25])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_iterators.ml[492,16752+4]..[492,16752+20])
                        Pexp_ident "Variable.Map.map" (middle_end/flambda/flambda_iterators.ml[492,16752+4]..[492,16752+20])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_iterators.ml[492,16752+21]..[498,17028+41])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/flambda_iterators.ml[492,16752+26]..[492,16752+68])
                              Ppat_constraint
                              pattern (middle_end/flambda/flambda_iterators.ml[492,16752+27]..[492,16752+36])
                                Ppat_var "func_decl" (middle_end/flambda/flambda_iterators.ml[492,16752+27]..[492,16752+36])
                              core_type (middle_end/flambda/flambda_iterators.ml[492,16752+39]..[492,16752+67])
                                Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/flambda_iterators.ml[492,16752+39]..[492,16752+67])
                                []
                            expression (middle_end/flambda/flambda_iterators.ml[493,16824+8]..[498,17028+40])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/flambda_iterators.ml[493,16824+12]..[493,16824+16])
                                    Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[493,16824+12]..[493,16824+16])
                                  expression (middle_end/flambda/flambda_iterators.ml[493,16824+19]..[493,16824+48])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[493,16824+19]..[493,16824+30])
                                      Pexp_ident "map_symbols" (middle_end/flambda/flambda_iterators.ml[493,16824+19]..[493,16824+30])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[493,16824+31]..[493,16824+45])
                                          Pexp_field
                                          expression (middle_end/flambda/flambda_iterators.ml[493,16824+31]..[493,16824+40])
                                            Pexp_ident "func_decl" (middle_end/flambda/flambda_iterators.ml[493,16824+31]..[493,16824+40])
                                          "body" (middle_end/flambda/flambda_iterators.ml[493,16824+41]..[493,16824+45])
                                      <arg>
                                      Labelled "f"
                                        expression (middle_end/flambda/flambda_iterators.ml[493,16824+47]..[493,16824+48])
                                          Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[493,16824+47]..[493,16824+48])
                                    ]
                              ]
                              expression (middle_end/flambda/flambda_iterators.ml[494,16876+8]..[498,17028+40])
                                Pexp_sequence
                                expression (middle_end/flambda/flambda_iterators.ml[494,16876+8]..[496,16961+11])
                                  Pexp_ifthenelse
                                  expression (middle_end/flambda/flambda_iterators.ml[494,16876+11]..[494,16876+39])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[494,16876+11]..[494,16876+14])
                                      Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[494,16876+11]..[494,16876+14])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[494,16876+15]..[494,16876+39])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_iterators.ml[494,16876+21]..[494,16876+23])
                                            Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[494,16876+21]..[494,16876+23])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_iterators.ml[494,16876+16]..[494,16876+20])
                                                Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[494,16876+16]..[494,16876+20])
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_iterators.ml[494,16876+24]..[494,16876+38])
                                                Pexp_field
                                                expression (middle_end/flambda/flambda_iterators.ml[494,16876+24]..[494,16876+33])
                                                  Pexp_ident "func_decl" (middle_end/flambda/flambda_iterators.ml[494,16876+24]..[494,16876+33])
                                                "body" (middle_end/flambda/flambda_iterators.ml[494,16876+34]..[494,16876+38])
                                          ]
                                    ]
                                  expression (middle_end/flambda/flambda_iterators.ml[494,16876+45]..[496,16961+11])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[495,16927+25]..[495,16927+27])
                                      Pexp_ident ":=" (middle_end/flambda/flambda_iterators.ml[495,16927+25]..[495,16927+27])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[495,16927+10]..[495,16927+24])
                                          Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[495,16927+10]..[495,16927+24])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[495,16927+28]..[495,16927+32])
                                          Pexp_construct "true" (middle_end/flambda/flambda_iterators.ml[495,16927+28]..[495,16927+32])
                                          None
                                    ]
                                  None
                                expression (middle_end/flambda/flambda_iterators.ml[497,16974+8]..[498,17028+40])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_iterators.ml[497,16974+8]..[497,16974+43])
                                    Pexp_ident "Flambda.update_function_declaration" (middle_end/flambda/flambda_iterators.ml[497,16974+8]..[497,16974+43])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[497,16974+44]..[497,16974+53])
                                        Pexp_ident "func_decl" (middle_end/flambda/flambda_iterators.ml[497,16974+44]..[497,16974+53])
                                    <arg>
                                    Labelled "params"
                                      expression (middle_end/flambda/flambda_iterators.ml[498,17028+18]..[498,17028+34])
                                        Pexp_field
                                        expression (middle_end/flambda/flambda_iterators.ml[498,17028+18]..[498,17028+27])
                                          Pexp_ident "func_decl" (middle_end/flambda/flambda_iterators.ml[498,17028+18]..[498,17028+27])
                                        "params" (middle_end/flambda/flambda_iterators.ml[498,17028+28]..[498,17028+34])
                                    <arg>
                                    Labelled "body"
                                      expression (middle_end/flambda/flambda_iterators.ml[498,17028+36]..[498,17028+40])
                                        Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[498,17028+36]..[498,17028+40])
                                  ]
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_iterators.ml[499,17070+6]..[499,17070+25])
                            Pexp_field
                            expression (middle_end/flambda/flambda_iterators.ml[499,17070+6]..[499,17070+20])
                              Pexp_ident "function_decls" (middle_end/flambda/flambda_iterators.ml[499,17070+6]..[499,17070+20])
                            "funs" (middle_end/flambda/flambda_iterators.ml[499,17070+21]..[499,17070+25])
                      ]
                ]
                expression (middle_end/flambda/flambda_iterators.ml[501,17101+2]..[508,17316+47])
                  Pexp_ifthenelse
                  expression (middle_end/flambda/flambda_iterators.ml[501,17101+5]..[501,17101+24])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_iterators.ml[501,17101+5]..[501,17101+8])
                      Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[501,17101+5]..[501,17101+8])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_iterators.ml[501,17101+9]..[501,17101+24])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_iterators.ml[501,17101+9]..[501,17101+10])
                            Pexp_ident "!" (middle_end/flambda/flambda_iterators.ml[501,17101+9]..[501,17101+10])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[501,17101+10]..[501,17101+24])
                                Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[501,17101+10]..[501,17101+24])
                          ]
                    ]
                  expression (middle_end/flambda/flambda_iterators.ml[502,17131+4]..[502,17131+19])
                    Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[502,17131+4]..[502,17131+19])
                  Some
                    expression (middle_end/flambda/flambda_iterators.ml[504,17158+4]..[508,17316+47])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/flambda_iterators.ml[504,17158+8]..[504,17158+22])
                            Ppat_var "function_decls" (middle_end/flambda/flambda_iterators.ml[504,17158+8]..[504,17158+22])
                          expression (middle_end/flambda/flambda_iterators.ml[505,17183+6]..[505,17183+63])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_iterators.ml[505,17183+6]..[505,17183+42])
                              Pexp_ident "Flambda.update_function_declarations" (middle_end/flambda/flambda_iterators.ml[505,17183+6]..[505,17183+42])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_iterators.ml[505,17183+43]..[505,17183+57])
                                  Pexp_ident "function_decls" (middle_end/flambda/flambda_iterators.ml[505,17183+43]..[505,17183+57])
                              <arg>
                              Labelled "funs"
                                expression (middle_end/flambda/flambda_iterators.ml[505,17183+59]..[505,17183+63])
                                  Pexp_ident "funs" (middle_end/flambda/flambda_iterators.ml[505,17183+59]..[505,17183+63])
                            ]
                      ]
                      expression (middle_end/flambda/flambda_iterators.ml[507,17254+4]..[508,17316+47])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[507,17254+4]..[507,17254+34])
                          Pexp_ident "Flambda.create_set_of_closures" (middle_end/flambda/flambda_iterators.ml[507,17254+4]..[507,17254+34])
                        [
                          <arg>
                          Labelled "function_decls"
                            expression (middle_end/flambda/flambda_iterators.ml[507,17254+36]..[507,17254+50])
                              Pexp_ident "function_decls" (middle_end/flambda/flambda_iterators.ml[507,17254+36]..[507,17254+50])
                          <arg>
                          Labelled "free_vars"
                            expression (middle_end/flambda/flambda_iterators.ml[507,17254+52]..[507,17254+61])
                              Pexp_ident "free_vars" (middle_end/flambda/flambda_iterators.ml[507,17254+52]..[507,17254+61])
                          <arg>
                          Labelled "specialised_args"
                            expression (middle_end/flambda/flambda_iterators.ml[508,17316+7]..[508,17316+23])
                              Pexp_ident "specialised_args" (middle_end/flambda/flambda_iterators.ml[508,17316+7]..[508,17316+23])
                          <arg>
                          Labelled "direct_call_surrogates"
                            expression (middle_end/flambda/flambda_iterators.ml[508,17316+25]..[508,17316+47])
                              Pexp_ident "direct_call_surrogates" (middle_end/flambda/flambda_iterators.ml[508,17316+25]..[508,17316+47])
                        ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[510,17365+0]..[522,17890+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[510,17365+4]..[510,17365+33])
          Ppat_var "map_toplevel_sets_of_closures" (middle_end/flambda/flambda_iterators.ml[510,17365+4]..[510,17365+33])
        expression (middle_end/flambda/flambda_iterators.ml[510,17365+34]..[522,17890+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[510,17365+34]..[510,17365+38])
            Ppat_var "tree" (middle_end/flambda/flambda_iterators.ml[510,17365+34]..[510,17365+38])
          expression (middle_end/flambda/flambda_iterators.ml[510,17365+39]..[522,17890+8]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[510,17365+40]..[510,17365+41])
              Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[510,17365+40]..[510,17365+41])
            expression (middle_end/flambda/flambda_iterators.ml[511,17409+2]..[522,17890+8])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[511,17409+2]..[511,17409+20])
                Pexp_ident "map_toplevel_named" (middle_end/flambda/flambda_iterators.ml[511,17409+2]..[511,17409+20])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[511,17409+21]..[521,17846+43])
                    Pexp_function
                    [
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[512,17440+8]..[512,17440+50])
                          Ppat_alias "named" (middle_end/flambda/flambda_iterators.ml[512,17440+45]..[512,17440+50])
                          pattern (middle_end/flambda/flambda_iterators.ml[512,17440+8]..[512,17440+41])
                            Ppat_construct "Set_of_closures" (middle_end/flambda/flambda_iterators.ml[512,17440+9]..[512,17440+24])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[512,17440+25]..[512,17440+40])
                                Ppat_var "set_of_closures" (middle_end/flambda/flambda_iterators.ml[512,17440+25]..[512,17440+40])
                        expression (middle_end/flambda/flambda_iterators.ml[513,17494+8]..[517,17633+45])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/flambda_iterators.ml[513,17494+12]..[513,17494+31])
                                Ppat_var "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[513,17494+12]..[513,17494+31])
                              expression (middle_end/flambda/flambda_iterators.ml[513,17494+34]..[513,17494+51])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[513,17494+34]..[513,17494+35])
                                  Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[513,17494+34]..[513,17494+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[513,17494+36]..[513,17494+51])
                                      Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[513,17494+36]..[513,17494+51])
                                ]
                          ]
                          expression (middle_end/flambda/flambda_iterators.ml[514,17549+8]..[517,17633+45])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/flambda_iterators.ml[514,17549+11]..[514,17549+49])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[514,17549+31]..[514,17549+33])
                                Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[514,17549+31]..[514,17549+33])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[514,17549+11]..[514,17549+30])
                                    Pexp_ident "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[514,17549+11]..[514,17549+30])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[514,17549+34]..[514,17549+49])
                                    Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[514,17549+34]..[514,17549+49])
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[515,17604+10]..[515,17604+15])
                              Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[515,17604+10]..[515,17604+15])
                            Some
                              expression (middle_end/flambda/flambda_iterators.ml[517,17633+10]..[517,17633+45])
                                Pexp_construct "Set_of_closures" (middle_end/flambda/flambda_iterators.ml[517,17633+10]..[517,17633+25])
                                Some
                                  expression (middle_end/flambda/flambda_iterators.ml[517,17633+26]..[517,17633+45])
                                    Pexp_ident "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[517,17633+26]..[517,17633+45])
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[518,17679+8]..[521,17846+33])
                          Ppat_alias "named" (middle_end/flambda/flambda_iterators.ml[521,17846+28]..[521,17846+33])
                          pattern (middle_end/flambda/flambda_iterators.ml[518,17679+8]..[521,17846+24])
                            Ppat_or
                            pattern (middle_end/flambda/flambda_iterators.ml[518,17679+9]..[521,17846+14])
                              Ppat_or
                              pattern (middle_end/flambda/flambda_iterators.ml[518,17679+9]..[520,17772+73])
                                Ppat_or
                                pattern (middle_end/flambda/flambda_iterators.ml[518,17679+9]..[520,17772+57])
                                  Ppat_or
                                  pattern (middle_end/flambda/flambda_iterators.ml[518,17679+9]..[520,17772+25])
                                    Ppat_or
                                    pattern (middle_end/flambda/flambda_iterators.ml[518,17679+9]..[519,17744+27])
                                      Ppat_or
                                      pattern (middle_end/flambda/flambda_iterators.ml[518,17679+9]..[518,17679+64])
                                        Ppat_or
                                        pattern (middle_end/flambda/flambda_iterators.ml[518,17679+9]..[518,17679+47])
                                          Ppat_or
                                          pattern (middle_end/flambda/flambda_iterators.ml[518,17679+9]..[518,17679+27])
                                            Ppat_or
                                            pattern (middle_end/flambda/flambda_iterators.ml[518,17679+9]..[518,17679+17])
                                              Ppat_construct "Symbol" (middle_end/flambda/flambda_iterators.ml[518,17679+9]..[518,17679+15])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[518,17679+16]..[518,17679+17])
                                                  Ppat_any
                                            pattern (middle_end/flambda/flambda_iterators.ml[518,17679+20]..[518,17679+27])
                                              Ppat_construct "Const" (middle_end/flambda/flambda_iterators.ml[518,17679+20]..[518,17679+25])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[518,17679+26]..[518,17679+27])
                                                  Ppat_any
                                          pattern (middle_end/flambda/flambda_iterators.ml[518,17679+30]..[518,17679+47])
                                            Ppat_construct "Allocated_const" (middle_end/flambda/flambda_iterators.ml[518,17679+30]..[518,17679+45])
                                            Some
                                              []
                                              pattern (middle_end/flambda/flambda_iterators.ml[518,17679+46]..[518,17679+47])
                                                Ppat_any
                                        pattern (middle_end/flambda/flambda_iterators.ml[518,17679+50]..[518,17679+64])
                                          Ppat_construct "Read_mutable" (middle_end/flambda/flambda_iterators.ml[518,17679+50]..[518,17679+62])
                                          Some
                                            []
                                            pattern (middle_end/flambda/flambda_iterators.ml[518,17679+63]..[518,17679+64])
                                              Ppat_any
                                      pattern (middle_end/flambda/flambda_iterators.ml[519,17744+8]..[519,17744+27])
                                        Ppat_construct "Read_symbol_field" (middle_end/flambda/flambda_iterators.ml[519,17744+8]..[519,17744+25])
                                        Some
                                          []
                                          pattern (middle_end/flambda/flambda_iterators.ml[519,17744+26]..[519,17744+27])
                                            Ppat_any
                                    pattern (middle_end/flambda/flambda_iterators.ml[520,17772+8]..[520,17772+25])
                                      Ppat_construct "Project_closure" (middle_end/flambda/flambda_iterators.ml[520,17772+8]..[520,17772+23])
                                      Some
                                        []
                                        pattern (middle_end/flambda/flambda_iterators.ml[520,17772+24]..[520,17772+25])
                                          Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[520,17772+28]..[520,17772+57])
                                    Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/flambda_iterators.ml[520,17772+28]..[520,17772+55])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_iterators.ml[520,17772+56]..[520,17772+57])
                                        Ppat_any
                                pattern (middle_end/flambda/flambda_iterators.ml[520,17772+60]..[520,17772+73])
                                  Ppat_construct "Project_var" (middle_end/flambda/flambda_iterators.ml[520,17772+60]..[520,17772+71])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_iterators.ml[520,17772+72]..[520,17772+73])
                                      Ppat_any
                              pattern (middle_end/flambda/flambda_iterators.ml[521,17846+8]..[521,17846+14])
                                Ppat_construct "Prim" (middle_end/flambda/flambda_iterators.ml[521,17846+8]..[521,17846+12])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[521,17846+13]..[521,17846+14])
                                    Ppat_any
                            pattern (middle_end/flambda/flambda_iterators.ml[521,17846+17]..[521,17846+23])
                              Ppat_construct "Expr" (middle_end/flambda/flambda_iterators.ml[521,17846+17]..[521,17846+21])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_iterators.ml[521,17846+22]..[521,17846+23])
                                  Ppat_any
                        expression (middle_end/flambda/flambda_iterators.ml[521,17846+37]..[521,17846+42])
                          Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[521,17846+37]..[521,17846+42])
                    ]
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[522,17890+4]..[522,17890+8])
                    Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[522,17890+4]..[522,17890+8])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[524,17900+0]..[534,18144+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[524,17900+4]..[524,17900+13])
          Ppat_var "map_apply" (middle_end/flambda/flambda_iterators.ml[524,17900+4]..[524,17900+13])
        expression (middle_end/flambda/flambda_iterators.ml[524,17900+14]..[534,18144+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[524,17900+14]..[524,17900+18])
            Ppat_var "tree" (middle_end/flambda/flambda_iterators.ml[524,17900+14]..[524,17900+18])
          expression (middle_end/flambda/flambda_iterators.ml[524,17900+19]..[534,18144+8]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[524,17900+20]..[524,17900+21])
              Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[524,17900+20]..[524,17900+21])
            expression (middle_end/flambda/flambda_iterators.ml[525,17924+2]..[534,18144+8])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[525,17924+2]..[525,17924+5])
                Pexp_ident "map" (middle_end/flambda/flambda_iterators.ml[525,17924+2]..[525,17924+5])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[525,17924+6]..[532,18097+21])
                    Pexp_function
                    [
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[526,17940+8]..[526,17940+29])
                          Ppat_alias "expr" (middle_end/flambda/flambda_iterators.ml[526,17940+25]..[526,17940+29])
                          pattern (middle_end/flambda/flambda_iterators.ml[526,17940+8]..[526,17940+21])
                            Ppat_construct "Apply" (middle_end/flambda/flambda_iterators.ml[526,17940+9]..[526,17940+14])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[526,17940+15]..[526,17940+20])
                                Ppat_var "apply" (middle_end/flambda/flambda_iterators.ml[526,17940+15]..[526,17940+20])
                        expression (middle_end/flambda/flambda_iterators.ml[527,17973+8]..[531,18071+25])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/flambda_iterators.ml[527,17973+12]..[527,17973+21])
                                Ppat_var "new_apply" (middle_end/flambda/flambda_iterators.ml[527,17973+12]..[527,17973+21])
                              expression (middle_end/flambda/flambda_iterators.ml[527,17973+24]..[527,17973+31])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[527,17973+24]..[527,17973+25])
                                  Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[527,17973+24]..[527,17973+25])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[527,17973+26]..[527,17973+31])
                                      Pexp_ident "apply" (middle_end/flambda/flambda_iterators.ml[527,17973+26]..[527,17973+31])
                                ]
                          ]
                          expression (middle_end/flambda/flambda_iterators.ml[528,18008+8]..[531,18071+25])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/flambda_iterators.ml[528,18008+11]..[528,18008+29])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[528,18008+21]..[528,18008+23])
                                Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[528,18008+21]..[528,18008+23])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[528,18008+11]..[528,18008+20])
                                    Pexp_ident "new_apply" (middle_end/flambda/flambda_iterators.ml[528,18008+11]..[528,18008+20])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[528,18008+24]..[528,18008+29])
                                    Pexp_ident "apply" (middle_end/flambda/flambda_iterators.ml[528,18008+24]..[528,18008+29])
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[529,18043+10]..[529,18043+14])
                              Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[529,18043+10]..[529,18043+14])
                            Some
                              expression (middle_end/flambda/flambda_iterators.ml[531,18071+10]..[531,18071+25])
                                Pexp_construct "Apply" (middle_end/flambda/flambda_iterators.ml[531,18071+10]..[531,18071+15])
                                Some
                                  expression (middle_end/flambda/flambda_iterators.ml[531,18071+16]..[531,18071+25])
                                    Pexp_ident "new_apply" (middle_end/flambda/flambda_iterators.ml[531,18071+16]..[531,18071+25])
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[532,18097+8]..[532,18097+12])
                          Ppat_var "expr" (middle_end/flambda/flambda_iterators.ml[532,18097+8]..[532,18097+12])
                        expression (middle_end/flambda/flambda_iterators.ml[532,18097+16]..[532,18097+20])
                          Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[532,18097+16]..[532,18097+20])
                    ]
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[533,18119+4]..[533,18119+24])
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_iterators.ml[533,18119+9]..[533,18119+14])
                      Ppat_var "named" (middle_end/flambda/flambda_iterators.ml[533,18119+9]..[533,18119+14])
                    expression (middle_end/flambda/flambda_iterators.ml[533,18119+18]..[533,18119+23])
                      Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[533,18119+18]..[533,18119+23])
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[534,18144+4]..[534,18144+8])
                    Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[534,18144+4]..[534,18144+8])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[536,18154+0]..[548,18661+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[536,18154+4]..[536,18154+24])
          Ppat_var "map_sets_of_closures" (middle_end/flambda/flambda_iterators.ml[536,18154+4]..[536,18154+24])
        expression (middle_end/flambda/flambda_iterators.ml[536,18154+25]..[548,18661+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[536,18154+25]..[536,18154+29])
            Ppat_var "tree" (middle_end/flambda/flambda_iterators.ml[536,18154+25]..[536,18154+29])
          expression (middle_end/flambda/flambda_iterators.ml[536,18154+30]..[548,18661+8]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[536,18154+31]..[536,18154+32])
              Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[536,18154+31]..[536,18154+32])
            expression (middle_end/flambda/flambda_iterators.ml[537,18189+2]..[548,18661+8])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[537,18189+2]..[537,18189+11])
                Pexp_ident "map_named" (middle_end/flambda/flambda_iterators.ml[537,18189+2]..[537,18189+11])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[537,18189+12]..[547,18613+47])
                    Pexp_function
                    [
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[538,18211+8]..[538,18211+50])
                          Ppat_alias "named" (middle_end/flambda/flambda_iterators.ml[538,18211+45]..[538,18211+50])
                          pattern (middle_end/flambda/flambda_iterators.ml[538,18211+8]..[538,18211+41])
                            Ppat_construct "Set_of_closures" (middle_end/flambda/flambda_iterators.ml[538,18211+9]..[538,18211+24])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[538,18211+25]..[538,18211+40])
                                Ppat_var "set_of_closures" (middle_end/flambda/flambda_iterators.ml[538,18211+25]..[538,18211+40])
                        expression (middle_end/flambda/flambda_iterators.ml[539,18265+8]..[543,18404+45])
                          Pexp_let Nonrec
                          [
                            <def>
                              pattern (middle_end/flambda/flambda_iterators.ml[539,18265+12]..[539,18265+31])
                                Ppat_var "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[539,18265+12]..[539,18265+31])
                              expression (middle_end/flambda/flambda_iterators.ml[539,18265+34]..[539,18265+51])
                                Pexp_apply
                                expression (middle_end/flambda/flambda_iterators.ml[539,18265+34]..[539,18265+35])
                                  Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[539,18265+34]..[539,18265+35])
                                [
                                  <arg>
                                  Nolabel
                                    expression (middle_end/flambda/flambda_iterators.ml[539,18265+36]..[539,18265+51])
                                      Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[539,18265+36]..[539,18265+51])
                                ]
                          ]
                          expression (middle_end/flambda/flambda_iterators.ml[540,18320+8]..[543,18404+45])
                            Pexp_ifthenelse
                            expression (middle_end/flambda/flambda_iterators.ml[540,18320+11]..[540,18320+49])
                              Pexp_apply
                              expression (middle_end/flambda/flambda_iterators.ml[540,18320+31]..[540,18320+33])
                                Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[540,18320+31]..[540,18320+33])
                              [
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[540,18320+11]..[540,18320+30])
                                    Pexp_ident "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[540,18320+11]..[540,18320+30])
                                <arg>
                                Nolabel
                                  expression (middle_end/flambda/flambda_iterators.ml[540,18320+34]..[540,18320+49])
                                    Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[540,18320+34]..[540,18320+49])
                              ]
                            expression (middle_end/flambda/flambda_iterators.ml[541,18375+10]..[541,18375+15])
                              Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[541,18375+10]..[541,18375+15])
                            Some
                              expression (middle_end/flambda/flambda_iterators.ml[543,18404+10]..[543,18404+45])
                                Pexp_construct "Set_of_closures" (middle_end/flambda/flambda_iterators.ml[543,18404+10]..[543,18404+25])
                                Some
                                  expression (middle_end/flambda/flambda_iterators.ml[543,18404+26]..[543,18404+45])
                                    Pexp_ident "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[543,18404+26]..[543,18404+45])
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[544,18450+8]..[547,18613+37])
                          Ppat_alias "named" (middle_end/flambda/flambda_iterators.ml[547,18613+32]..[547,18613+37])
                          pattern (middle_end/flambda/flambda_iterators.ml[544,18450+8]..[547,18613+28])
                            Ppat_or
                            pattern (middle_end/flambda/flambda_iterators.ml[544,18450+9]..[546,18572+40])
                              Ppat_or
                              pattern (middle_end/flambda/flambda_iterators.ml[544,18450+9]..[546,18572+23])
                                Ppat_or
                                pattern (middle_end/flambda/flambda_iterators.ml[544,18450+9]..[546,18572+14])
                                  Ppat_or
                                  pattern (middle_end/flambda/flambda_iterators.ml[544,18450+9]..[545,18518+53])
                                    Ppat_or
                                    pattern (middle_end/flambda/flambda_iterators.ml[544,18450+9]..[545,18518+37])
                                      Ppat_or
                                      pattern (middle_end/flambda/flambda_iterators.ml[544,18450+9]..[544,18450+67])
                                        Ppat_or
                                        pattern (middle_end/flambda/flambda_iterators.ml[544,18450+9]..[544,18450+47])
                                          Ppat_or
                                          pattern (middle_end/flambda/flambda_iterators.ml[544,18450+9]..[544,18450+27])
                                            Ppat_or
                                            pattern (middle_end/flambda/flambda_iterators.ml[544,18450+9]..[544,18450+17])
                                              Ppat_construct "Symbol" (middle_end/flambda/flambda_iterators.ml[544,18450+9]..[544,18450+15])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[544,18450+16]..[544,18450+17])
                                                  Ppat_any
                                            pattern (middle_end/flambda/flambda_iterators.ml[544,18450+20]..[544,18450+27])
                                              Ppat_construct "Const" (middle_end/flambda/flambda_iterators.ml[544,18450+20]..[544,18450+25])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[544,18450+26]..[544,18450+27])
                                                  Ppat_any
                                          pattern (middle_end/flambda/flambda_iterators.ml[544,18450+30]..[544,18450+47])
                                            Ppat_construct "Allocated_const" (middle_end/flambda/flambda_iterators.ml[544,18450+30]..[544,18450+45])
                                            Some
                                              []
                                              pattern (middle_end/flambda/flambda_iterators.ml[544,18450+46]..[544,18450+47])
                                                Ppat_any
                                        pattern (middle_end/flambda/flambda_iterators.ml[544,18450+50]..[544,18450+67])
                                          Ppat_construct "Project_closure" (middle_end/flambda/flambda_iterators.ml[544,18450+50]..[544,18450+65])
                                          Some
                                            []
                                            pattern (middle_end/flambda/flambda_iterators.ml[544,18450+66]..[544,18450+67])
                                              Ppat_any
                                      pattern (middle_end/flambda/flambda_iterators.ml[545,18518+8]..[545,18518+37])
                                        Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/flambda_iterators.ml[545,18518+8]..[545,18518+35])
                                        Some
                                          []
                                          pattern (middle_end/flambda/flambda_iterators.ml[545,18518+36]..[545,18518+37])
                                            Ppat_any
                                    pattern (middle_end/flambda/flambda_iterators.ml[545,18518+40]..[545,18518+53])
                                      Ppat_construct "Project_var" (middle_end/flambda/flambda_iterators.ml[545,18518+40]..[545,18518+51])
                                      Some
                                        []
                                        pattern (middle_end/flambda/flambda_iterators.ml[545,18518+52]..[545,18518+53])
                                          Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[546,18572+8]..[546,18572+14])
                                    Ppat_construct "Prim" (middle_end/flambda/flambda_iterators.ml[546,18572+8]..[546,18572+12])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_iterators.ml[546,18572+13]..[546,18572+14])
                                        Ppat_any
                                pattern (middle_end/flambda/flambda_iterators.ml[546,18572+17]..[546,18572+23])
                                  Ppat_construct "Expr" (middle_end/flambda/flambda_iterators.ml[546,18572+17]..[546,18572+21])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_iterators.ml[546,18572+22]..[546,18572+23])
                                      Ppat_any
                              pattern (middle_end/flambda/flambda_iterators.ml[546,18572+26]..[546,18572+40])
                                Ppat_construct "Read_mutable" (middle_end/flambda/flambda_iterators.ml[546,18572+26]..[546,18572+38])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[546,18572+39]..[546,18572+40])
                                    Ppat_any
                            pattern (middle_end/flambda/flambda_iterators.ml[547,18613+8]..[547,18613+27])
                              Ppat_construct "Read_symbol_field" (middle_end/flambda/flambda_iterators.ml[547,18613+8]..[547,18613+25])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_iterators.ml[547,18613+26]..[547,18613+27])
                                  Ppat_any
                        expression (middle_end/flambda/flambda_iterators.ml[547,18613+41]..[547,18613+46])
                          Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[547,18613+41]..[547,18613+46])
                    ]
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[548,18661+4]..[548,18661+8])
                    Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[548,18661+4]..[548,18661+8])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[550,18671+0]..[561,19108+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[550,18671+4]..[550,18671+31])
          Ppat_var "map_project_var_to_expr_opt" (middle_end/flambda/flambda_iterators.ml[550,18671+4]..[550,18671+31])
        expression (middle_end/flambda/flambda_iterators.ml[550,18671+32]..[561,19108+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[550,18671+32]..[550,18671+36])
            Ppat_var "tree" (middle_end/flambda/flambda_iterators.ml[550,18671+32]..[550,18671+36])
          expression (middle_end/flambda/flambda_iterators.ml[550,18671+37]..[561,19108+8]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[550,18671+38]..[550,18671+39])
              Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[550,18671+38]..[550,18671+39])
            expression (middle_end/flambda/flambda_iterators.ml[551,18713+2]..[561,19108+8])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[551,18713+2]..[551,18713+11])
                Pexp_ident "map_named" (middle_end/flambda/flambda_iterators.ml[551,18713+2]..[551,18713+11])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[551,18713+12]..[560,19079+28])
                    Pexp_function
                    [
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[552,18735+8]..[552,18735+42])
                          Ppat_alias "named" (middle_end/flambda/flambda_iterators.ml[552,18735+37]..[552,18735+42])
                          pattern (middle_end/flambda/flambda_iterators.ml[552,18735+8]..[552,18735+33])
                            Ppat_construct "Project_var" (middle_end/flambda/flambda_iterators.ml[552,18735+9]..[552,18735+20])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[552,18735+21]..[552,18735+32])
                                Ppat_var "project_var" (middle_end/flambda/flambda_iterators.ml[552,18735+21]..[552,18735+32])
                        expression (middle_end/flambda/flambda_iterators.ml[553,18781+8]..[556,18877+11])
                          Pexp_match
                          expression (middle_end/flambda/flambda_iterators.ml[553,18781+20]..[553,18781+33])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_iterators.ml[553,18781+20]..[553,18781+21])
                              Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[553,18781+20]..[553,18781+21])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_iterators.ml[553,18781+22]..[553,18781+33])
                                  Pexp_ident "project_var" (middle_end/flambda/flambda_iterators.ml[553,18781+22]..[553,18781+33])
                            ]
                          [
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[554,18820+10]..[554,18820+14])
                                Ppat_construct "None" (middle_end/flambda/flambda_iterators.ml[554,18820+10]..[554,18820+14])
                                None
                              expression (middle_end/flambda/flambda_iterators.ml[554,18820+18]..[554,18820+23])
                                Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[554,18820+18]..[554,18820+23])
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[555,18844+10]..[555,18844+19])
                                Ppat_construct "Some" (middle_end/flambda/flambda_iterators.ml[555,18844+10]..[555,18844+14])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[555,18844+15]..[555,18844+19])
                                    Ppat_var "expr" (middle_end/flambda/flambda_iterators.ml[555,18844+15]..[555,18844+19])
                              expression (middle_end/flambda/flambda_iterators.ml[555,18844+23]..[555,18844+32])
                                Pexp_construct "Expr" (middle_end/flambda/flambda_iterators.ml[555,18844+23]..[555,18844+27])
                                Some
                                  expression (middle_end/flambda/flambda_iterators.ml[555,18844+28]..[555,18844+32])
                                    Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[555,18844+28]..[555,18844+32])
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[557,18889+8]..[560,19079+18])
                          Ppat_alias "named" (middle_end/flambda/flambda_iterators.ml[560,19079+13]..[560,19079+18])
                          pattern (middle_end/flambda/flambda_iterators.ml[557,18889+8]..[559,19015+63])
                            Ppat_or
                            pattern (middle_end/flambda/flambda_iterators.ml[557,18889+9]..[559,19015+40])
                              Ppat_or
                              pattern (middle_end/flambda/flambda_iterators.ml[557,18889+9]..[559,19015+23])
                                Ppat_or
                                pattern (middle_end/flambda/flambda_iterators.ml[557,18889+9]..[559,19015+14])
                                  Ppat_or
                                  pattern (middle_end/flambda/flambda_iterators.ml[557,18889+9]..[558,18937+77])
                                    Ppat_or
                                    pattern (middle_end/flambda/flambda_iterators.ml[557,18889+9]..[558,18937+45])
                                      Ppat_or
                                      pattern (middle_end/flambda/flambda_iterators.ml[557,18889+9]..[558,18937+25])
                                        Ppat_or
                                        pattern (middle_end/flambda/flambda_iterators.ml[557,18889+9]..[557,18889+47])
                                          Ppat_or
                                          pattern (middle_end/flambda/flambda_iterators.ml[557,18889+9]..[557,18889+27])
                                            Ppat_or
                                            pattern (middle_end/flambda/flambda_iterators.ml[557,18889+9]..[557,18889+17])
                                              Ppat_construct "Symbol" (middle_end/flambda/flambda_iterators.ml[557,18889+9]..[557,18889+15])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[557,18889+16]..[557,18889+17])
                                                  Ppat_any
                                            pattern (middle_end/flambda/flambda_iterators.ml[557,18889+20]..[557,18889+27])
                                              Ppat_construct "Const" (middle_end/flambda/flambda_iterators.ml[557,18889+20]..[557,18889+25])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[557,18889+26]..[557,18889+27])
                                                  Ppat_any
                                          pattern (middle_end/flambda/flambda_iterators.ml[557,18889+30]..[557,18889+47])
                                            Ppat_construct "Allocated_const" (middle_end/flambda/flambda_iterators.ml[557,18889+30]..[557,18889+45])
                                            Some
                                              []
                                              pattern (middle_end/flambda/flambda_iterators.ml[557,18889+46]..[557,18889+47])
                                                Ppat_any
                                        pattern (middle_end/flambda/flambda_iterators.ml[558,18937+8]..[558,18937+25])
                                          Ppat_construct "Set_of_closures" (middle_end/flambda/flambda_iterators.ml[558,18937+8]..[558,18937+23])
                                          Some
                                            []
                                            pattern (middle_end/flambda/flambda_iterators.ml[558,18937+24]..[558,18937+25])
                                              Ppat_any
                                      pattern (middle_end/flambda/flambda_iterators.ml[558,18937+28]..[558,18937+45])
                                        Ppat_construct "Project_closure" (middle_end/flambda/flambda_iterators.ml[558,18937+28]..[558,18937+43])
                                        Some
                                          []
                                          pattern (middle_end/flambda/flambda_iterators.ml[558,18937+44]..[558,18937+45])
                                            Ppat_any
                                    pattern (middle_end/flambda/flambda_iterators.ml[558,18937+48]..[558,18937+77])
                                      Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/flambda_iterators.ml[558,18937+48]..[558,18937+75])
                                      Some
                                        []
                                        pattern (middle_end/flambda/flambda_iterators.ml[558,18937+76]..[558,18937+77])
                                          Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[559,19015+8]..[559,19015+14])
                                    Ppat_construct "Prim" (middle_end/flambda/flambda_iterators.ml[559,19015+8]..[559,19015+12])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_iterators.ml[559,19015+13]..[559,19015+14])
                                        Ppat_any
                                pattern (middle_end/flambda/flambda_iterators.ml[559,19015+17]..[559,19015+23])
                                  Ppat_construct "Expr" (middle_end/flambda/flambda_iterators.ml[559,19015+17]..[559,19015+21])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_iterators.ml[559,19015+22]..[559,19015+23])
                                      Ppat_any
                              pattern (middle_end/flambda/flambda_iterators.ml[559,19015+26]..[559,19015+40])
                                Ppat_construct "Read_mutable" (middle_end/flambda/flambda_iterators.ml[559,19015+26]..[559,19015+38])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[559,19015+39]..[559,19015+40])
                                    Ppat_any
                            pattern (middle_end/flambda/flambda_iterators.ml[559,19015+43]..[559,19015+62])
                              Ppat_construct "Read_symbol_field" (middle_end/flambda/flambda_iterators.ml[559,19015+43]..[559,19015+60])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_iterators.ml[559,19015+61]..[559,19015+62])
                                  Ppat_any
                        expression (middle_end/flambda/flambda_iterators.ml[560,19079+22]..[560,19079+27])
                          Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[560,19079+22]..[560,19079+27])
                    ]
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[561,19108+4]..[561,19108+8])
                    Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[561,19108+4]..[561,19108+8])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[563,19118+0]..[574,19553+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[563,19118+4]..[563,19118+32])
          Ppat_var "map_project_var_to_named_opt" (middle_end/flambda/flambda_iterators.ml[563,19118+4]..[563,19118+32])
        expression (middle_end/flambda/flambda_iterators.ml[563,19118+33]..[574,19553+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[563,19118+33]..[563,19118+37])
            Ppat_var "tree" (middle_end/flambda/flambda_iterators.ml[563,19118+33]..[563,19118+37])
          expression (middle_end/flambda/flambda_iterators.ml[563,19118+38]..[574,19553+8]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[563,19118+39]..[563,19118+40])
              Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[563,19118+39]..[563,19118+40])
            expression (middle_end/flambda/flambda_iterators.ml[564,19161+2]..[574,19553+8])
              Pexp_apply
              expression (middle_end/flambda/flambda_iterators.ml[564,19161+2]..[564,19161+11])
                Pexp_ident "map_named" (middle_end/flambda/flambda_iterators.ml[564,19161+2]..[564,19161+11])
              [
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[564,19161+12]..[573,19524+28])
                    Pexp_function
                    [
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[565,19183+8]..[565,19183+42])
                          Ppat_alias "named" (middle_end/flambda/flambda_iterators.ml[565,19183+37]..[565,19183+42])
                          pattern (middle_end/flambda/flambda_iterators.ml[565,19183+8]..[565,19183+33])
                            Ppat_construct "Project_var" (middle_end/flambda/flambda_iterators.ml[565,19183+9]..[565,19183+20])
                            Some
                              []
                              pattern (middle_end/flambda/flambda_iterators.ml[565,19183+21]..[565,19183+32])
                                Ppat_var "project_var" (middle_end/flambda/flambda_iterators.ml[565,19183+21]..[565,19183+32])
                        expression (middle_end/flambda/flambda_iterators.ml[566,19229+8]..[569,19322+11])
                          Pexp_match
                          expression (middle_end/flambda/flambda_iterators.ml[566,19229+20]..[566,19229+33])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_iterators.ml[566,19229+20]..[566,19229+21])
                              Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[566,19229+20]..[566,19229+21])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_iterators.ml[566,19229+22]..[566,19229+33])
                                  Pexp_ident "project_var" (middle_end/flambda/flambda_iterators.ml[566,19229+22]..[566,19229+33])
                            ]
                          [
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[567,19268+10]..[567,19268+14])
                                Ppat_construct "None" (middle_end/flambda/flambda_iterators.ml[567,19268+10]..[567,19268+14])
                                None
                              expression (middle_end/flambda/flambda_iterators.ml[567,19268+18]..[567,19268+23])
                                Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[567,19268+18]..[567,19268+23])
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[568,19292+10]..[568,19292+20])
                                Ppat_construct "Some" (middle_end/flambda/flambda_iterators.ml[568,19292+10]..[568,19292+14])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[568,19292+15]..[568,19292+20])
                                    Ppat_var "named" (middle_end/flambda/flambda_iterators.ml[568,19292+15]..[568,19292+20])
                              expression (middle_end/flambda/flambda_iterators.ml[568,19292+24]..[568,19292+29])
                                Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[568,19292+24]..[568,19292+29])
                          ]
                      <case>
                        pattern (middle_end/flambda/flambda_iterators.ml[570,19334+8]..[573,19524+18])
                          Ppat_alias "named" (middle_end/flambda/flambda_iterators.ml[573,19524+13]..[573,19524+18])
                          pattern (middle_end/flambda/flambda_iterators.ml[570,19334+8]..[572,19460+63])
                            Ppat_or
                            pattern (middle_end/flambda/flambda_iterators.ml[570,19334+9]..[572,19460+40])
                              Ppat_or
                              pattern (middle_end/flambda/flambda_iterators.ml[570,19334+9]..[572,19460+23])
                                Ppat_or
                                pattern (middle_end/flambda/flambda_iterators.ml[570,19334+9]..[572,19460+14])
                                  Ppat_or
                                  pattern (middle_end/flambda/flambda_iterators.ml[570,19334+9]..[571,19382+77])
                                    Ppat_or
                                    pattern (middle_end/flambda/flambda_iterators.ml[570,19334+9]..[571,19382+45])
                                      Ppat_or
                                      pattern (middle_end/flambda/flambda_iterators.ml[570,19334+9]..[571,19382+25])
                                        Ppat_or
                                        pattern (middle_end/flambda/flambda_iterators.ml[570,19334+9]..[570,19334+47])
                                          Ppat_or
                                          pattern (middle_end/flambda/flambda_iterators.ml[570,19334+9]..[570,19334+27])
                                            Ppat_or
                                            pattern (middle_end/flambda/flambda_iterators.ml[570,19334+9]..[570,19334+17])
                                              Ppat_construct "Symbol" (middle_end/flambda/flambda_iterators.ml[570,19334+9]..[570,19334+15])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[570,19334+16]..[570,19334+17])
                                                  Ppat_any
                                            pattern (middle_end/flambda/flambda_iterators.ml[570,19334+20]..[570,19334+27])
                                              Ppat_construct "Const" (middle_end/flambda/flambda_iterators.ml[570,19334+20]..[570,19334+25])
                                              Some
                                                []
                                                pattern (middle_end/flambda/flambda_iterators.ml[570,19334+26]..[570,19334+27])
                                                  Ppat_any
                                          pattern (middle_end/flambda/flambda_iterators.ml[570,19334+30]..[570,19334+47])
                                            Ppat_construct "Allocated_const" (middle_end/flambda/flambda_iterators.ml[570,19334+30]..[570,19334+45])
                                            Some
                                              []
                                              pattern (middle_end/flambda/flambda_iterators.ml[570,19334+46]..[570,19334+47])
                                                Ppat_any
                                        pattern (middle_end/flambda/flambda_iterators.ml[571,19382+8]..[571,19382+25])
                                          Ppat_construct "Set_of_closures" (middle_end/flambda/flambda_iterators.ml[571,19382+8]..[571,19382+23])
                                          Some
                                            []
                                            pattern (middle_end/flambda/flambda_iterators.ml[571,19382+24]..[571,19382+25])
                                              Ppat_any
                                      pattern (middle_end/flambda/flambda_iterators.ml[571,19382+28]..[571,19382+45])
                                        Ppat_construct "Project_closure" (middle_end/flambda/flambda_iterators.ml[571,19382+28]..[571,19382+43])
                                        Some
                                          []
                                          pattern (middle_end/flambda/flambda_iterators.ml[571,19382+44]..[571,19382+45])
                                            Ppat_any
                                    pattern (middle_end/flambda/flambda_iterators.ml[571,19382+48]..[571,19382+77])
                                      Ppat_construct "Move_within_set_of_closures" (middle_end/flambda/flambda_iterators.ml[571,19382+48]..[571,19382+75])
                                      Some
                                        []
                                        pattern (middle_end/flambda/flambda_iterators.ml[571,19382+76]..[571,19382+77])
                                          Ppat_any
                                  pattern (middle_end/flambda/flambda_iterators.ml[572,19460+8]..[572,19460+14])
                                    Ppat_construct "Prim" (middle_end/flambda/flambda_iterators.ml[572,19460+8]..[572,19460+12])
                                    Some
                                      []
                                      pattern (middle_end/flambda/flambda_iterators.ml[572,19460+13]..[572,19460+14])
                                        Ppat_any
                                pattern (middle_end/flambda/flambda_iterators.ml[572,19460+17]..[572,19460+23])
                                  Ppat_construct "Expr" (middle_end/flambda/flambda_iterators.ml[572,19460+17]..[572,19460+21])
                                  Some
                                    []
                                    pattern (middle_end/flambda/flambda_iterators.ml[572,19460+22]..[572,19460+23])
                                      Ppat_any
                              pattern (middle_end/flambda/flambda_iterators.ml[572,19460+26]..[572,19460+40])
                                Ppat_construct "Read_mutable" (middle_end/flambda/flambda_iterators.ml[572,19460+26]..[572,19460+38])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[572,19460+39]..[572,19460+40])
                                    Ppat_any
                            pattern (middle_end/flambda/flambda_iterators.ml[572,19460+43]..[572,19460+62])
                              Ppat_construct "Read_symbol_field" (middle_end/flambda/flambda_iterators.ml[572,19460+43]..[572,19460+60])
                              Some
                                []
                                pattern (middle_end/flambda/flambda_iterators.ml[572,19460+61]..[572,19460+62])
                                  Ppat_any
                        expression (middle_end/flambda/flambda_iterators.ml[573,19524+22]..[573,19524+27])
                          Pexp_ident "named" (middle_end/flambda/flambda_iterators.ml[573,19524+22]..[573,19524+27])
                    ]
                <arg>
                Nolabel
                  expression (middle_end/flambda/flambda_iterators.ml[574,19553+4]..[574,19553+8])
                    Pexp_ident "tree" (middle_end/flambda/flambda_iterators.ml[574,19553+4]..[574,19553+8])
              ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[576,19563+0]..[600,20434+68])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[576,19563+4]..[576,19563+23])
          Ppat_var "map_function_bodies" (middle_end/flambda/flambda_iterators.ml[576,19563+4]..[576,19563+23])
        expression (middle_end/flambda/flambda_iterators.ml[576,19563+24]..[600,20434+68]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[576,19563+24]..[576,19563+67])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_iterators.ml[576,19563+25]..[576,19563+40])
              Ppat_var "set_of_closures" (middle_end/flambda/flambda_iterators.ml[576,19563+25]..[576,19563+40])
            core_type (middle_end/flambda/flambda_iterators.ml[576,19563+43]..[576,19563+66])
              Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/flambda_iterators.ml[576,19563+43]..[576,19563+66])
              []
          expression (middle_end/flambda/flambda_iterators.ml[576,19563+68]..[600,20434+68]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[576,19563+69]..[576,19563+70])
              Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[576,19563+69]..[576,19563+70])
            expression (middle_end/flambda/flambda_iterators.ml[577,19636+2]..[600,20434+68])
              Pexp_let Nonrec
              [
                <def>
                  pattern (middle_end/flambda/flambda_iterators.ml[577,19636+6]..[577,19636+20])
                    Ppat_var "done_something" (middle_end/flambda/flambda_iterators.ml[577,19636+6]..[577,19636+20])
                  expression (middle_end/flambda/flambda_iterators.ml[577,19636+23]..[577,19636+32])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_iterators.ml[577,19636+23]..[577,19636+26])
                      Pexp_ident "ref" (middle_end/flambda/flambda_iterators.ml[577,19636+23]..[577,19636+26])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_iterators.ml[577,19636+27]..[577,19636+32])
                          Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[577,19636+27]..[577,19636+32])
                          None
                    ]
              ]
              expression (middle_end/flambda/flambda_iterators.ml[578,19672+2]..[600,20434+68])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (middle_end/flambda/flambda_iterators.ml[578,19672+6]..[578,19672+10])
                      Ppat_var "funs" (middle_end/flambda/flambda_iterators.ml[578,19672+6]..[578,19672+10])
                    expression (middle_end/flambda/flambda_iterators.ml[579,19685+4]..[588,20061+41])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_iterators.ml[579,19685+4]..[579,19685+20])
                        Pexp_ident "Variable.Map.map" (middle_end/flambda/flambda_iterators.ml[579,19685+4]..[579,19685+20])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_iterators.ml[579,19685+21]..[587,20048+12])
                            Pexp_fun
                            Nolabel
                            None
                            pattern (middle_end/flambda/flambda_iterators.ml[579,19685+26]..[579,19685+72])
                              Ppat_constraint
                              pattern (middle_end/flambda/flambda_iterators.ml[579,19685+27]..[579,19685+40])
                                Ppat_var "function_decl" (middle_end/flambda/flambda_iterators.ml[579,19685+27]..[579,19685+40])
                              core_type (middle_end/flambda/flambda_iterators.ml[579,19685+43]..[579,19685+71])
                                Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/flambda_iterators.ml[579,19685+43]..[579,19685+71])
                                []
                            expression (middle_end/flambda/flambda_iterators.ml[580,19761+8]..[587,20048+11])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (middle_end/flambda/flambda_iterators.ml[580,19761+12]..[580,19761+20])
                                    Ppat_var "new_body" (middle_end/flambda/flambda_iterators.ml[580,19761+12]..[580,19761+20])
                                  expression (middle_end/flambda/flambda_iterators.ml[580,19761+23]..[580,19761+43])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[580,19761+23]..[580,19761+24])
                                      Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[580,19761+23]..[580,19761+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[580,19761+25]..[580,19761+43])
                                          Pexp_field
                                          expression (middle_end/flambda/flambda_iterators.ml[580,19761+25]..[580,19761+38])
                                            Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[580,19761+25]..[580,19761+38])
                                          "body" (middle_end/flambda/flambda_iterators.ml[580,19761+39]..[580,19761+43])
                                    ]
                              ]
                              expression (middle_end/flambda/flambda_iterators.ml[581,19808+8]..[587,20048+11])
                                Pexp_ifthenelse
                                expression (middle_end/flambda/flambda_iterators.ml[581,19808+11]..[581,19808+41])
                                  Pexp_apply
                                  expression (middle_end/flambda/flambda_iterators.ml[581,19808+20]..[581,19808+22])
                                    Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[581,19808+20]..[581,19808+22])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[581,19808+11]..[581,19808+19])
                                        Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[581,19808+11]..[581,19808+19])
                                    <arg>
                                    Nolabel
                                      expression (middle_end/flambda/flambda_iterators.ml[581,19808+23]..[581,19808+41])
                                        Pexp_field
                                        expression (middle_end/flambda/flambda_iterators.ml[581,19808+23]..[581,19808+36])
                                          Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[581,19808+23]..[581,19808+36])
                                        "body" (middle_end/flambda/flambda_iterators.ml[581,19808+37]..[581,19808+41])
                                  ]
                                expression (middle_end/flambda/flambda_iterators.ml[582,19855+10]..[582,19855+23])
                                  Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[582,19855+10]..[582,19855+23])
                                Some
                                  expression (middle_end/flambda/flambda_iterators.ml[583,19879+13]..[587,20048+11])
                                    Pexp_sequence
                                    expression (middle_end/flambda/flambda_iterators.ml[584,19898+10]..[584,19898+32])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[584,19898+25]..[584,19898+27])
                                        Pexp_ident ":=" (middle_end/flambda/flambda_iterators.ml[584,19898+25]..[584,19898+27])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[584,19898+10]..[584,19898+24])
                                            Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[584,19898+10]..[584,19898+24])
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[584,19898+28]..[584,19898+32])
                                            Pexp_construct "true" (middle_end/flambda/flambda_iterators.ml[584,19898+28]..[584,19898+32])
                                            None
                                      ]
                                    expression (middle_end/flambda/flambda_iterators.ml[585,19932+10]..[586,19992+55])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[585,19932+10]..[585,19932+45])
                                        Pexp_ident "Flambda.update_function_declaration" (middle_end/flambda/flambda_iterators.ml[585,19932+10]..[585,19932+45])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[585,19932+46]..[585,19932+59])
                                            Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[585,19932+46]..[585,19932+59])
                                        <arg>
                                        Labelled "body"
                                          expression (middle_end/flambda/flambda_iterators.ml[586,19992+18]..[586,19992+26])
                                            Pexp_ident "new_body" (middle_end/flambda/flambda_iterators.ml[586,19992+18]..[586,19992+26])
                                        <arg>
                                        Labelled "params"
                                          expression (middle_end/flambda/flambda_iterators.ml[586,19992+35]..[586,19992+55])
                                            Pexp_field
                                            expression (middle_end/flambda/flambda_iterators.ml[586,19992+35]..[586,19992+48])
                                              Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[586,19992+35]..[586,19992+48])
                                            "params" (middle_end/flambda/flambda_iterators.ml[586,19992+49]..[586,19992+55])
                                      ]
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_iterators.ml[588,20061+6]..[588,20061+41])
                            Pexp_field
                            expression (middle_end/flambda/flambda_iterators.ml[588,20061+6]..[588,20061+36])
                              Pexp_field
                              expression (middle_end/flambda/flambda_iterators.ml[588,20061+6]..[588,20061+21])
                                Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[588,20061+6]..[588,20061+21])
                              "function_decls" (middle_end/flambda/flambda_iterators.ml[588,20061+22]..[588,20061+36])
                            "funs" (middle_end/flambda/flambda_iterators.ml[588,20061+37]..[588,20061+41])
                      ]
                ]
                expression (middle_end/flambda/flambda_iterators.ml[590,20108+2]..[600,20434+68])
                  Pexp_ifthenelse
                  expression (middle_end/flambda/flambda_iterators.ml[590,20108+5]..[590,20108+24])
                    Pexp_apply
                    expression (middle_end/flambda/flambda_iterators.ml[590,20108+5]..[590,20108+8])
                      Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[590,20108+5]..[590,20108+8])
                    [
                      <arg>
                      Nolabel
                        expression (middle_end/flambda/flambda_iterators.ml[590,20108+9]..[590,20108+24])
                          Pexp_apply
                          expression (middle_end/flambda/flambda_iterators.ml[590,20108+9]..[590,20108+10])
                            Pexp_ident "!" (middle_end/flambda/flambda_iterators.ml[590,20108+9]..[590,20108+10])
                          [
                            <arg>
                            Nolabel
                              expression (middle_end/flambda/flambda_iterators.ml[590,20108+10]..[590,20108+24])
                                Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[590,20108+10]..[590,20108+24])
                          ]
                    ]
                  expression (middle_end/flambda/flambda_iterators.ml[591,20138+4]..[591,20138+19])
                    Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[591,20138+4]..[591,20138+19])
                  Some
                    expression (middle_end/flambda/flambda_iterators.ml[593,20165+4]..[600,20434+68])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (middle_end/flambda/flambda_iterators.ml[593,20165+8]..[593,20165+22])
                            Ppat_var "function_decls" (middle_end/flambda/flambda_iterators.ml[593,20165+8]..[593,20165+22])
                          expression (middle_end/flambda/flambda_iterators.ml[594,20190+6]..[594,20190+79])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_iterators.ml[594,20190+6]..[594,20190+42])
                              Pexp_ident "Flambda.update_function_declarations" (middle_end/flambda/flambda_iterators.ml[594,20190+6]..[594,20190+42])
                            [
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_iterators.ml[594,20190+43]..[594,20190+73])
                                  Pexp_field
                                  expression (middle_end/flambda/flambda_iterators.ml[594,20190+43]..[594,20190+58])
                                    Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[594,20190+43]..[594,20190+58])
                                  "function_decls" (middle_end/flambda/flambda_iterators.ml[594,20190+59]..[594,20190+73])
                              <arg>
                              Labelled "funs"
                                expression (middle_end/flambda/flambda_iterators.ml[594,20190+75]..[594,20190+79])
                                  Pexp_ident "funs" (middle_end/flambda/flambda_iterators.ml[594,20190+75]..[594,20190+79])
                            ]
                      ]
                      expression (middle_end/flambda/flambda_iterators.ml[596,20277+4]..[600,20434+68])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[596,20277+4]..[596,20277+34])
                          Pexp_ident "Flambda.create_set_of_closures" (middle_end/flambda/flambda_iterators.ml[596,20277+4]..[596,20277+34])
                        [
                          <arg>
                          Labelled "function_decls"
                            expression (middle_end/flambda/flambda_iterators.ml[597,20312+7]..[597,20312+21])
                              Pexp_ident "function_decls" (middle_end/flambda/flambda_iterators.ml[597,20312+7]..[597,20312+21])
                          <arg>
                          Labelled "free_vars"
                            expression (middle_end/flambda/flambda_iterators.ml[598,20334+17]..[598,20334+42])
                              Pexp_field
                              expression (middle_end/flambda/flambda_iterators.ml[598,20334+17]..[598,20334+32])
                                Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[598,20334+17]..[598,20334+32])
                              "free_vars" (middle_end/flambda/flambda_iterators.ml[598,20334+33]..[598,20334+42])
                          <arg>
                          Labelled "specialised_args"
                            expression (middle_end/flambda/flambda_iterators.ml[599,20377+24]..[599,20377+56])
                              Pexp_field
                              expression (middle_end/flambda/flambda_iterators.ml[599,20377+24]..[599,20377+39])
                                Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[599,20377+24]..[599,20377+39])
                              "specialised_args" (middle_end/flambda/flambda_iterators.ml[599,20377+40]..[599,20377+56])
                          <arg>
                          Labelled "direct_call_surrogates"
                            expression (middle_end/flambda/flambda_iterators.ml[600,20434+30]..[600,20434+68])
                              Pexp_field
                              expression (middle_end/flambda/flambda_iterators.ml[600,20434+30]..[600,20434+45])
                                Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[600,20434+30]..[600,20434+45])
                              "direct_call_surrogates" (middle_end/flambda/flambda_iterators.ml[600,20434+46]..[600,20434+68])
                        ]
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[602,20504+0]..[698,24209+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[602,20504+4]..[602,20504+35])
          Ppat_var "map_sets_of_closures_of_program" (middle_end/flambda/flambda_iterators.ml[602,20504+4]..[602,20504+35])
        expression (middle_end/flambda/flambda_iterators.ml[602,20504+36]..[698,24209+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[602,20504+36]..[602,20504+63])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_iterators.ml[602,20504+37]..[602,20504+44])
              Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[602,20504+37]..[602,20504+44])
            core_type (middle_end/flambda/flambda_iterators.ml[602,20504+47]..[602,20504+62])
              Ptyp_constr "Flambda.program" (middle_end/flambda/flambda_iterators.ml[602,20504+47]..[602,20504+62])
              []
          expression (middle_end/flambda/flambda_iterators.ml[603,20568+4]..[698,24209+3]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[603,20568+6]..[603,20568+60])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_iterators.ml[603,20568+6]..[603,20568+7])
                Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[603,20568+6]..[603,20568+7])
              core_type (middle_end/flambda/flambda_iterators.ml[603,20568+10]..[603,20568+60])
                Ptyp_arrow
                Nolabel
                core_type (middle_end/flambda/flambda_iterators.ml[603,20568+10]..[603,20568+33])
                  Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/flambda_iterators.ml[603,20568+10]..[603,20568+33])
                  []
                core_type (middle_end/flambda/flambda_iterators.ml[603,20568+37]..[603,20568+60])
                  Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/flambda_iterators.ml[603,20568+37]..[603,20568+60])
                  []
            expression (middle_end/flambda/flambda_iterators.ml[604,20632+2]..[698,24209+3])
              Pexp_let Rec
              [
                <def>
                  pattern (middle_end/flambda/flambda_iterators.ml[604,20632+10]..[604,20632+14])
                    Ppat_var "loop" (middle_end/flambda/flambda_iterators.ml[604,20632+10]..[604,20632+14])
                  expression (middle_end/flambda/flambda_iterators.ml[604,20632+15]..[694,24118+22]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_iterators.ml[604,20632+15]..[604,20632+47])
                      Ppat_constraint
                      pattern (middle_end/flambda/flambda_iterators.ml[604,20632+16]..[604,20632+23])
                        Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[604,20632+16]..[604,20632+23])
                      core_type (middle_end/flambda/flambda_iterators.ml[604,20632+26]..[604,20632+46])
                        Ptyp_constr "Flambda.program_body" (middle_end/flambda/flambda_iterators.ml[604,20632+26]..[604,20632+46])
                        []
                    expression (middle_end/flambda/flambda_iterators.ml[604,20632+48]..[694,24118+22])
                      Pexp_constraint
                      expression (middle_end/flambda/flambda_iterators.ml[605,20705+4]..[694,24118+22])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/flambda_iterators.ml[605,20705+8]..[605,20705+36])
                              Ppat_var "map_constant_set_of_closures" (middle_end/flambda/flambda_iterators.ml[605,20705+8]..[605,20705+36])
                            expression (middle_end/flambda/flambda_iterators.ml[605,20705+37]..[634,21883+72]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/flambda_iterators.ml[605,20705+37]..[605,20705+78])
                                Ppat_constraint
                                pattern (middle_end/flambda/flambda_iterators.ml[605,20705+38]..[605,20705+53])
                                  Ppat_var "set_of_closures" (middle_end/flambda/flambda_iterators.ml[605,20705+38]..[605,20705+53])
                                core_type (middle_end/flambda/flambda_iterators.ml[605,20705+54]..[605,20705+77])
                                  Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/flambda_iterators.ml[605,20705+54]..[605,20705+77])
                                  []
                              expression (middle_end/flambda/flambda_iterators.ml[606,20786+6]..[634,21883+72])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/flambda_iterators.ml[606,20786+10]..[606,20786+24])
                                      Ppat_var "done_something" (middle_end/flambda/flambda_iterators.ml[606,20786+10]..[606,20786+24])
                                    expression (middle_end/flambda/flambda_iterators.ml[606,20786+27]..[606,20786+36])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[606,20786+27]..[606,20786+30])
                                        Pexp_ident "ref" (middle_end/flambda/flambda_iterators.ml[606,20786+27]..[606,20786+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[606,20786+31]..[606,20786+36])
                                            Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[606,20786+31]..[606,20786+36])
                                            None
                                      ]
                                ]
                                expression (middle_end/flambda/flambda_iterators.ml[607,20826+6]..[634,21883+72])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_iterators.ml[607,20826+10]..[607,20826+24])
                                        Ppat_var "function_decls" (middle_end/flambda/flambda_iterators.ml[607,20826+10]..[607,20826+24])
                                      expression (middle_end/flambda/flambda_iterators.ml[608,20853+8]..[625,21552+17])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/flambda_iterators.ml[608,20853+12]..[608,20853+16])
                                              Ppat_var "funs" (middle_end/flambda/flambda_iterators.ml[608,20853+12]..[608,20853+16])
                                            expression (middle_end/flambda/flambda_iterators.ml[609,20872+10]..[619,21325+47])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_iterators.ml[609,20872+10]..[609,20872+26])
                                                Pexp_ident "Variable.Map.map" (middle_end/flambda/flambda_iterators.ml[609,20872+10]..[609,20872+26])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[609,20872+27]..[618,21306+18])
                                                    Pexp_fun
                                                    Nolabel
                                                    None
                                                    pattern (middle_end/flambda/flambda_iterators.ml[610,20904+18]..[610,20904+64])
                                                      Ppat_constraint
                                                      pattern (middle_end/flambda/flambda_iterators.ml[610,20904+19]..[610,20904+32])
                                                        Ppat_var "function_decl" (middle_end/flambda/flambda_iterators.ml[610,20904+19]..[610,20904+32])
                                                      core_type (middle_end/flambda/flambda_iterators.ml[610,20904+35]..[610,20904+63])
                                                        Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/flambda_iterators.ml[610,20904+35]..[610,20904+63])
                                                        []
                                                    expression (middle_end/flambda/flambda_iterators.ml[611,20972+14]..[618,21306+17])
                                                      Pexp_let Nonrec
                                                      [
                                                        <def>
                                                          pattern (middle_end/flambda/flambda_iterators.ml[611,20972+18]..[611,20972+22])
                                                            Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[611,20972+18]..[611,20972+22])
                                                          expression (middle_end/flambda/flambda_iterators.ml[611,20972+25]..[611,20972+67])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/flambda_iterators.ml[611,20972+25]..[611,20972+45])
                                                              Pexp_ident "map_sets_of_closures" (middle_end/flambda/flambda_iterators.ml[611,20972+25]..[611,20972+45])
                                                            [
                                                              <arg>
                                                              Labelled "f"
                                                                expression (middle_end/flambda/flambda_iterators.ml[611,20972+47]..[611,20972+48])
                                                                  Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[611,20972+47]..[611,20972+48])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_iterators.ml[611,20972+49]..[611,20972+67])
                                                                  Pexp_field
                                                                  expression (middle_end/flambda/flambda_iterators.ml[611,20972+49]..[611,20972+62])
                                                                    Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[611,20972+49]..[611,20972+62])
                                                                  "body" (middle_end/flambda/flambda_iterators.ml[611,20972+63]..[611,20972+67])
                                                            ]
                                                      ]
                                                      expression (middle_end/flambda/flambda_iterators.ml[612,21043+14]..[618,21306+17])
                                                        Pexp_ifthenelse
                                                        expression (middle_end/flambda/flambda_iterators.ml[612,21043+17]..[612,21043+43])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_iterators.ml[612,21043+22]..[612,21043+24])
                                                            Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[612,21043+22]..[612,21043+24])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[612,21043+17]..[612,21043+21])
                                                                Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[612,21043+17]..[612,21043+21])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[612,21043+25]..[612,21043+43])
                                                                Pexp_field
                                                                expression (middle_end/flambda/flambda_iterators.ml[612,21043+25]..[612,21043+38])
                                                                  Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[612,21043+25]..[612,21043+38])
                                                                "body" (middle_end/flambda/flambda_iterators.ml[612,21043+39]..[612,21043+43])
                                                          ]
                                                        expression (middle_end/flambda/flambda_iterators.ml[613,21092+16]..[613,21092+29])
                                                          Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[613,21092+16]..[613,21092+29])
                                                        Some
                                                          expression (middle_end/flambda/flambda_iterators.ml[614,21122+19]..[618,21306+17])
                                                            Pexp_sequence
                                                            expression (middle_end/flambda/flambda_iterators.ml[615,21147+16]..[615,21147+38])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/flambda_iterators.ml[615,21147+31]..[615,21147+33])
                                                                Pexp_ident ":=" (middle_end/flambda/flambda_iterators.ml[615,21147+31]..[615,21147+33])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/flambda_iterators.ml[615,21147+16]..[615,21147+30])
                                                                    Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[615,21147+16]..[615,21147+30])
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/flambda_iterators.ml[615,21147+34]..[615,21147+38])
                                                                    Pexp_construct "true" (middle_end/flambda/flambda_iterators.ml[615,21147+34]..[615,21147+38])
                                                                    None
                                                              ]
                                                            expression (middle_end/flambda/flambda_iterators.ml[616,21187+16]..[617,21253+52])
                                                              Pexp_apply
                                                              expression (middle_end/flambda/flambda_iterators.ml[616,21187+16]..[616,21187+51])
                                                                Pexp_ident "Flambda.update_function_declaration" (middle_end/flambda/flambda_iterators.ml[616,21187+16]..[616,21187+51])
                                                              [
                                                                <arg>
                                                                Nolabel
                                                                  expression (middle_end/flambda/flambda_iterators.ml[616,21187+52]..[616,21187+65])
                                                                    Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[616,21187+52]..[616,21187+65])
                                                                <arg>
                                                                Labelled "body"
                                                                  expression (middle_end/flambda/flambda_iterators.ml[617,21253+19]..[617,21253+23])
                                                                    Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[617,21253+19]..[617,21253+23])
                                                                <arg>
                                                                Labelled "params"
                                                                  expression (middle_end/flambda/flambda_iterators.ml[617,21253+32]..[617,21253+52])
                                                                    Pexp_field
                                                                    expression (middle_end/flambda/flambda_iterators.ml[617,21253+32]..[617,21253+45])
                                                                      Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[617,21253+32]..[617,21253+45])
                                                                    "params" (middle_end/flambda/flambda_iterators.ml[617,21253+46]..[617,21253+52])
                                                              ]
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[619,21325+12]..[619,21325+47])
                                                    Pexp_field
                                                    expression (middle_end/flambda/flambda_iterators.ml[619,21325+12]..[619,21325+42])
                                                      Pexp_field
                                                      expression (middle_end/flambda/flambda_iterators.ml[619,21325+12]..[619,21325+27])
                                                        Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[619,21325+12]..[619,21325+27])
                                                      "function_decls" (middle_end/flambda/flambda_iterators.ml[619,21325+28]..[619,21325+42])
                                                    "funs" (middle_end/flambda/flambda_iterators.ml[619,21325+43]..[619,21325+47])
                                              ]
                                        ]
                                        expression (middle_end/flambda/flambda_iterators.ml[621,21384+8]..[625,21552+17])
                                          Pexp_ifthenelse
                                          expression (middle_end/flambda/flambda_iterators.ml[621,21384+11]..[621,21384+30])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_iterators.ml[621,21384+11]..[621,21384+14])
                                              Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[621,21384+11]..[621,21384+14])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[621,21384+15]..[621,21384+30])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/flambda_iterators.ml[621,21384+15]..[621,21384+16])
                                                    Pexp_ident "!" (middle_end/flambda/flambda_iterators.ml[621,21384+15]..[621,21384+16])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_iterators.ml[621,21384+16]..[621,21384+30])
                                                        Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[621,21384+16]..[621,21384+30])
                                                  ]
                                            ]
                                          expression (middle_end/flambda/flambda_iterators.ml[622,21420+10]..[622,21420+40])
                                            Pexp_field
                                            expression (middle_end/flambda/flambda_iterators.ml[622,21420+10]..[622,21420+25])
                                              Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[622,21420+10]..[622,21420+25])
                                            "function_decls" (middle_end/flambda/flambda_iterators.ml[622,21420+26]..[622,21420+40])
                                          Some
                                            expression (middle_end/flambda/flambda_iterators.ml[624,21474+10]..[625,21552+17])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_iterators.ml[624,21474+10]..[624,21474+46])
                                                Pexp_ident "Flambda.update_function_declarations" (middle_end/flambda/flambda_iterators.ml[624,21474+10]..[624,21474+46])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[624,21474+47]..[624,21474+77])
                                                    Pexp_field
                                                    expression (middle_end/flambda/flambda_iterators.ml[624,21474+47]..[624,21474+62])
                                                      Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[624,21474+47]..[624,21474+62])
                                                    "function_decls" (middle_end/flambda/flambda_iterators.ml[624,21474+63]..[624,21474+77])
                                                <arg>
                                                Labelled "funs"
                                                  expression (middle_end/flambda/flambda_iterators.ml[625,21552+13]..[625,21552+17])
                                                    Pexp_ident "funs" (middle_end/flambda/flambda_iterators.ml[625,21552+13]..[625,21552+17])
                                              ]
                                  ]
                                  expression (middle_end/flambda/flambda_iterators.ml[627,21579+6]..[634,21883+72])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_iterators.ml[627,21579+10]..[627,21579+29])
                                          Ppat_var "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[627,21579+10]..[627,21579+29])
                                        expression (middle_end/flambda/flambda_iterators.ml[627,21579+32]..[627,21579+49])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_iterators.ml[627,21579+32]..[627,21579+33])
                                            Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[627,21579+32]..[627,21579+33])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_iterators.ml[627,21579+34]..[627,21579+49])
                                                Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[627,21579+34]..[627,21579+49])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_iterators.ml[628,21632+6]..[634,21883+72])
                                      Pexp_ifthenelse
                                      expression (middle_end/flambda/flambda_iterators.ml[628,21632+9]..[628,21632+47])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[628,21632+29]..[628,21632+31])
                                          Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[628,21632+29]..[628,21632+31])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[628,21632+9]..[628,21632+28])
                                              Pexp_ident "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[628,21632+9]..[628,21632+28])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[628,21632+32]..[628,21632+47])
                                              Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[628,21632+32]..[628,21632+47])
                                        ]
                                      expression (middle_end/flambda/flambda_iterators.ml[629,21685+8]..[629,21685+23])
                                        Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[629,21685+8]..[629,21685+23])
                                      Some
                                        expression (middle_end/flambda/flambda_iterators.ml[631,21720+8]..[634,21883+72])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_iterators.ml[631,21720+8]..[631,21720+38])
                                            Pexp_ident "Flambda.create_set_of_closures" (middle_end/flambda/flambda_iterators.ml[631,21720+8]..[631,21720+38])
                                          [
                                            <arg>
                                            Labelled "function_decls"
                                              expression (middle_end/flambda/flambda_iterators.ml[631,21720+40]..[631,21720+54])
                                                Pexp_ident "function_decls" (middle_end/flambda/flambda_iterators.ml[631,21720+40]..[631,21720+54])
                                            <arg>
                                            Labelled "free_vars"
                                              expression (middle_end/flambda/flambda_iterators.ml[632,21775+21]..[632,21775+46])
                                                Pexp_field
                                                expression (middle_end/flambda/flambda_iterators.ml[632,21775+21]..[632,21775+36])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[632,21775+21]..[632,21775+36])
                                                "free_vars" (middle_end/flambda/flambda_iterators.ml[632,21775+37]..[632,21775+46])
                                            <arg>
                                            Labelled "specialised_args"
                                              expression (middle_end/flambda/flambda_iterators.ml[633,21822+28]..[633,21822+60])
                                                Pexp_field
                                                expression (middle_end/flambda/flambda_iterators.ml[633,21822+28]..[633,21822+43])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[633,21822+28]..[633,21822+43])
                                                "specialised_args" (middle_end/flambda/flambda_iterators.ml[633,21822+44]..[633,21822+60])
                                            <arg>
                                            Labelled "direct_call_surrogates"
                                              expression (middle_end/flambda/flambda_iterators.ml[634,21883+34]..[634,21883+72])
                                                Pexp_field
                                                expression (middle_end/flambda/flambda_iterators.ml[634,21883+34]..[634,21883+49])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[634,21883+34]..[634,21883+49])
                                                "direct_call_surrogates" (middle_end/flambda/flambda_iterators.ml[634,21883+50]..[634,21883+72])
                                          ]
                        ]
                        expression (middle_end/flambda/flambda_iterators.ml[636,21963+4]..[694,24118+22])
                          Pexp_match
                          expression (middle_end/flambda/flambda_iterators.ml[636,21963+10]..[636,21963+17])
                            Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[636,21963+10]..[636,21963+17])
                          [
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[637,21986+6]..[637,21986+68])
                                Ppat_construct "Let_symbol" (middle_end/flambda/flambda_iterators.ml[637,21986+6]..[637,21986+16])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[637,21986+17]..[637,21986+68])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/flambda_iterators.ml[637,21986+18]..[637,21986+24])
                                        Ppat_var "symbol" (middle_end/flambda/flambda_iterators.ml[637,21986+18]..[637,21986+24])
                                      pattern (middle_end/flambda/flambda_iterators.ml[637,21986+26]..[637,21986+57])
                                        Ppat_construct "Set_of_closures" (middle_end/flambda/flambda_iterators.ml[637,21986+26]..[637,21986+41])
                                        Some
                                          []
                                          pattern (middle_end/flambda/flambda_iterators.ml[637,21986+42]..[637,21986+57])
                                            Ppat_var "set_of_closures" (middle_end/flambda/flambda_iterators.ml[637,21986+42]..[637,21986+57])
                                      pattern (middle_end/flambda/flambda_iterators.ml[637,21986+59]..[637,21986+67])
                                        Ppat_var "program'" (middle_end/flambda/flambda_iterators.ml[637,21986+59]..[637,21986+67])
                                    ]
                              expression (middle_end/flambda/flambda_iterators.ml[638,22058+6]..[644,22298+78])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/flambda_iterators.ml[638,22058+10]..[638,22058+29])
                                      Ppat_var "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[638,22058+10]..[638,22058+29])
                                    expression (middle_end/flambda/flambda_iterators.ml[638,22058+32]..[638,22058+76])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[638,22058+32]..[638,22058+60])
                                        Pexp_ident "map_constant_set_of_closures" (middle_end/flambda/flambda_iterators.ml[638,22058+32]..[638,22058+60])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[638,22058+61]..[638,22058+76])
                                            Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[638,22058+61]..[638,22058+76])
                                      ]
                                ]
                                expression (middle_end/flambda/flambda_iterators.ml[639,22138+6]..[644,22298+78])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_iterators.ml[639,22138+10]..[639,22138+22])
                                        Ppat_var "new_program'" (middle_end/flambda/flambda_iterators.ml[639,22138+10]..[639,22138+22])
                                      expression (middle_end/flambda/flambda_iterators.ml[639,22138+25]..[639,22138+38])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[639,22138+25]..[639,22138+29])
                                          Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[639,22138+25]..[639,22138+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[639,22138+30]..[639,22138+38])
                                              Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[639,22138+30]..[639,22138+38])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_iterators.ml[640,22180+6]..[644,22298+78])
                                    Pexp_ifthenelse
                                    expression (middle_end/flambda/flambda_iterators.ml[640,22180+9]..[641,22228+37])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[641,22228+10]..[641,22228+12])
                                        Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[641,22228+10]..[641,22228+12])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[640,22180+9]..[640,22180+47])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_iterators.ml[640,22180+29]..[640,22180+31])
                                              Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[640,22180+29]..[640,22180+31])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[640,22180+9]..[640,22180+28])
                                                  Pexp_ident "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[640,22180+9]..[640,22180+28])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[640,22180+32]..[640,22180+47])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[640,22180+32]..[640,22180+47])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[641,22228+13]..[641,22228+37])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_iterators.ml[641,22228+26]..[641,22228+28])
                                              Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[641,22228+26]..[641,22228+28])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[641,22228+13]..[641,22228+25])
                                                  Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[641,22228+13]..[641,22228+25])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[641,22228+29]..[641,22228+37])
                                                  Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[641,22228+29]..[641,22228+37])
                                            ]
                                      ]
                                    expression (middle_end/flambda/flambda_iterators.ml[642,22271+8]..[642,22271+15])
                                      Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[642,22271+8]..[642,22271+15])
                                    Some
                                      expression (middle_end/flambda/flambda_iterators.ml[644,22298+8]..[644,22298+78])
                                        Pexp_construct "Let_symbol" (middle_end/flambda/flambda_iterators.ml[644,22298+8]..[644,22298+18])
                                        Some
                                          expression (middle_end/flambda/flambda_iterators.ml[644,22298+19]..[644,22298+78])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/flambda/flambda_iterators.ml[644,22298+20]..[644,22298+26])
                                                Pexp_ident "symbol" (middle_end/flambda/flambda_iterators.ml[644,22298+20]..[644,22298+26])
                                              expression (middle_end/flambda/flambda_iterators.ml[644,22298+28]..[644,22298+63])
                                                Pexp_construct "Set_of_closures" (middle_end/flambda/flambda_iterators.ml[644,22298+28]..[644,22298+43])
                                                Some
                                                  expression (middle_end/flambda/flambda_iterators.ml[644,22298+44]..[644,22298+63])
                                                    Pexp_ident "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[644,22298+44]..[644,22298+63])
                                              expression (middle_end/flambda/flambda_iterators.ml[644,22298+65]..[644,22298+77])
                                                Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[644,22298+65]..[644,22298+77])
                                            ]
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[645,22377+6]..[645,22377+42])
                                Ppat_construct "Let_symbol" (middle_end/flambda/flambda_iterators.ml[645,22377+6]..[645,22377+16])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[645,22377+17]..[645,22377+42])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/flambda_iterators.ml[645,22377+18]..[645,22377+24])
                                        Ppat_var "symbol" (middle_end/flambda/flambda_iterators.ml[645,22377+18]..[645,22377+24])
                                      pattern (middle_end/flambda/flambda_iterators.ml[645,22377+26]..[645,22377+31])
                                        Ppat_var "const" (middle_end/flambda/flambda_iterators.ml[645,22377+26]..[645,22377+31])
                                      pattern (middle_end/flambda/flambda_iterators.ml[645,22377+33]..[645,22377+41])
                                        Ppat_var "program'" (middle_end/flambda/flambda_iterators.ml[645,22377+33]..[645,22377+41])
                                    ]
                              expression (middle_end/flambda/flambda_iterators.ml[646,22423+6]..[650,22531+48])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/flambda_iterators.ml[646,22423+10]..[646,22423+22])
                                      Ppat_var "new_program'" (middle_end/flambda/flambda_iterators.ml[646,22423+10]..[646,22423+22])
                                    expression (middle_end/flambda/flambda_iterators.ml[646,22423+25]..[646,22423+38])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[646,22423+25]..[646,22423+29])
                                        Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[646,22423+25]..[646,22423+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[646,22423+30]..[646,22423+38])
                                            Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[646,22423+30]..[646,22423+38])
                                      ]
                                ]
                                expression (middle_end/flambda/flambda_iterators.ml[647,22465+6]..[650,22531+48])
                                  Pexp_ifthenelse
                                  expression (middle_end/flambda/flambda_iterators.ml[647,22465+9]..[647,22465+33])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[647,22465+22]..[647,22465+24])
                                      Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[647,22465+22]..[647,22465+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[647,22465+9]..[647,22465+21])
                                          Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[647,22465+9]..[647,22465+21])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[647,22465+25]..[647,22465+33])
                                          Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[647,22465+25]..[647,22465+33])
                                    ]
                                  expression (middle_end/flambda/flambda_iterators.ml[648,22504+8]..[648,22504+15])
                                    Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[648,22504+8]..[648,22504+15])
                                  Some
                                    expression (middle_end/flambda/flambda_iterators.ml[650,22531+8]..[650,22531+48])
                                      Pexp_construct "Let_symbol" (middle_end/flambda/flambda_iterators.ml[650,22531+8]..[650,22531+18])
                                      Some
                                        expression (middle_end/flambda/flambda_iterators.ml[650,22531+19]..[650,22531+48])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/flambda_iterators.ml[650,22531+20]..[650,22531+26])
                                              Pexp_ident "symbol" (middle_end/flambda/flambda_iterators.ml[650,22531+20]..[650,22531+26])
                                            expression (middle_end/flambda/flambda_iterators.ml[650,22531+28]..[650,22531+33])
                                              Pexp_ident "const" (middle_end/flambda/flambda_iterators.ml[650,22531+28]..[650,22531+33])
                                            expression (middle_end/flambda/flambda_iterators.ml[650,22531+35]..[650,22531+47])
                                              Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[650,22531+35]..[650,22531+47])
                                          ]
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[651,22580+6]..[651,22580+37])
                                Ppat_construct "Let_rec_symbol" (middle_end/flambda/flambda_iterators.ml[651,22580+6]..[651,22580+20])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[651,22580+21]..[651,22580+37])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/flambda_iterators.ml[651,22580+22]..[651,22580+26])
                                        Ppat_var "defs" (middle_end/flambda/flambda_iterators.ml[651,22580+22]..[651,22580+26])
                                      pattern (middle_end/flambda/flambda_iterators.ml[651,22580+28]..[651,22580+36])
                                        Ppat_var "program'" (middle_end/flambda/flambda_iterators.ml[651,22580+28]..[651,22580+36])
                                    ]
                              expression (middle_end/flambda/flambda_iterators.ml[652,22621+6]..[670,23262+44])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/flambda_iterators.ml[652,22621+10]..[652,22621+24])
                                      Ppat_var "done_something" (middle_end/flambda/flambda_iterators.ml[652,22621+10]..[652,22621+24])
                                    expression (middle_end/flambda/flambda_iterators.ml[652,22621+27]..[652,22621+36])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[652,22621+27]..[652,22621+30])
                                        Pexp_ident "ref" (middle_end/flambda/flambda_iterators.ml[652,22621+27]..[652,22621+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[652,22621+31]..[652,22621+36])
                                            Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[652,22621+31]..[652,22621+36])
                                            None
                                      ]
                                ]
                                expression (middle_end/flambda/flambda_iterators.ml[653,22661+6]..[670,23262+44])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_iterators.ml[653,22661+10]..[653,22661+14])
                                        Ppat_var "defs" (middle_end/flambda/flambda_iterators.ml[653,22661+10]..[653,22661+14])
                                      expression (middle_end/flambda/flambda_iterators.ml[654,22678+8]..[664,23107+14])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[654,22678+8]..[654,22678+16])
                                          Pexp_ident "List.map" (middle_end/flambda/flambda_iterators.ml[654,22678+8]..[654,22678+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[654,22678+17]..[663,23081+25])
                                              Pexp_function
                                              [
                                                <case>
                                                  pattern (middle_end/flambda/flambda_iterators.ml[655,22705+14]..[655,22705+60])
                                                    Ppat_tuple
                                                    [
                                                      pattern (middle_end/flambda/flambda_iterators.ml[655,22705+15]..[655,22705+18])
                                                        Ppat_var "var" (middle_end/flambda/flambda_iterators.ml[655,22705+15]..[655,22705+18])
                                                      pattern (middle_end/flambda/flambda_iterators.ml[655,22705+20]..[655,22705+59])
                                                        Ppat_construct "Flambda.Set_of_closures" (middle_end/flambda/flambda_iterators.ml[655,22705+20]..[655,22705+43])
                                                        Some
                                                          []
                                                          pattern (middle_end/flambda/flambda_iterators.ml[655,22705+44]..[655,22705+59])
                                                            Ppat_var "set_of_closures" (middle_end/flambda/flambda_iterators.ml[655,22705+44]..[655,22705+59])
                                                    ]
                                                  expression (middle_end/flambda/flambda_iterators.ml[656,22769+14]..[662,23018+62])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/flambda/flambda_iterators.ml[656,22769+18]..[656,22769+37])
                                                          Ppat_var "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[656,22769+18]..[656,22769+37])
                                                        expression (middle_end/flambda/flambda_iterators.ml[657,22809+16]..[657,22809+60])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_iterators.ml[657,22809+16]..[657,22809+44])
                                                            Pexp_ident "map_constant_set_of_closures" (middle_end/flambda/flambda_iterators.ml[657,22809+16]..[657,22809+44])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[657,22809+45]..[657,22809+60])
                                                                Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[657,22809+45]..[657,22809+60])
                                                          ]
                                                    ]
                                                    expression (middle_end/flambda/flambda_iterators.ml[659,22887+14]..[662,23018+62])
                                                      Pexp_sequence
                                                      expression (middle_end/flambda/flambda_iterators.ml[659,22887+14]..[661,22999+17])
                                                        Pexp_ifthenelse
                                                        expression (middle_end/flambda/flambda_iterators.ml[659,22887+17]..[659,22887+61])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_iterators.ml[659,22887+17]..[659,22887+20])
                                                            Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[659,22887+17]..[659,22887+20])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[659,22887+21]..[659,22887+61])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/flambda_iterators.ml[659,22887+42]..[659,22887+44])
                                                                  Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[659,22887+42]..[659,22887+44])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/flambda_iterators.ml[659,22887+22]..[659,22887+41])
                                                                      Pexp_ident "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[659,22887+22]..[659,22887+41])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/flambda_iterators.ml[659,22887+45]..[659,22887+60])
                                                                      Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[659,22887+45]..[659,22887+60])
                                                                ]
                                                          ]
                                                        expression (middle_end/flambda/flambda_iterators.ml[659,22887+67]..[661,22999+17])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_iterators.ml[660,22960+31]..[660,22960+33])
                                                            Pexp_ident ":=" (middle_end/flambda/flambda_iterators.ml[660,22960+31]..[660,22960+33])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[660,22960+16]..[660,22960+30])
                                                                Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[660,22960+16]..[660,22960+30])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[660,22960+34]..[660,22960+38])
                                                                Pexp_construct "true" (middle_end/flambda/flambda_iterators.ml[660,22960+34]..[660,22960+38])
                                                                None
                                                          ]
                                                        None
                                                      expression (middle_end/flambda/flambda_iterators.ml[662,23018+14]..[662,23018+62])
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/flambda_iterators.ml[662,23018+14]..[662,23018+17])
                                                            Pexp_ident "var" (middle_end/flambda/flambda_iterators.ml[662,23018+14]..[662,23018+17])
                                                          expression (middle_end/flambda/flambda_iterators.ml[662,23018+19]..[662,23018+62])
                                                            Pexp_construct "Flambda.Set_of_closures" (middle_end/flambda/flambda_iterators.ml[662,23018+19]..[662,23018+42])
                                                            Some
                                                              expression (middle_end/flambda/flambda_iterators.ml[662,23018+43]..[662,23018+62])
                                                                Pexp_ident "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[662,23018+43]..[662,23018+62])
                                                        ]
                                                <case>
                                                  pattern (middle_end/flambda/flambda_iterators.ml[663,23081+14]..[663,23081+17])
                                                    Ppat_var "def" (middle_end/flambda/flambda_iterators.ml[663,23081+14]..[663,23081+17])
                                                  expression (middle_end/flambda/flambda_iterators.ml[663,23081+21]..[663,23081+24])
                                                    Pexp_ident "def" (middle_end/flambda/flambda_iterators.ml[663,23081+21]..[663,23081+24])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[664,23107+10]..[664,23107+14])
                                              Pexp_ident "defs" (middle_end/flambda/flambda_iterators.ml[664,23107+10]..[664,23107+14])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_iterators.ml[666,23131+6]..[670,23262+44])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_iterators.ml[666,23131+10]..[666,23131+22])
                                          Ppat_var "new_program'" (middle_end/flambda/flambda_iterators.ml[666,23131+10]..[666,23131+22])
                                        expression (middle_end/flambda/flambda_iterators.ml[666,23131+25]..[666,23131+38])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_iterators.ml[666,23131+25]..[666,23131+29])
                                            Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[666,23131+25]..[666,23131+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_iterators.ml[666,23131+30]..[666,23131+38])
                                                Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[666,23131+30]..[666,23131+38])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_iterators.ml[667,23173+6]..[670,23262+44])
                                      Pexp_ifthenelse
                                      expression (middle_end/flambda/flambda_iterators.ml[667,23173+9]..[667,23173+56])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[667,23173+34]..[667,23173+36])
                                          Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[667,23173+34]..[667,23173+36])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[667,23173+9]..[667,23173+33])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_iterators.ml[667,23173+22]..[667,23173+24])
                                                Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[667,23173+22]..[667,23173+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[667,23173+9]..[667,23173+21])
                                                    Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[667,23173+9]..[667,23173+21])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[667,23173+25]..[667,23173+33])
                                                    Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[667,23173+25]..[667,23173+33])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[667,23173+37]..[667,23173+56])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_iterators.ml[667,23173+37]..[667,23173+40])
                                                Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[667,23173+37]..[667,23173+40])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[667,23173+41]..[667,23173+56])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[667,23173+41]..[667,23173+42])
                                                      Pexp_ident "!" (middle_end/flambda/flambda_iterators.ml[667,23173+41]..[667,23173+42])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[667,23173+42]..[667,23173+56])
                                                          Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[667,23173+42]..[667,23173+56])
                                                    ]
                                              ]
                                        ]
                                      expression (middle_end/flambda/flambda_iterators.ml[668,23235+8]..[668,23235+15])
                                        Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[668,23235+8]..[668,23235+15])
                                      Some
                                        expression (middle_end/flambda/flambda_iterators.ml[670,23262+8]..[670,23262+44])
                                          Pexp_construct "Let_rec_symbol" (middle_end/flambda/flambda_iterators.ml[670,23262+8]..[670,23262+22])
                                          Some
                                            expression (middle_end/flambda/flambda_iterators.ml[670,23262+23]..[670,23262+44])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/flambda/flambda_iterators.ml[670,23262+24]..[670,23262+28])
                                                  Pexp_ident "defs" (middle_end/flambda/flambda_iterators.ml[670,23262+24]..[670,23262+28])
                                                expression (middle_end/flambda/flambda_iterators.ml[670,23262+30]..[670,23262+43])
                                                  Pexp_apply
                                                  expression (middle_end/flambda/flambda_iterators.ml[670,23262+30]..[670,23262+34])
                                                    Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[670,23262+30]..[670,23262+34])
                                                  [
                                                    <arg>
                                                    Nolabel
                                                      expression (middle_end/flambda/flambda_iterators.ml[670,23262+35]..[670,23262+43])
                                                        Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[670,23262+35]..[670,23262+43])
                                                  ]
                                              ]
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[671,23307+6]..[671,23307+55])
                                Ppat_construct "Initialize_symbol" (middle_end/flambda/flambda_iterators.ml[671,23307+6]..[671,23307+23])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[671,23307+24]..[671,23307+55])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/flambda_iterators.ml[671,23307+25]..[671,23307+31])
                                        Ppat_var "symbol" (middle_end/flambda/flambda_iterators.ml[671,23307+25]..[671,23307+31])
                                      pattern (middle_end/flambda/flambda_iterators.ml[671,23307+33]..[671,23307+36])
                                        Ppat_var "tag" (middle_end/flambda/flambda_iterators.ml[671,23307+33]..[671,23307+36])
                                      pattern (middle_end/flambda/flambda_iterators.ml[671,23307+38]..[671,23307+44])
                                        Ppat_var "fields" (middle_end/flambda/flambda_iterators.ml[671,23307+38]..[671,23307+44])
                                      pattern (middle_end/flambda/flambda_iterators.ml[671,23307+46]..[671,23307+54])
                                        Ppat_var "program'" (middle_end/flambda/flambda_iterators.ml[671,23307+46]..[671,23307+54])
                                    ]
                              expression (middle_end/flambda/flambda_iterators.ml[672,23366+6]..[686,23802+61])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/flambda_iterators.ml[672,23366+10]..[672,23366+24])
                                      Ppat_var "done_something" (middle_end/flambda/flambda_iterators.ml[672,23366+10]..[672,23366+24])
                                    expression (middle_end/flambda/flambda_iterators.ml[672,23366+27]..[672,23366+36])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[672,23366+27]..[672,23366+30])
                                        Pexp_ident "ref" (middle_end/flambda/flambda_iterators.ml[672,23366+27]..[672,23366+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[672,23366+31]..[672,23366+36])
                                            Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[672,23366+31]..[672,23366+36])
                                            None
                                      ]
                                ]
                                expression (middle_end/flambda/flambda_iterators.ml[673,23406+6]..[686,23802+61])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_iterators.ml[673,23406+10]..[673,23406+16])
                                        Ppat_var "fields" (middle_end/flambda/flambda_iterators.ml[673,23406+10]..[673,23406+16])
                                      expression (middle_end/flambda/flambda_iterators.ml[674,23425+8]..[680,23645+16])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[674,23425+8]..[674,23425+16])
                                          Pexp_ident "List.map" (middle_end/flambda/flambda_iterators.ml[674,23425+8]..[674,23425+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[674,23425+17]..[679,23622+22])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/flambda/flambda_iterators.ml[674,23425+22]..[674,23425+27])
                                                Ppat_var "field" (middle_end/flambda/flambda_iterators.ml[674,23425+22]..[674,23425+27])
                                              expression (middle_end/flambda/flambda_iterators.ml[675,23456+12]..[679,23622+21])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/flambda_iterators.ml[675,23456+16]..[675,23456+25])
                                                      Ppat_var "new_field" (middle_end/flambda/flambda_iterators.ml[675,23456+16]..[675,23456+25])
                                                    expression (middle_end/flambda/flambda_iterators.ml[675,23456+28]..[675,23456+57])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_iterators.ml[675,23456+28]..[675,23456+48])
                                                        Pexp_ident "map_sets_of_closures" (middle_end/flambda/flambda_iterators.ml[675,23456+28]..[675,23456+48])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[675,23456+49]..[675,23456+54])
                                                            Pexp_ident "field" (middle_end/flambda/flambda_iterators.ml[675,23456+49]..[675,23456+54])
                                                        <arg>
                                                        Labelled "f"
                                                          expression (middle_end/flambda/flambda_iterators.ml[675,23456+56]..[675,23456+57])
                                                            Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[675,23456+56]..[675,23456+57])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/flambda_iterators.ml[676,23517+12]..[679,23622+21])
                                                  Pexp_sequence
                                                  expression (middle_end/flambda/flambda_iterators.ml[676,23517+12]..[678,23605+15])
                                                    Pexp_ifthenelse
                                                    expression (middle_end/flambda/flambda_iterators.ml[676,23517+15]..[676,23517+39])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_iterators.ml[676,23517+15]..[676,23517+18])
                                                        Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[676,23517+15]..[676,23517+18])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[676,23517+19]..[676,23517+39])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/flambda_iterators.ml[676,23517+30]..[676,23517+32])
                                                              Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[676,23517+30]..[676,23517+32])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_iterators.ml[676,23517+20]..[676,23517+29])
                                                                  Pexp_ident "new_field" (middle_end/flambda/flambda_iterators.ml[676,23517+20]..[676,23517+29])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_iterators.ml[676,23517+33]..[676,23517+38])
                                                                  Pexp_ident "field" (middle_end/flambda/flambda_iterators.ml[676,23517+33]..[676,23517+38])
                                                            ]
                                                      ]
                                                    expression (middle_end/flambda/flambda_iterators.ml[676,23517+45]..[678,23605+15])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_iterators.ml[677,23568+29]..[677,23568+31])
                                                        Pexp_ident ":=" (middle_end/flambda/flambda_iterators.ml[677,23568+29]..[677,23568+31])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[677,23568+14]..[677,23568+28])
                                                            Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[677,23568+14]..[677,23568+28])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[677,23568+32]..[677,23568+36])
                                                            Pexp_construct "true" (middle_end/flambda/flambda_iterators.ml[677,23568+32]..[677,23568+36])
                                                            None
                                                      ]
                                                    None
                                                  expression (middle_end/flambda/flambda_iterators.ml[679,23622+12]..[679,23622+21])
                                                    Pexp_ident "new_field" (middle_end/flambda/flambda_iterators.ml[679,23622+12]..[679,23622+21])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[680,23645+10]..[680,23645+16])
                                              Pexp_ident "fields" (middle_end/flambda/flambda_iterators.ml[680,23645+10]..[680,23645+16])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_iterators.ml[682,23671+6]..[686,23802+61])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_iterators.ml[682,23671+10]..[682,23671+22])
                                          Ppat_var "new_program'" (middle_end/flambda/flambda_iterators.ml[682,23671+10]..[682,23671+22])
                                        expression (middle_end/flambda/flambda_iterators.ml[682,23671+25]..[682,23671+38])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_iterators.ml[682,23671+25]..[682,23671+29])
                                            Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[682,23671+25]..[682,23671+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_iterators.ml[682,23671+30]..[682,23671+38])
                                                Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[682,23671+30]..[682,23671+38])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_iterators.ml[683,23713+6]..[686,23802+61])
                                      Pexp_ifthenelse
                                      expression (middle_end/flambda/flambda_iterators.ml[683,23713+9]..[683,23713+56])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[683,23713+34]..[683,23713+36])
                                          Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[683,23713+34]..[683,23713+36])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[683,23713+9]..[683,23713+33])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_iterators.ml[683,23713+22]..[683,23713+24])
                                                Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[683,23713+22]..[683,23713+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[683,23713+9]..[683,23713+21])
                                                    Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[683,23713+9]..[683,23713+21])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[683,23713+25]..[683,23713+33])
                                                    Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[683,23713+25]..[683,23713+33])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[683,23713+37]..[683,23713+56])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_iterators.ml[683,23713+37]..[683,23713+40])
                                                Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[683,23713+37]..[683,23713+40])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[683,23713+41]..[683,23713+56])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[683,23713+41]..[683,23713+42])
                                                      Pexp_ident "!" (middle_end/flambda/flambda_iterators.ml[683,23713+41]..[683,23713+42])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[683,23713+42]..[683,23713+56])
                                                          Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[683,23713+42]..[683,23713+56])
                                                    ]
                                              ]
                                        ]
                                      expression (middle_end/flambda/flambda_iterators.ml[684,23775+8]..[684,23775+15])
                                        Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[684,23775+8]..[684,23775+15])
                                      Some
                                        expression (middle_end/flambda/flambda_iterators.ml[686,23802+8]..[686,23802+61])
                                          Pexp_construct "Initialize_symbol" (middle_end/flambda/flambda_iterators.ml[686,23802+8]..[686,23802+25])
                                          Some
                                            expression (middle_end/flambda/flambda_iterators.ml[686,23802+26]..[686,23802+61])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/flambda/flambda_iterators.ml[686,23802+27]..[686,23802+33])
                                                  Pexp_ident "symbol" (middle_end/flambda/flambda_iterators.ml[686,23802+27]..[686,23802+33])
                                                expression (middle_end/flambda/flambda_iterators.ml[686,23802+35]..[686,23802+38])
                                                  Pexp_ident "tag" (middle_end/flambda/flambda_iterators.ml[686,23802+35]..[686,23802+38])
                                                expression (middle_end/flambda/flambda_iterators.ml[686,23802+40]..[686,23802+46])
                                                  Pexp_ident "fields" (middle_end/flambda/flambda_iterators.ml[686,23802+40]..[686,23802+46])
                                                expression (middle_end/flambda/flambda_iterators.ml[686,23802+48]..[686,23802+60])
                                                  Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[686,23802+48]..[686,23802+60])
                                              ]
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[687,23864+6]..[687,23864+29])
                                Ppat_construct "Effect" (middle_end/flambda/flambda_iterators.ml[687,23864+6]..[687,23864+12])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[687,23864+13]..[687,23864+29])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/flambda_iterators.ml[687,23864+14]..[687,23864+18])
                                        Ppat_var "expr" (middle_end/flambda/flambda_iterators.ml[687,23864+14]..[687,23864+18])
                                      pattern (middle_end/flambda/flambda_iterators.ml[687,23864+20]..[687,23864+28])
                                        Ppat_var "program'" (middle_end/flambda/flambda_iterators.ml[687,23864+20]..[687,23864+28])
                                    ]
                              expression (middle_end/flambda/flambda_iterators.ml[688,23897+6]..[693,24078+39])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/flambda_iterators.ml[688,23897+10]..[688,23897+18])
                                      Ppat_var "new_expr" (middle_end/flambda/flambda_iterators.ml[688,23897+10]..[688,23897+18])
                                    expression (middle_end/flambda/flambda_iterators.ml[688,23897+21]..[688,23897+49])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[688,23897+21]..[688,23897+41])
                                        Pexp_ident "map_sets_of_closures" (middle_end/flambda/flambda_iterators.ml[688,23897+21]..[688,23897+41])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[688,23897+42]..[688,23897+46])
                                            Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[688,23897+42]..[688,23897+46])
                                        <arg>
                                        Labelled "f"
                                          expression (middle_end/flambda/flambda_iterators.ml[688,23897+48]..[688,23897+49])
                                            Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[688,23897+48]..[688,23897+49])
                                      ]
                                ]
                                expression (middle_end/flambda/flambda_iterators.ml[689,23950+6]..[693,24078+39])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_iterators.ml[689,23950+10]..[689,23950+22])
                                        Ppat_var "new_program'" (middle_end/flambda/flambda_iterators.ml[689,23950+10]..[689,23950+22])
                                      expression (middle_end/flambda/flambda_iterators.ml[689,23950+25]..[689,23950+38])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[689,23950+25]..[689,23950+29])
                                          Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[689,23950+25]..[689,23950+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[689,23950+30]..[689,23950+38])
                                              Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[689,23950+30]..[689,23950+38])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_iterators.ml[690,23992+6]..[693,24078+39])
                                    Pexp_ifthenelse
                                    expression (middle_end/flambda/flambda_iterators.ml[690,23992+9]..[690,23992+53])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[690,23992+26]..[690,23992+28])
                                        Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[690,23992+26]..[690,23992+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[690,23992+9]..[690,23992+25])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_iterators.ml[690,23992+18]..[690,23992+20])
                                              Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[690,23992+18]..[690,23992+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[690,23992+9]..[690,23992+17])
                                                  Pexp_ident "new_expr" (middle_end/flambda/flambda_iterators.ml[690,23992+9]..[690,23992+17])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[690,23992+21]..[690,23992+25])
                                                  Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[690,23992+21]..[690,23992+25])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[690,23992+29]..[690,23992+53])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_iterators.ml[690,23992+42]..[690,23992+44])
                                              Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[690,23992+42]..[690,23992+44])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[690,23992+29]..[690,23992+41])
                                                  Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[690,23992+29]..[690,23992+41])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[690,23992+45]..[690,23992+53])
                                                  Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[690,23992+45]..[690,23992+53])
                                            ]
                                      ]
                                    expression (middle_end/flambda/flambda_iterators.ml[691,24051+8]..[691,24051+15])
                                      Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[691,24051+8]..[691,24051+15])
                                    Some
                                      expression (middle_end/flambda/flambda_iterators.ml[693,24078+8]..[693,24078+39])
                                        Pexp_construct "Effect" (middle_end/flambda/flambda_iterators.ml[693,24078+8]..[693,24078+14])
                                        Some
                                          expression (middle_end/flambda/flambda_iterators.ml[693,24078+15]..[693,24078+39])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/flambda/flambda_iterators.ml[693,24078+16]..[693,24078+24])
                                                Pexp_ident "new_expr" (middle_end/flambda/flambda_iterators.ml[693,24078+16]..[693,24078+24])
                                              expression (middle_end/flambda/flambda_iterators.ml[693,24078+26]..[693,24078+38])
                                                Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[693,24078+26]..[693,24078+38])
                                            ]
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[694,24118+6]..[694,24118+11])
                                Ppat_construct "End" (middle_end/flambda/flambda_iterators.ml[694,24118+6]..[694,24118+9])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[694,24118+10]..[694,24118+11])
                                    Ppat_any
                              expression (middle_end/flambda/flambda_iterators.ml[694,24118+15]..[694,24118+22])
                                Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[694,24118+15]..[694,24118+22])
                          ]
                      core_type (middle_end/flambda/flambda_iterators.ml[604,20632+50]..[604,20632+70])
                        Ptyp_constr "Flambda.program_body" (middle_end/flambda/flambda_iterators.ml[604,20632+50]..[604,20632+70])
                        []
              ]
              expression (middle_end/flambda/flambda_iterators.ml[696,24146+2]..[698,24209+3])
                Pexp_record
                [
                  "program_body" (middle_end/flambda/flambda_iterators.ml[697,24163+4]..[697,24163+16])
                    expression (middle_end/flambda/flambda_iterators.ml[697,24163+19]..[697,24163+44])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_iterators.ml[697,24163+19]..[697,24163+23])
                        Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[697,24163+19]..[697,24163+23])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_iterators.ml[697,24163+24]..[697,24163+44])
                            Pexp_field
                            expression (middle_end/flambda/flambda_iterators.ml[697,24163+24]..[697,24163+31])
                              Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[697,24163+24]..[697,24163+31])
                            "program_body" (middle_end/flambda/flambda_iterators.ml[697,24163+32]..[697,24163+44])
                      ]
                ]
                Some
                  expression (middle_end/flambda/flambda_iterators.ml[696,24146+4]..[696,24146+11])
                    Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[696,24146+4]..[696,24146+11])
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[700,24214+0]..[792,27694+3])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[700,24214+4]..[700,24214+36])
          Ppat_var "map_exprs_at_toplevel_of_program" (middle_end/flambda/flambda_iterators.ml[700,24214+4]..[700,24214+36])
        expression (middle_end/flambda/flambda_iterators.ml[700,24214+37]..[792,27694+3]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[700,24214+37]..[700,24214+64])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_iterators.ml[700,24214+38]..[700,24214+45])
              Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[700,24214+38]..[700,24214+45])
            core_type (middle_end/flambda/flambda_iterators.ml[700,24214+48]..[700,24214+63])
              Ptyp_constr "Flambda.program" (middle_end/flambda/flambda_iterators.ml[700,24214+48]..[700,24214+63])
              []
          expression (middle_end/flambda/flambda_iterators.ml[701,24279+4]..[792,27694+3]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[701,24279+6]..[701,24279+32])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_iterators.ml[701,24279+6]..[701,24279+7])
                Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[701,24279+6]..[701,24279+7])
              core_type (middle_end/flambda/flambda_iterators.ml[701,24279+10]..[701,24279+32])
                Ptyp_arrow
                Nolabel
                core_type (middle_end/flambda/flambda_iterators.ml[701,24279+10]..[701,24279+19])
                  Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_iterators.ml[701,24279+10]..[701,24279+19])
                  []
                core_type (middle_end/flambda/flambda_iterators.ml[701,24279+23]..[701,24279+32])
                  Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_iterators.ml[701,24279+23]..[701,24279+32])
                  []
            expression (middle_end/flambda/flambda_iterators.ml[702,24315+2]..[792,27694+3])
              Pexp_let Rec
              [
                <def>
                  pattern (middle_end/flambda/flambda_iterators.ml[702,24315+10]..[702,24315+14])
                    Ppat_var "loop" (middle_end/flambda/flambda_iterators.ml[702,24315+10]..[702,24315+14])
                  expression (middle_end/flambda/flambda_iterators.ml[702,24315+15]..[788,27603+22]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (middle_end/flambda/flambda_iterators.ml[702,24315+15]..[702,24315+47])
                      Ppat_constraint
                      pattern (middle_end/flambda/flambda_iterators.ml[702,24315+16]..[702,24315+23])
                        Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[702,24315+16]..[702,24315+23])
                      core_type (middle_end/flambda/flambda_iterators.ml[702,24315+26]..[702,24315+46])
                        Ptyp_constr "Flambda.program_body" (middle_end/flambda/flambda_iterators.ml[702,24315+26]..[702,24315+46])
                        []
                    expression (middle_end/flambda/flambda_iterators.ml[702,24315+48]..[788,27603+22])
                      Pexp_constraint
                      expression (middle_end/flambda/flambda_iterators.ml[703,24388+4]..[788,27603+22])
                        Pexp_let Nonrec
                        [
                          <def>
                            pattern (middle_end/flambda/flambda_iterators.ml[703,24388+8]..[703,24388+36])
                              Ppat_var "map_constant_set_of_closures" (middle_end/flambda/flambda_iterators.ml[703,24388+8]..[703,24388+36])
                            expression (middle_end/flambda/flambda_iterators.ml[703,24388+37]..[727,25344+72]) ghost
                              Pexp_fun
                              Nolabel
                              None
                              pattern (middle_end/flambda/flambda_iterators.ml[703,24388+37]..[703,24388+78])
                                Ppat_constraint
                                pattern (middle_end/flambda/flambda_iterators.ml[703,24388+38]..[703,24388+53])
                                  Ppat_var "set_of_closures" (middle_end/flambda/flambda_iterators.ml[703,24388+38]..[703,24388+53])
                                core_type (middle_end/flambda/flambda_iterators.ml[703,24388+54]..[703,24388+77])
                                  Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/flambda_iterators.ml[703,24388+54]..[703,24388+77])
                                  []
                              expression (middle_end/flambda/flambda_iterators.ml[704,24469+6]..[727,25344+72])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/flambda_iterators.ml[704,24469+10]..[704,24469+24])
                                      Ppat_var "done_something" (middle_end/flambda/flambda_iterators.ml[704,24469+10]..[704,24469+24])
                                    expression (middle_end/flambda/flambda_iterators.ml[704,24469+27]..[704,24469+36])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[704,24469+27]..[704,24469+30])
                                        Pexp_ident "ref" (middle_end/flambda/flambda_iterators.ml[704,24469+27]..[704,24469+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[704,24469+31]..[704,24469+36])
                                            Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[704,24469+31]..[704,24469+36])
                                            None
                                      ]
                                ]
                                expression (middle_end/flambda/flambda_iterators.ml[705,24509+6]..[727,25344+72])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_iterators.ml[705,24509+10]..[705,24509+14])
                                        Ppat_var "funs" (middle_end/flambda/flambda_iterators.ml[705,24509+10]..[705,24509+14])
                                      expression (middle_end/flambda/flambda_iterators.ml[706,24526+8]..[715,24921+45])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[706,24526+8]..[706,24526+24])
                                          Pexp_ident "Variable.Map.map" (middle_end/flambda/flambda_iterators.ml[706,24526+8]..[706,24526+24])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[706,24526+25]..[714,24904+16])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/flambda/flambda_iterators.ml[706,24526+30]..[706,24526+76])
                                                Ppat_constraint
                                                pattern (middle_end/flambda/flambda_iterators.ml[706,24526+31]..[706,24526+44])
                                                  Ppat_var "function_decl" (middle_end/flambda/flambda_iterators.ml[706,24526+31]..[706,24526+44])
                                                core_type (middle_end/flambda/flambda_iterators.ml[706,24526+47]..[706,24526+75])
                                                  Ptyp_constr "Flambda.function_declaration" (middle_end/flambda/flambda_iterators.ml[706,24526+47]..[706,24526+75])
                                                  []
                                              expression (middle_end/flambda/flambda_iterators.ml[707,24606+12]..[714,24904+15])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/flambda_iterators.ml[707,24606+16]..[707,24606+20])
                                                      Ppat_var "body" (middle_end/flambda/flambda_iterators.ml[707,24606+16]..[707,24606+20])
                                                    expression (middle_end/flambda/flambda_iterators.ml[707,24606+23]..[707,24606+43])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_iterators.ml[707,24606+23]..[707,24606+24])
                                                        Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[707,24606+23]..[707,24606+24])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[707,24606+25]..[707,24606+43])
                                                            Pexp_field
                                                            expression (middle_end/flambda/flambda_iterators.ml[707,24606+25]..[707,24606+38])
                                                              Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[707,24606+25]..[707,24606+38])
                                                            "body" (middle_end/flambda/flambda_iterators.ml[707,24606+39]..[707,24606+43])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/flambda_iterators.ml[708,24653+12]..[714,24904+15])
                                                  Pexp_ifthenelse
                                                  expression (middle_end/flambda/flambda_iterators.ml[708,24653+15]..[708,24653+41])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[708,24653+20]..[708,24653+22])
                                                      Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[708,24653+20]..[708,24653+22])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[708,24653+15]..[708,24653+19])
                                                          Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[708,24653+15]..[708,24653+19])
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[708,24653+23]..[708,24653+41])
                                                          Pexp_field
                                                          expression (middle_end/flambda/flambda_iterators.ml[708,24653+23]..[708,24653+36])
                                                            Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[708,24653+23]..[708,24653+36])
                                                          "body" (middle_end/flambda/flambda_iterators.ml[708,24653+37]..[708,24653+41])
                                                    ]
                                                  expression (middle_end/flambda/flambda_iterators.ml[709,24700+14]..[709,24700+27])
                                                    Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[709,24700+14]..[709,24700+27])
                                                  Some
                                                    expression (middle_end/flambda/flambda_iterators.ml[710,24728+17]..[714,24904+15])
                                                      Pexp_sequence
                                                      expression (middle_end/flambda/flambda_iterators.ml[711,24751+14]..[711,24751+36])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/flambda_iterators.ml[711,24751+29]..[711,24751+31])
                                                          Pexp_ident ":=" (middle_end/flambda/flambda_iterators.ml[711,24751+29]..[711,24751+31])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/flambda_iterators.ml[711,24751+14]..[711,24751+28])
                                                              Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[711,24751+14]..[711,24751+28])
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/flambda_iterators.ml[711,24751+32]..[711,24751+36])
                                                              Pexp_construct "true" (middle_end/flambda/flambda_iterators.ml[711,24751+32]..[711,24751+36])
                                                              None
                                                        ]
                                                      expression (middle_end/flambda/flambda_iterators.ml[712,24789+14]..[713,24853+50])
                                                        Pexp_apply
                                                        expression (middle_end/flambda/flambda_iterators.ml[712,24789+14]..[712,24789+49])
                                                          Pexp_ident "Flambda.update_function_declaration" (middle_end/flambda/flambda_iterators.ml[712,24789+14]..[712,24789+49])
                                                        [
                                                          <arg>
                                                          Nolabel
                                                            expression (middle_end/flambda/flambda_iterators.ml[712,24789+50]..[712,24789+63])
                                                              Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[712,24789+50]..[712,24789+63])
                                                          <arg>
                                                          Labelled "body"
                                                            expression (middle_end/flambda/flambda_iterators.ml[713,24853+17]..[713,24853+21])
                                                              Pexp_ident "body" (middle_end/flambda/flambda_iterators.ml[713,24853+17]..[713,24853+21])
                                                          <arg>
                                                          Labelled "params"
                                                            expression (middle_end/flambda/flambda_iterators.ml[713,24853+30]..[713,24853+50])
                                                              Pexp_field
                                                              expression (middle_end/flambda/flambda_iterators.ml[713,24853+30]..[713,24853+43])
                                                                Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[713,24853+30]..[713,24853+43])
                                                              "params" (middle_end/flambda/flambda_iterators.ml[713,24853+44]..[713,24853+50])
                                                        ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[715,24921+10]..[715,24921+45])
                                              Pexp_field
                                              expression (middle_end/flambda/flambda_iterators.ml[715,24921+10]..[715,24921+40])
                                                Pexp_field
                                                expression (middle_end/flambda/flambda_iterators.ml[715,24921+10]..[715,24921+25])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[715,24921+10]..[715,24921+25])
                                                "function_decls" (middle_end/flambda/flambda_iterators.ml[715,24921+26]..[715,24921+40])
                                              "funs" (middle_end/flambda/flambda_iterators.ml[715,24921+41]..[715,24921+45])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_iterators.ml[717,24976+6]..[727,25344+72])
                                    Pexp_ifthenelse
                                    expression (middle_end/flambda/flambda_iterators.ml[717,24976+9]..[717,24976+28])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[717,24976+9]..[717,24976+12])
                                        Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[717,24976+9]..[717,24976+12])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[717,24976+13]..[717,24976+28])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_iterators.ml[717,24976+13]..[717,24976+14])
                                              Pexp_ident "!" (middle_end/flambda/flambda_iterators.ml[717,24976+13]..[717,24976+14])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[717,24976+14]..[717,24976+28])
                                                  Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[717,24976+14]..[717,24976+28])
                                            ]
                                      ]
                                    expression (middle_end/flambda/flambda_iterators.ml[718,25010+8]..[718,25010+23])
                                      Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[718,25010+8]..[718,25010+23])
                                    Some
                                      expression (middle_end/flambda/flambda_iterators.ml[720,25045+8]..[727,25344+72])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (middle_end/flambda/flambda_iterators.ml[720,25045+12]..[720,25045+26])
                                              Ppat_var "function_decls" (middle_end/flambda/flambda_iterators.ml[720,25045+12]..[720,25045+26])
                                            expression (middle_end/flambda/flambda_iterators.ml[721,25074+10]..[722,25152+17])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_iterators.ml[721,25074+10]..[721,25074+46])
                                                Pexp_ident "Flambda.update_function_declarations" (middle_end/flambda/flambda_iterators.ml[721,25074+10]..[721,25074+46])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[721,25074+47]..[721,25074+77])
                                                    Pexp_field
                                                    expression (middle_end/flambda/flambda_iterators.ml[721,25074+47]..[721,25074+62])
                                                      Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[721,25074+47]..[721,25074+62])
                                                    "function_decls" (middle_end/flambda/flambda_iterators.ml[721,25074+63]..[721,25074+77])
                                                <arg>
                                                Labelled "funs"
                                                  expression (middle_end/flambda/flambda_iterators.ml[722,25152+13]..[722,25152+17])
                                                    Pexp_ident "funs" (middle_end/flambda/flambda_iterators.ml[722,25152+13]..[722,25152+17])
                                              ]
                                        ]
                                        expression (middle_end/flambda/flambda_iterators.ml[724,25181+8]..[727,25344+72])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_iterators.ml[724,25181+8]..[724,25181+38])
                                            Pexp_ident "Flambda.create_set_of_closures" (middle_end/flambda/flambda_iterators.ml[724,25181+8]..[724,25181+38])
                                          [
                                            <arg>
                                            Labelled "function_decls"
                                              expression (middle_end/flambda/flambda_iterators.ml[724,25181+40]..[724,25181+54])
                                                Pexp_ident "function_decls" (middle_end/flambda/flambda_iterators.ml[724,25181+40]..[724,25181+54])
                                            <arg>
                                            Labelled "free_vars"
                                              expression (middle_end/flambda/flambda_iterators.ml[725,25236+21]..[725,25236+46])
                                                Pexp_field
                                                expression (middle_end/flambda/flambda_iterators.ml[725,25236+21]..[725,25236+36])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[725,25236+21]..[725,25236+36])
                                                "free_vars" (middle_end/flambda/flambda_iterators.ml[725,25236+37]..[725,25236+46])
                                            <arg>
                                            Labelled "specialised_args"
                                              expression (middle_end/flambda/flambda_iterators.ml[726,25283+28]..[726,25283+60])
                                                Pexp_field
                                                expression (middle_end/flambda/flambda_iterators.ml[726,25283+28]..[726,25283+43])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[726,25283+28]..[726,25283+43])
                                                "specialised_args" (middle_end/flambda/flambda_iterators.ml[726,25283+44]..[726,25283+60])
                                            <arg>
                                            Labelled "direct_call_surrogates"
                                              expression (middle_end/flambda/flambda_iterators.ml[727,25344+34]..[727,25344+72])
                                                Pexp_field
                                                expression (middle_end/flambda/flambda_iterators.ml[727,25344+34]..[727,25344+49])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[727,25344+34]..[727,25344+49])
                                                "direct_call_surrogates" (middle_end/flambda/flambda_iterators.ml[727,25344+50]..[727,25344+72])
                                          ]
                        ]
                        expression (middle_end/flambda/flambda_iterators.ml[730,25493+4]..[788,27603+22])
                          Pexp_match
                          expression (middle_end/flambda/flambda_iterators.ml[730,25493+10]..[730,25493+17])
                            Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[730,25493+10]..[730,25493+17])
                          [
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[731,25516+6]..[731,25516+68])
                                Ppat_construct "Let_symbol" (middle_end/flambda/flambda_iterators.ml[731,25516+6]..[731,25516+16])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[731,25516+17]..[731,25516+68])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/flambda_iterators.ml[731,25516+18]..[731,25516+24])
                                        Ppat_var "symbol" (middle_end/flambda/flambda_iterators.ml[731,25516+18]..[731,25516+24])
                                      pattern (middle_end/flambda/flambda_iterators.ml[731,25516+26]..[731,25516+57])
                                        Ppat_construct "Set_of_closures" (middle_end/flambda/flambda_iterators.ml[731,25516+26]..[731,25516+41])
                                        Some
                                          []
                                          pattern (middle_end/flambda/flambda_iterators.ml[731,25516+42]..[731,25516+57])
                                            Ppat_var "set_of_closures" (middle_end/flambda/flambda_iterators.ml[731,25516+42]..[731,25516+57])
                                      pattern (middle_end/flambda/flambda_iterators.ml[731,25516+59]..[731,25516+67])
                                        Ppat_var "program'" (middle_end/flambda/flambda_iterators.ml[731,25516+59]..[731,25516+67])
                                    ]
                              expression (middle_end/flambda/flambda_iterators.ml[732,25588+6]..[738,25828+78])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/flambda_iterators.ml[732,25588+10]..[732,25588+29])
                                      Ppat_var "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[732,25588+10]..[732,25588+29])
                                    expression (middle_end/flambda/flambda_iterators.ml[732,25588+32]..[732,25588+76])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[732,25588+32]..[732,25588+60])
                                        Pexp_ident "map_constant_set_of_closures" (middle_end/flambda/flambda_iterators.ml[732,25588+32]..[732,25588+60])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[732,25588+61]..[732,25588+76])
                                            Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[732,25588+61]..[732,25588+76])
                                      ]
                                ]
                                expression (middle_end/flambda/flambda_iterators.ml[733,25668+6]..[738,25828+78])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_iterators.ml[733,25668+10]..[733,25668+22])
                                        Ppat_var "new_program'" (middle_end/flambda/flambda_iterators.ml[733,25668+10]..[733,25668+22])
                                      expression (middle_end/flambda/flambda_iterators.ml[733,25668+25]..[733,25668+38])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[733,25668+25]..[733,25668+29])
                                          Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[733,25668+25]..[733,25668+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[733,25668+30]..[733,25668+38])
                                              Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[733,25668+30]..[733,25668+38])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_iterators.ml[734,25710+6]..[738,25828+78])
                                    Pexp_ifthenelse
                                    expression (middle_end/flambda/flambda_iterators.ml[734,25710+9]..[735,25758+37])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[735,25758+10]..[735,25758+12])
                                        Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[735,25758+10]..[735,25758+12])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[734,25710+9]..[734,25710+47])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_iterators.ml[734,25710+29]..[734,25710+31])
                                              Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[734,25710+29]..[734,25710+31])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[734,25710+9]..[734,25710+28])
                                                  Pexp_ident "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[734,25710+9]..[734,25710+28])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[734,25710+32]..[734,25710+47])
                                                  Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[734,25710+32]..[734,25710+47])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[735,25758+13]..[735,25758+37])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_iterators.ml[735,25758+26]..[735,25758+28])
                                              Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[735,25758+26]..[735,25758+28])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[735,25758+13]..[735,25758+25])
                                                  Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[735,25758+13]..[735,25758+25])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[735,25758+29]..[735,25758+37])
                                                  Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[735,25758+29]..[735,25758+37])
                                            ]
                                      ]
                                    expression (middle_end/flambda/flambda_iterators.ml[736,25801+8]..[736,25801+15])
                                      Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[736,25801+8]..[736,25801+15])
                                    Some
                                      expression (middle_end/flambda/flambda_iterators.ml[738,25828+8]..[738,25828+78])
                                        Pexp_construct "Let_symbol" (middle_end/flambda/flambda_iterators.ml[738,25828+8]..[738,25828+18])
                                        Some
                                          expression (middle_end/flambda/flambda_iterators.ml[738,25828+19]..[738,25828+78])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/flambda/flambda_iterators.ml[738,25828+20]..[738,25828+26])
                                                Pexp_ident "symbol" (middle_end/flambda/flambda_iterators.ml[738,25828+20]..[738,25828+26])
                                              expression (middle_end/flambda/flambda_iterators.ml[738,25828+28]..[738,25828+63])
                                                Pexp_construct "Set_of_closures" (middle_end/flambda/flambda_iterators.ml[738,25828+28]..[738,25828+43])
                                                Some
                                                  expression (middle_end/flambda/flambda_iterators.ml[738,25828+44]..[738,25828+63])
                                                    Pexp_ident "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[738,25828+44]..[738,25828+63])
                                              expression (middle_end/flambda/flambda_iterators.ml[738,25828+65]..[738,25828+77])
                                                Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[738,25828+65]..[738,25828+77])
                                            ]
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[739,25907+6]..[739,25907+42])
                                Ppat_construct "Let_symbol" (middle_end/flambda/flambda_iterators.ml[739,25907+6]..[739,25907+16])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[739,25907+17]..[739,25907+42])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/flambda_iterators.ml[739,25907+18]..[739,25907+24])
                                        Ppat_var "symbol" (middle_end/flambda/flambda_iterators.ml[739,25907+18]..[739,25907+24])
                                      pattern (middle_end/flambda/flambda_iterators.ml[739,25907+26]..[739,25907+31])
                                        Ppat_var "const" (middle_end/flambda/flambda_iterators.ml[739,25907+26]..[739,25907+31])
                                      pattern (middle_end/flambda/flambda_iterators.ml[739,25907+33]..[739,25907+41])
                                        Ppat_var "program'" (middle_end/flambda/flambda_iterators.ml[739,25907+33]..[739,25907+41])
                                    ]
                              expression (middle_end/flambda/flambda_iterators.ml[740,25953+6]..[744,26061+48])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/flambda_iterators.ml[740,25953+10]..[740,25953+22])
                                      Ppat_var "new_program'" (middle_end/flambda/flambda_iterators.ml[740,25953+10]..[740,25953+22])
                                    expression (middle_end/flambda/flambda_iterators.ml[740,25953+25]..[740,25953+38])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[740,25953+25]..[740,25953+29])
                                        Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[740,25953+25]..[740,25953+29])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[740,25953+30]..[740,25953+38])
                                            Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[740,25953+30]..[740,25953+38])
                                      ]
                                ]
                                expression (middle_end/flambda/flambda_iterators.ml[741,25995+6]..[744,26061+48])
                                  Pexp_ifthenelse
                                  expression (middle_end/flambda/flambda_iterators.ml[741,25995+9]..[741,25995+33])
                                    Pexp_apply
                                    expression (middle_end/flambda/flambda_iterators.ml[741,25995+22]..[741,25995+24])
                                      Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[741,25995+22]..[741,25995+24])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[741,25995+9]..[741,25995+21])
                                          Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[741,25995+9]..[741,25995+21])
                                      <arg>
                                      Nolabel
                                        expression (middle_end/flambda/flambda_iterators.ml[741,25995+25]..[741,25995+33])
                                          Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[741,25995+25]..[741,25995+33])
                                    ]
                                  expression (middle_end/flambda/flambda_iterators.ml[742,26034+8]..[742,26034+15])
                                    Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[742,26034+8]..[742,26034+15])
                                  Some
                                    expression (middle_end/flambda/flambda_iterators.ml[744,26061+8]..[744,26061+48])
                                      Pexp_construct "Let_symbol" (middle_end/flambda/flambda_iterators.ml[744,26061+8]..[744,26061+18])
                                      Some
                                        expression (middle_end/flambda/flambda_iterators.ml[744,26061+19]..[744,26061+48])
                                          Pexp_tuple
                                          [
                                            expression (middle_end/flambda/flambda_iterators.ml[744,26061+20]..[744,26061+26])
                                              Pexp_ident "symbol" (middle_end/flambda/flambda_iterators.ml[744,26061+20]..[744,26061+26])
                                            expression (middle_end/flambda/flambda_iterators.ml[744,26061+28]..[744,26061+33])
                                              Pexp_ident "const" (middle_end/flambda/flambda_iterators.ml[744,26061+28]..[744,26061+33])
                                            expression (middle_end/flambda/flambda_iterators.ml[744,26061+35]..[744,26061+47])
                                              Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[744,26061+35]..[744,26061+47])
                                          ]
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[745,26110+6]..[745,26110+37])
                                Ppat_construct "Let_rec_symbol" (middle_end/flambda/flambda_iterators.ml[745,26110+6]..[745,26110+20])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[745,26110+21]..[745,26110+37])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/flambda_iterators.ml[745,26110+22]..[745,26110+26])
                                        Ppat_var "defs" (middle_end/flambda/flambda_iterators.ml[745,26110+22]..[745,26110+26])
                                      pattern (middle_end/flambda/flambda_iterators.ml[745,26110+28]..[745,26110+36])
                                        Ppat_var "program'" (middle_end/flambda/flambda_iterators.ml[745,26110+28]..[745,26110+36])
                                    ]
                              expression (middle_end/flambda/flambda_iterators.ml[746,26151+6]..[764,26792+43])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/flambda_iterators.ml[746,26151+10]..[746,26151+24])
                                      Ppat_var "done_something" (middle_end/flambda/flambda_iterators.ml[746,26151+10]..[746,26151+24])
                                    expression (middle_end/flambda/flambda_iterators.ml[746,26151+27]..[746,26151+36])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[746,26151+27]..[746,26151+30])
                                        Pexp_ident "ref" (middle_end/flambda/flambda_iterators.ml[746,26151+27]..[746,26151+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[746,26151+31]..[746,26151+36])
                                            Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[746,26151+31]..[746,26151+36])
                                            None
                                      ]
                                ]
                                expression (middle_end/flambda/flambda_iterators.ml[747,26191+6]..[764,26792+43])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_iterators.ml[747,26191+10]..[747,26191+14])
                                        Ppat_var "defs" (middle_end/flambda/flambda_iterators.ml[747,26191+10]..[747,26191+14])
                                      expression (middle_end/flambda/flambda_iterators.ml[748,26208+8]..[758,26637+14])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[748,26208+8]..[748,26208+16])
                                          Pexp_ident "List.map" (middle_end/flambda/flambda_iterators.ml[748,26208+8]..[748,26208+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[748,26208+17]..[757,26611+25])
                                              Pexp_function
                                              [
                                                <case>
                                                  pattern (middle_end/flambda/flambda_iterators.ml[749,26235+14]..[749,26235+60])
                                                    Ppat_tuple
                                                    [
                                                      pattern (middle_end/flambda/flambda_iterators.ml[749,26235+15]..[749,26235+18])
                                                        Ppat_var "var" (middle_end/flambda/flambda_iterators.ml[749,26235+15]..[749,26235+18])
                                                      pattern (middle_end/flambda/flambda_iterators.ml[749,26235+20]..[749,26235+59])
                                                        Ppat_construct "Flambda.Set_of_closures" (middle_end/flambda/flambda_iterators.ml[749,26235+20]..[749,26235+43])
                                                        Some
                                                          []
                                                          pattern (middle_end/flambda/flambda_iterators.ml[749,26235+44]..[749,26235+59])
                                                            Ppat_var "set_of_closures" (middle_end/flambda/flambda_iterators.ml[749,26235+44]..[749,26235+59])
                                                    ]
                                                  expression (middle_end/flambda/flambda_iterators.ml[750,26299+14]..[756,26548+62])
                                                    Pexp_let Nonrec
                                                    [
                                                      <def>
                                                        pattern (middle_end/flambda/flambda_iterators.ml[750,26299+18]..[750,26299+37])
                                                          Ppat_var "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[750,26299+18]..[750,26299+37])
                                                        expression (middle_end/flambda/flambda_iterators.ml[751,26339+16]..[751,26339+60])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_iterators.ml[751,26339+16]..[751,26339+44])
                                                            Pexp_ident "map_constant_set_of_closures" (middle_end/flambda/flambda_iterators.ml[751,26339+16]..[751,26339+44])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[751,26339+45]..[751,26339+60])
                                                                Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[751,26339+45]..[751,26339+60])
                                                          ]
                                                    ]
                                                    expression (middle_end/flambda/flambda_iterators.ml[753,26417+14]..[756,26548+62])
                                                      Pexp_sequence
                                                      expression (middle_end/flambda/flambda_iterators.ml[753,26417+14]..[755,26529+17])
                                                        Pexp_ifthenelse
                                                        expression (middle_end/flambda/flambda_iterators.ml[753,26417+17]..[753,26417+61])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_iterators.ml[753,26417+17]..[753,26417+20])
                                                            Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[753,26417+17]..[753,26417+20])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[753,26417+21]..[753,26417+61])
                                                                Pexp_apply
                                                                expression (middle_end/flambda/flambda_iterators.ml[753,26417+42]..[753,26417+44])
                                                                  Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[753,26417+42]..[753,26417+44])
                                                                [
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/flambda_iterators.ml[753,26417+22]..[753,26417+41])
                                                                      Pexp_ident "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[753,26417+22]..[753,26417+41])
                                                                  <arg>
                                                                  Nolabel
                                                                    expression (middle_end/flambda/flambda_iterators.ml[753,26417+45]..[753,26417+60])
                                                                      Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[753,26417+45]..[753,26417+60])
                                                                ]
                                                          ]
                                                        expression (middle_end/flambda/flambda_iterators.ml[753,26417+67]..[755,26529+17])
                                                          Pexp_apply
                                                          expression (middle_end/flambda/flambda_iterators.ml[754,26490+31]..[754,26490+33])
                                                            Pexp_ident ":=" (middle_end/flambda/flambda_iterators.ml[754,26490+31]..[754,26490+33])
                                                          [
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[754,26490+16]..[754,26490+30])
                                                                Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[754,26490+16]..[754,26490+30])
                                                            <arg>
                                                            Nolabel
                                                              expression (middle_end/flambda/flambda_iterators.ml[754,26490+34]..[754,26490+38])
                                                                Pexp_construct "true" (middle_end/flambda/flambda_iterators.ml[754,26490+34]..[754,26490+38])
                                                                None
                                                          ]
                                                        None
                                                      expression (middle_end/flambda/flambda_iterators.ml[756,26548+14]..[756,26548+62])
                                                        Pexp_tuple
                                                        [
                                                          expression (middle_end/flambda/flambda_iterators.ml[756,26548+14]..[756,26548+17])
                                                            Pexp_ident "var" (middle_end/flambda/flambda_iterators.ml[756,26548+14]..[756,26548+17])
                                                          expression (middle_end/flambda/flambda_iterators.ml[756,26548+19]..[756,26548+62])
                                                            Pexp_construct "Flambda.Set_of_closures" (middle_end/flambda/flambda_iterators.ml[756,26548+19]..[756,26548+42])
                                                            Some
                                                              expression (middle_end/flambda/flambda_iterators.ml[756,26548+43]..[756,26548+62])
                                                                Pexp_ident "new_set_of_closures" (middle_end/flambda/flambda_iterators.ml[756,26548+43]..[756,26548+62])
                                                        ]
                                                <case>
                                                  pattern (middle_end/flambda/flambda_iterators.ml[757,26611+14]..[757,26611+17])
                                                    Ppat_var "def" (middle_end/flambda/flambda_iterators.ml[757,26611+14]..[757,26611+17])
                                                  expression (middle_end/flambda/flambda_iterators.ml[757,26611+21]..[757,26611+24])
                                                    Pexp_ident "def" (middle_end/flambda/flambda_iterators.ml[757,26611+21]..[757,26611+24])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[758,26637+10]..[758,26637+14])
                                              Pexp_ident "defs" (middle_end/flambda/flambda_iterators.ml[758,26637+10]..[758,26637+14])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_iterators.ml[760,26661+6]..[764,26792+43])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_iterators.ml[760,26661+10]..[760,26661+22])
                                          Ppat_var "new_program'" (middle_end/flambda/flambda_iterators.ml[760,26661+10]..[760,26661+22])
                                        expression (middle_end/flambda/flambda_iterators.ml[760,26661+25]..[760,26661+38])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_iterators.ml[760,26661+25]..[760,26661+29])
                                            Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[760,26661+25]..[760,26661+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_iterators.ml[760,26661+30]..[760,26661+38])
                                                Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[760,26661+30]..[760,26661+38])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_iterators.ml[761,26703+6]..[764,26792+43])
                                      Pexp_ifthenelse
                                      expression (middle_end/flambda/flambda_iterators.ml[761,26703+9]..[761,26703+56])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[761,26703+34]..[761,26703+36])
                                          Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[761,26703+34]..[761,26703+36])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[761,26703+9]..[761,26703+33])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_iterators.ml[761,26703+22]..[761,26703+24])
                                                Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[761,26703+22]..[761,26703+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[761,26703+9]..[761,26703+21])
                                                    Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[761,26703+9]..[761,26703+21])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[761,26703+25]..[761,26703+33])
                                                    Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[761,26703+25]..[761,26703+33])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[761,26703+37]..[761,26703+56])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_iterators.ml[761,26703+37]..[761,26703+40])
                                                Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[761,26703+37]..[761,26703+40])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[761,26703+41]..[761,26703+56])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[761,26703+41]..[761,26703+42])
                                                      Pexp_ident "!" (middle_end/flambda/flambda_iterators.ml[761,26703+41]..[761,26703+42])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[761,26703+42]..[761,26703+56])
                                                          Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[761,26703+42]..[761,26703+56])
                                                    ]
                                              ]
                                        ]
                                      expression (middle_end/flambda/flambda_iterators.ml[762,26765+8]..[762,26765+15])
                                        Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[762,26765+8]..[762,26765+15])
                                      Some
                                        expression (middle_end/flambda/flambda_iterators.ml[764,26792+8]..[764,26792+43])
                                          Pexp_construct "Let_rec_symbol" (middle_end/flambda/flambda_iterators.ml[764,26792+8]..[764,26792+22])
                                          Some
                                            expression (middle_end/flambda/flambda_iterators.ml[764,26792+23]..[764,26792+43])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/flambda/flambda_iterators.ml[764,26792+24]..[764,26792+28])
                                                  Pexp_ident "defs" (middle_end/flambda/flambda_iterators.ml[764,26792+24]..[764,26792+28])
                                                expression (middle_end/flambda/flambda_iterators.ml[764,26792+30]..[764,26792+42])
                                                  Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[764,26792+30]..[764,26792+42])
                                              ]
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[765,26836+6]..[765,26836+55])
                                Ppat_construct "Initialize_symbol" (middle_end/flambda/flambda_iterators.ml[765,26836+6]..[765,26836+23])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[765,26836+24]..[765,26836+55])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/flambda_iterators.ml[765,26836+25]..[765,26836+31])
                                        Ppat_var "symbol" (middle_end/flambda/flambda_iterators.ml[765,26836+25]..[765,26836+31])
                                      pattern (middle_end/flambda/flambda_iterators.ml[765,26836+33]..[765,26836+36])
                                        Ppat_var "tag" (middle_end/flambda/flambda_iterators.ml[765,26836+33]..[765,26836+36])
                                      pattern (middle_end/flambda/flambda_iterators.ml[765,26836+38]..[765,26836+44])
                                        Ppat_var "fields" (middle_end/flambda/flambda_iterators.ml[765,26836+38]..[765,26836+44])
                                      pattern (middle_end/flambda/flambda_iterators.ml[765,26836+46]..[765,26836+54])
                                        Ppat_var "program'" (middle_end/flambda/flambda_iterators.ml[765,26836+46]..[765,26836+54])
                                    ]
                              expression (middle_end/flambda/flambda_iterators.ml[766,26895+6]..[780,27309+61])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/flambda_iterators.ml[766,26895+10]..[766,26895+24])
                                      Ppat_var "done_something" (middle_end/flambda/flambda_iterators.ml[766,26895+10]..[766,26895+24])
                                    expression (middle_end/flambda/flambda_iterators.ml[766,26895+27]..[766,26895+36])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[766,26895+27]..[766,26895+30])
                                        Pexp_ident "ref" (middle_end/flambda/flambda_iterators.ml[766,26895+27]..[766,26895+30])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[766,26895+31]..[766,26895+36])
                                            Pexp_construct "false" (middle_end/flambda/flambda_iterators.ml[766,26895+31]..[766,26895+36])
                                            None
                                      ]
                                ]
                                expression (middle_end/flambda/flambda_iterators.ml[767,26935+6]..[780,27309+61])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_iterators.ml[767,26935+10]..[767,26935+16])
                                        Ppat_var "fields" (middle_end/flambda/flambda_iterators.ml[767,26935+10]..[767,26935+16])
                                      expression (middle_end/flambda/flambda_iterators.ml[768,26954+8]..[774,27152+16])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[768,26954+8]..[768,26954+16])
                                          Pexp_ident "List.map" (middle_end/flambda/flambda_iterators.ml[768,26954+8]..[768,26954+16])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[768,26954+17]..[773,27129+22])
                                              Pexp_fun
                                              Nolabel
                                              None
                                              pattern (middle_end/flambda/flambda_iterators.ml[768,26954+22]..[768,26954+27])
                                                Ppat_var "field" (middle_end/flambda/flambda_iterators.ml[768,26954+22]..[768,26954+27])
                                              expression (middle_end/flambda/flambda_iterators.ml[769,26985+12]..[773,27129+21])
                                                Pexp_let Nonrec
                                                [
                                                  <def>
                                                    pattern (middle_end/flambda/flambda_iterators.ml[769,26985+16]..[769,26985+25])
                                                      Ppat_var "new_field" (middle_end/flambda/flambda_iterators.ml[769,26985+16]..[769,26985+25])
                                                    expression (middle_end/flambda/flambda_iterators.ml[769,26985+28]..[769,26985+35])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_iterators.ml[769,26985+28]..[769,26985+29])
                                                        Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[769,26985+28]..[769,26985+29])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[769,26985+30]..[769,26985+35])
                                                            Pexp_ident "field" (middle_end/flambda/flambda_iterators.ml[769,26985+30]..[769,26985+35])
                                                      ]
                                                ]
                                                expression (middle_end/flambda/flambda_iterators.ml[770,27024+12]..[773,27129+21])
                                                  Pexp_sequence
                                                  expression (middle_end/flambda/flambda_iterators.ml[770,27024+12]..[772,27112+15])
                                                    Pexp_ifthenelse
                                                    expression (middle_end/flambda/flambda_iterators.ml[770,27024+15]..[770,27024+39])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_iterators.ml[770,27024+15]..[770,27024+18])
                                                        Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[770,27024+15]..[770,27024+18])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[770,27024+19]..[770,27024+39])
                                                            Pexp_apply
                                                            expression (middle_end/flambda/flambda_iterators.ml[770,27024+30]..[770,27024+32])
                                                              Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[770,27024+30]..[770,27024+32])
                                                            [
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_iterators.ml[770,27024+20]..[770,27024+29])
                                                                  Pexp_ident "new_field" (middle_end/flambda/flambda_iterators.ml[770,27024+20]..[770,27024+29])
                                                              <arg>
                                                              Nolabel
                                                                expression (middle_end/flambda/flambda_iterators.ml[770,27024+33]..[770,27024+38])
                                                                  Pexp_ident "field" (middle_end/flambda/flambda_iterators.ml[770,27024+33]..[770,27024+38])
                                                            ]
                                                      ]
                                                    expression (middle_end/flambda/flambda_iterators.ml[770,27024+45]..[772,27112+15])
                                                      Pexp_apply
                                                      expression (middle_end/flambda/flambda_iterators.ml[771,27075+29]..[771,27075+31])
                                                        Pexp_ident ":=" (middle_end/flambda/flambda_iterators.ml[771,27075+29]..[771,27075+31])
                                                      [
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[771,27075+14]..[771,27075+28])
                                                            Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[771,27075+14]..[771,27075+28])
                                                        <arg>
                                                        Nolabel
                                                          expression (middle_end/flambda/flambda_iterators.ml[771,27075+32]..[771,27075+36])
                                                            Pexp_construct "true" (middle_end/flambda/flambda_iterators.ml[771,27075+32]..[771,27075+36])
                                                            None
                                                      ]
                                                    None
                                                  expression (middle_end/flambda/flambda_iterators.ml[773,27129+12]..[773,27129+21])
                                                    Pexp_ident "new_field" (middle_end/flambda/flambda_iterators.ml[773,27129+12]..[773,27129+21])
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[774,27152+10]..[774,27152+16])
                                              Pexp_ident "fields" (middle_end/flambda/flambda_iterators.ml[774,27152+10]..[774,27152+16])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_iterators.ml[776,27178+6]..[780,27309+61])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (middle_end/flambda/flambda_iterators.ml[776,27178+10]..[776,27178+22])
                                          Ppat_var "new_program'" (middle_end/flambda/flambda_iterators.ml[776,27178+10]..[776,27178+22])
                                        expression (middle_end/flambda/flambda_iterators.ml[776,27178+25]..[776,27178+38])
                                          Pexp_apply
                                          expression (middle_end/flambda/flambda_iterators.ml[776,27178+25]..[776,27178+29])
                                            Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[776,27178+25]..[776,27178+29])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (middle_end/flambda/flambda_iterators.ml[776,27178+30]..[776,27178+38])
                                                Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[776,27178+30]..[776,27178+38])
                                          ]
                                    ]
                                    expression (middle_end/flambda/flambda_iterators.ml[777,27220+6]..[780,27309+61])
                                      Pexp_ifthenelse
                                      expression (middle_end/flambda/flambda_iterators.ml[777,27220+9]..[777,27220+56])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[777,27220+34]..[777,27220+36])
                                          Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[777,27220+34]..[777,27220+36])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[777,27220+9]..[777,27220+33])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_iterators.ml[777,27220+22]..[777,27220+24])
                                                Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[777,27220+22]..[777,27220+24])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[777,27220+9]..[777,27220+21])
                                                    Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[777,27220+9]..[777,27220+21])
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[777,27220+25]..[777,27220+33])
                                                    Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[777,27220+25]..[777,27220+33])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[777,27220+37]..[777,27220+56])
                                              Pexp_apply
                                              expression (middle_end/flambda/flambda_iterators.ml[777,27220+37]..[777,27220+40])
                                                Pexp_ident "not" (middle_end/flambda/flambda_iterators.ml[777,27220+37]..[777,27220+40])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (middle_end/flambda/flambda_iterators.ml[777,27220+41]..[777,27220+56])
                                                    Pexp_apply
                                                    expression (middle_end/flambda/flambda_iterators.ml[777,27220+41]..[777,27220+42])
                                                      Pexp_ident "!" (middle_end/flambda/flambda_iterators.ml[777,27220+41]..[777,27220+42])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (middle_end/flambda/flambda_iterators.ml[777,27220+42]..[777,27220+56])
                                                          Pexp_ident "done_something" (middle_end/flambda/flambda_iterators.ml[777,27220+42]..[777,27220+56])
                                                    ]
                                              ]
                                        ]
                                      expression (middle_end/flambda/flambda_iterators.ml[778,27282+8]..[778,27282+15])
                                        Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[778,27282+8]..[778,27282+15])
                                      Some
                                        expression (middle_end/flambda/flambda_iterators.ml[780,27309+8]..[780,27309+61])
                                          Pexp_construct "Initialize_symbol" (middle_end/flambda/flambda_iterators.ml[780,27309+8]..[780,27309+25])
                                          Some
                                            expression (middle_end/flambda/flambda_iterators.ml[780,27309+26]..[780,27309+61])
                                              Pexp_tuple
                                              [
                                                expression (middle_end/flambda/flambda_iterators.ml[780,27309+27]..[780,27309+33])
                                                  Pexp_ident "symbol" (middle_end/flambda/flambda_iterators.ml[780,27309+27]..[780,27309+33])
                                                expression (middle_end/flambda/flambda_iterators.ml[780,27309+35]..[780,27309+38])
                                                  Pexp_ident "tag" (middle_end/flambda/flambda_iterators.ml[780,27309+35]..[780,27309+38])
                                                expression (middle_end/flambda/flambda_iterators.ml[780,27309+40]..[780,27309+46])
                                                  Pexp_ident "fields" (middle_end/flambda/flambda_iterators.ml[780,27309+40]..[780,27309+46])
                                                expression (middle_end/flambda/flambda_iterators.ml[780,27309+48]..[780,27309+60])
                                                  Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[780,27309+48]..[780,27309+60])
                                              ]
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[781,27371+6]..[781,27371+29])
                                Ppat_construct "Effect" (middle_end/flambda/flambda_iterators.ml[781,27371+6]..[781,27371+12])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[781,27371+13]..[781,27371+29])
                                    Ppat_tuple
                                    [
                                      pattern (middle_end/flambda/flambda_iterators.ml[781,27371+14]..[781,27371+18])
                                        Ppat_var "expr" (middle_end/flambda/flambda_iterators.ml[781,27371+14]..[781,27371+18])
                                      pattern (middle_end/flambda/flambda_iterators.ml[781,27371+20]..[781,27371+28])
                                        Ppat_var "program'" (middle_end/flambda/flambda_iterators.ml[781,27371+20]..[781,27371+28])
                                    ]
                              expression (middle_end/flambda/flambda_iterators.ml[782,27404+6]..[787,27563+39])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (middle_end/flambda/flambda_iterators.ml[782,27404+10]..[782,27404+18])
                                      Ppat_var "new_expr" (middle_end/flambda/flambda_iterators.ml[782,27404+10]..[782,27404+18])
                                    expression (middle_end/flambda/flambda_iterators.ml[782,27404+21]..[782,27404+27])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[782,27404+21]..[782,27404+22])
                                        Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[782,27404+21]..[782,27404+22])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[782,27404+23]..[782,27404+27])
                                            Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[782,27404+23]..[782,27404+27])
                                      ]
                                ]
                                expression (middle_end/flambda/flambda_iterators.ml[783,27435+6]..[787,27563+39])
                                  Pexp_let Nonrec
                                  [
                                    <def>
                                      pattern (middle_end/flambda/flambda_iterators.ml[783,27435+10]..[783,27435+22])
                                        Ppat_var "new_program'" (middle_end/flambda/flambda_iterators.ml[783,27435+10]..[783,27435+22])
                                      expression (middle_end/flambda/flambda_iterators.ml[783,27435+25]..[783,27435+38])
                                        Pexp_apply
                                        expression (middle_end/flambda/flambda_iterators.ml[783,27435+25]..[783,27435+29])
                                          Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[783,27435+25]..[783,27435+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (middle_end/flambda/flambda_iterators.ml[783,27435+30]..[783,27435+38])
                                              Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[783,27435+30]..[783,27435+38])
                                        ]
                                  ]
                                  expression (middle_end/flambda/flambda_iterators.ml[784,27477+6]..[787,27563+39])
                                    Pexp_ifthenelse
                                    expression (middle_end/flambda/flambda_iterators.ml[784,27477+9]..[784,27477+53])
                                      Pexp_apply
                                      expression (middle_end/flambda/flambda_iterators.ml[784,27477+26]..[784,27477+28])
                                        Pexp_ident "&&" (middle_end/flambda/flambda_iterators.ml[784,27477+26]..[784,27477+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[784,27477+9]..[784,27477+25])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_iterators.ml[784,27477+18]..[784,27477+20])
                                              Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[784,27477+18]..[784,27477+20])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[784,27477+9]..[784,27477+17])
                                                  Pexp_ident "new_expr" (middle_end/flambda/flambda_iterators.ml[784,27477+9]..[784,27477+17])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[784,27477+21]..[784,27477+25])
                                                  Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[784,27477+21]..[784,27477+25])
                                            ]
                                        <arg>
                                        Nolabel
                                          expression (middle_end/flambda/flambda_iterators.ml[784,27477+29]..[784,27477+53])
                                            Pexp_apply
                                            expression (middle_end/flambda/flambda_iterators.ml[784,27477+42]..[784,27477+44])
                                              Pexp_ident "==" (middle_end/flambda/flambda_iterators.ml[784,27477+42]..[784,27477+44])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[784,27477+29]..[784,27477+41])
                                                  Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[784,27477+29]..[784,27477+41])
                                              <arg>
                                              Nolabel
                                                expression (middle_end/flambda/flambda_iterators.ml[784,27477+45]..[784,27477+53])
                                                  Pexp_ident "program'" (middle_end/flambda/flambda_iterators.ml[784,27477+45]..[784,27477+53])
                                            ]
                                      ]
                                    expression (middle_end/flambda/flambda_iterators.ml[785,27536+8]..[785,27536+15])
                                      Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[785,27536+8]..[785,27536+15])
                                    Some
                                      expression (middle_end/flambda/flambda_iterators.ml[787,27563+8]..[787,27563+39])
                                        Pexp_construct "Effect" (middle_end/flambda/flambda_iterators.ml[787,27563+8]..[787,27563+14])
                                        Some
                                          expression (middle_end/flambda/flambda_iterators.ml[787,27563+15]..[787,27563+39])
                                            Pexp_tuple
                                            [
                                              expression (middle_end/flambda/flambda_iterators.ml[787,27563+16]..[787,27563+24])
                                                Pexp_ident "new_expr" (middle_end/flambda/flambda_iterators.ml[787,27563+16]..[787,27563+24])
                                              expression (middle_end/flambda/flambda_iterators.ml[787,27563+26]..[787,27563+38])
                                                Pexp_ident "new_program'" (middle_end/flambda/flambda_iterators.ml[787,27563+26]..[787,27563+38])
                                            ]
                            <case>
                              pattern (middle_end/flambda/flambda_iterators.ml[788,27603+6]..[788,27603+11])
                                Ppat_construct "End" (middle_end/flambda/flambda_iterators.ml[788,27603+6]..[788,27603+9])
                                Some
                                  []
                                  pattern (middle_end/flambda/flambda_iterators.ml[788,27603+10]..[788,27603+11])
                                    Ppat_any
                              expression (middle_end/flambda/flambda_iterators.ml[788,27603+15]..[788,27603+22])
                                Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[788,27603+15]..[788,27603+22])
                          ]
                      core_type (middle_end/flambda/flambda_iterators.ml[702,24315+50]..[702,24315+70])
                        Ptyp_constr "Flambda.program_body" (middle_end/flambda/flambda_iterators.ml[702,24315+50]..[702,24315+70])
                        []
              ]
              expression (middle_end/flambda/flambda_iterators.ml[790,27631+2]..[792,27694+3])
                Pexp_record
                [
                  "program_body" (middle_end/flambda/flambda_iterators.ml[791,27648+4]..[791,27648+16])
                    expression (middle_end/flambda/flambda_iterators.ml[791,27648+19]..[791,27648+44])
                      Pexp_apply
                      expression (middle_end/flambda/flambda_iterators.ml[791,27648+19]..[791,27648+23])
                        Pexp_ident "loop" (middle_end/flambda/flambda_iterators.ml[791,27648+19]..[791,27648+23])
                      [
                        <arg>
                        Nolabel
                          expression (middle_end/flambda/flambda_iterators.ml[791,27648+24]..[791,27648+44])
                            Pexp_field
                            expression (middle_end/flambda/flambda_iterators.ml[791,27648+24]..[791,27648+31])
                              Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[791,27648+24]..[791,27648+31])
                            "program_body" (middle_end/flambda/flambda_iterators.ml[791,27648+32]..[791,27648+44])
                      ]
                ]
                Some
                  expression (middle_end/flambda/flambda_iterators.ml[790,27631+4]..[790,27631+11])
                    Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[790,27631+4]..[790,27631+11])
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[794,27699+0]..[797,27873+47])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[794,27699+4]..[794,27699+24])
          Ppat_var "map_named_of_program" (middle_end/flambda/flambda_iterators.ml[794,27699+4]..[794,27699+24])
        expression (middle_end/flambda/flambda_iterators.ml[794,27699+25]..[797,27873+47]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[794,27699+25]..[794,27699+52])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_iterators.ml[794,27699+26]..[794,27699+33])
              Ppat_var "program" (middle_end/flambda/flambda_iterators.ml[794,27699+26]..[794,27699+33])
            core_type (middle_end/flambda/flambda_iterators.ml[794,27699+36]..[794,27699+51])
              Ptyp_constr "Flambda.program" (middle_end/flambda/flambda_iterators.ml[794,27699+36]..[794,27699+51])
              []
          expression (middle_end/flambda/flambda_iterators.ml[795,27752+6]..[797,27873+47]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[795,27752+8]..[795,27752+56])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_iterators.ml[795,27752+8]..[795,27752+9])
                Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[795,27752+8]..[795,27752+9])
              core_type (middle_end/flambda/flambda_iterators.ml[795,27752+12]..[795,27752+56])
                Ptyp_arrow
                Nolabel
                core_type (middle_end/flambda/flambda_iterators.ml[795,27752+12]..[795,27752+22])
                  Ptyp_constr "Variable.t" (middle_end/flambda/flambda_iterators.ml[795,27752+12]..[795,27752+22])
                  []
                core_type (middle_end/flambda/flambda_iterators.ml[795,27752+26]..[795,27752+56])
                  Ptyp_arrow
                  Nolabel
                  core_type (middle_end/flambda/flambda_iterators.ml[795,27752+26]..[795,27752+39])
                    Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_iterators.ml[795,27752+26]..[795,27752+39])
                    []
                  core_type (middle_end/flambda/flambda_iterators.ml[795,27752+43]..[795,27752+56])
                    Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_iterators.ml[795,27752+43]..[795,27752+56])
                    []
            expression (middle_end/flambda/flambda_iterators.ml[795,27752+58]..[797,27873+47])
              Pexp_constraint
              expression (middle_end/flambda/flambda_iterators.ml[796,27830+2]..[797,27873+47])
                Pexp_apply
                expression (middle_end/flambda/flambda_iterators.ml[796,27830+2]..[796,27830+34])
                  Pexp_ident "map_exprs_at_toplevel_of_program" (middle_end/flambda/flambda_iterators.ml[796,27830+2]..[796,27830+34])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[796,27830+35]..[796,27830+42])
                      Pexp_ident "program" (middle_end/flambda/flambda_iterators.ml[796,27830+35]..[796,27830+42])
                  <arg>
                  Labelled "f"
                    expression (middle_end/flambda/flambda_iterators.ml[797,27873+9]..[797,27873+47])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/flambda_iterators.ml[797,27873+14]..[797,27873+18])
                        Ppat_var "expr" (middle_end/flambda/flambda_iterators.ml[797,27873+14]..[797,27873+18])
                      expression (middle_end/flambda/flambda_iterators.ml[797,27873+22]..[797,27873+46])
                        Pexp_apply
                        expression (middle_end/flambda/flambda_iterators.ml[797,27873+22]..[797,27873+39])
                          Pexp_ident "map_named_with_id" (middle_end/flambda/flambda_iterators.ml[797,27873+22]..[797,27873+39])
                        [
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[797,27873+40]..[797,27873+41])
                              Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[797,27873+40]..[797,27873+41])
                          <arg>
                          Nolabel
                            expression (middle_end/flambda/flambda_iterators.ml[797,27873+42]..[797,27873+46])
                              Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[797,27873+42]..[797,27873+46])
                        ]
                ]
              core_type (middle_end/flambda/flambda_iterators.ml[795,27752+60]..[795,27752+75])
                Ptyp_constr "Flambda.program" (middle_end/flambda/flambda_iterators.ml[795,27752+60]..[795,27752+75])
                []
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[799,27922+0]..[801,28060+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[799,27922+4]..[799,27922+46])
          Ppat_var "map_all_immutable_let_and_let_rec_bindings" (middle_end/flambda/flambda_iterators.ml[799,27922+4]..[799,27922+46])
        expression (middle_end/flambda/flambda_iterators.ml[799,27922+47]..[801,28060+26]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[799,27922+47]..[799,27922+65])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_iterators.ml[799,27922+48]..[799,27922+52])
              Ppat_var "expr" (middle_end/flambda/flambda_iterators.ml[799,27922+48]..[799,27922+52])
            core_type (middle_end/flambda/flambda_iterators.ml[799,27922+55]..[799,27922+64])
              Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_iterators.ml[799,27922+55]..[799,27922+64])
              []
          expression (middle_end/flambda/flambda_iterators.ml[800,27988+6]..[801,28060+26]) ghost
            Pexp_fun
            Labelled "f"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[800,27988+8]..[800,27988+56])
              Ppat_constraint
              pattern (middle_end/flambda/flambda_iterators.ml[800,27988+8]..[800,27988+9])
                Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[800,27988+8]..[800,27988+9])
              core_type (middle_end/flambda/flambda_iterators.ml[800,27988+12]..[800,27988+56])
                Ptyp_arrow
                Nolabel
                core_type (middle_end/flambda/flambda_iterators.ml[800,27988+12]..[800,27988+22])
                  Ptyp_constr "Variable.t" (middle_end/flambda/flambda_iterators.ml[800,27988+12]..[800,27988+22])
                  []
                core_type (middle_end/flambda/flambda_iterators.ml[800,27988+26]..[800,27988+56])
                  Ptyp_arrow
                  Nolabel
                  core_type (middle_end/flambda/flambda_iterators.ml[800,27988+26]..[800,27988+39])
                    Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_iterators.ml[800,27988+26]..[800,27988+39])
                    []
                  core_type (middle_end/flambda/flambda_iterators.ml[800,27988+43]..[800,27988+56])
                    Ptyp_constr "Flambda.named" (middle_end/flambda/flambda_iterators.ml[800,27988+43]..[800,27988+56])
                    []
            expression (middle_end/flambda/flambda_iterators.ml[800,27988+58]..[801,28060+26])
              Pexp_constraint
              expression (middle_end/flambda/flambda_iterators.ml[801,28060+2]..[801,28060+26])
                Pexp_apply
                expression (middle_end/flambda/flambda_iterators.ml[801,28060+2]..[801,28060+19])
                  Pexp_ident "map_named_with_id" (middle_end/flambda/flambda_iterators.ml[801,28060+2]..[801,28060+19])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[801,28060+20]..[801,28060+21])
                      Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[801,28060+20]..[801,28060+21])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[801,28060+22]..[801,28060+26])
                      Pexp_ident "expr" (middle_end/flambda/flambda_iterators.ml[801,28060+22]..[801,28060+26])
                ]
              core_type (middle_end/flambda/flambda_iterators.ml[800,27988+60]..[800,27988+69])
                Ptyp_constr "Flambda.t" (middle_end/flambda/flambda_iterators.ml[800,27988+60]..[800,27988+69])
                []
    ]
  structure_item (middle_end/flambda/flambda_iterators.ml[803,28088+0]..[808,28319+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (middle_end/flambda/flambda_iterators.ml[803,28088+4]..[803,28088+38])
          Ppat_var "fold_function_decls_ignoring_stubs" (middle_end/flambda/flambda_iterators.ml[803,28088+4]..[803,28088+38])
        expression (middle_end/flambda/flambda_iterators.ml[804,28127+6]..[808,28319+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (middle_end/flambda/flambda_iterators.ml[804,28127+6]..[804,28127+49])
            Ppat_constraint
            pattern (middle_end/flambda/flambda_iterators.ml[804,28127+7]..[804,28127+22])
              Ppat_var "set_of_closures" (middle_end/flambda/flambda_iterators.ml[804,28127+7]..[804,28127+22])
            core_type (middle_end/flambda/flambda_iterators.ml[804,28127+25]..[804,28127+48])
              Ptyp_constr "Flambda.set_of_closures" (middle_end/flambda/flambda_iterators.ml[804,28127+25]..[804,28127+48])
              []
          expression (middle_end/flambda/flambda_iterators.ml[804,28127+50]..[808,28319+8]) ghost
            Pexp_fun
            Labelled "init"
            None
            pattern (middle_end/flambda/flambda_iterators.ml[804,28127+51]..[804,28127+55])
              Ppat_var "init" (middle_end/flambda/flambda_iterators.ml[804,28127+51]..[804,28127+55])
            expression (middle_end/flambda/flambda_iterators.ml[804,28127+56]..[808,28319+8]) ghost
              Pexp_fun
              Labelled "f"
              None
              pattern (middle_end/flambda/flambda_iterators.ml[804,28127+57]..[804,28127+58])
                Ppat_var "f" (middle_end/flambda/flambda_iterators.ml[804,28127+57]..[804,28127+58])
              expression (middle_end/flambda/flambda_iterators.ml[805,28188+2]..[808,28319+8])
                Pexp_apply
                expression (middle_end/flambda/flambda_iterators.ml[805,28188+2]..[805,28188+19])
                  Pexp_ident "Variable.Map.fold" (middle_end/flambda/flambda_iterators.ml[805,28188+2]..[805,28188+19])
                [
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[805,28188+20]..[806,28242+36])
                      Pexp_fun
                      Nolabel
                      None
                      pattern (middle_end/flambda/flambda_iterators.ml[805,28188+25]..[805,28188+32])
                        Ppat_var "fun_var" (middle_end/flambda/flambda_iterators.ml[805,28188+25]..[805,28188+32])
                      expression (middle_end/flambda/flambda_iterators.ml[805,28188+33]..[806,28242+35]) ghost
                        Pexp_fun
                        Nolabel
                        None
                        pattern (middle_end/flambda/flambda_iterators.ml[805,28188+33]..[805,28188+46])
                          Ppat_var "function_decl" (middle_end/flambda/flambda_iterators.ml[805,28188+33]..[805,28188+46])
                        expression (middle_end/flambda/flambda_iterators.ml[805,28188+47]..[806,28242+35]) ghost
                          Pexp_fun
                          Nolabel
                          None
                          pattern (middle_end/flambda/flambda_iterators.ml[805,28188+47]..[805,28188+50])
                            Ppat_var "acc" (middle_end/flambda/flambda_iterators.ml[805,28188+47]..[805,28188+50])
                          expression (middle_end/flambda/flambda_iterators.ml[806,28242+6]..[806,28242+35])
                            Pexp_apply
                            expression (middle_end/flambda/flambda_iterators.ml[806,28242+6]..[806,28242+7])
                              Pexp_ident "f" (middle_end/flambda/flambda_iterators.ml[806,28242+6]..[806,28242+7])
                            [
                              <arg>
                              Labelled "fun_var"
                                expression (middle_end/flambda/flambda_iterators.ml[806,28242+9]..[806,28242+16])
                                  Pexp_ident "fun_var" (middle_end/flambda/flambda_iterators.ml[806,28242+9]..[806,28242+16])
                              <arg>
                              Labelled "function_decl"
                                expression (middle_end/flambda/flambda_iterators.ml[806,28242+18]..[806,28242+31])
                                  Pexp_ident "function_decl" (middle_end/flambda/flambda_iterators.ml[806,28242+18]..[806,28242+31])
                              <arg>
                              Nolabel
                                expression (middle_end/flambda/flambda_iterators.ml[806,28242+32]..[806,28242+35])
                                  Pexp_ident "acc" (middle_end/flambda/flambda_iterators.ml[806,28242+32]..[806,28242+35])
                            ]
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[807,28279+4]..[807,28279+39])
                      Pexp_field
                      expression (middle_end/flambda/flambda_iterators.ml[807,28279+4]..[807,28279+34])
                        Pexp_field
                        expression (middle_end/flambda/flambda_iterators.ml[807,28279+4]..[807,28279+19])
                          Pexp_ident "set_of_closures" (middle_end/flambda/flambda_iterators.ml[807,28279+4]..[807,28279+19])
                        "function_decls" (middle_end/flambda/flambda_iterators.ml[807,28279+20]..[807,28279+34])
                      "funs" (middle_end/flambda/flambda_iterators.ml[807,28279+35]..[807,28279+39])
                  <arg>
                  Nolabel
                    expression (middle_end/flambda/flambda_iterators.ml[808,28319+4]..[808,28319+8])
                      Pexp_ident "init" (middle_end/flambda/flambda_iterators.ml[808,28319+4]..[808,28319+8])
                ]
    ]
]

