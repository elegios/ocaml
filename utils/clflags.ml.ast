[
  structure_item (utils/clflags.ml[18,1110+0]..[28,1333+4])
    Pstr_module
    "Int_arg_helper" (utils/clflags.ml[18,1110+7]..[18,1110+21])
      module_expr (utils/clflags.ml[18,1110+24]..[28,1333+4])
        Pmod_apply
        module_expr (utils/clflags.ml[18,1110+24]..[18,1110+39])
          Pmod_ident "Arg_helper.Make" (utils/clflags.ml[18,1110+24]..[18,1110+39])
        module_expr (utils/clflags.ml[18,1110+41]..[28,1333+3])
          Pmod_structure
          [
            structure_item (utils/clflags.ml[19,1158+2]..[22,1238+5])
              Pstr_module
              "Key" (utils/clflags.ml[19,1158+9]..[19,1158+12])
                module_expr (utils/clflags.ml[19,1158+15]..[22,1238+5])
                  Pmod_structure
                  [
                    structure_item (utils/clflags.ml[20,1180+4]..[20,1180+23])
                      Pstr_include                      module_expr (utils/clflags.ml[20,1180+12]..[20,1180+23])
                        Pmod_ident "Numbers.Int" (utils/clflags.ml[20,1180+12]..[20,1180+23])
                    structure_item (utils/clflags.ml[21,1204+4]..[21,1204+33])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (utils/clflags.ml[21,1204+8]..[21,1204+17])
                            Ppat_var "of_string" (utils/clflags.ml[21,1204+8]..[21,1204+17])
                          expression (utils/clflags.ml[21,1204+20]..[21,1204+33])
                            Pexp_ident "int_of_string" (utils/clflags.ml[21,1204+20]..[21,1204+33])
                      ]
                  ]
            structure_item (utils/clflags.ml[24,1245+2]..[27,1327+5])
              Pstr_module
              "Value" (utils/clflags.ml[24,1245+9]..[24,1245+14])
                module_expr (utils/clflags.ml[24,1245+17]..[27,1327+5])
                  Pmod_structure
                  [
                    structure_item (utils/clflags.ml[25,1269+4]..[25,1269+23])
                      Pstr_include                      module_expr (utils/clflags.ml[25,1269+12]..[25,1269+23])
                        Pmod_ident "Numbers.Int" (utils/clflags.ml[25,1269+12]..[25,1269+23])
                    structure_item (utils/clflags.ml[26,1293+4]..[26,1293+33])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (utils/clflags.ml[26,1293+8]..[26,1293+17])
                            Ppat_var "of_string" (utils/clflags.ml[26,1293+8]..[26,1293+17])
                          expression (utils/clflags.ml[26,1293+20]..[26,1293+33])
                            Pexp_ident "int_of_string" (utils/clflags.ml[26,1293+20]..[26,1293+33])
                      ]
                  ]
          ]
  structure_item (utils/clflags.ml[29,1338+0]..[39,1567+4])
    Pstr_module
    "Float_arg_helper" (utils/clflags.ml[29,1338+7]..[29,1338+23])
      module_expr (utils/clflags.ml[29,1338+26]..[39,1567+4])
        Pmod_apply
        module_expr (utils/clflags.ml[29,1338+26]..[29,1338+41])
          Pmod_ident "Arg_helper.Make" (utils/clflags.ml[29,1338+26]..[29,1338+41])
        module_expr (utils/clflags.ml[29,1338+43]..[39,1567+3])
          Pmod_structure
          [
            structure_item (utils/clflags.ml[30,1388+2]..[33,1468+5])
              Pstr_module
              "Key" (utils/clflags.ml[30,1388+9]..[30,1388+12])
                module_expr (utils/clflags.ml[30,1388+15]..[33,1468+5])
                  Pmod_structure
                  [
                    structure_item (utils/clflags.ml[31,1410+4]..[31,1410+23])
                      Pstr_include                      module_expr (utils/clflags.ml[31,1410+12]..[31,1410+23])
                        Pmod_ident "Numbers.Int" (utils/clflags.ml[31,1410+12]..[31,1410+23])
                    structure_item (utils/clflags.ml[32,1434+4]..[32,1434+33])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (utils/clflags.ml[32,1434+8]..[32,1434+17])
                            Ppat_var "of_string" (utils/clflags.ml[32,1434+8]..[32,1434+17])
                          expression (utils/clflags.ml[32,1434+20]..[32,1434+33])
                            Pexp_ident "int_of_string" (utils/clflags.ml[32,1434+20]..[32,1434+33])
                      ]
                  ]
            structure_item (utils/clflags.ml[35,1475+2]..[38,1561+5])
              Pstr_module
              "Value" (utils/clflags.ml[35,1475+9]..[35,1475+14])
                module_expr (utils/clflags.ml[35,1475+17]..[38,1561+5])
                  Pmod_structure
                  [
                    structure_item (utils/clflags.ml[36,1499+4]..[36,1499+25])
                      Pstr_include                      module_expr (utils/clflags.ml[36,1499+12]..[36,1499+25])
                        Pmod_ident "Numbers.Float" (utils/clflags.ml[36,1499+12]..[36,1499+25])
                    structure_item (utils/clflags.ml[37,1525+4]..[37,1525+35])
                      Pstr_value Nonrec
                      [
                        <def>
                          pattern (utils/clflags.ml[37,1525+8]..[37,1525+17])
                            Ppat_var "of_string" (utils/clflags.ml[37,1525+8]..[37,1525+17])
                          expression (utils/clflags.ml[37,1525+20]..[37,1525+35])
                            Pexp_ident "float_of_string" (utils/clflags.ml[37,1525+20]..[37,1525+35])
                      ]
                  ]
          ]
  structure_item (utils/clflags.ml[41,1573+0]..[43,1714+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[41,1573+4]..[41,1573+12])
          Ppat_var "objfiles" (utils/clflags.ml[41,1573+4]..[41,1573+12])
        expression (utils/clflags.ml[41,1573+15]..[41,1573+37])
          Pexp_apply
          expression (utils/clflags.ml[41,1573+15]..[41,1573+18])
            Pexp_ident "ref" (utils/clflags.ml[41,1573+15]..[41,1573+18])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[41,1573+19]..[41,1573+37])
                Pexp_constraint
                expression (utils/clflags.ml[41,1573+20]..[41,1573+22])
                  Pexp_construct "[]" (utils/clflags.ml[41,1573+20]..[41,1573+22])
                  None
                core_type (utils/clflags.ml[41,1573+25]..[41,1573+36])
                  Ptyp_constr "list" (utils/clflags.ml[41,1573+32]..[41,1573+36])
                  [
                    core_type (utils/clflags.ml[41,1573+25]..[41,1573+31])
                      Ptyp_constr "string" (utils/clflags.ml[41,1573+25]..[41,1573+31])
                      []
                  ]
          ]
      <def>
        pattern (utils/clflags.ml[42,1639+4]..[42,1639+10])
          Ppat_var "ccobjs" (utils/clflags.ml[42,1639+4]..[42,1639+10])
        expression (utils/clflags.ml[42,1639+13]..[42,1639+35])
          Pexp_apply
          expression (utils/clflags.ml[42,1639+13]..[42,1639+16])
            Pexp_ident "ref" (utils/clflags.ml[42,1639+13]..[42,1639+16])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[42,1639+17]..[42,1639+35])
                Pexp_constraint
                expression (utils/clflags.ml[42,1639+18]..[42,1639+20])
                  Pexp_construct "[]" (utils/clflags.ml[42,1639+18]..[42,1639+20])
                  None
                core_type (utils/clflags.ml[42,1639+23]..[42,1639+34])
                  Ptyp_constr "list" (utils/clflags.ml[42,1639+30]..[42,1639+34])
                  [
                    core_type (utils/clflags.ml[42,1639+23]..[42,1639+29])
                      Ptyp_constr "string" (utils/clflags.ml[42,1639+23]..[42,1639+29])
                      []
                  ]
          ]
      <def>
        pattern (utils/clflags.ml[43,1714+4]..[43,1714+10])
          Ppat_var "dllibs" (utils/clflags.ml[43,1714+4]..[43,1714+10])
        expression (utils/clflags.ml[43,1714+13]..[43,1714+35])
          Pexp_apply
          expression (utils/clflags.ml[43,1714+13]..[43,1714+16])
            Pexp_ident "ref" (utils/clflags.ml[43,1714+13]..[43,1714+16])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[43,1714+17]..[43,1714+35])
                Pexp_constraint
                expression (utils/clflags.ml[43,1714+18]..[43,1714+20])
                  Pexp_construct "[]" (utils/clflags.ml[43,1714+18]..[43,1714+20])
                  None
                core_type (utils/clflags.ml[43,1714+23]..[43,1714+34])
                  Ptyp_constr "list" (utils/clflags.ml[43,1714+30]..[43,1714+34])
                  [
                    core_type (utils/clflags.ml[43,1714+23]..[43,1714+29])
                      Ptyp_constr "string" (utils/clflags.ml[43,1714+23]..[43,1714+29])
                      []
                  ]
          ]
    ]
  structure_item (utils/clflags.ml[45,1782+0]..[67,3034+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[45,1782+4]..[45,1782+16])
          Ppat_var "compile_only" (utils/clflags.ml[45,1782+4]..[45,1782+16])
        expression (utils/clflags.ml[45,1782+19]..[45,1782+28])
          Pexp_apply
          expression (utils/clflags.ml[45,1782+19]..[45,1782+22])
            Pexp_ident "ref" (utils/clflags.ml[45,1782+19]..[45,1782+22])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[45,1782+23]..[45,1782+28])
                Pexp_construct "false" (utils/clflags.ml[45,1782+23]..[45,1782+28])
                None
          ]
      <def>
        pattern (utils/clflags.ml[46,1831+4]..[46,1831+15])
          Ppat_var "output_name" (utils/clflags.ml[46,1831+4]..[46,1831+15])
        expression (utils/clflags.ml[46,1831+18]..[46,1831+44])
          Pexp_apply
          expression (utils/clflags.ml[46,1831+18]..[46,1831+21])
            Pexp_ident "ref" (utils/clflags.ml[46,1831+18]..[46,1831+21])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[46,1831+22]..[46,1831+44])
                Pexp_constraint
                expression (utils/clflags.ml[46,1831+23]..[46,1831+27])
                  Pexp_construct "None" (utils/clflags.ml[46,1831+23]..[46,1831+27])
                  None
                core_type (utils/clflags.ml[46,1831+30]..[46,1831+43])
                  Ptyp_constr "option" (utils/clflags.ml[46,1831+37]..[46,1831+43])
                  [
                    core_type (utils/clflags.ml[46,1831+30]..[46,1831+36])
                      Ptyp_constr "string" (utils/clflags.ml[46,1831+30]..[46,1831+36])
                      []
                  ]
          ]
      <def>
        pattern (utils/clflags.ml[47,1885+4]..[47,1885+16])
          Ppat_var "include_dirs" (utils/clflags.ml[47,1885+4]..[47,1885+16])
        expression (utils/clflags.ml[47,1885+19]..[47,1885+41])
          Pexp_apply
          expression (utils/clflags.ml[47,1885+19]..[47,1885+22])
            Pexp_ident "ref" (utils/clflags.ml[47,1885+19]..[47,1885+22])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[47,1885+23]..[47,1885+41])
                Pexp_constraint
                expression (utils/clflags.ml[47,1885+24]..[47,1885+26])
                  Pexp_construct "[]" (utils/clflags.ml[47,1885+24]..[47,1885+26])
                  None
                core_type (utils/clflags.ml[47,1885+29]..[47,1885+40])
                  Ptyp_constr "list" (utils/clflags.ml[47,1885+36]..[47,1885+40])
                  [
                    core_type (utils/clflags.ml[47,1885+29]..[47,1885+35])
                      Ptyp_constr "string" (utils/clflags.ml[47,1885+29]..[47,1885+35])
                      []
                  ]
          ]
      <def>
        pattern (utils/clflags.ml[48,1935+4]..[48,1935+18])
          Ppat_var "no_std_include" (utils/clflags.ml[48,1935+4]..[48,1935+18])
        expression (utils/clflags.ml[48,1935+21]..[48,1935+30])
          Pexp_apply
          expression (utils/clflags.ml[48,1935+21]..[48,1935+24])
            Pexp_ident "ref" (utils/clflags.ml[48,1935+21]..[48,1935+24])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[48,1935+25]..[48,1935+30])
                Pexp_construct "false" (utils/clflags.ml[48,1935+25]..[48,1935+30])
                None
          ]
      <def>
        pattern (utils/clflags.ml[49,1991+4]..[49,1991+15])
          Ppat_var "print_types" (utils/clflags.ml[49,1991+4]..[49,1991+15])
        expression (utils/clflags.ml[49,1991+18]..[49,1991+27])
          Pexp_apply
          expression (utils/clflags.ml[49,1991+18]..[49,1991+21])
            Pexp_ident "ref" (utils/clflags.ml[49,1991+18]..[49,1991+21])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[49,1991+22]..[49,1991+27])
                Pexp_construct "false" (utils/clflags.ml[49,1991+22]..[49,1991+27])
                None
          ]
      <def>
        pattern (utils/clflags.ml[50,2040+4]..[50,2040+16])
          Ppat_var "make_archive" (utils/clflags.ml[50,2040+4]..[50,2040+16])
        expression (utils/clflags.ml[50,2040+19]..[50,2040+28])
          Pexp_apply
          expression (utils/clflags.ml[50,2040+19]..[50,2040+22])
            Pexp_ident "ref" (utils/clflags.ml[50,2040+19]..[50,2040+22])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[50,2040+23]..[50,2040+28])
                Pexp_construct "false" (utils/clflags.ml[50,2040+23]..[50,2040+28])
                None
          ]
      <def>
        pattern (utils/clflags.ml[51,2089+4]..[51,2089+9])
          Ppat_var "debug" (utils/clflags.ml[51,2089+4]..[51,2089+9])
        expression (utils/clflags.ml[51,2089+12]..[51,2089+21])
          Pexp_apply
          expression (utils/clflags.ml[51,2089+12]..[51,2089+15])
            Pexp_ident "ref" (utils/clflags.ml[51,2089+12]..[51,2089+15])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[51,2089+16]..[51,2089+21])
                Pexp_construct "false" (utils/clflags.ml[51,2089+16]..[51,2089+21])
                None
          ]
      <def>
        pattern (utils/clflags.ml[52,2138+4]..[52,2138+14])
          Ppat_var "debug_full" (utils/clflags.ml[52,2138+4]..[52,2138+14])
        expression (utils/clflags.ml[52,2138+17]..[52,2138+26])
          Pexp_apply
          expression (utils/clflags.ml[52,2138+17]..[52,2138+20])
            Pexp_ident "ref" (utils/clflags.ml[52,2138+17]..[52,2138+20])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[52,2138+21]..[52,2138+26])
                Pexp_construct "false" (utils/clflags.ml[52,2138+21]..[52,2138+26])
                None
          ]
      <def>
        pattern (utils/clflags.ml[53,2207+4]..[53,2207+10])
          Ppat_var "unsafe" (utils/clflags.ml[53,2207+4]..[53,2207+10])
        expression (utils/clflags.ml[53,2207+13]..[53,2207+22])
          Pexp_apply
          expression (utils/clflags.ml[53,2207+13]..[53,2207+16])
            Pexp_ident "ref" (utils/clflags.ml[53,2207+13]..[53,2207+16])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[53,2207+17]..[53,2207+22])
                Pexp_construct "false" (utils/clflags.ml[53,2207+17]..[53,2207+22])
                None
          ]
      <def>
        pattern (utils/clflags.ml[54,2261+4]..[54,2261+15])
          Ppat_var "use_linscan" (utils/clflags.ml[54,2261+4]..[54,2261+15])
        expression (utils/clflags.ml[54,2261+18]..[54,2261+27])
          Pexp_apply
          expression (utils/clflags.ml[54,2261+18]..[54,2261+21])
            Pexp_ident "ref" (utils/clflags.ml[54,2261+18]..[54,2261+21])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[54,2261+22]..[54,2261+27])
                Pexp_construct "false" (utils/clflags.ml[54,2261+22]..[54,2261+27])
                None
          ]
      <def>
        pattern (utils/clflags.ml[55,2316+4]..[55,2316+19])
          Ppat_var "link_everything" (utils/clflags.ml[55,2316+4]..[55,2316+19])
        expression (utils/clflags.ml[55,2316+22]..[55,2316+31])
          Pexp_apply
          expression (utils/clflags.ml[55,2316+22]..[55,2316+25])
            Pexp_ident "ref" (utils/clflags.ml[55,2316+22]..[55,2316+25])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[55,2316+26]..[55,2316+31])
                Pexp_construct "false" (utils/clflags.ml[55,2316+26]..[55,2316+31])
                None
          ]
      <def>
        pattern (utils/clflags.ml[56,2371+4]..[56,2371+18])
          Ppat_var "custom_runtime" (utils/clflags.ml[56,2371+4]..[56,2371+18])
        expression (utils/clflags.ml[56,2371+21]..[56,2371+30])
          Pexp_apply
          expression (utils/clflags.ml[56,2371+21]..[56,2371+24])
            Pexp_ident "ref" (utils/clflags.ml[56,2371+21]..[56,2371+24])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[56,2371+25]..[56,2371+30])
                Pexp_construct "false" (utils/clflags.ml[56,2371+25]..[56,2371+30])
                None
          ]
      <def>
        pattern (utils/clflags.ml[57,2425+4]..[57,2425+18])
          Ppat_var "no_check_prims" (utils/clflags.ml[57,2425+4]..[57,2425+18])
        expression (utils/clflags.ml[57,2425+21]..[57,2425+30])
          Pexp_apply
          expression (utils/clflags.ml[57,2425+21]..[57,2425+24])
            Pexp_ident "ref" (utils/clflags.ml[57,2425+21]..[57,2425+24])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[57,2425+25]..[57,2425+30])
                Pexp_construct "false" (utils/clflags.ml[57,2425+25]..[57,2425+30])
                None
          ]
      <def>
        pattern (utils/clflags.ml[58,2487+4]..[58,2487+26])
          Ppat_var "bytecode_compatible_32" (utils/clflags.ml[58,2487+4]..[58,2487+26])
        expression (utils/clflags.ml[58,2487+29]..[58,2487+38])
          Pexp_apply
          expression (utils/clflags.ml[58,2487+29]..[58,2487+32])
            Pexp_ident "ref" (utils/clflags.ml[58,2487+29]..[58,2487+32])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[58,2487+33]..[58,2487+38])
                Pexp_construct "false" (utils/clflags.ml[58,2487+33]..[58,2487+38])
                None
          ]
      <def>
        pattern (utils/clflags.ml[59,2544+4]..[59,2544+19])
          Ppat_var "output_c_object" (utils/clflags.ml[59,2544+4]..[59,2544+19])
        expression (utils/clflags.ml[59,2544+22]..[59,2544+31])
          Pexp_apply
          expression (utils/clflags.ml[59,2544+22]..[59,2544+25])
            Pexp_ident "ref" (utils/clflags.ml[59,2544+22]..[59,2544+25])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[59,2544+26]..[59,2544+31])
                Pexp_construct "false" (utils/clflags.ml[59,2544+26]..[59,2544+31])
                None
          ]
      <def>
        pattern (utils/clflags.ml[60,2602+4]..[60,2602+26])
          Ppat_var "output_complete_object" (utils/clflags.ml[60,2602+4]..[60,2602+26])
        expression (utils/clflags.ml[60,2602+29]..[60,2602+38])
          Pexp_apply
          expression (utils/clflags.ml[60,2602+29]..[60,2602+32])
            Pexp_ident "ref" (utils/clflags.ml[60,2602+29]..[60,2602+32])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[60,2602+33]..[60,2602+38])
                Pexp_construct "false" (utils/clflags.ml[60,2602+33]..[60,2602+38])
                None
          ]
      <def>
        pattern (utils/clflags.ml[61,2669+4]..[61,2669+30])
          Ppat_var "output_complete_executable" (utils/clflags.ml[61,2669+4]..[61,2669+30])
        expression (utils/clflags.ml[61,2669+33]..[61,2669+42])
          Pexp_apply
          expression (utils/clflags.ml[61,2669+33]..[61,2669+36])
            Pexp_ident "ref" (utils/clflags.ml[61,2669+33]..[61,2669+36])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[61,2669+37]..[61,2669+42])
                Pexp_construct "false" (utils/clflags.ml[61,2669+37]..[61,2669+42])
                None
          ]
      <def>
        pattern (utils/clflags.ml[62,2740+4]..[62,2740+14])
          Ppat_var "all_ccopts" (utils/clflags.ml[62,2740+4]..[62,2740+14])
        expression (utils/clflags.ml[62,2740+17]..[62,2740+39])
          Pexp_apply
          expression (utils/clflags.ml[62,2740+17]..[62,2740+20])
            Pexp_ident "ref" (utils/clflags.ml[62,2740+17]..[62,2740+20])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[62,2740+21]..[62,2740+39])
                Pexp_constraint
                expression (utils/clflags.ml[62,2740+22]..[62,2740+24])
                  Pexp_construct "[]" (utils/clflags.ml[62,2740+22]..[62,2740+24])
                  None
                core_type (utils/clflags.ml[62,2740+27]..[62,2740+38])
                  Ptyp_constr "list" (utils/clflags.ml[62,2740+34]..[62,2740+38])
                  [
                    core_type (utils/clflags.ml[62,2740+27]..[62,2740+33])
                      Ptyp_constr "string" (utils/clflags.ml[62,2740+27]..[62,2740+33])
                      []
                  ]
          ]
      <def>
        pattern (utils/clflags.ml[63,2797+4]..[63,2797+11])
          Ppat_var "classic" (utils/clflags.ml[63,2797+4]..[63,2797+11])
        expression (utils/clflags.ml[63,2797+14]..[63,2797+23])
          Pexp_apply
          expression (utils/clflags.ml[63,2797+14]..[63,2797+17])
            Pexp_ident "ref" (utils/clflags.ml[63,2797+14]..[63,2797+17])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[63,2797+18]..[63,2797+23])
                Pexp_construct "false" (utils/clflags.ml[63,2797+18]..[63,2797+23])
                None
          ]
      <def>
        pattern (utils/clflags.ml[64,2853+4]..[64,2853+16])
          Ppat_var "nopervasives" (utils/clflags.ml[64,2853+4]..[64,2853+16])
        expression (utils/clflags.ml[64,2853+19]..[64,2853+28])
          Pexp_apply
          expression (utils/clflags.ml[64,2853+19]..[64,2853+22])
            Pexp_ident "ref" (utils/clflags.ml[64,2853+19]..[64,2853+22])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[64,2853+23]..[64,2853+28])
                Pexp_construct "false" (utils/clflags.ml[64,2853+23]..[64,2853+28])
                None
          ]
      <def>
        pattern (utils/clflags.ml[65,2913+4]..[65,2913+22])
          Ppat_var "match_context_rows" (utils/clflags.ml[65,2913+4]..[65,2913+22])
        expression (utils/clflags.ml[65,2913+25]..[65,2913+31])
          Pexp_apply
          expression (utils/clflags.ml[65,2913+25]..[65,2913+28])
            Pexp_ident "ref" (utils/clflags.ml[65,2913+25]..[65,2913+28])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[65,2913+29]..[65,2913+31])
                Pexp_constant PConst_int (32,None)
          ]
      <def>
        pattern (utils/clflags.ml[66,2979+4]..[66,2979+16])
          Ppat_var "preprocessor" (utils/clflags.ml[66,2979+4]..[66,2979+16])
        expression (utils/clflags.ml[66,2979+19]..[66,2979+44])
          Pexp_apply
          expression (utils/clflags.ml[66,2979+19]..[66,2979+22])
            Pexp_ident "ref" (utils/clflags.ml[66,2979+19]..[66,2979+22])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[66,2979+22]..[66,2979+44])
                Pexp_constraint
                expression (utils/clflags.ml[66,2979+23]..[66,2979+27])
                  Pexp_construct "None" (utils/clflags.ml[66,2979+23]..[66,2979+27])
                  None
                core_type (utils/clflags.ml[66,2979+30]..[66,2979+43])
                  Ptyp_constr "option" (utils/clflags.ml[66,2979+37]..[66,2979+43])
                  [
                    core_type (utils/clflags.ml[66,2979+30]..[66,2979+36])
                      Ptyp_constr "string" (utils/clflags.ml[66,2979+30]..[66,2979+36])
                      []
                  ]
          ]
      <def>
        pattern (utils/clflags.ml[67,3034+4]..[67,3034+11])
          Ppat_var "all_ppx" (utils/clflags.ml[67,3034+4]..[67,3034+11])
        expression (utils/clflags.ml[67,3034+14]..[67,3034+36])
          Pexp_apply
          expression (utils/clflags.ml[67,3034+14]..[67,3034+17])
            Pexp_ident "ref" (utils/clflags.ml[67,3034+14]..[67,3034+17])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[67,3034+18]..[67,3034+36])
                Pexp_constraint
                expression (utils/clflags.ml[67,3034+19]..[67,3034+21])
                  Pexp_construct "[]" (utils/clflags.ml[67,3034+19]..[67,3034+21])
                  None
                core_type (utils/clflags.ml[67,3034+24]..[67,3034+35])
                  Ptyp_constr "list" (utils/clflags.ml[67,3034+31]..[67,3034+35])
                  [
                    core_type (utils/clflags.ml[67,3034+24]..[67,3034+30])
                      Ptyp_constr "string" (utils/clflags.ml[67,3034+24]..[67,3034+30])
                      []
                  ]
          ]
    ]
  structure_item (utils/clflags.ml[68,3089+0]..[68,3089+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[68,3089+4]..[68,3089+11])
          Ppat_var "absname" (utils/clflags.ml[68,3089+4]..[68,3089+11])
        expression (utils/clflags.ml[68,3089+14]..[68,3089+23])
          Pexp_apply
          expression (utils/clflags.ml[68,3089+14]..[68,3089+17])
            Pexp_ident "ref" (utils/clflags.ml[68,3089+14]..[68,3089+17])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[68,3089+18]..[68,3089+23])
                Pexp_construct "false" (utils/clflags.ml[68,3089+18]..[68,3089+23])
                None
          ]
    ]
  structure_item (utils/clflags.ml[69,3144+0]..[69,3144+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[69,3144+4]..[69,3144+15])
          Ppat_var "annotations" (utils/clflags.ml[69,3144+4]..[69,3144+15])
        expression (utils/clflags.ml[69,3144+18]..[69,3144+27])
          Pexp_apply
          expression (utils/clflags.ml[69,3144+18]..[69,3144+21])
            Pexp_ident "ref" (utils/clflags.ml[69,3144+18]..[69,3144+21])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[69,3144+22]..[69,3144+27])
                Pexp_construct "false" (utils/clflags.ml[69,3144+22]..[69,3144+27])
                None
          ]
    ]
  structure_item (utils/clflags.ml[70,3197+0]..[97,4754+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[70,3197+4]..[70,3197+22])
          Ppat_var "binary_annotations" (utils/clflags.ml[70,3197+4]..[70,3197+22])
        expression (utils/clflags.ml[70,3197+25]..[70,3197+34])
          Pexp_apply
          expression (utils/clflags.ml[70,3197+25]..[70,3197+28])
            Pexp_ident "ref" (utils/clflags.ml[70,3197+25]..[70,3197+28])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[70,3197+29]..[70,3197+34])
                Pexp_construct "false" (utils/clflags.ml[70,3197+29]..[70,3197+34])
                None
          ]
      <def>
        pattern (utils/clflags.ml[71,3250+4]..[71,3250+15])
          Ppat_var "use_threads" (utils/clflags.ml[71,3250+4]..[71,3250+15])
        expression (utils/clflags.ml[71,3250+18]..[71,3250+27])
          Pexp_apply
          expression (utils/clflags.ml[71,3250+18]..[71,3250+21])
            Pexp_ident "ref" (utils/clflags.ml[71,3250+18]..[71,3250+21])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[71,3250+22]..[71,3250+27])
                Pexp_construct "false" (utils/clflags.ml[71,3250+22]..[71,3250+27])
                None
          ]
      <def>
        pattern (utils/clflags.ml[72,3304+4]..[72,3304+12])
          Ppat_var "noassert" (utils/clflags.ml[72,3304+4]..[72,3304+12])
        expression (utils/clflags.ml[72,3304+15]..[72,3304+24])
          Pexp_apply
          expression (utils/clflags.ml[72,3304+15]..[72,3304+18])
            Pexp_ident "ref" (utils/clflags.ml[72,3304+15]..[72,3304+18])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[72,3304+19]..[72,3304+24])
                Pexp_construct "false" (utils/clflags.ml[72,3304+19]..[72,3304+24])
                None
          ]
      <def>
        pattern (utils/clflags.ml[73,3360+4]..[73,3360+11])
          Ppat_var "verbose" (utils/clflags.ml[73,3360+4]..[73,3360+11])
        expression (utils/clflags.ml[73,3360+14]..[73,3360+23])
          Pexp_apply
          expression (utils/clflags.ml[73,3360+14]..[73,3360+17])
            Pexp_ident "ref" (utils/clflags.ml[73,3360+14]..[73,3360+17])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[73,3360+18]..[73,3360+23])
                Pexp_construct "false" (utils/clflags.ml[73,3360+18]..[73,3360+23])
                None
          ]
      <def>
        pattern (utils/clflags.ml[74,3415+4]..[74,3415+13])
          Ppat_var "noversion" (utils/clflags.ml[74,3415+4]..[74,3415+13])
        expression (utils/clflags.ml[74,3415+16]..[74,3415+25])
          Pexp_apply
          expression (utils/clflags.ml[74,3415+16]..[74,3415+19])
            Pexp_ident "ref" (utils/clflags.ml[74,3415+16]..[74,3415+19])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[74,3415+20]..[74,3415+25])
                Pexp_construct "false" (utils/clflags.ml[74,3415+20]..[74,3415+25])
                None
          ]
      <def>
        pattern (utils/clflags.ml[75,3473+4]..[75,3473+12])
          Ppat_var "noprompt" (utils/clflags.ml[75,3473+4]..[75,3473+12])
        expression (utils/clflags.ml[75,3473+15]..[75,3473+24])
          Pexp_apply
          expression (utils/clflags.ml[75,3473+15]..[75,3473+18])
            Pexp_ident "ref" (utils/clflags.ml[75,3473+15]..[75,3473+18])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[75,3473+19]..[75,3473+24])
                Pexp_construct "false" (utils/clflags.ml[75,3473+19]..[75,3473+24])
                None
          ]
      <def>
        pattern (utils/clflags.ml[76,3529+4]..[76,3529+16])
          Ppat_var "nopromptcont" (utils/clflags.ml[76,3529+4]..[76,3529+16])
        expression (utils/clflags.ml[76,3529+19]..[76,3529+28])
          Pexp_apply
          expression (utils/clflags.ml[76,3529+19]..[76,3529+22])
            Pexp_ident "ref" (utils/clflags.ml[76,3529+19]..[76,3529+22])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[76,3529+23]..[76,3529+28])
                Pexp_construct "false" (utils/clflags.ml[76,3529+23]..[76,3529+28])
                None
          ]
      <def>
        pattern (utils/clflags.ml[77,3589+4]..[77,3589+13])
          Ppat_var "init_file" (utils/clflags.ml[77,3589+4]..[77,3589+13])
        expression (utils/clflags.ml[77,3589+16]..[77,3589+42])
          Pexp_apply
          expression (utils/clflags.ml[77,3589+16]..[77,3589+19])
            Pexp_ident "ref" (utils/clflags.ml[77,3589+16]..[77,3589+19])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[77,3589+20]..[77,3589+42])
                Pexp_constraint
                expression (utils/clflags.ml[77,3589+21]..[77,3589+25])
                  Pexp_construct "None" (utils/clflags.ml[77,3589+21]..[77,3589+25])
                  None
                core_type (utils/clflags.ml[77,3589+28]..[77,3589+41])
                  Ptyp_constr "option" (utils/clflags.ml[77,3589+35]..[77,3589+41])
                  [
                    core_type (utils/clflags.ml[77,3589+28]..[77,3589+34])
                      Ptyp_constr "string" (utils/clflags.ml[77,3589+28]..[77,3589+34])
                      []
                  ]
          ]
      <def>
        pattern (utils/clflags.ml[78,3646+4]..[78,3646+10])
          Ppat_var "noinit" (utils/clflags.ml[78,3646+4]..[78,3646+10])
        expression (utils/clflags.ml[78,3646+13]..[78,3646+22])
          Pexp_apply
          expression (utils/clflags.ml[78,3646+13]..[78,3646+16])
            Pexp_ident "ref" (utils/clflags.ml[78,3646+13]..[78,3646+16])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[78,3646+17]..[78,3646+22])
                Pexp_construct "false" (utils/clflags.ml[78,3646+17]..[78,3646+22])
                None
          ]
      <def>
        pattern (utils/clflags.ml[79,3700+4]..[79,3700+16])
          Ppat_var "open_modules" (utils/clflags.ml[79,3700+4]..[79,3700+16])
        expression (utils/clflags.ml[79,3700+19]..[79,3700+25])
          Pexp_apply
          expression (utils/clflags.ml[79,3700+19]..[79,3700+22])
            Pexp_ident "ref" (utils/clflags.ml[79,3700+19]..[79,3700+22])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[79,3700+23]..[79,3700+25])
                Pexp_construct "[]" (utils/clflags.ml[79,3700+23]..[79,3700+25])
                None
          ]
      <def>
        pattern (utils/clflags.ml[80,3752+4]..[80,3752+13])
          Ppat_var "use_prims" (utils/clflags.ml[80,3752+4]..[80,3752+13])
        expression (utils/clflags.ml[80,3752+16]..[80,3752+22])
          Pexp_apply
          expression (utils/clflags.ml[80,3752+16]..[80,3752+19])
            Pexp_ident "ref" (utils/clflags.ml[80,3752+16]..[80,3752+19])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[80,3752+20]..[80,3752+22])
                Pexp_constant PConst_string("",(utils/clflags.ml[80,3752+21]..[80,3752+21]),None)
          ]
      <def>
        pattern (utils/clflags.ml[81,3813+4]..[81,3813+15])
          Ppat_var "use_runtime" (utils/clflags.ml[81,3813+4]..[81,3813+15])
        expression (utils/clflags.ml[81,3813+18]..[81,3813+24])
          Pexp_apply
          expression (utils/clflags.ml[81,3813+18]..[81,3813+21])
            Pexp_ident "ref" (utils/clflags.ml[81,3813+18]..[81,3813+21])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[81,3813+22]..[81,3813+24])
                Pexp_constant PConst_string("",(utils/clflags.ml[81,3813+23]..[81,3813+23]),None)
          ]
      <def>
        pattern (utils/clflags.ml[82,3876+4]..[82,3876+10])
          Ppat_var "plugin" (utils/clflags.ml[82,3876+4]..[82,3876+10])
        expression (utils/clflags.ml[82,3876+13]..[82,3876+22])
          Pexp_apply
          expression (utils/clflags.ml[82,3876+13]..[82,3876+16])
            Pexp_ident "ref" (utils/clflags.ml[82,3876+13]..[82,3876+16])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[82,3876+17]..[82,3876+22])
                Pexp_construct "false" (utils/clflags.ml[82,3876+17]..[82,3876+22])
                None
          ]
      <def>
        pattern (utils/clflags.ml[83,3934+4]..[83,3934+13])
          Ppat_var "principal" (utils/clflags.ml[83,3934+4]..[83,3934+13])
        expression (utils/clflags.ml[83,3934+16]..[83,3934+25])
          Pexp_apply
          expression (utils/clflags.ml[83,3934+16]..[83,3934+19])
            Pexp_ident "ref" (utils/clflags.ml[83,3934+16]..[83,3934+19])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[83,3934+20]..[83,3934+25])
                Pexp_construct "false" (utils/clflags.ml[83,3934+20]..[83,3934+25])
                None
          ]
      <def>
        pattern (utils/clflags.ml[84,3991+4]..[84,3991+14])
          Ppat_var "real_paths" (utils/clflags.ml[84,3991+4]..[84,3991+14])
        expression (utils/clflags.ml[84,3991+17]..[84,3991+25])
          Pexp_apply
          expression (utils/clflags.ml[84,3991+17]..[84,3991+20])
            Pexp_ident "ref" (utils/clflags.ml[84,3991+17]..[84,3991+20])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[84,3991+21]..[84,3991+25])
                Pexp_construct "true" (utils/clflags.ml[84,3991+21]..[84,3991+25])
                None
          ]
      <def>
        pattern (utils/clflags.ml[85,4050+4]..[85,4050+19])
          Ppat_var "recursive_types" (utils/clflags.ml[85,4050+4]..[85,4050+19])
        expression (utils/clflags.ml[85,4050+22]..[85,4050+31])
          Pexp_apply
          expression (utils/clflags.ml[85,4050+22]..[85,4050+25])
            Pexp_ident "ref" (utils/clflags.ml[85,4050+22]..[85,4050+25])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[85,4050+26]..[85,4050+31])
                Pexp_construct "false" (utils/clflags.ml[85,4050+26]..[85,4050+31])
                None
          ]
      <def>
        pattern (utils/clflags.ml[86,4106+4]..[86,4106+19])
          Ppat_var "strict_sequence" (utils/clflags.ml[86,4106+4]..[86,4106+19])
        expression (utils/clflags.ml[86,4106+22]..[86,4106+31])
          Pexp_apply
          expression (utils/clflags.ml[86,4106+22]..[86,4106+25])
            Pexp_ident "ref" (utils/clflags.ml[86,4106+22]..[86,4106+25])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[86,4106+26]..[86,4106+31])
                Pexp_construct "false" (utils/clflags.ml[86,4106+26]..[86,4106+31])
                None
          ]
      <def>
        pattern (utils/clflags.ml[87,4169+4]..[87,4169+18])
          Ppat_var "strict_formats" (utils/clflags.ml[87,4169+4]..[87,4169+18])
        expression (utils/clflags.ml[87,4169+21]..[87,4169+30])
          Pexp_apply
          expression (utils/clflags.ml[87,4169+21]..[87,4169+24])
            Pexp_ident "ref" (utils/clflags.ml[87,4169+21]..[87,4169+24])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[87,4169+25]..[87,4169+30])
                Pexp_construct "false" (utils/clflags.ml[87,4169+25]..[87,4169+30])
                None
          ]
      <def>
        pattern (utils/clflags.ml[88,4231+4]..[88,4231+24])
          Ppat_var "applicative_functors" (utils/clflags.ml[88,4231+4]..[88,4231+24])
        expression (utils/clflags.ml[88,4231+27]..[88,4231+35])
          Pexp_apply
          expression (utils/clflags.ml[88,4231+27]..[88,4231+30])
            Pexp_ident "ref" (utils/clflags.ml[88,4231+27]..[88,4231+30])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[88,4231+31]..[88,4231+35])
                Pexp_construct "true" (utils/clflags.ml[88,4231+31]..[88,4231+35])
                None
          ]
      <def>
        pattern (utils/clflags.ml[89,4291+4]..[89,4291+16])
          Ppat_var "make_runtime" (utils/clflags.ml[89,4291+4]..[89,4291+16])
        expression (utils/clflags.ml[89,4291+19]..[89,4291+28])
          Pexp_apply
          expression (utils/clflags.ml[89,4291+19]..[89,4291+22])
            Pexp_ident "ref" (utils/clflags.ml[89,4291+19]..[89,4291+22])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[89,4291+23]..[89,4291+28])
                Pexp_construct "false" (utils/clflags.ml[89,4291+23]..[89,4291+28])
                None
          ]
      <def>
        pattern (utils/clflags.ml[90,4351+4]..[90,4351+14])
          Ppat_var "c_compiler" (utils/clflags.ml[90,4351+4]..[90,4351+14])
        expression (utils/clflags.ml[90,4351+17]..[90,4351+42])
          Pexp_apply
          expression (utils/clflags.ml[90,4351+17]..[90,4351+20])
            Pexp_ident "ref" (utils/clflags.ml[90,4351+17]..[90,4351+20])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[90,4351+21]..[90,4351+42])
                Pexp_constraint
                expression (utils/clflags.ml[90,4351+22]..[90,4351+26])
                  Pexp_construct "None" (utils/clflags.ml[90,4351+22]..[90,4351+26])
                  None
                core_type (utils/clflags.ml[90,4351+28]..[90,4351+41])
                  Ptyp_constr "option" (utils/clflags.ml[90,4351+35]..[90,4351+41])
                  [
                    core_type (utils/clflags.ml[90,4351+28]..[90,4351+34])
                      Ptyp_constr "string" (utils/clflags.ml[90,4351+28]..[90,4351+34])
                      []
                  ]
          ]
      <def>
        pattern (utils/clflags.ml[91,4404+4]..[91,4404+16])
          Ppat_var "no_auto_link" (utils/clflags.ml[91,4404+4]..[91,4404+16])
        expression (utils/clflags.ml[91,4404+19]..[91,4404+28])
          Pexp_apply
          expression (utils/clflags.ml[91,4404+19]..[91,4404+22])
            Pexp_ident "ref" (utils/clflags.ml[91,4404+19]..[91,4404+22])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[91,4404+23]..[91,4404+28])
                Pexp_construct "false" (utils/clflags.ml[91,4404+23]..[91,4404+28])
                None
          ]
      <def>
        pattern (utils/clflags.ml[92,4462+4]..[92,4462+12])
          Ppat_var "dllpaths" (utils/clflags.ml[92,4462+4]..[92,4462+12])
        expression (utils/clflags.ml[92,4462+15]..[92,4462+37])
          Pexp_apply
          expression (utils/clflags.ml[92,4462+15]..[92,4462+18])
            Pexp_ident "ref" (utils/clflags.ml[92,4462+15]..[92,4462+18])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[92,4462+19]..[92,4462+37])
                Pexp_constraint
                expression (utils/clflags.ml[92,4462+20]..[92,4462+22])
                  Pexp_construct "[]" (utils/clflags.ml[92,4462+20]..[92,4462+22])
                  None
                core_type (utils/clflags.ml[92,4462+25]..[92,4462+36])
                  Ptyp_constr "list" (utils/clflags.ml[92,4462+32]..[92,4462+36])
                  [
                    core_type (utils/clflags.ml[92,4462+25]..[92,4462+31])
                      Ptyp_constr "string" (utils/clflags.ml[92,4462+25]..[92,4462+31])
                      []
                  ]
          ]
      <def>
        pattern (utils/clflags.ml[93,4517+4]..[93,4517+16])
          Ppat_var "make_package" (utils/clflags.ml[93,4517+4]..[93,4517+16])
        expression (utils/clflags.ml[93,4517+19]..[93,4517+28])
          Pexp_apply
          expression (utils/clflags.ml[93,4517+19]..[93,4517+22])
            Pexp_ident "ref" (utils/clflags.ml[93,4517+19]..[93,4517+22])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[93,4517+23]..[93,4517+28])
                Pexp_construct "false" (utils/clflags.ml[93,4517+23]..[93,4517+28])
                None
          ]
      <def>
        pattern (utils/clflags.ml[94,4569+4]..[94,4569+15])
          Ppat_var "for_package" (utils/clflags.ml[94,4569+4]..[94,4569+15])
        expression (utils/clflags.ml[94,4569+18]..[94,4569+43])
          Pexp_apply
          expression (utils/clflags.ml[94,4569+18]..[94,4569+21])
            Pexp_ident "ref" (utils/clflags.ml[94,4569+18]..[94,4569+21])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[94,4569+22]..[94,4569+43])
                Pexp_constraint
                expression (utils/clflags.ml[94,4569+23]..[94,4569+27])
                  Pexp_construct "None" (utils/clflags.ml[94,4569+23]..[94,4569+27])
                  None
                core_type (utils/clflags.ml[94,4569+29]..[94,4569+42])
                  Ptyp_constr "option" (utils/clflags.ml[94,4569+36]..[94,4569+42])
                  [
                    core_type (utils/clflags.ml[94,4569+29]..[94,4569+35])
                      Ptyp_constr "string" (utils/clflags.ml[94,4569+29]..[94,4569+35])
                      []
                  ]
          ]
      <def>
        pattern (utils/clflags.ml[95,4629+4]..[95,4629+14])
          Ppat_var "error_size" (utils/clflags.ml[95,4629+4]..[95,4629+14])
        expression (utils/clflags.ml[95,4629+17]..[95,4629+24])
          Pexp_apply
          expression (utils/clflags.ml[95,4629+17]..[95,4629+20])
            Pexp_ident "ref" (utils/clflags.ml[95,4629+17]..[95,4629+20])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[95,4629+21]..[95,4629+24])
                Pexp_constant PConst_int (500,None)
          ]
      <def>
        pattern (utils/clflags.ml[96,4687+4]..[96,4687+20])
          Ppat_var "float_const_prop" (utils/clflags.ml[96,4687+4]..[96,4687+20])
        expression (utils/clflags.ml[96,4687+23]..[96,4687+31])
          Pexp_apply
          expression (utils/clflags.ml[96,4687+23]..[96,4687+26])
            Pexp_ident "ref" (utils/clflags.ml[96,4687+23]..[96,4687+26])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[96,4687+27]..[96,4687+31])
                Pexp_construct "true" (utils/clflags.ml[96,4687+27]..[96,4687+31])
                None
          ]
      <def>
        pattern (utils/clflags.ml[97,4754+4]..[97,4754+23])
          Ppat_var "transparent_modules" (utils/clflags.ml[97,4754+4]..[97,4754+23])
        expression (utils/clflags.ml[97,4754+26]..[97,4754+35])
          Pexp_apply
          expression (utils/clflags.ml[97,4754+26]..[97,4754+29])
            Pexp_ident "ref" (utils/clflags.ml[97,4754+26]..[97,4754+29])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[97,4754+30]..[97,4754+35])
                Pexp_construct "false" (utils/clflags.ml[97,4754+30]..[97,4754+35])
                None
          ]
    ]
  structure_item (utils/clflags.ml[98,4811+0]..[98,4811+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[98,4811+4]..[98,4811+14])
          Ppat_var "unique_ids" (utils/clflags.ml[98,4811+4]..[98,4811+14])
        expression (utils/clflags.ml[98,4811+17]..[98,4811+25])
          Pexp_apply
          expression (utils/clflags.ml[98,4811+17]..[98,4811+20])
            Pexp_ident "ref" (utils/clflags.ml[98,4811+17]..[98,4811+20])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[98,4811+21]..[98,4811+25])
                Pexp_construct "true" (utils/clflags.ml[98,4811+21]..[98,4811+25])
                None
          ]
    ]
  structure_item (utils/clflags.ml[99,4874+0]..[99,4874+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[99,4874+4]..[99,4874+13])
          Ppat_var "locations" (utils/clflags.ml[99,4874+4]..[99,4874+13])
        expression (utils/clflags.ml[99,4874+16]..[99,4874+24])
          Pexp_apply
          expression (utils/clflags.ml[99,4874+16]..[99,4874+19])
            Pexp_ident "ref" (utils/clflags.ml[99,4874+16]..[99,4874+19])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[99,4874+20]..[99,4874+24])
                Pexp_construct "true" (utils/clflags.ml[99,4874+20]..[99,4874+24])
                None
          ]
    ]
  structure_item (utils/clflags.ml[100,4937+0]..[100,4937+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[100,4937+4]..[100,4937+15])
          Ppat_var "dump_source" (utils/clflags.ml[100,4937+4]..[100,4937+15])
        expression (utils/clflags.ml[100,4937+18]..[100,4937+27])
          Pexp_apply
          expression (utils/clflags.ml[100,4937+18]..[100,4937+21])
            Pexp_ident "ref" (utils/clflags.ml[100,4937+18]..[100,4937+21])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[100,4937+22]..[100,4937+27])
                Pexp_construct "false" (utils/clflags.ml[100,4937+22]..[100,4937+27])
                None
          ]
    ]
  structure_item (utils/clflags.ml[101,4992+0]..[112,5643+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[101,4992+4]..[101,4992+18])
          Ppat_var "dump_parsetree" (utils/clflags.ml[101,4992+4]..[101,4992+18])
        expression (utils/clflags.ml[101,4992+21]..[101,4992+30])
          Pexp_apply
          expression (utils/clflags.ml[101,4992+21]..[101,4992+24])
            Pexp_ident "ref" (utils/clflags.ml[101,4992+21]..[101,4992+24])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[101,4992+25]..[101,4992+30])
                Pexp_construct "false" (utils/clflags.ml[101,4992+25]..[101,4992+30])
                None
          ]
      <def>
        pattern (utils/clflags.ml[102,5050+4]..[102,5050+18])
          Ppat_var "dump_typedtree" (utils/clflags.ml[102,5050+4]..[102,5050+18])
        expression (utils/clflags.ml[102,5050+21]..[102,5050+30])
          Pexp_apply
          expression (utils/clflags.ml[102,5050+21]..[102,5050+24])
            Pexp_ident "ref" (utils/clflags.ml[102,5050+21]..[102,5050+24])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[102,5050+25]..[102,5050+30])
                Pexp_construct "false" (utils/clflags.ml[102,5050+25]..[102,5050+30])
                None
          ]
      <def>
        pattern (utils/clflags.ml[103,5108+4]..[103,5108+18])
          Ppat_var "dump_rawlambda" (utils/clflags.ml[103,5108+4]..[103,5108+18])
        expression (utils/clflags.ml[103,5108+21]..[103,5108+30])
          Pexp_apply
          expression (utils/clflags.ml[103,5108+21]..[103,5108+24])
            Pexp_ident "ref" (utils/clflags.ml[103,5108+21]..[103,5108+24])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[103,5108+25]..[103,5108+30])
                Pexp_construct "false" (utils/clflags.ml[103,5108+25]..[103,5108+30])
                None
          ]
      <def>
        pattern (utils/clflags.ml[104,5166+4]..[104,5166+15])
          Ppat_var "dump_lambda" (utils/clflags.ml[104,5166+4]..[104,5166+15])
        expression (utils/clflags.ml[104,5166+18]..[104,5166+27])
          Pexp_apply
          expression (utils/clflags.ml[104,5166+18]..[104,5166+21])
            Pexp_ident "ref" (utils/clflags.ml[104,5166+18]..[104,5166+21])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[104,5166+22]..[104,5166+27])
                Pexp_construct "false" (utils/clflags.ml[104,5166+22]..[104,5166+27])
                None
          ]
      <def>
        pattern (utils/clflags.ml[105,5221+4]..[105,5221+19])
          Ppat_var "dump_rawclambda" (utils/clflags.ml[105,5221+4]..[105,5221+19])
        expression (utils/clflags.ml[105,5221+22]..[105,5221+31])
          Pexp_apply
          expression (utils/clflags.ml[105,5221+22]..[105,5221+25])
            Pexp_ident "ref" (utils/clflags.ml[105,5221+22]..[105,5221+25])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[105,5221+26]..[105,5221+31])
                Pexp_construct "false" (utils/clflags.ml[105,5221+26]..[105,5221+31])
                None
          ]
      <def>
        pattern (utils/clflags.ml[106,5280+4]..[106,5280+16])
          Ppat_var "dump_clambda" (utils/clflags.ml[106,5280+4]..[106,5280+16])
        expression (utils/clflags.ml[106,5280+19]..[106,5280+28])
          Pexp_apply
          expression (utils/clflags.ml[106,5280+19]..[106,5280+22])
            Pexp_ident "ref" (utils/clflags.ml[106,5280+19]..[106,5280+22])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[106,5280+23]..[106,5280+28])
                Pexp_construct "false" (utils/clflags.ml[106,5280+23]..[106,5280+28])
                None
          ]
      <def>
        pattern (utils/clflags.ml[107,5336+4]..[107,5336+19])
          Ppat_var "dump_rawflambda" (utils/clflags.ml[107,5336+4]..[107,5336+19])
        expression (utils/clflags.ml[107,5336+22]..[107,5336+31])
          Pexp_apply
          expression (utils/clflags.ml[107,5336+22]..[107,5336+25])
            Pexp_ident "ref" (utils/clflags.ml[107,5336+22]..[107,5336+25])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[107,5336+26]..[107,5336+31])
                Pexp_construct "false" (utils/clflags.ml[107,5336+26]..[107,5336+31])
                None
          ]
      <def>
        pattern (utils/clflags.ml[108,5398+4]..[108,5398+16])
          Ppat_var "dump_flambda" (utils/clflags.ml[108,5398+4]..[108,5398+16])
        expression (utils/clflags.ml[108,5398+19]..[108,5398+28])
          Pexp_apply
          expression (utils/clflags.ml[108,5398+19]..[108,5398+22])
            Pexp_ident "ref" (utils/clflags.ml[108,5398+19]..[108,5398+22])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[108,5398+23]..[108,5398+28])
                Pexp_construct "false" (utils/clflags.ml[108,5398+23]..[108,5398+28])
                None
          ]
      <def>
        pattern (utils/clflags.ml[109,5454+4]..[109,5454+20])
          Ppat_var "dump_flambda_let" (utils/clflags.ml[109,5454+4]..[109,5454+20])
        expression (utils/clflags.ml[109,5454+23]..[109,5454+46])
          Pexp_apply
          expression (utils/clflags.ml[109,5454+23]..[109,5454+26])
            Pexp_ident "ref" (utils/clflags.ml[109,5454+23]..[109,5454+26])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[109,5454+27]..[109,5454+46])
                Pexp_constraint
                expression (utils/clflags.ml[109,5454+28]..[109,5454+32])
                  Pexp_construct "None" (utils/clflags.ml[109,5454+28]..[109,5454+32])
                  None
                core_type (utils/clflags.ml[109,5454+35]..[109,5454+45])
                  Ptyp_constr "option" (utils/clflags.ml[109,5454+39]..[109,5454+45])
                  [
                    core_type (utils/clflags.ml[109,5454+35]..[109,5454+38])
                      Ptyp_constr "int" (utils/clflags.ml[109,5454+35]..[109,5454+38])
                      []
                  ]
          ]
      <def>
        pattern (utils/clflags.ml[110,5525+4]..[110,5525+24])
          Ppat_var "dump_flambda_verbose" (utils/clflags.ml[110,5525+4]..[110,5525+24])
        expression (utils/clflags.ml[110,5525+27]..[110,5525+36])
          Pexp_apply
          expression (utils/clflags.ml[110,5525+27]..[110,5525+30])
            Pexp_ident "ref" (utils/clflags.ml[110,5525+27]..[110,5525+30])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[110,5525+31]..[110,5525+36])
                Pexp_construct "false" (utils/clflags.ml[110,5525+31]..[110,5525+36])
                None
          ]
      <def>
        pattern (utils/clflags.ml[111,5589+4]..[111,5589+14])
          Ppat_var "dump_instr" (utils/clflags.ml[111,5589+4]..[111,5589+14])
        expression (utils/clflags.ml[111,5589+17]..[111,5589+26])
          Pexp_apply
          expression (utils/clflags.ml[111,5589+17]..[111,5589+20])
            Pexp_ident "ref" (utils/clflags.ml[111,5589+17]..[111,5589+20])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[111,5589+21]..[111,5589+26])
                Pexp_construct "false" (utils/clflags.ml[111,5589+21]..[111,5589+26])
                None
          ]
      <def>
        pattern (utils/clflags.ml[112,5643+4]..[112,5643+23])
          Ppat_var "keep_camlprimc_file" (utils/clflags.ml[112,5643+4]..[112,5643+23])
        expression (utils/clflags.ml[112,5643+26]..[112,5643+35])
          Pexp_apply
          expression (utils/clflags.ml[112,5643+26]..[112,5643+29])
            Pexp_ident "ref" (utils/clflags.ml[112,5643+26]..[112,5643+29])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[112,5643+30]..[112,5643+35])
                Pexp_construct "false" (utils/clflags.ml[112,5643+30]..[112,5643+35])
                None
          ]
    ]
  structure_item (utils/clflags.ml[114,5702+0]..[114,5702+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[114,5702+4]..[114,5702+17])
          Ppat_var "keep_asm_file" (utils/clflags.ml[114,5702+4]..[114,5702+17])
        expression (utils/clflags.ml[114,5702+20]..[114,5702+29])
          Pexp_apply
          expression (utils/clflags.ml[114,5702+20]..[114,5702+23])
            Pexp_ident "ref" (utils/clflags.ml[114,5702+20]..[114,5702+23])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[114,5702+24]..[114,5702+29])
                Pexp_construct "false" (utils/clflags.ml[114,5702+24]..[114,5702+29])
                None
          ]
    ]
  structure_item (utils/clflags.ml[115,5751+0]..[118,5861+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[115,5751+4]..[115,5751+22])
          Ppat_var "optimize_for_speed" (utils/clflags.ml[115,5751+4]..[115,5751+22])
        expression (utils/clflags.ml[115,5751+25]..[115,5751+33])
          Pexp_apply
          expression (utils/clflags.ml[115,5751+25]..[115,5751+28])
            Pexp_ident "ref" (utils/clflags.ml[115,5751+25]..[115,5751+28])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[115,5751+29]..[115,5751+33])
                Pexp_construct "true" (utils/clflags.ml[115,5751+29]..[115,5751+33])
                None
          ]
      <def>
        pattern (utils/clflags.ml[116,5806+4]..[116,5806+10])
          Ppat_var "opaque" (utils/clflags.ml[116,5806+4]..[116,5806+10])
        expression (utils/clflags.ml[116,5806+13]..[116,5806+22])
          Pexp_apply
          expression (utils/clflags.ml[116,5806+13]..[116,5806+16])
            Pexp_ident "ref" (utils/clflags.ml[116,5806+13]..[116,5806+16])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[116,5806+17]..[116,5806+22])
                Pexp_construct "false" (utils/clflags.ml[116,5806+17]..[116,5806+22])
                None
          ]
      <def>
        pattern (utils/clflags.ml[118,5861+4]..[118,5861+12])
          Ppat_var "dump_cmm" (utils/clflags.ml[118,5861+4]..[118,5861+12])
        expression (utils/clflags.ml[118,5861+15]..[118,5861+24])
          Pexp_apply
          expression (utils/clflags.ml[118,5861+15]..[118,5861+18])
            Pexp_ident "ref" (utils/clflags.ml[118,5861+15]..[118,5861+18])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[118,5861+19]..[118,5861+24])
                Pexp_construct "false" (utils/clflags.ml[118,5861+19]..[118,5861+24])
                None
          ]
    ]
  structure_item (utils/clflags.ml[119,5913+0]..[119,5913+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[119,5913+4]..[119,5913+18])
          Ppat_var "dump_selection" (utils/clflags.ml[119,5913+4]..[119,5913+18])
        expression (utils/clflags.ml[119,5913+21]..[119,5913+30])
          Pexp_apply
          expression (utils/clflags.ml[119,5913+21]..[119,5913+24])
            Pexp_ident "ref" (utils/clflags.ml[119,5913+21]..[119,5913+24])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[119,5913+25]..[119,5913+30])
                Pexp_construct "false" (utils/clflags.ml[119,5913+25]..[119,5913+30])
                None
          ]
    ]
  structure_item (utils/clflags.ml[120,5965+0]..[120,5965+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[120,5965+4]..[120,5965+12])
          Ppat_var "dump_cse" (utils/clflags.ml[120,5965+4]..[120,5965+12])
        expression (utils/clflags.ml[120,5965+15]..[120,5965+24])
          Pexp_apply
          expression (utils/clflags.ml[120,5965+15]..[120,5965+18])
            Pexp_ident "ref" (utils/clflags.ml[120,5965+15]..[120,5965+18])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[120,5965+19]..[120,5965+24])
                Pexp_construct "false" (utils/clflags.ml[120,5965+19]..[120,5965+24])
                None
          ]
    ]
  structure_item (utils/clflags.ml[121,6017+0]..[121,6017+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[121,6017+4]..[121,6017+13])
          Ppat_var "dump_live" (utils/clflags.ml[121,6017+4]..[121,6017+13])
        expression (utils/clflags.ml[121,6017+16]..[121,6017+25])
          Pexp_apply
          expression (utils/clflags.ml[121,6017+16]..[121,6017+19])
            Pexp_ident "ref" (utils/clflags.ml[121,6017+16]..[121,6017+19])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[121,6017+20]..[121,6017+25])
                Pexp_construct "false" (utils/clflags.ml[121,6017+20]..[121,6017+25])
                None
          ]
    ]
  structure_item (utils/clflags.ml[122,6070+0]..[122,6070+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[122,6070+4]..[122,6070+14])
          Ppat_var "dump_spill" (utils/clflags.ml[122,6070+4]..[122,6070+14])
        expression (utils/clflags.ml[122,6070+17]..[122,6070+26])
          Pexp_apply
          expression (utils/clflags.ml[122,6070+17]..[122,6070+20])
            Pexp_ident "ref" (utils/clflags.ml[122,6070+17]..[122,6070+20])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[122,6070+21]..[122,6070+26])
                Pexp_construct "false" (utils/clflags.ml[122,6070+21]..[122,6070+26])
                None
          ]
    ]
  structure_item (utils/clflags.ml[123,6124+0]..[123,6124+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[123,6124+4]..[123,6124+14])
          Ppat_var "dump_split" (utils/clflags.ml[123,6124+4]..[123,6124+14])
        expression (utils/clflags.ml[123,6124+17]..[123,6124+26])
          Pexp_apply
          expression (utils/clflags.ml[123,6124+17]..[123,6124+20])
            Pexp_ident "ref" (utils/clflags.ml[123,6124+17]..[123,6124+20])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[123,6124+21]..[123,6124+26])
                Pexp_construct "false" (utils/clflags.ml[123,6124+21]..[123,6124+26])
                None
          ]
    ]
  structure_item (utils/clflags.ml[124,6178+0]..[124,6178+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[124,6178+4]..[124,6178+15])
          Ppat_var "dump_interf" (utils/clflags.ml[124,6178+4]..[124,6178+15])
        expression (utils/clflags.ml[124,6178+18]..[124,6178+27])
          Pexp_apply
          expression (utils/clflags.ml[124,6178+18]..[124,6178+21])
            Pexp_ident "ref" (utils/clflags.ml[124,6178+18]..[124,6178+21])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[124,6178+22]..[124,6178+27])
                Pexp_construct "false" (utils/clflags.ml[124,6178+22]..[124,6178+27])
                None
          ]
    ]
  structure_item (utils/clflags.ml[125,6233+0]..[125,6233+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[125,6233+4]..[125,6233+15])
          Ppat_var "dump_prefer" (utils/clflags.ml[125,6233+4]..[125,6233+15])
        expression (utils/clflags.ml[125,6233+18]..[125,6233+27])
          Pexp_apply
          expression (utils/clflags.ml[125,6233+18]..[125,6233+21])
            Pexp_ident "ref" (utils/clflags.ml[125,6233+18]..[125,6233+21])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[125,6233+22]..[125,6233+27])
                Pexp_construct "false" (utils/clflags.ml[125,6233+22]..[125,6233+27])
                None
          ]
    ]
  structure_item (utils/clflags.ml[126,6288+0]..[126,6288+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[126,6288+4]..[126,6288+17])
          Ppat_var "dump_regalloc" (utils/clflags.ml[126,6288+4]..[126,6288+17])
        expression (utils/clflags.ml[126,6288+20]..[126,6288+29])
          Pexp_apply
          expression (utils/clflags.ml[126,6288+20]..[126,6288+23])
            Pexp_ident "ref" (utils/clflags.ml[126,6288+20]..[126,6288+23])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[126,6288+24]..[126,6288+29])
                Pexp_construct "false" (utils/clflags.ml[126,6288+24]..[126,6288+29])
                None
          ]
    ]
  structure_item (utils/clflags.ml[127,6342+0]..[127,6342+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[127,6342+4]..[127,6342+15])
          Ppat_var "dump_reload" (utils/clflags.ml[127,6342+4]..[127,6342+15])
        expression (utils/clflags.ml[127,6342+18]..[127,6342+27])
          Pexp_apply
          expression (utils/clflags.ml[127,6342+18]..[127,6342+21])
            Pexp_ident "ref" (utils/clflags.ml[127,6342+18]..[127,6342+21])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[127,6342+22]..[127,6342+27])
                Pexp_construct "false" (utils/clflags.ml[127,6342+22]..[127,6342+27])
                None
          ]
    ]
  structure_item (utils/clflags.ml[128,6397+0]..[128,6397+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[128,6397+4]..[128,6397+19])
          Ppat_var "dump_scheduling" (utils/clflags.ml[128,6397+4]..[128,6397+19])
        expression (utils/clflags.ml[128,6397+22]..[128,6397+31])
          Pexp_apply
          expression (utils/clflags.ml[128,6397+22]..[128,6397+25])
            Pexp_ident "ref" (utils/clflags.ml[128,6397+22]..[128,6397+25])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[128,6397+26]..[128,6397+31])
                Pexp_construct "false" (utils/clflags.ml[128,6397+26]..[128,6397+31])
                None
          ]
    ]
  structure_item (utils/clflags.ml[129,6456+0]..[129,6456+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[129,6456+4]..[129,6456+15])
          Ppat_var "dump_linear" (utils/clflags.ml[129,6456+4]..[129,6456+15])
        expression (utils/clflags.ml[129,6456+18]..[129,6456+27])
          Pexp_apply
          expression (utils/clflags.ml[129,6456+18]..[129,6456+21])
            Pexp_ident "ref" (utils/clflags.ml[129,6456+18]..[129,6456+21])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[129,6456+22]..[129,6456+27])
                Pexp_construct "false" (utils/clflags.ml[129,6456+22]..[129,6456+27])
                None
          ]
    ]
  structure_item (utils/clflags.ml[130,6511+0]..[130,6511+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[130,6511+4]..[130,6511+17])
          Ppat_var "dump_interval" (utils/clflags.ml[130,6511+4]..[130,6511+17])
        expression (utils/clflags.ml[130,6511+20]..[130,6511+29])
          Pexp_apply
          expression (utils/clflags.ml[130,6511+20]..[130,6511+23])
            Pexp_ident "ref" (utils/clflags.ml[130,6511+20]..[130,6511+23])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[130,6511+24]..[130,6511+29])
                Pexp_construct "false" (utils/clflags.ml[130,6511+24]..[130,6511+29])
                None
          ]
    ]
  structure_item (utils/clflags.ml[131,6568+0]..[131,6568+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[131,6568+4]..[131,6568+21])
          Ppat_var "keep_startup_file" (utils/clflags.ml[131,6568+4]..[131,6568+21])
        expression (utils/clflags.ml[131,6568+24]..[131,6568+33])
          Pexp_apply
          expression (utils/clflags.ml[131,6568+24]..[131,6568+27])
            Pexp_ident "ref" (utils/clflags.ml[131,6568+24]..[131,6568+27])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[131,6568+28]..[131,6568+33])
                Pexp_construct "false" (utils/clflags.ml[131,6568+28]..[131,6568+33])
                None
          ]
    ]
  structure_item (utils/clflags.ml[132,6624+0]..[132,6624+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[132,6624+4]..[132,6624+16])
          Ppat_var "dump_combine" (utils/clflags.ml[132,6624+4]..[132,6624+16])
        expression (utils/clflags.ml[132,6624+19]..[132,6624+28])
          Pexp_apply
          expression (utils/clflags.ml[132,6624+19]..[132,6624+22])
            Pexp_ident "ref" (utils/clflags.ml[132,6624+19]..[132,6624+22])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[132,6624+23]..[132,6624+28])
                Pexp_construct "false" (utils/clflags.ml[132,6624+23]..[132,6624+28])
                None
          ]
    ]
  structure_item (utils/clflags.ml[133,6680+0]..[133,6680+54])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[133,6680+4]..[133,6680+45]) ghost
          Ppat_constraint
          pattern (utils/clflags.ml[133,6680+4]..[133,6680+19])
            Ppat_var "profile_columns" (utils/clflags.ml[133,6680+4]..[133,6680+19])
          core_type (utils/clflags.ml[133,6680+22]..[133,6680+45]) ghost
            Ptyp_poly
            core_type (utils/clflags.ml[133,6680+22]..[133,6680+45])
              Ptyp_constr "ref" (utils/clflags.ml[133,6680+42]..[133,6680+45])
              [
                core_type (utils/clflags.ml[133,6680+22]..[133,6680+41])
                  Ptyp_constr "list" (utils/clflags.ml[133,6680+37]..[133,6680+41])
                  [
                    core_type (utils/clflags.ml[133,6680+22]..[133,6680+36])
                      Ptyp_constr "Profile.column" (utils/clflags.ml[133,6680+22]..[133,6680+36])
                      []
                  ]
              ]
        expression (utils/clflags.ml[133,6680+4]..[133,6680+54])
          Pexp_constraint
          expression (utils/clflags.ml[133,6680+48]..[133,6680+54])
            Pexp_apply
            expression (utils/clflags.ml[133,6680+48]..[133,6680+51])
              Pexp_ident "ref" (utils/clflags.ml[133,6680+48]..[133,6680+51])
            [
              <arg>
              Nolabel
                expression (utils/clflags.ml[133,6680+52]..[133,6680+54])
                  Pexp_construct "[]" (utils/clflags.ml[133,6680+52]..[133,6680+54])
                  None
            ]
          core_type (utils/clflags.ml[133,6680+22]..[133,6680+45])
            Ptyp_constr "ref" (utils/clflags.ml[133,6680+42]..[133,6680+45])
            [
              core_type (utils/clflags.ml[133,6680+22]..[133,6680+41])
                Ptyp_constr "list" (utils/clflags.ml[133,6680+37]..[133,6680+41])
                [
                  core_type (utils/clflags.ml[133,6680+22]..[133,6680+36])
                    Ptyp_constr "Profile.column" (utils/clflags.ml[133,6680+22]..[133,6680+36])
                    []
                ]
            ]
    ]
  structure_item (utils/clflags.ml[135,6762+0]..[135,6762+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[135,6762+4]..[135,6762+15])
          Ppat_var "native_code" (utils/clflags.ml[135,6762+4]..[135,6762+15])
        expression (utils/clflags.ml[135,6762+18]..[135,6762+27])
          Pexp_apply
          expression (utils/clflags.ml[135,6762+18]..[135,6762+21])
            Pexp_ident "ref" (utils/clflags.ml[135,6762+18]..[135,6762+21])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[135,6762+22]..[135,6762+27])
                Pexp_construct "false" (utils/clflags.ml[135,6762+22]..[135,6762+27])
                None
          ]
    ]
  structure_item (utils/clflags.ml[137,6836+0]..[137,6836+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[137,6836+4]..[137,6836+15])
          Ppat_var "force_slash" (utils/clflags.ml[137,6836+4]..[137,6836+15])
        expression (utils/clflags.ml[137,6836+18]..[137,6836+27])
          Pexp_apply
          expression (utils/clflags.ml[137,6836+18]..[137,6836+21])
            Pexp_ident "ref" (utils/clflags.ml[137,6836+18]..[137,6836+21])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[137,6836+22]..[137,6836+27])
                Pexp_construct "false" (utils/clflags.ml[137,6836+22]..[137,6836+27])
                None
          ]
    ]
  structure_item (utils/clflags.ml[138,6895+0]..[138,6895+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[138,6895+4]..[138,6895+18])
          Ppat_var "clambda_checks" (utils/clflags.ml[138,6895+4]..[138,6895+18])
        expression (utils/clflags.ml[138,6895+21]..[138,6895+30])
          Pexp_apply
          expression (utils/clflags.ml[138,6895+21]..[138,6895+24])
            Pexp_ident "ref" (utils/clflags.ml[138,6895+21]..[138,6895+24])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[138,6895+25]..[138,6895+30])
                Pexp_construct "false" (utils/clflags.ml[138,6895+25]..[138,6895+30])
                None
          ]
    ]
  structure_item (utils/clflags.ml[139,6957+0]..[140,6978+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[139,6957+4]..[139,6957+18])
          Ppat_var "cmm_invariants" (utils/clflags.ml[139,6957+4]..[139,6957+18])
        expression (utils/clflags.ml[140,6978+2]..[140,6978+32])
          Pexp_apply
          expression (utils/clflags.ml[140,6978+2]..[140,6978+5])
            Pexp_ident "ref" (utils/clflags.ml[140,6978+2]..[140,6978+5])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[140,6978+6]..[140,6978+32])
                Pexp_ident "Config.with_cmm_invariants" (utils/clflags.ml[140,6978+6]..[140,6978+32])
          ]
    ]
  structure_item (utils/clflags.ml[142,7042+0]..[143,7073+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[142,7042+4]..[142,7042+28])
          Ppat_var "flambda_invariant_checks" (utils/clflags.ml[142,7042+4]..[142,7042+28])
        expression (utils/clflags.ml[143,7073+2]..[143,7073+36])
          Pexp_apply
          expression (utils/clflags.ml[143,7073+2]..[143,7073+5])
            Pexp_ident "ref" (utils/clflags.ml[143,7073+2]..[143,7073+5])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[143,7073+6]..[143,7073+36])
                Pexp_ident "Config.with_flambda_invariants" (utils/clflags.ml[143,7073+6]..[143,7073+36])
          ]
    ]
  structure_item (utils/clflags.ml[145,7145+0]..[145,7145+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[145,7145+4]..[145,7145+20])
          Ppat_var "dont_write_files" (utils/clflags.ml[145,7145+4]..[145,7145+20])
        expression (utils/clflags.ml[145,7145+23]..[145,7145+32])
          Pexp_apply
          expression (utils/clflags.ml[145,7145+23]..[145,7145+26])
            Pexp_ident "ref" (utils/clflags.ml[145,7145+23]..[145,7145+26])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[145,7145+27]..[145,7145+32])
                Pexp_construct "false" (utils/clflags.ml[145,7145+27]..[145,7145+32])
                None
          ]
    ]
  structure_item (utils/clflags.ml[147,7219+0]..[147,7219+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[147,7219+4]..[147,7219+22])
          Ppat_var "insn_sched_default" (utils/clflags.ml[147,7219+4]..[147,7219+22])
        expression (utils/clflags.ml[147,7219+25]..[147,7219+29])
          Pexp_construct "true" (utils/clflags.ml[147,7219+25]..[147,7219+29])
          None
    ]
  structure_item (utils/clflags.ml[148,7249+0]..[148,7249+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[148,7249+4]..[148,7249+14])
          Ppat_var "insn_sched" (utils/clflags.ml[148,7249+4]..[148,7249+14])
        expression (utils/clflags.ml[148,7249+17]..[148,7249+39])
          Pexp_apply
          expression (utils/clflags.ml[148,7249+17]..[148,7249+20])
            Pexp_ident "ref" (utils/clflags.ml[148,7249+17]..[148,7249+20])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[148,7249+21]..[148,7249+39])
                Pexp_ident "insn_sched_default" (utils/clflags.ml[148,7249+21]..[148,7249+39])
          ]
    ]
  structure_item (utils/clflags.ml[150,7313+0]..[152,7372+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[150,7313+4]..[150,7313+20])
          Ppat_var "std_include_flag" (utils/clflags.ml[150,7313+4]..[150,7313+20])
        expression (utils/clflags.ml[150,7313+21]..[152,7372+58]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/clflags.ml[150,7313+21]..[150,7313+27])
            Ppat_var "prefix" (utils/clflags.ml[150,7313+21]..[150,7313+27])
          expression (utils/clflags.ml[151,7343+2]..[152,7372+58])
            Pexp_ifthenelse
            expression (utils/clflags.ml[151,7343+5]..[151,7343+20])
              Pexp_apply
              expression (utils/clflags.ml[151,7343+5]..[151,7343+6])
                Pexp_ident "!" (utils/clflags.ml[151,7343+5]..[151,7343+6])
              [
                <arg>
                Nolabel
                  expression (utils/clflags.ml[151,7343+6]..[151,7343+20])
                    Pexp_ident "no_std_include" (utils/clflags.ml[151,7343+6]..[151,7343+20])
              ]
            expression (utils/clflags.ml[151,7343+26]..[151,7343+28])
              Pexp_constant PConst_string("",(utils/clflags.ml[151,7343+27]..[151,7343+27]),None)
            Some
              expression (utils/clflags.ml[152,7372+7]..[152,7372+58])
                Pexp_apply
                expression (utils/clflags.ml[152,7372+15]..[152,7372+16])
                  Pexp_ident "^" (utils/clflags.ml[152,7372+15]..[152,7372+16])
                [
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[152,7372+8]..[152,7372+14])
                      Pexp_ident "prefix" (utils/clflags.ml[152,7372+8]..[152,7372+14])
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[152,7372+17]..[152,7372+57])
                      Pexp_apply
                      expression (utils/clflags.ml[152,7372+18]..[152,7372+32])
                        Pexp_ident "Filename.quote" (utils/clflags.ml[152,7372+18]..[152,7372+32])
                      [
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[152,7372+33]..[152,7372+56])
                            Pexp_ident "Config.standard_library" (utils/clflags.ml[152,7372+33]..[152,7372+56])
                      ]
                ]
    ]
  structure_item (utils/clflags.ml[155,7435+0]..[156,7460+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[155,7435+4]..[155,7435+19])
          Ppat_var "std_include_dir" (utils/clflags.ml[155,7435+4]..[155,7435+19])
        expression (utils/clflags.ml[155,7435+20]..[156,7460+59]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/clflags.ml[155,7435+20]..[155,7435+22])
            Ppat_construct "()" (utils/clflags.ml[155,7435+20]..[155,7435+22])
            None
          expression (utils/clflags.ml[156,7460+2]..[156,7460+59])
            Pexp_ifthenelse
            expression (utils/clflags.ml[156,7460+5]..[156,7460+20])
              Pexp_apply
              expression (utils/clflags.ml[156,7460+5]..[156,7460+6])
                Pexp_ident "!" (utils/clflags.ml[156,7460+5]..[156,7460+6])
              [
                <arg>
                Nolabel
                  expression (utils/clflags.ml[156,7460+6]..[156,7460+20])
                    Pexp_ident "no_std_include" (utils/clflags.ml[156,7460+6]..[156,7460+20])
              ]
            expression (utils/clflags.ml[156,7460+26]..[156,7460+28])
              Pexp_construct "[]" (utils/clflags.ml[156,7460+26]..[156,7460+28])
              None
            Some
              expression (utils/clflags.ml[156,7460+34]..[156,7460+59])
                Pexp_construct "::" (utils/clflags.ml[156,7460+35]..[156,7460+59]) ghost
                Some
                  expression (utils/clflags.ml[156,7460+35]..[156,7460+59]) ghost
                    Pexp_tuple
                    [
                      expression (utils/clflags.ml[156,7460+35]..[156,7460+58])
                        Pexp_ident "Config.standard_library" (utils/clflags.ml[156,7460+35]..[156,7460+58])
                      expression (utils/clflags.ml[156,7460+58]..[156,7460+59]) ghost
                        Pexp_construct "[]" (utils/clflags.ml[156,7460+58]..[156,7460+59]) ghost
                        None
                    ]
    ]
  structure_item (utils/clflags.ml[159,7524+0]..[159,7524+22])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[159,7524+4]..[159,7524+10])
          Ppat_var "shared" (utils/clflags.ml[159,7524+4]..[159,7524+10])
        expression (utils/clflags.ml[159,7524+13]..[159,7524+22])
          Pexp_apply
          expression (utils/clflags.ml[159,7524+13]..[159,7524+16])
            Pexp_ident "ref" (utils/clflags.ml[159,7524+13]..[159,7524+16])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[159,7524+17]..[159,7524+22])
                Pexp_construct "false" (utils/clflags.ml[159,7524+17]..[159,7524+22])
                None
          ]
    ]
  structure_item (utils/clflags.ml[160,7561+0]..[160,7561+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[160,7561+4]..[160,7561+10])
          Ppat_var "dlcode" (utils/clflags.ml[160,7561+4]..[160,7561+10])
        expression (utils/clflags.ml[160,7561+13]..[160,7561+21])
          Pexp_apply
          expression (utils/clflags.ml[160,7561+13]..[160,7561+16])
            Pexp_ident "ref" (utils/clflags.ml[160,7561+13]..[160,7561+16])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[160,7561+17]..[160,7561+21])
                Pexp_construct "true" (utils/clflags.ml[160,7561+17]..[160,7561+21])
                None
          ]
    ]
  structure_item (utils/clflags.ml[162,7605+0]..[164,7707+40])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[162,7605+4]..[162,7605+12])
          Ppat_var "pic_code" (utils/clflags.ml[162,7605+4]..[162,7605+12])
        expression (utils/clflags.ml[162,7605+15]..[164,7707+40])
          Pexp_apply
          expression (utils/clflags.ml[162,7605+15]..[162,7605+18])
            Pexp_ident "ref" (utils/clflags.ml[162,7605+15]..[162,7605+18])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[162,7605+19]..[164,7707+40])
                Pexp_match
                expression (utils/clflags.ml[162,7605+26]..[162,7605+45])
                  Pexp_ident "Config.architecture" (utils/clflags.ml[162,7605+26]..[162,7605+45])
                [
                  <case>
                    pattern (utils/clflags.ml[163,7668+23]..[163,7668+30])
                      Ppat_constant PConst_string("amd64",(utils/clflags.ml[163,7668+24]..[163,7668+29]),None)
                    expression (utils/clflags.ml[163,7668+34]..[163,7668+38])
                      Pexp_construct "true" (utils/clflags.ml[163,7668+34]..[163,7668+38])
                      None
                  <case>
                    pattern (utils/clflags.ml[164,7707+23]..[164,7707+24])
                      Ppat_any
                    expression (utils/clflags.ml[164,7707+34]..[164,7707+39])
                      Pexp_construct "false" (utils/clflags.ml[164,7707+34]..[164,7707+39])
                      None
                ]
          ]
    ]
  structure_item (utils/clflags.ml[166,7749+0]..[166,7749+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[166,7749+4]..[166,7749+19])
          Ppat_var "runtime_variant" (utils/clflags.ml[166,7749+4]..[166,7749+19])
        expression (utils/clflags.ml[166,7749+22]..[166,7749+28])
          Pexp_apply
          expression (utils/clflags.ml[166,7749+22]..[166,7749+25])
            Pexp_ident "ref" (utils/clflags.ml[166,7749+22]..[166,7749+25])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[166,7749+26]..[166,7749+28])
                Pexp_constant PConst_string("",(utils/clflags.ml[166,7749+27]..[166,7749+27]),None)
          ]
    ]
  structure_item (utils/clflags.ml[167,7808+0]..[167,7808+27])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[167,7808+4]..[167,7808+16])
          Ppat_var "with_runtime" (utils/clflags.ml[167,7808+4]..[167,7808+16])
        expression (utils/clflags.ml[167,7808+19]..[167,7808+27])
          Pexp_apply
          expression (utils/clflags.ml[167,7808+19]..[167,7808+22])
            Pexp_ident "ref" (utils/clflags.ml[167,7808+19]..[167,7808+22])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[167,7808+23]..[167,7808+27])
                Pexp_construct "true" (utils/clflags.ml[167,7808+23]..[167,7808+27])
                None
          ]
    ]
  structure_item (utils/clflags.ml[169,7867+0]..[169,7867+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[169,7867+4]..[169,7867+13])
          Ppat_var "keep_docs" (utils/clflags.ml[169,7867+4]..[169,7867+13])
        expression (utils/clflags.ml[169,7867+16]..[169,7867+25])
          Pexp_apply
          expression (utils/clflags.ml[169,7867+16]..[169,7867+19])
            Pexp_ident "ref" (utils/clflags.ml[169,7867+16]..[169,7867+19])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[169,7867+20]..[169,7867+25])
                Pexp_construct "false" (utils/clflags.ml[169,7867+20]..[169,7867+25])
                None
          ]
    ]
  structure_item (utils/clflags.ml[170,7923+0]..[170,7923+24])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[170,7923+4]..[170,7923+13])
          Ppat_var "keep_locs" (utils/clflags.ml[170,7923+4]..[170,7923+13])
        expression (utils/clflags.ml[170,7923+16]..[170,7923+24])
          Pexp_apply
          expression (utils/clflags.ml[170,7923+16]..[170,7923+19])
            Pexp_ident "ref" (utils/clflags.ml[170,7923+16]..[170,7923+19])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[170,7923+20]..[170,7923+24])
                Pexp_construct "true" (utils/clflags.ml[170,7923+20]..[170,7923+24])
                None
          ]
    ]
  structure_item (utils/clflags.ml[171,7979+0]..[173,8038+43])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[171,7979+4]..[171,7979+17])
          Ppat_var "unsafe_string" (utils/clflags.ml[171,7979+4]..[171,7979+17])
        expression (utils/clflags.ml[172,7999+2]..[173,8038+43])
          Pexp_ifthenelse
          expression (utils/clflags.ml[172,7999+5]..[172,7999+23])
            Pexp_ident "Config.safe_string" (utils/clflags.ml[172,7999+5]..[172,7999+23])
          expression (utils/clflags.ml[172,7999+29]..[172,7999+38])
            Pexp_apply
            expression (utils/clflags.ml[172,7999+29]..[172,7999+32])
              Pexp_ident "ref" (utils/clflags.ml[172,7999+29]..[172,7999+32])
            [
              <arg>
              Nolabel
                expression (utils/clflags.ml[172,7999+33]..[172,7999+38])
                  Pexp_construct "false" (utils/clflags.ml[172,7999+33]..[172,7999+38])
                  None
            ]
          Some
            expression (utils/clflags.ml[173,8038+7]..[173,8038+43])
              Pexp_apply
              expression (utils/clflags.ml[173,8038+7]..[173,8038+10])
                Pexp_ident "ref" (utils/clflags.ml[173,8038+7]..[173,8038+10])
              [
                <arg>
                Nolabel
                  expression (utils/clflags.ml[173,8038+11]..[173,8038+43])
                    Pexp_apply
                    expression (utils/clflags.ml[173,8038+12]..[173,8038+15])
                      Pexp_ident "not" (utils/clflags.ml[173,8038+12]..[173,8038+15])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[173,8038+16]..[173,8038+42])
                          Pexp_ident "Config.default_safe_string" (utils/clflags.ml[173,8038+16]..[173,8038+42])
                    ]
              ]
    ]
  structure_item (utils/clflags.ml[176,8154+0]..[176,8154+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[176,8154+4]..[176,8154+20])
          Ppat_var "classic_inlining" (utils/clflags.ml[176,8154+4]..[176,8154+20])
        expression (utils/clflags.ml[176,8154+23]..[176,8154+32])
          Pexp_apply
          expression (utils/clflags.ml[176,8154+23]..[176,8154+26])
            Pexp_ident "ref" (utils/clflags.ml[176,8154+23]..[176,8154+26])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[176,8154+27]..[176,8154+32])
                Pexp_construct "false" (utils/clflags.ml[176,8154+27]..[176,8154+32])
                None
          ]
    ]
  structure_item (utils/clflags.ml[177,8209+0]..[177,8209+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[177,8209+4]..[177,8209+19])
          Ppat_var "inlining_report" (utils/clflags.ml[177,8209+4]..[177,8209+19])
        expression (utils/clflags.ml[177,8209+22]..[177,8209+31])
          Pexp_apply
          expression (utils/clflags.ml[177,8209+22]..[177,8209+25])
            Pexp_ident "ref" (utils/clflags.ml[177,8209+22]..[177,8209+25])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[177,8209+26]..[177,8209+31])
                Pexp_construct "false" (utils/clflags.ml[177,8209+26]..[177,8209+31])
                None
          ]
    ]
  structure_item (utils/clflags.ml[179,8268+0]..[179,8268+46])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[179,8268+4]..[179,8268+18])
          Ppat_var "afl_instrument" (utils/clflags.ml[179,8268+4]..[179,8268+18])
        expression (utils/clflags.ml[179,8268+21]..[179,8268+46])
          Pexp_apply
          expression (utils/clflags.ml[179,8268+21]..[179,8268+24])
            Pexp_ident "ref" (utils/clflags.ml[179,8268+21]..[179,8268+24])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[179,8268+25]..[179,8268+46])
                Pexp_ident "Config.afl_instrument" (utils/clflags.ml[179,8268+25]..[179,8268+46])
          ]
    ]
  structure_item (utils/clflags.ml[180,8337+0]..[180,8337+28])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[180,8337+4]..[180,8337+18])
          Ppat_var "afl_inst_ratio" (utils/clflags.ml[180,8337+4]..[180,8337+18])
        expression (utils/clflags.ml[180,8337+21]..[180,8337+28])
          Pexp_apply
          expression (utils/clflags.ml[180,8337+21]..[180,8337+24])
            Pexp_ident "ref" (utils/clflags.ml[180,8337+21]..[180,8337+24])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[180,8337+25]..[180,8337+28])
                Pexp_constant PConst_int (100,None)
          ]
    ]
  structure_item (utils/clflags.ml[182,8399+0]..[182,8399+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[182,8399+4]..[182,8399+21])
          Ppat_var "function_sections" (utils/clflags.ml[182,8399+4]..[182,8399+21])
        expression (utils/clflags.ml[182,8399+24]..[182,8399+33])
          Pexp_apply
          expression (utils/clflags.ml[182,8399+24]..[182,8399+27])
            Pexp_ident "ref" (utils/clflags.ml[182,8399+24]..[182,8399+27])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[182,8399+28]..[182,8399+33])
                Pexp_construct "false" (utils/clflags.ml[182,8399+28]..[182,8399+33])
                None
          ]
    ]
  structure_item (utils/clflags.ml[184,8464+0]..[184,8464+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[184,8464+4]..[184,8464+19])
          Ppat_var "simplify_rounds" (utils/clflags.ml[184,8464+4]..[184,8464+19])
        expression (utils/clflags.ml[184,8464+22]..[184,8464+30])
          Pexp_apply
          expression (utils/clflags.ml[184,8464+22]..[184,8464+25])
            Pexp_ident "ref" (utils/clflags.ml[184,8464+22]..[184,8464+25])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[184,8464+26]..[184,8464+30])
                Pexp_construct "None" (utils/clflags.ml[184,8464+26]..[184,8464+30])
                None
          ]
    ]
  structure_item (utils/clflags.ml[185,8516+0]..[185,8516+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[185,8516+4]..[185,8516+27])
          Ppat_var "default_simplify_rounds" (utils/clflags.ml[185,8516+4]..[185,8516+27])
        expression (utils/clflags.ml[185,8516+30]..[185,8516+35])
          Pexp_apply
          expression (utils/clflags.ml[185,8516+30]..[185,8516+33])
            Pexp_ident "ref" (utils/clflags.ml[185,8516+30]..[185,8516+33])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[185,8516+34]..[185,8516+35])
                Pexp_constant PConst_int (1,None)
          ]
    ]
  structure_item (utils/clflags.ml[186,8573+0]..[189,8656+15])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[186,8573+4]..[186,8573+10])
          Ppat_var "rounds" (utils/clflags.ml[186,8573+4]..[186,8573+10])
        expression (utils/clflags.ml[186,8573+11]..[189,8656+15]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/clflags.ml[186,8573+11]..[186,8573+13])
            Ppat_construct "()" (utils/clflags.ml[186,8573+11]..[186,8573+13])
            None
          expression (utils/clflags.ml[187,8589+2]..[189,8656+15])
            Pexp_match
            expression (utils/clflags.ml[187,8589+8]..[187,8589+24])
              Pexp_apply
              expression (utils/clflags.ml[187,8589+8]..[187,8589+9])
                Pexp_ident "!" (utils/clflags.ml[187,8589+8]..[187,8589+9])
              [
                <arg>
                Nolabel
                  expression (utils/clflags.ml[187,8589+9]..[187,8589+24])
                    Pexp_ident "simplify_rounds" (utils/clflags.ml[187,8589+9]..[187,8589+24])
              ]
            [
              <case>
                pattern (utils/clflags.ml[188,8619+4]..[188,8619+8])
                  Ppat_construct "None" (utils/clflags.ml[188,8619+4]..[188,8619+8])
                  None
                expression (utils/clflags.ml[188,8619+12]..[188,8619+36])
                  Pexp_apply
                  expression (utils/clflags.ml[188,8619+12]..[188,8619+13])
                    Pexp_ident "!" (utils/clflags.ml[188,8619+12]..[188,8619+13])
                  [
                    <arg>
                    Nolabel
                      expression (utils/clflags.ml[188,8619+13]..[188,8619+36])
                        Pexp_ident "default_simplify_rounds" (utils/clflags.ml[188,8619+13]..[188,8619+36])
                  ]
              <case>
                pattern (utils/clflags.ml[189,8656+4]..[189,8656+10])
                  Ppat_construct "Some" (utils/clflags.ml[189,8656+4]..[189,8656+8])
                  Some
                    []
                    pattern (utils/clflags.ml[189,8656+9]..[189,8656+10])
                      Ppat_var "r" (utils/clflags.ml[189,8656+9]..[189,8656+10])
                expression (utils/clflags.ml[189,8656+14]..[189,8656+15])
                  Pexp_ident "r" (utils/clflags.ml[189,8656+14]..[189,8656+15])
            ]
    ]
  structure_item (utils/clflags.ml[191,8673+0]..[191,8673+72])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[191,8673+4]..[191,8673+28])
          Ppat_var "default_inline_threshold" (utils/clflags.ml[191,8673+4]..[191,8673+28])
        expression (utils/clflags.ml[191,8673+31]..[191,8673+72])
          Pexp_ifthenelse
          expression (utils/clflags.ml[191,8673+34]..[191,8673+48])
            Pexp_ident "Config.flambda" (utils/clflags.ml[191,8673+34]..[191,8673+48])
          expression (utils/clflags.ml[191,8673+54]..[191,8673+57])
            Pexp_constant PConst_float (10.,None)
          Some
            expression (utils/clflags.ml[191,8673+63]..[191,8673+72])
              Pexp_apply
              expression (utils/clflags.ml[191,8673+67]..[191,8673+69])
                Pexp_ident "/." (utils/clflags.ml[191,8673+67]..[191,8673+69])
              [
                <arg>
                Nolabel
                  expression (utils/clflags.ml[191,8673+63]..[191,8673+66])
                    Pexp_constant PConst_float (10.,None)
                <arg>
                Nolabel
                  expression (utils/clflags.ml[191,8673+70]..[191,8673+72])
                    Pexp_constant PConst_float (8.,None)
              ]
    ]
  structure_item (utils/clflags.ml[192,8746+0]..[192,8746+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[192,8746+4]..[192,8746+30])
          Ppat_var "inline_toplevel_multiplier" (utils/clflags.ml[192,8746+4]..[192,8746+30])
        expression (utils/clflags.ml[192,8746+33]..[192,8746+35])
          Pexp_constant PConst_int (16,None)
    ]
  structure_item (utils/clflags.ml[193,8782+0]..[194,8822+79])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[193,8782+4]..[193,8782+37])
          Ppat_var "default_inline_toplevel_threshold" (utils/clflags.ml[193,8782+4]..[193,8782+37])
        expression (utils/clflags.ml[194,8822+2]..[194,8822+79])
          Pexp_apply
          expression (utils/clflags.ml[194,8822+2]..[194,8822+14])
            Pexp_ident "int_of_float" (utils/clflags.ml[194,8822+2]..[194,8822+14])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[194,8822+15]..[194,8822+79])
                Pexp_apply
                expression (utils/clflags.ml[194,8822+51]..[194,8822+53])
                  Pexp_ident "*." (utils/clflags.ml[194,8822+51]..[194,8822+53])
                [
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[194,8822+16]..[194,8822+50])
                      Pexp_apply
                      expression (utils/clflags.ml[194,8822+17]..[194,8822+22])
                        Pexp_ident "float" (utils/clflags.ml[194,8822+17]..[194,8822+22])
                      [
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[194,8822+23]..[194,8822+49])
                            Pexp_ident "inline_toplevel_multiplier" (utils/clflags.ml[194,8822+23]..[194,8822+49])
                      ]
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[194,8822+54]..[194,8822+78])
                      Pexp_ident "default_inline_threshold" (utils/clflags.ml[194,8822+54]..[194,8822+78])
                ]
          ]
    ]
  structure_item (utils/clflags.ml[195,8902+0]..[195,8902+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[195,8902+4]..[195,8902+28])
          Ppat_var "default_inline_call_cost" (utils/clflags.ml[195,8902+4]..[195,8902+28])
        expression (utils/clflags.ml[195,8902+31]..[195,8902+32])
          Pexp_constant PConst_int (5,None)
    ]
  structure_item (utils/clflags.ml[196,8935+0]..[196,8935+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[196,8935+4]..[196,8935+29])
          Ppat_var "default_inline_alloc_cost" (utils/clflags.ml[196,8935+4]..[196,8935+29])
        expression (utils/clflags.ml[196,8935+32]..[196,8935+33])
          Pexp_constant PConst_int (7,None)
    ]
  structure_item (utils/clflags.ml[197,8969+0]..[197,8969+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[197,8969+4]..[197,8969+28])
          Ppat_var "default_inline_prim_cost" (utils/clflags.ml[197,8969+4]..[197,8969+28])
        expression (utils/clflags.ml[197,8969+31]..[197,8969+32])
          Pexp_constant PConst_int (3,None)
    ]
  structure_item (utils/clflags.ml[198,9002+0]..[198,9002+34])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[198,9002+4]..[198,9002+30])
          Ppat_var "default_inline_branch_cost" (utils/clflags.ml[198,9002+4]..[198,9002+30])
        expression (utils/clflags.ml[198,9002+33]..[198,9002+34])
          Pexp_constant PConst_int (5,None)
    ]
  structure_item (utils/clflags.ml[199,9037+0]..[199,9037+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[199,9037+4]..[199,9037+32])
          Ppat_var "default_inline_indirect_cost" (utils/clflags.ml[199,9037+4]..[199,9037+32])
        expression (utils/clflags.ml[199,9037+35]..[199,9037+36])
          Pexp_constant PConst_int (4,None)
    ]
  structure_item (utils/clflags.ml[200,9074+0]..[200,9074+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[200,9074+4]..[200,9074+32])
          Ppat_var "default_inline_branch_factor" (utils/clflags.ml[200,9074+4]..[200,9074+32])
        expression (utils/clflags.ml[200,9074+35]..[200,9074+38])
          Pexp_constant PConst_float (0.1,None)
    ]
  structure_item (utils/clflags.ml[201,9113+0]..[201,9113+41])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[201,9113+4]..[201,9113+34])
          Ppat_var "default_inline_lifting_benefit" (utils/clflags.ml[201,9113+4]..[201,9113+34])
        expression (utils/clflags.ml[201,9113+37]..[201,9113+41])
          Pexp_constant PConst_int (1300,None)
    ]
  structure_item (utils/clflags.ml[202,9155+0]..[202,9155+33])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[202,9155+4]..[202,9155+29])
          Ppat_var "default_inline_max_unroll" (utils/clflags.ml[202,9155+4]..[202,9155+29])
        expression (utils/clflags.ml[202,9155+32]..[202,9155+33])
          Pexp_constant PConst_int (0,None)
    ]
  structure_item (utils/clflags.ml[203,9189+0]..[203,9189+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[203,9189+4]..[203,9189+28])
          Ppat_var "default_inline_max_depth" (utils/clflags.ml[203,9189+4]..[203,9189+28])
        expression (utils/clflags.ml[203,9189+31]..[203,9189+32])
          Pexp_constant PConst_int (1,None)
    ]
  structure_item (utils/clflags.ml[205,9223+0]..[205,9223+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[205,9223+4]..[205,9223+20])
          Ppat_var "inline_threshold" (utils/clflags.ml[205,9223+4]..[205,9223+20])
        expression (utils/clflags.ml[205,9223+23]..[205,9223+78])
          Pexp_apply
          expression (utils/clflags.ml[205,9223+23]..[205,9223+26])
            Pexp_ident "ref" (utils/clflags.ml[205,9223+23]..[205,9223+26])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[205,9223+27]..[205,9223+78])
                Pexp_apply
                expression (utils/clflags.ml[205,9223+28]..[205,9223+52])
                  Pexp_ident "Float_arg_helper.default" (utils/clflags.ml[205,9223+28]..[205,9223+52])
                [
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[205,9223+53]..[205,9223+77])
                      Pexp_ident "default_inline_threshold" (utils/clflags.ml[205,9223+53]..[205,9223+77])
                ]
          ]
    ]
  structure_item (utils/clflags.ml[206,9302+0]..[207,9334+64])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[206,9302+4]..[206,9302+29])
          Ppat_var "inline_toplevel_threshold" (utils/clflags.ml[206,9302+4]..[206,9302+29])
        expression (utils/clflags.ml[207,9334+2]..[207,9334+64])
          Pexp_apply
          expression (utils/clflags.ml[207,9334+2]..[207,9334+5])
            Pexp_ident "ref" (utils/clflags.ml[207,9334+2]..[207,9334+5])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[207,9334+6]..[207,9334+64])
                Pexp_apply
                expression (utils/clflags.ml[207,9334+7]..[207,9334+29])
                  Pexp_ident "Int_arg_helper.default" (utils/clflags.ml[207,9334+7]..[207,9334+29])
                [
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[207,9334+30]..[207,9334+63])
                      Pexp_ident "default_inline_toplevel_threshold" (utils/clflags.ml[207,9334+30]..[207,9334+63])
                ]
          ]
    ]
  structure_item (utils/clflags.ml[208,9399+0]..[208,9399+76])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[208,9399+4]..[208,9399+20])
          Ppat_var "inline_call_cost" (utils/clflags.ml[208,9399+4]..[208,9399+20])
        expression (utils/clflags.ml[208,9399+23]..[208,9399+76])
          Pexp_apply
          expression (utils/clflags.ml[208,9399+23]..[208,9399+26])
            Pexp_ident "ref" (utils/clflags.ml[208,9399+23]..[208,9399+26])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[208,9399+27]..[208,9399+76])
                Pexp_apply
                expression (utils/clflags.ml[208,9399+28]..[208,9399+50])
                  Pexp_ident "Int_arg_helper.default" (utils/clflags.ml[208,9399+28]..[208,9399+50])
                [
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[208,9399+51]..[208,9399+75])
                      Pexp_ident "default_inline_call_cost" (utils/clflags.ml[208,9399+51]..[208,9399+75])
                ]
          ]
    ]
  structure_item (utils/clflags.ml[209,9476+0]..[209,9476+78])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[209,9476+4]..[209,9476+21])
          Ppat_var "inline_alloc_cost" (utils/clflags.ml[209,9476+4]..[209,9476+21])
        expression (utils/clflags.ml[209,9476+24]..[209,9476+78])
          Pexp_apply
          expression (utils/clflags.ml[209,9476+24]..[209,9476+27])
            Pexp_ident "ref" (utils/clflags.ml[209,9476+24]..[209,9476+27])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[209,9476+28]..[209,9476+78])
                Pexp_apply
                expression (utils/clflags.ml[209,9476+29]..[209,9476+51])
                  Pexp_ident "Int_arg_helper.default" (utils/clflags.ml[209,9476+29]..[209,9476+51])
                [
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[209,9476+52]..[209,9476+77])
                      Pexp_ident "default_inline_alloc_cost" (utils/clflags.ml[209,9476+52]..[209,9476+77])
                ]
          ]
    ]
  structure_item (utils/clflags.ml[210,9555+0]..[210,9555+76])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[210,9555+4]..[210,9555+20])
          Ppat_var "inline_prim_cost" (utils/clflags.ml[210,9555+4]..[210,9555+20])
        expression (utils/clflags.ml[210,9555+23]..[210,9555+76])
          Pexp_apply
          expression (utils/clflags.ml[210,9555+23]..[210,9555+26])
            Pexp_ident "ref" (utils/clflags.ml[210,9555+23]..[210,9555+26])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[210,9555+27]..[210,9555+76])
                Pexp_apply
                expression (utils/clflags.ml[210,9555+28]..[210,9555+50])
                  Pexp_ident "Int_arg_helper.default" (utils/clflags.ml[210,9555+28]..[210,9555+50])
                [
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[210,9555+51]..[210,9555+75])
                      Pexp_ident "default_inline_prim_cost" (utils/clflags.ml[210,9555+51]..[210,9555+75])
                ]
          ]
    ]
  structure_item (utils/clflags.ml[211,9632+0]..[212,9657+57])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[211,9632+4]..[211,9632+22])
          Ppat_var "inline_branch_cost" (utils/clflags.ml[211,9632+4]..[211,9632+22])
        expression (utils/clflags.ml[212,9657+2]..[212,9657+57])
          Pexp_apply
          expression (utils/clflags.ml[212,9657+2]..[212,9657+5])
            Pexp_ident "ref" (utils/clflags.ml[212,9657+2]..[212,9657+5])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[212,9657+6]..[212,9657+57])
                Pexp_apply
                expression (utils/clflags.ml[212,9657+7]..[212,9657+29])
                  Pexp_ident "Int_arg_helper.default" (utils/clflags.ml[212,9657+7]..[212,9657+29])
                [
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[212,9657+30]..[212,9657+56])
                      Pexp_ident "default_inline_branch_cost" (utils/clflags.ml[212,9657+30]..[212,9657+56])
                ]
          ]
    ]
  structure_item (utils/clflags.ml[213,9715+0]..[214,9742+59])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[213,9715+4]..[213,9715+24])
          Ppat_var "inline_indirect_cost" (utils/clflags.ml[213,9715+4]..[213,9715+24])
        expression (utils/clflags.ml[214,9742+2]..[214,9742+59])
          Pexp_apply
          expression (utils/clflags.ml[214,9742+2]..[214,9742+5])
            Pexp_ident "ref" (utils/clflags.ml[214,9742+2]..[214,9742+5])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[214,9742+6]..[214,9742+59])
                Pexp_apply
                expression (utils/clflags.ml[214,9742+7]..[214,9742+29])
                  Pexp_ident "Int_arg_helper.default" (utils/clflags.ml[214,9742+7]..[214,9742+29])
                [
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[214,9742+30]..[214,9742+58])
                      Pexp_ident "default_inline_indirect_cost" (utils/clflags.ml[214,9742+30]..[214,9742+58])
                ]
          ]
    ]
  structure_item (utils/clflags.ml[215,9802+0]..[216,9829+61])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[215,9802+4]..[215,9802+24])
          Ppat_var "inline_branch_factor" (utils/clflags.ml[215,9802+4]..[215,9802+24])
        expression (utils/clflags.ml[216,9829+2]..[216,9829+61])
          Pexp_apply
          expression (utils/clflags.ml[216,9829+2]..[216,9829+5])
            Pexp_ident "ref" (utils/clflags.ml[216,9829+2]..[216,9829+5])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[216,9829+6]..[216,9829+61])
                Pexp_apply
                expression (utils/clflags.ml[216,9829+7]..[216,9829+31])
                  Pexp_ident "Float_arg_helper.default" (utils/clflags.ml[216,9829+7]..[216,9829+31])
                [
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[216,9829+32]..[216,9829+60])
                      Pexp_ident "default_inline_branch_factor" (utils/clflags.ml[216,9829+32]..[216,9829+60])
                ]
          ]
    ]
  structure_item (utils/clflags.ml[217,9891+0]..[218,9920+61])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[217,9891+4]..[217,9891+26])
          Ppat_var "inline_lifting_benefit" (utils/clflags.ml[217,9891+4]..[217,9891+26])
        expression (utils/clflags.ml[218,9920+2]..[218,9920+61])
          Pexp_apply
          expression (utils/clflags.ml[218,9920+2]..[218,9920+5])
            Pexp_ident "ref" (utils/clflags.ml[218,9920+2]..[218,9920+5])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[218,9920+6]..[218,9920+61])
                Pexp_apply
                expression (utils/clflags.ml[218,9920+7]..[218,9920+29])
                  Pexp_ident "Int_arg_helper.default" (utils/clflags.ml[218,9920+7]..[218,9920+29])
                [
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[218,9920+30]..[218,9920+60])
                      Pexp_ident "default_inline_lifting_benefit" (utils/clflags.ml[218,9920+30]..[218,9920+60])
                ]
          ]
    ]
  structure_item (utils/clflags.ml[219,9982+0]..[220,10006+56])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[219,9982+4]..[219,9982+21])
          Ppat_var "inline_max_unroll" (utils/clflags.ml[219,9982+4]..[219,9982+21])
        expression (utils/clflags.ml[220,10006+2]..[220,10006+56])
          Pexp_apply
          expression (utils/clflags.ml[220,10006+2]..[220,10006+5])
            Pexp_ident "ref" (utils/clflags.ml[220,10006+2]..[220,10006+5])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[220,10006+6]..[220,10006+56])
                Pexp_apply
                expression (utils/clflags.ml[220,10006+7]..[220,10006+29])
                  Pexp_ident "Int_arg_helper.default" (utils/clflags.ml[220,10006+7]..[220,10006+29])
                [
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[220,10006+30]..[220,10006+55])
                      Pexp_ident "default_inline_max_unroll" (utils/clflags.ml[220,10006+30]..[220,10006+55])
                ]
          ]
    ]
  structure_item (utils/clflags.ml[221,10063+0]..[222,10086+55])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[221,10063+4]..[221,10063+20])
          Ppat_var "inline_max_depth" (utils/clflags.ml[221,10063+4]..[221,10063+20])
        expression (utils/clflags.ml[222,10086+2]..[222,10086+55])
          Pexp_apply
          expression (utils/clflags.ml[222,10086+2]..[222,10086+5])
            Pexp_ident "ref" (utils/clflags.ml[222,10086+2]..[222,10086+5])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[222,10086+6]..[222,10086+55])
                Pexp_apply
                expression (utils/clflags.ml[222,10086+7]..[222,10086+29])
                  Pexp_ident "Int_arg_helper.default" (utils/clflags.ml[222,10086+7]..[222,10086+29])
                [
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[222,10086+30]..[222,10086+54])
                      Pexp_ident "default_inline_max_depth" (utils/clflags.ml[222,10086+30]..[222,10086+54])
                ]
          ]
    ]
  structure_item (utils/clflags.ml[225,10144+0]..[225,10144+37])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[225,10144+4]..[225,10144+26])
          Ppat_var "unbox_specialised_args" (utils/clflags.ml[225,10144+4]..[225,10144+26])
        expression (utils/clflags.ml[225,10144+29]..[225,10144+37])
          Pexp_apply
          expression (utils/clflags.ml[225,10144+29]..[225,10144+32])
            Pexp_ident "ref" (utils/clflags.ml[225,10144+29]..[225,10144+32])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[225,10144+33]..[225,10144+37])
                Pexp_construct "true" (utils/clflags.ml[225,10144+33]..[225,10144+37])
                None
          ]
    ]
  structure_item (utils/clflags.ml[226,10217+0]..[226,10217+42])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[226,10217+4]..[226,10217+31])
          Ppat_var "unbox_free_vars_of_closures" (utils/clflags.ml[226,10217+4]..[226,10217+31])
        expression (utils/clflags.ml[226,10217+34]..[226,10217+42])
          Pexp_apply
          expression (utils/clflags.ml[226,10217+34]..[226,10217+37])
            Pexp_ident "ref" (utils/clflags.ml[226,10217+34]..[226,10217+37])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[226,10217+38]..[226,10217+42])
                Pexp_construct "true" (utils/clflags.ml[226,10217+38]..[226,10217+42])
                None
          ]
    ]
  structure_item (utils/clflags.ml[227,10260+0]..[227,10260+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[227,10260+4]..[227,10260+18])
          Ppat_var "unbox_closures" (utils/clflags.ml[227,10260+4]..[227,10260+18])
        expression (utils/clflags.ml[227,10260+21]..[227,10260+30])
          Pexp_apply
          expression (utils/clflags.ml[227,10260+21]..[227,10260+24])
            Pexp_ident "ref" (utils/clflags.ml[227,10260+21]..[227,10260+24])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[227,10260+25]..[227,10260+30])
                Pexp_construct "false" (utils/clflags.ml[227,10260+25]..[227,10260+30])
                None
          ]
    ]
  structure_item (utils/clflags.ml[228,10322+0]..[228,10322+38])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[228,10322+4]..[228,10322+33])
          Ppat_var "default_unbox_closures_factor" (utils/clflags.ml[228,10322+4]..[228,10322+33])
        expression (utils/clflags.ml[228,10322+36]..[228,10322+38])
          Pexp_constant PConst_int (10,None)
    ]
  structure_item (utils/clflags.ml[229,10361+0]..[230,10389+35])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[229,10361+4]..[229,10361+25])
          Ppat_var "unbox_closures_factor" (utils/clflags.ml[229,10361+4]..[229,10361+25])
        expression (utils/clflags.ml[230,10389+2]..[230,10389+35])
          Pexp_apply
          expression (utils/clflags.ml[230,10389+2]..[230,10389+5])
            Pexp_ident "ref" (utils/clflags.ml[230,10389+2]..[230,10389+5])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[230,10389+6]..[230,10389+35])
                Pexp_ident "default_unbox_closures_factor" (utils/clflags.ml[230,10389+6]..[230,10389+35])
          ]
    ]
  structure_item (utils/clflags.ml[231,10459+0]..[231,10459+39])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[231,10459+4]..[231,10459+27])
          Ppat_var "remove_unused_arguments" (utils/clflags.ml[231,10459+4]..[231,10459+27])
        expression (utils/clflags.ml[231,10459+30]..[231,10459+39])
          Pexp_apply
          expression (utils/clflags.ml[231,10459+30]..[231,10459+33])
            Pexp_ident "ref" (utils/clflags.ml[231,10459+30]..[231,10459+33])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[231,10459+34]..[231,10459+39])
                Pexp_construct "false" (utils/clflags.ml[231,10459+34]..[231,10459+39])
                None
          ]
    ]
  structure_item (utils/clflags.ml[233,10531+0]..[245,10953+1])
    Pstr_type Rec
    [
      type_declaration "inlining_arguments" (utils/clflags.ml[233,10531+5]..[233,10531+23]) (utils/clflags.ml[233,10531+0]..[245,10953+1])
        ptype_params =
          []
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (utils/clflags.ml[234,10559+2]..[234,10559+32])
                Immutable
                "inline_call_cost" (utils/clflags.ml[234,10559+2]..[234,10559+18])                core_type (utils/clflags.ml[234,10559+21]..[234,10559+31])
                  Ptyp_constr "option" (utils/clflags.ml[234,10559+25]..[234,10559+31])
                  [
                    core_type (utils/clflags.ml[234,10559+21]..[234,10559+24])
                      Ptyp_constr "int" (utils/clflags.ml[234,10559+21]..[234,10559+24])
                      []
                  ]
              (utils/clflags.ml[235,10592+2]..[235,10592+33])
                Immutable
                "inline_alloc_cost" (utils/clflags.ml[235,10592+2]..[235,10592+19])                core_type (utils/clflags.ml[235,10592+22]..[235,10592+32])
                  Ptyp_constr "option" (utils/clflags.ml[235,10592+26]..[235,10592+32])
                  [
                    core_type (utils/clflags.ml[235,10592+22]..[235,10592+25])
                      Ptyp_constr "int" (utils/clflags.ml[235,10592+22]..[235,10592+25])
                      []
                  ]
              (utils/clflags.ml[236,10626+2]..[236,10626+32])
                Immutable
                "inline_prim_cost" (utils/clflags.ml[236,10626+2]..[236,10626+18])                core_type (utils/clflags.ml[236,10626+21]..[236,10626+31])
                  Ptyp_constr "option" (utils/clflags.ml[236,10626+25]..[236,10626+31])
                  [
                    core_type (utils/clflags.ml[236,10626+21]..[236,10626+24])
                      Ptyp_constr "int" (utils/clflags.ml[236,10626+21]..[236,10626+24])
                      []
                  ]
              (utils/clflags.ml[237,10659+2]..[237,10659+34])
                Immutable
                "inline_branch_cost" (utils/clflags.ml[237,10659+2]..[237,10659+20])                core_type (utils/clflags.ml[237,10659+23]..[237,10659+33])
                  Ptyp_constr "option" (utils/clflags.ml[237,10659+27]..[237,10659+33])
                  [
                    core_type (utils/clflags.ml[237,10659+23]..[237,10659+26])
                      Ptyp_constr "int" (utils/clflags.ml[237,10659+23]..[237,10659+26])
                      []
                  ]
              (utils/clflags.ml[238,10694+2]..[238,10694+36])
                Immutable
                "inline_indirect_cost" (utils/clflags.ml[238,10694+2]..[238,10694+22])                core_type (utils/clflags.ml[238,10694+25]..[238,10694+35])
                  Ptyp_constr "option" (utils/clflags.ml[238,10694+29]..[238,10694+35])
                  [
                    core_type (utils/clflags.ml[238,10694+25]..[238,10694+28])
                      Ptyp_constr "int" (utils/clflags.ml[238,10694+25]..[238,10694+28])
                      []
                  ]
              (utils/clflags.ml[239,10731+2]..[239,10731+38])
                Immutable
                "inline_lifting_benefit" (utils/clflags.ml[239,10731+2]..[239,10731+24])                core_type (utils/clflags.ml[239,10731+27]..[239,10731+37])
                  Ptyp_constr "option" (utils/clflags.ml[239,10731+31]..[239,10731+37])
                  [
                    core_type (utils/clflags.ml[239,10731+27]..[239,10731+30])
                      Ptyp_constr "int" (utils/clflags.ml[239,10731+27]..[239,10731+30])
                      []
                  ]
              (utils/clflags.ml[240,10770+2]..[240,10770+38])
                Immutable
                "inline_branch_factor" (utils/clflags.ml[240,10770+2]..[240,10770+22])                core_type (utils/clflags.ml[240,10770+25]..[240,10770+37])
                  Ptyp_constr "option" (utils/clflags.ml[240,10770+31]..[240,10770+37])
                  [
                    core_type (utils/clflags.ml[240,10770+25]..[240,10770+30])
                      Ptyp_constr "float" (utils/clflags.ml[240,10770+25]..[240,10770+30])
                      []
                  ]
              (utils/clflags.ml[241,10809+2]..[241,10809+32])
                Immutable
                "inline_max_depth" (utils/clflags.ml[241,10809+2]..[241,10809+18])                core_type (utils/clflags.ml[241,10809+21]..[241,10809+31])
                  Ptyp_constr "option" (utils/clflags.ml[241,10809+25]..[241,10809+31])
                  [
                    core_type (utils/clflags.ml[241,10809+21]..[241,10809+24])
                      Ptyp_constr "int" (utils/clflags.ml[241,10809+21]..[241,10809+24])
                      []
                  ]
              (utils/clflags.ml[242,10842+2]..[242,10842+33])
                Immutable
                "inline_max_unroll" (utils/clflags.ml[242,10842+2]..[242,10842+19])                core_type (utils/clflags.ml[242,10842+22]..[242,10842+32])
                  Ptyp_constr "option" (utils/clflags.ml[242,10842+26]..[242,10842+32])
                  [
                    core_type (utils/clflags.ml[242,10842+22]..[242,10842+25])
                      Ptyp_constr "int" (utils/clflags.ml[242,10842+22]..[242,10842+25])
                      []
                  ]
              (utils/clflags.ml[243,10876+2]..[243,10876+34])
                Immutable
                "inline_threshold" (utils/clflags.ml[243,10876+2]..[243,10876+18])                core_type (utils/clflags.ml[243,10876+21]..[243,10876+33])
                  Ptyp_constr "option" (utils/clflags.ml[243,10876+27]..[243,10876+33])
                  [
                    core_type (utils/clflags.ml[243,10876+21]..[243,10876+26])
                      Ptyp_constr "float" (utils/clflags.ml[243,10876+21]..[243,10876+26])
                      []
                  ]
              (utils/clflags.ml[244,10911+2]..[244,10911+41])
                Immutable
                "inline_toplevel_threshold" (utils/clflags.ml[244,10911+2]..[244,10911+27])                core_type (utils/clflags.ml[244,10911+30]..[244,10911+40])
                  Ptyp_constr "option" (utils/clflags.ml[244,10911+34]..[244,10911+40])
                  [
                    core_type (utils/clflags.ml[244,10911+30]..[244,10911+33])
                      Ptyp_constr "int" (utils/clflags.ml[244,10911+30]..[244,10911+33])
                      []
                  ]
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (utils/clflags.ml[247,10956+0]..[258,11274+60])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[247,10956+4]..[247,10956+15])
          Ppat_var "set_int_arg" (utils/clflags.ml[247,10956+4]..[247,10956+15])
        expression (utils/clflags.ml[247,10956+16]..[258,11274+60]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/clflags.ml[247,10956+16]..[247,10956+21])
            Ppat_var "round" (utils/clflags.ml[247,10956+16]..[247,10956+21])
          expression (utils/clflags.ml[247,10956+22]..[258,11274+60]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/clflags.ml[247,10956+22]..[247,10956+53])
              Ppat_constraint
              pattern (utils/clflags.ml[247,10956+23]..[247,10956+26])
                Ppat_var "arg" (utils/clflags.ml[247,10956+23]..[247,10956+26])
              core_type (utils/clflags.ml[247,10956+27]..[247,10956+52])
                Ptyp_constr "ref" (utils/clflags.ml[247,10956+49]..[247,10956+52])
                [
                  core_type (utils/clflags.ml[247,10956+27]..[247,10956+48])
                    Ptyp_constr "Int_arg_helper.parsed" (utils/clflags.ml[247,10956+27]..[247,10956+48])
                    []
                ]
            expression (utils/clflags.ml[247,10956+54]..[258,11274+60]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (utils/clflags.ml[247,10956+54]..[247,10956+61])
                Ppat_var "default" (utils/clflags.ml[247,10956+54]..[247,10956+61])
              expression (utils/clflags.ml[247,10956+62]..[258,11274+60]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (utils/clflags.ml[247,10956+62]..[247,10956+67])
                  Ppat_var "value" (utils/clflags.ml[247,10956+62]..[247,10956+67])
                expression (utils/clflags.ml[248,11026+2]..[258,11274+60])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (utils/clflags.ml[248,11026+6]..[248,11026+17]) ghost
                        Ppat_constraint
                        pattern (utils/clflags.ml[248,11026+6]..[248,11026+11])
                          Ppat_var "value" (utils/clflags.ml[248,11026+6]..[248,11026+11])
                        core_type (utils/clflags.ml[248,11026+14]..[248,11026+17]) ghost
                          Ptyp_poly
                          core_type (utils/clflags.ml[248,11026+14]..[248,11026+17])
                            Ptyp_constr "int" (utils/clflags.ml[248,11026+14]..[248,11026+17])
                            []
                      expression (utils/clflags.ml[248,11026+6]..[251,11089+25])
                        Pexp_constraint
                        expression (utils/clflags.ml[249,11046+4]..[251,11089+25])
                          Pexp_match
                          expression (utils/clflags.ml[249,11046+10]..[249,11046+15])
                            Pexp_ident "value" (utils/clflags.ml[249,11046+10]..[249,11046+15])
                          [
                            <case>
                              pattern (utils/clflags.ml[250,11067+6]..[250,11067+10])
                                Ppat_construct "None" (utils/clflags.ml[250,11067+6]..[250,11067+10])
                                None
                              expression (utils/clflags.ml[250,11067+14]..[250,11067+21])
                                Pexp_ident "default" (utils/clflags.ml[250,11067+14]..[250,11067+21])
                            <case>
                              pattern (utils/clflags.ml[251,11089+6]..[251,11089+16])
                                Ppat_construct "Some" (utils/clflags.ml[251,11089+6]..[251,11089+10])
                                Some
                                  []
                                  pattern (utils/clflags.ml[251,11089+11]..[251,11089+16])
                                    Ppat_var "value" (utils/clflags.ml[251,11089+11]..[251,11089+16])
                              expression (utils/clflags.ml[251,11089+20]..[251,11089+25])
                                Pexp_ident "value" (utils/clflags.ml[251,11089+20]..[251,11089+25])
                          ]
                        core_type (utils/clflags.ml[248,11026+14]..[248,11026+17])
                          Ptyp_constr "int" (utils/clflags.ml[248,11026+14]..[248,11026+17])
                          []
                  ]
                  expression (utils/clflags.ml[253,11120+2]..[258,11274+60])
                    Pexp_match
                    expression (utils/clflags.ml[253,11120+8]..[253,11120+13])
                      Pexp_ident "round" (utils/clflags.ml[253,11120+8]..[253,11120+13])
                    [
                      <case>
                        pattern (utils/clflags.ml[254,11139+4]..[254,11139+8])
                          Ppat_construct "None" (utils/clflags.ml[254,11139+4]..[254,11139+8])
                          None
                        expression (utils/clflags.ml[255,11151+4]..[256,11200+55])
                          Pexp_apply
                          expression (utils/clflags.ml[255,11151+8]..[255,11151+10])
                            Pexp_ident ":=" (utils/clflags.ml[255,11151+8]..[255,11151+10])
                          [
                            <arg>
                            Nolabel
                              expression (utils/clflags.ml[255,11151+4]..[255,11151+7])
                                Pexp_ident "arg" (utils/clflags.ml[255,11151+4]..[255,11151+7])
                            <arg>
                            Nolabel
                              expression (utils/clflags.ml[255,11151+11]..[256,11200+55])
                                Pexp_apply
                                expression (utils/clflags.ml[255,11151+11]..[255,11151+42])
                                  Pexp_ident "Int_arg_helper.set_base_default" (utils/clflags.ml[255,11151+11]..[255,11151+42])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/clflags.ml[255,11151+43]..[255,11151+48])
                                      Pexp_ident "value" (utils/clflags.ml[255,11151+43]..[255,11151+48])
                                  <arg>
                                  Nolabel
                                    expression (utils/clflags.ml[256,11200+13]..[256,11200+55])
                                      Pexp_apply
                                      expression (utils/clflags.ml[256,11200+14]..[256,11200+49])
                                        Pexp_ident "Int_arg_helper.reset_base_overrides" (utils/clflags.ml[256,11200+14]..[256,11200+49])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/clflags.ml[256,11200+50]..[256,11200+54])
                                            Pexp_apply
                                            expression (utils/clflags.ml[256,11200+50]..[256,11200+51])
                                              Pexp_ident "!" (utils/clflags.ml[256,11200+50]..[256,11200+51])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/clflags.ml[256,11200+51]..[256,11200+54])
                                                  Pexp_ident "arg" (utils/clflags.ml[256,11200+51]..[256,11200+54])
                                            ]
                                      ]
                                ]
                          ]
                      <case>
                        pattern (utils/clflags.ml[257,11256+4]..[257,11256+14])
                          Ppat_construct "Some" (utils/clflags.ml[257,11256+4]..[257,11256+8])
                          Some
                            []
                            pattern (utils/clflags.ml[257,11256+9]..[257,11256+14])
                              Ppat_var "round" (utils/clflags.ml[257,11256+9]..[257,11256+14])
                        expression (utils/clflags.ml[258,11274+4]..[258,11274+60])
                          Pexp_apply
                          expression (utils/clflags.ml[258,11274+8]..[258,11274+10])
                            Pexp_ident ":=" (utils/clflags.ml[258,11274+8]..[258,11274+10])
                          [
                            <arg>
                            Nolabel
                              expression (utils/clflags.ml[258,11274+4]..[258,11274+7])
                                Pexp_ident "arg" (utils/clflags.ml[258,11274+4]..[258,11274+7])
                            <arg>
                            Nolabel
                              expression (utils/clflags.ml[258,11274+11]..[258,11274+60])
                                Pexp_apply
                                expression (utils/clflags.ml[258,11274+11]..[258,11274+43])
                                  Pexp_ident "Int_arg_helper.add_base_override" (utils/clflags.ml[258,11274+11]..[258,11274+43])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/clflags.ml[258,11274+44]..[258,11274+49])
                                      Pexp_ident "round" (utils/clflags.ml[258,11274+44]..[258,11274+49])
                                  <arg>
                                  Nolabel
                                    expression (utils/clflags.ml[258,11274+50]..[258,11274+55])
                                      Pexp_ident "value" (utils/clflags.ml[258,11274+50]..[258,11274+55])
                                  <arg>
                                  Nolabel
                                    expression (utils/clflags.ml[258,11274+56]..[258,11274+60])
                                      Pexp_apply
                                      expression (utils/clflags.ml[258,11274+56]..[258,11274+57])
                                        Pexp_ident "!" (utils/clflags.ml[258,11274+56]..[258,11274+57])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/clflags.ml[258,11274+57]..[258,11274+60])
                                            Pexp_ident "arg" (utils/clflags.ml[258,11274+57]..[258,11274+60])
                                      ]
                                ]
                          ]
                    ]
    ]
  structure_item (utils/clflags.ml[260,11336+0]..[271,11656+62])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[260,11336+4]..[260,11336+17])
          Ppat_var "set_float_arg" (utils/clflags.ml[260,11336+4]..[260,11336+17])
        expression (utils/clflags.ml[260,11336+18]..[271,11656+62]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/clflags.ml[260,11336+18]..[260,11336+23])
            Ppat_var "round" (utils/clflags.ml[260,11336+18]..[260,11336+23])
          expression (utils/clflags.ml[260,11336+24]..[271,11656+62]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/clflags.ml[260,11336+24]..[260,11336+57])
              Ppat_constraint
              pattern (utils/clflags.ml[260,11336+25]..[260,11336+28])
                Ppat_var "arg" (utils/clflags.ml[260,11336+25]..[260,11336+28])
              core_type (utils/clflags.ml[260,11336+29]..[260,11336+56])
                Ptyp_constr "ref" (utils/clflags.ml[260,11336+53]..[260,11336+56])
                [
                  core_type (utils/clflags.ml[260,11336+29]..[260,11336+52])
                    Ptyp_constr "Float_arg_helper.parsed" (utils/clflags.ml[260,11336+29]..[260,11336+52])
                    []
                ]
            expression (utils/clflags.ml[260,11336+58]..[271,11656+62]) ghost
              Pexp_fun
              Nolabel
              None
              pattern (utils/clflags.ml[260,11336+58]..[260,11336+65])
                Ppat_var "default" (utils/clflags.ml[260,11336+58]..[260,11336+65])
              expression (utils/clflags.ml[260,11336+66]..[271,11656+62]) ghost
                Pexp_fun
                Nolabel
                None
                pattern (utils/clflags.ml[260,11336+66]..[260,11336+71])
                  Ppat_var "value" (utils/clflags.ml[260,11336+66]..[260,11336+71])
                expression (utils/clflags.ml[261,11410+2]..[271,11656+62])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (utils/clflags.ml[261,11410+6]..[261,11410+11])
                        Ppat_var "value" (utils/clflags.ml[261,11410+6]..[261,11410+11])
                      expression (utils/clflags.ml[262,11424+4]..[264,11467+25])
                        Pexp_match
                        expression (utils/clflags.ml[262,11424+10]..[262,11424+15])
                          Pexp_ident "value" (utils/clflags.ml[262,11424+10]..[262,11424+15])
                        [
                          <case>
                            pattern (utils/clflags.ml[263,11445+6]..[263,11445+10])
                              Ppat_construct "None" (utils/clflags.ml[263,11445+6]..[263,11445+10])
                              None
                            expression (utils/clflags.ml[263,11445+14]..[263,11445+21])
                              Pexp_ident "default" (utils/clflags.ml[263,11445+14]..[263,11445+21])
                          <case>
                            pattern (utils/clflags.ml[264,11467+6]..[264,11467+16])
                              Ppat_construct "Some" (utils/clflags.ml[264,11467+6]..[264,11467+10])
                              Some
                                []
                                pattern (utils/clflags.ml[264,11467+11]..[264,11467+16])
                                  Ppat_var "value" (utils/clflags.ml[264,11467+11]..[264,11467+16])
                            expression (utils/clflags.ml[264,11467+20]..[264,11467+25])
                              Pexp_ident "value" (utils/clflags.ml[264,11467+20]..[264,11467+25])
                        ]
                  ]
                  expression (utils/clflags.ml[266,11498+2]..[271,11656+62])
                    Pexp_match
                    expression (utils/clflags.ml[266,11498+8]..[266,11498+13])
                      Pexp_ident "round" (utils/clflags.ml[266,11498+8]..[266,11498+13])
                    [
                      <case>
                        pattern (utils/clflags.ml[267,11517+4]..[267,11517+8])
                          Ppat_construct "None" (utils/clflags.ml[267,11517+4]..[267,11517+8])
                          None
                        expression (utils/clflags.ml[268,11529+4]..[269,11580+57])
                          Pexp_apply
                          expression (utils/clflags.ml[268,11529+8]..[268,11529+10])
                            Pexp_ident ":=" (utils/clflags.ml[268,11529+8]..[268,11529+10])
                          [
                            <arg>
                            Nolabel
                              expression (utils/clflags.ml[268,11529+4]..[268,11529+7])
                                Pexp_ident "arg" (utils/clflags.ml[268,11529+4]..[268,11529+7])
                            <arg>
                            Nolabel
                              expression (utils/clflags.ml[268,11529+11]..[269,11580+57])
                                Pexp_apply
                                expression (utils/clflags.ml[268,11529+11]..[268,11529+44])
                                  Pexp_ident "Float_arg_helper.set_base_default" (utils/clflags.ml[268,11529+11]..[268,11529+44])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/clflags.ml[268,11529+45]..[268,11529+50])
                                      Pexp_ident "value" (utils/clflags.ml[268,11529+45]..[268,11529+50])
                                  <arg>
                                  Nolabel
                                    expression (utils/clflags.ml[269,11580+13]..[269,11580+57])
                                      Pexp_apply
                                      expression (utils/clflags.ml[269,11580+14]..[269,11580+51])
                                        Pexp_ident "Float_arg_helper.reset_base_overrides" (utils/clflags.ml[269,11580+14]..[269,11580+51])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/clflags.ml[269,11580+52]..[269,11580+56])
                                            Pexp_apply
                                            expression (utils/clflags.ml[269,11580+52]..[269,11580+53])
                                              Pexp_ident "!" (utils/clflags.ml[269,11580+52]..[269,11580+53])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/clflags.ml[269,11580+53]..[269,11580+56])
                                                  Pexp_ident "arg" (utils/clflags.ml[269,11580+53]..[269,11580+56])
                                            ]
                                      ]
                                ]
                          ]
                      <case>
                        pattern (utils/clflags.ml[270,11638+4]..[270,11638+14])
                          Ppat_construct "Some" (utils/clflags.ml[270,11638+4]..[270,11638+8])
                          Some
                            []
                            pattern (utils/clflags.ml[270,11638+9]..[270,11638+14])
                              Ppat_var "round" (utils/clflags.ml[270,11638+9]..[270,11638+14])
                        expression (utils/clflags.ml[271,11656+4]..[271,11656+62])
                          Pexp_apply
                          expression (utils/clflags.ml[271,11656+8]..[271,11656+10])
                            Pexp_ident ":=" (utils/clflags.ml[271,11656+8]..[271,11656+10])
                          [
                            <arg>
                            Nolabel
                              expression (utils/clflags.ml[271,11656+4]..[271,11656+7])
                                Pexp_ident "arg" (utils/clflags.ml[271,11656+4]..[271,11656+7])
                            <arg>
                            Nolabel
                              expression (utils/clflags.ml[271,11656+11]..[271,11656+62])
                                Pexp_apply
                                expression (utils/clflags.ml[271,11656+11]..[271,11656+45])
                                  Pexp_ident "Float_arg_helper.add_base_override" (utils/clflags.ml[271,11656+11]..[271,11656+45])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/clflags.ml[271,11656+46]..[271,11656+51])
                                      Pexp_ident "round" (utils/clflags.ml[271,11656+46]..[271,11656+51])
                                  <arg>
                                  Nolabel
                                    expression (utils/clflags.ml[271,11656+52]..[271,11656+57])
                                      Pexp_ident "value" (utils/clflags.ml[271,11656+52]..[271,11656+57])
                                  <arg>
                                  Nolabel
                                    expression (utils/clflags.ml[271,11656+58]..[271,11656+62])
                                      Pexp_apply
                                      expression (utils/clflags.ml[271,11656+58]..[271,11656+59])
                                        Pexp_ident "!" (utils/clflags.ml[271,11656+58]..[271,11656+59])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/clflags.ml[271,11656+59]..[271,11656+62])
                                            Pexp_ident "arg" (utils/clflags.ml[271,11656+59]..[271,11656+62])
                                      ]
                                ]
                          ]
                    ]
    ]
  structure_item (utils/clflags.ml[273,11720+0]..[294,12725+67])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[273,11720+4]..[273,11720+30])
          Ppat_var "use_inlining_arguments_set" (utils/clflags.ml[273,11720+4]..[273,11720+30])
        expression (utils/clflags.ml[273,11720+31]..[294,12725+67]) ghost
          Pexp_fun
          Optional "round"
          None
          pattern (utils/clflags.ml[273,11720+32]..[273,11720+37])
            Ppat_var "round" (utils/clflags.ml[273,11720+32]..[273,11720+37])
          expression (utils/clflags.ml[273,11720+38]..[294,12725+67]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/clflags.ml[273,11720+38]..[273,11720+62])
              Ppat_constraint
              pattern (utils/clflags.ml[273,11720+39]..[273,11720+42])
                Ppat_var "arg" (utils/clflags.ml[273,11720+39]..[273,11720+42])
              core_type (utils/clflags.ml[273,11720+43]..[273,11720+61])
                Ptyp_constr "inlining_arguments" (utils/clflags.ml[273,11720+43]..[273,11720+61])
                []
            expression (utils/clflags.ml[274,11785+2]..[294,12725+67])
              Pexp_let Nonrec
              [
                <def>
                  pattern (utils/clflags.ml[274,11785+6]..[274,11785+13])
                    Ppat_var "set_int" (utils/clflags.ml[274,11785+6]..[274,11785+13])
                  expression (utils/clflags.ml[274,11785+16]..[274,11785+33])
                    Pexp_apply
                    expression (utils/clflags.ml[274,11785+16]..[274,11785+27])
                      Pexp_ident "set_int_arg" (utils/clflags.ml[274,11785+16]..[274,11785+27])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[274,11785+28]..[274,11785+33])
                          Pexp_ident "round" (utils/clflags.ml[274,11785+28]..[274,11785+33])
                    ]
              ]
              expression (utils/clflags.ml[275,11822+2]..[294,12725+67])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (utils/clflags.ml[275,11822+6]..[275,11822+15])
                      Ppat_var "set_float" (utils/clflags.ml[275,11822+6]..[275,11822+15])
                    expression (utils/clflags.ml[275,11822+18]..[275,11822+37])
                      Pexp_apply
                      expression (utils/clflags.ml[275,11822+18]..[275,11822+31])
                        Pexp_ident "set_float_arg" (utils/clflags.ml[275,11822+18]..[275,11822+31])
                      [
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[275,11822+32]..[275,11822+37])
                            Pexp_ident "round" (utils/clflags.ml[275,11822+32]..[275,11822+37])
                      ]
                ]
                expression (utils/clflags.ml[276,11863+2]..[294,12725+67])
                  Pexp_sequence
                  expression (utils/clflags.ml[276,11863+2]..[276,11863+72])
                    Pexp_apply
                    expression (utils/clflags.ml[276,11863+2]..[276,11863+9])
                      Pexp_ident "set_int" (utils/clflags.ml[276,11863+2]..[276,11863+9])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[276,11863+10]..[276,11863+26])
                          Pexp_ident "inline_call_cost" (utils/clflags.ml[276,11863+10]..[276,11863+26])
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[276,11863+27]..[276,11863+51])
                          Pexp_ident "default_inline_call_cost" (utils/clflags.ml[276,11863+27]..[276,11863+51])
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[276,11863+52]..[276,11863+72])
                          Pexp_field
                          expression (utils/clflags.ml[276,11863+52]..[276,11863+55])
                            Pexp_ident "arg" (utils/clflags.ml[276,11863+52]..[276,11863+55])
                          "inline_call_cost" (utils/clflags.ml[276,11863+56]..[276,11863+72])
                    ]
                  expression (utils/clflags.ml[277,11937+2]..[294,12725+67])
                    Pexp_sequence
                    expression (utils/clflags.ml[277,11937+2]..[277,11937+75])
                      Pexp_apply
                      expression (utils/clflags.ml[277,11937+2]..[277,11937+9])
                        Pexp_ident "set_int" (utils/clflags.ml[277,11937+2]..[277,11937+9])
                      [
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[277,11937+10]..[277,11937+27])
                            Pexp_ident "inline_alloc_cost" (utils/clflags.ml[277,11937+10]..[277,11937+27])
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[277,11937+28]..[277,11937+53])
                            Pexp_ident "default_inline_alloc_cost" (utils/clflags.ml[277,11937+28]..[277,11937+53])
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[277,11937+54]..[277,11937+75])
                            Pexp_field
                            expression (utils/clflags.ml[277,11937+54]..[277,11937+57])
                              Pexp_ident "arg" (utils/clflags.ml[277,11937+54]..[277,11937+57])
                            "inline_alloc_cost" (utils/clflags.ml[277,11937+58]..[277,11937+75])
                      ]
                    expression (utils/clflags.ml[278,12014+2]..[294,12725+67])
                      Pexp_sequence
                      expression (utils/clflags.ml[278,12014+2]..[278,12014+72])
                        Pexp_apply
                        expression (utils/clflags.ml[278,12014+2]..[278,12014+9])
                          Pexp_ident "set_int" (utils/clflags.ml[278,12014+2]..[278,12014+9])
                        [
                          <arg>
                          Nolabel
                            expression (utils/clflags.ml[278,12014+10]..[278,12014+26])
                              Pexp_ident "inline_prim_cost" (utils/clflags.ml[278,12014+10]..[278,12014+26])
                          <arg>
                          Nolabel
                            expression (utils/clflags.ml[278,12014+27]..[278,12014+51])
                              Pexp_ident "default_inline_prim_cost" (utils/clflags.ml[278,12014+27]..[278,12014+51])
                          <arg>
                          Nolabel
                            expression (utils/clflags.ml[278,12014+52]..[278,12014+72])
                              Pexp_field
                              expression (utils/clflags.ml[278,12014+52]..[278,12014+55])
                                Pexp_ident "arg" (utils/clflags.ml[278,12014+52]..[278,12014+55])
                              "inline_prim_cost" (utils/clflags.ml[278,12014+56]..[278,12014+72])
                        ]
                      expression (utils/clflags.ml[279,12088+2]..[294,12725+67])
                        Pexp_sequence
                        expression (utils/clflags.ml[279,12088+2]..[280,12117+53])
                          Pexp_apply
                          expression (utils/clflags.ml[279,12088+2]..[279,12088+9])
                            Pexp_ident "set_int" (utils/clflags.ml[279,12088+2]..[279,12088+9])
                          [
                            <arg>
                            Nolabel
                              expression (utils/clflags.ml[279,12088+10]..[279,12088+28])
                                Pexp_ident "inline_branch_cost" (utils/clflags.ml[279,12088+10]..[279,12088+28])
                            <arg>
                            Nolabel
                              expression (utils/clflags.ml[280,12117+4]..[280,12117+30])
                                Pexp_ident "default_inline_branch_cost" (utils/clflags.ml[280,12117+4]..[280,12117+30])
                            <arg>
                            Nolabel
                              expression (utils/clflags.ml[280,12117+31]..[280,12117+53])
                                Pexp_field
                                expression (utils/clflags.ml[280,12117+31]..[280,12117+34])
                                  Pexp_ident "arg" (utils/clflags.ml[280,12117+31]..[280,12117+34])
                                "inline_branch_cost" (utils/clflags.ml[280,12117+35]..[280,12117+53])
                          ]
                        expression (utils/clflags.ml[281,12172+2]..[294,12725+67])
                          Pexp_sequence
                          expression (utils/clflags.ml[281,12172+2]..[282,12203+57])
                            Pexp_apply
                            expression (utils/clflags.ml[281,12172+2]..[281,12172+9])
                              Pexp_ident "set_int" (utils/clflags.ml[281,12172+2]..[281,12172+9])
                            [
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[281,12172+10]..[281,12172+30])
                                  Pexp_ident "inline_indirect_cost" (utils/clflags.ml[281,12172+10]..[281,12172+30])
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[282,12203+4]..[282,12203+32])
                                  Pexp_ident "default_inline_indirect_cost" (utils/clflags.ml[282,12203+4]..[282,12203+32])
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[282,12203+33]..[282,12203+57])
                                  Pexp_field
                                  expression (utils/clflags.ml[282,12203+33]..[282,12203+36])
                                    Pexp_ident "arg" (utils/clflags.ml[282,12203+33]..[282,12203+36])
                                  "inline_indirect_cost" (utils/clflags.ml[282,12203+37]..[282,12203+57])
                            ]
                          expression (utils/clflags.ml[283,12262+2]..[294,12725+67])
                            Pexp_sequence
                            expression (utils/clflags.ml[283,12262+2]..[284,12295+61])
                              Pexp_apply
                              expression (utils/clflags.ml[283,12262+2]..[283,12262+9])
                                Pexp_ident "set_int" (utils/clflags.ml[283,12262+2]..[283,12262+9])
                              [
                                <arg>
                                Nolabel
                                  expression (utils/clflags.ml[283,12262+10]..[283,12262+32])
                                    Pexp_ident "inline_lifting_benefit" (utils/clflags.ml[283,12262+10]..[283,12262+32])
                                <arg>
                                Nolabel
                                  expression (utils/clflags.ml[284,12295+4]..[284,12295+34])
                                    Pexp_ident "default_inline_lifting_benefit" (utils/clflags.ml[284,12295+4]..[284,12295+34])
                                <arg>
                                Nolabel
                                  expression (utils/clflags.ml[284,12295+35]..[284,12295+61])
                                    Pexp_field
                                    expression (utils/clflags.ml[284,12295+35]..[284,12295+38])
                                      Pexp_ident "arg" (utils/clflags.ml[284,12295+35]..[284,12295+38])
                                    "inline_lifting_benefit" (utils/clflags.ml[284,12295+39]..[284,12295+61])
                              ]
                            expression (utils/clflags.ml[285,12358+2]..[294,12725+67])
                              Pexp_sequence
                              expression (utils/clflags.ml[285,12358+2]..[286,12391+57])
                                Pexp_apply
                                expression (utils/clflags.ml[285,12358+2]..[285,12358+11])
                                  Pexp_ident "set_float" (utils/clflags.ml[285,12358+2]..[285,12358+11])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/clflags.ml[285,12358+12]..[285,12358+32])
                                      Pexp_ident "inline_branch_factor" (utils/clflags.ml[285,12358+12]..[285,12358+32])
                                  <arg>
                                  Nolabel
                                    expression (utils/clflags.ml[286,12391+4]..[286,12391+32])
                                      Pexp_ident "default_inline_branch_factor" (utils/clflags.ml[286,12391+4]..[286,12391+32])
                                  <arg>
                                  Nolabel
                                    expression (utils/clflags.ml[286,12391+33]..[286,12391+57])
                                      Pexp_field
                                      expression (utils/clflags.ml[286,12391+33]..[286,12391+36])
                                        Pexp_ident "arg" (utils/clflags.ml[286,12391+33]..[286,12391+36])
                                      "inline_branch_factor" (utils/clflags.ml[286,12391+37]..[286,12391+57])
                                ]
                              expression (utils/clflags.ml[287,12450+2]..[294,12725+67])
                                Pexp_sequence
                                expression (utils/clflags.ml[287,12450+2]..[288,12477+49])
                                  Pexp_apply
                                  expression (utils/clflags.ml[287,12450+2]..[287,12450+9])
                                    Pexp_ident "set_int" (utils/clflags.ml[287,12450+2]..[287,12450+9])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/clflags.ml[287,12450+10]..[287,12450+26])
                                        Pexp_ident "inline_max_depth" (utils/clflags.ml[287,12450+10]..[287,12450+26])
                                    <arg>
                                    Nolabel
                                      expression (utils/clflags.ml[288,12477+4]..[288,12477+28])
                                        Pexp_ident "default_inline_max_depth" (utils/clflags.ml[288,12477+4]..[288,12477+28])
                                    <arg>
                                    Nolabel
                                      expression (utils/clflags.ml[288,12477+29]..[288,12477+49])
                                        Pexp_field
                                        expression (utils/clflags.ml[288,12477+29]..[288,12477+32])
                                          Pexp_ident "arg" (utils/clflags.ml[288,12477+29]..[288,12477+32])
                                        "inline_max_depth" (utils/clflags.ml[288,12477+33]..[288,12477+49])
                                  ]
                                expression (utils/clflags.ml[289,12528+2]..[294,12725+67])
                                  Pexp_sequence
                                  expression (utils/clflags.ml[289,12528+2]..[290,12556+51])
                                    Pexp_apply
                                    expression (utils/clflags.ml[289,12528+2]..[289,12528+9])
                                      Pexp_ident "set_int" (utils/clflags.ml[289,12528+2]..[289,12528+9])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/clflags.ml[289,12528+10]..[289,12528+27])
                                          Pexp_ident "inline_max_unroll" (utils/clflags.ml[289,12528+10]..[289,12528+27])
                                      <arg>
                                      Nolabel
                                        expression (utils/clflags.ml[290,12556+4]..[290,12556+29])
                                          Pexp_ident "default_inline_max_unroll" (utils/clflags.ml[290,12556+4]..[290,12556+29])
                                      <arg>
                                      Nolabel
                                        expression (utils/clflags.ml[290,12556+30]..[290,12556+51])
                                          Pexp_field
                                          expression (utils/clflags.ml[290,12556+30]..[290,12556+33])
                                            Pexp_ident "arg" (utils/clflags.ml[290,12556+30]..[290,12556+33])
                                          "inline_max_unroll" (utils/clflags.ml[290,12556+34]..[290,12556+51])
                                    ]
                                  expression (utils/clflags.ml[291,12609+2]..[294,12725+67])
                                    Pexp_sequence
                                    expression (utils/clflags.ml[291,12609+2]..[292,12638+49])
                                      Pexp_apply
                                      expression (utils/clflags.ml[291,12609+2]..[291,12609+11])
                                        Pexp_ident "set_float" (utils/clflags.ml[291,12609+2]..[291,12609+11])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/clflags.ml[291,12609+12]..[291,12609+28])
                                            Pexp_ident "inline_threshold" (utils/clflags.ml[291,12609+12]..[291,12609+28])
                                        <arg>
                                        Nolabel
                                          expression (utils/clflags.ml[292,12638+4]..[292,12638+28])
                                            Pexp_ident "default_inline_threshold" (utils/clflags.ml[292,12638+4]..[292,12638+28])
                                        <arg>
                                        Nolabel
                                          expression (utils/clflags.ml[292,12638+29]..[292,12638+49])
                                            Pexp_field
                                            expression (utils/clflags.ml[292,12638+29]..[292,12638+32])
                                              Pexp_ident "arg" (utils/clflags.ml[292,12638+29]..[292,12638+32])
                                            "inline_threshold" (utils/clflags.ml[292,12638+33]..[292,12638+49])
                                      ]
                                    expression (utils/clflags.ml[293,12689+2]..[294,12725+67])
                                      Pexp_apply
                                      expression (utils/clflags.ml[293,12689+2]..[293,12689+9])
                                        Pexp_ident "set_int" (utils/clflags.ml[293,12689+2]..[293,12689+9])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/clflags.ml[293,12689+10]..[293,12689+35])
                                            Pexp_ident "inline_toplevel_threshold" (utils/clflags.ml[293,12689+10]..[293,12689+35])
                                        <arg>
                                        Nolabel
                                          expression (utils/clflags.ml[294,12725+4]..[294,12725+37])
                                            Pexp_ident "default_inline_toplevel_threshold" (utils/clflags.ml[294,12725+4]..[294,12725+37])
                                        <arg>
                                        Nolabel
                                          expression (utils/clflags.ml[294,12725+38]..[294,12725+67])
                                            Pexp_field
                                            expression (utils/clflags.ml[294,12725+38]..[294,12725+41])
                                              Pexp_ident "arg" (utils/clflags.ml[294,12725+38]..[294,12725+41])
                                            "inline_toplevel_threshold" (utils/clflags.ml[294,12725+42]..[294,12725+67])
                                      ]
    ]
  structure_item (utils/clflags.ml[297,12818+0]..[309,13163+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[297,12818+4]..[297,12818+16])
          Ppat_var "o1_arguments" (utils/clflags.ml[297,12818+4]..[297,12818+16])
        expression (utils/clflags.ml[297,12818+19]..[309,13163+1])
          Pexp_record
          [
            "inline_call_cost" (utils/clflags.ml[298,12839+2]..[298,12839+18])
              expression (utils/clflags.ml[298,12839+21]..[298,12839+25])
                Pexp_construct "None" (utils/clflags.ml[298,12839+21]..[298,12839+25])
                None
            "inline_alloc_cost" (utils/clflags.ml[299,12866+2]..[299,12866+19])
              expression (utils/clflags.ml[299,12866+22]..[299,12866+26])
                Pexp_construct "None" (utils/clflags.ml[299,12866+22]..[299,12866+26])
                None
            "inline_prim_cost" (utils/clflags.ml[300,12894+2]..[300,12894+18])
              expression (utils/clflags.ml[300,12894+21]..[300,12894+25])
                Pexp_construct "None" (utils/clflags.ml[300,12894+21]..[300,12894+25])
                None
            "inline_branch_cost" (utils/clflags.ml[301,12921+2]..[301,12921+20])
              expression (utils/clflags.ml[301,12921+23]..[301,12921+27])
                Pexp_construct "None" (utils/clflags.ml[301,12921+23]..[301,12921+27])
                None
            "inline_indirect_cost" (utils/clflags.ml[302,12950+2]..[302,12950+22])
              expression (utils/clflags.ml[302,12950+25]..[302,12950+29])
                Pexp_construct "None" (utils/clflags.ml[302,12950+25]..[302,12950+29])
                None
            "inline_lifting_benefit" (utils/clflags.ml[303,12981+2]..[303,12981+24])
              expression (utils/clflags.ml[303,12981+27]..[303,12981+31])
                Pexp_construct "None" (utils/clflags.ml[303,12981+27]..[303,12981+31])
                None
            "inline_branch_factor" (utils/clflags.ml[304,13014+2]..[304,13014+22])
              expression (utils/clflags.ml[304,13014+25]..[304,13014+29])
                Pexp_construct "None" (utils/clflags.ml[304,13014+25]..[304,13014+29])
                None
            "inline_max_depth" (utils/clflags.ml[305,13045+2]..[305,13045+18])
              expression (utils/clflags.ml[305,13045+21]..[305,13045+25])
                Pexp_construct "None" (utils/clflags.ml[305,13045+21]..[305,13045+25])
                None
            "inline_max_unroll" (utils/clflags.ml[306,13072+2]..[306,13072+19])
              expression (utils/clflags.ml[306,13072+22]..[306,13072+26])
                Pexp_construct "None" (utils/clflags.ml[306,13072+22]..[306,13072+26])
                None
            "inline_threshold" (utils/clflags.ml[307,13100+2]..[307,13100+18])
              expression (utils/clflags.ml[307,13100+21]..[307,13100+25])
                Pexp_construct "None" (utils/clflags.ml[307,13100+21]..[307,13100+25])
                None
            "inline_toplevel_threshold" (utils/clflags.ml[308,13127+2]..[308,13127+27])
              expression (utils/clflags.ml[308,13127+30]..[308,13127+34])
                Pexp_construct "None" (utils/clflags.ml[308,13127+30]..[308,13127+34])
                None
          ]
          None
    ]
  structure_item (utils/clflags.ml[311,13166+0]..[327,13751+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[311,13166+4]..[311,13166+21])
          Ppat_var "classic_arguments" (utils/clflags.ml[311,13166+4]..[311,13166+21])
        expression (utils/clflags.ml[311,13166+24]..[327,13751+1])
          Pexp_record
          [
            "inline_call_cost" (utils/clflags.ml[312,13192+2]..[312,13192+18])
              expression (utils/clflags.ml[312,13192+21]..[312,13192+25])
                Pexp_construct "None" (utils/clflags.ml[312,13192+21]..[312,13192+25])
                None
            "inline_alloc_cost" (utils/clflags.ml[313,13219+2]..[313,13219+19])
              expression (utils/clflags.ml[313,13219+22]..[313,13219+26])
                Pexp_construct "None" (utils/clflags.ml[313,13219+22]..[313,13219+26])
                None
            "inline_prim_cost" (utils/clflags.ml[314,13247+2]..[314,13247+18])
              expression (utils/clflags.ml[314,13247+21]..[314,13247+25])
                Pexp_construct "None" (utils/clflags.ml[314,13247+21]..[314,13247+25])
                None
            "inline_branch_cost" (utils/clflags.ml[315,13274+2]..[315,13274+20])
              expression (utils/clflags.ml[315,13274+23]..[315,13274+27])
                Pexp_construct "None" (utils/clflags.ml[315,13274+23]..[315,13274+27])
                None
            "inline_indirect_cost" (utils/clflags.ml[316,13303+2]..[316,13303+22])
              expression (utils/clflags.ml[316,13303+25]..[316,13303+29])
                Pexp_construct "None" (utils/clflags.ml[316,13303+25]..[316,13303+29])
                None
            "inline_lifting_benefit" (utils/clflags.ml[317,13334+2]..[317,13334+24])
              expression (utils/clflags.ml[317,13334+27]..[317,13334+31])
                Pexp_construct "None" (utils/clflags.ml[317,13334+27]..[317,13334+31])
                None
            "inline_branch_factor" (utils/clflags.ml[318,13367+2]..[318,13367+22])
              expression (utils/clflags.ml[318,13367+25]..[318,13367+29])
                Pexp_construct "None" (utils/clflags.ml[318,13367+25]..[318,13367+29])
                None
            "inline_max_depth" (utils/clflags.ml[319,13398+2]..[319,13398+18])
              expression (utils/clflags.ml[319,13398+21]..[319,13398+25])
                Pexp_construct "None" (utils/clflags.ml[319,13398+21]..[319,13398+25])
                None
            "inline_max_unroll" (utils/clflags.ml[320,13425+2]..[320,13425+19])
              expression (utils/clflags.ml[320,13425+22]..[320,13425+26])
                Pexp_construct "None" (utils/clflags.ml[320,13425+22]..[320,13425+26])
                None
            "inline_threshold" (utils/clflags.ml[324,13609+2]..[324,13609+18])
              expression (utils/clflags.ml[324,13609+21]..[324,13609+37])
                Pexp_construct "Some" (utils/clflags.ml[324,13609+21]..[324,13609+25])
                Some
                  expression (utils/clflags.ml[324,13609+26]..[324,13609+37])
                    Pexp_apply
                    expression (utils/clflags.ml[324,13609+31]..[324,13609+33])
                      Pexp_ident "/." (utils/clflags.ml[324,13609+31]..[324,13609+33])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[324,13609+27]..[324,13609+30])
                          Pexp_constant PConst_float (10.,None)
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[324,13609+34]..[324,13609+36])
                          Pexp_constant PConst_float (8.,None)
                    ]
            "inline_toplevel_threshold" (utils/clflags.ml[326,13713+2]..[326,13713+27])
              expression (utils/clflags.ml[326,13713+30]..[326,13713+36])
                Pexp_construct "Some" (utils/clflags.ml[326,13713+30]..[326,13713+34])
                Some
                  expression (utils/clflags.ml[326,13713+35]..[326,13713+36])
                    Pexp_constant PConst_int (1,None)
          ]
          None
    ]
  structure_item (utils/clflags.ml[329,13754+0]..[341,14301+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[329,13754+4]..[329,13754+16])
          Ppat_var "o2_arguments" (utils/clflags.ml[329,13754+4]..[329,13754+16])
        expression (utils/clflags.ml[329,13754+19]..[341,14301+1])
          Pexp_record
          [
            "inline_call_cost" (utils/clflags.ml[330,13775+2]..[330,13775+18])
              expression (utils/clflags.ml[330,13775+21]..[330,13775+56])
                Pexp_construct "Some" (utils/clflags.ml[330,13775+21]..[330,13775+25])
                Some
                  expression (utils/clflags.ml[330,13775+26]..[330,13775+56])
                    Pexp_apply
                    expression (utils/clflags.ml[330,13775+29]..[330,13775+30])
                      Pexp_ident "*" (utils/clflags.ml[330,13775+29]..[330,13775+30])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[330,13775+27]..[330,13775+28])
                          Pexp_constant PConst_int (2,None)
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[330,13775+31]..[330,13775+55])
                          Pexp_ident "default_inline_call_cost" (utils/clflags.ml[330,13775+31]..[330,13775+55])
                    ]
            "inline_alloc_cost" (utils/clflags.ml[331,13833+2]..[331,13833+19])
              expression (utils/clflags.ml[331,13833+22]..[331,13833+58])
                Pexp_construct "Some" (utils/clflags.ml[331,13833+22]..[331,13833+26])
                Some
                  expression (utils/clflags.ml[331,13833+27]..[331,13833+58])
                    Pexp_apply
                    expression (utils/clflags.ml[331,13833+30]..[331,13833+31])
                      Pexp_ident "*" (utils/clflags.ml[331,13833+30]..[331,13833+31])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[331,13833+28]..[331,13833+29])
                          Pexp_constant PConst_int (2,None)
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[331,13833+32]..[331,13833+57])
                          Pexp_ident "default_inline_alloc_cost" (utils/clflags.ml[331,13833+32]..[331,13833+57])
                    ]
            "inline_prim_cost" (utils/clflags.ml[332,13893+2]..[332,13893+18])
              expression (utils/clflags.ml[332,13893+21]..[332,13893+56])
                Pexp_construct "Some" (utils/clflags.ml[332,13893+21]..[332,13893+25])
                Some
                  expression (utils/clflags.ml[332,13893+26]..[332,13893+56])
                    Pexp_apply
                    expression (utils/clflags.ml[332,13893+29]..[332,13893+30])
                      Pexp_ident "*" (utils/clflags.ml[332,13893+29]..[332,13893+30])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[332,13893+27]..[332,13893+28])
                          Pexp_constant PConst_int (2,None)
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[332,13893+31]..[332,13893+55])
                          Pexp_ident "default_inline_prim_cost" (utils/clflags.ml[332,13893+31]..[332,13893+55])
                    ]
            "inline_branch_cost" (utils/clflags.ml[333,13951+2]..[333,13951+20])
              expression (utils/clflags.ml[333,13951+23]..[333,13951+60])
                Pexp_construct "Some" (utils/clflags.ml[333,13951+23]..[333,13951+27])
                Some
                  expression (utils/clflags.ml[333,13951+28]..[333,13951+60])
                    Pexp_apply
                    expression (utils/clflags.ml[333,13951+31]..[333,13951+32])
                      Pexp_ident "*" (utils/clflags.ml[333,13951+31]..[333,13951+32])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[333,13951+29]..[333,13951+30])
                          Pexp_constant PConst_int (2,None)
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[333,13951+33]..[333,13951+59])
                          Pexp_ident "default_inline_branch_cost" (utils/clflags.ml[333,13951+33]..[333,13951+59])
                    ]
            "inline_indirect_cost" (utils/clflags.ml[334,14013+2]..[334,14013+22])
              expression (utils/clflags.ml[334,14013+25]..[334,14013+64])
                Pexp_construct "Some" (utils/clflags.ml[334,14013+25]..[334,14013+29])
                Some
                  expression (utils/clflags.ml[334,14013+30]..[334,14013+64])
                    Pexp_apply
                    expression (utils/clflags.ml[334,14013+33]..[334,14013+34])
                      Pexp_ident "*" (utils/clflags.ml[334,14013+33]..[334,14013+34])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[334,14013+31]..[334,14013+32])
                          Pexp_constant PConst_int (2,None)
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[334,14013+35]..[334,14013+63])
                          Pexp_ident "default_inline_indirect_cost" (utils/clflags.ml[334,14013+35]..[334,14013+63])
                    ]
            "inline_lifting_benefit" (utils/clflags.ml[335,14079+2]..[335,14079+24])
              expression (utils/clflags.ml[335,14079+27]..[335,14079+31])
                Pexp_construct "None" (utils/clflags.ml[335,14079+27]..[335,14079+31])
                None
            "inline_branch_factor" (utils/clflags.ml[336,14112+2]..[336,14112+22])
              expression (utils/clflags.ml[336,14112+25]..[336,14112+29])
                Pexp_construct "None" (utils/clflags.ml[336,14112+25]..[336,14112+29])
                None
            "inline_max_depth" (utils/clflags.ml[337,14143+2]..[337,14143+18])
              expression (utils/clflags.ml[337,14143+21]..[337,14143+27])
                Pexp_construct "Some" (utils/clflags.ml[337,14143+21]..[337,14143+25])
                Some
                  expression (utils/clflags.ml[337,14143+26]..[337,14143+27])
                    Pexp_constant PConst_int (2,None)
            "inline_max_unroll" (utils/clflags.ml[338,14172+2]..[338,14172+19])
              expression (utils/clflags.ml[338,14172+22]..[338,14172+26])
                Pexp_construct "None" (utils/clflags.ml[338,14172+22]..[338,14172+26])
                None
            "inline_threshold" (utils/clflags.ml[339,14200+2]..[339,14200+18])
              expression (utils/clflags.ml[339,14200+21]..[339,14200+29])
                Pexp_construct "Some" (utils/clflags.ml[339,14200+21]..[339,14200+25])
                Some
                  expression (utils/clflags.ml[339,14200+26]..[339,14200+29])
                    Pexp_constant PConst_float (25.,None)
            "inline_toplevel_threshold" (utils/clflags.ml[340,14231+2]..[340,14231+27])
              expression (utils/clflags.ml[340,14231+30]..[340,14231+68])
                Pexp_construct "Some" (utils/clflags.ml[340,14231+30]..[340,14231+34])
                Some
                  expression (utils/clflags.ml[340,14231+35]..[340,14231+68])
                    Pexp_apply
                    expression (utils/clflags.ml[340,14231+39]..[340,14231+40])
                      Pexp_ident "*" (utils/clflags.ml[340,14231+39]..[340,14231+40])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[340,14231+36]..[340,14231+38])
                          Pexp_constant PConst_int (25,None)
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[340,14231+41]..[340,14231+67])
                          Pexp_ident "inline_toplevel_multiplier" (utils/clflags.ml[340,14231+41]..[340,14231+67])
                    ]
          ]
          None
    ]
  structure_item (utils/clflags.ml[343,14304+0]..[355,14856+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[343,14304+4]..[343,14304+16])
          Ppat_var "o3_arguments" (utils/clflags.ml[343,14304+4]..[343,14304+16])
        expression (utils/clflags.ml[343,14304+19]..[355,14856+1])
          Pexp_record
          [
            "inline_call_cost" (utils/clflags.ml[344,14325+2]..[344,14325+18])
              expression (utils/clflags.ml[344,14325+21]..[344,14325+56])
                Pexp_construct "Some" (utils/clflags.ml[344,14325+21]..[344,14325+25])
                Some
                  expression (utils/clflags.ml[344,14325+26]..[344,14325+56])
                    Pexp_apply
                    expression (utils/clflags.ml[344,14325+29]..[344,14325+30])
                      Pexp_ident "*" (utils/clflags.ml[344,14325+29]..[344,14325+30])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[344,14325+27]..[344,14325+28])
                          Pexp_constant PConst_int (3,None)
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[344,14325+31]..[344,14325+55])
                          Pexp_ident "default_inline_call_cost" (utils/clflags.ml[344,14325+31]..[344,14325+55])
                    ]
            "inline_alloc_cost" (utils/clflags.ml[345,14383+2]..[345,14383+19])
              expression (utils/clflags.ml[345,14383+22]..[345,14383+58])
                Pexp_construct "Some" (utils/clflags.ml[345,14383+22]..[345,14383+26])
                Some
                  expression (utils/clflags.ml[345,14383+27]..[345,14383+58])
                    Pexp_apply
                    expression (utils/clflags.ml[345,14383+30]..[345,14383+31])
                      Pexp_ident "*" (utils/clflags.ml[345,14383+30]..[345,14383+31])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[345,14383+28]..[345,14383+29])
                          Pexp_constant PConst_int (3,None)
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[345,14383+32]..[345,14383+57])
                          Pexp_ident "default_inline_alloc_cost" (utils/clflags.ml[345,14383+32]..[345,14383+57])
                    ]
            "inline_prim_cost" (utils/clflags.ml[346,14443+2]..[346,14443+18])
              expression (utils/clflags.ml[346,14443+21]..[346,14443+56])
                Pexp_construct "Some" (utils/clflags.ml[346,14443+21]..[346,14443+25])
                Some
                  expression (utils/clflags.ml[346,14443+26]..[346,14443+56])
                    Pexp_apply
                    expression (utils/clflags.ml[346,14443+29]..[346,14443+30])
                      Pexp_ident "*" (utils/clflags.ml[346,14443+29]..[346,14443+30])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[346,14443+27]..[346,14443+28])
                          Pexp_constant PConst_int (3,None)
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[346,14443+31]..[346,14443+55])
                          Pexp_ident "default_inline_prim_cost" (utils/clflags.ml[346,14443+31]..[346,14443+55])
                    ]
            "inline_branch_cost" (utils/clflags.ml[347,14501+2]..[347,14501+20])
              expression (utils/clflags.ml[347,14501+23]..[347,14501+60])
                Pexp_construct "Some" (utils/clflags.ml[347,14501+23]..[347,14501+27])
                Some
                  expression (utils/clflags.ml[347,14501+28]..[347,14501+60])
                    Pexp_apply
                    expression (utils/clflags.ml[347,14501+31]..[347,14501+32])
                      Pexp_ident "*" (utils/clflags.ml[347,14501+31]..[347,14501+32])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[347,14501+29]..[347,14501+30])
                          Pexp_constant PConst_int (3,None)
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[347,14501+33]..[347,14501+59])
                          Pexp_ident "default_inline_branch_cost" (utils/clflags.ml[347,14501+33]..[347,14501+59])
                    ]
            "inline_indirect_cost" (utils/clflags.ml[348,14563+2]..[348,14563+22])
              expression (utils/clflags.ml[348,14563+25]..[348,14563+64])
                Pexp_construct "Some" (utils/clflags.ml[348,14563+25]..[348,14563+29])
                Some
                  expression (utils/clflags.ml[348,14563+30]..[348,14563+64])
                    Pexp_apply
                    expression (utils/clflags.ml[348,14563+33]..[348,14563+34])
                      Pexp_ident "*" (utils/clflags.ml[348,14563+33]..[348,14563+34])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[348,14563+31]..[348,14563+32])
                          Pexp_constant PConst_int (3,None)
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[348,14563+35]..[348,14563+63])
                          Pexp_ident "default_inline_indirect_cost" (utils/clflags.ml[348,14563+35]..[348,14563+63])
                    ]
            "inline_lifting_benefit" (utils/clflags.ml[349,14629+2]..[349,14629+24])
              expression (utils/clflags.ml[349,14629+27]..[349,14629+31])
                Pexp_construct "None" (utils/clflags.ml[349,14629+27]..[349,14629+31])
                None
            "inline_branch_factor" (utils/clflags.ml[350,14662+2]..[350,14662+22])
              expression (utils/clflags.ml[350,14662+25]..[350,14662+32])
                Pexp_construct "Some" (utils/clflags.ml[350,14662+25]..[350,14662+29])
                Some
                  expression (utils/clflags.ml[350,14662+30]..[350,14662+32])
                    Pexp_constant PConst_float (0.,None)
            "inline_max_depth" (utils/clflags.ml[351,14696+2]..[351,14696+18])
              expression (utils/clflags.ml[351,14696+21]..[351,14696+27])
                Pexp_construct "Some" (utils/clflags.ml[351,14696+21]..[351,14696+25])
                Some
                  expression (utils/clflags.ml[351,14696+26]..[351,14696+27])
                    Pexp_constant PConst_int (3,None)
            "inline_max_unroll" (utils/clflags.ml[352,14725+2]..[352,14725+19])
              expression (utils/clflags.ml[352,14725+22]..[352,14725+28])
                Pexp_construct "Some" (utils/clflags.ml[352,14725+22]..[352,14725+26])
                Some
                  expression (utils/clflags.ml[352,14725+27]..[352,14725+28])
                    Pexp_constant PConst_int (1,None)
            "inline_threshold" (utils/clflags.ml[353,14755+2]..[353,14755+18])
              expression (utils/clflags.ml[353,14755+21]..[353,14755+29])
                Pexp_construct "Some" (utils/clflags.ml[353,14755+21]..[353,14755+25])
                Some
                  expression (utils/clflags.ml[353,14755+26]..[353,14755+29])
                    Pexp_constant PConst_float (50.,None)
            "inline_toplevel_threshold" (utils/clflags.ml[354,14786+2]..[354,14786+27])
              expression (utils/clflags.ml[354,14786+30]..[354,14786+68])
                Pexp_construct "Some" (utils/clflags.ml[354,14786+30]..[354,14786+34])
                Some
                  expression (utils/clflags.ml[354,14786+35]..[354,14786+68])
                    Pexp_apply
                    expression (utils/clflags.ml[354,14786+39]..[354,14786+40])
                      Pexp_ident "*" (utils/clflags.ml[354,14786+39]..[354,14786+40])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[354,14786+36]..[354,14786+38])
                          Pexp_constant PConst_int (50,None)
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[354,14786+41]..[354,14786+67])
                          Pexp_ident "inline_toplevel_multiplier" (utils/clflags.ml[354,14786+41]..[354,14786+67])
                    ]
          ]
          None
    ]
  structure_item (utils/clflags.ml[357,14859+0]..[357,14859+23])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[357,14859+4]..[357,14859+14])
          Ppat_var "all_passes" (utils/clflags.ml[357,14859+4]..[357,14859+14])
        expression (utils/clflags.ml[357,14859+17]..[357,14859+23])
          Pexp_apply
          expression (utils/clflags.ml[357,14859+17]..[357,14859+20])
            Pexp_ident "ref" (utils/clflags.ml[357,14859+17]..[357,14859+20])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[357,14859+21]..[357,14859+23])
                Pexp_construct "[]" (utils/clflags.ml[357,14859+21]..[357,14859+23])
                None
          ]
    ]
  structure_item (utils/clflags.ml[358,14883+0]..[358,14883+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[358,14883+4]..[358,14883+22])
          Ppat_var "dumped_passes_list" (utils/clflags.ml[358,14883+4]..[358,14883+22])
        expression (utils/clflags.ml[358,14883+25]..[358,14883+31])
          Pexp_apply
          expression (utils/clflags.ml[358,14883+25]..[358,14883+28])
            Pexp_ident "ref" (utils/clflags.ml[358,14883+25]..[358,14883+28])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[358,14883+29]..[358,14883+31])
                Pexp_construct "[]" (utils/clflags.ml[358,14883+29]..[358,14883+31])
                None
          ]
    ]
  structure_item (utils/clflags.ml[359,14915+0]..[361,14969+32])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[359,14915+4]..[359,14915+15])
          Ppat_var "dumped_pass" (utils/clflags.ml[359,14915+4]..[359,14915+15])
        expression (utils/clflags.ml[359,14915+16]..[361,14969+32]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/clflags.ml[359,14915+16]..[359,14915+17])
            Ppat_var "s" (utils/clflags.ml[359,14915+16]..[359,14915+17])
          expression (utils/clflags.ml[360,14935+2]..[361,14969+32])
            Pexp_sequence
            expression (utils/clflags.ml[360,14935+2]..[360,14935+32])
              Pexp_assert
              expression (utils/clflags.ml[360,14935+8]..[360,14935+32])
                Pexp_apply
                expression (utils/clflags.ml[360,14935+9]..[360,14935+17])
                  Pexp_ident "List.mem" (utils/clflags.ml[360,14935+9]..[360,14935+17])
                [
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[360,14935+18]..[360,14935+19])
                      Pexp_ident "s" (utils/clflags.ml[360,14935+18]..[360,14935+19])
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[360,14935+20]..[360,14935+31])
                      Pexp_apply
                      expression (utils/clflags.ml[360,14935+20]..[360,14935+21])
                        Pexp_ident "!" (utils/clflags.ml[360,14935+20]..[360,14935+21])
                      [
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[360,14935+21]..[360,14935+31])
                            Pexp_ident "all_passes" (utils/clflags.ml[360,14935+21]..[360,14935+31])
                      ]
                ]
            expression (utils/clflags.ml[361,14969+2]..[361,14969+32])
              Pexp_apply
              expression (utils/clflags.ml[361,14969+2]..[361,14969+10])
                Pexp_ident "List.mem" (utils/clflags.ml[361,14969+2]..[361,14969+10])
              [
                <arg>
                Nolabel
                  expression (utils/clflags.ml[361,14969+11]..[361,14969+12])
                    Pexp_ident "s" (utils/clflags.ml[361,14969+11]..[361,14969+12])
                <arg>
                Nolabel
                  expression (utils/clflags.ml[361,14969+13]..[361,14969+32])
                    Pexp_apply
                    expression (utils/clflags.ml[361,14969+13]..[361,14969+14])
                      Pexp_ident "!" (utils/clflags.ml[361,14969+13]..[361,14969+14])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[361,14969+14]..[361,14969+32])
                          Pexp_ident "dumped_passes_list" (utils/clflags.ml[361,14969+14]..[361,14969+32])
                    ]
              ]
    ]
  structure_item (utils/clflags.ml[363,15003+0]..[373,15306+5])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[363,15003+4]..[363,15003+19])
          Ppat_var "set_dumped_pass" (utils/clflags.ml[363,15003+4]..[363,15003+19])
        expression (utils/clflags.ml[363,15003+20]..[373,15306+5]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/clflags.ml[363,15003+20]..[363,15003+21])
            Ppat_var "s" (utils/clflags.ml[363,15003+20]..[363,15003+21])
          expression (utils/clflags.ml[363,15003+22]..[373,15306+5]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/clflags.ml[363,15003+22]..[363,15003+29])
              Ppat_var "enabled" (utils/clflags.ml[363,15003+22]..[363,15003+29])
            expression (utils/clflags.ml[364,15035+2]..[373,15306+5])
              Pexp_ifthenelse
              expression (utils/clflags.ml[364,15035+5]..[364,15035+29])
                Pexp_apply
                expression (utils/clflags.ml[364,15035+6]..[364,15035+14])
                  Pexp_ident "List.mem" (utils/clflags.ml[364,15035+6]..[364,15035+14])
                [
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[364,15035+15]..[364,15035+16])
                      Pexp_ident "s" (utils/clflags.ml[364,15035+15]..[364,15035+16])
                  <arg>
                  Nolabel
                    expression (utils/clflags.ml[364,15035+17]..[364,15035+28])
                      Pexp_apply
                      expression (utils/clflags.ml[364,15035+17]..[364,15035+18])
                        Pexp_ident "!" (utils/clflags.ml[364,15035+17]..[364,15035+18])
                      [
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[364,15035+18]..[364,15035+28])
                            Pexp_ident "all_passes" (utils/clflags.ml[364,15035+18]..[364,15035+28])
                      ]
                ]
              expression (utils/clflags.ml[364,15035+35]..[373,15306+5])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (utils/clflags.ml[365,15076+8]..[365,15076+24])
                      Ppat_var "passes_without_s" (utils/clflags.ml[365,15076+8]..[365,15076+24])
                    expression (utils/clflags.ml[365,15076+27]..[365,15076+67])
                      Pexp_apply
                      expression (utils/clflags.ml[365,15076+27]..[365,15076+38])
                        Pexp_ident "List.filter" (utils/clflags.ml[365,15076+27]..[365,15076+38])
                      [
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[365,15076+39]..[365,15076+47])
                            Pexp_apply
                            expression (utils/clflags.ml[365,15076+40]..[365,15076+44])
                              Pexp_ident "<>" (utils/clflags.ml[365,15076+40]..[365,15076+44])
                            [
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[365,15076+45]..[365,15076+46])
                                  Pexp_ident "s" (utils/clflags.ml[365,15076+45]..[365,15076+46])
                            ]
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[365,15076+48]..[365,15076+67])
                            Pexp_apply
                            expression (utils/clflags.ml[365,15076+48]..[365,15076+49])
                              Pexp_ident "!" (utils/clflags.ml[365,15076+48]..[365,15076+49])
                            [
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[365,15076+49]..[365,15076+67])
                                  Pexp_ident "dumped_passes_list" (utils/clflags.ml[365,15076+49]..[365,15076+67])
                            ]
                      ]
                ]
                expression (utils/clflags.ml[366,15147+4]..[372,15266+39])
                  Pexp_let Nonrec
                  [
                    <def>
                      pattern (utils/clflags.ml[366,15147+8]..[366,15147+21])
                        Ppat_var "dumped_passes" (utils/clflags.ml[366,15147+8]..[366,15147+21])
                      expression (utils/clflags.ml[367,15171+6]..[370,15234+24])
                        Pexp_ifthenelse
                        expression (utils/clflags.ml[367,15171+9]..[367,15171+16])
                          Pexp_ident "enabled" (utils/clflags.ml[367,15171+9]..[367,15171+16])
                        expression (utils/clflags.ml[368,15193+8]..[368,15193+29])
                          Pexp_construct "::" (utils/clflags.ml[368,15193+10]..[368,15193+12])
                          Some
                            expression (utils/clflags.ml[368,15193+8]..[368,15193+29]) ghost
                              Pexp_tuple
                              [
                                expression (utils/clflags.ml[368,15193+8]..[368,15193+9])
                                  Pexp_ident "s" (utils/clflags.ml[368,15193+8]..[368,15193+9])
                                expression (utils/clflags.ml[368,15193+13]..[368,15193+29])
                                  Pexp_ident "passes_without_s" (utils/clflags.ml[368,15193+13]..[368,15193+29])
                              ]
                        Some
                          expression (utils/clflags.ml[370,15234+8]..[370,15234+24])
                            Pexp_ident "passes_without_s" (utils/clflags.ml[370,15234+8]..[370,15234+24])
                  ]
                  expression (utils/clflags.ml[372,15266+4]..[372,15266+39])
                    Pexp_apply
                    expression (utils/clflags.ml[372,15266+23]..[372,15266+25])
                      Pexp_ident ":=" (utils/clflags.ml[372,15266+23]..[372,15266+25])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[372,15266+4]..[372,15266+22])
                          Pexp_ident "dumped_passes_list" (utils/clflags.ml[372,15266+4]..[372,15266+22])
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[372,15266+26]..[372,15266+39])
                          Pexp_ident "dumped_passes" (utils/clflags.ml[372,15266+26]..[372,15266+39])
                    ]
              None
    ]
  structure_item (utils/clflags.ml[375,15313+0]..[375,15313+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[375,15313+4]..[375,15313+18])
          Ppat_var "dump_into_file" (utils/clflags.ml[375,15313+4]..[375,15313+18])
        expression (utils/clflags.ml[375,15313+21]..[375,15313+30])
          Pexp_apply
          expression (utils/clflags.ml[375,15313+21]..[375,15313+24])
            Pexp_ident "ref" (utils/clflags.ml[375,15313+21]..[375,15313+24])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[375,15313+25]..[375,15313+30])
                Pexp_construct "false" (utils/clflags.ml[375,15313+25]..[375,15313+30])
                None
          ]
    ]
  structure_item (utils/clflags.ml[377,15367+0]..[382,15483+1])
    Pstr_type Rec
    [
      type_declaration "env_reader" (utils/clflags.ml[377,15367+8]..[377,15367+18]) (utils/clflags.ml[377,15367+0]..[382,15483+1])
        ptype_params =
          [
            core_type (utils/clflags.ml[377,15367+5]..[377,15367+7])
              Ptyp_var a
          ]
        ptype_cstrs =
          []
        ptype_kind =
          Ptype_record
            [
              (utils/clflags.ml[378,15390+2]..[378,15390+30])
                Immutable
                "parse" (utils/clflags.ml[378,15390+2]..[378,15390+7])                core_type (utils/clflags.ml[378,15390+10]..[378,15390+29])
                  Ptyp_arrow
                  Nolabel
                  core_type (utils/clflags.ml[378,15390+10]..[378,15390+16])
                    Ptyp_constr "string" (utils/clflags.ml[378,15390+10]..[378,15390+16])
                    []
                  core_type (utils/clflags.ml[378,15390+20]..[378,15390+29])
                    Ptyp_constr "option" (utils/clflags.ml[378,15390+23]..[378,15390+29])
                    [
                      core_type (utils/clflags.ml[378,15390+20]..[378,15390+22])
                        Ptyp_var a
                    ]
              (utils/clflags.ml[379,15421+2]..[379,15421+23])
                Immutable
                "print" (utils/clflags.ml[379,15421+2]..[379,15421+7])                core_type (utils/clflags.ml[379,15421+10]..[379,15421+22])
                  Ptyp_arrow
                  Nolabel
                  core_type (utils/clflags.ml[379,15421+10]..[379,15421+12])
                    Ptyp_var a
                  core_type (utils/clflags.ml[379,15421+16]..[379,15421+22])
                    Ptyp_constr "string" (utils/clflags.ml[379,15421+16]..[379,15421+22])
                    []
              (utils/clflags.ml[380,15445+2]..[380,15445+17])
                Immutable
                "usage" (utils/clflags.ml[380,15445+2]..[380,15445+7])                core_type (utils/clflags.ml[380,15445+10]..[380,15445+16])
                  Ptyp_constr "string" (utils/clflags.ml[380,15445+10]..[380,15445+16])
                  []
              (utils/clflags.ml[381,15463+2]..[381,15463+19])
                Immutable
                "env_var" (utils/clflags.ml[381,15463+2]..[381,15463+9])                core_type (utils/clflags.ml[381,15463+12]..[381,15463+18])
                  Ptyp_constr "string" (utils/clflags.ml[381,15463+12]..[381,15463+18])
                  []
            ]
        ptype_private = Public
        ptype_manifest =
          None
    ]
  structure_item (utils/clflags.ml[384,15486+0]..[384,15486+20])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[384,15486+4]..[384,15486+9])
          Ppat_var "color" (utils/clflags.ml[384,15486+4]..[384,15486+9])
        expression (utils/clflags.ml[384,15486+12]..[384,15486+20])
          Pexp_apply
          expression (utils/clflags.ml[384,15486+12]..[384,15486+15])
            Pexp_ident "ref" (utils/clflags.ml[384,15486+12]..[384,15486+15])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[384,15486+16]..[384,15486+20])
                Pexp_construct "None" (utils/clflags.ml[384,15486+16]..[384,15486+20])
                None
          ]
    ]
  structure_item (utils/clflags.ml[386,15521+0]..[398,15904+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[386,15521+4]..[386,15521+16])
          Ppat_var "color_reader" (utils/clflags.ml[386,15521+4]..[386,15521+16])
        expression (utils/clflags.ml[386,15521+19]..[398,15904+1])
          Pexp_record
          [
            "parse" (utils/clflags.ml[387,15542+2]..[387,15542+7])
              expression (utils/clflags.ml[387,15542+10]..[391,15679+16])
                Pexp_function
                [
                  <case>
                    pattern (utils/clflags.ml[388,15562+6]..[388,15562+12])
                      Ppat_constant PConst_string("auto",(utils/clflags.ml[388,15562+7]..[388,15562+11]),None)
                    expression (utils/clflags.ml[388,15562+16]..[388,15562+36])
                      Pexp_construct "Some" (utils/clflags.ml[388,15562+16]..[388,15562+20])
                      Some
                        expression (utils/clflags.ml[388,15562+21]..[388,15562+36])
                          Pexp_construct "Misc.Color.Auto" (utils/clflags.ml[388,15562+21]..[388,15562+36])
                          None
                  <case>
                    pattern (utils/clflags.ml[389,15599+6]..[389,15599+14])
                      Ppat_constant PConst_string("always",(utils/clflags.ml[389,15599+7]..[389,15599+13]),None)
                    expression (utils/clflags.ml[389,15599+18]..[389,15599+40])
                      Pexp_construct "Some" (utils/clflags.ml[389,15599+18]..[389,15599+22])
                      Some
                        expression (utils/clflags.ml[389,15599+23]..[389,15599+40])
                          Pexp_construct "Misc.Color.Always" (utils/clflags.ml[389,15599+23]..[389,15599+40])
                          None
                  <case>
                    pattern (utils/clflags.ml[390,15640+6]..[390,15640+13])
                      Ppat_constant PConst_string("never",(utils/clflags.ml[390,15640+7]..[390,15640+12]),None)
                    expression (utils/clflags.ml[390,15640+17]..[390,15640+38])
                      Pexp_construct "Some" (utils/clflags.ml[390,15640+17]..[390,15640+21])
                      Some
                        expression (utils/clflags.ml[390,15640+22]..[390,15640+38])
                          Pexp_construct "Misc.Color.Never" (utils/clflags.ml[390,15640+22]..[390,15640+38])
                          None
                  <case>
                    pattern (utils/clflags.ml[391,15679+6]..[391,15679+7])
                      Ppat_any
                    expression (utils/clflags.ml[391,15679+11]..[391,15679+15])
                      Pexp_construct "None" (utils/clflags.ml[391,15679+11]..[391,15679+15])
                      None
                ]
            "print" (utils/clflags.ml[392,15697+2]..[392,15697+7])
              expression (utils/clflags.ml[392,15697+10]..[395,15785+34])
                Pexp_function
                [
                  <case>
                    pattern (utils/clflags.ml[393,15717+6]..[393,15717+21])
                      Ppat_construct "Misc.Color.Auto" (utils/clflags.ml[393,15717+6]..[393,15717+21])
                      None
                    expression (utils/clflags.ml[393,15717+25]..[393,15717+31])
                      Pexp_constant PConst_string("auto",(utils/clflags.ml[393,15717+26]..[393,15717+30]),None)
                  <case>
                    pattern (utils/clflags.ml[394,15749+6]..[394,15749+23])
                      Ppat_construct "Misc.Color.Always" (utils/clflags.ml[394,15749+6]..[394,15749+23])
                      None
                    expression (utils/clflags.ml[394,15749+27]..[394,15749+35])
                      Pexp_constant PConst_string("always",(utils/clflags.ml[394,15749+28]..[394,15749+34]),None)
                  <case>
                    pattern (utils/clflags.ml[395,15785+6]..[395,15785+22])
                      Ppat_construct "Misc.Color.Never" (utils/clflags.ml[395,15785+6]..[395,15785+22])
                      None
                    expression (utils/clflags.ml[395,15785+26]..[395,15785+33])
                      Pexp_constant PConst_string("never",(utils/clflags.ml[395,15785+27]..[395,15785+32]),None)
                ]
            "usage" (utils/clflags.ml[396,15821+2]..[396,15821+7])
              expression (utils/clflags.ml[396,15821+10]..[396,15821+54])
                Pexp_constant PConst_string("expected \"auto\", \"always\" or \"never\"",(utils/clflags.ml[396,15821+11]..[396,15821+53]),None)
            "env_var" (utils/clflags.ml[397,15877+2]..[397,15877+9])
              expression (utils/clflags.ml[397,15877+12]..[397,15877+25])
                Pexp_constant PConst_string("OCAML_COLOR",(utils/clflags.ml[397,15877+13]..[397,15877+24]),None)
          ]
          None
    ]
  structure_item (utils/clflags.ml[400,15907+0]..[400,15907+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[400,15907+4]..[400,15907+15])
          Ppat_var "error_style" (utils/clflags.ml[400,15907+4]..[400,15907+15])
        expression (utils/clflags.ml[400,15907+18]..[400,15907+26])
          Pexp_apply
          expression (utils/clflags.ml[400,15907+18]..[400,15907+21])
            Pexp_ident "ref" (utils/clflags.ml[400,15907+18]..[400,15907+21])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[400,15907+22]..[400,15907+26])
                Pexp_construct "None" (utils/clflags.ml[400,15907+22]..[400,15907+26])
                None
          ]
    ]
  structure_item (utils/clflags.ml[402,15954+0]..[412,16314+1])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[402,15954+4]..[402,15954+22])
          Ppat_var "error_style_reader" (utils/clflags.ml[402,15954+4]..[402,15954+22])
        expression (utils/clflags.ml[402,15954+25]..[412,16314+1])
          Pexp_record
          [
            "parse" (utils/clflags.ml[403,15981+2]..[403,15981+7])
              expression (utils/clflags.ml[403,15981+10]..[406,16101+16])
                Pexp_function
                [
                  <case>
                    pattern (utils/clflags.ml[404,16001+6]..[404,16001+18])
                      Ppat_constant PConst_string("contextual",(utils/clflags.ml[404,16001+7]..[404,16001+17]),None)
                    expression (utils/clflags.ml[404,16001+22]..[404,16001+54])
                      Pexp_construct "Some" (utils/clflags.ml[404,16001+22]..[404,16001+26])
                      Some
                        expression (utils/clflags.ml[404,16001+27]..[404,16001+54])
                          Pexp_construct "Misc.Error_style.Contextual" (utils/clflags.ml[404,16001+27]..[404,16001+54])
                          None
                  <case>
                    pattern (utils/clflags.ml[405,16056+6]..[405,16056+13])
                      Ppat_constant PConst_string("short",(utils/clflags.ml[405,16056+7]..[405,16056+12]),None)
                    expression (utils/clflags.ml[405,16056+17]..[405,16056+44])
                      Pexp_construct "Some" (utils/clflags.ml[405,16056+17]..[405,16056+21])
                      Some
                        expression (utils/clflags.ml[405,16056+22]..[405,16056+44])
                          Pexp_construct "Misc.Error_style.Short" (utils/clflags.ml[405,16056+22]..[405,16056+44])
                          None
                  <case>
                    pattern (utils/clflags.ml[406,16101+6]..[406,16101+7])
                      Ppat_any
                    expression (utils/clflags.ml[406,16101+11]..[406,16101+15])
                      Pexp_construct "None" (utils/clflags.ml[406,16101+11]..[406,16101+15])
                      None
                ]
            "print" (utils/clflags.ml[407,16119+2]..[407,16119+7])
              expression (utils/clflags.ml[407,16119+10]..[409,16189+40])
                Pexp_function
                [
                  <case>
                    pattern (utils/clflags.ml[408,16139+6]..[408,16139+33])
                      Ppat_construct "Misc.Error_style.Contextual" (utils/clflags.ml[408,16139+6]..[408,16139+33])
                      None
                    expression (utils/clflags.ml[408,16139+37]..[408,16139+49])
                      Pexp_constant PConst_string("contextual",(utils/clflags.ml[408,16139+38]..[408,16139+48]),None)
                  <case>
                    pattern (utils/clflags.ml[409,16189+6]..[409,16189+28])
                      Ppat_construct "Misc.Error_style.Short" (utils/clflags.ml[409,16189+6]..[409,16189+28])
                      None
                    expression (utils/clflags.ml[409,16189+32]..[409,16189+39])
                      Pexp_constant PConst_string("short",(utils/clflags.ml[409,16189+33]..[409,16189+38]),None)
                ]
            "usage" (utils/clflags.ml[410,16231+2]..[410,16231+7])
              expression (utils/clflags.ml[410,16231+10]..[410,16231+48])
                Pexp_constant PConst_string("expected \"contextual\" or \"short\"",(utils/clflags.ml[410,16231+11]..[410,16231+47]),None)
            "env_var" (utils/clflags.ml[411,16281+2]..[411,16281+9])
              expression (utils/clflags.ml[411,16281+12]..[411,16281+31])
                Pexp_constant PConst_string("OCAML_ERROR_STYLE",(utils/clflags.ml[411,16281+13]..[411,16281+30]),None)
          ]
          None
    ]
  structure_item (utils/clflags.ml[414,16317+0]..[414,16317+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[414,16317+4]..[414,16317+17])
          Ppat_var "unboxed_types" (utils/clflags.ml[414,16317+4]..[414,16317+17])
        expression (utils/clflags.ml[414,16317+20]..[414,16317+29])
          Pexp_apply
          expression (utils/clflags.ml[414,16317+20]..[414,16317+23])
            Pexp_ident "ref" (utils/clflags.ml[414,16317+20]..[414,16317+23])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[414,16317+24]..[414,16317+29])
                Pexp_construct "false" (utils/clflags.ml[414,16317+24]..[414,16317+29])
                None
          ]
    ]
  structure_item (utils/clflags.ml[417,16397+0]..[456,17533+3])
    Pstr_module
    "Compiler_ir" (utils/clflags.ml[417,16397+7]..[417,16397+18])
      module_expr (utils/clflags.ml[417,16397+21]..[456,17533+3])
        Pmod_structure
        [
          structure_item (utils/clflags.ml[418,16425+2]..[418,16425+17])
            Pstr_type Rec
            [
              type_declaration "t" (utils/clflags.ml[418,16425+7]..[418,16425+8]) (utils/clflags.ml[418,16425+2]..[418,16425+17])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (utils/clflags.ml[418,16425+11]..[418,16425+17])
                        "Linear" (utils/clflags.ml[418,16425+11]..[418,16425+17])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (utils/clflags.ml[420,16444+2]..[422,16470+3])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/clflags.ml[420,16444+6]..[420,16444+9])
                  Ppat_var "all" (utils/clflags.ml[420,16444+6]..[420,16444+9])
                expression (utils/clflags.ml[420,16444+12]..[422,16470+3])
                  Pexp_construct "::" (utils/clflags.ml[421,16458+4]..[422,16470+3]) ghost
                  Some
                    expression (utils/clflags.ml[421,16458+4]..[422,16470+3]) ghost
                      Pexp_tuple
                      [
                        expression (utils/clflags.ml[421,16458+4]..[421,16458+10])
                          Pexp_construct "Linear" (utils/clflags.ml[421,16458+4]..[421,16458+10])
                          None
                        expression (utils/clflags.ml[422,16470+2]..[422,16470+3]) ghost
                          Pexp_construct "[]" (utils/clflags.ml[422,16470+2]..[422,16470+3]) ghost
                          None
                      ]
            ]
          structure_item (utils/clflags.ml[424,16475+2]..[429,16560+18])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/clflags.ml[424,16475+6]..[424,16475+15])
                  Ppat_var "extension" (utils/clflags.ml[424,16475+6]..[424,16475+15])
                expression (utils/clflags.ml[424,16475+16]..[429,16560+18]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/clflags.ml[424,16475+16]..[424,16475+17])
                    Ppat_var "t" (utils/clflags.ml[424,16475+16]..[424,16475+17])
                  expression (utils/clflags.ml[425,16495+4]..[429,16560+18])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (utils/clflags.ml[425,16495+8]..[425,16495+11])
                          Ppat_var "ext" (utils/clflags.ml[425,16495+8]..[425,16495+11])
                        expression (utils/clflags.ml[426,16509+4]..[427,16526+26])
                          Pexp_match
                          expression (utils/clflags.ml[426,16509+10]..[426,16509+11])
                            Pexp_ident "t" (utils/clflags.ml[426,16509+10]..[426,16509+11])
                          [
                            <case>
                              pattern (utils/clflags.ml[427,16526+8]..[427,16526+14])
                                Ppat_construct "Linear" (utils/clflags.ml[427,16526+8]..[427,16526+14])
                                None
                              expression (utils/clflags.ml[427,16526+18]..[427,16526+26])
                                Pexp_constant PConst_string("linear",(utils/clflags.ml[427,16526+19]..[427,16526+25]),None)
                          ]
                    ]
                    expression (utils/clflags.ml[429,16560+4]..[429,16560+18])
                      Pexp_apply
                      expression (utils/clflags.ml[429,16560+13]..[429,16560+14])
                        Pexp_ident "^" (utils/clflags.ml[429,16560+13]..[429,16560+14])
                      [
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[429,16560+4]..[429,16560+12])
                            Pexp_constant PConst_string(".cmir-",(utils/clflags.ml[429,16560+5]..[429,16560+11]),None)
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[429,16560+15]..[429,16560+18])
                            Pexp_ident "ext" (utils/clflags.ml[429,16560+15]..[429,16560+18])
                      ]
            ]
          structure_item (utils/clflags.ml[436,16905+2]..[455,17525+7])
            Pstr_value Nonrec
            [
              <def>
                  attribute "ocaml.doc"
                    [
                      structure_item (utils/clflags.ml[431,16580+2]..[435,16864+40])
                        Pstr_eval
                        expression (utils/clflags.ml[431,16580+2]..[435,16864+40])
                          Pexp_constant PConst_string(" [extract_extension_with_pass filename] returns the IR whose extension\n      is a prefix of the extension of [filename], and the suffix,\n      which can be used to distinguish different passes on the same IR.\n      For example, [extract_extension_with_pass \"foo.cmir-linear123\"]\n      returns [Some (Linear, \"123\")]. ",(utils/clflags.ml[431,16580+2]..[435,16864+40]),None)
                    ]
                pattern (utils/clflags.ml[436,16905+6]..[436,16905+33])
                  Ppat_var "extract_extension_with_pass" (utils/clflags.ml[436,16905+6]..[436,16905+33])
                expression (utils/clflags.ml[436,16905+34]..[455,17525+7]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/clflags.ml[436,16905+34]..[436,16905+42])
                    Ppat_var "filename" (utils/clflags.ml[436,16905+34]..[436,16905+42])
                  expression (utils/clflags.ml[437,16950+4]..[455,17525+7])
                    Pexp_let Nonrec
                    [
                      <def>
                        pattern (utils/clflags.ml[437,16950+8]..[437,16950+11])
                          Ppat_var "ext" (utils/clflags.ml[437,16950+8]..[437,16950+11])
                        expression (utils/clflags.ml[437,16950+14]..[437,16950+41])
                          Pexp_apply
                          expression (utils/clflags.ml[437,16950+14]..[437,16950+32])
                            Pexp_ident "Filename.extension" (utils/clflags.ml[437,16950+14]..[437,16950+32])
                          [
                            <arg>
                            Nolabel
                              expression (utils/clflags.ml[437,16950+33]..[437,16950+41])
                                Pexp_ident "filename" (utils/clflags.ml[437,16950+33]..[437,16950+41])
                          ]
                    ]
                    expression (utils/clflags.ml[438,16995+4]..[455,17525+7])
                      Pexp_let Nonrec
                      [
                        <def>
                          pattern (utils/clflags.ml[438,16995+8]..[438,16995+15])
                            Ppat_var "ext_len" (utils/clflags.ml[438,16995+8]..[438,16995+15])
                          expression (utils/clflags.ml[438,16995+18]..[438,16995+35])
                            Pexp_apply
                            expression (utils/clflags.ml[438,16995+18]..[438,16995+31])
                              Pexp_ident "String.length" (utils/clflags.ml[438,16995+18]..[438,16995+31])
                            [
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[438,16995+32]..[438,16995+35])
                                  Pexp_ident "ext" (utils/clflags.ml[438,16995+32]..[438,16995+35])
                            ]
                      ]
                      expression (utils/clflags.ml[439,17034+4]..[455,17525+7])
                        Pexp_ifthenelse
                        expression (utils/clflags.ml[439,17034+7]..[439,17034+19])
                          Pexp_apply
                          expression (utils/clflags.ml[439,17034+15]..[439,17034+17])
                            Pexp_ident "<=" (utils/clflags.ml[439,17034+15]..[439,17034+17])
                          [
                            <arg>
                            Nolabel
                              expression (utils/clflags.ml[439,17034+7]..[439,17034+14])
                                Pexp_ident "ext_len" (utils/clflags.ml[439,17034+7]..[439,17034+14])
                            <arg>
                            Nolabel
                              expression (utils/clflags.ml[439,17034+18]..[439,17034+19])
                                Pexp_constant PConst_int (0,None)
                          ]
                        expression (utils/clflags.ml[439,17034+25]..[439,17034+29])
                          Pexp_construct "None" (utils/clflags.ml[439,17034+25]..[439,17034+29])
                          None
                        Some
                          expression (utils/clflags.ml[440,17064+9]..[455,17525+7])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (utils/clflags.ml[441,17079+10]..[441,17079+19])
                                  Ppat_var "is_prefix" (utils/clflags.ml[441,17079+10]..[441,17079+19])
                                expression (utils/clflags.ml[441,17079+20]..[444,17175+54]) ghost
                                  Pexp_fun
                                  Nolabel
                                  None
                                  pattern (utils/clflags.ml[441,17079+20]..[441,17079+22])
                                    Ppat_var "ir" (utils/clflags.ml[441,17079+20]..[441,17079+22])
                                  expression (utils/clflags.ml[442,17104+8]..[444,17175+54])
                                    Pexp_let Nonrec
                                    [
                                      <def>
                                        pattern (utils/clflags.ml[442,17104+12]..[442,17104+13])
                                          Ppat_var "s" (utils/clflags.ml[442,17104+12]..[442,17104+13])
                                        expression (utils/clflags.ml[442,17104+16]..[442,17104+28])
                                          Pexp_apply
                                          expression (utils/clflags.ml[442,17104+16]..[442,17104+25])
                                            Pexp_ident "extension" (utils/clflags.ml[442,17104+16]..[442,17104+25])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/clflags.ml[442,17104+26]..[442,17104+28])
                                                Pexp_ident "ir" (utils/clflags.ml[442,17104+26]..[442,17104+28])
                                          ]
                                    ]
                                    expression (utils/clflags.ml[443,17136+8]..[444,17175+54])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (utils/clflags.ml[443,17136+12]..[443,17136+17])
                                            Ppat_var "s_len" (utils/clflags.ml[443,17136+12]..[443,17136+17])
                                          expression (utils/clflags.ml[443,17136+20]..[443,17136+35])
                                            Pexp_apply
                                            expression (utils/clflags.ml[443,17136+20]..[443,17136+33])
                                              Pexp_ident "String.length" (utils/clflags.ml[443,17136+20]..[443,17136+33])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/clflags.ml[443,17136+34]..[443,17136+35])
                                                  Pexp_ident "s" (utils/clflags.ml[443,17136+34]..[443,17136+35])
                                            ]
                                      ]
                                      expression (utils/clflags.ml[444,17175+8]..[444,17175+54])
                                        Pexp_apply
                                        expression (utils/clflags.ml[444,17175+25]..[444,17175+27])
                                          Pexp_ident "&&" (utils/clflags.ml[444,17175+25]..[444,17175+27])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/clflags.ml[444,17175+8]..[444,17175+24])
                                              Pexp_apply
                                              expression (utils/clflags.ml[444,17175+14]..[444,17175+16])
                                                Pexp_ident "<=" (utils/clflags.ml[444,17175+14]..[444,17175+16])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/clflags.ml[444,17175+8]..[444,17175+13])
                                                    Pexp_ident "s_len" (utils/clflags.ml[444,17175+8]..[444,17175+13])
                                                <arg>
                                                Nolabel
                                                  expression (utils/clflags.ml[444,17175+17]..[444,17175+24])
                                                    Pexp_ident "ext_len" (utils/clflags.ml[444,17175+17]..[444,17175+24])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (utils/clflags.ml[444,17175+28]..[444,17175+54])
                                              Pexp_apply
                                              expression (utils/clflags.ml[444,17175+30]..[444,17175+31])
                                                Pexp_ident "=" (utils/clflags.ml[444,17175+30]..[444,17175+31])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/clflags.ml[444,17175+28]..[444,17175+29])
                                                    Pexp_ident "s" (utils/clflags.ml[444,17175+28]..[444,17175+29])
                                                <arg>
                                                Nolabel
                                                  expression (utils/clflags.ml[444,17175+32]..[444,17175+54])
                                                    Pexp_apply
                                                    expression (utils/clflags.ml[444,17175+32]..[444,17175+42])
                                                      Pexp_ident "String.sub" (utils/clflags.ml[444,17175+32]..[444,17175+42])
                                                    [
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/clflags.ml[444,17175+43]..[444,17175+46])
                                                          Pexp_ident "ext" (utils/clflags.ml[444,17175+43]..[444,17175+46])
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/clflags.ml[444,17175+47]..[444,17175+48])
                                                          Pexp_constant PConst_int (0,None)
                                                      <arg>
                                                      Nolabel
                                                        expression (utils/clflags.ml[444,17175+49]..[444,17175+54])
                                                          Pexp_ident "s_len" (utils/clflags.ml[444,17175+49]..[444,17175+54])
                                                    ]
                                              ]
                                        ]
                            ]
                            expression (utils/clflags.ml[446,17239+6]..[454,17480+44])
                              Pexp_let Nonrec
                              [
                                <def>
                                  pattern (utils/clflags.ml[446,17239+10]..[446,17239+21])
                                    Ppat_var "drop_prefix" (utils/clflags.ml[446,17239+10]..[446,17239+21])
                                  expression (utils/clflags.ml[446,17239+22]..[449,17337+46]) ghost
                                    Pexp_fun
                                    Nolabel
                                    None
                                    pattern (utils/clflags.ml[446,17239+22]..[446,17239+24])
                                      Ppat_var "ir" (utils/clflags.ml[446,17239+22]..[446,17239+24])
                                    expression (utils/clflags.ml[447,17266+8]..[449,17337+46])
                                      Pexp_let Nonrec
                                      [
                                        <def>
                                          pattern (utils/clflags.ml[447,17266+12]..[447,17266+13])
                                            Ppat_var "s" (utils/clflags.ml[447,17266+12]..[447,17266+13])
                                          expression (utils/clflags.ml[447,17266+16]..[447,17266+28])
                                            Pexp_apply
                                            expression (utils/clflags.ml[447,17266+16]..[447,17266+25])
                                              Pexp_ident "extension" (utils/clflags.ml[447,17266+16]..[447,17266+25])
                                            [
                                              <arg>
                                              Nolabel
                                                expression (utils/clflags.ml[447,17266+26]..[447,17266+28])
                                                  Pexp_ident "ir" (utils/clflags.ml[447,17266+26]..[447,17266+28])
                                            ]
                                      ]
                                      expression (utils/clflags.ml[448,17298+8]..[449,17337+46])
                                        Pexp_let Nonrec
                                        [
                                          <def>
                                            pattern (utils/clflags.ml[448,17298+12]..[448,17298+17])
                                              Ppat_var "s_len" (utils/clflags.ml[448,17298+12]..[448,17298+17])
                                            expression (utils/clflags.ml[448,17298+20]..[448,17298+35])
                                              Pexp_apply
                                              expression (utils/clflags.ml[448,17298+20]..[448,17298+33])
                                                Pexp_ident "String.length" (utils/clflags.ml[448,17298+20]..[448,17298+33])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/clflags.ml[448,17298+34]..[448,17298+35])
                                                    Pexp_ident "s" (utils/clflags.ml[448,17298+34]..[448,17298+35])
                                              ]
                                        ]
                                        expression (utils/clflags.ml[449,17337+8]..[449,17337+46])
                                          Pexp_apply
                                          expression (utils/clflags.ml[449,17337+8]..[449,17337+18])
                                            Pexp_ident "String.sub" (utils/clflags.ml[449,17337+8]..[449,17337+18])
                                          [
                                            <arg>
                                            Nolabel
                                              expression (utils/clflags.ml[449,17337+19]..[449,17337+22])
                                                Pexp_ident "ext" (utils/clflags.ml[449,17337+19]..[449,17337+22])
                                            <arg>
                                            Nolabel
                                              expression (utils/clflags.ml[449,17337+23]..[449,17337+28])
                                                Pexp_ident "s_len" (utils/clflags.ml[449,17337+23]..[449,17337+28])
                                            <arg>
                                            Nolabel
                                              expression (utils/clflags.ml[449,17337+29]..[449,17337+46])
                                                Pexp_apply
                                                expression (utils/clflags.ml[449,17337+38]..[449,17337+39])
                                                  Pexp_ident "-" (utils/clflags.ml[449,17337+38]..[449,17337+39])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/clflags.ml[449,17337+30]..[449,17337+37])
                                                      Pexp_ident "ext_len" (utils/clflags.ml[449,17337+30]..[449,17337+37])
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/clflags.ml[449,17337+40]..[449,17337+45])
                                                      Pexp_ident "s_len" (utils/clflags.ml[449,17337+40]..[449,17337+45])
                                                ]
                                          ]
                              ]
                              expression (utils/clflags.ml[451,17393+6]..[454,17480+44])
                                Pexp_let Nonrec
                                [
                                  <def>
                                    pattern (utils/clflags.ml[451,17393+10]..[451,17393+12])
                                      Ppat_var "ir" (utils/clflags.ml[451,17393+10]..[451,17393+12])
                                    expression (utils/clflags.ml[451,17393+15]..[451,17393+42])
                                      Pexp_apply
                                      expression (utils/clflags.ml[451,17393+15]..[451,17393+28])
                                        Pexp_ident "List.find_opt" (utils/clflags.ml[451,17393+15]..[451,17393+28])
                                      [
                                        <arg>
                                        Nolabel
                                          expression (utils/clflags.ml[451,17393+29]..[451,17393+38])
                                            Pexp_ident "is_prefix" (utils/clflags.ml[451,17393+29]..[451,17393+38])
                                        <arg>
                                        Nolabel
                                          expression (utils/clflags.ml[451,17393+39]..[451,17393+42])
                                            Pexp_ident "all" (utils/clflags.ml[451,17393+39]..[451,17393+42])
                                      ]
                                ]
                                expression (utils/clflags.ml[452,17439+6]..[454,17480+44])
                                  Pexp_match
                                  expression (utils/clflags.ml[452,17439+12]..[452,17439+14])
                                    Pexp_ident "ir" (utils/clflags.ml[452,17439+12]..[452,17439+14])
                                  [
                                    <case>
                                      pattern (utils/clflags.ml[453,17459+8]..[453,17459+12])
                                        Ppat_construct "None" (utils/clflags.ml[453,17459+8]..[453,17459+12])
                                        None
                                      expression (utils/clflags.ml[453,17459+16]..[453,17459+20])
                                        Pexp_construct "None" (utils/clflags.ml[453,17459+16]..[453,17459+20])
                                        None
                                    <case>
                                      pattern (utils/clflags.ml[454,17480+8]..[454,17480+15])
                                        Ppat_construct "Some" (utils/clflags.ml[454,17480+8]..[454,17480+12])
                                        Some
                                          []
                                          pattern (utils/clflags.ml[454,17480+13]..[454,17480+15])
                                            Ppat_var "ir" (utils/clflags.ml[454,17480+13]..[454,17480+15])
                                      expression (utils/clflags.ml[454,17480+19]..[454,17480+44])
                                        Pexp_construct "Some" (utils/clflags.ml[454,17480+19]..[454,17480+23])
                                        Some
                                          expression (utils/clflags.ml[454,17480+24]..[454,17480+44])
                                            Pexp_tuple
                                            [
                                              expression (utils/clflags.ml[454,17480+25]..[454,17480+27])
                                                Pexp_ident "ir" (utils/clflags.ml[454,17480+25]..[454,17480+27])
                                              expression (utils/clflags.ml[454,17480+29]..[454,17480+43])
                                                Pexp_apply
                                                expression (utils/clflags.ml[454,17480+29]..[454,17480+40])
                                                  Pexp_ident "drop_prefix" (utils/clflags.ml[454,17480+29]..[454,17480+40])
                                                [
                                                  <arg>
                                                  Nolabel
                                                    expression (utils/clflags.ml[454,17480+41]..[454,17480+43])
                                                      Pexp_ident "ir" (utils/clflags.ml[454,17480+41]..[454,17480+43])
                                                ]
                                            ]
                                  ]
            ]
        ]
  structure_item (utils/clflags.ml[459,17584+0]..[521,19107+3])
    Pstr_module
    "Compiler_pass" (utils/clflags.ml[459,17584+7]..[459,17584+20])
      module_expr (utils/clflags.ml[459,17584+23]..[521,19107+3])
        Pmod_structure
        [
          structure_item (utils/clflags.ml[465,17810+2]..[465,17810+47])
            Pstr_type Rec
            [
              type_declaration "t" (utils/clflags.ml[465,17810+7]..[465,17810+8]) (utils/clflags.ml[465,17810+2]..[465,17810+47])
                ptype_params =
                  []
                ptype_cstrs =
                  []
                ptype_kind =
                  Ptype_variant
                    [
                      (utils/clflags.ml[465,17810+11]..[465,17810+18])
                        "Parsing" (utils/clflags.ml[465,17810+11]..[465,17810+18])
                        []
                        None
                      (utils/clflags.ml[465,17810+19]..[465,17810+27])
                        "Typing" (utils/clflags.ml[465,17810+21]..[465,17810+27])
                        []
                        None
                      (utils/clflags.ml[465,17810+28]..[465,17810+40])
                        "Scheduling" (utils/clflags.ml[465,17810+30]..[465,17810+40])
                        []
                        None
                      (utils/clflags.ml[465,17810+41]..[465,17810+47])
                        "Emit" (utils/clflags.ml[465,17810+43]..[465,17810+47])
                        []
                        None
                    ]
                ptype_private = Public
                ptype_manifest =
                  None
            ]
          structure_item (utils/clflags.ml[467,17859+2]..[471,17971+20])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/clflags.ml[467,17859+6]..[467,17859+15])
                  Ppat_var "to_string" (utils/clflags.ml[467,17859+6]..[467,17859+15])
                expression (utils/clflags.ml[467,17859+18]..[471,17971+20])
                  Pexp_function
                  [
                    <case>
                      pattern (utils/clflags.ml[468,17886+6]..[468,17886+13])
                        Ppat_construct "Parsing" (utils/clflags.ml[468,17886+6]..[468,17886+13])
                        None
                      expression (utils/clflags.ml[468,17886+17]..[468,17886+26])
                        Pexp_constant PConst_string("parsing",(utils/clflags.ml[468,17886+18]..[468,17886+25]),None)
                    <case>
                      pattern (utils/clflags.ml[469,17913+6]..[469,17913+12])
                        Ppat_construct "Typing" (utils/clflags.ml[469,17913+6]..[469,17913+12])
                        None
                      expression (utils/clflags.ml[469,17913+16]..[469,17913+24])
                        Pexp_constant PConst_string("typing",(utils/clflags.ml[469,17913+17]..[469,17913+23]),None)
                    <case>
                      pattern (utils/clflags.ml[470,17938+6]..[470,17938+16])
                        Ppat_construct "Scheduling" (utils/clflags.ml[470,17938+6]..[470,17938+16])
                        None
                      expression (utils/clflags.ml[470,17938+20]..[470,17938+32])
                        Pexp_constant PConst_string("scheduling",(utils/clflags.ml[470,17938+21]..[470,17938+31]),None)
                    <case>
                      pattern (utils/clflags.ml[471,17971+6]..[471,17971+10])
                        Ppat_construct "Emit" (utils/clflags.ml[471,17971+6]..[471,17971+10])
                        None
                      expression (utils/clflags.ml[471,17971+14]..[471,17971+20])
                        Pexp_constant PConst_string("emit",(utils/clflags.ml[471,17971+15]..[471,17971+19]),None)
                  ]
            ]
          structure_item (utils/clflags.ml[473,17993+2]..[478,18146+15])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/clflags.ml[473,17993+6]..[473,17993+15])
                  Ppat_var "of_string" (utils/clflags.ml[473,17993+6]..[473,17993+15])
                expression (utils/clflags.ml[473,17993+18]..[478,18146+15])
                  Pexp_function
                  [
                    <case>
                      pattern (utils/clflags.ml[474,18020+6]..[474,18020+15])
                        Ppat_constant PConst_string("parsing",(utils/clflags.ml[474,18020+7]..[474,18020+14]),None)
                      expression (utils/clflags.ml[474,18020+19]..[474,18020+31])
                        Pexp_construct "Some" (utils/clflags.ml[474,18020+19]..[474,18020+23])
                        Some
                          expression (utils/clflags.ml[474,18020+24]..[474,18020+31])
                            Pexp_construct "Parsing" (utils/clflags.ml[474,18020+24]..[474,18020+31])
                            None
                    <case>
                      pattern (utils/clflags.ml[475,18052+6]..[475,18052+14])
                        Ppat_constant PConst_string("typing",(utils/clflags.ml[475,18052+7]..[475,18052+13]),None)
                      expression (utils/clflags.ml[475,18052+18]..[475,18052+29])
                        Pexp_construct "Some" (utils/clflags.ml[475,18052+18]..[475,18052+22])
                        Some
                          expression (utils/clflags.ml[475,18052+23]..[475,18052+29])
                            Pexp_construct "Typing" (utils/clflags.ml[475,18052+23]..[475,18052+29])
                            None
                    <case>
                      pattern (utils/clflags.ml[476,18082+6]..[476,18082+18])
                        Ppat_constant PConst_string("scheduling",(utils/clflags.ml[476,18082+7]..[476,18082+17]),None)
                      expression (utils/clflags.ml[476,18082+22]..[476,18082+37])
                        Pexp_construct "Some" (utils/clflags.ml[476,18082+22]..[476,18082+26])
                        Some
                          expression (utils/clflags.ml[476,18082+27]..[476,18082+37])
                            Pexp_construct "Scheduling" (utils/clflags.ml[476,18082+27]..[476,18082+37])
                            None
                    <case>
                      pattern (utils/clflags.ml[477,18120+6]..[477,18120+12])
                        Ppat_constant PConst_string("emit",(utils/clflags.ml[477,18120+7]..[477,18120+11]),None)
                      expression (utils/clflags.ml[477,18120+16]..[477,18120+25])
                        Pexp_construct "Some" (utils/clflags.ml[477,18120+16]..[477,18120+20])
                        Some
                          expression (utils/clflags.ml[477,18120+21]..[477,18120+25])
                            Pexp_construct "Emit" (utils/clflags.ml[477,18120+21]..[477,18120+25])
                            None
                    <case>
                      pattern (utils/clflags.ml[478,18146+6]..[478,18146+7])
                        Ppat_any
                      expression (utils/clflags.ml[478,18146+11]..[478,18146+15])
                        Pexp_construct "None" (utils/clflags.ml[478,18146+11]..[478,18146+15])
                        None
                  ]
            ]
          structure_item (utils/clflags.ml[480,18163+2]..[484,18245+16])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/clflags.ml[480,18163+6]..[480,18163+10])
                  Ppat_var "rank" (utils/clflags.ml[480,18163+6]..[480,18163+10])
                expression (utils/clflags.ml[480,18163+13]..[484,18245+16])
                  Pexp_function
                  [
                    <case>
                      pattern (utils/clflags.ml[481,18185+6]..[481,18185+13])
                        Ppat_construct "Parsing" (utils/clflags.ml[481,18185+6]..[481,18185+13])
                        None
                      expression (utils/clflags.ml[481,18185+17]..[481,18185+18])
                        Pexp_constant PConst_int (0,None)
                    <case>
                      pattern (utils/clflags.ml[482,18204+6]..[482,18204+12])
                        Ppat_construct "Typing" (utils/clflags.ml[482,18204+6]..[482,18204+12])
                        None
                      expression (utils/clflags.ml[482,18204+16]..[482,18204+17])
                        Pexp_constant PConst_int (1,None)
                    <case>
                      pattern (utils/clflags.ml[483,18222+6]..[483,18222+16])
                        Ppat_construct "Scheduling" (utils/clflags.ml[483,18222+6]..[483,18222+16])
                        None
                      expression (utils/clflags.ml[483,18222+20]..[483,18222+22])
                        Pexp_constant PConst_int (50,None)
                    <case>
                      pattern (utils/clflags.ml[484,18245+6]..[484,18245+10])
                        Ppat_construct "Emit" (utils/clflags.ml[484,18245+6]..[484,18245+10])
                        None
                      expression (utils/clflags.ml[484,18245+14]..[484,18245+16])
                        Pexp_constant PConst_int (60,None)
                  ]
            ]
          structure_item (utils/clflags.ml[486,18263+2]..[491,18331+3])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/clflags.ml[486,18263+6]..[486,18263+12])
                  Ppat_var "passes" (utils/clflags.ml[486,18263+6]..[486,18263+12])
                expression (utils/clflags.ml[486,18263+15]..[491,18331+3])
                  Pexp_construct "::" (utils/clflags.ml[487,18280+4]..[491,18331+3]) ghost
                  Some
                    expression (utils/clflags.ml[487,18280+4]..[491,18331+3]) ghost
                      Pexp_tuple
                      [
                        expression (utils/clflags.ml[487,18280+4]..[487,18280+11])
                          Pexp_construct "Parsing" (utils/clflags.ml[487,18280+4]..[487,18280+11])
                          None
                        expression (utils/clflags.ml[488,18293+4]..[491,18331+3]) ghost
                          Pexp_construct "::" (utils/clflags.ml[488,18293+4]..[491,18331+3]) ghost
                          Some
                            expression (utils/clflags.ml[488,18293+4]..[491,18331+3]) ghost
                              Pexp_tuple
                              [
                                expression (utils/clflags.ml[488,18293+4]..[488,18293+10])
                                  Pexp_construct "Typing" (utils/clflags.ml[488,18293+4]..[488,18293+10])
                                  None
                                expression (utils/clflags.ml[489,18305+4]..[491,18331+3]) ghost
                                  Pexp_construct "::" (utils/clflags.ml[489,18305+4]..[491,18331+3]) ghost
                                  Some
                                    expression (utils/clflags.ml[489,18305+4]..[491,18331+3]) ghost
                                      Pexp_tuple
                                      [
                                        expression (utils/clflags.ml[489,18305+4]..[489,18305+14])
                                          Pexp_construct "Scheduling" (utils/clflags.ml[489,18305+4]..[489,18305+14])
                                          None
                                        expression (utils/clflags.ml[490,18321+4]..[491,18331+3]) ghost
                                          Pexp_construct "::" (utils/clflags.ml[490,18321+4]..[491,18331+3]) ghost
                                          Some
                                            expression (utils/clflags.ml[490,18321+4]..[491,18331+3]) ghost
                                              Pexp_tuple
                                              [
                                                expression (utils/clflags.ml[490,18321+4]..[490,18321+8])
                                                  Pexp_construct "Emit" (utils/clflags.ml[490,18321+4]..[490,18321+8])
                                                  None
                                                expression (utils/clflags.ml[491,18331+2]..[491,18331+3]) ghost
                                                  Pexp_construct "[]" (utils/clflags.ml[491,18331+2]..[491,18331+3]) ghost
                                                  None
                                              ]
                                      ]
                              ]
                      ]
            ]
          structure_item (utils/clflags.ml[492,18335+2]..[492,18335+34])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/clflags.ml[492,18335+6]..[492,18335+25])
                  Ppat_var "is_compilation_pass" (utils/clflags.ml[492,18335+6]..[492,18335+25])
                expression (utils/clflags.ml[492,18335+26]..[492,18335+34]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/clflags.ml[492,18335+26]..[492,18335+27])
                    Ppat_any
                  expression (utils/clflags.ml[492,18335+30]..[492,18335+34])
                    Pexp_construct "true" (utils/clflags.ml[492,18335+30]..[492,18335+34])
                    None
            ]
          structure_item (utils/clflags.ml[493,18370+2]..[496,18446+16])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/clflags.ml[493,18370+6]..[493,18370+20])
                  Ppat_var "is_native_only" (utils/clflags.ml[493,18370+6]..[493,18370+20])
                expression (utils/clflags.ml[493,18370+23]..[496,18446+16])
                  Pexp_function
                  [
                    <case>
                      pattern (utils/clflags.ml[494,18402+6]..[494,18402+16])
                        Ppat_construct "Scheduling" (utils/clflags.ml[494,18402+6]..[494,18402+16])
                        None
                      expression (utils/clflags.ml[494,18402+20]..[494,18402+24])
                        Pexp_construct "true" (utils/clflags.ml[494,18402+20]..[494,18402+24])
                        None
                    <case>
                      pattern (utils/clflags.ml[495,18427+6]..[495,18427+10])
                        Ppat_construct "Emit" (utils/clflags.ml[495,18427+6]..[495,18427+10])
                        None
                      expression (utils/clflags.ml[495,18427+14]..[495,18427+18])
                        Pexp_construct "true" (utils/clflags.ml[495,18427+14]..[495,18427+18])
                        None
                    <case>
                      pattern (utils/clflags.ml[496,18446+6]..[496,18446+7])
                        Ppat_any
                      expression (utils/clflags.ml[496,18446+11]..[496,18446+16])
                        Pexp_construct "false" (utils/clflags.ml[496,18446+11]..[496,18446+16])
                        None
                  ]
            ]
          structure_item (utils/clflags.ml[498,18464+2]..[498,18464+63])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/clflags.ml[498,18464+6]..[498,18464+13])
                  Ppat_var "enabled" (utils/clflags.ml[498,18464+6]..[498,18464+13])
                expression (utils/clflags.ml[498,18464+14]..[498,18464+63]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/clflags.ml[498,18464+14]..[498,18464+23])
                    Ppat_var "is_native" (utils/clflags.ml[498,18464+14]..[498,18464+23])
                  expression (utils/clflags.ml[498,18464+24]..[498,18464+63]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/clflags.ml[498,18464+24]..[498,18464+25])
                      Ppat_var "t" (utils/clflags.ml[498,18464+24]..[498,18464+25])
                    expression (utils/clflags.ml[498,18464+28]..[498,18464+63])
                      Pexp_apply
                      expression (utils/clflags.ml[498,18464+51]..[498,18464+53])
                        Pexp_ident "||" (utils/clflags.ml[498,18464+51]..[498,18464+53])
                      [
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[498,18464+28]..[498,18464+50])
                            Pexp_apply
                            expression (utils/clflags.ml[498,18464+28]..[498,18464+31])
                              Pexp_ident "not" (utils/clflags.ml[498,18464+28]..[498,18464+31])
                            [
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[498,18464+32]..[498,18464+50])
                                  Pexp_apply
                                  expression (utils/clflags.ml[498,18464+33]..[498,18464+47])
                                    Pexp_ident "is_native_only" (utils/clflags.ml[498,18464+33]..[498,18464+47])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/clflags.ml[498,18464+48]..[498,18464+49])
                                        Pexp_ident "t" (utils/clflags.ml[498,18464+48]..[498,18464+49])
                                  ]
                            ]
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[498,18464+54]..[498,18464+63])
                            Pexp_ident "is_native" (utils/clflags.ml[498,18464+54]..[498,18464+63])
                      ]
            ]
          structure_item (utils/clflags.ml[499,18528+2]..[501,18588+16])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/clflags.ml[499,18528+6]..[499,18528+23])
                  Ppat_var "can_save_ir_after" (utils/clflags.ml[499,18528+6]..[499,18528+23])
                expression (utils/clflags.ml[499,18528+26]..[501,18588+16])
                  Pexp_function
                  [
                    <case>
                      pattern (utils/clflags.ml[500,18563+6]..[500,18563+16])
                        Ppat_construct "Scheduling" (utils/clflags.ml[500,18563+6]..[500,18563+16])
                        None
                      expression (utils/clflags.ml[500,18563+20]..[500,18563+24])
                        Pexp_construct "true" (utils/clflags.ml[500,18563+20]..[500,18563+24])
                        None
                    <case>
                      pattern (utils/clflags.ml[501,18588+6]..[501,18588+7])
                        Ppat_any
                      expression (utils/clflags.ml[501,18588+11]..[501,18588+16])
                        Pexp_construct "false" (utils/clflags.ml[501,18588+11]..[501,18588+16])
                        None
                  ]
            ]
          structure_item (utils/clflags.ml[503,18606+2]..[507,18724+25])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/clflags.ml[503,18606+6]..[503,18606+26])
                  Ppat_var "available_pass_names" (utils/clflags.ml[503,18606+6]..[503,18606+26])
                expression (utils/clflags.ml[503,18606+27]..[507,18724+25]) ghost
                  Pexp_fun
                  Labelled "filter"
                  None
                  pattern (utils/clflags.ml[503,18606+28]..[503,18606+34])
                    Ppat_var "filter" (utils/clflags.ml[503,18606+28]..[503,18606+34])
                  expression (utils/clflags.ml[503,18606+35]..[507,18724+25]) ghost
                    Pexp_fun
                    Labelled "native"
                    None
                    pattern (utils/clflags.ml[503,18606+36]..[503,18606+42])
                      Ppat_var "native" (utils/clflags.ml[503,18606+36]..[503,18606+42])
                    expression (utils/clflags.ml[504,18651+4]..[507,18724+25])
                      Pexp_apply
                      expression (utils/clflags.ml[507,18724+4]..[507,18724+6])
                        Pexp_ident "|>" (utils/clflags.ml[507,18724+4]..[507,18724+6])
                      [
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[504,18651+4]..[506,18698+25])
                            Pexp_apply
                            expression (utils/clflags.ml[506,18698+4]..[506,18698+6])
                              Pexp_ident "|>" (utils/clflags.ml[506,18698+4]..[506,18698+6])
                            [
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[504,18651+4]..[505,18662+35])
                                  Pexp_apply
                                  expression (utils/clflags.ml[505,18662+4]..[505,18662+6])
                                    Pexp_ident "|>" (utils/clflags.ml[505,18662+4]..[505,18662+6])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/clflags.ml[504,18651+4]..[504,18651+10])
                                        Pexp_ident "passes" (utils/clflags.ml[504,18651+4]..[504,18651+10])
                                    <arg>
                                    Nolabel
                                      expression (utils/clflags.ml[505,18662+7]..[505,18662+35])
                                        Pexp_apply
                                        expression (utils/clflags.ml[505,18662+7]..[505,18662+18])
                                          Pexp_ident "List.filter" (utils/clflags.ml[505,18662+7]..[505,18662+18])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/clflags.ml[505,18662+19]..[505,18662+35])
                                              Pexp_apply
                                              expression (utils/clflags.ml[505,18662+20]..[505,18662+27])
                                                Pexp_ident "enabled" (utils/clflags.ml[505,18662+20]..[505,18662+27])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/clflags.ml[505,18662+28]..[505,18662+34])
                                                    Pexp_ident "native" (utils/clflags.ml[505,18662+28]..[505,18662+34])
                                              ]
                                        ]
                                  ]
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[506,18698+7]..[506,18698+25])
                                  Pexp_apply
                                  expression (utils/clflags.ml[506,18698+7]..[506,18698+18])
                                    Pexp_ident "List.filter" (utils/clflags.ml[506,18698+7]..[506,18698+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/clflags.ml[506,18698+19]..[506,18698+25])
                                        Pexp_ident "filter" (utils/clflags.ml[506,18698+19]..[506,18698+25])
                                  ]
                            ]
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[507,18724+7]..[507,18724+25])
                            Pexp_apply
                            expression (utils/clflags.ml[507,18724+7]..[507,18724+15])
                              Pexp_ident "List.map" (utils/clflags.ml[507,18724+7]..[507,18724+15])
                            [
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[507,18724+16]..[507,18724+25])
                                  Pexp_ident "to_string" (utils/clflags.ml[507,18724+16]..[507,18724+25])
                            ]
                      ]
            ]
          structure_item (utils/clflags.ml[509,18751+2]..[510,18771+29])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/clflags.ml[509,18751+6]..[509,18751+13])
                  Ppat_var "compare" (utils/clflags.ml[509,18751+6]..[509,18751+13])
                expression (utils/clflags.ml[509,18751+14]..[510,18771+29]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/clflags.ml[509,18751+14]..[509,18751+15])
                    Ppat_var "a" (utils/clflags.ml[509,18751+14]..[509,18751+15])
                  expression (utils/clflags.ml[509,18751+16]..[510,18771+29]) ghost
                    Pexp_fun
                    Nolabel
                    None
                    pattern (utils/clflags.ml[509,18751+16]..[509,18751+17])
                      Ppat_var "b" (utils/clflags.ml[509,18751+16]..[509,18751+17])
                    expression (utils/clflags.ml[510,18771+4]..[510,18771+29])
                      Pexp_apply
                      expression (utils/clflags.ml[510,18771+4]..[510,18771+11])
                        Pexp_ident "compare" (utils/clflags.ml[510,18771+4]..[510,18771+11])
                      [
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[510,18771+12]..[510,18771+20])
                            Pexp_apply
                            expression (utils/clflags.ml[510,18771+13]..[510,18771+17])
                              Pexp_ident "rank" (utils/clflags.ml[510,18771+13]..[510,18771+17])
                            [
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[510,18771+18]..[510,18771+19])
                                  Pexp_ident "a" (utils/clflags.ml[510,18771+18]..[510,18771+19])
                            ]
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[510,18771+21]..[510,18771+29])
                            Pexp_apply
                            expression (utils/clflags.ml[510,18771+22]..[510,18771+26])
                              Pexp_ident "rank" (utils/clflags.ml[510,18771+22]..[510,18771+26])
                            [
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[510,18771+27]..[510,18771+28])
                                  Pexp_ident "b" (utils/clflags.ml[510,18771+27]..[510,18771+28])
                            ]
                      ]
            ]
          structure_item (utils/clflags.ml[512,18802+2]..[515,18916+43])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/clflags.ml[512,18802+6]..[512,18802+24])
                  Ppat_var "to_output_filename" (utils/clflags.ml[512,18802+6]..[512,18802+24])
                expression (utils/clflags.ml[512,18802+25]..[515,18916+43]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/clflags.ml[512,18802+25]..[512,18802+26])
                    Ppat_var "t" (utils/clflags.ml[512,18802+25]..[512,18802+26])
                  expression (utils/clflags.ml[512,18802+27]..[515,18916+43]) ghost
                    Pexp_fun
                    Labelled "prefix"
                    None
                    pattern (utils/clflags.ml[512,18802+28]..[512,18802+34])
                      Ppat_var "prefix" (utils/clflags.ml[512,18802+28]..[512,18802+34])
                    expression (utils/clflags.ml[513,18839+4]..[515,18916+43])
                      Pexp_match
                      expression (utils/clflags.ml[513,18839+10]..[513,18839+11])
                        Pexp_ident "t" (utils/clflags.ml[513,18839+10]..[513,18839+11])
                      [
                        <case>
                          pattern (utils/clflags.ml[514,18856+6]..[514,18856+16])
                            Ppat_construct "Scheduling" (utils/clflags.ml[514,18856+6]..[514,18856+16])
                            None
                          expression (utils/clflags.ml[514,18856+20]..[514,18856+59])
                            Pexp_apply
                            expression (utils/clflags.ml[514,18856+27]..[514,18856+28])
                              Pexp_ident "^" (utils/clflags.ml[514,18856+27]..[514,18856+28])
                            [
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[514,18856+20]..[514,18856+26])
                                  Pexp_ident "prefix" (utils/clflags.ml[514,18856+20]..[514,18856+26])
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[514,18856+29]..[514,18856+59])
                                  Pexp_open Fresh
                                  module_expr (utils/clflags.ml[514,18856+29]..[514,18856+40])
                                    Pmod_ident "Compiler_ir" (utils/clflags.ml[514,18856+29]..[514,18856+40])
                                  expression (utils/clflags.ml[514,18856+42]..[514,18856+58])
                                    Pexp_apply
                                    expression (utils/clflags.ml[514,18856+42]..[514,18856+51])
                                      Pexp_ident "extension" (utils/clflags.ml[514,18856+42]..[514,18856+51])
                                    [
                                      <arg>
                                      Nolabel
                                        expression (utils/clflags.ml[514,18856+52]..[514,18856+58])
                                          Pexp_construct "Linear" (utils/clflags.ml[514,18856+52]..[514,18856+58])
                                          None
                                    ]
                            ]
                        <case>
                          pattern (utils/clflags.ml[515,18916+6]..[515,18916+7])
                            Ppat_any
                          expression (utils/clflags.ml[515,18916+11]..[515,18916+43])
                            Pexp_apply
                            expression (utils/clflags.ml[515,18916+11]..[515,18916+27])
                              Pexp_ident "Misc.fatal_error" (utils/clflags.ml[515,18916+11]..[515,18916+27])
                            [
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[515,18916+28]..[515,18916+43])
                                  Pexp_constant PConst_string("Not supported",(utils/clflags.ml[515,18916+29]..[515,18916+42]),None)
                            ]
                      ]
            ]
          structure_item (utils/clflags.ml[517,18961+2]..[520,19088+18])
            Pstr_value Nonrec
            [
              <def>
                pattern (utils/clflags.ml[517,18961+6]..[517,18961+23])
                  Ppat_var "of_input_filename" (utils/clflags.ml[517,18961+6]..[517,18961+23])
                expression (utils/clflags.ml[517,18961+24]..[520,19088+18]) ghost
                  Pexp_fun
                  Nolabel
                  None
                  pattern (utils/clflags.ml[517,18961+24]..[517,18961+28])
                    Ppat_var "name" (utils/clflags.ml[517,18961+24]..[517,18961+28])
                  expression (utils/clflags.ml[518,18992+4]..[520,19088+18])
                    Pexp_match
                    expression (utils/clflags.ml[518,18992+10]..[518,18992+54])
                      Pexp_apply
                      expression (utils/clflags.ml[518,18992+10]..[518,18992+49])
                        Pexp_ident "Compiler_ir.extract_extension_with_pass" (utils/clflags.ml[518,18992+10]..[518,18992+49])
                      [
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[518,18992+50]..[518,18992+54])
                            Pexp_ident "name" (utils/clflags.ml[518,18992+50]..[518,18992+54])
                      ]
                    [
                      <case>
                        pattern (utils/clflags.ml[519,19052+6]..[519,19052+22])
                          Ppat_construct "Some" (utils/clflags.ml[519,19052+6]..[519,19052+10])
                          Some
                            []
                            pattern (utils/clflags.ml[519,19052+11]..[519,19052+22])
                              Ppat_tuple
                              [
                                pattern (utils/clflags.ml[519,19052+12]..[519,19052+18])
                                  Ppat_construct "Linear" (utils/clflags.ml[519,19052+12]..[519,19052+18])
                                  None
                                pattern (utils/clflags.ml[519,19052+20]..[519,19052+21])
                                  Ppat_any
                              ]
                        expression (utils/clflags.ml[519,19052+26]..[519,19052+35])
                          Pexp_construct "Some" (utils/clflags.ml[519,19052+26]..[519,19052+30])
                          Some
                            expression (utils/clflags.ml[519,19052+31]..[519,19052+35])
                              Pexp_construct "Emit" (utils/clflags.ml[519,19052+31]..[519,19052+35])
                              None
                      <case>
                        pattern (utils/clflags.ml[520,19088+6]..[520,19088+10])
                          Ppat_construct "None" (utils/clflags.ml[520,19088+6]..[520,19088+10])
                          None
                        expression (utils/clflags.ml[520,19088+14]..[520,19088+18])
                          Pexp_construct "None" (utils/clflags.ml[520,19088+14]..[520,19088+18])
                          None
                    ]
            ]
        ]
  structure_item (utils/clflags.ml[523,19112+0]..[523,19112+25])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[523,19112+4]..[523,19112+14])
          Ppat_var "stop_after" (utils/clflags.ml[523,19112+4]..[523,19112+14])
        expression (utils/clflags.ml[523,19112+17]..[523,19112+25])
          Pexp_apply
          expression (utils/clflags.ml[523,19112+17]..[523,19112+20])
            Pexp_ident "ref" (utils/clflags.ml[523,19112+17]..[523,19112+20])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[523,19112+21]..[523,19112+25])
                Pexp_construct "None" (utils/clflags.ml[523,19112+21]..[523,19112+25])
                None
          ]
    ]
  structure_item (utils/clflags.ml[525,19157+0]..[530,19312+69])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[525,19157+4]..[525,19157+21])
          Ppat_var "should_stop_after" (utils/clflags.ml[525,19157+4]..[525,19157+21])
        expression (utils/clflags.ml[525,19157+22]..[530,19312+69]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/clflags.ml[525,19157+22]..[525,19157+26])
            Ppat_var "pass" (utils/clflags.ml[525,19157+22]..[525,19157+26])
          expression (utils/clflags.ml[526,19186+2]..[530,19312+69])
            Pexp_ifthenelse
            expression (utils/clflags.ml[526,19186+5]..[526,19186+61])
              Pexp_apply
              expression (utils/clflags.ml[526,19186+46]..[526,19186+48])
                Pexp_ident "&&" (utils/clflags.ml[526,19186+46]..[526,19186+48])
              [
                <arg>
                Nolabel
                  expression (utils/clflags.ml[526,19186+5]..[526,19186+45])
                    Pexp_open Fresh
                    module_expr (utils/clflags.ml[526,19186+5]..[526,19186+18])
                      Pmod_ident "Compiler_pass" (utils/clflags.ml[526,19186+5]..[526,19186+18])
                    expression (utils/clflags.ml[526,19186+20]..[526,19186+44])
                      Pexp_apply
                      expression (utils/clflags.ml[526,19186+32]..[526,19186+34])
                        Pexp_ident "<=" (utils/clflags.ml[526,19186+32]..[526,19186+34])
                      [
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[526,19186+20]..[526,19186+31])
                            Pexp_apply
                            expression (utils/clflags.ml[526,19186+20]..[526,19186+24])
                              Pexp_ident "rank" (utils/clflags.ml[526,19186+20]..[526,19186+24])
                            [
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[526,19186+25]..[526,19186+31])
                                  Pexp_construct "Typing" (utils/clflags.ml[526,19186+25]..[526,19186+31])
                                  None
                            ]
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[526,19186+35]..[526,19186+44])
                            Pexp_apply
                            expression (utils/clflags.ml[526,19186+35]..[526,19186+39])
                              Pexp_ident "rank" (utils/clflags.ml[526,19186+35]..[526,19186+39])
                            [
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[526,19186+40]..[526,19186+44])
                                  Pexp_ident "pass" (utils/clflags.ml[526,19186+40]..[526,19186+44])
                            ]
                      ]
                <arg>
                Nolabel
                  expression (utils/clflags.ml[526,19186+49]..[526,19186+61])
                    Pexp_apply
                    expression (utils/clflags.ml[526,19186+49]..[526,19186+50])
                      Pexp_ident "!" (utils/clflags.ml[526,19186+49]..[526,19186+50])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[526,19186+50]..[526,19186+61])
                          Pexp_ident "print_types" (utils/clflags.ml[526,19186+50]..[526,19186+61])
                    ]
              ]
            expression (utils/clflags.ml[526,19186+67]..[526,19186+71])
              Pexp_construct "true" (utils/clflags.ml[526,19186+67]..[526,19186+71])
              None
            Some
              expression (utils/clflags.ml[528,19265+4]..[530,19312+69])
                Pexp_match
                expression (utils/clflags.ml[528,19265+10]..[528,19265+21])
                  Pexp_apply
                  expression (utils/clflags.ml[528,19265+10]..[528,19265+11])
                    Pexp_ident "!" (utils/clflags.ml[528,19265+10]..[528,19265+11])
                  [
                    <arg>
                    Nolabel
                      expression (utils/clflags.ml[528,19265+11]..[528,19265+21])
                        Pexp_ident "stop_after" (utils/clflags.ml[528,19265+11]..[528,19265+21])
                  ]
                [
                  <case>
                    pattern (utils/clflags.ml[529,19292+6]..[529,19292+10])
                      Ppat_construct "None" (utils/clflags.ml[529,19292+6]..[529,19292+10])
                      None
                    expression (utils/clflags.ml[529,19292+14]..[529,19292+19])
                      Pexp_construct "false" (utils/clflags.ml[529,19292+14]..[529,19292+19])
                      None
                  <case>
                    pattern (utils/clflags.ml[530,19312+6]..[530,19312+15])
                      Ppat_construct "Some" (utils/clflags.ml[530,19312+6]..[530,19312+10])
                      Some
                        []
                        pattern (utils/clflags.ml[530,19312+11]..[530,19312+15])
                          Ppat_var "stop" (utils/clflags.ml[530,19312+11]..[530,19312+15])
                    expression (utils/clflags.ml[530,19312+19]..[530,19312+69])
                      Pexp_apply
                      expression (utils/clflags.ml[530,19312+43]..[530,19312+45])
                        Pexp_ident "<=" (utils/clflags.ml[530,19312+43]..[530,19312+45])
                      [
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[530,19312+19]..[530,19312+42])
                            Pexp_apply
                            expression (utils/clflags.ml[530,19312+19]..[530,19312+37])
                              Pexp_ident "Compiler_pass.rank" (utils/clflags.ml[530,19312+19]..[530,19312+37])
                            [
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[530,19312+38]..[530,19312+42])
                                  Pexp_ident "stop" (utils/clflags.ml[530,19312+38]..[530,19312+42])
                            ]
                        <arg>
                        Nolabel
                          expression (utils/clflags.ml[530,19312+46]..[530,19312+69])
                            Pexp_apply
                            expression (utils/clflags.ml[530,19312+46]..[530,19312+64])
                              Pexp_ident "Compiler_pass.rank" (utils/clflags.ml[530,19312+46]..[530,19312+64])
                            [
                              <arg>
                              Nolabel
                                expression (utils/clflags.ml[530,19312+65]..[530,19312+69])
                                  Pexp_ident "pass" (utils/clflags.ml[530,19312+65]..[530,19312+69])
                            ]
                      ]
                ]
    ]
  structure_item (utils/clflags.ml[532,19383+0]..[532,19383+26])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[532,19383+4]..[532,19383+17])
          Ppat_var "save_ir_after" (utils/clflags.ml[532,19383+4]..[532,19383+17])
        expression (utils/clflags.ml[532,19383+20]..[532,19383+26])
          Pexp_apply
          expression (utils/clflags.ml[532,19383+20]..[532,19383+23])
            Pexp_ident "ref" (utils/clflags.ml[532,19383+20]..[532,19383+23])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[532,19383+24]..[532,19383+26])
                Pexp_construct "[]" (utils/clflags.ml[532,19383+24]..[532,19383+26])
                None
          ]
    ]
  structure_item (utils/clflags.ml[534,19411+0]..[535,19443+30])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[534,19411+4]..[534,19411+24])
          Ppat_var "should_save_ir_after" (utils/clflags.ml[534,19411+4]..[534,19411+24])
        expression (utils/clflags.ml[534,19411+25]..[535,19443+30]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/clflags.ml[534,19411+25]..[534,19411+29])
            Ppat_var "pass" (utils/clflags.ml[534,19411+25]..[534,19411+29])
          expression (utils/clflags.ml[535,19443+2]..[535,19443+30])
            Pexp_apply
            expression (utils/clflags.ml[535,19443+2]..[535,19443+10])
              Pexp_ident "List.mem" (utils/clflags.ml[535,19443+2]..[535,19443+10])
            [
              <arg>
              Nolabel
                expression (utils/clflags.ml[535,19443+11]..[535,19443+15])
                  Pexp_ident "pass" (utils/clflags.ml[535,19443+11]..[535,19443+15])
              <arg>
              Nolabel
                expression (utils/clflags.ml[535,19443+16]..[535,19443+30])
                  Pexp_apply
                  expression (utils/clflags.ml[535,19443+16]..[535,19443+17])
                    Pexp_ident "!" (utils/clflags.ml[535,19443+16]..[535,19443+17])
                  [
                    <arg>
                    Nolabel
                      expression (utils/clflags.ml[535,19443+17]..[535,19443+30])
                        Pexp_ident "save_ir_after" (utils/clflags.ml[535,19443+17]..[535,19443+30])
                  ]
            ]
    ]
  structure_item (utils/clflags.ml[537,19475+0]..[545,19674+29])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[537,19475+4]..[537,19475+21])
          Ppat_var "set_save_ir_after" (utils/clflags.ml[537,19475+4]..[537,19475+21])
        expression (utils/clflags.ml[537,19475+22]..[545,19674+29]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/clflags.ml[537,19475+22]..[537,19475+26])
            Ppat_var "pass" (utils/clflags.ml[537,19475+22]..[537,19475+26])
          expression (utils/clflags.ml[537,19475+27]..[545,19674+29]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/clflags.ml[537,19475+27]..[537,19475+34])
              Ppat_var "enabled" (utils/clflags.ml[537,19475+27]..[537,19475+34])
            expression (utils/clflags.ml[538,19512+2]..[545,19674+29])
              Pexp_let Nonrec
              [
                <def>
                  pattern (utils/clflags.ml[538,19512+6]..[538,19512+18])
                    Ppat_var "other_passes" (utils/clflags.ml[538,19512+6]..[538,19512+18])
                  expression (utils/clflags.ml[538,19512+21]..[538,19512+59])
                    Pexp_apply
                    expression (utils/clflags.ml[538,19512+21]..[538,19512+32])
                      Pexp_ident "List.filter" (utils/clflags.ml[538,19512+21]..[538,19512+32])
                    [
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[538,19512+33]..[538,19512+44])
                          Pexp_apply
                          expression (utils/clflags.ml[538,19512+34]..[538,19512+38])
                            Pexp_ident "<>" (utils/clflags.ml[538,19512+34]..[538,19512+38])
                          [
                            <arg>
                            Nolabel
                              expression (utils/clflags.ml[538,19512+39]..[538,19512+43])
                                Pexp_ident "pass" (utils/clflags.ml[538,19512+39]..[538,19512+43])
                          ]
                      <arg>
                      Nolabel
                        expression (utils/clflags.ml[538,19512+45]..[538,19512+59])
                          Pexp_apply
                          expression (utils/clflags.ml[538,19512+45]..[538,19512+46])
                            Pexp_ident "!" (utils/clflags.ml[538,19512+45]..[538,19512+46])
                          [
                            <arg>
                            Nolabel
                              expression (utils/clflags.ml[538,19512+46]..[538,19512+59])
                                Pexp_ident "save_ir_after" (utils/clflags.ml[538,19512+46]..[538,19512+59])
                          ]
                    ]
              ]
              expression (utils/clflags.ml[539,19575+2]..[545,19674+29])
                Pexp_let Nonrec
                [
                  <def>
                    pattern (utils/clflags.ml[539,19575+6]..[539,19575+16])
                      Ppat_var "new_passes" (utils/clflags.ml[539,19575+6]..[539,19575+16])
                    expression (utils/clflags.ml[540,19594+4]..[543,19650+18])
                      Pexp_ifthenelse
                      expression (utils/clflags.ml[540,19594+7]..[540,19594+14])
                        Pexp_ident "enabled" (utils/clflags.ml[540,19594+7]..[540,19594+14])
                      expression (utils/clflags.ml[541,19614+6]..[541,19614+26])
                        Pexp_construct "::" (utils/clflags.ml[541,19614+11]..[541,19614+13])
                        Some
                          expression (utils/clflags.ml[541,19614+6]..[541,19614+26]) ghost
                            Pexp_tuple
                            [
                              expression (utils/clflags.ml[541,19614+6]..[541,19614+10])
                                Pexp_ident "pass" (utils/clflags.ml[541,19614+6]..[541,19614+10])
                              expression (utils/clflags.ml[541,19614+14]..[541,19614+26])
                                Pexp_ident "other_passes" (utils/clflags.ml[541,19614+14]..[541,19614+26])
                            ]
                      Some
                        expression (utils/clflags.ml[543,19650+6]..[543,19650+18])
                          Pexp_ident "other_passes" (utils/clflags.ml[543,19650+6]..[543,19650+18])
                ]
                expression (utils/clflags.ml[545,19674+2]..[545,19674+29])
                  Pexp_apply
                  expression (utils/clflags.ml[545,19674+16]..[545,19674+18])
                    Pexp_ident ":=" (utils/clflags.ml[545,19674+16]..[545,19674+18])
                  [
                    <arg>
                    Nolabel
                      expression (utils/clflags.ml[545,19674+2]..[545,19674+15])
                        Pexp_ident "save_ir_after" (utils/clflags.ml[545,19674+2]..[545,19674+15])
                    <arg>
                    Nolabel
                      expression (utils/clflags.ml[545,19674+19]..[545,19674+29])
                        Pexp_ident "new_passes" (utils/clflags.ml[545,19674+19]..[545,19674+29])
                  ]
    ]
  structure_item (utils/clflags.ml[547,19705+0]..[547,19705+34])
    Pstr_module
    "String" (utils/clflags.ml[547,19705+7]..[547,19705+13])
      module_expr (utils/clflags.ml[547,19705+16]..[547,19705+34])
        Pmod_ident "Misc.Stdlib.String" (utils/clflags.ml[547,19705+16]..[547,19705+34])
  structure_item (utils/clflags.ml[549,19741+0]..[549,19741+21])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[549,19741+4]..[549,19741+12])
          Ppat_var "arg_spec" (utils/clflags.ml[549,19741+4]..[549,19741+12])
        expression (utils/clflags.ml[549,19741+15]..[549,19741+21])
          Pexp_apply
          expression (utils/clflags.ml[549,19741+15]..[549,19741+18])
            Pexp_ident "ref" (utils/clflags.ml[549,19741+15]..[549,19741+18])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[549,19741+19]..[549,19741+21])
                Pexp_construct "[]" (utils/clflags.ml[549,19741+19]..[549,19741+21])
                None
          ]
    ]
  structure_item (utils/clflags.ml[550,19763+0]..[550,19763+36])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[550,19763+4]..[550,19763+13])
          Ppat_var "arg_names" (utils/clflags.ml[550,19763+4]..[550,19763+13])
        expression (utils/clflags.ml[550,19763+16]..[550,19763+36])
          Pexp_apply
          expression (utils/clflags.ml[550,19763+16]..[550,19763+19])
            Pexp_ident "ref" (utils/clflags.ml[550,19763+16]..[550,19763+19])
          [
            <arg>
            Nolabel
              expression (utils/clflags.ml[550,19763+20]..[550,19763+36])
                Pexp_ident "String.Map.empty" (utils/clflags.ml[550,19763+20]..[550,19763+36])
          ]
    ]
  structure_item (utils/clflags.ml[552,19801+0]..[554,19844+31])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[552,19801+4]..[552,19801+19])
          Ppat_var "reset_arguments" (utils/clflags.ml[552,19801+4]..[552,19801+19])
        expression (utils/clflags.ml[552,19801+20]..[554,19844+31]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/clflags.ml[552,19801+20]..[552,19801+22])
            Ppat_construct "()" (utils/clflags.ml[552,19801+20]..[552,19801+22])
            None
          expression (utils/clflags.ml[553,19826+2]..[554,19844+31])
            Pexp_sequence
            expression (utils/clflags.ml[553,19826+2]..[553,19826+16])
              Pexp_apply
              expression (utils/clflags.ml[553,19826+11]..[553,19826+13])
                Pexp_ident ":=" (utils/clflags.ml[553,19826+11]..[553,19826+13])
              [
                <arg>
                Nolabel
                  expression (utils/clflags.ml[553,19826+2]..[553,19826+10])
                    Pexp_ident "arg_spec" (utils/clflags.ml[553,19826+2]..[553,19826+10])
                <arg>
                Nolabel
                  expression (utils/clflags.ml[553,19826+14]..[553,19826+16])
                    Pexp_construct "[]" (utils/clflags.ml[553,19826+14]..[553,19826+16])
                    None
              ]
            expression (utils/clflags.ml[554,19844+2]..[554,19844+31])
              Pexp_apply
              expression (utils/clflags.ml[554,19844+12]..[554,19844+14])
                Pexp_ident ":=" (utils/clflags.ml[554,19844+12]..[554,19844+14])
              [
                <arg>
                Nolabel
                  expression (utils/clflags.ml[554,19844+2]..[554,19844+11])
                    Pexp_ident "arg_names" (utils/clflags.ml[554,19844+2]..[554,19844+11])
                <arg>
                Nolabel
                  expression (utils/clflags.ml[554,19844+15]..[554,19844+31])
                    Pexp_ident "String.Map.empty" (utils/clflags.ml[554,19844+15]..[554,19844+31])
              ]
    ]
  structure_item (utils/clflags.ml[556,19877+0]..[567,20338+8])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[556,19877+4]..[556,19877+17])
          Ppat_var "add_arguments" (utils/clflags.ml[556,19877+4]..[556,19877+17])
        expression (utils/clflags.ml[556,19877+18]..[567,20338+8]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/clflags.ml[556,19877+18]..[556,19877+21])
            Ppat_var "loc" (utils/clflags.ml[556,19877+18]..[556,19877+21])
          expression (utils/clflags.ml[556,19877+22]..[567,20338+8]) ghost
            Pexp_fun
            Nolabel
            None
            pattern (utils/clflags.ml[556,19877+22]..[556,19877+26])
              Ppat_var "args" (utils/clflags.ml[556,19877+22]..[556,19877+26])
            expression (utils/clflags.ml[557,19906+2]..[567,20338+8])
              Pexp_apply
              expression (utils/clflags.ml[557,19906+2]..[557,19906+11])
                Pexp_ident "List.iter" (utils/clflags.ml[557,19906+2]..[557,19906+11])
              [
                <arg>
                Nolabel
                  expression (utils/clflags.ml[557,19906+12]..[567,20338+3])
                    Pexp_function
                    [
                      <case>
                        pattern (utils/clflags.ml[557,19906+22]..[557,19906+45])
                          Ppat_alias "arg" (utils/clflags.ml[557,19906+42]..[557,19906+45])
                          pattern (utils/clflags.ml[557,19906+22]..[557,19906+38])
                            Ppat_tuple
                            [
                              pattern (utils/clflags.ml[557,19906+23]..[557,19906+31])
                                Ppat_var "arg_name" (utils/clflags.ml[557,19906+23]..[557,19906+31])
                              pattern (utils/clflags.ml[557,19906+33]..[557,19906+34])
                                Ppat_any
                              pattern (utils/clflags.ml[557,19906+36]..[557,19906+37])
                                Ppat_any
                            ]
                        expression (utils/clflags.ml[558,19955+4]..[566,20280+57])
                          Pexp_try
                          expression (utils/clflags.ml[559,19963+6]..[563,20167+51])
                            Pexp_let Nonrec
                            [
                              <def>
                                pattern (utils/clflags.ml[559,19963+10]..[559,19963+14])
                                  Ppat_var "loc2" (utils/clflags.ml[559,19963+10]..[559,19963+14])
                                expression (utils/clflags.ml[559,19963+17]..[559,19963+52])
                                  Pexp_apply
                                  expression (utils/clflags.ml[559,19963+17]..[559,19963+32])
                                    Pexp_ident "String.Map.find" (utils/clflags.ml[559,19963+17]..[559,19963+32])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/clflags.ml[559,19963+33]..[559,19963+41])
                                        Pexp_ident "arg_name" (utils/clflags.ml[559,19963+33]..[559,19963+41])
                                    <arg>
                                    Nolabel
                                      expression (utils/clflags.ml[559,19963+42]..[559,19963+52])
                                        Pexp_apply
                                        expression (utils/clflags.ml[559,19963+42]..[559,19963+43])
                                          Pexp_ident "!" (utils/clflags.ml[559,19963+42]..[559,19963+43])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/clflags.ml[559,19963+43]..[559,19963+52])
                                              Pexp_ident "arg_names" (utils/clflags.ml[559,19963+43]..[559,19963+52])
                                        ]
                                  ]
                            ]
                            expression (utils/clflags.ml[560,20019+6]..[563,20167+51])
                              Pexp_sequence
                              expression (utils/clflags.ml[560,20019+6]..[561,20040+70])
                                Pexp_apply
                                expression (utils/clflags.ml[560,20019+6]..[560,20019+20])
                                  Pexp_ident "Printf.eprintf" (utils/clflags.ml[560,20019+6]..[560,20019+20])
                                [
                                  <arg>
                                  Nolabel
                                    expression (utils/clflags.ml[561,20040+8]..[561,20040+61])
                                      Pexp_constant PConst_string("Warning: compiler argument %s is already defined:\n",(utils/clflags.ml[561,20040+9]..[561,20040+60]),None)
                                  <arg>
                                  Nolabel
                                    expression (utils/clflags.ml[561,20040+62]..[561,20040+70])
                                      Pexp_ident "arg_name" (utils/clflags.ml[561,20040+62]..[561,20040+70])
                                ]
                              expression (utils/clflags.ml[562,20112+6]..[563,20167+51])
                                Pexp_sequence
                                expression (utils/clflags.ml[562,20112+6]..[562,20112+53])
                                  Pexp_apply
                                  expression (utils/clflags.ml[562,20112+6]..[562,20112+20])
                                    Pexp_ident "Printf.eprintf" (utils/clflags.ml[562,20112+6]..[562,20112+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/clflags.ml[562,20112+21]..[562,20112+48])
                                        Pexp_constant PConst_string("   First definition: %s\n",(utils/clflags.ml[562,20112+22]..[562,20112+47]),None)
                                    <arg>
                                    Nolabel
                                      expression (utils/clflags.ml[562,20112+49]..[562,20112+53])
                                        Pexp_ident "loc2" (utils/clflags.ml[562,20112+49]..[562,20112+53])
                                  ]
                                expression (utils/clflags.ml[563,20167+6]..[563,20167+50])
                                  Pexp_apply
                                  expression (utils/clflags.ml[563,20167+6]..[563,20167+20])
                                    Pexp_ident "Printf.eprintf" (utils/clflags.ml[563,20167+6]..[563,20167+20])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/clflags.ml[563,20167+21]..[563,20167+46])
                                        Pexp_constant PConst_string("   New definition: %s\n",(utils/clflags.ml[563,20167+22]..[563,20167+45]),None)
                                    <arg>
                                    Nolabel
                                      expression (utils/clflags.ml[563,20167+47]..[563,20167+50])
                                        Pexp_ident "loc" (utils/clflags.ml[563,20167+47]..[563,20167+50])
                                  ]
                          [
                            <case>
                              pattern (utils/clflags.ml[564,20219+9]..[564,20219+18])
                                Ppat_construct "Not_found" (utils/clflags.ml[564,20219+9]..[564,20219+18])
                                None
                              expression (utils/clflags.ml[565,20241+6]..[566,20280+57])
                                Pexp_sequence
                                expression (utils/clflags.ml[565,20241+6]..[565,20241+37])
                                  Pexp_apply
                                  expression (utils/clflags.ml[565,20241+15]..[565,20241+17])
                                    Pexp_ident ":=" (utils/clflags.ml[565,20241+15]..[565,20241+17])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/clflags.ml[565,20241+6]..[565,20241+14])
                                        Pexp_ident "arg_spec" (utils/clflags.ml[565,20241+6]..[565,20241+14])
                                    <arg>
                                    Nolabel
                                      expression (utils/clflags.ml[565,20241+18]..[565,20241+37])
                                        Pexp_apply
                                        expression (utils/clflags.ml[565,20241+28]..[565,20241+29])
                                          Pexp_ident "@" (utils/clflags.ml[565,20241+28]..[565,20241+29])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/clflags.ml[565,20241+18]..[565,20241+27])
                                              Pexp_apply
                                              expression (utils/clflags.ml[565,20241+18]..[565,20241+19])
                                                Pexp_ident "!" (utils/clflags.ml[565,20241+18]..[565,20241+19])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/clflags.ml[565,20241+19]..[565,20241+27])
                                                    Pexp_ident "arg_spec" (utils/clflags.ml[565,20241+19]..[565,20241+27])
                                              ]
                                          <arg>
                                          Nolabel
                                            expression (utils/clflags.ml[565,20241+30]..[565,20241+37])
                                              Pexp_construct "::" (utils/clflags.ml[565,20241+32]..[565,20241+37]) ghost
                                              Some
                                                expression (utils/clflags.ml[565,20241+32]..[565,20241+37]) ghost
                                                  Pexp_tuple
                                                  [
                                                    expression (utils/clflags.ml[565,20241+32]..[565,20241+35])
                                                      Pexp_ident "arg" (utils/clflags.ml[565,20241+32]..[565,20241+35])
                                                    expression (utils/clflags.ml[565,20241+36]..[565,20241+37]) ghost
                                                      Pexp_construct "[]" (utils/clflags.ml[565,20241+36]..[565,20241+37]) ghost
                                                      None
                                                  ]
                                        ]
                                  ]
                                expression (utils/clflags.ml[566,20280+6]..[566,20280+57])
                                  Pexp_apply
                                  expression (utils/clflags.ml[566,20280+16]..[566,20280+18])
                                    Pexp_ident ":=" (utils/clflags.ml[566,20280+16]..[566,20280+18])
                                  [
                                    <arg>
                                    Nolabel
                                      expression (utils/clflags.ml[566,20280+6]..[566,20280+15])
                                        Pexp_ident "arg_names" (utils/clflags.ml[566,20280+6]..[566,20280+15])
                                    <arg>
                                    Nolabel
                                      expression (utils/clflags.ml[566,20280+19]..[566,20280+57])
                                        Pexp_apply
                                        expression (utils/clflags.ml[566,20280+19]..[566,20280+33])
                                          Pexp_ident "String.Map.add" (utils/clflags.ml[566,20280+19]..[566,20280+33])
                                        [
                                          <arg>
                                          Nolabel
                                            expression (utils/clflags.ml[566,20280+34]..[566,20280+42])
                                              Pexp_ident "arg_name" (utils/clflags.ml[566,20280+34]..[566,20280+42])
                                          <arg>
                                          Nolabel
                                            expression (utils/clflags.ml[566,20280+43]..[566,20280+46])
                                              Pexp_ident "loc" (utils/clflags.ml[566,20280+43]..[566,20280+46])
                                          <arg>
                                          Nolabel
                                            expression (utils/clflags.ml[566,20280+47]..[566,20280+57])
                                              Pexp_apply
                                              expression (utils/clflags.ml[566,20280+47]..[566,20280+48])
                                                Pexp_ident "!" (utils/clflags.ml[566,20280+47]..[566,20280+48])
                                              [
                                                <arg>
                                                Nolabel
                                                  expression (utils/clflags.ml[566,20280+48]..[566,20280+57])
                                                    Pexp_ident "arg_names" (utils/clflags.ml[566,20280+48]..[566,20280+57])
                                              ]
                                        ]
                                  ]
                          ]
                    ]
                <arg>
                Nolabel
                  expression (utils/clflags.ml[567,20338+4]..[567,20338+8])
                    Pexp_ident "args" (utils/clflags.ml[567,20338+4]..[567,20338+8])
              ]
    ]
  structure_item (utils/clflags.ml[569,20348+0]..[571,20428+58])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[569,20348+4]..[569,20348+20])
          Ppat_var "create_usage_msg" (utils/clflags.ml[569,20348+4]..[569,20348+20])
        expression (utils/clflags.ml[569,20348+21]..[571,20428+58]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/clflags.ml[569,20348+21]..[569,20348+28])
            Ppat_var "program" (utils/clflags.ml[569,20348+21]..[569,20348+28])
          expression (utils/clflags.ml[570,20379+2]..[571,20428+58])
            Pexp_apply
            expression (utils/clflags.ml[570,20379+2]..[570,20379+16])
              Pexp_ident "Printf.sprintf" (utils/clflags.ml[570,20379+2]..[570,20379+16])
            [
              <arg>
              Nolabel
                expression (utils/clflags.ml[570,20379+17]..[571,20428+42])
                  Pexp_constant PConst_string("Usage: %s <options> <files>\nTry '%s --help' for more information.",(utils/clflags.ml[570,20379+18]..[571,20428+41]),None)
              <arg>
              Nolabel
                expression (utils/clflags.ml[571,20428+43]..[571,20428+50])
                  Pexp_ident "program" (utils/clflags.ml[571,20428+43]..[571,20428+50])
              <arg>
              Nolabel
                expression (utils/clflags.ml[571,20428+51]..[571,20428+58])
                  Pexp_ident "program" (utils/clflags.ml[571,20428+51]..[571,20428+58])
            ]
    ]
  structure_item (utils/clflags.ml[574,20489+0]..[575,20519+48])
    Pstr_value Nonrec
    [
      <def>
        pattern (utils/clflags.ml[574,20489+4]..[574,20489+19])
          Ppat_var "print_arguments" (utils/clflags.ml[574,20489+4]..[574,20489+19])
        expression (utils/clflags.ml[574,20489+20]..[575,20519+48]) ghost
          Pexp_fun
          Nolabel
          None
          pattern (utils/clflags.ml[574,20489+20]..[574,20489+27])
            Ppat_var "program" (utils/clflags.ml[574,20489+20]..[574,20489+27])
          expression (utils/clflags.ml[575,20519+2]..[575,20519+48])
            Pexp_apply
            expression (utils/clflags.ml[575,20519+2]..[575,20519+11])
              Pexp_ident "Arg.usage" (utils/clflags.ml[575,20519+2]..[575,20519+11])
            [
              <arg>
              Nolabel
                expression (utils/clflags.ml[575,20519+12]..[575,20519+21])
                  Pexp_apply
                  expression (utils/clflags.ml[575,20519+12]..[575,20519+13])
                    Pexp_ident "!" (utils/clflags.ml[575,20519+12]..[575,20519+13])
                  [
                    <arg>
                    Nolabel
                      expression (utils/clflags.ml[575,20519+13]..[575,20519+21])
                        Pexp_ident "arg_spec" (utils/clflags.ml[575,20519+13]..[575,20519+21])
                  ]
              <arg>
              Nolabel
                expression (utils/clflags.ml[575,20519+22]..[575,20519+48])
                  Pexp_apply
                  expression (utils/clflags.ml[575,20519+23]..[575,20519+39])
                    Pexp_ident "create_usage_msg" (utils/clflags.ml[575,20519+23]..[575,20519+39])
                  [
                    <arg>
                    Nolabel
                      expression (utils/clflags.ml[575,20519+40]..[575,20519+47])
                        Pexp_ident "program" (utils/clflags.ml[575,20519+40]..[575,20519+47])
                  ]
            ]
    ]
]

